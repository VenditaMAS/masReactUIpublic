{"version":3,"sources":["webpack:///./src/app/config.js","webpack:///./src/app/shared/components/form/editors/Generic.jsx","webpack:///./src/app/explorer/store/actions/index.js","webpack:///./src/app/shared/components/overlays/Result/Result.jsx","webpack:///./src/app/explorer/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/actions.js","webpack:///./src/app/users-manager/store/actions/index.js","webpack:///./src/app/shared/store/actions/index.js","webpack:///./src/app/session/store/actions/index.js","webpack:///./src/app/entities/actions.js","webpack:///./src/app/job-process/store/constants.js","webpack:///./src/app/users-manager/components/AvatarCard/AvatarCard.jsx","webpack:///./src/app/shared/store/state/index.js","webpack:///./src/app/shared/components/form/editors/Custom.jsx","webpack:///./src/app/shared/components/form/editors/field-level-validations.js","webpack:///./src/app/shared/components/form/SubmitButton.jsx","webpack:///./src/app/users-manager/components/SearchableList/SearchableList.jsx","webpack:///./src/app/users-manager/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/thunks.js","webpack:///./src/app/explorer/store/selectors/index.js","webpack:///./src/app/job-process/store/selectors.js","webpack:///./src/app/core/components/Ensure/Ensure.jsx","webpack:///./src/app/entities/utils/privileges.js","webpack:///./src/app/executive-dashboard/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/variants.jsx","webpack:///./src/app/shared/components/layout/NavigationTab/NavigationTab.jsx","webpack:///./src/app/license-collection/utils/formikFormatter.js","webpack:///./src/app/shared/api/protocols.js","webpack:///./src/app/explorer/components/NavigationTab/NavigationTab.jsx","webpack:///./src/app/entities/selectors.js","webpack:///./src/app/entities/components/Switch.jsx","webpack:///./src/app/shared/components/simple-search-input/simple-search-input.jsx","webpack:///./src/app/job-process/job-parameters.jsx","webpack:///./src/app/job-process/containers/notifications/notifications.jsx","webpack:///./src/app/shared/api/process.js","webpack:///./src/app/core/store/index.js","webpack:///./src/app/shared/api/accounts.js","webpack:///./src/app/shared/components/range-date-picker/constants.js","webpack:///./src/app/users-manager/store/mappers/index.js","webpack:///./src/app/session/store/state/index.js","webpack:///./src/app/shared/api/schedule.js","webpack:///./src/app/executive-dashboard/store/thunks/index.js","webpack:///./src/app/core/components/Header/Header.jsx","webpack:///./src/app/dashboard/store/state/index.js","webpack:///./src/app/dashboard/store/actions/index.js","webpack:///./src/app/dashboard/components/add-filter/components/day-filter-editor/day-filter-editor.jsx","webpack:///./src/app/dashboard/components/add-filter/components/user-filter-editor/user-filter-editor.jsx","webpack:///./src/app/dashboard/components/add-filter/components/status-filter-editor/status-filter-editor.jsx","webpack:///./src/app/shared/components/form/parameters/normalizeParameter.js","webpack:///./src/app/explorer/components/ActionCard/ActionCard.jsx","webpack:///./src/app/explorer/components/CardsLayout/CardsLayout.jsx","webpack:///./src/app/shared/api/invocation.js","webpack:///./src/app/license-collection/utils/normalizeParameter.jsx","webpack:///./src/app/license-collection/controls/TextField/TextField.jsx","webpack:///./src/app/license-collection/controls/DropdownField/DropdownField.jsx","webpack:///./src/app/license-collection/components/OutputModal/OutputModal.jsx","webpack:///./src/app/shared/lib/want/index.jsx","webpack:///./src/app/shared/components/overlays/Modal/Modal.jsx","webpack:///./src/app/explorer/components/DbObjects/Sidebar.jsx","webpack:///./src/app/explorer/components/DbObjects/Viewer.jsx","webpack:///./src/app/shared/components/form/parameters/index.jsx","webpack:///./src/app/shared/api/form.js","webpack:///./src/app/entities/components/form-actions/FormEditor.jsx","webpack:///./src/app/license-collection/utils/sendToEmail.js","webpack:///./src/app/license-collection/utils/copyToClipboard.js","webpack:///./src/app/shared/components/MUIselect/index.jsx","webpack:///./src/app/shared/components/center/center.component.jsx","webpack:///./src/app/shared/lib/react-dates/isBeforeDay.js","webpack:///./src/app/shared/components/LightTooltip/LightTooltip.jsx","webpack:///./src/app/shared/components/controls/Checkbox/Checkbox.jsx","webpack:///./src/app/shared/components/layout/Overflow/Overflow.jsx","webpack:///./src/app/shared/components/overlays/ModalHeader/ModalHeader.jsx","webpack:///./src/app/shared/lib/polling/index.js","webpack:///./src/app/dashboard/components/add-filter/add-filter.jsx","webpack:///./src/app/dashboard/components/add-filter/components/filter-loader/filter-loader.jsx","webpack:///./src/app/jobs/containers/Schedule/Schedule.jsx","webpack:///./src/app/entities/components/ActionsNamespace.jsx","webpack:///./src/app/entities/components/form-actions/FormModal.jsx","webpack:///./src/app/explorer/containers/Forms/ServerForm.jsx","webpack:///./src/app/explorer/containers/Forms/DatabaseForm.jsx","webpack:///./src/app/shared/api/datatypes.js","webpack:///./src/app/job-process/store/actions.js","webpack:///./src/app/license-collection/utils/getOutputText.js","webpack:///./src/app/executive-dashboard/components/ServerCard/ServerCard.jsx","webpack:///./src/app/executive-dashboard/components/ServersTile/ServersTile.jsx","webpack:///./src/app/executive-dashboard/utils/HorizontalStackedBar/HorizontalStackedBar.jsx","webpack:///./src/app/executive-dashboard/components/DatabasesTile/DatabasesTile.jsx","webpack:///./src/app/explorer/store/mappers/index.js","webpack:///./src/app/executive-dashboard/store/mappers/index.js","webpack:///./src/app/shared/api/namespace.js","webpack:///./src/app/shared/api/alias.js","webpack:///./src/app/users-manager/users/pages/UserView/containers/ChangePassword.jsx","webpack:///./src/app/session/store/reducers/reducer.js","webpack:///./src/app/dashboard/store/tasks.js","webpack:///./src/app/dashboard/store/reducers/reducer.js","webpack:///./src/app/shared/store/reducers/reducer.js","webpack:///./src/app/core/store/reducers/reducer.js","webpack:///./src/app/core/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/wishes.jsx","webpack:///./src/app/entities/components/form-actions/utils.js","webpack:///./src/app/shared/api/privileges.js","webpack:///./src/app/core/containers/sidebar/components/navigation/constants.jsx","webpack:///./src/app/job-process/store/tasks.js","webpack:///./src/app/license-collection/components/ListOutput/ListOutput.jsx","webpack:///./src/app/session/store/reducers/index.js","webpack:///./src/app/shared/lib/bind-reducer/bind-reducer.js","webpack:///./src/app/shared/lib/action-creator/action-states.js","webpack:///./src/app/shared/lib/action-creator/action-creator.class.js","webpack:///./src/app/shared/lib/slugify/slugify.js","webpack:///./src/app/shared/lib/create-url/create-url.js","webpack:///./src/app/shared/lib/number-pretty/number-pretty.js","webpack:///./src/app/shared/lib/smart-number/smart-number.js","webpack:///./src/app/shared/lib/capitalize-first-letter/capitalize-first-letter.js","webpack:///./src/app/shared/lib/patterns/email.js","webpack:///./src/app/shared/lib/patterns/phone-number.js","webpack:///./src/app/shared/lib/patterns/url.js","webpack:///./src/app/shared/lib/random-generator/string.js","webpack:///./src/app/shared/lib/random-generator/unique-id.js","webpack:///./src/app/shared/lib/function-placeholder/index.js","webpack:///./src/app/shared/lib/delay/index.js","webpack:///./src/app/shared/lib/react-dates/isInclusivelyAfterDay.js","webpack:///./src/app/shared/lib/redux-utils/actions.utils.js","webpack:///./src/app/shared/lib/redux-utils/reducers.utils.js","webpack:///./src/app/shared/lib/workload/parseData.js","webpack:///./src/app/session/store/effects/index.js","webpack:///./src/app/shared/lib/rest/try-async.js","webpack:///./src/app/shared/lib/rest/rest-client.js","webpack:///./src/app/session/pages/login/login.page.jsx","webpack:///./src/app/session/components/container/container.component.jsx","webpack:///./src/app/session/pages/login/components/form/form.component.jsx","webpack:///./src/app/shared/components/rest-errors/rest-errors.component.jsx","webpack:///./src/app/shared/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/workload-graph/workload-graph.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-tooltip/custom-tooltip.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-axis-tick/custom-axis-tick.component.jsx","webpack:///./src/app/shared/components/circle-img/circle-img.component.jsx","webpack:///./src/app/shared/components/number-label/number-label.component.jsx","webpack:///./src/app/shared/components/string-label/string-label.component.jsx","webpack:///./src/app/shared/components/search-input/search-input.component.jsx","webpack:///./src/app/shared/components/dropdown/dropdown.component.jsx","webpack:///./src/app/shared/components/small-input/small-input.component.jsx","webpack:///./src/app/shared/components/single-date-picker/single-date-picker.component.jsx","webpack:///./src/app/shared/components/range-date-picker/range-date-picker.component.jsx","webpack:///./src/app/shared/components/JobResults/JobResults.jsx","webpack:///./src/app/shared/components/switch/Switch.jsx","webpack:///./src/app/shared/components/Table/Table.jsx","webpack:///./src/app/session/pages/logout/logout.page.jsx","webpack:///./src/app/dashboard/root.module.jsx","webpack:///./src/app/shared/components/loaders/Loader/Loader.jsx","webpack:///./src/app/shared/components/loaders/ParameterLoader/ParameterLoader.jsx","webpack:///./src/app/dashboard/containers/status/status.container.jsx","webpack:///./src/app/dashboard/containers/status/components/daemon/daemon.component.jsx","webpack:///./src/app/dashboard/containers/status/components/job-status/job-status.component.jsx","webpack:///./src/app/dashboard/containers/search-area/search-area.container.jsx","webpack:///./src/app/dashboard/components/search-results/search-results.component.jsx","webpack:///./src/app/dashboard/store/reducers/index.js","webpack:///./src/app/shared/store/reducers/index.js","webpack:///./src/app/shared/store/effects/index.js","webpack:///./src/app/root.module.jsx","webpack:///./src/app/core/root.layout.jsx","webpack:///./src/app/jobs/root.module.jsx","webpack:///./src/app/shared/components/controls/Input/Input.jsx","webpack:///./src/app/shared/components/controls/Button/Button.jsx","webpack:///./src/app/shared/components/layout/Paper/Paper.jsx","webpack:///./src/app/shared/components/layout/Main/Main.jsx","webpack:///./src/app/shared/components/layout/Section/Section.jsx","webpack:///./src/app/shared/components/layout/ScrollableContainer/ScrollableContainer.jsx","webpack:///./src/app/shared/components/layout/Column/Column.jsx","webpack:///./src/app/shared/components/layout/Row/Row.jsx","webpack:///./src/app/jobs/components/job-item/job-item.component.jsx","webpack:///./src/app/jobs/components/job-status/job-status.component.jsx","webpack:///./src/app/jobs/components/job-list/job-list.component.jsx","webpack:///./src/app/jobs/containers/filters/filters.container.jsx","webpack:///./src/app/shared/store/selectors/connections.js","webpack:///./src/app/jobs/containers/jobs-invocations/jobs-invocations.container.jsx","webpack:///./src/app/shared/components/overlays/ModalFooter/ModalFooter.jsx","webpack:///./src/app/entities/root.module.jsx","webpack:///./src/app/users-manager/root.jsx","webpack:///./src/app/users-manager/users/root.jsx","webpack:///./src/app/users-manager/groups/root.jsx","webpack:///./src/app/explorer/root.jsx","webpack:///./src/app/explorer/treeview/root.jsx","webpack:///./src/app/shared/components/form/Fields.jsx","webpack:///./src/app/explorer/components/DbObjects/DbObjects.jsx","webpack:///./src/app/core/containers/sidebar/sidebar.container.jsx","webpack:///./src/app/core/containers/sidebar/components/favorites/favorites.component.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/navigation.component.jsx","webpack:///./src/app/core/containers/sidebar/components/notification/notification.component.jsx","webpack:///./src/app/core/containers/sidebar/components/user-menu/user-menu.component.jsx","webpack:///./src/app/core/containers/sidebar/components/compile/compile.component.jsx","webpack:///./src/app/job-process/root.module.jsx","webpack:///./src/app/session/store/actions/session.action.js","webpack:///./src/app/session/store/effects/check-authorization/check-authorization.effect.js","webpack:///./src/app/constants.js","webpack:///./src/app/session/store/effects/login/login.effect.js","webpack:///./src/app/session/store/effects/logout/logout.effect.js","webpack:///./src/assets/images/login_graphic.svg","webpack:///./src/assets/images/vendita_logo_blue.svg","webpack:///./src/assets/images/mas_logo_blue.svg","webpack:///./src/app/shared/components/range-date-picker/range-date-range-picker.container.jsx","webpack:///./src/app/shared/store/actions/jobs.action.js","webpack:///./src/app/shared/store/actions/process.action.js","webpack:///./src/app/shared/store/actions/global-filters.action.js","webpack:///./src/app/dashboard/store/actions/filter-status.action.js","webpack:///./src/app/shared/api/daemon.js","webpack:///./src/app/dashboard/store/selectors/index.js","webpack:///./src/app/dashboard/components/add-filter/components/filter-chip/filter-chip.jsx","webpack:///./src/app/dashboard/containers/ServerUsage/ServerUsage.jsx","webpack:///./src/app/dashboard/containers/ServerUsage/components/UsageListing/UsageListing.jsx","webpack:///./src/app/dashboard/containers/ServerUsage/components/UsageEntry/UsageEntry.jsx","webpack:///./src/app/shared/store/effects/jobs/jobs.effect.js","webpack:///./src/app/shared/store/effects/connections/connections.effect.js","webpack:///./src/app/shared/store/effects/search-jobs/search-jobs.effect.js","webpack:///./src/app/shared/store/effects/search-processes/search-processes.effect.js","webpack:///./src/app/shared/store/effects/global-filters/global-filters.effect.js","webpack:///./src/app/users-manager/store/reducers/index.js","webpack:///./src/app/users-manager/groups/store/reducer.js","webpack:///./src/app/explorer/store/reducers/index.js","webpack:///./src/app/executive-dashboard/store/reducers/index.js","webpack:///./src/app/entities/reducer.js","webpack:///./src/app/dashboard/store/reducers/daemon.js","webpack:///./src/app/job-process/store/reducer.js","webpack:///./src/app/core/store/middlewares.js","webpack:///./src/app/core/store/reducers/index.js","webpack:///./src/app/core/store/actions/notification.action.js","webpack:///./src/app/jobs/containers/Schedule/components/ScheduleModal/ScheduleModal.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ViewTabs/ViewTabs.jsx","webpack:///./src/app/jobs/containers/Schedule/components/Documentation/Documentation.jsx","webpack:///./src/app/jobs/containers/Schedule/containers/ScheduleForm/ScheduleForm.jsx","webpack:///./src/app/shared/components/form/editors/formatters.js","webpack:///./src/app/shared/components/form/parameters/extractDefault.js","webpack:///./src/app/job-process/components/notification-groups/notification-groups.jsx","webpack:///./src/app/job-process/components/notification-users/notification-users.jsx","webpack:///./src/app/job-process/components/notification-events/notification-events.jsx","webpack:///./src/app/job-process/components/notification-list/notification-list.jsx","webpack:///./src/app/entities/components/Entity.jsx","webpack:///./src/app/entities/containers/SelectedEntity.jsx","webpack:///./src/app/entities/components/ActionsConstant.jsx","webpack:///./src/app/shared/api/constant.js","webpack:///./src/app/entities/components/ActionsProcess.jsx","webpack:///./src/app/entities/components/process-actions/EditProcessModal.jsx","webpack:///./src/app/entities/components/process-actions/ProcessEditor.jsx","webpack:///./src/app/entities/components/ActionsForm.jsx","webpack:///./src/app/shared/components/form/SubmitButtonNoDirty.jsx","webpack:///./src/app/entities/components/form-actions/FormParameters.jsx","webpack:///./src/app/entities/components/ActionsAccount.jsx","webpack:///./src/app/entities/components/ConnectedEditConnection.jsx","webpack:///./src/app/entities/components/ActionsRoot.jsx","webpack:///./src/app/entities/components/ActionsPrototype.jsx","webpack:///./src/app/entities/components/ActionsSchedule.jsx","webpack:///./src/app/entities/components/ActionsCommon.jsx","webpack:///./src/app/entities/components/common-actions/DeleteEntity.jsx","webpack:///./src/app/shared/api/delete.js","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesModal.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesEditor.jsx","webpack:///./src/app/users-manager/components/HeaderPageSwitch/HeaderPageSwitch.jsx","webpack:///./src/app/users-manager/users/containers/UserLoader.jsx","webpack:///./src/app/users-manager/users/pages/UserView/UserView.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/Privileges.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/UserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserDetails.jsx","webpack:///./src/app/users-manager/users/pages/UserView/components/UserDatesBox.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserInfo.jsx","webpack:///./src/app/users-manager/components/UserCard/UserCard.jsx","webpack:///./src/app/users-manager/users/pages/NoUsersSelected.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/CreateNewUser.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/NewUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/components/GroupCard/GroupCard.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/GroupView.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/Privileges.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/GroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditGroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditSubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/CreateNewGroup.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/pages/NoGroupSelected.jsx","webpack:///./src/app/explorer/treeview/layers/Dbms/Dbms.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/ServerList.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/containers/Server/Server.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/DatabaseList.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/containers/Database/Database.jsx","webpack:///./src/app/explorer/containers/Breadcrumbs/Breadcrumbs.jsx","webpack:///./src/app/explorer/components/ContentSwitch/ContentSwitch.jsx","webpack:///./src/app/explorer/containers/AllDbms/AllDbms.jsx","webpack:///./src/app/explorer/containers/AllServers/AllServers.jsx","webpack:///./src/app/explorer/containers/Settings/ServerSettings.jsx","webpack:///./src/app/explorer/containers/AllDatabases/AllDatabases.jsx","webpack:///./src/app/explorer/containers/Settings/DatabaseSettings.jsx","webpack:///./src/app/explorer/containers/Workload/Workload.jsx","webpack:///./src/app/explorer/containers/License/License.jsx","webpack:///./src/app/explorer/containers/License/LicenseList/LicenseList.jsx","webpack:///./src/app/explorer/containers/License/Report/Report.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesStatus/FeaturesStatus.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesUsage/FeaturesUsage.jsx","webpack:///./src/app/explorer/components/LicenseReporting/UnusedFeatures/UnusedFeatures.jsx","webpack:///./src/app/explorer/containers/Storage/Storage.jsx","webpack:///./src/app/explorer/containers/Objects/Objects.jsx","webpack:///./src/app/explorer/containers/Sessions/Sessions.jsx","webpack:///./src/app/explorer/containers/AddServerCard/AddServerCard.jsx","webpack:///./src/app/explorer/containers/AddDatabaseCard/AddDatabaseCard.jsx","webpack:///./src/app/shared/api/compile.js","webpack:///./src/assets/images/mas_logo_white.svg","webpack:///./src/assets/images/vendita_logo_white.svg","webpack:///./src/app/job-process/job-view.jsx","webpack:///./src/app/job-process/job-form.jsx","webpack:///./src/app/session/store/selectors/index.js","webpack:///./src/app/job-process/containers/output/output.jsx","webpack:///./src/app/job-process/components/ListOutput/ListOutput.jsx","webpack:///./src/app/job-process/components/JobStatus/JobStatus.jsx","webpack:///./src/app/jobs-search-results/JobsSearchResults.jsx","webpack:///./src/app/executive-dashboard/ExecutiveDashboard.jsx","webpack:///./src/app/executive-dashboard/components/PhysicalDashboard/PhysicalDashboard.jsx","webpack:///./src/app/executive-dashboard/containers/SearchSection/SearchSection.jsx","webpack:///./src/assets/images/server_core.svg","webpack:///./src/app/executive-dashboard/components/SwitchContent/SwitchContent.jsx","webpack:///./src/app/executive-dashboard/components/EmptyContent/EmptyContent.jsx","webpack:///./src/app/executive-dashboard/containers/Dashboard/Dashboard.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/OptionsTile.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsList/OptionsList.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionItem/OptionItem.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsChart/OptionsChart.jsx","webpack:///./src/app/executive-dashboard/containers/ServerView/ServerView.jsx","webpack:///./src/app/executive-dashboard/components/UsedOptions/UsedOptions.jsx","webpack:///./src/app/executive-dashboard/components/VirtualDashboard/VirtualDashboard.jsx","webpack:///./src/app/executive-dashboard/components/NoData/NoData.jsx","webpack:///./src/app/executive-dashboard/containers/ToggleSelection/ToggleSelection.jsx","webpack:///./src/app/license-collection/LicenseCollection.jsx","webpack:///./src/app/license-collection/components/Navigation/Navigation.jsx","webpack:///./src/app/license-collection/Pages/Hardware/Hardware.jsx","webpack:///./src/app/license-collection/utils/extractDefault.js","webpack:///./src/app/license-collection/Pages/Software/Software.jsx","webpack:///./src/app/license-collection/Pages/Packaging/Packaging.jsx","webpack:///./src/app/license-collection/utils/downloadFile.js","webpack:///./src/i18n/index.js","webpack:///./src/i18n/en/index.js","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/scoped-css-mui-compatibility.js"],"names":["CONSTANTS","defaultConstants","Text","forwardRef","ref","options","validate","defaultValue","value","required","props","validation","useMemo","check","useField","touched","name","field","meta","helpers","useEffect","setValue","setTouched","undefined","setError","length","selected","find","o","disableClearable","id","getOptionLabel","option","label","getOptionDisabled","disabled","onChange","e","renderInput","params","type","error","helperText","Email","validations","merge","email","PhoneNumber","phone","Integer","Password","BOOL_OPTIONS","BooleanSelect","Date","moment","fullWidth","utils","MomentUtils","disablePast","disableToolbar","inputVariant","format","KeyboardButtonProps","date","Time","Select","isNamespace","getOptionSelected","desription","LOAD_ALL_ACCOUNTS","CHANGE_STATE","LOAD_ALL_LICENSES","LICENSE_FULL_REPORT","LOAD_ALL_PROTOTYPES","LOAD_ALL_DATATYPES","LOAD_ALL_FORMS","PROVIDE_SERVERS_USAGE","LOAD_STORAGE_POINTS","SET_STORAGE_NS","LOAD_STORAGE_DETAILS","LOAD_OBJECT_DETAILS","SET_SELECTED_OBJECT","LOAD_SESSIONS","PROVIDE_DB_LAST_BACKUP","PROVIDE_DB_STATUS","LOAD_PROTOCOLS","icons_map","success","mdiCheckDecagram","fail","mdiAlertDecagram","Result","children","className","classnames","fontSize","d","propTypes","oneOf","node","ResultText","compact","bool","ResultMessages","messages","JSON","stringify","Messages","loadAllAccountsThunk","dispatch","getState","creators","loading","RestClient","get","BASE","ENDPOINTS","ACCOUNTS","page_size","response","data","protocols","explorer","provideServersUsageThunk","provideDBLastBackupThunks","provideDBStatusThunks","loadProtocolsThunk","PROTOCOLS","changeStateThunk","newState","action","loadAllLicensesThunk","payload","JOBS","getLicenseReportThunk","license","uuid","report","date_invoke","getAllPrototypesThunk","PROTOTYPES","getAllDatatypesThunk","DATATYPES","getAllFormsThunk","FORMS","loadSessionsThunk","filters","SESSIONS","fullPath","sort","loadStorageDetailsThunk","STORAGE_DF","setStorageItemThunk","ns","loadStoragePointsThunk","STORAGE_TS","dbconn","loadObjectsThunk","objectApis","path","Promise","allSettled","map","api","dbms","allData","index","res","setSelectedObjectThunk","loadUsagePerDb","server","database","databases","usage","parseFloat","HOST_CPU","protocol","address","servers","structured","usageResult","filter","result","status","push","highLoadCount","loadDBLastBackup","shell","s","DB_LAST_BACKUP","backup","isValid","Oracle","r","dbLastBackup","loadDBStatus","DB_STATUS","toString","toLowerCase","dbStatus","LOAD_ALL_GROUPS","LOAD_GROUP","DELETE_GROUP","GRANT_PRIVILEGE","REVOKE_PRIVILEGE","ADD_USERS_TO_GROUP","REMOVE_USERS_FROM_GROUP","REMOVE_GROUPS_FROM_GROUP","PATCH_SELECTED_GROUP","CREATE_GROUP","LOAD_ALL_USERS","SELECT_USER","LOAD_USER","ADD_USER_TO_GROUPS","REMOVE_USER_FROM_GROUPS","DELETE_USER","CREATE_USER","actions","jobsActions","processActions","globalFiltersActions","sessionActions","fetchEntities","promises","ENTITY_TYPES_FETCH","query","url","concat","encodeURIComponent","promise","entityType","fetchEntity","eType","definition","desc","console","warn","selectEntity","entity","setFilterType","setFilterSearch","openModal","InvocationStatus","NEW","ALL","NOT_FETCHED","ABORTED","SCHEDULED","SUCCEEDED","FAILED","EXECUTING","DELAYED","KILLED","AllowOutputFor","AllowGeneralEditingFor","CannotShowStatusFor","FAILURES","SUCESSES","WARNINGS","AvatarCard","avatar","onSelect","focusable","onFocus","useCallback","event","stopPropagation","tabIndex","data-qa","alt","src","initial","fallback","onClick","containEvent","preventDefault","shape","string","object","func","localState","state","shared","jobsSelector","createSelector","connectionsSelector","jobsSearchedSelector","processesSearchedSelector","globalFiltersSelector","RSAKey","multiline","FQName","QualifiedName","masName","AccountSelect","useState","showUrls","setShowUrls","boxName","showToggle","target","checked","inlineLoader","accounts","list","account","includes","formatAccount","Boolean","size","PLATFORMS","tester","PlatformSelect","ProcessSelect","values","useFormikContext","platformValue","platform","p","processes","process","test","OPTIONS","appearance","item","NamespaceSelect","namespace","pipe","namespaces","FormPrototypeSelect","prototype","description","ModeSelect","mode","modes","enumerations","variadicListReducer","produce","draft","deflt","shift","useVariadicList","recieved","useReducer","replvars","Variadic","displayDeftlDesc","selectedProcess","Header","Title","Content","dataType","Fragment","key","VariadicInstance","defltDesc","types","style","display","alignItems","justifyContent","color","name_base","parsedDeflt","replace","marginBottom","firstCharLetter","mergeValidations","callbacks","forEach","provided","checkRequired","Yup","nullable","validateSync","message","checkEmail","checkPhoneNumber","matches","excludeEmptyString","checkUnsignedInt","checkName","substr","checkFirstLetter","noop","unsigned_int","unsigned_float","signed_float","SubmitButton","submitForm","isSubmitting","isValidating","dirty","log","SearchableList","items","variant","scrolled","setScrolled","onWheel","currentTarget","scrollTop","scroller","setQuery","filtered","scrollBy","top","deltaY","left","deltaX","array","defaultProps","loadAllUsersThunk","USERS","loadUserThunk","grantPrivilegeThunk","user","patch","revokePrivilegeThunk","addUserToGroupsThunk","groups","removeUserFromGroupsThunk","removeUserThunk","delete","allUsers","createUserThunk","body","username","password","post","refreshed","loadAllGroupsThunk","GROUPS","loadGroupThunk","createGroupThunk","groupname","group","removeUsersFromGroupThunk","removeSubGroupsThunk","addUsersToGroupThunk","users","all","removeGroupThunk","fns","arg","reduce","prev","fn","filterBy","selector","equalityFn","el","retrieveFilteredAccounts","nodes","stateValue","currentValue","Object","keys","currentServer","retrieveServerEntry","structure","entry","retrieveDatabaseEntry","db","special","getStatePath","getStructured","getSessions","sessions","getSessionsFlags","flags","getStoragePointsLoadingFlag","storage","loadingPoints","getStorageDetailsLoadingFlag","loadingDetails","getStoragePoints","points","getStorageDetails","details","getSelectedStorage","getSelectedObject","objects","selectedObject","getSelectedOwner","selectedOwner","getAllObjects","getObjectsLoadingFlag","getFullPath","pathArr","split","getFormattedStorage","isLoading","_","isArray","point","Used_MB","Total_MB","Tablespace","freePerc","freeGB","Free_MB","totalGB","usedGB","getStorageDetailsData","selectedNS","tablespace","files","TABLESPACE_NAME","getStructuredObjects","tree","acc","OWNER","owner","getInvalidObjects","invalidObjects","included","findIndex","STATUS","getSelectedObjectData","isObject","getSortedSessions","sortFunction","order","a","b","sortKey","getTime","slice","getBackup","backups","getDBStatus","statuses","getQuery","invocation_viewer","getInvocation","invocation","getInvocationStatus","Ensure","connect","entitySelectors","request","Ensurer","fresh","Loading","ParameterLoader","Loader","hasWritePrivileges","privileges","effective","PROVIDE_EXECUTIVE_DASHBOARD","SELECT_ALL","DESELECT_ALL","TOGGLE_SERVER","extractParameter","parameter","others","editor","additional","field_name","is_required","TextParameter","passable","PasswordParameter","PhoneNumberParameter","BooleanParameter","IntegerParameter","EmailParameter","ProcessParameter","AccountParameter","VariadicParameter","FQNameParameter","RSAKeyParameter","NavigationTab","this","active","tabs","indexOf","indicatorColor","textColor","tab","React","PureComponent","getInitialValues","parameters","initialValues","getValidationSchema","validationSchema","formatParameters","trim","fetchProtocols","ENTITY_TYPES","title","dataEnclosure","ROOT_ENTITY","getBreadcrumbs","entities","breadcrumbs","collectData","namespacesWithMeta","collection","aliases","alias","alias_type","aliasedEntity","Array","dataItem","ownNamespace","startsWith","selectors","def","fetch_status","namespaceWithMetaSelector","dataNamespaces","getFilteredEntities","accumulator","getEntitiesAsHashMap","filteredEntities","search","domainArray","paths","join","findEntity","notPersisted","getEntities","entitiesMap","roots","entityName","names","isSelected","columns","breadcrumb","level","rows","bucket","entityLevel","getSelectedEntity","Context","createContext","Switch","Provider","Case","useContext","SimpleSearchInput","placeholder","ProcessParameters","editable","xs","forms","datatypes","prototypes","processName","normalize","position","chunk","spacing","normalized","Notifications","getEventTypeIcons","jobStart","jobCompletion","abnormalEvent","icons","notice","fullLog","toggleApplyButton","setState","isEditing","checkIfAllUsersSelectedCurrentGroup","selectedGroup","getSelectedGroup","usersData","every","onSelectGroup","groupsData","onSelectUser","setFlagGroupsIfContainSelectedUser","onSelectUserAction","shouldClear","displayIcons","member_of","onSelectEventType","recievedData","events","then","areUsersSelected","isClearActionAvailable","isGroupSelected","eventTypeIcons","onApply","mappedState","getProcess","patchProcess","saga","createSagaMiddleware","configStore","reducer","combineReducers","core","session","sessionReducer","dashboard","dashboardReducer","sharedReducer","usersManager","usersManagerReducer","groupsReducer","createReducer","explorerReducer","invocations","executiveDashboard","executiveDashboardReducer","daemon","effects","sessionEffects","sharedEffects","store","createStore","composeWithDevTools","applyMiddleware","thunk","effect","run","postAccount","patchAccount","getConnection","patchConnection","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","NAV_POSITION_TOP","ANCHOR_LEFT","WEEKDAYS","MODIFIER_KEY_NAMES","Set","mapUsersData","mapLoadedUser","authorizationSelector","currentUserSelector","loginSelector","postSchedule","getSchedule","patchSchedule","loadExecutiveDashboardThunk","EXECUTIVE_DASHBOARD","deselectAllThunk","selectAllThunk","rawEntries","toggleServerThunk","allServers","selectedServers","svIndex","sv","nrCores","PropTypes","filterStatusSelector","filterStatusActions","checkDeamonStatus","checkDaemon","DayFilterEditor","setFilterValue","onDateChange","TypeDescriptor","isRequired","icon","mdiCalendarBlank","UserFilterEditor","IconComp","autoFocus","onKeyDown","StatusFilterEditor","readOnly","toggle","isDropdownOpen","supportedDataTypes","space_begone","space_summon","param","dataTypes","defaults","defineEditor","maybeDisabled","Number","MAX_SAFE_INTEGER","data_type","substring","is_supported","extractDefault","parseProtocols","metaEditor","proto","form","sortBy","ActionCard","settings","addOnly","readOnlyOptions","lastBackup","addable","mdiContentSave","role","fillable","percentage","width","CardsLayout","postInvocation","requestInvocation","fetchInvocation","fetchInvocationOutput","getLabel","getIcon","labels","target_working_dir","target_shell","repo_shell","repo_working_dir","mdiFolderHome","mdiLanConnect","mdiSourceRepository","mdiHexagonMultipleOutline","TextField","InputProps","startAdornment","endAdornment","LightTooltip","placement","mdiHelpCircleOutline","withStyles","tooltip","backgroundColor","letterSpacing","lineHeight","fontFamily","Tooltip","DropdownField","rawAccounts","datatype","opt","meta2","OutputModal","content","interval","open","output","modalDetails","setMessage","setInterval","clearInterval","Footer","scrollable","errors","Left","sendToEmail","copyToClipboard","minWidth","minHeight","height","want","Unresolved","keygen","settler","wantComponent","Picked","ModalContext","Modal","providedId","aria","onClose","close","oneOfType","ModalHeader","VerticalUsageBar","fill","viewBox","x","y","rx","ry","SidebarStorageItem","setItem","StorageSidebar","selectedItem","dbName","mdiFileTableBox","element","iconMapper","triggers","mdiAlertOutline","tables","mdiTable","indexes","mdiTableColumnWidth","procedures","mdiAlphaPBox","packages","mdiInbox","packageBodies","mdiInboxFull","objectsSidebarMapper","invalidChildren","mdiFileTree","i","isObjectSelected","isInvalid","invalid","ObjectsSidebar","mdiDatabase","KPIDisplay","suffix","colorFormatting","digits","valueString","toLocaleString","minimumFractionDigits","maximumFractionDigits","NoDataComponent","mdiHelpRhombusOutline","StorageDetailsList","PCT_USED","FILE_NAME","SIZE_MB","MAXSIZE_MB","filePath","fileName","extension","StorageViewer","ObjectsViewer","mdiArrangeBringToFront","OBJECT_NAME","CREATED","OBJECT_ID","LAST_DDL_TIME","mdiFlashCircle","RepeatableParameter","Parameter","is_repeatable","postForm","createForm","updateForm","pointers","instances","instance","splice","fields","PackedContext","FormEditor","isNew","setResult","initialPacked","groupForm","cloneDeep","split_name","last","packed","contextValue","onSubmit","handleSubmit","Right","refresh","form_name","protoName","extracted","extractFieldInfo","exclusions","filteredExtractions","val","packedCopy","set","unpacked","ungroupForm","v","rename","version","request_args","unshift","key_struct","entries","matched","exec","lower","text","getOutputText","utc","subject","window","location","href","navigator","permissions","clipboard","writeText","legacyMethod","bind","textArea","document","createElement","appendChild","classList","add","focus","select","execCommand","removeChild","MUIselect","handleSelect","selectedOption","labelWidth","setLabelWidth","inputLabel","useRef","selectedValue","current","offsetWidth","htmlFor","labelId","findItem","CenterComponent","isBeforeDay","isMoment","aYear","year","aMonth","month","bYear","bMonth","isSameYear","Checkbox","rest","control","checkedIcon","Overflow","component","nodeRef","scrollableX","setScrollableX","scrollableY","setScrollableY","scrolledX","setScrolledX","scrolledY","setScrolledY","Tag","onScroll","scrollLeft","box","clientWidth","clientHeight","scrollHeight","scrollWidth","closeable","providedAria","context","task","duration","running","runTask","setTimeout","start","stop","checkFilters","AddFilter","filterRef","createRef","handleClickOutside","saveDraftFilter","updateFilters","loadFilter","editing","mapDropdownItem","Item","hasSearchTerm","hasFilters","onClickAway","renderDropdown","save","isOpen","startIcon","mdiFilter","endIcon","FilterLoader","FilterComponent","day","Schedule","setOpen","modalActions","btnLabel","ActionsNamespace","ConnectedNewNamespace","ConnectedEditNamespace","EditNamespace","splittedNamespace","setDescription","isDisabled","classes","root","getNamespace","catch","patchNamespace","NewNamespace","handleSubmitNew","postNamespace","ConnectedFormModal","FormModal","maxHeight","mdiClipboardCheck","ServerForm","handleSubmission","submission","setSubmission","passwordEditable","setPasswordEditable","showRSA","setShowRSA","handleAccountCreation","getCreateAccountHandler","allowedProtocols","is_abstract","special_required","extraValidations","host","port","server_user","server_password","user_key","confirm_server_password","rsa_key","confirm_password","loadNewAccountHandler","validateOnBlur","validateOnChange","validateOnMount","maxWidth","PasswordOrRSA","allowed","onInput","request_body","parseInt","DatabaseForm","mapAccountValues","selectedProtocol","allowRSA","allow_rsa_key","withDatabase","withMode","padded","handler","fetchDataTypes","data_types","processQuery","updateInvocation","row","ServerCard","toggleSelectedCallback","mdiCubeOutline","mdiCubeScan","hosts","mdiMemory","cpu","Cores","cores","mdiDns","collDate","colors","1","2","4","6","8","16","24","ServersTile","isSingle","total","count","padding","image","number","showTextIn","fontColor","fontWeight","HorizontalBar","listBars","prevProps","prevState","isEqual","getListBarWithOtherParameters","widthTotal","bar","calcWidthTotal","barWidth","assign","evt","Math","floor","random","g","showTextInsteadValue","showTextWithValue","float","showValueIn","randomColor","dy","textAlign","getListTextBar","showTextUp","showValueUp","renderLabel","renderBars","showTextDown","showValueDown","Component","DatabasesTile","totalDBs","dbs","eelic_count","selic_count","mapAccountsTree","splitIntoRootsByProtocol","splitIntoRootsByAddress","splitIntoRootsByDatabase","serversMap","existingEntry","databaseMap","mapAccountsNewStructure","raw","protocolsArr","dbServer","dbmsServerEntry","otherIndex","mapProtocols","mapAllServers","serversInfo","srvname","sids","installedOptions","aa_count","ac_count","as_count","dv_count","mt_count","adg_count","rac_count","olap_count","part_count","in_mem_db_count","Ncore","totalInstalledOptions","getAlias","patchAlias","postAlias","ChangePassword","done","confirm","setSubmitting","ChangePasswordContainer","selectedUser","initialState","login","authorization","actionStates","LOADING","currentUser","reducerActions","checkAuthorization","getLoadingAction","setIn","getSuccessAction","fromJS","source","SUCCESS","getFailAction","FAIL","Error","daemonPoller","withPolling","filterStatus","setFilterStatus","getEventAction","sessionGlobalFilters","startDate","subtract","startOf","unix","endDate","globalFilters","parse","localStorage","getItem","jobs","page_count","total_count","fetching","connections","searchResults","setGlobalFilters","nextState","toJS","logout","removeItem","getJobs","getConnections","searchJobs","searchProcesses","notifications","addNotifications","removeNotification","notificationIndex","removeIn","notificationActions","WantParameter","boolean","fqname","variadic_parameter","hasOwnProperty","maxPosition","max","virtual","currentGroup","upper","nextGroup","iteration_limit","instanceCount","f","grouped","info","subvalues","dropRight","getPrivileges","isAlias","cls","setPrivileges","granted","role_type","privilege","enitity_name","navigationItems","to","qaClass","mdiClipboardPlayMultipleOutline","mdiShieldCheckOutline","resolve","invocationPoller","ListOutput","bindReducer","ActionCreatorHandler","slugify","createUrl","paramsUrl","numberPretty","parts","formatNumber","pow","decimals","toFixed","smartNumber","capitalizeFirstLetter","charAt","toUpperCase","emailPattern","phoneNumberPattern","urlPattern","randomStringGenerator","possible","generateUniqueId","btoa","valueOf","emptyFunc","delay","timer","isInclusivelyAfterDay","STATES","stateKey","unchanged","reducers","reducerInitialState","getWorkloadData","dateRange","jobsWithFormattedInvokedDate","orderBy","job","local","groupJobsByDate","groupBy","intervalArray","totalDays","getDaysArray","currentDate","dateArray","CheckAuthorizationEffect","LoginEffect","LogoutEffect","tryAsync","onError","RestClientClass","authentications","basicAuth","accessToken","baseUrl","HOST","VERSION","client","axios","create","timeout","TIMEOUT","baseURL","headers","Accept","head","put","Cookie","remove","getRequestConfig","LoginPage","history","submit","resetErrors","mapStateToProps","mapDispatchToProps","dispatchLoading","dispatchFail","ContainerComponent","MasLogo","VenditaLogo","LoginGraphic","FormComponent","setShowPassword","showPassword","handleMouseDownPassword","submitHandler","restErrors","getRestErrors","noValidate","autoComplete","getError","valueChangeHandler","inputProps","InputLabelProps","aria-label","onMouseDown","edge","RestErrorsComponent","JobItemComponent","jobStatus","formatName","nameContainerWidth","getElementById","starPath","formattedName","canvas","getContext","metrics","measureText","extended","statusChild","WorkloadGraphComponent","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickSize","axisLine","tick","cursor","stroke","strokeWidth","fillOpacity","CustomTooltipComponent","nextProps","CustomAxisTickComponent","transform","textAnchor","CircleImgComponent","NumberLabelComponent","StringLabelComponent","SearchInputComponent","DropdownComponent","handleToggle","setCloseDropdown","anchorRef","contains","onClickCallback","itemIndex","parentWidth","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","SmallInputComponent","SingleDatePickerComponent","focused","onFocusChange","numberOfMonths","customInputIcon","isOutsideRange","hideKeyboardShortcutsPanel","displayFormat","navPrev","mdiChevronLeft","navNext","mdiChevronRight","RangeDatePicker","renderDayContents","anchorDirection","block","customArrowIcon","mdiArrowLeftRight","customCloseIcon","enableOutsideDays","endDateId","endDatePlaceholderText","horizontalMargin","initialEndDate","initialStartDate","initialVisibleMonth","isDayBlocked","isDayHighlighted","isRTL","keepOpenOnDateSelect","minimumNights","monthFormat","navPosition","onNextMonthClick","onPrevMonthClick","orientation","phrases","calendarLabel","chooseAvailableEndDate","chooseAvailableStartDate","clearDates","closeDatePicker","dateIsSelected","dateIsSelectedAsEndDate","dateIsSelectedAsStartDate","dateIsUnavailable","enterKey","escape","focusStartDate","homeEnd","jumpToNextMonth","jumpToPrevMonth","keyboardBackwardNavigationInstructions","keyboardForwardNavigationInstructions","keyboardShortcuts","leftArrowRightArrow","moveFocusByOneDay","moveFocusByOneMonth","moveFocusByOneWeek","moveFocustoStartAndEndOfWeek","openThisPanel","pageUpPageDown","questionMark","returnFocusToInput","roleDescription","selectFocusedDate","showKeyboardShortcutsPanel","upArrowDownArrow","regular","renderCalendarDay","renderMonthText","reopenPickerOnClearDates","screenReaderInputMessage","showClearDates","showDefaultInputIcon","small","startDateId","startDatePlaceholderText","stateDateWrapper","withFullScreenPortal","withPortal","onDatesChange","focusedInput","JobResults","renderJobsResults","mdiProgressClock","mdiCheckCircleOutline","mdiCalendarArrowRight","mdiStopCircleOutline","mdiTimelineClock","mdiAlertRhombusOutline","mdiCancel","jobName","any","Table","sortBehavior","changeSort","stickyHeader","HeaderCell","column","align","sortDirection","direction","Row","TableRow","Cell","TableCell","LogoutPage","RootModule","filteredJobs","totalFilteredJobs","range","onChangeDatesHandler","days","diff","period","averageJobs","round","storeFilterStatus","mdiChartTimelineVariant","inline","StatusContainer","filterJobs","executing","succeeded","scheduled","aborted","failed","Daemon","useSelector","isDaemonRunning","JobStatus","filterByStatus","storeStatus","setStatus","renderContent","dispatchEvent","Search","apiSearchWithDebounce","debounce","searchedTerm","showSearchResults","getSearchResults","QSP","name_filter","selectedFilter","page","handleOnChange","searchTerm","clearSearch","updateSelectedFilter","getSearchedJobs","getSearchedProcesses","category","totalResults","displayedResults","nameFilter","customFilter","SearchResultsComponent","renderProcessesResults","mdiPlaySpeed","createURLLink","JobsEffect","JobsConnectionsEffect","SearchJobsEffect","SearchProcessesEffect","GlobalFiltersEffect","setAuthorization","authorizationStatus","exact","Login","Logout","Layout","hot","RootLayout","Jobs","ConnectedJobsSearchResults","JobProcess","Entities","UsersAndGroups","Explorer","ConnectedExecutiveDashboard","LicenseCollection","renderJobItem","updateQSP","URLSearchParams","has","append","handleOnTabChange","selectedTab","handleOnFilterChange","performFilter","returnListBasedOnTab","shell_host_address_filter","protocol_filter","database_name_filter","onSearchInputChange","onBlur","selections","Input","mdiInformationOutline","LinkBehavior","Button","link","Paper","flex","PaperHeader","PaperContent","PaperFooter","LeftSideSlot","RightSideSlot","PaperTitle","Main","Section","full","SectionTitle","SectionHeader","SectionInfo","SectionContent","Info","ScrollableContainer","Column","JobItem","mdiClockOutline","statusMap","JobList","NoJobs","Filters","mdiServer","mdiCircleSlice5","getJobsFiltersOptions","connection","getIn","JobsInvocations","useDispatch","ModalFooter","ENTITY_ICONS","constant","schedule","exception","searchWithDebounce","selectedEntity","searchInput","setSearchInput","renderColumn","colNum","entityIcons","ev","container","UsersAndGroupsPage","UserManagementHeaderLinks","RightSideControls","UserManagementSwitch","useRouteMatch","useLocation","routes","pathname","Link","UsersPage","loadAllUsers","match","userLink","UserSwitch","GroupsPage","allGroups","loadAllGroups","groupLink","GroupsPagesSwitch","ExplorerPage","loadProtocols","loadAllAccounts","treeviewData","storeState","activePage","Treeview","requiredValidation","FORMAT_OPTIONS","FormatSelect","propsValidate","schema","EmailField","PhoneNumberField","notRequired","Field_Types","FieldSwitch","FieldComponent","getComponent","DbObjects","loadingFlags","SidebarContainer","Favorites","mdiStarOutline","Navigation","navId","setToggleDropdown","anchorElement","setActiveTab","newActiveTab","activeTab","setCurrentNavItem","subItem","withRouter","Notification","UserMenu","menuAnchorRef","isVisible","autoFocusItem","Compile","Compiler","compilation","setCompilation","postCompile","useQuery","LinkRouter","RouterLink","redirected","OtherMainLinks","PrepareFlow","designation","actionsTypes","CHECK_AUTHORIZATION","LOGIN","LOGOUT","ActionCreator","setBasicAuth","CURRENT_USER","dispatchSuccess","takeEvery","INTL","DAEMON_STATUS","JOB_COUNT","PROCESSES","FORM","DOWNLOAD_PACKAGING","Buffer","from","statusText","loginPath","removeBasicAuth","module","exports","autoFocusEndDate","momentPropTypes","momentObj","DateRangePickerPhrases","omit","DateRangePickerShape","localeData","longDateFormat","DateRangePickerWrapper","GET_JOBS","GET_CONNECTIONS","SEARCH_JOBS","SEARCH_PROCESSES","UPDATE_GLOBAL_FILTERS","SET_FILTER_STATUS","FilterChip","editMode","setEditMode","newFilter","onDelete","ServerUsage","getAllAccounts","ConnectedServerUsage","serversUsage","UsageListing","mdiPercent","UsageEntry","debug","producers","removing","updating_groups","groups_update","creating","ops","group_users","group_subgroups","reports","licenses","base","callFailed","execdashboard","FETCH_ENTITIES_REQUEST","FETCH_ENTITIES_SUCCESS","FETCH_ENTITIES_FAILURE","FETCH_ENTITIES_ALL_REQUEST","FETCH_ENTITIES_ALL_SUCCESS","FETCH_ENTITIES_ALL_FAILURE","SELECT_ENTITY","pop","UPDATE_FILTERS","DAEMON_STATUS_REQUEST","DAEMON_STATUS_SUCCESS","DAEMON_STATUS_FAILURE","processed","fetchedInvocation","PROCESS_QUERY","FETCH_INVOCATION_SUCCESS","FETCH_INVOCATION_FAILURE","REPLACE_INVOCATION","next","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","ScheduleModal","setTab","processDetails","setProcessDetails","changeTab","ViewTabs","Documentation","ConnectedScheduleForm","ScheduleForm","derivedMonitor","enabled","monitor","setMonitor","t_min","t_hr","t_day","t_mon","t_wkd","sch_name","isNaN","n_state","isEmpty","rejector","sch_description","params_with_maybe_replvars","extractReplVars","pickBy","cleanUpReplVars","prefix","json","Groups","dense","disablePadding","button","primary","Users","currentActionLabel","shouldDisplayAction","emptyListMessage","renderUsersList","Events","UserChip","background","borderRadius","marginLeft","Chip","NotificationList","filteredUsers","buttonLabel","buttonIcon","Entity","user_owner","aliasStr","getBoundingClientRect","parent","parentNode","scrollTo","behavior","SelectedEntity","ActionsConstant","ConnectedEditConstant","EditConstant","disableActions","mdiImageFilterCenterFocus","patchConstant","ActionsProcess","ConnectedNewSchedule","NewSchedule","EditProcessModal","ProcessEditor","saveProcessEdits","steps","step","Step","step_index","expressions","parseEvaluatableExpressions","exp","StepExpression","expression","exp_index","evaluate","process_name","evaluations","toSend","findFormPrototype","findFormEntry","ActionsForm","canWrite","ConnectedCopyForm","CopyForm","formName","SubmitButtonNoDirty","FormParameters","FieldsAndGroupsEditor","DataContext","FieldGroup","pointer","GroupInstance","canAdd","Field","newInstance","Value","packet","canRemove","idx","provided_field_name","ActionsAccount","getEntityType","CONNECTION_TYPES","SERVER","DATABASE","ConnectedEditConnection","EditConnection","setProtocols","ActionsRoot","ActionsPrototype","ActionsSchedule","ConnectedEditSchedule","EditSchedule","scheduleDetails","setScheduleDetails","schedules","splittedName","isEntityDeletable","ActionsCommon","displayDelete","ConnectedNewAlias","ConnectedEditAlias","NewAlias","original","EditAlias","handleEditSubmit","originalName","ConnectedDeleteEntity","DeleteEntity","terminator","deleteEntity","mdiTrashCan","BodyText","fontStyle","marginTop","PrivilegesModal","PrivilegesEditor","hasAlias","usePrivileges","editAliasParent","updating","setEditAliasParent","updatePrivilege","switchTab","PrivilegesList","is_group","updater","privilegeTypes","renderType","user_or_group","mdiAccount","setLoading","setUpdating","setData","resp","HeaderPageSwitch","arrayOf","UserLoader","loadUser","userName","useParams","ConnectedUserLoader","UserView","removeUser","useHistory","alert","ConnectedUserView","Privileges","grant","revoke","Privilege","capitalize","PrivilegesContainer","mapPrivileges","class_privileges","actual","str","UserGroups","removeFromGroups","passed","group_name","mdiDeleteCircleOutline","UserGroupsContainer","EditUserGroups","addToGroups","closeModal","aria-labelledby","aria-describedby","GroupsList","onAdd","EditUserGroupsContainer","showAll","err","EditUserDetails","UserDetailsForm","EditUserDetailsContainer","submitResult","created","date_created","updated","date_updated","UserDatesBox","DateCreated","DateUpdated","mdiAccountPlus","parseDate","mdiAccountEdit","EditUserInfo","UserInfoForm","EditUserInfoContainer","formEndpoint","formproto","formdata","mapFormValues","submited","sendable_data","paddingTop","dict","UserCard","endsWith","NoUserSelectedPage","min","confirmpassword","CreateNewUser","submitUserValues","operation","setOperation","exists","marginRight","CreateNewUserPage","NewUserGroups","existing","GroupsSelection","mdiAccountGroup","GroupCard","GroupView","removeGroup","ConnectedGroupView","GroupLoader","loadGroup","groupName","ConnectedGroupLoader","GroupUsers","removeUsersFromGroup","GroupUsersContainer","EditGroupUsers","addUsersToGroup","mdiAccountMultiplePlus","UsersSelection","EditGroupUsersContainer","usersFetched","usersSubmitted","u","SubGroups","removeSubGroups","subgroup","SubGroupsContainer","EditSubGroups","updateGroup","GroupSelection","EditSubGroupsContainer","groupsFetched","subgroupsSubmitted","resolved","rejected","CreateNewGroup","submitGroupValues","CreateNewGroupPage","NoGroupSelectedPage","DBMS","toggleExpanded","isExpanded","setPath","changeState","autoExpanded","ConnectedDBMS","ServerList","Server","ConnectedServer","DatabaseList","Database","ConnectedDatabase","BreadcrumbsTitle","renderBreadcrumbs","links","separator","previous","route","navigateTo","selectedLink","setActiveLevel","ConnectedBreadcrumbsTitle","ContentSwitch","renderPage","AllDbms","ConnectedAllDbms","allDbms","AllServers","ConnectedAllServers","ServerSettings","mdiSettings","EditServerContainer","EditServer","reloadAccounts","AllDatabases","retrieveDbBackup","retrieveDbStatus","mdiCheckboxMultipleBlankOutline","mdiShape","mdiHexagonSlice2","mdiLicense","ConnectedAllDatabases","DatabaseSettings","EditDatabaseContainer","EditDatabase","pr","mr","Workload","newTab","getJobsData","pageLevel","levelFilters","ConnectedWorkload","License","getLicenseData","ancestors","loadAllLicenses","setSelectedLicenses","selectedLicenses","newSelectedLicenses","compareReports","singleLicense","compareWithLatest","latestReport","selectedReport","comparable","showLicenseList","licenseReport","licenseList","setSelectedLicensesCallback","compareWithLatestCallback","licenseReportCallback","ConnectedLicense","LicenseList","hoveredLicenseUuid","setHoveredLicenseUuid","updateHoveredLicenseUuid","licenseUuid","onMouseEnter","onMouseLeave","l","mdiFileCompare","Report","getLicenseReport","reportOne","reportTwo","ownProps","ConnectedReport","FeaturesStatus","setSelectedIndex","newIndex","selectedIndex","renderSingleReport","FEATURES","TabPanel","valIndex","mdiCheckboxMarkedCircle","mdiCloseCircle","renderComparableReports","comparableFeatures","feature","other","hidden","FeaturesUsage","USED","USAGES","getFeatureValue","rep1","rep2","valueNode","needsExpansion","listRef","offsetHeight","flexDirection","paddingLeft","UnusedFeatures","UNUSED","Storage","storagePoints","storageDetails","setStorageItem","ConnectedStorage","Objects","getObjects","objectsData","objectDetails","setObjectsItem","ConnectedObjects","CellWithTooltip","rowRenderer","hover","sid","USERNAME","MACHINE","SID","LOGON_TIME","PROGRAM","TYPE","TableRenderer","noDataMessage","tableProps","Sessions","setSortBehavior","getSessionsData","ConnectedSessions","AddServerCard","AddNewServerContainer","AddNewServer","AddDatabaseCard","AddNewDatabaseContainer","AddNewDatabase","JobView","JobForm","loggedInAs","setEditable","deriveFormState","disabledFields","handleJobCreation","FormVerbs","getCurrentUserName","time_invoke","sendable","job_user","dateMoment","timeMoment","hour","minute","timestamp","when","noOutput","JobOutput","setOutput","outputs","outputType","monitoring","wantStatusColor","wantStatusIcon","warning","JobsSearchResults","ExecutiveDashboard","getExecutiveDashboard","dashboardType","PhysicalDashboard","nrSelected","SearchSection","toggleServer","isServerSelected","toggleSelected","ConnectedSearchSection","SwitchContent","EmptyContent","Dashboard","ConnectedDashboard","OptionsTile","secondaryColor","mdiStarCircleOutline","OptionsList","OptionItem","OptionsChart","strokeDasharray","allowDecimals","domain","ServerView","ConnectedServerView","UsedOptions","optionType","mdiCheck","mdiPlayCircle","VirtualDashboard","found","NoData","ToggleSelection","deselectAll","selectAll","ConnectedToggleSelection","chip","Hardware","poller","runPoller","pollInvocation","outputReponse","clearTimeout","renderModal","outputOpen","isProcessLoading","loadingPrototypes","loadingDatatypes","loadingAccounts","getAllPrototypes","getAllDatatypes","normalizeParameter","chooseField","ConnectedHardware","Software","loadingForms","getAllForms","mdiApplication","ConnectedSoftware","Packaging","lms_repo","formValues","isDownloadDisabled","sendEmail","isEmailDisabled","downloadFile","mdiArchiveArrowDownOutline","ConnectedPackaging","formatQuery","blobData","blob","Blob","blobURL","URL","webkitURL","createObjectURL","tempLink","setAttribute","click","revokeObjectURL","i18nMessages","en","general","header","provider","locale","basename","App","render","webpackContext","req","webpackContextResolve","__webpack_require__","code","partial","args"],"mappings":"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AQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAAS2uE,EAAeC,GACvB,IAAIh3E,EAAKi3E,EAAsBD,GAC/B,OAAOE,EAAoBl3E,GAE5B,SAASi3E,EAAsBD,GAC9B,IAAIE,EAAoBp3E,EAAEsI,EAAK4uE,GAAM,CACpC,IAAIz2E,EAAI,IAAImtC,MAAM,uBAAyBspC,EAAM,KAEjD,MADAz2E,EAAE42E,KAAO,mBACH52E,EAEP,OAAO6H,EAAI4uE,GAEZD,EAAep8D,KAAO,WACrB,OAAOD,OAAOC,KAAKvS,IAEpB2uE,EAAejlC,QAAUmlC,EACzBnmB,EAAOC,QAAUgmB,EACjBA,EAAe/2E,GAAK,M,i4FCtQZW,EACAy2E,E,iFADAz2E,EAAQkM,QAAQlM,MAAMu7B,KAAKrvB,SAC3BuqE,EAAU,oBAEhBvqE,QAAQlM,MAAQ,SAAC8U,GACf,GAAuB,iBAAZA,IAAqD,IAA7BA,EAAQmP,OAAOwyD,GAAlD,CADoC,2BAATC,EAAS,iCAATA,EAAS,kBAKpC12E,EAAK,WAAL,GAAM8U,GAAN,OAAkB4hE,O","file":"js/app.4d5685f840b633a9723d.js","sourcesContent":["import defaultConstants from './constants';\n\nexport const CONSTANTS = defaultConstants;\n","import React, { forwardRef, useMemo, useEffect } from 'react';\n\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\n\nimport { useField } from 'formik';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport check from './field-level-validations';\n\nexport const Text = forwardRef(function Text(\n  { options, validate, defaultValue = '', value, required, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue);\n    helpers.setTouched(false);\n  }, [value]);\n\n  useEffect(() => {\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  if (field.value === undefined) {\n    return <ParameterLoader>Mounting Field</ParameterLoader>;\n  }\n\n  if (options && options.length) {\n    const selected = options.find(o => o.value === field.value) ?? null;\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        value={selected}\n        getOptionLabel={option => option.label || field.value}\n        getOptionDisabled={option => option.disabled}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        disabled={props.disabled}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n\nexport function Email(props) {\n  const validations = useMemo(() => check.merge(check.email, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"email\" />;\n}\n\nexport function PhoneNumber(props) {\n  const validations = useMemo(() => check.merge(check.phone, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} />;\n}\n\nexport function Integer({ validate, ...props }) {\n  const validations = useMemo(() => check.merge(props.required ?? check.required), [\n    props.required,\n    validate\n  ]); // validate is given by the parameter normalizer.\n  // it should be a list of check keys. TODO: map to validation functions to merge\n\n  return <Text {...props} validate={validations} type=\"number\" />;\n}\n\nexport function Password(props) {\n  return <Text {...props} type=\"password\" />;\n}\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: true },\n  { label: 'False', value: false }\n];\n\nexport const BooleanSelect = forwardRef(function Boolean({ options, ...props }, ref) {\n  return <Text type=\"text\" value defaultValue {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nexport const Date = forwardRef(function Date(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  const value = field.value ? moment(field.value, 'MM/DD/YYYY') : moment();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          disablePast\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date.format('MM/DD/YYYY'))}\n        />\n        <FormHelperText>{meta.touched ? meta.error : null}</FormHelperText>\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Time = forwardRef(function Time(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  const value = field.value ? moment(field.value, 'hh-mm') : moment();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardTimePicker\n          disablePast\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"hh:mm\"\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date.format('hh-mm'))}\n          label={props.label}\n        />\n        <FormHelperText>{meta.touched ? meta.error : null}</FormHelperText>\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Select = forwardRef(function Select(\n  { options, validate, defaultValue, value, required, isNamespace, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue || '');\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  /**\n   * This should be moved to it's own thing.\n   * For now, it satisfies... :(((\n   */\n  if (options && options.length) {\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        getOptionSelected={option => option.value === field.value}\n        getOptionLabel={option => option.label || value || ''}\n        value={value}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              desription={undefined}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n","export const LOAD_ALL_ACCOUNTS = 'LOAD_ALL_ACCOUNTS';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const LOAD_ALL_LICENSES = 'LOAD_ALL_LICENSES';\nexport const LICENSE_FULL_REPORT = 'LICENSE_FULL_REPORT';\nexport const LOAD_ALL_PROTOTYPES = 'LOAD_ALL_PROTOTYPES';\nexport const LOAD_ALL_DATATYPES = 'LOAD_ALL_DATATYPES';\nexport const LOAD_ALL_FORMS = 'LOAD_ALL_FORMS';\nexport const PROVIDE_SERVERS_USAGE = 'PROVIDE_SERVERS_USAGE';\nexport const LOAD_STORAGE_POINTS = 'LOAD_STORAGE_POINTS';\nexport const SET_STORAGE_NS = 'SET_STORAGE_NS';\nexport const LOAD_STORAGE_DETAILS = 'LOAD_STORAGE_DETAILS';\nexport const LOAD_OBJECT_DETAILS = 'LOAD_OBJECT_DETAILS';\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT';\nexport const LOAD_SESSIONS = 'LOAD_SESSIONS';\nexport const PROVIDE_DB_LAST_BACKUP = 'PROVIDE_DB_LAST_BACKUP';\nexport const PROVIDE_DB_STATUS = 'PROVIDE_DB_STATUS';\nexport const LOAD_PROTOCOLS = 'LOAD_PROTOCOLS';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { mdiCheckDecagram, mdiAlertDecagram } from '@mdi/js';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { node, oneOf, bool } from 'prop-types';\n\nimport './Result.local.scss';\n\nconst icons_map = {\n  success: mdiCheckDecagram,\n  fail: mdiAlertDecagram\n};\n\nexport const Result = ({ children, type }) => {\n  return (\n    <div\n      className={classnames('result-display', {\n        [type]: type\n      })}\n    >\n      <div className=\"result-icon\">\n        <SvgIcon fontSize=\"inherit\">\n          <path d={icons_map[type] || mdiAlertDecagram} />\n        </SvgIcon>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  type: oneOf(['success', 'fail']),\n  children: node\n};\n\nexport const ResultText = ({ children, compact }) => (\n  <h2 className={classnames('result-text', { compact })}>{children}</h2>\n);\n\nResultText.propTypes = {\n  compact: bool,\n  children: node\n};\n\nexport const ResultMessages = ({ messages }) => (\n  <h2 className=\"result-messages\">{JSON.stringify(messages)}</h2>\n);\n\nResultText.propTypes = {\n  children: node\n};\n\nResult.Text = ResultText;\nResult.Messages = ResultMessages;\n","import moment from 'moment';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_ACCOUNTS,\n  CHANGE_STATE,\n  LOAD_ALL_LICENSES,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_PROTOTYPES,\n  LOAD_ALL_DATATYPES,\n  LOAD_ALL_FORMS,\n  LOAD_SESSIONS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_STORAGE_POINTS,\n  SET_STORAGE_NS,\n  LOAD_STORAGE_DETAILS,\n  SET_SELECTED_OBJECT,\n  PROVIDE_SERVERS_USAGE,\n  LOAD_PROTOCOLS\n} from '../actions';\n\nexport function loadAllAccountsThunk() {\n  return async (dispatch, getState) => {\n    dispatch(creators.loading(LOAD_ALL_ACCOUNTS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n        page_size: 2147483645\n      });\n\n      response.data.protocols = getState().explorer.protocols;\n\n      dispatch(creators.success(LOAD_ALL_ACCOUNTS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_ACCOUNTS, error));\n      return;\n    }\n\n    dispatch(provideServersUsageThunk());\n    dispatch(provideDBLastBackupThunks());\n    dispatch(provideDBStatusThunks());\n  };\n}\n\nexport function loadProtocolsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_PROTOCOLS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n      dispatch(creators.success(LOAD_PROTOCOLS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_PROTOCOLS, error));\n    }\n  };\n}\n\nexport function changeStateThunk(newState) {\n  return dispatch => {\n    dispatch(creators.action(CHANGE_STATE, newState));\n\n    return 'done';\n  };\n}\n\nexport function loadAllLicensesThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_LICENSES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n      dispatch(creators.success(LOAD_ALL_LICENSES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_LICENSES, error));\n    }\n  };\n}\n\nexport function getLicenseReportThunk(license) {\n  return async dispatch => {\n    dispatch(creators.loading(LICENSE_FULL_REPORT));\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${license.uuid}/display_license_full_report`\n      );\n      const report = response.data.data;\n      report.date_invoke = license.date_invoke;\n      dispatch(creators.success(LICENSE_FULL_REPORT, { [license.uuid]: report }));\n    } catch (error) {\n      dispatch(creators.fail(LICENSE_FULL_REPORT, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function getAllPrototypesThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_PROTOTYPES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOTYPES, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(LOAD_ALL_PROTOTYPES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_PROTOTYPES, error));\n    }\n    return 'done';\n  };\n}\n\nexport function getAllDatatypesThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_DATATYPES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DATATYPES, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(LOAD_ALL_DATATYPES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_DATATYPES, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function getAllFormsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_FORMS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.FORMS, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(LOAD_ALL_FORMS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_FORMS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.SESSIONS(filters.fullPath), {\n        page_size: filters.page_size\n      });\n      dispatch(creators.success(LOAD_SESSIONS, { data: response.data, sort: filters.sort }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadStorageDetailsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_DETAILS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_DF(filters.fullPath));\n      const data = response.data && response.data.length ? response.data : [];\n      dispatch(creators.success(LOAD_STORAGE_DETAILS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_DETAILS, error));\n    }\n  };\n}\n\nexport function setStorageItemThunk(ns) {\n  return creators.success(SET_STORAGE_NS, ns);\n}\n\nexport function loadStoragePointsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_POINTS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_TS, {\n        dbconn: filters.fullPath\n      });\n      const data = response.data || {};\n      dispatch(creators.success(LOAD_STORAGE_POINTS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_POINTS, error));\n    }\n  };\n}\n\nexport function loadObjectsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n    const objectApis = [\n      { name: 'triggers', path: '/object_trigger' },\n      { name: 'tables', path: '/object_table' },\n      { name: 'indexes', path: '/object_index' },\n      { name: 'procedures', path: '/object_procedure' },\n      { name: 'packages', path: '/object_package' },\n      { name: 'packageBodies', path: '/object_package_body' }\n    ];\n    try {\n      let allData = await Promise.allSettled(\n        objectApis.map(api =>\n          RestClient.get(`/system/explorer${api.path}`, {\n            dbms: filters.fullPath,\n            page_size: 2147483645\n          })\n        )\n      );\n      allData = objectApis.map((api, index) => {\n        return {\n          res: allData[index]?.value?.data,\n          name: api.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, allData));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function setSelectedObjectThunk(selected) {\n  return creators.success(SET_SELECTED_OBJECT, selected);\n}\n\nexport function provideServersUsageThunk() {\n  return async function serversUsage(dispatch, getState) {\n    let servers = [];\n\n    if (getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE')) {\n      servers = getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE').servers;\n    }\n\n    async function loadUsagePerDb(server) {\n      const database = server.databases[0];\n      const response = await RestClient.get(`/system/explorer/${database.name}/cpu_load_server`);\n\n      const usage = parseFloat(response.data.HOST_CPU);\n\n      return {\n        dbms: database.protocol,\n        server: database.address,\n        usage\n      };\n    }\n\n    const usageResult = { servers: [] };\n\n    const allResults = await Promise.allSettled(servers.map(loadUsagePerDb));\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        usageResult.servers.push({\n          dbms: result.value.dbms,\n          address: result.value.server,\n          usage: result.value.usage || 0\n        });\n\n        return null;\n      });\n\n    usageResult.highLoadCount = usageResult.servers.filter(server => server.usage >= 75).length;\n\n    dispatch(creators.success(PROVIDE_SERVERS_USAGE, usageResult));\n\n    return usageResult;\n  };\n}\n\nexport function provideDBLastBackupThunks() {\n  return async function getDBLastBackup(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n\n    let servers = [];\n    let databases = [];\n\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    async function loadDBLastBackup(database) {\n      const dbms = database.name;\n      const shell = servers.find(\n        s => s.databases && s.databases.find(d => d.name === database.name)\n      )?.name;\n\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_LAST_BACKUP, {\n        dbms,\n        shell\n      });\n\n      return {\n        name: database.name,\n        backup: moment(response.data.backup).isValid()\n          ? moment(response.data.backup).format('DD.MM.YYYY')\n          : null\n      };\n    }\n\n    const dbLastBackup = [];\n\n    const allResults = await Promise.allSettled(databases.map(loadDBLastBackup));\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbLastBackup.push({\n          name: result.value.name,\n          backup: result.value.backup\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_LAST_BACKUP, dbLastBackup));\n\n    return dbLastBackup;\n  };\n}\n\nexport function provideDBStatusThunks() {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n\n    let servers = [];\n    let databases = [];\n\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    async function loadDBStatus(database) {\n      const dbms = database.name;\n      const shell = servers.find(\n        s => s.databases && s.databases.find(d => d.name === database.name)\n      )?.name;\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n        dbms,\n        shell\n      });\n\n      return {\n        name: database.name,\n        status: response.data.status?.toString().toLowerCase() || 'unknown'\n      };\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(loadDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n","export const LOAD_ALL_GROUPS = 'LOAD_ALL_GROUPS';\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GRANT_PRIVILEGE = 'GRANT_GROUP_PRIVILEGE';\nexport const REVOKE_PRIVILEGE = 'REVOKE_GROUP_PRIVILEGE';\nexport const ADD_USERS_TO_GROUP = 'ADD_USERS_TO_GROUP';\nexport const REMOVE_USERS_FROM_GROUP = 'REMOVE_USERS_FROM_GROUP';\nexport const ADD_GROUPS_TO_GROUP = 'ADD_GROUPS_TO_GROUP';\nexport const REMOVE_GROUPS_FROM_GROUP = 'REMOVE_GROUPS_FROM_GROUP';\nexport const PATCH_SELECTED_GROUP = 'PATCH_SELECTED_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n","export const LOAD_ALL_USERS = 'LOAD_ALL_USERS';\nexport const SELECT_USER = 'SELECT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const REVOKE_PRIVILEGE = 'REVOKE_PRIVILEGE';\nexport const GRANT_PRIVILEGE = 'GRANT_PRIVILEGE';\n\nexport const ADD_USER_TO_GROUPS = 'ADD_USER_TO_GROUPS';\nexport const REMOVE_USER_FROM_GROUPS = 'REMOVE_USER_FROM_GROUPS';\nexport const DELETE_USER = 'DELETE_USER';\nexport const CREATE_USER = 'CREATE_USER';\n","import { jobsActions } from './jobs.action';\nimport { processActions } from './process.action';\nimport { globalFiltersActions } from './global-filters.action';\n\nexport const actions = {\n  ...jobsActions,\n  ...processActions,\n  ...globalFiltersActions,\n};\n","import { sessionActions } from './session.action';\n\nexport const actions = {\n  ...sessionActions,\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { ENTITY_TYPES_FETCH } from './selectors';\n\nexport function fetchEntities() {\n  return function thunk(dispatch) {\n    const promises = ENTITY_TYPES_FETCH.map(({ type, query }) => {\n      let url = `${type}`;\n      if (query) {\n        url = url.concat(`/${encodeURIComponent(query)}`);\n      }\n      const promise = RestClient.get(url, { page_size: 2147483645 });\n      dispatch({\n        type: 'FETCH_ENTITIES',\n        promise,\n        entityType: type\n      });\n      return promise;\n    });\n\n    dispatch({\n      type: 'FETCH_ENTITIES_ALL',\n      promise: promises\n    });\n  };\n}\n\nexport function fetchEntity(eType) {\n  const definition = ENTITY_TYPES_FETCH.find(desc => eType === desc.type);\n\n  if (!definition) {\n    return function notFound() {\n      console.warn('[fetchEntity] invalid entity type:', eType); // eslint-disable-line\n    };\n  }\n\n  return function thunk(dispatch) {\n    const promise = RestClient.get(\n      `${definition.type}${definition.query ? `/${definition.query}` : ''}?page_size=2147483645`\n    );\n\n    dispatch({\n      type: 'FETCH_ENTITIES',\n      promise,\n      entityType: definition.type\n    });\n\n    return promise;\n  };\n}\n\nexport function selectEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'SELECT_ENTITY'\n  };\n}\n\nexport function setFilterType(value) {\n  return {\n    name: 'type',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function setFilterSearch(value) {\n  return {\n    name: 'search',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function openModal(name) {\n  return {\n    type: 'OPEN_ENTITIES_MODAL',\n    name\n  };\n}\n","export const InvocationStatus = {\n  NEW: '__NEW__',\n  ALL: '__ALL__',\n  NOT_FETCHED: 'NOT_FETCHED',\n  ABORTED: 'ABORTED',\n  SCHEDULED: 'SCHEDULED',\n  SUCCEEDED: 'SUCCEEDED',\n  FAILED: 'FAILED',\n  EXECUTING: 'EXECUTING',\n  DELAYED: 'DELAYED',\n  KILLED: 'KILLED'\n};\n\nexport const AllowOutputFor = [\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED,\n  InvocationStatus.FAILED,\n  InvocationStatus.SUCCEEDED,\n  InvocationStatus.EXECUTING\n];\n\nexport const AllowGeneralEditingFor = [InvocationStatus.NEW];\n\nexport const CannotShowStatusFor = [\n  InvocationStatus.NEW,\n  InvocationStatus.ALL,\n  InvocationStatus.NOT_FETCHED\n];\n\nexport const FAILURES = [\n  InvocationStatus.FAILED,\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED\n];\n\nexport const SUCESSES = [InvocationStatus.SUCCEEDED];\n\nexport const WARNINGS = [InvocationStatus.DELAYED, InvocationStatus.SCHEDULED];\n","import React, { useCallback } from 'react';\nimport { bool, func, node, shape, object, string } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './AvatarCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nexport const AvatarCard = ({ label, avatar = {}, selected, data, onSelect, action, ...props }) => {\n  const focusable = {\n    ...(onSelect && {\n      onFocus: useCallback(\n        event => {\n          event.stopPropagation();\n          onSelect(data);\n        },\n        [onSelect, data]\n      ),\n      tabIndex: props.disabled ? -1 : 0\n    })\n  };\n\n  return (\n    <div\n      {...focusable}\n      className={classnames('avatar-card', { selected })}\n      data-qa={`avatar-card-of-${label}`}\n      {...props}\n    >\n      <Avatar className=\"card-avatar\" alt={label} src={avatar.src}>\n        {avatar.initial || avatar.fallback}\n      </Avatar>\n      <span className=\"card-label\">{label}</span>\n      {action && (\n        <span onClick={containEvent} className=\"action-slot\">\n          {action}\n        </span>\n      )}\n    </div>\n  );\n};\n\nfunction containEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nAvatarCard.propTypes = {\n  label: node,\n  selected: bool,\n  disabled: bool,\n  avatar: shape({\n    src: string,\n    fallback: node\n  }),\n  data: object,\n  onSelect: func,\n  action: node\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.shared;\n\nexport const jobsSelector = createSelector(localState, state => state.get('jobs'));\n\nexport const connectionsSelector = createSelector(localState, state => state.get('connections'));\n\nexport const jobsSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('jobs')\n); // eslint-disable-line\n\nexport const processesSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('processes')\n); // eslint-disable-line\n\nexport const globalFiltersSelector = createSelector(localState, state =>\n  state.get('globalFilters')\n); // eslint-disable-line\n","import React, { useState, useCallback, useMemo, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport FormGroup from '@material-ui/core/FormGroup';\n\nimport { Checkbox } from '../../controls/Checkbox/Checkbox';\nimport { Text, Select } from './Generic';\n\nimport { Ensure } from 'core/components/Ensure/Ensure';\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport { useFormikContext } from 'formik';\n\nimport { formatAccount } from './formatters';\n\nimport check from './field-level-validations';\n\nexport const RSAKey = props => {\n  return <Text multiline {...props} />;\n};\n\nexport const FQName = props => {\n  return <Text multiline {...props} />;\n};\n\nexport function QualifiedName(props) {\n  const validations = useMemo(() => check.merge(check.masName, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"text\" />;\n}\n\n/**\n * TODO:\n * These should be retireved through a connection\n * Platforms are protocols associated for accounts\n * For now they can be hardcoded\n */\nexport const AccountSelect = ({ protocols = [], ...props }) => {\n  const [showUrls, setShowUrls] = useState(false);\n  const boxName = `${props.name}-show-urls`;\n\n  const showToggle = useCallback(e => {\n    setShowUrls(e.target.checked);\n  }, []);\n\n  return (\n    <Ensure type=\"account\" inlineLoader>\n      {({ data: accounts }) => {\n        let list = accounts;\n\n        if (protocols && protocols.length) {\n          list = accounts.filter(account => protocols.includes(account.protocol));\n        }\n\n        const options = list.map(account => ({\n          label: showUrls ? formatAccount(account) : account.name,\n          value: account.name\n        }));\n\n        /**\n          TODO: filter by protocol\n         */\n        if (protocols.length) {\n          accounts.filter(Boolean);\n        }\n\n        return (\n          <FormGroup>\n            <Text {...props} options={options} />\n            <Checkbox\n              size=\"small\"\n              id={boxName}\n              name={boxName}\n              onChange={showToggle}\n              disabled={props.disabled}\n              label=\"Show Account URLs\"\n            />\n          </FormGroup>\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const PLATFORMS = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'MariaDB', value: 'MariaDB', tester: /^vendita\\.mariadb\\./ },\n  { label: 'MySQL', value: 'MySQL', tester: /^vendita\\.mysql\\./ },\n  { label: 'Oracle', value: 'Oracle', tester: /^vendita\\.oracle\\./ },\n  { label: 'PostgreSQL', value: 'PostgreSQL', tester: /^vendita\\.pgsql\\./ },\n  {\n    label: 'Microsoft SQL Server',\n    value: 'Microsoft SQL Server',\n    tester: /^vendita\\.microsoft\\.sqlserver\\./\n  },\n  { label: 'Oracle RDS', value: 'Oracle RDS', tester: /^vendita\\.aws\\.rds\\.oracle\\./ }\n];\n\nexport const PlatformSelect = props => {\n  return <Text type=\"text\" value=\"All\" name=\"platform\" {...props} options={PLATFORMS} />;\n};\n\nexport const ProcessSelect = props => {\n  const { values } = useFormikContext();\n  const platformValue = values?.platform ?? '';\n\n  let platform = PLATFORMS[0];\n\n  if (platformValue) {\n    platform = PLATFORMS.find(p => p.value === platformValue);\n  }\n\n  return (\n    <Ensure type=\"namespace\" inlineLoader>\n      <Ensure type=\"process\" inlineLoader>\n        {({ data }) => {\n          let processes = data;\n\n          if (platform && platform.value !== 'all') {\n            processes = data.filter(process => platform.tester.test(process.name));\n          }\n\n          /** TODO, CHECK */\n          processes = processes.filter(process => {\n            if (processes.meta && process.meta.appearance) {\n              return process.meta.appearance !== 'Hidden';\n            }\n\n            return true;\n          });\n\n          const OPTIONS = processes.map(item => ({\n            value: item.name,\n            label: item.name,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n          return <Text type=\"text\" defaultValue=\"\" name=\"process\" {...props} options={OPTIONS} />;\n        }}\n      </Ensure>\n    </Ensure>\n  );\n};\n\nexport const NamespaceSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.namespace || '';\n\n  return (\n    <Ensure type=\"namespace\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading namespaces...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load namespaces.</ParameterLoader>;\n        }\n\n        let namespaces = data;\n\n        namespaces = namespaces.filter(namespace => {\n          if (namespace.meta && namespace.meta.appearance) {\n            return namespace.meta.appearance !== 'Hidden';\n          }\n\n          return true;\n        });\n\n        const OPTIONS = namespaces.map(item => ({\n          value: item.name,\n          label: item.name,\n          disabled: item.meta && item.meta.appearance === 'Greyed'\n        }));\n\n        return (\n          <Select\n            type=\"text\"\n            defaultValue={defaultValue}\n            value={defaultValue}\n            name=\"namespace\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const FormPrototypeSelect = props => {\n  return (\n    <Ensure type=\"prototype\" inlineLoader>\n      {({ data: prototypes }) => {\n        const list = prototypes || [];\n\n        const options = list.map(prototype => ({\n          label: prototype.name,\n          value: prototype.name\n        }));\n\n        return <Text fullWidth {...props} description=\"\" options={options} />;\n      }}\n    </Ensure>\n  );\n};\n\nexport const ModeSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.mode || '';\n\n  return (\n    <Ensure type=\"type\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading type...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load types.</ParameterLoader>;\n        }\n\n        const modes = data.filter(type => type.name === 'mas0300.sys.account.privilege_mode')[0];\n\n        if (modes.meta && modes.meta.appearance === 'Hidden') {\n          return null;\n        }\n\n        const OPTIONS =\n          modes.enumerations &&\n          modes.enumerations.map(item => ({\n            value: item.label,\n            label: item.label,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            disabled={modes.meta && modes.meta.appearance === 'Greyed'}\n            name=\"process\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nfunction variadicListReducer(list, action) {\n  switch (action.type) {\n    case 'add_new_parameter':\n      return produce(list, draft => {\n        draft.push({ name: '', type: '', deflt: undefined, description: null, value: '' });\n      });\n\n    case 'remove_parameter':\n      return produce(list, draft => {\n        draft.shift();\n      });\n\n    default:\n      return list;\n  }\n}\n\nfunction useVariadicList(recieved) {\n  const [list, dispatch] = useReducer(variadicListReducer, recieved?.replvars || []);\n\n  return { list, dispatch };\n}\n\nexport const Variadic = ({ recieved, disabled }) => {\n  const { values } = useFormikContext();\n  const displayDeftlDesc = selectedProcess !== 'vendita.oracle.rdbms.cli.sqlplus.execute';\n\n  const { list, dispatch } = useVariadicList(recieved);\n\n  const selectedProcess = values.process;\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvars</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Ensure type=\"type\">\n          {({ data: datatypes }) => {\n            const options = datatypes\n              .filter(dataType => {\n                if (\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.script' ||\n                  selectedProcess === 'mas0300.os.svc.db.data.sql.query_import' ||\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.execute'\n                ) {\n                  return dataType.name === 'string' || dataType.name === 'integer';\n                }\n                return true;\n              })\n              .map(dataType => {\n                return {\n                  label: dataType.name,\n                  value: dataType.name\n                };\n              });\n\n            return (\n              <>\n                <div>\n                  {list.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <VariadicInstance\n                        data={item}\n                        index={index}\n                        defltDesc={displayDeftlDesc}\n                        types={options}\n                        disabled={disabled}\n                      />\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  }}\n                >\n                  {list.length > 0 && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        dispatch({ type: 'remove_parameter' });\n                      }}\n                      disabled={disabled}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                  <Button\n                    onClick={() => {\n                      dispatch({ type: 'add_new_parameter' });\n                    }}\n                    disabled={disabled}\n                  >\n                    Add\n                  </Button>\n                </div>\n              </>\n            );\n          }}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nfunction VariadicInstance({ data = {}, index, defltDesc, types, disabled }) {\n  const name_base = `replvar--${index}`;\n\n  let parsedDeflt = data.deflt;\n\n  if (data.deflt) {\n    parsedDeflt = data.deflt.replace(\"str('\\\"'\", '').replace(\"'\\\"')\", '');\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Name\"\n        type=\"text\"\n        name={`${name_base}--name`}\n        value={data.name}\n        disabled={disabled}\n        validate={check.merge(check.firstCharLetter, check.masName)}\n        required\n      />\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Type\"\n        type=\"text\"\n        name={`${name_base}--type`}\n        options={types}\n        value={data.type}\n        disabled={disabled}\n        required\n      />\n      {defltDesc && (\n        <>\n          <Text\n            style={{ marginBottom: '15px' }}\n            label=\"Deflt\"\n            type=\"text\"\n            name={`${name_base}--deflt`}\n            value={parsedDeflt}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n          <Text\n            style={{ marginBottom: '30px' }}\n            label=\"Description\"\n            type=\"text\"\n            name={`${name_base}--description`}\n            value={data.description}\n            defaultValue={null}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n        </>\n      )}\n      {!defltDesc && (\n        <Text\n          style={{ marginBottom: '15px' }}\n          label=\"Value\"\n          type=\"text\"\n          name={`${name_base}--value`}\n          value={data.value}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n}\n","import * as Yup from 'yup';\n\nexport const mergeValidations = (...callbacks) => value => {\n  let error;\n\n  callbacks.forEach(provided => {\n    if (provided && typeof provided === 'function') {\n      error = provided(value);\n    }\n  });\n\n  return error;\n};\n\nexport const checkRequired = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .required('Field is required')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkEmail = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .email('Invalid email format.')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkPhoneNumber = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      })\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUnsignedInt = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .matches(/^[-]!$/, {\n        excludeEmptyString: true,\n        message: 'The parameter must be unsigned.'\n      })\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkName = value => {\n  if (!/^(?:[a-z_][a-z0-9_\\\\.]*)$/i.test(value) || (value && value.substr(-1) === '.')) {\n    return 'A valid MAS relative name is required.';\n  }\n};\n\nexport const checkFirstLetter = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .matches(/^[a-zA-Z].*/, {\n        excludeEmptyString: true,\n        message: 'First character must be a letter'\n      })\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const noop = () => {};\n\nexport default {\n  merge: mergeValidations,\n  required: checkRequired,\n  email: checkEmail,\n  phone: checkPhoneNumber,\n  unsigned_int: checkUnsignedInt,\n  unsigned_float: noop,\n  signed_float: noop,\n  masName: checkName,\n  firstCharLetter: checkFirstLetter\n};\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButton = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating, dirty } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={!dirty || isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useState, useCallback } from 'react';\n\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { array, func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SearchableList.local.scss';\n\nexport const SearchableList = ({ items, children, filter, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const [query, setQuery] = useState('');\n  const filtered = items.filter(item => filter(item, query));\n\n  return (\n    <>\n      <div className=\"search-input-slot\">\n        <SimpleSearchInput\n          data-qa=\"users-search-input\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled,\n          [variant]: variant\n        })}\n      >\n        <ul\n          className={classnames('list', {\n            [variant]: variant\n          })}\n          onWheel={onWheel}\n        >\n          {filtered.map((item, index, list) => (\n            <li key={index} className=\"list-item\">\n              {children(item, index, list)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nSearchableList.propTypes = {\n  items: array,\n  children: func,\n  filter: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nSearchableList.defaultProps = {\n  items: [],\n  filter: (item, query) => item === query\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  DELETE_USER,\n  CREATE_USER\n} from '../actions';\n\nexport function loadAllUsersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_USERS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS);\n      dispatch(creators.success(LOAD_ALL_USERS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_USERS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadUserThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USER, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USER, error));\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(GRANT_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(REVOKE_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function addUserToGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/grant`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, error));\n\n      return error;\n    }\n  };\n}\n\nexport function removeUserFromGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, error));\n    }\n  };\n}\n\nexport function removeUserThunk(user) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_USER, user));\n\n    try {\n      // TODO: test if data returned from request is all the new users from the new list.\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`);\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS);\n      dispatch(creators.success(DELETE_USER, allUsers.data));\n\n      return allUsers.data;\n    } catch (error) {\n      dispatch(creators.fail(DELETE_USER, error));\n\n      return error.data;\n    }\n  };\n}\n\nexport function createUserThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.username,\n      password: values.password,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_USER, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS);\n      dispatch(creators.success(LOAD_ALL_USERS, refreshed.data));\n\n      dispatch(creators.success(CREATE_USER));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_USER, error));\n\n      return error;\n    }\n  };\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport function loadAllGroupsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_GROUPS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS);\n      dispatch(creators.success(LOAD_ALL_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_GROUPS, error.data));\n\n      return error.data;\n    }\n  };\n}\n\nexport function loadGroupThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_GROUP, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${name}`);\n      dispatch(creators.success(LOAD_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_GROUP, error.data));\n    }\n  };\n}\n\nexport function createGroupThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.groupname,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_GROUP, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS);\n      dispatch(creators.success(LOAD_ALL_GROUPS, refreshed.data));\n\n      dispatch(creators.success(CREATE_GROUP));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_GROUP, error));\n\n      return error;\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(GRANT_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(REVOKE_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function removeUsersFromGroupThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_USERS_FROM_GROUP, params));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`, {\n        groups: [params.group]\n      });\n\n      const group = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(REMOVE_USERS_FROM_GROUP, group.data));\n    } catch (error) {\n      dispatch(creators.fail(REMOVE_USERS_FROM_GROUP, error));\n    }\n  };\n}\n\nexport function removeSubGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_GROUPS_FROM_GROUP, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(REMOVE_GROUPS_FROM_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REMOVE_GROUPS_FROM_GROUP, error));\n    }\n  };\n}\n\nexport function addUsersToGroupThunk(params) {\n  return async dispatch => {\n    const { group, users } = params;\n\n    dispatch(creators.loading(ADD_USERS_TO_GROUP, params));\n\n    try {\n      await Promise.all(\n        users.map(async user => {\n          return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant`, {\n            groups: [group]\n          });\n        })\n      );\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(ADD_USERS_TO_GROUP, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(ADD_USERS_TO_GROUP, error.data));\n      return error.data;\n    }\n  };\n}\n\nexport function removeGroupThunk(group) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_GROUP, group));\n\n    try {\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}`);\n      dispatch(creators.success(DELETE_GROUP));\n\n      dispatch(loadAllGroupsThunk());\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DELETE_GROUP, error));\n\n      return error.data;\n    }\n  };\n}\n","// function Node(payload) {\n//   const data = payload;\n//   const edges = [];\n\n//   return {\n//     getEdges() {\n//       return edges;\n//     },\n//     getData() {\n//       return data;\n//     },\n//     addEdge(edge) {\n//       edges.push(edge);\n//       return edges;\n//     }\n//   };\n// }\n\nimport _ from 'lodash';\nimport { createSelector } from 'reselect';\n\nfunction pipe(...fns) {\n  return arg => fns.reduce((prev, fn) => fn(prev), arg);\n}\n\nfunction filterBy(selector, equalityFn, value) {\n  return data => {\n    if (value) {\n      return data.filter(el => equalityFn(selector(el), value));\n    }\n\n    return data;\n  };\n}\n\nexport function retrieveFilteredAccounts(protocol, server) {\n  return state => {\n    const { accounts } = state.explorer;\n\n    const filterByProtocol = filterBy(\n      el => (el.nodes[0] ? el.nodes[0].protocol : ''),\n      (stateValue, currentValue) => stateValue === currentValue,\n      protocol\n    );\n\n    const filterByServer = filterBy(\n      el => Object.keys(el.servers),\n      (servers, currentServer) => servers.includes(currentServer),\n      server\n    );\n\n    return pipe(filterByProtocol, filterByServer)(accounts);\n  };\n}\n\nexport function retrieveServerEntry({ protocol, address }, structure) {\n  const dbms = structure.dbms.find(entry => entry.protocol === protocol);\n  return dbms && dbms.servers.find(server => server.address === address);\n}\n\nexport function retrieveDatabaseEntry({ database, protocol, address }, structure) {\n  const server = retrieveServerEntry({ protocol, address }, structure);\n\n  return server.databases.find(db => db.special.database === database);\n}\n\nconst getStatePath = state => state.explorer.state.path;\nconst getStructured = state => state.explorer.structured.dbms;\nconst getSessions = state => state.explorer.sessions;\nconst getSessionsFlags = state => state.explorer.flags.sessions;\nconst getStoragePointsLoadingFlag = state => state.explorer.flags.storage.loadingPoints;\nconst getStorageDetailsLoadingFlag = state => state.explorer.flags.storage.loadingDetails;\nconst getStoragePoints = state => state.explorer.storage.points;\nconst getStorageDetails = state => state.explorer.storage.details;\nconst getSelectedStorage = state => state.explorer.storage.selected;\nconst getSelectedObject = state => state.explorer.objects.selectedObject;\nconst getSelectedOwner = state => state.explorer.objects.selectedOwner;\nconst getAllObjects = state => state.explorer.objects;\nconst getObjectsLoadingFlag = state => state.explorer.flags.objects.loading;\n\nexport const getFullPath = createSelector([getStatePath, getStructured], (fullPath, dbms) => {\n  const pathArr = fullPath.split('--');\n  return dbms\n    .find(({ path }) => path === pathArr[0])\n    ?.servers.find(({ address }) => address === pathArr[1])\n    ?.databases.find(({ special }) => special.database === pathArr[2])?.name;\n});\n\nexport const getFormattedStorage = createSelector(\n  [getStoragePoints, getStoragePointsLoadingFlag],\n  (points, isLoading) => {\n    if (isLoading || !_.isArray(points)) {\n      return [];\n    }\n    const factor = 1024;\n    return points.map(point => {\n      let usage = (point.Used_MB / point.Total_MB) * 100;\n      if (usage < 0) {\n        usage = 0;\n      }\n      return {\n        ns: point.Tablespace,\n        freePerc: point['Pct._Free'],\n        freeGB: point.Free_MB / factor,\n        totalGB: point.Total_MB / factor,\n        usedGB: point.Used_MB / factor,\n        usage\n      };\n    });\n  }\n);\n\nexport const getStorageDetailsData = createSelector(\n  [getStorageDetails, getFormattedStorage, getStorageDetailsLoadingFlag, getSelectedStorage],\n  (details, list, isLoading, selectedNS) => {\n    if (isLoading || !_.isArray(details)) {\n      return {\n        tablespace: {},\n        files: []\n      };\n    }\n    return {\n      tablespace: list.find(({ ns }) => ns === selectedNS),\n      files: details.filter(({ TABLESPACE_NAME }) => TABLESPACE_NAME === selectedNS)\n    };\n  }\n);\n\nexport const getStructuredObjects = createSelector(\n  [getAllObjects, getObjectsLoadingFlag],\n  (objects, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const tree = Object.keys(objects).reduce((acc, key) => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          if (acc[object.OWNER] && !acc[object.OWNER].includes(key)) {\n            acc[object.OWNER].push(key);\n          } else {\n            acc[object.OWNER] = [key];\n          }\n        });\n      return acc;\n    }, []);\n    return Object.keys(tree).map(key => ({ owner: key, objects: tree[key] }));\n  }\n);\n\nexport const getInvalidObjects = createSelector(\n  [getAllObjects, getObjectsLoadingFlag],\n  (objects, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const invalidObjects = [];\n    Object.keys(objects).forEach(key => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          const included = invalidObjects.findIndex(\n            ({ owner, object: name }) => owner === object?.OWNER && name === key\n          );\n          if (object && object.STATUS !== 'VALID' && included === -1) {\n            invalidObjects.push({ owner: object.OWNER, object: key });\n          }\n        });\n    });\n    return invalidObjects;\n  }\n);\n\nexport const getSelectedObjectData = createSelector(\n  [getSelectedObject, getSelectedOwner, getAllObjects],\n  (object, owner, objects) => {\n    if (!object || !owner || !_.isObject(objects) || !_.isArray(objects[object])) {\n      return [];\n    }\n    return objects[object].filter(({ OWNER }) => OWNER === owner);\n  }\n);\n\nexport const getSortedSessions = createSelector(\n  [getSessions, getSessionsFlags],\n  (sessions, { loading, sort }) => {\n    if (loading || !_.isArray(sessions)) {\n      return [];\n    }\n    if (sort === undefined) {\n      return sessions;\n    }\n    let sortFunction;\n    // Backend doesn't support sorting at this time. Consider moving sort to backend though\n    if (sort.order === 'asc') {\n      sortFunction = (a, b) => {\n        return new Date(a[sort.sortKey]).getTime() - new Date(b[sort.sortKey]).getTime();\n      };\n    } else {\n      sortFunction = (a, b) => {\n        return new Date(b[sort.sortKey]).getTime() - new Date(a[sort.sortKey]).getTime();\n      };\n    }\n    return sessions.slice().sort(sortFunction);\n  }\n);\n\nexport const getBackup = (database, backups) => {\n  const backup = backups.find(db => db.name === database.name)?.backup;\n\n  return backup;\n};\n\nexport const getDBStatus = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n\n  return status;\n};\n","import { createSelector } from 'reselect';\n\nexport const getQuery = createSelector(\n  state => state.invocation_viewer.query,\n  query => query\n);\n\nexport const getInvocation = createSelector(\n  state => state.invocation_viewer.invocation,\n  invocation => invocation\n);\n\nexport const getInvocationStatus = createSelector(getInvocation, invocation => invocation.status);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../../entities/actions';\nimport { entitySelectors } from '../../../entities/selectors';\n\nimport { Loader, ParameterLoader } from 'shared/components/loaders';\nimport { Center } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nexport const Ensure = connect(\n  (state, { type }) => {\n    const selector = entitySelectors[type];\n\n    return selector(state);\n  },\n  {\n    request: fetchEntity\n  }\n)(Ensurer);\n\nfunction Ensurer({ children, fresh, pipe = false, type, inlineLoader, data, status, request }) {\n  useEffect(() => {\n    if (status === 'fetching') return;\n    if (status === 'fetching') return;\n\n    if (status === 'fetched' && !fresh) return;\n\n    request(type);\n  }, []);\n\n  if (!status) {\n    return null;\n  }\n\n  if (status === 'fetching' && !pipe) {\n    const Loading = inlineLoader ? ParameterLoader : Loader;\n\n    return (\n      <Center>\n        <Loading>Loading {type}...</Loading>\n      </Center>\n    );\n  }\n\n  if (status === 'failed' && !pipe) {\n    return (\n      <Result type=\"fail\">\n        <Result.Text>Could not fetch {type} data!</Result.Text>\n      </Result>\n    );\n  }\n\n  if (typeof children === 'function') {\n    return <>{children({ status, data, request: () => request(type) })}</>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Ensure;\n","export function hasWritePrivileges(entity) {\n  return entity?.privileges?.effective?.includes?.('write');\n}\n","export const PROVIDE_EXECUTIVE_DASHBOARD = 'PROVIDE_EXECUTIVE_DASHBOARD';\n\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const TOGGLE_SERVER = 'TOGGLE_SERVER';\n","import React from 'react';\n\nimport { Text, Email, Integer, Password, PhoneNumber, BooleanSelect } from '../editors/Generic';\nimport { ProcessSelect, AccountSelect, RSAKey, FQName, Variadic } from '../editors/Custom';\n\nfunction extractParameter({ parameter, recieved, ...others }) {\n  const { type, ...additional } = parameter.editor;\n\n  return {\n    key: parameter.name,\n    label: parameter.label || parameter.name,\n    name: parameter.field_name || parameter.name,\n    required: parameter.is_required,\n    defaultValue: parameter.deflt || parameter.value,\n    description: parameter.description,\n    ...additional,\n    ...others\n  };\n}\n\nexport const TextParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Text {...passable} />;\n};\n\nexport const PasswordParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Password {...passable} />;\n};\n\nexport const PhoneNumberParameter = props => {\n  const passable = extractParameter(props);\n\n  return <PhoneNumber {...passable} />;\n};\n\nexport const BooleanParameter = props => {\n  const passable = extractParameter(props);\n\n  return <BooleanSelect {...passable} />;\n};\n\nexport const IntegerParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Integer {...passable} />;\n};\n\nexport const EmailParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Email {...passable} />;\n};\n\nexport const ProcessParameter = props => {\n  const passable = extractParameter(props);\n\n  return <ProcessSelect {...passable} />;\n};\n\nexport const AccountParameter = props => {\n  const passable = extractParameter(props);\n\n  return <AccountSelect protocols={[]} {...passable} />;\n};\n\nexport const VariadicParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Variadic recieved={props.recieved} {...passable} />;\n};\n\nexport const FQNameParameter = props => {\n  const passable = extractParameter(props);\n\n  return <FQName {...passable} />;\n};\n\nexport const RSAKeyParameter = props => {\n  const passable = extractParameter(props);\n\n  return <RSAKey {...passable} />;\n};\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, tabs } = this.props;\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={tabs.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func,\n  tabs: array\n};\n\nNavigationTab.defaultProps = {\n  tabs: []\n};\n\nexport default NavigationTab;\n","import * as Yup from 'yup';\n\nexport function getInitialValues(parameters) {\n  const initialValues = {};\n\n  parameters.map(parameter => {\n    initialValues[parameter.name] = parameter.deflt !== null ? parameter.deflt : '';\n    return null;\n  });\n\n  return initialValues;\n}\n\nexport function getValidationSchema(parameters) {\n  const validationSchema = {};\n\n  parameters.map(parameter => {\n    validationSchema[parameter.name] = Yup.string();\n\n    if (parameter.is_required) {\n      validationSchema[parameter.name].required('A value is required');\n    }\n\n    return null;\n  });\n}\n\nexport function formatParameters(values) {\n  const parameters = {};\n\n  Object.keys(values).map(value => {\n    if (typeof values[value] === 'string') {\n      if (values[value].length > 0 || values[value].trim()) {\n        parameters[value] = values[value];\n      }\n    } else if (typeof values[value] === 'object') {\n      if (values[value].name && (values[value].name.length > 0 || values[value].name.trim())) {\n        parameters[value] = values[value].name;\n      }\n    }\n\n    return null;\n  });\n\n  return parameters;\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchProtocols() {\n  try {\n    const { data } = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n    return { result: data.result, protocols: data.data.protocols };\n  } catch (e) {\n    return { result: 'fail', protocols: [] };\n  }\n}\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick } = this.props;\n    const data = [\n      { label: 'Workload', value: 'workload' },\n      { label: 'Sessions', value: 'sessions' },\n      { label: 'Objects', value: 'objects' },\n      { label: 'Storage', value: 'storage' },\n      { label: 'License reporting', value: 'license' }\n    ];\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={data.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {data.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func\n};\n\nexport default NavigationTab;\n","import { createSelector } from 'reselect';\n\nexport const ENTITY_TYPES = [\n  {\n    type: 'account',\n    title: 'CONNECTION',\n    dataEnclosure: 'accounts',\n    query: '*'\n  },\n  {\n    type: 'constant',\n    title: 'CONSTANT',\n    dataEnclosure: 'constants',\n    query: '*'\n  },\n  {\n    type: 'exception',\n    title: 'EXCEPTION',\n    dataEnclosure: 'exceptions',\n    query: '*'\n  },\n  {\n    type: 'form',\n    query: '*',\n    title: 'FORM',\n    dataEnclosure: 'forms',\n    query: '*'\n  },\n  {\n    type: 'namespace',\n    title: 'NAMESPACE',\n    query: '*',\n    dataEnclosure: 'namespaces'\n  },\n  {\n    type: 'process',\n    query: '*',\n    title: 'PROCESS',\n    dataEnclosure: 'processes'\n  },\n  {\n    type: 'prototype',\n    query: '*',\n    title: 'PROTOTYPE',\n    dataEnclosure: 'prototypes'\n  },\n  {\n    type: 'schedule',\n    title: 'SCHEDULE',\n    dataEnclosure: 'schedules',\n    query: '*'\n  },\n  {\n    type: 'type',\n    query: '*',\n    title: 'TYPE',\n    dataEnclosure: 'data_types'\n  }\n];\n\nexport const ENTITY_TYPES_FETCH = ENTITY_TYPES.concat({\n  type: 'alias'\n});\n\nconst ROOT_ENTITY = {\n  name: 'root',\n  entity: 'root',\n  description: 'Main container for all of the entities within MAS.'\n};\n\nexport const getBreadcrumbs = state => state.entities.breadcrumbs;\n\nfunction collectData(data, { type, dataEnclosure }, namespacesWithMeta) {\n  let collection = data[type]?.data?.data?.[dataEnclosure];\n\n  if (collection) {\n    const aliases = data.alias?.data?.data.aliases\n      .filter(item => item.alias_type === type)\n      .map(item => {\n        const { entity, alias, alias_type, ...props } = item;\n\n        /**\n         * Merging properties that the alias does not have,\n         * with properties the entity it aliases, has.\n         * Will avoid having to reconcile this at the usage level.\n         * And keep aliases viewable here.\n         */\n        const aliasedEntity = data[type]?.data?.data[dataEnclosure].find(e => e.name === alias);\n\n        return { ...(aliasedEntity && aliasedEntity), alias, ...props, entity: alias_type };\n      });\n\n    if (aliases) {\n      /** Concat the aliases for this collection with the collection itself */\n      collection = data[type]?.data?.data[dataEnclosure].concat(aliases);\n    }\n\n    /* filter out colllection items where appearance meta is hidden */\n\n    /** FIXME:\n     *  what about aliases ? If their aliasing root entity would have meta apearance hidden, should it as well ?\n     *  */\n    if (Array.isArray(namespacesWithMeta)) {\n      collection = collection.reduce((acc, dataItem) => {\n        const ownNamespace = namespacesWithMeta.find(ns => dataItem.name.startsWith(ns.name));\n\n        if (ownNamespace) {\n          if (ownNamespace?.meta?.appearance === 'Hidden') {\n            return acc;\n          }\n\n          return acc.concat([\n            {\n              ...dataItem,\n              meta: {\n                ...dataItem.meta,\n                ...ownNamespace.meta\n              }\n            }\n          ]);\n        }\n\n        return acc.concat(dataItem);\n      }, []);\n    }\n  }\n\n  return collection;\n}\n\nexport const entitySelectors = ENTITY_TYPES.reduce((selectors, def) => {\n  selectors[def.type] = createSelector(\n    state => state.entities.data,\n    state => state.entities.fetch_status,\n    state => namespaceWithMetaSelector(state),\n    (data, status, namespacesWithMeta) => {\n      return {\n        data: collectData(data, def, namespacesWithMeta),\n        status: status?.[def.type]\n      };\n    }\n  );\n\n  return selectors;\n}, {});\n\nexport const namespaceWithMetaSelector = createSelector(\n  state => state.entities.data,\n  data => {\n    const dataNamespaces = data.namespace?.data?.data?.namespaces;\n    if (Array.isArray(dataNamespaces)) {\n      return dataNamespaces.filter(\n        item => item.meta && item.meta.appearance && item.meta.appearance !== 'Normal'\n      );\n    }\n    return [];\n  }\n);\n\nexport const getFilteredEntities = createSelector(\n  state => state.entities.data,\n  state => state.entities.filters,\n  state => namespaceWithMetaSelector(state),\n  (data, filters, namespacesWithMeta) => {\n    const types =\n      filters.type === 'all'\n        ? ENTITY_TYPES\n        : ENTITY_TYPES.filter(type => type.type === filters.type || type.type === 'namespace');\n    return types\n      .reduce((accumulator, type) => {\n        return accumulator.concat(collectData(data, type, namespacesWithMeta));\n      }, [])\n      .filter(Boolean);\n  }\n);\n\nexport const getEntitiesAsHashMap = createSelector(\n  getFilteredEntities,\n  state => state.entities.filters,\n  (entities, filters) => {\n    let filteredEntities = entities;\n    if (filters.type !== 'all' && filters.type !== 'namespace') {\n      filteredEntities = entities.filter(item => item.entity !== 'namespace');\n    }\n    if (filters.search) {\n      filteredEntities = filteredEntities.filter(item => {\n        if (filters.type !== 'all' && filters.type !== 'namespace') {\n          const domainArray = item.name.split('.');\n          const shortName = domainArray[domainArray.length - 1];\n          return shortName.includes(filters.search);\n        }\n        return item.name.includes(filters.search);\n      });\n    }\n    return filteredEntities.reduce((accumulator, entity) => {\n      const paths = entity.name.includes('.') ? entity.name.split('.') : [];\n      paths.forEach((path, index) => {\n        const key = paths.slice(0, index).join('.');\n        if (!accumulator[key]) {\n          const findEntity = entities.find(item => item.name === key);\n          accumulator[key] = findEntity || {\n            name: key,\n            notPersisted: true\n          };\n        }\n      });\n      accumulator[entity.name] = entity;\n\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const getEntities = createSelector(\n  getBreadcrumbs,\n  getEntitiesAsHashMap,\n  (breadcrumbs, entitiesMap) => {\n    const entities = Object.values(entitiesMap);\n    const roots = Object.keys(entitiesMap)\n      .filter((entityName, index, names) => {\n        return (\n          !entityName.includes('.') &&\n          (names.find(name => name.startsWith(`${entityName}.`)) ||\n            entitiesMap[entityName].entity === 'namespace')\n        );\n      })\n      .map(key => ({\n        ...entitiesMap[key],\n        isSelected: breadcrumbs.includes(entitiesMap[key].name)\n      }));\n    const columns = breadcrumbs.map((breadcrumb, index) => {\n      return {\n        level: index,\n        path: index === 0 ? '.' : breadcrumbs.slice(0, index).join('.'),\n        rows: []\n      };\n    });\n    columns.push({\n      level: breadcrumbs.length,\n      path: `${breadcrumbs.join('.')}.`,\n      rows: []\n    });\n\n    return entities.reduce((accumulator, entity) => {\n      const path = entity.name.split('.');\n      if (accumulator.length < path.length) {\n        return accumulator;\n      }\n      const bucket = accumulator[path.length - 1];\n      if (!bucket) {\n        return accumulator;\n      }\n      if (bucket.path === '.') {\n        bucket.rows = roots;\n        return accumulator;\n      }\n\n      if (!entity.name.startsWith(bucket.path)) {\n        return accumulator;\n      }\n      const name = entity.name.replace(bucket.path, '').replace('.', '');\n      const entityLevel = entity.name.split('.').length - 1;\n      bucket.rows.push({\n        ...entity,\n        name,\n        isSelected: breadcrumbs[entityLevel] ? breadcrumbs[entityLevel] === name : false\n      });\n\n      return accumulator;\n    }, columns);\n  }\n);\n\nexport const getSelectedEntity = createSelector(\n  getEntitiesAsHashMap,\n  getBreadcrumbs,\n  (entities, breadcrumbs) => {\n    const path = breadcrumbs.join('.');\n    const entity = entities[path];\n    return entity?.notPersisted ? ROOT_ENTITY : entity;\n  }\n);\n","import React, { createContext, useContext } from 'react';\n\nconst Context = createContext();\n\nexport default function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nSwitch.Case = Case;\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './simple-search-input.local.scss';\n\nexport const SimpleSearchInput = ({ value, onChange, ...props }) => {\n  return (\n    <div className=\"search-input\">\n      <i className=\"search-icon-slot\">\n        <SearchIcon fontSize=\"default\" />\n      </i>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"search-input-control\"\n        placeholder=\"Search\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nSimpleSearchInput.propTypes = {\n  value: string,\n  onChange: func\n};\n\nexport default SimpleSearchInput;\n","import React from 'react';\nimport { Switch } from 'shared/components';\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { useFormikContext } from 'formik';\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { chunk } from 'lodash';\n\n/** accepts recived parameters for invocations that are already scheduled */\nexport const ProcessParameters = ({ recieved = {}, editable }) => {\n  const { values } = useFormikContext();\n\n  /**\n   * Returns a parameter list from a given list of parameters, and a Process name\n   * This could be turned into a connected component that can take the processes from entities for itself.\n   * */\n  function selectParametersForProcess(processName, processes) {\n    const process = processes.find(item => item.name === processName);\n\n    if (process) {\n      return process.parameters.map(p => ({ ...p, value: recieved[p.name], disabled: !editable }));\n    }\n    return [];\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Parameters</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Switch value={!!values.process}>\n          <Switch.Case value={false}>\n            <Column xs={12}>\n              <p>Select a process to edit parameters</p>\n            </Column>\n          </Switch.Case>\n          <Switch.Case value>\n            <Ensure type=\"form\">\n              {({ data: forms }) => (\n                <Ensure type=\"type\">\n                  {({ data: datatypes }) => (\n                    <Ensure type=\"prototype\">\n                      {({ data: prototypes }) => (\n                        <Ensure type=\"process\">\n                          {({ data }) => {\n                            const parameters = selectParametersForProcess(values.process, data);\n\n                            const normalized = parameters.map(parameter => {\n                              return normalize(parameter, datatypes, prototypes, forms);\n                            });\n\n                            /*  << +- 1 of '/' to toggle\n                            const notSupported = false;\n                            /* /\n\n                            // In old app, if at least one normalized parameter exists that is not supported,\n                            // the whole process is disregarded.\n\n                            const notSupported = normalized.some(p => !p.is_supported);\n                            // */\n\n                            const filtered = normalized\n                              .filter(p => p.editor.type !== 'hidden')\n                              .sort((a, b) => a.position - b.position); // sort parameters based on the meta.position\n\n                            // if (notSupported || filtered.length === 0) {\n                            if (filtered.length === 0) {\n                              return (\n                                <Row>\n                                  <Column>\n                                    <p>\n                                      This process contains unsuported parameters with no defaults,\n                                      and cannot be run from the web interface.\n                                    </p>\n                                  </Column>\n                                </Row>\n                              );\n                            }\n\n                            const chunks = chunk(filtered, 2);\n\n                            return chunks.map((params, index) => (\n                              <Row key={index} spacing={3}>\n                                {params.map(parameter => (\n                                  <Column key={parameter.name} xs={6}>\n                                    <Parameter\n                                      normalized={parameter}\n                                      value={values[parameter.name]}\n                                      disabled={!editable}\n                                      recieved={recieved}\n                                    />\n                                  </Column>\n                                ))}\n                              </Row>\n                            ));\n                          }}\n                        </Ensure>\n                      )}\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          </Switch.Case>\n        </Switch>\n      </Section.Content>\n    </Section>\n  );\n};\n","import React from 'react';\nimport Groups from '../../components/notification-groups/notification-groups';\nimport Users from '../../components/notification-users/notification-users';\nimport Events from '../../components/notification-events/notification-events';\nimport NotificationList from '../../components/notification-list/notification-list';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport { Button } from 'shared/components/controls';\n\nimport classnames from 'classnames';\n\nimport './notifications.scss';\nimport { RestClient } from 'shared/lib/rest';\n\nexport class Notifications extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { recievedData } = props;\n\n    const startFullLog = [1, 3, 5, 7];\n    const completionFullLog = [2, 3, 6, 7];\n    const abnormalFullLog = [4, 6, 7];\n\n    this.state = {\n      groupsData: [],\n      usersData: [],\n      jobStart: {\n        notice: false,\n        fullLog: startFullLog.includes(recievedData.events)\n      },\n      jobCompletion: {\n        notice: false,\n        fullLog: completionFullLog.includes(recievedData.events)\n      },\n      abnormalEvent: {\n        notice: false,\n        fullLog: abnormalFullLog.includes(recievedData.events)\n      },\n      isEditing: false\n    };\n  }\n\n  async componentDidMount() {\n    const { recievedData = { users: [] } } = this.props;\n\n    RestClient.get('/group').then(res => {\n      if (res && res.data && res.data.data && res.data.data.groups) {\n        this.setState({\n          groupsData: res.data.data.groups.map(item => {\n            return { data: item, selected: false, displayIcons: false };\n          })\n        });\n      }\n    });\n    RestClient.get('/user').then(res => {\n      if (res && res.data && res.data.data && res.data.data.users) {\n        this.setState({\n          usersData: res.data.data.users.map(item => {\n            return {\n              data: item,\n              selected: recievedData.users.includes(item.name),\n              display: false\n            };\n          })\n        });\n      }\n    });\n  }\n\n  render() {\n    const { usersData, groupsData, jobStart, jobCompletion, abnormalEvent, isEditing } = this.state;\n    const selectedGroup = this.getSelectedGroup();\n    const areUsersSelected = usersData.find(item => item.selected);\n    const isClearActionAvailable = this.checkIfAllUsersSelectedCurrentGroup();\n    return (\n      <div\n        className={classnames('monitor-and-notifications', {\n          disabled: this.props.disabled\n        })}\n      >\n        {isEditing ? (\n          <div className=\"notifications-editor\">\n            <Groups onSelect={this.onSelectGroup} groups={groupsData} />\n            <Users\n              onSelect={this.onSelectUser}\n              onSelectUserAction={this.onSelectUserAction}\n              isClearActionAvailable={isClearActionAvailable}\n              users={usersData}\n              isGroupSelected={!!selectedGroup}\n              eventTypeIcons={this.getEventTypeIcons()}\n            />\n            <div className=\"right-side-container\">\n              <Events\n                jobStart={jobStart}\n                jobCompletion={jobCompletion}\n                abnormalEvent={abnormalEvent}\n                onSelect={this.onSelectEventType}\n                areUsersSelected={areUsersSelected}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  this.props.onApply(mappedState(this.state));\n                  this.toggleApplyButton();\n                }}\n              >\n                Apply\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <NotificationList\n            users={usersData}\n            eventTypeIcons={this.getEventTypeIcons()}\n            toggleApplyButton={this.toggleApplyButton}\n          />\n        )}\n      </div>\n    );\n  }\n\n  getEventTypeIcons = () => {\n    const { jobStart, jobCompletion, abnormalEvent } = this.state;\n    const icons = [];\n    if (jobStart.notice || jobStart.fullLog) {\n      icons.push(<PlayCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (jobCompletion.notice || jobCompletion.fullLog) {\n      icons.push(<CheckCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (abnormalEvent.notice || abnormalEvent.fullLog) {\n      icons.push(<ErrorOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    return icons;\n  };\n\n  toggleApplyButton = () => {\n    this.setState(state => ({ isEditing: !state.isEditing }));\n  };\n\n  checkIfAllUsersSelectedCurrentGroup = () => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      return this.state.usersData\n        .filter(item => selectedGroup.data.users.indexOf(item.data.name) !== -1)\n        .every(item => item.selected);\n    }\n  };\n\n  onSelectGroup = group => {\n    this.setState(state => ({\n      groupsData: state.groupsData.map(item => ({\n        ...item,\n        selected: group.data.name === item.data.name\n      })),\n      usersData: state.usersData.map(item => ({\n        ...item,\n        display: group.data.users.indexOf(item.data.name) !== -1\n      }))\n    }));\n  };\n\n  onSelectUser = user => {\n    /* eslint-disable react/no-access-state-in-setstate */\n    const usersData = this.state.usersData.map(item => {\n      if (item.data.name === user.data.name) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    this.setState({ usersData, groupsData: this.setFlagGroupsIfContainSelectedUser(usersData) });\n  };\n\n  onSelectUserAction = shouldClear => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      const usersData = this.state.usersData.map(item => {\n        if (selectedGroup.data.users.indexOf(item.data.name) !== -1) {\n          return { ...item, selected: !shouldClear };\n        }\n        return item;\n      });\n      this.setState({\n        usersData,\n        groupsData: this.setFlagGroupsIfContainSelectedUser(usersData)\n      });\n    }\n  };\n\n  setFlagGroupsIfContainSelectedUser = usersData => {\n    return this.state.groupsData.map(group => ({\n      ...group,\n      displayIcons: !!usersData.find(user => {\n        return user.selected && user.data.member_of.indexOf(group.data.name) !== -1;\n      })\n    }));\n  };\n\n  onSelectEventType = (type, key) => {\n    this.setState(state => ({ [type]: { ...state[type], [key]: !state[type][key] } }));\n  };\n\n  getSelectedGroup() {\n    return this.state.groupsData.find(item => item.selected);\n  }\n}\n\nexport default Notifications;\n\n/**\n * State mapper for backend request.\n *\n * events is a composite number,\n *\n * notice unsuported for now\n * groups are redundant now that the ui preselects all users in a group.\n */\n/* eslint-disable no-unused-vars */\nfunction mappedState({ groupsData, usersData, jobStart, jobCompletion, abnormalEvent }) {\n  const users = usersData.filter(user => user.selected).map(user => user.data.name);\n\n  let events = 0;\n\n  if (jobStart.fullLog) {\n    events += 1;\n  }\n\n  if (jobCompletion.fullLog) {\n    events += 2;\n  }\n\n  if (abnormalEvent.fullLog) {\n    events += 4;\n  }\n\n  return { users, events };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getProcess(name) {\n  return RestClient.get(`/process/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchProcess(name, body) {\n  return RestClient.patch(`/process/${name}`, body);\n}\n","/**\n * This file will be updated with any new module (adding the module reducer)\n */\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { sessionEffects, sessionReducer } from 'session';\nimport { dashboardReducer } from 'dashboard';\nimport { sharedEffects, sharedReducer } from 'shared/store/';\nimport { createReducer } from 'shared/lib/redux-utils';\n\nimport usersManagerReducer from 'users-manager/store/reducers';\nimport groupsReducer from 'users-manager/groups/store/reducer';\nimport explorerReducer from 'explorer/store/reducers';\nimport executiveDashboardReducer from 'executive-dashboard/store/reducers';\nimport * as entities from 'entities/reducer';\nimport * as daemon from 'dashboard/store/reducers/daemon';\n\nimport * as invocations from 'job-process/store/reducer';\n\nimport { api } from './middlewares';\nimport { reducer as core } from './reducers';\n\nconst saga = createSagaMiddleware();\n\nexport const configStore = () => {\n  const reducer = combineReducers({\n    core,\n    session: sessionReducer,\n    dashboard: dashboardReducer,\n    shared: sharedReducer,\n    usersManager: usersManagerReducer,\n    groups: groupsReducer,\n    entities: createReducer(entities),\n    explorer: explorerReducer,\n    invocation_viewer: createReducer(invocations),\n    executiveDashboard: executiveDashboardReducer,\n    daemon: createReducer(daemon)\n  });\n  const effects = [...sessionEffects, ...sharedEffects];\n\n  const store = createStore(reducer, composeWithDevTools(applyMiddleware(saga, thunk, api)));\n\n  effects.forEach(effect => {\n    saga.run(effect);\n  });\n\n  return store;\n};\n\nexport default configStore();\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function postAccount(body) {\n  try {\n    const { data } = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.messages };\n  }\n}\n\nexport async function patchAccount(name, body) {\n  try {\n    const { data } = await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.messages };\n  }\n}\n\nexport function getConnection(name) {\n  return RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchConnection(name, body) {\n  return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","export const DISPLAY_FORMAT = 'L';\nexport const ISO_FORMAT = 'YYYY-MM-DD';\nexport const ISO_MONTH_FORMAT = 'YYYY-MM'; // TODO delete this line of dead code on next breaking change\n\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const VERTICAL_ORIENTATION = 'vertical';\nexport const VERTICAL_SCROLLABLE = 'verticalScrollable';\n\nexport const NAV_POSITION_BOTTOM = 'navPositionBottom';\nexport const NAV_POSITION_TOP = 'navPositionTop';\n\nexport const ICON_BEFORE_POSITION = 'before';\nexport const ICON_AFTER_POSITION = 'after';\n\nexport const INFO_POSITION_TOP = 'top';\nexport const INFO_POSITION_BOTTOM = 'bottom';\nexport const INFO_POSITION_BEFORE = 'before';\nexport const INFO_POSITION_AFTER = 'after';\n\nexport const ANCHOR_LEFT = 'left';\nexport const ANCHOR_RIGHT = 'right';\n\nexport const OPEN_DOWN = 'down';\nexport const OPEN_UP = 'up';\n\nexport const DAY_SIZE = 39;\nexport const BLOCKED_MODIFIER = 'blocked';\nexport const WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nexport const FANG_WIDTH_PX = 20;\nexport const FANG_HEIGHT_PX = 10;\nexport const DEFAULT_VERTICAL_SPACING = 22;\n\nexport const MODIFIER_KEY_NAMES = new Set(['Shift', 'Control', 'Alt', 'Meta']);\n","export function mapUsersData(payload) {\n  return payload.data.users;\n}\n\nexport function mapLoadedUser(payload) {\n  return payload.data.users[0]; // the first returned user is the one in question\n}\n","import { createSelector } from 'reselect';\n\nconst localState = (state) => state.session;\n\n\nexport const authorizationSelector = createSelector(\n  localState,\n  (state) => state.get('authorization'),\n);\n\n\nexport const currentUserSelector = createSelector(\n  localState,\n  (state) => state.get('currentUser'),\n);\n\nexport const loginSelector = createSelector(\n  localState,\n  (state) => state.get('login'),\n);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postSchedule(body) {\n  return RestClient.post('schedule', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function getSchedule(name) {\n  return RestClient.get(`schedule/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchSchedule(name, body) {\n  return RestClient.patch(`schedule/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import { CONSTANTS } from 'config';\n\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { PROVIDE_EXECUTIVE_DASHBOARD, SELECT_ALL, DESELECT_ALL, TOGGLE_SERVER } from '../actions';\n\nexport function loadExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function deselectAllThunk() {\n  return dispatch => {\n    dispatch(creators.action(DESELECT_ALL));\n\n    return 'done';\n  };\n}\n\nexport function selectAllThunk() {\n  return function selectAll(dispatch, getState) {\n    const { rawEntries } = getState().executiveDashboard;\n\n    dispatch(creators.action(SELECT_ALL, rawEntries));\n\n    return 'done';\n  };\n}\n\nexport function toggleServerThunk(server) {\n  return function toggleServer(dispatch, getState) {\n    const { allServers } = getState().executiveDashboard;\n    let { selectedServers } = getState().executiveDashboard;\n\n    const svIndex = allServers.findIndex(sv => sv.name === server.name);\n\n    if (selectedServers.find(sv => sv.name === server.name)) {\n      selectedServers = selectedServers.filter(sv => sv.name !== server.name);\n    } else {\n      selectedServers = [...selectedServers, allServers[svIndex]];\n    }\n\n    selectedServers.sort((a, b) => a.nrCores - b.nrCores);\n\n    dispatch(creators.action(TOGGLE_SERVER, selectedServers));\n    return 'done';\n  };\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport './Header.local.scss';\n\nexport const Header = ({ title, children }) => (\n  <header className=\"header\">\n    { title && <h1 className=\"header-title\">{title}</h1>}\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.dashboard;\n\nexport const filterStatusSelector = createSelector(localState, state => state.get('filterStatus'));\n","import { filterStatusActions } from './filter-status.action';\n\nimport { checkDaemon } from 'shared/api/daemon';\n\nexport const actions = {\n  ...filterStatusActions\n};\n\n/** TODO: The Above actions should be expanded to the new structure at some point */\n\nexport function checkDeamonStatus() {\n  return function daemon_thunk(dispatch) {\n    dispatch({\n      type: 'DAEMON_STATUS',\n      promise: checkDaemon()\n    });\n  };\n}\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\nimport { mdiCalendarBlank } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { SingleDatePicker } from 'shared/components';\n\nexport const DayFilterEditor = ({ value: defaultValue, setFilterValue }) => {\n  const [value, setValue] = useState(defaultValue ? moment(defaultValue, 'D MMM YYYY') : undefined);\n  const onChange = (date) => {\n    setValue(date);\n    setFilterValue({ value: date.format('D MMM YYYY'), type: DayFilterEditor.TypeDescriptor.value });\n  };\n\n  return (\n    <SingleDatePicker\n      date={value}\n      onDateChange={onChange}\n    />\n  );\n};\n\nDayFilterEditor.propTypes = {\n  value: PropTypes.string,\n  setFilterValue: PropTypes.func.isRequired,\n};\n\nDayFilterEditor.defaultProps = {\n  value: '',\n};\n\nDayFilterEditor.TypeDescriptor = {\n  icon: () => <SvgIcon><Icon path={mdiCalendarBlank} /></SvgIcon>,\n  name: () => <FormattedMessage id=\"dashboard.day\" />,\n  value: 'day',\n};\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { SmallInput } from 'shared/components';\n\nexport const UserFilterEditor = ({ value: defaultValue, setFilterValue }) => {\n  const [value, setValue] = useState(defaultValue || '');\n  const IconComp = UserFilterEditor.TypeDescriptor.icon;\n  const onChange = (event) => { setValue(event.target.value); };\n  const onKeyDown = (event) => { if (event.key === 'Enter') { setFilterValue({ value, type: UserFilterEditor.TypeDescriptor.value }); } };\n\n  return (\n    <SmallInput\n      autoFocus\n      value={value}\n      placeholder=\"Search\"\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      icon={<IconComp />}\n    />\n  );\n};\n\nUserFilterEditor.propTypes = {\n  value: PropTypes.string,\n  setFilterValue: PropTypes.func.isRequired,\n};\n\nUserFilterEditor.defaultProps = {\n  value: '',\n};\n\nUserFilterEditor.TypeDescriptor = {\n  icon: () => <AccountCircleOutlinedIcon />,\n  name: () => <FormattedMessage id=\"dashboard.user\" />,\n  value: 'user',\n};\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport { Dropdown, SmallInput } from 'shared/components';\n\nexport const StatusFilterEditor = ({ value: defaultValue, setFilterValue }) => {\n  const [value, setValue] = useState(defaultValue || '');\n  const IconComp = StatusFilterEditor.TypeDescriptor.icon;\n  const saveFilter = (index, status) => { setValue(status.value); setFilterValue({ type: 'status', value: status.value }); };\n\n  const items = [\n    { value: 'ABORTED', name: 'Aborted' },\n    { value: 'DELAYED', name: 'Delayed' },\n    { value: 'EXECUTING', name: 'Executing' },\n    { value: 'FAILED', name: 'Failed' },\n    { value: 'KILLED', name: 'Killed' },\n    { value: 'SCHEDULED', name: 'Scheduled' },\n    { value: 'SUCCEEDED', name: 'Succeeded' },\n  ];\n\n  return (\n    <Dropdown\n      target={(meta, actions) => (\n        <SmallInput\n          ref={meta.ref}\n          value={value}\n          placeholder=\"Select status\"\n          disabled\n          readOnly\n          onClick={actions.toggle}\n          icon={<IconComp />}\n        />\n      )}\n      onSelect={saveFilter}\n      items={items}\n      isDropdownOpen\n    />\n  );\n};\n\nStatusFilterEditor.propTypes = {\n  value: PropTypes.string,\n  setFilterValue: PropTypes.func.isRequired,\n};\n\nStatusFilterEditor.defaultProps = {\n  value: '',\n};\n\nStatusFilterEditor.TypeDescriptor = {\n  icon: () => <TimelapseIcon />,\n  name: () => <FormattedMessage id=\"dashboard.status\" />,\n  value: 'status',\n};\n","import extractDefault from './extractDefault';\n\nimport { sortBy } from 'lodash';\n\nimport check from '../editors/field-level-validations';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'string',\n  'integer',\n  'float',\n  'unsigned_float',\n  'unsigned_integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter'\n];\n\nexport function space_begone(name) {\n  return name.replace(/\\s/g, '___');\n}\n\nexport function space_summon(name) {\n  return name.replace(/___/g, ' ');\n}\n\nexport default function normalize(param, dataTypes, prototypes, forms) {\n  const parameter = { ...param };\n\n  defaults(parameter, dataTypes, prototypes, forms);\n\n  parameter.editor = defineEditor(parameter, dataTypes, prototypes, forms);\n\n  parameter.field_name = space_begone(parameter.name);\n\n  maybeDisabled(parameter);\n\n  return parameter;\n}\n\nfunction maybeDisabled(parameter) {\n  const { appearance } = parameter.meta;\n\n  if (appearance === 'Grayed' && parameter.editor) {\n    parameter.editor.disabled = true;\n  }\n}\n\nfunction defaults(parameter, dataTypes, prototypes) {\n  parameter.position = parameter.meta?.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    /**\n     * TODO: this was done to help exclude parameters like, any\n     * Or other stuff that cannot be parsed correctly\n     *\n     * Will remove them for now.\n     * Any types mostly are multiline input data, so we'll default them to that.\n     */\n    parameter.is_supported = false;\n\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (dataType.name.startsWith('mas0000.sys.account.conn.')) {\n          parameter.is_supported = true;\n        } else {\n          /**\n           * Allow support for all types of parameters, defaulting to a Text multiline.\n           */\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n\n          parameter.editor = {\n            type: 'string',\n            multiline: true,\n            deflt: ''\n          };\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.deflt = 'TEXT';\n  }\n\n  // hardcode default value for oformat parameter to \"TEXT\"\n  // was decided to be done on the UI because for the BE alot of processess had to be manually changed\n  // and at the moment we are pressed on time\n  if (parameter.name === 'oformat') {\n    parameter.deflt = parameter.value ? parameter.value : 'TEXT';\n  }\n}\n\nfunction parseProtocols(protocols) {\n  if (!protocols) {\n    return [];\n  }\n\n  if (!Array.isArray(protocols)) {\n    return [protocols];\n  }\n\n  return protocols.reduce((bucket, protocol) => {\n    // quick and dirty (as he said)\n    if (protocol === 'DBMS') {\n      bucket.push('MSSQL', 'MYSQL', 'ORACLE', 'PGSQL');\n    } else {\n      bucket.push(protocol);\n    }\n\n    return bucket;\n  }, []);\n}\n\nfunction defineEditor(parameter, dataTypes, prototypes, forms) {\n  if (!parameter.is_supported) {\n    return { type: 'hidden', disabled: true, value: '' };\n    // return { type: 'text', disabled: true, value: '' };\n  }\n\n  const { meta } = parameter;\n  const { editor: metaEditor, appearance } = meta;\n\n  if (appearance === 'Hidden') {\n    return { type: 'hidden' };\n  }\n\n  if (metaEditor === 'Hidden') {\n    return { type: 'text', disabled: true };\n  }\n\n  const prototype = prototypes.find(proto => proto.name === parameter.data_type);\n\n  if (prototype) {\n    const options = forms\n      .filter(form => form.prototype === prototype.name)\n      .map(form => ({ label: form.name, value: form.name }));\n    return {\n      type: 'select',\n      options\n    };\n  }\n\n  const dataType = dataTypes.find(type => type.name === parameter.data_type);\n\n  if (!dataType) {\n    return { type: 'text', disabled: true, readOnly: true };\n  }\n\n  if (dataType.enumerations !== null && dataType.enumerations.length > 0) {\n    const enumerations = sortBy(dataType.enumerations, 'weight');\n    const options = enumerations.map(({ label }) => ({ label, value: label }));\n\n    return { type: 'select', options };\n  }\n\n  if (dataType.name.startsWith('mas0000.sys.account.conn.')) {\n    return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n  }\n\n  switch (dataType.name) {\n    case 'ename':\n      switch (metaEditor) {\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'fqname' };\n      }\n    case 'string':\n      switch (metaEditor) {\n        case 'password':\n          return { type: 'password' };\n        case 'fqname':\n        case 'ename':\n          return { type: 'fqname' };\n        case 'multiline':\n          return { type: 'text', multiline: true };\n        case 'key':\n          return { type: 'rsa', multiline: true };\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'text' };\n      }\n    case 'boolean':\n      return { type: 'boolean' };\n    case 'integer':\n      return { type: 'number' };\n    case 'float':\n      return { type: 'number', validate: [check.signed_float] };\n    case 'unsigned_float':\n      return { type: 'number', validate: [check.unsigned_float] };\n    case 'unsigned_integer':\n      return { type: 'number', validate: [check.unsigned_int] };\n    case 'mas0000.os.exec.system_user':\n      return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n    case 'mas0000.sys.email_address':\n      return { type: 'email' };\n    case 'mas0000.sys.phone_number':\n      return { type: 'phone' };\n    case 'mas0000.sys.process.process':\n      return { type: 'process' };\n    case 'mas0000.sys.process.variadic_parameter':\n      return { type: 'variadic_parameter' /** needsSelectedProcessName */ };\n    default:\n      return { type: 'text', multiline: true };\n  }\n\n  // return { type: 'hidden' };\n}\n","import React from 'react';\nimport { bool, node, string, array, func } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiContentSave } from '@mdi/js';\n\nimport './ActionCard.local.scss';\n\nexport class ActionCard extends React.PureComponent {\n  render() {\n    const {\n      settings,\n      status,\n      icon,\n      label,\n      addOnly,\n      options,\n      onClick,\n      readOnlyOptions,\n      lastBackup\n    } = this.props;\n\n    return (\n      <div className={classnames('action-card', { addable: addOnly })}>\n        <header>\n          {lastBackup && (\n            <div className=\"last-backup\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiContentSave} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{lastBackup}</span>\n            </div>\n          )}\n          {settings && <div className=\"settings\">{settings}</div>}\n        </header>\n        <div className=\"main-icon\" onClick={onClick} role=\"presentation\">\n          {status && <div className={`status ${status}`} />}\n          {icon}\n        </div>\n        <div className=\"main-label\">{label}</div>\n        {options &&\n          options.map(option => (\n            <div className=\"option\" key={option.label} onClick={option.onClick} role=\"presentation\">\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n            </div>\n          ))}\n        {readOnlyOptions &&\n          readOnlyOptions.map(option => (\n            <div\n              className=\"option presentation\"\n              key={option.label}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              {option.fillable && option.percentage && (\n                <div className=\"filled\" style={{ width: `${option.percentage}%` }} />\n              )}\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n              {option.percentage && <div className=\"end-icon\">{option.percentage}%</div>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nActionCard.propTypes = {\n  settings: node,\n  icon: node,\n  label: string,\n  addOnly: bool,\n  options: array,\n  onClick: func,\n  status: string,\n  readOnlyOptions: array\n};\n\nexport default ActionCard;\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './CardsLayout.local.scss';\n\nexport class CardsLayout extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"container\">{children}</div>;\n  }\n}\n\nCardsLayout.propTypes = {\n  children: node\n};\n\nexport default CardsLayout;\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function postInvocation(body) {\n  try {\n    const { data } = await RestClient.post('/invocation', body);\n\n    return { result: data.result, invocations: data.data.invocations };\n  } catch (e) {\n    return { result: 'fail', invocations: [], messages: e.messages };\n  }\n}\n\nexport function requestInvocation(uuid) {\n  return RestClient.get(`/invocation/${uuid}`);\n}\n\nexport async function fetchInvocation(uuid) {\n  try {\n    const response = await RestClient.get(`/invocation/${uuid}`);\n\n    return {\n      result: 'success',\n      invocation: response.data.data.invocations[0]\n    };\n  } catch (e) {\n    console.log(e); // eslint-disable-line\n    return { result: 'fail' };\n  }\n}\n\nexport async function fetchInvocationOutput(uuid) {\n  return RestClient.get(`/invocation/${uuid}/display`, {\n    page_size: 2147483645\n  });\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiSourceRepository,\n  mdiFolderHome,\n  mdiLanConnect,\n  mdiHexagonMultipleOutline\n} from '@mdi/js';\n\nimport extractDefault from './extractDefault';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'float',\n  'integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter',\n  'string',\n  'unsigned_float',\n  'unsigned_integer'\n];\n\nexport default (parameter, dataTypes, prototypes) => {\n  parameter = { ...parameter };\n  parameter.position = parameter.meta.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    parameter.is_supported = false;\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (dataType.name.startsWith('mas0000.sys.account.conn.')) {\n          parameter.is_supported = true;\n        } else {\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.value = 'TEXT';\n  }\n\n  parameter.label = getLabel(parameter.name);\n  parameter.icon = getIcon(parameter.name);\n\n  return parameter;\n};\n\nconst getLabel = name => {\n  return labels[name] || name;\n};\n\nconst getIcon = name => {\n  return icons[name] || null;\n};\n\nconst labels = {\n  target_working_dir: 'Working directory',\n  target_shell: 'Target server SSH',\n  repo_shell: 'Repo server SSH',\n  repo_working_dir: 'Repo directory',\n  form: 'Database form',\n  dbms: 'Target DBMS'\n};\n\nconst icons = {\n  target_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  target_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiSourceRepository} />\n    </SvgIcon>\n  ),\n  dbms: (\n    <SvgIcon>\n      <Icon path={mdiHexagonMultipleOutline} />\n    </SvgIcon>\n  ),\n  form: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  )\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Field } from 'formik';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiLanConnect } from '@mdi/js';\n\nimport './TextField.local.scss';\n\nexport const TextField = ({ parameter }) => {\n  const validate = value => {\n    if (parameter.is_required) {\n      if (!value) {\n        return 'This Field is Required';\n      }\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <MUITextField\n            {...field}\n            variant=\"outlined\"\n            type=\"text\"\n            fullWidth\n            error={meta.error && meta.touched}\n            helperText={meta.touched && meta.error ? meta.error : undefined}\n            label={parameter.label}\n            placeholder={parameter.label}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {parameter.icon ? (\n                    parameter.icon\n                  ) : (\n                    <SvgIcon>\n                      <Icon path={mdiLanConnect} />\n                    </SvgIcon>\n                  )}\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <LightTooltip placement=\"bottom-end\" title={parameter.description}>\n                  <InputAdornment position=\"end\">\n                    <SvgIcon>\n                      <Icon path={mdiHelpCircleOutline} />\n                    </SvgIcon>\n                  </InputAdornment>\n                </LightTooltip>\n              )\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Field } from 'formik';\nimport { array, object } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { mdiLanConnect } from '@mdi/js';\nimport Icon from '@mdi/react';\n\nimport { Dropdown } from 'shared/components';\n\nimport './DropdownField.local.scss';\n\nexport const DropdownField = ({ parameter, datatypes, rawAccounts, forms, prototypes }) => {\n  const dataType = datatypes.find(datatype => datatype.name === parameter.data_type);\n  let protocols = null;\n\n  if (dataType) {\n    if (dataType.name.startsWith('mas0000.sys.account.conn.')) {\n      if (Array.isArray(dataType.protocol) && dataType.protocol.length > 0) {\n        protocols = [];\n        dataType.protocol.forEach(protocol => {\n          if (protocol === 'DBMS') {\n            // This is quick and dirty until we have a configuration-driven solution\n            // in the UI.\n            protocols = [...protocols, 'MSSQL', 'MYSQL', 'ORACLE', 'PGSQL'];\n          } else {\n            protocols.push(protocol);\n          }\n        });\n        const options = rawAccounts\n          .map(account => ({ name: account.name, value: account }))\n          .filter(option => protocols === null || protocols.includes(option.value.protocol));\n\n        const validate = value => {\n          if (parameter.is_required) {\n            if (!value) {\n              return 'This Field is Required';\n            }\n          }\n        };\n\n        return (\n          <Field name={parameter.name} validate={validate}>\n            {({ field, meta }) => {\n              return (\n                <Dropdown\n                  onSelect={(index, opt) => {\n                    field.onChange({ target: { name: parameter.name, value: opt.value } });\n                  }}\n                  target={(meta2, actions) => (\n                    <MUITextField\n                      type=\"text\"\n                      readOnly\n                      variant=\"outlined\"\n                      fullWidth\n                      label={parameter.label}\n                      placeholder={parameter.label}\n                      {...field}\n                      value={field.value ? field.value.name : ''}\n                      onChange={() => {}}\n                      onClick={actions.toggle}\n                      ref={meta2.ref}\n                      error={meta.error && meta.touched}\n                      helperText={meta.touched && meta.error ? meta.error : undefined}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {parameter.icon ? (\n                              parameter.icon\n                            ) : (\n                              <SvgIcon>\n                                <Icon path={mdiLanConnect} />\n                              </SvgIcon>\n                            )}\n                          </InputAdornment>\n                        ),\n\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <ArrowDropDownIcon />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                  )}\n                  items={options}\n                />\n              );\n            }}\n          </Field>\n        );\n      }\n    }\n  } else {\n    const prototype = prototypes.find(p => p.name === parameter.data_type);\n\n    if (prototype) {\n      const options = forms\n        .filter(form => form.prototype === prototype.name)\n        .map(form => ({ name: form.name, value: form.name }));\n\n      const validate = value => {\n        if (parameter.is_required) {\n          if (!value) {\n            return 'This Field is Required';\n          }\n        }\n      };\n\n      return (\n        <Field name={parameter.name} validate={validate}>\n          {({ field, meta }) => {\n            return (\n              <Dropdown\n                onSelect={(index, opt) => {\n                  field.onChange({ target: { name: parameter.name, value: opt.value } });\n                }}\n                target={(meta2, actions) => (\n                  <MUITextField\n                    type=\"text\"\n                    readOnly\n                    variant=\"outlined\"\n                    fullWidth\n                    label={parameter.label}\n                    placeholder={parameter.label}\n                    {...field}\n                    value={field.value ? field.value : ''}\n                    onChange={() => {}}\n                    onClick={actions.toggle}\n                    ref={meta2.ref}\n                    error={meta.error && meta.touched}\n                    helperText={meta.touched && meta.error ? meta.error : undefined}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          {parameter.icon ? (\n                            parameter.icon\n                          ) : (\n                            <SvgIcon>\n                              <Icon path={mdiLanConnect} />\n                            </SvgIcon>\n                          )}\n                        </InputAdornment>\n                      ),\n\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <ArrowDropDownIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                )}\n                items={options}\n              />\n            );\n          }}\n        </Field>\n      );\n    }\n  }\n\n  return <div>Currently not supported inpu</div>;\n};\n\nDropdownField.propTypes = {\n  parameter: object,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  prototypes: array\n};\n","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { ListOutput } from '../ListOutput/ListOutput';\nimport { sendToEmail } from '../../utils/sendToEmail';\nimport { copyToClipboard } from '../../utils/copyToClipboard';\n\nimport './OutputModal.local.scss';\n\nexport const OutputModal = ({\n  open,\n  actions,\n  output,\n  invocation,\n  modalDetails,\n  processName,\n  type,\n  messages\n}) => {\n  let content;\n\n  const [message, setMessage] = useState(messages[0]);\n\n  let interval;\n\n  useEffect(() => {\n    if (messages && messages.length > 1) {\n      if (!open) {\n        clearInterval(interval);\n      } else {\n        let index = 1;\n        interval = setInterval(() => {\n          setMessage(messages[index]);\n          if (index + 1 < messages.length) {\n            index += 1;\n          }\n        }, 4000);\n\n        return () => clearInterval(interval);\n      }\n    }\n  }, [open]);\n\n  if (!output && invocation.status !== 'SUCCEEDED' && invocation.status !== 'FAILED') {\n    content = (\n      <>\n        <Center>\n          <Loader>{message}</Loader>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'FAILED') {\n    content = (\n      <>\n        <Paper.Content scrollable>\n          <ListOutput type=\"fail\" output={output} errors={invocation.errors} />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => sendToEmail(invocation, output, processName)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'SUCCEEDED') {\n    content = (\n      <>\n        <Paper.Content scrollable>\n          <ListOutput output={output} />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => sendToEmail(invocation, output, processName)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '75vh',\n          minHeight: '75vh',\n          width: '75vh',\n          height: '75vh'\n        }}\n      >\n        {type !== 'packaging' && (\n          <ModalHeader\n            title={modalDetails.title}\n            desc={invocation.status === 'FAILED' ? 'An error orccured!' : 'Output'}\n            avatar={\n              <Avatar\n                className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n              >\n                {modalDetails.icon}\n              </Avatar>\n            }\n          />\n        )}\n        {type === 'packaging' && invocation.status === 'FAILED' && (\n          <ModalHeader\n            title={modalDetails.title}\n            desc=\"An error orccured!\"\n            avatar={\n              <Avatar\n                className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n              >\n                {modalDetails.icon}\n              </Avatar>\n            }\n          />\n        )}\n        {content}\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nexport function want(map, Unresolved = () => null, keygen = key => key) {\n  function settler(props) {\n    const key = keygen(props);\n    return map[key] ?? Unresolved;\n  }\n\n  return settler;\n}\n\nexport function wantComponent(settler) {\n  function Picker(props) {\n    const Picked = settler(props);\n\n    return <Picked {...props} />;\n  }\n\n  return Picker;\n}\n","import React, { createContext } from 'react';\nimport uuid from 'uuid';\nimport MUIModal from '@material-ui/core/Modal';\nimport { bool, string, oneOfType, node, func, shape } from 'prop-types';\n\nimport './Modal.local.scss';\n\nimport { ModalHeader } from '../ModalHeader/ModalHeader';\n\nexport const ModalContext = createContext({});\n\nexport const Modal = ({ open, actions, id: providedId, children }) => {\n  const id = providedId || uuid();\n  const aria = {\n    'aria-labelledby': `${id}-modal-title`,\n    'aria-describedby': `${id}-modal-description`\n  };\n\n  return (\n    <ModalContext.Provider value={{ aria, actions }}>\n      <MUIModal {...aria} open={open} onClose={actions.close}>\n        <div className=\"overlay\">\n          {typeof children === 'function' ? children({ id, aria, open, actions }) : children}\n        </div>\n      </MUIModal>\n    </ModalContext.Provider>\n  );\n};\n\nModal.propTypes = {\n  actions: shape({\n    open: func,\n    close: func\n  }),\n  children: oneOfType([node, func]),\n  open: bool,\n  id: string\n};\n\nModal.ModalHeader = ModalHeader;\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  mdiFileTableBox,\n  mdiDatabase,\n  mdiFileTree,\n  mdiTable,\n  mdiAlertOutline,\n  mdiTableColumnWidth,\n  mdiAlphaPBox,\n  mdiInboxFull,\n  mdiInbox\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './root.local.scss';\n\nconst VerticalUsageBar = ({ usage, className }) => {\n  let fill;\n  if (usage > 75) {\n    fill = '#ED3A4A';\n  } else if (usage > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  return (\n    <div className={className}>\n      <svg viewBox=\"-2 -2 62 102\">\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" height=\"100\" width=\"60\" fill=\"rgba(12, 50, 110, 0.38)\" />\n        <rect x=\"0\" y={100 - usage} rx=\"8\" ry=\"8\" height={usage} width=\"60\" fill={fill} />\n      </svg>\n    </div>\n  );\n};\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nconst SidebarStorageItem = ({ ns, usage, setItem, isSelected }) => (\n  <div\n    className={classnames('sidebar-item', { selected: isSelected })}\n    role=\"button\"\n    onClick={() => setItem(ns)}\n  >\n    <VerticalUsageBar usage={usage} className=\"usage-icon\" />\n    {ns}\n  </div>\n);\n\nexport const StorageSidebar = ({ list, setItem, selectedItem, dbName, isLoading }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiFileTableBox} />\n        </SvgIcon>\n        {dbName} Used Storage\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <CircularProgress />\n          </Center>\n        ) : (\n          list.map((element, index) => (\n            <SidebarStorageItem\n              isSelected={selectedItem === element.ns}\n              key={index}\n              {...element}\n              setItem={setItem}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst iconMapper = {\n  triggers: { icon: mdiAlertOutline, label: 'Triggers' },\n  tables: { icon: mdiTable, label: 'Tables' },\n  indexes: { icon: mdiTableColumnWidth, label: 'Indexes' },\n  procedures: { icon: mdiAlphaPBox, label: 'Procedures' },\n  packages: { icon: mdiInbox, label: 'Packages' },\n  packageBodies: { icon: mdiInboxFull, label: 'Package Bodies' }\n};\n\nconst objectsSidebarMapper = (setItem, selectedItem, invalidObjects) => (\n  { owner, objects },\n  index\n) => {\n  const isSelected = owner === selectedItem.owner;\n  const invalidChildren = invalidObjects.filter(({ owner: name }) => name === owner);\n  return (\n    <>\n      <div\n        key={index}\n        className={classnames('sidebar-item', {\n          selected: isSelected,\n          'rotate-cw': !isSelected,\n          'rotate-ccw': isSelected\n        })}\n        role=\"button\"\n        onClick={() => setItem({ owner: isSelected ? null : owner, object: null })}\n      >\n        <SvgIcon>\n          <path d={mdiFileTree} />\n        </SvgIcon>\n        {owner}\n      </div>\n      {isSelected &&\n        objects.map((object, i) => {\n          const isObjectSelected = object === selectedItem.object;\n          const isInvalid = invalidChildren.findIndex(({ object: name }) => name === object) !== -1;\n          return (\n            <div\n              key={`${index}_${i}`}\n              className={classnames('child', 'sidebar-item', {\n                selected: isObjectSelected,\n                invalid: isInvalid\n              })}\n              role=\"button\"\n              onClick={() => setItem({ owner, object })}\n            >\n              <SvgIcon>\n                <path d={iconMapper[object].icon} />\n              </SvgIcon>\n              {iconMapper[object].label}\n            </div>\n          );\n        })}\n    </>\n  );\n};\n\nexport const ObjectsSidebar = ({\n  dbName,\n  setItem,\n  selectedItem,\n  list,\n  isLoading,\n  invalidObjects\n}) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiDatabase} />\n        </SvgIcon>\n        {dbName} Owners\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <CircularProgress />\n          </Center>\n        ) : (\n          <Overflow>\n            {list.map(objectsSidebarMapper(setItem, selectedItem, invalidObjects))}\n          </Overflow>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  mdiHelpRhombusOutline,\n  mdiTable,\n  mdiFileTableBox,\n  mdiArrangeBringToFront,\n  mdiFlashCircle\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './root.local.scss';\n\nconst KPIDisplay = ({ value, suffix, colorFormatting = false }) => {\n  let fill;\n  if (value > 75) {\n    fill = '#ED3A4A';\n  } else if (value > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  const digits = value > 10 ? 0 : 2;\n  const valueString = value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: digits\n  });\n  return (\n    <span style={colorFormatting ? { color: fill } : {}}>\n      {valueString}\n      {suffix}\n    </span>\n  );\n};\n\nconst NoDataComponent = ({ name }) => (\n  <div className=\"content dashed-and-centered\">\n    <SvgIcon>\n      <path d={mdiHelpRhombusOutline} />\n    </SvgIcon>\n    <p>Please select a {name} in order to view its children</p>\n  </div>\n);\n\nconst StorageDetailsList = ({ data, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const { tablespace, files } = data;\n\n  if (!tablespace || !tablespace.ns) {\n    return <NoDataComponent name=\"tablespace\" />;\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"detail-row\">\n        <div className=\"ts-name\">\n          <SvgIcon>\n            <path d={mdiFileTableBox} />\n          </SvgIcon>\n          {tablespace.ns}\n        </div>\n        <div className=\"details\">\n          <div className=\"block\">\n            <div className=\"top\">Total:</div>\n            <div>\n              <KPIDisplay value={tablespace.totalGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used size:</div>\n            <div>\n              <KPIDisplay value={tablespace.usedGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used %:</div>\n            <div>\n              <KPIDisplay value={tablespace.usage} suffix=\"%\" colorFormatting />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free size:</div>\n            <div>\n              <KPIDisplay value={tablespace.freeGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free %:</div>\n            <div>\n              <KPIDisplay value={tablespace.freePerc} suffix=\"%\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      {files.map(({ PCT_USED, FILE_NAME, SIZE_MB, MAXSIZE_MB }, index) => {\n        const filePath = FILE_NAME.split('/');\n        const [fileName, extension] = filePath[filePath.length - 1].split('.');\n        return (\n          <div key={index} className=\"detail-row\">\n            <div className=\"file-name\">\n              <SvgIcon>\n                <path d={mdiTable} />\n              </SvgIcon>\n              {fileName}\n              <span className=\"extension\">.{extension}</span>\n            </div>\n            <div className=\"details\">\n              <div className=\"block\">\n                <div className=\"top\">Used %:</div>\n                <div>\n                  <KPIDisplay value={PCT_USED} suffix=\"%\" colorFormatting />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Size:</div>\n                <div>\n                  <KPIDisplay value={SIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Max size:</div>\n                <div>\n                  <KPIDisplay value={MAXSIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const StorageViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiTable} />\n        </SvgIcon>\n        Tables\n      </div>\n      <StorageDetailsList data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport const ObjectsViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiArrangeBringToFront} />\n        </SvgIcon>\n        Objects\n      </div>\n      {!data || data.length === 0 ? (\n        <NoDataComponent name=\"object\" />\n      ) : (\n        <div className=\"content\">\n          <Overflow>\n            {!isLoading ? (\n              data.map(({ OBJECT_NAME, CREATED, OBJECT_ID, LAST_DDL_TIME }) => {\n                return (\n                  <div key={OBJECT_ID} className=\"detail-row\">\n                    <div className=\"file-name\">\n                      <SvgIcon>\n                        <path d={mdiFlashCircle} />\n                      </SvgIcon>\n                      {OBJECT_NAME}\n                    </div>\n                    <div className=\"details\">\n                      <div className=\"object-block\">\n                        <div className=\"top\">Last DDL Time</div>\n                        <div>{LAST_DDL_TIME}</div>\n                      </div>\n                      <div className=\"object-block\">\n                        <div className=\"top\">Created</div>\n                        <div>{CREATED}</div>\n                      </div>\n                      {/* Designs have some buttons here */}\n                    </div>\n                  </div>\n                );\n              })\n            ) : (\n              <Center>\n                <CircularProgress />\n              </Center>\n            )}\n          </Overflow>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { WantParameter } from './wishes';\n\nexport function RepeatableParameter({ normalized, ...others }) {\n  return <WantParameter parameter={normalized} {...others} />;\n}\n\nexport const Parameter = ({ normalized, ...others }) => {\n  if (normalized.is_repeatable) {\n    return <RepeatableParameter {...others} normalized={normalized} />;\n  }\n\n  return <WantParameter {...others} parameter={normalized} />;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postForm(name, body) {\n  return RestClient.post(`/form/${name}/clone`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function createForm(body) {\n  return RestClient.post('/form', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function updateForm(name, body) {\n  return RestClient.patch(`/form/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useReducer, createContext } from 'react';\n\nimport _ from 'lodash';\n\nimport { produce } from 'immer';\n\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { QualifiedName, FormPrototypeSelect } from 'shared/components/form/editors/Custom';\n\nimport { space_summon } from 'shared/components/form/parameters/normalizeParameter';\n\nimport { FormParameters } from './FormParameters';\n\nimport { groupForm, ungroupForm } from './utils';\n\nimport { createForm, updateForm } from 'shared/api/form';\n\nconst groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_GROUP_INSTANCE': {\n      return produce(state, draft => {\n        draft.groups[action.pointers.group].instances.push(action.instance);\n      });\n    }\n\n    case 'REMOVE_GROUP_INSTANCE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances.splice(pointers.instance, 1);\n      });\n    }\n    case 'ADD_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        const field =\n          draft.groups[pointers.group].instances[pointers.instance].fields[pointers.field];\n\n        field.values.push({ instance: field.values.length, value: null });\n      });\n    }\n    case 'REMOVE_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances[pointers.instance].fields[\n          pointers.field\n        ].values.splice(action.index, 1);\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const PackedContext = createContext({ groups: [] });\n\nexport function FormEditor({ isNew, form, prototype, setResult }) {\n  const initialPacked = groupForm(prototype, _.cloneDeep(form));\n  /** Prepare initial relative name */\n  const split_name = form?.name?.split?.('.') || [''];\n\n  initialPacked.name = _.last(split_name);\n\n  const [packed, dispatch] = useReducer(groupsReducer, initialPacked);\n\n  const contextValue = { packed, dispatch };\n\n  return (\n    <PackedContext.Provider value={contextValue}>\n      <Formik\n        initialValues={{}}\n        onSubmit={(values, actions) =>\n          handleSubmit({\n            form,\n            packed,\n            isNew,\n            prototype,\n            values,\n            actions,\n            setResult\n          })\n        }\n      >\n        {({ values }) => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Form details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <QualifiedName name=\"form_name\" label=\"Name\" value={packed.name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"description\"\n                          label=\"Description\"\n                          value={packed.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column>\n                          <FormPrototypeSelect\n                            value={prototype?.name}\n                            disabled\n                            label=\"Form\"\n                            name=\"prototype\"\n                          />\n                        </Column>\n                      </Row>\n                      <FormParameters packed={packed} prototype={prototype} />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </PackedContext.Provider>\n  );\n}\n\nasync function handleSubmit({\n  prototype,\n  packed,\n  values,\n  actions,\n  setResult,\n  refresh,\n  isNew,\n  form\n}) {\n  const { form_name, description, prototype: protoName, ...fields } = values;\n\n  const extracted = extractFieldInfo(fields);\n\n  const exclusions = [null, 'None', ''];\n\n  const filteredExtractions = extracted.filter(entry => !exclusions.includes(entry.val));\n\n  const packedCopy = _.cloneDeep(packed);\n\n  /**\n   * Update name and description\n   */\n\n  /**\n   * extract and remap field values.\n   */\n  filteredExtractions.forEach(entry => {\n    const path = `groups[${entry.group}].instances[${entry.instance}].fields[${entry.field}].values[${entry.index}].value`;\n\n    _.set(packedCopy, path, entry.value);\n  });\n\n  /**\n   * unpack and prepare for sending\n   */\n  const unpacked = ungroupForm(packedCopy);\n\n  /**\n   * Very Important!\n   * Please read.\n   * Another cleanup process is needed.\n   * So there cannot be values for repeatable parameters where there is an empty array.\n   * It requires for some DAMNED reason, to have at least one null value.\n   */\n  unpacked.values = unpacked.values.map(value => {\n    if (Array.isArray(value.value)) {\n      /** for some reason, it's not removed from the first iteration for values. */\n      const filtered = { ...value, value: value.value.filter(v => !!v) };\n\n      if (filtered.value.length === 0) {\n        filtered.value = [null];\n      }\n\n      return filtered;\n    }\n\n    return value;\n  });\n\n  const name = form_name;\n\n  unpacked.name = name;\n\n  if (!isNew) {\n    const rename = [..._.initial(form.name.split('.')), form_name].join('.');\n    if (rename !== form.name) {\n      unpacked.rename = rename;\n      delete unpacked.name;\n    }\n  }\n\n  unpacked.description = description;\n  unpacked.prototype = protoName;\n  unpacked.version = prototype.version;\n\n  const request = isNew ? createForm : updateForm;\n\n  const request_args = [unpacked];\n\n  if (!isNew) {\n    // prepend name to request arguments.\n    request_args.unshift(form.name);\n  }\n\n  try {\n    await request(...request_args);\n    setResult('success');\n  } catch (e) {\n    setResult('fail');\n  }\n}\n\n// /** berry important :) */\nfunction extractFieldInfo(all) {\n  const key_struct = /^group-(\\d+)-instance-(\\d+)-field-(\\d+)-value-(\\d+)---(\\w+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      name: space_summon(matched[5]),\n      index: matched[4],\n      field: matched[3],\n      instance: matched[2],\n      lower: matched[1],\n      group: matched[1],\n      value\n    };\n  });\n}\n","import moment from 'moment';\n\nimport { getOutputText } from './getOutputText';\n\nexport const sendToEmail = (invocation, output, processName) => {\n  const text = getOutputText(output, invocation);\n  const date = moment(invocation.date_invoke)\n    .utc()\n    .format('MMMM, DD, YYYY, H:mm:ss');\n  const subject = processName ? `${processName} output` : 'Job output';\n  const body = `PROCESS: ${processName}\\nDATE: ${date}\\nSTATUS: ${invocation.status}\\n\\nOUTPUT:\\n\\n${text}`;\n  window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(body)}`;\n};\n","import { getOutputText } from './getOutputText';\n\nexport const copyToClipboard = (output, invocation) => {\n  const text = getOutputText(output, invocation);\n  navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\n    if (result.state === 'granted' || result.state === 'prompt') {\n      /* write to the clipboard */\n      navigator.clipboard.writeText(text).then(\n        () => {\n          /* successful */\n          console.log('[copyTextToClipboard] Copied:', text); // eslint-disable-line\n        },\n        () => {\n          /* write failed */\n          console.warn('[copyTextToClipboard] --- unable to write to clipboard!'); // eslint-disable-line\n        }\n      );\n    } else {\n      legacyMethod(text);\n    }\n  }, legacyMethod.bind(this, text));\n};\n\nfunction legacyMethod(text) {\n  const textArea = document.createElement('textarea');\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.classList.add('copyToClipboardInput');\n  textArea.focus();\n  textArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textArea);\n  console.log('[copyTextToClipboard-legacy] Copied:', text); // eslint-disable-line\n}\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nexport default function MUIselect({ label, handleSelect, selectedOption, options, disabled }) {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const inputLabel = React.useRef(null);\n  const selectedValue = selectedOption ? selectedOption.value : '';\n\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleChange = event => {\n    const findItem = options.find(item => item.value === event.target.value);\n    if (findItem) {\n      handleSelect(findItem);\n    }\n  };\n\n  return (\n    <FormControl disabled={disabled} fullWidth variant=\"outlined\">\n      <InputLabel ref={inputLabel} htmlFor=\"demo-simple-select-outlined-label\">\n        {label}\n      </InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        value={selectedValue}\n        onChange={handleChange}\n        labelWidth={labelWidth}\n      >\n        {options.map(item => (\n          <MenuItem key={item.value} disabled={item.disabled} value={item.value}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './center.local.scss';\n\nexport class CenterComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport default CenterComponent;\n\nCenterComponent.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nCenterComponent.defaultProps = {\n  className: 'center-container'\n};\n","import moment from 'moment';\n\nexport function isBeforeDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n\n  const aYear = a.year();\n  const aMonth = a.month();\n\n  const bYear = b.year();\n  const bMonth = b.month();\n\n  const isSameYear = aYear === bYear;\n  const isSameMonth = aMonth === bMonth;\n\n  if (isSameYear && isSameMonth) return a.date() < b.date();\n  if (isSameYear) return aMonth < bMonth;\n  return aYear < bYear;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nimport './Checkbox.local.scss';\n\nexport const Checkbox = ({ label, disabled, ...rest }) => {\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className=\"checkbox-label\"\n      control={\n        <MUICheckbox\n          className=\"checkbox\"\n          color=\"primary\"\n          icon={<CheckBoxOutlineBlankIcon />}\n          checkedIcon={<CheckBoxIcon />}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  label: node,\n  disabled: bool\n};\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { string, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Overflow.scss';\n\nexport const Overflow = ({ className, component, children, variant }) => {\n  const nodeRef = useRef(null);\n  const [scrollableX, setScrollableX] = useState(false);\n  const [scrollableY, setScrollableY] = useState(false);\n  const [scrolledX, setScrolledX] = useState(false);\n  const [scrolledY, setScrolledY] = useState(false);\n\n  const Tag = component || 'div';\n\n  const onScroll = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolledY) {\n          setScrolledY(true);\n        }\n      } else if (scrolledY) {\n        setScrolledY(false);\n      }\n\n      if (event.currentTarget.scrollLeft) {\n        if (!scrolledX) {\n          setScrolledX(true);\n        }\n      } else if (scrolledX) {\n        setScrolledX(false);\n      }\n    },\n    [scrollableX, scrollableY, scrolledX, scrolledY]\n  );\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const element = nodeRef.current;\n      const box = {\n        width: element.clientWidth,\n        height: element.clientHeight,\n        scrollHeight: element.scrollHeight,\n        scrollWidth: element.scrollWidth\n      };\n\n      if (box.width < box.scrollWidth && !scrollableX) {\n        setScrollableX(true);\n      }\n\n      if (box.height < box.scrollHeight && !scrollableY) {\n        setScrollableY(true);\n      }\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={classnames(\n        'overflow-container',\n\n        {\n          [variant]: variant,\n          scrollableX,\n          scrollableY,\n          scrolledX,\n          scrolledY\n        },\n        className\n      )}\n    >\n      <Tag ref={nodeRef} className={classnames('overflow-scroller')} onScroll={onScroll}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nOverflow.propTypes = {\n  children: node,\n  className: string,\n  variant: oneOf(['white'])\n};\n\nOverflow.defaultProps = {};\n","import React, { useContext } from 'react';\nimport { string, node, func, shape, bool } from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { ModalContext } from '../Modal/Modal';\n\nimport './ModalHeader.local.scss';\n\nexport const ModalHeader = ({\n  avatar,\n  icon,\n  title,\n  desc,\n  closeable,\n  onClose,\n  aria: providedAria\n}) => {\n  const context = useContext(ModalContext);\n  const aria = context.aria || providedAria;\n  const actions = context.actions || { close: onClose };\n\n  return (\n    <header className=\"modal-header\">\n      {avatar && <div className=\"icon-slot\">{avatar}</div>}\n      {/** TODO: this should actually be avatar :((( ... don't have time to refactor now need to patch through */}\n      {icon && (\n        <div className=\"icon-slot\">\n          <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n            {icon}\n          </Avatar>\n        </div>\n      )}\n      <div className=\"modal-title-slot\" id={aria['aria-labelledby']}>\n        <h1 className=\"modal-title\">{title}</h1>\n        {desc && (\n          <p className=\"modal-desc\" id={aria['aria-describedby']}>\n            {desc}\n          </p>\n        )}\n      </div>\n      {closeable && actions.close && (\n        <div className=\"modal-close-button-slot\">\n          <button className=\"modal-close-button\" onClick={actions.close}>\n            <CloseIcon fontSize=\"large\" />\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nModalHeader.propTypes = {\n  title: node,\n  desc: node,\n  onClose: func,\n  closeable: bool,\n  avatar: node,\n  icon: node,\n  aria: shape({\n    'aria-labelledby': string,\n    'aria-describedby': string\n  })\n};\n\nModalHeader.defaultProps = {\n  closeable: true\n};\n","export default (task, duration = 10000) => {\n  let running = false;\n\n  async function runTask() {\n    if (!running) {\n      return;\n    }\n\n    try {\n      await task();\n      running = false;\n    } catch (e) {\n      setTimeout(() => runTask(), duration);\n    }\n  }\n\n  return {\n    start() {\n      if (running) {\n        return;\n      }\n      running = true;\n      runTask();\n    },\n    stop() {\n      running = false;\n    }\n  };\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\nimport { mdiFilter } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nimport { Dropdown } from 'shared/components';\nimport { DayFilterEditor } from './components/day-filter-editor/day-filter-editor';\nimport { UserFilterEditor } from './components/user-filter-editor/user-filter-editor';\nimport { StatusFilterEditor } from './components/status-filter-editor/status-filter-editor';\nimport { FilterChip } from './components/filter-chip/filter-chip';\nimport { FilterLoader } from './components/filter-loader/filter-loader';\n\nimport './add-filter.local.scss';\n\n/**\n * TODO: @Razvan, @Constantin\n *\n * Review component structure / split smaller compoenents.\n * Add support for filters array. For now linked to search-area-container.jsx\n */\n\nfunction checkFilters(filters) {\n  if (!filters) {\n    return false;\n  }\n\n  if (filters.length) {\n    return true;\n  }\n\n  return true;\n}\n\nexport class AddFilter extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      /* draft: any filter value type */\n    };\n  }\n\n  filterRef = React.createRef();\n\n  render() {\n    const { filters, hasSearchTerm } = this.props;\n    const { draft } = this.state;\n    const hasFilters = checkFilters(filters);\n\n    return (\n      <ClickAwayListener onClickAway={this.handleClickOutside}>\n        <div>\n          {(!draft && !hasFilters && !hasSearchTerm) && this.renderDropdown()}\n          {draft && <FilterLoader type={draft.type} setFilterValue={this.saveDraftFilter} />}\n          {hasFilters && <FilterChip value={filters.value} type={filters.type} save={this.saveDraftFilter} />}\n        </div>\n      </ClickAwayListener>\n    );\n  }\n\n  handleClickOutside = () => {\n    this.setState({ draft: null });\n  }\n\n  saveDraftFilter = (filter) => {\n    this.props.updateFilters(filter);\n    // clear draft\n    this.setState({ draft: null });\n  }\n\n  loadFilter = (index, filter) => {\n    this.setState({ draft: { type: filter.value, editing: true } });\n  }\n\n  mapDropdownItem = (Item) => (\n    ({ ...Item, icon: <Item.icon />, name: <Item.name /> })\n  )\n\n  renderDropdown() {\n    return (\n      <Dropdown\n        target={(meta, actions) => (\n          <Button\n            size=\"small\"\n            className={`add-filter qa-add-filter ${(meta.isOpen ? 'expanded' : '')}`}\n            startIcon={<SvgIcon><Icon path={mdiFilter} /></SvgIcon>}\n            endIcon={meta.isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n            onClick={actions.toggle}\n            ref={meta.ref}\n          >\n            <FormattedMessage id=\"dashboard.add-filter\" />\n          </Button>\n        )}\n        onSelect={this.loadFilter}\n        items={[\n          DayFilterEditor.TypeDescriptor,\n          StatusFilterEditor.TypeDescriptor,\n          UserFilterEditor.TypeDescriptor,\n        ].map(this.mapDropdownItem, this)}\n      />\n    );\n  }\n}\n\nAddFilter.propTypes = {\n  filters: PropTypes.object,\n  updateFilters: PropTypes.func.isRequired,\n  hasSearchTerm: PropTypes.bool,\n};\n\nAddFilter.defaultProps = {\n  filters: {},\n  hasSearchTerm: false,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { DayFilterEditor } from '../day-filter-editor/day-filter-editor';\nimport { UserFilterEditor } from '../user-filter-editor/user-filter-editor';\nimport { StatusFilterEditor } from '../status-filter-editor/status-filter-editor';\n\nexport const FilterLoader = ({ type, setFilterValue, ...others }) => {\n  const FILTERS_MAP = {\n    status: StatusFilterEditor,\n    day: DayFilterEditor,\n    user: UserFilterEditor,\n  };\n\n  const FilterComponent = FILTERS_MAP[type];\n\n  return <FilterComponent setFilterValue={setFilterValue} {...others} />;\n};\n\nFilterLoader.propTypes = {\n  type: PropTypes.string.isRequired,\n  setFilterValue: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { ScheduleModal } from './components/ScheduleModal/ScheduleModal';\n\nexport const Schedule = ({ invocation }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const onClickHandler = () => {\n    setOpen(true);\n  };\n\n  const btnLabel = invocation ? 'Schedule' : 'New Schedule';\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          onClickHandler();\n        }}\n      >\n        {btnLabel}\n      </Button>\n      <ScheduleModal open={open} actions={modalActions} invocation={invocation} />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getNamespace, patchNamespace, postNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsNamespace = ({ entity }) => {\n  return (\n    <>\n      <ConnectedNewNamespace namespace={entity} />\n      {hasWritePrivileges(entity) && <ConnectedEditNamespace namespace={entity} />}\n    </>\n  );\n};\n\nexport default ActionsNamespace;\n\nexport const ConnectedEditNamespace = connect(null, {\n  request: fetchEntity\n})(EditNamespace);\n\nfunction EditNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = namespace.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.description = description;\n\n    return values;\n  };\n\n  const getNamespaceDetails = name => {\n    getNamespace(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.namespaces &&\n          data.data.data.namespaces[0] &&\n          data.data.data.namespaces[0].description\n        ) {\n          setDescription(data.data.data.namespaces[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get namespace] error getting namespace details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getNamespaceDetails(namespace.name);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={handleSubmit.bind(this, setResult, request)}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"namespace (leave blank for relative name)\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  patchNamespace(body.name, body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedNewNamespace = connect(null, {\n  request: fetchEntity\n})(NewNamespace);\n\nfunction NewNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Namespace\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: namespace ? namespace.name : '',\n                  description: ''\n                }}\n                onSubmit={handleSubmitNew.bind(this, setResult, request)}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"namespace (leave blank for relative name)\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  postNamespace(body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { FormEditor } from './FormEditor';\n\nexport const ConnectedFormModal = connect(null, {\n  refresh: fetchEntity\n})(FormModal);\n\nfunction FormModal({ disabled, form = null, prototype, refresh }) {\n  const isNew = form === null;\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('use_form');\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult('use_form');\n      setOpen(false);\n      // should refresh be here as well?\n      // refresh('form');\n    }\n  };\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        {isNew ? 'New Form' : 'Edit'}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title={`${isNew ? 'New' : 'Edit'} Form`}\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"use_form\">\n              <FormEditor isNew={isNew} form={form} prototype={prototype} setResult={setResult} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was {isNew ? 'created' : 'updated'} successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      refresh('form');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Integer, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\n\nexport const ServerForm = ({ server = {}, protocols, handleSubmission, editing, isNew }) => {\n  const [submission, setSubmission] = useState({});\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [showRSA, setShowRSA] = useState(false);\n  const handleAccountCreation = getCreateAccountHandler({\n    showRSA,\n    passwordEditable,\n    setSubmission,\n    isNew,\n    server\n  });\n\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  function mapServerValues(entry) {\n    return {\n      name: entry.name || '',\n      description: entry.description || '',\n      host: entry.address || '',\n      port: entry.port || '',\n      server_user: entry.user || '',\n      server_password: entry.user_key || '',\n      confirm_server_password: '',\n      rsa_key: entry.user_key || '',\n      protocol: 'SSH'\n    };\n  }\n\n  const initialValues = mapServerValues(server);\n\n  let extraValidations;\n\n  if (passwordEditable && !showRSA) {\n    extraValidations = values => {\n      const errors = {};\n\n      if (values.server_password !== values.confirm_server_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n\n      return errors;\n    };\n  }\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          validateOnChange={false}\n          validateOnMount={false}\n        >\n          {({ handleSubmit, dirty, isSubmitting }) => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column>\n                          <Row>\n                            <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                          </Row>\n                          <Row>\n                            <Column>\n                              <Text\n                                name=\"protocol\"\n                                required\n                                label=\"Protocol\"\n                                disabled={!isNew}\n                                options={allowedProtocols.map(p => ({\n                                  value: p.name,\n                                  label: p.name\n                                }))}\n                                value={initialValues.protocol}\n                              />\n                            </Column>\n                          </Row>\n                        </Column>\n                        <Column>\n                          <Text\n                            name=\"description\"\n                            multiline\n                            required\n                            label=\"Description\"\n                            value={initialValues.description}\n                          />\n                        </Column>\n                      </Row>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column style={{ maxWidth: '80%', width: '80%' }}>\n                          <Text\n                            name=\"host\"\n                            label=\"Host\"\n                            required\n                            value={initialValues.host}\n                            disabled={editing}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Integer name=\"port\" required label=\"Port\" value={initialValues.port} />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column>\n                          <Text\n                            name=\"server_user\"\n                            label=\"User\"\n                            required\n                            value={initialValues.user}\n                          />\n                        </Column>\n                        {passwordEditable && <PasswordOrRSA allowed showRSA={showRSA} />}\n                      </Row>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing passsword\n                        </Button>\n                      )}\n                      {passwordEditable && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <Button disabled={!dirty || isSubmitting} onClick={handleSubmit}>\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" required label=\"RSA Key\" />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row>\n          <Password name=\"server_password\" label=\"Password\" required />\n        </Row>\n        <Row>\n          <Password name=\"confirm_server_password\" label=\"Confirm Password\" required />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ showRSA, passwordEditable, setSubmission, isNew, server }) {\n  return function handleAccountCreation(values) {\n    const request_body = {\n      protocol: 'SSH',\n      user: values.server_user,\n      description: values.description,\n      address: values.host,\n      ...(passwordEditable && {\n        user_key: showRSA ? values.rsa_key : values.server_password\n      }),\n      port: Number.parseInt(values.port, 10)\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(server.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handleSubmission) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    // add this entry to redux structure\n    // addNewAccount(newAccount);\n    handleSubmission();\n  };\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { TextField } from 'shared/components/form';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\n\nimport _ from 'lodash';\n\nexport const DatabaseForm = ({\n  account = {},\n  protocols = [],\n  modes,\n  handleSubmission,\n  editing,\n  isNew\n}) => {\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [submission, setSubmission] = useState({});\n  const allowedProtocols = protocols.filter(p => {\n    const special = p?.special_required;\n\n    return special && special.includes('database');\n  });\n  const [showRSA, setShowRSA] = useState(false);\n\n  const handleAccountCreation = getCreateAccountHandler({\n    protocols: allowedProtocols,\n    modes,\n    showRSA,\n    isNew,\n    setSubmission,\n    account\n  });\n\n  function mapAccountValues(entry = {}) {\n    return {\n      name: _.get(entry, 'name', ''),\n      protocol: _.get(entry, 'protocol', ''),\n      description: _.get(entry, 'description', ''),\n\n      host: _.get(entry, 'address', ''),\n\n      port: _.get(entry, 'port', ''),\n\n      database: _.get(entry, 'special.database', ''),\n      user: _.get(entry, 'user', ''),\n      mode: _.get(entry, 'special.mode', '')\n    };\n  }\n\n  const initialValues = mapAccountValues(account);\n\n  let extraValidations;\n\n  if (passwordEditable && !showRSA) {\n    extraValidations = values => {\n      const errors = {};\n\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n\n      return errors;\n    };\n  }\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          validateOnChange={false}\n          validateOnMount={false}\n        >\n          {({ values, handleSubmit, dirty, isSubmitting }) => {\n            const selectedProtocol =\n              values.protocol && protocols.find(protocol => protocol.name === values.protocol);\n            const allowRSA = !!selectedProtocol?.allow_rsa_key;\n            const withDatabase = selectedProtocol?.special_required?.includes('database');\n            const withMode = selectedProtocol?.name === 'ORACLE';\n\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column>\n                            <Row padded>\n                              <TextField\n                                parameter={{ name: 'name', is_required: true, label: 'Name' }}\n                              />\n                            </Row>\n                            <Row padded>\n                              <TextField\n                                parameter={{\n                                  name: 'protocol',\n                                  is_required: true,\n                                  label: 'Protocol'\n                                }}\n                                select\n                              >\n                                {allowedProtocols.map(p => (\n                                  <MenuItem key={p.name} value={p.name}>\n                                    {p.name}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Row>\n                          </Column>\n                          <Column>\n                            <TextField\n                              multiline\n                              rows=\"7\"\n                              parameter={{\n                                name: 'description',\n                                is_required: true,\n                                label: 'Description'\n                              }}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column style={{ maxWidth: '80%', width: '80%' }}>\n                            <TextField\n                              parameter={{ name: 'host', is_required: true, label: 'Host' }}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <TextField\n                              type=\"number\"\n                              parameter={{ name: 'port', is_required: true, label: 'Port' }}\n                            />\n                          </Column>\n                        </Row>\n                        <Row>\n                          {withDatabase && (\n                            <Column style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}>\n                              <TextField\n                                parameter={{\n                                  name: 'database',\n                                  is_required: true,\n                                  label: 'Database'\n                                }}\n                              />\n                            </Column>\n                          )}\n                          {withMode && (\n                            <Column style={{ maxWidth: '20%' }}>\n                              <TextField\n                                parameter={{\n                                  name: 'mode',\n                                  is_required: true,\n                                  label: 'Mode'\n                                }}\n                                select\n                              >\n                                {modes.map(mode => (\n                                  <MenuItem key={mode.label} value={mode.label}>\n                                    {mode.label}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Column>\n                          )}\n                        </Row>\n                        <Row>\n                          <Column>\n                            <TextField\n                              parameter={{ name: 'user', is_required: true, label: 'User' }}\n                            />\n                          </Column>\n                          {passwordEditable && (\n                            <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                          )}\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing passsword\n                        </Button>\n                      )}\n                      {passwordEditable && allowRSA && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && allowRSA && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <Button disabled={!dirty || isSubmitting} onClick={handleSubmit}>\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <TextField\n          multiline\n          rows=\"7\"\n          parameter={{ name: 'rsa_key', is_required: true, label: 'RSA Key' }}\n        />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row padded>\n          <TextField\n            type=\"password\"\n            parameter={{ name: 'password', is_required: true, label: 'Password' }}\n          />\n        </Row>\n        <Row padded>\n          <TextField\n            type=\"password\"\n            parameter={{ name: 'confirm_password', is_required: true, label: 'Confirm Password' }}\n          />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ protocols, showRSA, setSubmission, isNew, account }) {\n  return function handleAccountCreation(values) {\n    const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n    const allowRSA = !!selectedProtocol?.allow_rsa_key;\n    const withDatabase = selectedProtocol?.special_required?.includes('database');\n    const withMode = selectedProtocol?.name === 'ORACLE';\n\n    const request_body = {\n      user: values.user,\n      description: values.description,\n      protocol: values.protocol,\n      address: values.host,\n      user_key: allowRSA && showRSA ? values.rsa_key : values.password,\n      port: Number.parseInt(values.port, 10),\n      special: {\n        ...(withDatabase && { database: values.database }),\n        ...(withMode && { mode: values.mode })\n      }\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(account.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handler) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    handler();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchDataTypes(type = '') {\n  try {\n    const { data } = await RestClient.get(\n      `${CONSTANTS.BASE.ENDPOINTS.DATATYPES}${type ? `/${type}` : ''}`\n    );\n\n    return { result: data.result, data_types: data.data.data_types };\n  } catch (e) {\n    return { result: 'fail', data_types: [] };\n  }\n}\n","import { requestInvocation } from 'shared/api/invocation';\n\nexport function processQuery(uuid, process) {\n  return {\n    type: 'PROCESS_QUERY',\n    uuid,\n    process\n  };\n}\n\nexport function fetchInvocation(uuid, process) {\n  return function thunk(dispatch) {\n    dispatch({\n      type: 'FETCH_INVOCATION',\n      uuid,\n      process,\n      promise: requestInvocation(uuid)\n    });\n  };\n}\n\nexport function updateInvocation(invocation) {\n  return {\n    type: 'UPDATE_INVOCATION',\n    invocation\n  };\n}\n","export const getOutputText = (output, invocation) => {\n  if (!invocation || (!output && invocation.status !== 'FAILED')) return '';\n\n  let outputText = '';\n\n  if (invocation.status === 'FAILED') {\n    outputText = `The following error(s) occured:\n      ${invocation.errors.map(error => `• ${error}`).join('\\n')}\\n ${\n      output && output.length > 0 ? `Output: \\n${output.map(row => row.data.text).join('\\n')}` : ''\n    }`;\n  } else {\n    outputText = output.map(row => row.data.text).join('\\n');\n  }\n\n  return outputText;\n};\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiCubeOutline, mdiCubeScan, mdiMemory, mdiCalendarBlank } from '@mdi/js';\nimport Cores from '../../../../assets/images/server_core.svg';\n\nimport './ServerCard.local.scss';\n\nexport const ServerCard = ({ server, selected, toggleSelectedCallback, type }) => {\n  if (type === 'virtual') {\n    return (\n      <div className=\"virtual-server-card\">\n        <Avatar className=\"server-avatar\">\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </Avatar>\n        <div className=\"server-info\">\n          <span className=\"name\">{server.name}</span>\n          <div className=\"details\">\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiCubeScan} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.hosts}</span>\n              <span className=\"label\">Hosts</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiMemory} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.cpu}</span>\n              <span className=\"label\">CPUs</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <img className=\"img-responsive\" src={Cores} alt=\"server core icon\" />\n              </span>\n              <span className=\"value\">{server.cores}</span>\n              <span className=\"label\">Cores</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classnames('server-card', { selected })}\n      onClick={() => toggleSelectedCallback(server)}\n      role=\"presentation\"\n    >\n      <Avatar className=\"server-avatar\">\n        <SvgIcon>\n          <Icon path={mdiDns} />\n        </SvgIcon>\n      </Avatar>\n      <LightTooltip placement=\"bottom\" title={server.name}>\n        <span className=\"server-name\">{server.name}</span>\n      </LightTooltip>\n      <LightTooltip\n        placement=\"bottom\"\n        title={`Last updated: ${moment(server.collDate).format('DD.MM.YYYY')}`}\n      >\n        <span className=\"calendar-icon\">\n          <SvgIcon>\n            <Icon path={mdiCalendarBlank} />\n          </SvgIcon>\n        </span>\n      </LightTooltip>\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './ServersTile.local.scss';\n\nconst colors = {\n  1: '#6DF0D2',\n  2: '#1DE4BD',\n  4: '#1AC9E6',\n  6: '#7D3AC1',\n  8: '#EA7369',\n  16: '#EF7E32',\n  24: '#EABD3B'\n};\n\nexport const ServersTile = ({ servers, isSingle }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.nrCores;\n  }, 0);\n\n  const cores = [];\n  servers.map(sv => {\n    const index = cores.findIndex(core => core.nrCores === sv.nrCores);\n    if (index > -1) {\n      cores[index].count += 1;\n    } else {\n      cores.push({ count: 1, nrCores: sv.nrCores });\n    }\n\n    return null;\n  });\n\n  function getData() {\n    const data = [];\n\n    cores.map(core => {\n      data.push({\n        value: core.count,\n        description: `${core.nrCores}C`,\n        color: colors[core.nrCores]\n      });\n\n      return null;\n    });\n\n    return data;\n  }\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDns} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={servers.length} />\n        <StringLabel text={isSingle ? 'Server' : 'Total servers'} />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"first-column\">\n          <div className=\"value\">{total}</div>\n          <div className=\"label\">Cores</div>\n        </div>\n\n        <div className=\"second-column\">\n          <div className=\"bar-chart\">\n            <HorizontalBar\n              height={36}\n              showTextIn\n              fontColor=\"#fff\"\n              fontWeight=\"bold\"\n              data={getData()}\n            />\n          </div>\n          <div className=\"label\">Server Cores Distribution</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nexport default class HorizontalBar extends Component {\n  constructor(props) {\n    super(props);\n    //\n    this.state = {\n      listBars: [],\n      data: this.props.data\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!_.isEqual(this.props, prevProps)) {\n      this.setState(state => ({\n        ...state,\n        listBars: this.getListBarWithOtherParameters(),\n        data: this.props.data\n      }));\n    }\n  }\n\n  componentDidMount() {\n    this.setState(state => ({\n      ...state,\n      listBars: this.getListBarWithOtherParameters(),\n      data: this.props.data\n    }));\n  }\n\n  /**\n   * Make the calculus of total width\n   */\n  calcWidthTotal() {\n    let widthTotal = 0;\n    this.props.data.forEach(bar => {\n      widthTotal = widthTotal + bar.value;\n    });\n    return widthTotal;\n  }\n\n  /**\n   * Returns the same list of bars with position and barWidth\n   */\n  getListBarWithOtherParameters() {\n    const widthTotal = this.calcWidthTotal();\n    let position = 0;\n    let barWidth = 0;\n    const listBars = this.props.data.map(bar => {\n      position = position + barWidth;\n      barWidth = (bar.value * 100) / widthTotal;\n      bar = Object.assign({ position: position, barWidth: barWidth }, bar);\n      return bar;\n    });\n    return listBars;\n  }\n\n  /**\n   * OnClick Event\n   */\n  onClick(evt, bar) {\n    Object.assign(evt, { bar: bar });\n    if (this.props.onClick) {\n      this.props.onClick(evt);\n    }\n  }\n\n  /**\n   * Returns a new calculated rgb color\n   */\n  randomColor() {\n    const r = Math.floor(Math.random() * 255);\n    const g = Math.floor(Math.random() * 255);\n    const b = Math.floor(Math.random() * 255);\n\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  /**\n   * Returns a list of texts of the bars into a div component\n   */\n  getListTextBar(showTextInsteadValue) {\n    const { showTextWithValue } = this.props;\n    const listText = this.state.listBars.map((bar, index) => {\n      return (\n        <div\n          key={index}\n          style={{\n            position: 'relative',\n            float: 'left',\n            width: `${bar.barWidth}%`,\n            fontSize: '90%'\n          }}\n          onClick={e => this.onClick(e, bar)}\n        >\n          {showTextInsteadValue && bar.name}\n          {showTextInsteadValue && bar.name && showTextWithValue ? ': ' : ''}\n          {(!showTextInsteadValue || showTextWithValue) && (bar.description || bar.value || '')}\n        </div>\n      );\n    });\n    return listText;\n  }\n\n  renderBars() {\n    const listBars = [];\n    const { showTextWithValue, showTextIn, showValueIn } = this.props;\n\n    listBars.push(\n      this.state.listBars.map((bar, index) => {\n        return (\n          <g key={index} onClick={e => this.onClick(e, bar)}>\n            <rect\n              width={`${bar.barWidth + 0.1}%`}\n              height={this.props.height}\n              style={{\n                fill: bar.color || this.randomColor()\n              }}\n              x={`${bar.position}%`}\n            />\n            {(this.props.showTextIn || this.props.showValueIn) && (\n              <text\n                style={{ fill: this.props.fontColor, fontSize: '90%' }}\n                fontWeight={this.props.fontWeight || 'normal'}\n                x={`${bar.position + (bar.barWidth + 0.1) / 2}%`}\n                y=\"50%\"\n                dy=\"0.35em\"\n              >\n                {showTextIn && bar.name}\n                {bar.name && showTextIn ? ': ' : ''}\n                {(showValueIn || showTextWithValue) && (bar.description || bar.value || '1')}\n              </text>\n            )}\n            <title>{`${bar.name || ''}${bar.name ? ': ' : ''}${bar.description ||\n              bar.value ||\n              '1'}`}</title>\n          </g>\n        );\n      })\n    );\n    return listBars;\n  }\n\n  renderLabel(showTextInsteadValue) {\n    return (\n      <div\n        id={`${this.props.id}_text`}\n        style={{\n          textAlign: 'left',\n          display: 'flex',\n          width: '100%'\n        }}\n      >\n        {this.getListTextBar(showTextInsteadValue)}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.props.showTextUp || this.props.showValueUp) &&\n          this.renderLabel(this.props.showTextUp)}\n        <svg id={this.props.id} width=\"100%\" height={this.props.height}>\n          {this.renderBars()}\n        </svg>\n        {(this.props.showTextDown || this.props.showValueDown) &&\n          this.renderLabel(this.props.showTextDown)}\n      </React.Fragment>\n    );\n  }\n}\n\nHorizontalBar.propTypes = {\n  data: PropTypes.array.isRequired,\n  id: PropTypes.string,\n  height: PropTypes.number,\n  showTextIn: PropTypes.bool,\n  showTextUp: PropTypes.bool,\n  showTextDown: PropTypes.bool,\n  showTextWithValue: PropTypes.bool,\n  showValueIn: PropTypes.bool,\n  showValueUp: PropTypes.bool,\n  showValueDown: PropTypes.bool,\n  fontColor: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nHorizontalBar.defaultProps = {\n  height: 30,\n  showTextIn: false,\n  showTextUp: false,\n  showTextDown: false,\n  showTextWithValue: true,\n  showValueIn: false,\n  showValueUp: false,\n  showValueDown: false,\n  fontColor: 'white',\n  id: 'hsbar'\n};\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport './DatabasesTile.local.scss';\n\nexport const DatabasesTile = ({ servers }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.totalDBs;\n  }, 0);\n\n  const dbs = {\n    eelic_count: 0,\n    selic_count: 0\n  };\n  servers.map(sv => {\n    dbs.eelic_count += sv.eelic_count;\n    dbs.selic_count += sv.selic_count;\n\n    return null;\n  });\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDatabase} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={total} />\n        <StringLabel text=\"Total databases\" />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"info\">\n          <div className=\"first-column\">\n            <div className=\"value-eed\">{dbs.eelic_count}</div>\n            <div className=\"label\">Enterprise Edition Databases</div>\n          </div>\n          <div className=\"second-column\">\n            <div className=\"value-sed\">{dbs.selic_count}</div>\n            <div className=\"label\">Standard Edition Databases</div>\n          </div>\n        </div>\n        <div className=\"bar-chart\">\n          <HorizontalBar\n            height={8}\n            data={[\n              { value: dbs.eelic_count, color: '#19AADE' },\n              { value: dbs.selic_count, color: '#7D3AC1' }\n            ]}\n          />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","export function mapAccountsTree(data) {\n  // data is split into 3 levels,\n  // first level is defined by `protocol`\n  // we find root nodes by matching protocols.\n  const roots = data.reduce(splitIntoRootsByProtocol, []);\n  roots.forEach(root => {\n    // define the servers map\n    // all server and database objects for this protocol\n    root.servers = root.nodes.reduce(splitIntoRootsByAddress, {});\n    const servers = Object.keys(root.servers);\n    servers.forEach(name => {\n      const server = root.servers[name];\n      server.databases = server.nodes.reduce(splitIntoRootsByDatabase, {});\n    });\n  });\n  return roots;\n}\nexport function splitIntoRootsByProtocol(acc, item) {\n  const protocolBlacklist = ['SSH'];\n  const { protocol } = item;\n  if (protocolBlacklist.includes(protocol)) {\n    return acc;\n  }\n  if (!(item.special && item.special.database)) {\n    return acc;\n  }\n  const root = acc.find(r => r.name === protocol);\n  if (root) {\n    root.nodes = [...root.nodes, item];\n  } else {\n    acc.push({\n      name: item.protocol,\n      path: item.protocol,\n      type: 'dbms',\n      nodes: [item],\n      servers: []\n    });\n  }\n  return acc;\n}\nfunction splitIntoRootsByAddress(serversMap, item) {\n  const { address } = item;\n  const existingEntry = serversMap[address];\n  if (existingEntry) {\n    existingEntry.nodes = [...existingEntry.nodes, item];\n  } else {\n    serversMap[address] = {\n      name: item.address,\n      path: `${item.protocol}--${item.address}`,\n      type: 'server',\n      nodes: [item]\n    };\n  }\n  return serversMap;\n}\nfunction splitIntoRootsByDatabase(databaseMap, item) {\n  const {\n    special: { database: name }\n  } = item;\n  databaseMap[name] = {\n    name,\n    path: `${item.protocol}--${item.address}--${name}`,\n    node: item\n  };\n  return databaseMap;\n}\n\n/**\n *\n * @param {*} content // /account call data\n *\n * This will resturcture the list of accounts into a list of dbms entries with servers and databases.\n */\n\nexport function mapAccountsNewStructure(content, protocols) {\n  const accounts = { raw: content };\n\n  let protocolsArr = protocols.map(p => p.name);\n\n  if (protocolsArr.length === 0) {\n    protocolsArr = ['CREDENTIAL', 'ILOM', 'SSH'];\n  }\n\n  accounts.databases = content.filter(account => account.special.database);\n  accounts.dbms = [];\n\n  /* eslint-disable */\n  accounts.databases.forEach(function resolver(entry) {\n    /**\n     * Add a path def to the database entry\n     * path descriptions are made here, to mimic somewhat the old mapping.\n     * Keep other properties.\n     */\n    const database = {\n      ...entry,\n      path: `${entry.protocol}--${entry.address}--${entry.special.database}`\n    };\n\n    let dbms = accounts.dbms.find(dbms => dbms.name === database.protocol);\n\n    const dbServer = accounts.raw.find(\n      account => protocolsArr.includes(account.protocol) && account.address === database.address\n    );\n\n    let server;\n\n    // a server entry exists\n    if (dbServer) {\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        ...dbServer,\n        databases: [database]\n      };\n    } else {\n      // db does not have an associated server connection so create a 'placeholder' for server\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        address: database.address,\n        databases: [database]\n      };\n    }\n\n    if (!dbms) {\n      /**\n       * Add a new dbms entry\n       *\n       * path descriptions are made here, to mimic somewhat the old mapping.\n       */\n      accounts.dbms.push({\n        name: database.protocol,\n        protocol: database.protocol,\n        path: database.protocol,\n        databases: [database],\n        servers: [server]\n      });\n\n      return;\n    }\n\n    /**\n     * DBMS exists. Update it\n     */\n    dbms.databases.push(database);\n\n    // find server entr\n    let dbmsServerEntry = dbms.servers.find(sv => sv.address === database.address);\n\n    if (!dbmsServerEntry) {\n      dbms.servers.push({ ...server, databases: [database] });\n    } else {\n      if (dbmsServerEntry.databases) {\n        dbmsServerEntry.databases.push(database);\n      } else {\n        dbmsServerEntry.databases = [database];\n      }\n    }\n  }, accounts);\n\n  // find all existing servers\n  const allServers = content.filter(entry => protocolsArr.includes(entry.protocol));\n\n  // check if servers have a database\n  // if they don't add them in a DBMS called \"OTHER\".\n  // will be removed from there as soon as they get a database\n  allServers.forEach(server => {\n    const exists = accounts.databases.find(db => db.address === server.address);\n\n    if (!exists) {\n      const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n\n      if (otherIndex > -1) {\n        accounts.dbms[otherIndex].servers.push({\n          path: `OTHER--${server.address}`,\n          address: server.address,\n          databases: []\n        });\n      } else {\n        accounts.dbms.push({\n          name: 'OTHER',\n          path: 'OTHER',\n          protocol: 'OTHER',\n          servers: [{ path: `OTHER--${server.address}`, address: server.address, databases: [] }]\n        });\n      }\n    }\n  });\n\n  const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n  if (otherIndex > -1 && accounts.dbms[otherIndex].servers.length === 0) {\n    accounts.dbms.splice(otherIndex, 1);\n  }\n  return accounts;\n}\n\nexport function mapProtocols(protocols) {\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return allowedProtocols;\n}\n","export function mapAllServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const index = acc.findIndex(sv => sv.name === entry.srvname);\n    if (index > -1) {\n      acc[index].totalDBs += 1;\n      acc[index].eelic_count += entry.eelic_count;\n      acc[index].selic_count += entry.selic_count;\n      acc[index].sids.push(entry);\n      acc[index].installedOptions.aa_count +=\n        parseInt(entry.aa_count, 10) === 1 ? parseInt(entry.aa_count, 10) : 0;\n      acc[index].installedOptions.ac_count +=\n        parseInt(entry.ac_count, 10) === 1 ? parseInt(entry.ac_count, 10) : 0;\n      acc[index].installedOptions.as_count +=\n        parseInt(entry.as_count, 10) === 1 ? parseInt(entry.as_count, 10) : 0;\n      acc[index].installedOptions.dv_count +=\n        parseInt(entry.dv_count, 10) === 1 ? parseInt(entry.dv_count, 10) : 0;\n      acc[index].installedOptions.mt_count +=\n        parseInt(entry.mt_count, 10) === 1 ? parseInt(entry.mt_count, 10) : 0;\n      acc[index].installedOptions.adg_count +=\n        parseInt(entry.adg_count, 10) === 1 ? parseInt(entry.adg_count, 10) : 0;\n      acc[index].installedOptions.rac_count +=\n        parseInt(entry.rac_count, 10) === 1 ? parseInt(entry.rac_count, 10) : 0;\n      acc[index].installedOptions.olap_count +=\n        parseInt(entry.olap_count, 10) === 1 ? parseInt(entry.olap_count, 10) : 0;\n      acc[index].installedOptions.part_count +=\n        parseInt(entry.part_count, 10) === 1 ? parseInt(entry.part_count, 10) : 0;\n      acc[index].installedOptions.in_mem_db_count +=\n        parseInt(entry.in_mem_db_count, 10) === 1 ? parseInt(entry.in_mem_db_count, 10) : 0;\n    } else {\n      acc.push({\n        name: entry.srvname,\n        collDate: entry.collDate,\n        nrCores: entry.Ncore,\n        totalDBs: 1,\n        eelic_count: entry.eelic_count,\n        selic_count: entry.selic_count,\n        sids: [entry],\n        installedOptions: {\n          aa_count: parseInt(entry.aa_count, 10) === 1 ? 1 : 0,\n          ac_count: parseInt(entry.ac_count, 10) === 1 ? 1 : 0,\n          as_count: parseInt(entry.as_count, 10) === 1 ? 1 : 0,\n          dv_count: parseInt(entry.dv_count, 10) === 1 ? 1 : 0,\n          mt_count: parseInt(entry.mt_count, 10) === 1 ? 1 : 0,\n          adg_count: parseInt(entry.adg_count, 10) === 1 ? 1 : 0,\n          rac_count: parseInt(entry.rac_count, 10) === 1 ? 1 : 0,\n          olap_count: parseInt(entry.olap_count, 10) === 1 ? 1 : 0,\n          part_count: parseInt(entry.part_count, 10) === 1 ? 1 : 0,\n          in_mem_db_count: parseInt(entry.in_mem_db_count, 10) === 1 ? 1 : 0\n        }\n      });\n    }\n    return acc;\n  }, []);\n\n  serversInfo.map(sv => {\n    const total = Object.values(sv.installedOptions).reduce((a, b) => a + b);\n    sv.totalInstalledOptions = total;\n\n    return null;\n  });\n\n  serversInfo.sort((a, b) => a.nrCores - b.nrCores);\n\n  return serversInfo;\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getNamespace(name) {\n  return RestClient.get(`/namespace/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchNamespace(name, body) {\n  return RestClient.patch(`/namespace/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postNamespace(body) {\n  return RestClient.post('/namespace', body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getAlias(name) {\n  return RestClient.get(`/alias/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchAlias(name, body) {\n  return RestClient.patch(`/alias/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postAlias(body) {\n  return RestClient.post('/alias', body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useState } from 'react';\nimport { string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\n\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Input, Button } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Center } from 'shared/components';\n\nimport './ChangePassword.local.scss';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const ChangePassword = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  /**\n   * Backend call result\n   */\n  const [result, setResult] = useState({ done: false, error: undefined });\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Change Password\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '392px',\n            minHeight: '350px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-password\">\n                <GroupIcon />\n              </Avatar>\n            }\n            title=\"Change Password\"\n          />\n          {result.done ? (\n            <>\n              <Center>\n                <Result type={result.error ? 'fail' : 'success'}>\n                  <Result.Text>\n                    {result.error ? 'Password Change Failed!' : 'Password Changed!'}\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer></Paper.Footer>\n            </>\n          ) : (\n            <Formik\n              initialValues={{\n                password: '',\n                confirm: ''\n              }}\n              validate={values => {\n                const errors = {};\n\n                if (!values.password) {\n                  errors.password = 'Field is required';\n                }\n\n                if (!values.confirm) {\n                  errors.confirm = 'Please reenter your new password';\n                }\n\n                if (values.password !== values.confirm) {\n                  errors.confirm = 'Passwords do not match';\n                }\n\n                return errors;\n              }}\n              onSubmit={async (values, actions) => {\n                actions.setSubmitting(true);\n\n                try {\n                  await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`, {\n                    password: values.password\n                  });\n\n                  actions.setSubmitting(false);\n                  setResult({ done: true });\n                } catch (e) {\n                  actions.setSubmitting(false);\n                  setResult({ done: true, error: e });\n                }\n              }}\n            >\n              {({ dirty, isSubmitting, isValid, handleSubmit }) => (\n                <>\n                  <Paper.Content scrollable>\n                    <Form className=\"password-form\">\n                      <Row>\n                        <Field name=\"password\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                required\n                                label=\"Password\"\n                                placeholder=\"New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                      <Row>\n                        <Field name=\"confirm\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                required\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                label=\"Confirm Password\"\n                                placeholder=\"Confirm New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                    </Form>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        disabled={!dirty || !isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </>\n              )}\n            </Formik>\n          )}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nChangePassword.propTypes = {\n  user: string\n};\n\nexport const ChangePasswordContainer = connect(state => {\n  const user = selectedUser(state);\n\n  return { user: user.name };\n})(ChangePassword);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import { actions } from 'session/store/actions';\nimport { actionStates } from 'shared/lib';\nimport { fromJS } from 'immutable';\n\nexport const initialState = {\n  login: {\n    status: '',\n    errors: [],\n  },\n  authorization: {\n    status: actionStates.LOADING,\n  },\n  currentUser: {\n    id: '',\n    name: '',\n  },\n};\n\nexport const reducerActions = {\n  // authorization Check\n  [actions.checkAuthorization.getLoadingAction()]: (state) => state\n    .setIn(['authorization', 'status'], actionStates.LOADING),\n  [actions.checkAuthorization.getSuccessAction()]: (state, payload) => state.set('currentUser', fromJS({\n    id: payload.id,\n    name: payload.data.data.source.user,\n  }))\n    .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.checkAuthorization.getFailAction()]: (state) => state\n    .setIn(['authorization', 'status'], actionStates.FAIL),\n\n  // login\n  [actions.login.getLoadingAction()]: (state) => state.setIn(['login', 'status'], actionStates.LOADING),\n  [actions.login.getSuccessAction()]: (state) => state.setIn(['login', 'status'], actionStates.SUCCESS)\n    .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.login.getFailAction()]: (state, errors) => state.setIn(['login', 'status'], actionStates.FAIL)\n    .setIn(['login', 'errors'], fromJS(errors)),\n};\n","import { checkDeamonStatus } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  await store.dispatch(checkDeamonStatus());\n\n  throw new Error('polling-daemon');\n}\n\nexport const daemonPoller = withPolling(task, 60000);\n","import { actions } from 'dashboard/store/actions';\n\nexport const initialState = {\n  filterStatus: 'ALL'\n};\n\nexport const reducerActions = {\n  [actions.setFilterStatus.getEventAction()]: (state, status) => {\n    const nextState = state.set('filterStatus', status);\n    return nextState;\n  }\n};\n","import { actions } from 'shared/store/actions';\nimport { actions as sessionActions } from 'session/store/actions';\nimport { fromJS } from 'immutable';\nimport moment from 'moment';\n\nlet sessionGlobalFilters = {\n  startDate: moment()\n    .subtract(7, 'd')\n    .startOf('day')\n    .unix(),\n  endDate: moment()\n    .add(1, 'days')\n    .startOf('day')\n    .unix()\n};\n\nsessionGlobalFilters = JSON.parse(localStorage.getItem('global-filters')) || sessionGlobalFilters;\n\nexport const initialState = {\n  globalFilters: sessionGlobalFilters,\n  jobs: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  connections: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  searchResults: {\n    jobs: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    },\n    processes: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    }\n  }\n};\n\nexport const reducerActions = {\n  [actions.setGlobalFilters.getSuccessAction()]: (state, payload) => {\n    const nextState = state\n      .setIn(['globalFilters', 'startDate'], payload.startDate.unix())\n      .setIn(['globalFilters', 'endDate'], payload.endDate.unix());\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.login.getSuccessAction()]: state => {\n    const nextState = state\n      .setIn(\n        ['globalFilters', 'startDate'],\n        moment()\n          .subtract(7, 'd')\n          .startOf('day')\n          .unix()\n      )\n      .setIn(\n        ['globalFilters', 'endDate'],\n        moment()\n          .add(1, 'days')\n          .startOf('day')\n          .unix()\n      );\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.logout.getSuccessAction()]: state => {\n    localStorage.removeItem('global-filters');\n    return state;\n  },\n  [actions.getJobs.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        content: payload.data.invocations,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getJobs.getLoadingAction()]: state => state.setIn(['jobs', 'fetching'], true),\n  [actions.getConnections.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'connections',\n      fromJS({\n        content: payload.data.accounts,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getConnections.getLoadingAction()]: state =>\n    state.setIn(['connections', 'fetching'], true),\n  [actions.searchJobs.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'jobs'],\n      fromJS({\n        content: payload.data.invocations,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchJobs.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], true),\n  [actions.searchProcesses.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'processes'],\n      fromJS({\n        content: payload.data.processes,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchProcesses.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], true)\n};\n","import { actions } from 'core/store/actions';\n\nexport const initialState = {\n  notifications: [],\n};\n\nexport const reducerActions = {\n  [actions.addNotifications.getEventAction()]: (state, payload) => state\n    .merge('notifications', payload),\n  [actions.removeNotification.getEventAction()]: (state, notificationIndex) => state\n    .removeIn(['notifications', notificationIndex]),\n};\n","import { notificationActions } from './notification.action';\n\nexport const actions = {\n  ...notificationActions,\n};\n","import {\n  TextParameter,\n  BooleanParameter,\n  IntegerParameter,\n  EmailParameter,\n  PhoneNumberParameter,\n  ProcessParameter,\n  VariadicParameter,\n  AccountParameter,\n  FQNameParameter,\n  PasswordParameter\n} from './variants';\n\nimport { want, wantComponent } from 'shared/lib/want';\n\n/**\n * Main switcher for Parameter fields.\n */\nexport const WantParameter = wantComponent(\n  want(\n    {\n      text: TextParameter,\n      number: IntegerParameter,\n      select: TextParameter,\n      phone: PhoneNumberParameter,\n      boolean: BooleanParameter,\n      email: EmailParameter,\n      fqname: FQNameParameter,\n      account: AccountParameter,\n      process: ProcessParameter,\n      variadic_parameter: VariadicParameter,\n      password: PasswordParameter\n    },\n    TextParameter,\n    props => {\n      const { editor } = props.parameter;\n\n      return editor.type;\n    }\n  )\n);\n\nexport default WantParameter;\n","/* eslint-disable */\n\nimport _ from 'lodash';\n\nexport const groupForm = (prototype, form = null) => {\n  if (form === null) {\n    form = {\n      name: null,\n      description: null,\n      prototype: prototype.name,\n      version: prototype.version,\n      groups: [...prototype.groups],\n      values: prototype.fields.map(field => {\n        return { ...field, value: null };\n      })\n    };\n  }\n\n  if (!form.hasOwnProperty('groups')) {\n    form.groups = [...prototype.groups];\n    form.values = prototype.fields.map(field => {\n      const value = form.values.find(value => value.position === field.position);\n      return {\n        ...value,\n        ...field\n      };\n    });\n  }\n\n  if (form.hasOwnProperty('values')) {\n    const maxPosition = _.max(form.values.map(value => value.position));\n\n    // important point\n    if (form.groups.length > 0) {\n      // Mark any existing groups as non-virtual\n      form.groups = form.groups.map(group => {\n        return { ...group, virtual: false };\n      });\n      // Make sure groups are properly sorted\n      form.groups = _.sortBy(form.groups, 'lower');\n      // First we need to create any virtual groups, if needed\n      let position = 0;\n      while (position <= maxPosition) {\n        // First, find the group of which this value is a member, if any\n        const currentGroup = form.groups.find(\n          group => group.lower <= position && group.upper > position\n        );\n        if (!!currentGroup) {\n          // We already have a group for this position. Leapfrog to the next\n          position = currentGroup.upper;\n        } else {\n          // OK, we couldn't find the current group, so find the next one\n          const nextGroup = form.groups.find(group => group.lower > position);\n          if (!!nextGroup) {\n            // Add a new virtual group that covers this position up to the next group\n            form.groups = [\n              {\n                name: null,\n                virtual: true,\n                lower: position,\n                upper: nextGroup.lower,\n                iteration_limit: 1\n              },\n              ...form.groups\n            ];\n            // Leapfrog\n            position = nextGroup.upper;\n          } else {\n            // We're at the end. Add a covering virtual group\n            form.groups.push({\n              name: null,\n              virtual: true,\n              lower: position,\n              upper: maxPosition + 1,\n              iteration_limit: 1\n            });\n          }\n        }\n      }\n    } else {\n      // We have no groups at all. Create a single virtual group for all values.\n      form.groups.push({\n        name: null,\n        virtual: true,\n        lower: 0,\n        upper: maxPosition + 1,\n        iteration_limit: 1\n      });\n    }\n\n    form.groups = _.sortBy(form.groups, 'lower').map(group => {\n      group.instances = [];\n      return group;\n    });\n    form.values = _.sortBy(form.values, 'position');\n    // OK, we have the groups, now we need to add the instances and fields\n    for (let group of form.groups) {\n      const values = form.values.filter(\n        value => value.position >= group.lower && value.position < group.upper\n      );\n      if (!group.virtual || group.iteration_limit > 1) {\n        // How many instances do we need?\n        const instanceCount = Math.max(\n          1,\n          _.max(values.map(value => (value.value === null ? 1 : value.value.length)))\n        );\n        for (let g = 0; g < instanceCount; g++) {\n          let instance = {\n            instance: g,\n            fields: values.map(value => {\n              let field = {\n                name: value.name,\n                description: value.description,\n                meta: value.meta,\n                position: value.position,\n                data_type: value.data_type,\n                is_repeatable: value.is_repeatable,\n                is_required: value.is_required,\n                values: []\n              };\n              if (Array.isArray(value.value) && value.value.length > g) {\n                if (value.is_repeatable) {\n                  for (let f = 0; f < value.value[g].length; f++) {\n                    field.values.push({\n                      instance: f,\n                      value: value.value[g][f]\n                    });\n                  }\n                } else {\n                  field.values.push({\n                    instance: 0,\n                    value: value.value[g]\n                  });\n                }\n              }\n              return field;\n            })\n          };\n          group.instances.push(instance);\n        }\n      } else {\n        // Iteration limit is 1\n        let instance = {\n          instance: 0,\n          fields: values.map(value => {\n            let field = {\n              name: value.name,\n              description: value.description,\n              meta: value.meta,\n              position: value.position,\n              data_type: value.data_type,\n              is_repeatable: value.is_repeatable,\n              is_required: value.is_required,\n              values: []\n            };\n            if (field.is_repeatable) {\n              if (Array.isArray(value.value)) {\n                for (let f = 0; f < value.value.length; f++) {\n                  field.values.push({\n                    instance: f,\n                    value: value.value[f]\n                  });\n                }\n              }\n            } else {\n              field.values.push({\n                instance: 0,\n                value: value.value\n              });\n            }\n            return field;\n          })\n        };\n        group.instances.push(instance);\n      }\n    }\n    delete form.values;\n  }\n  // For repeating groups and fields, there must always be one \"empty\" group and/or field at the end.\n  for (let group of form.groups) {\n    // if (group.iteration_limit > 1) {\n    //     const instance = _.last(group.instances)\n    //     const values = _.flatten(instance.fields.map(field => field.values.map(value => value.value)))\n    //     // If at least one value is non-null, then we need to add a new empty group at the end.\n    //     if (!_.every(values, value => value === null)) {\n    //         // OK, we need to add another empty instance\n    //         group.instances.push({\n    //             instance: instance.instance + 1,\n    //             fields: instance.fields.map(field => {\n    //                 return {\n    //                     ...field,\n    //                     values: []\n    //                 }\n    //             })\n    //         })\n    //     }\n    // }\n\n    // Now we check the individual fields\n    // Each field must have at least one value.\n    // For repeating fields, there must always be a final empty instance.\n    for (let instance of group.instances) {\n      for (let field of instance.fields) {\n        if (field.values.length === 0) {\n          field.values.push({\n            instance: 0,\n            value: null\n          });\n          // } else if (field.is_repeatable) {\n          //     const value = _.last(field.values)\n          //     if (value.value !== null) {\n          //         field.values.push({\n          //             instance: value.instance + 1,\n          //             value: null\n          //         })\n          //     }\n        }\n      }\n    }\n  }\n  return form;\n};\n\nexport const ungroupForm = form => {\n  let packed = {\n    description: form.description,\n    values: []\n  };\n  let names = {};\n  for (const group of form.groups) {\n    for (const instance of group.instances) {\n      for (const field of instance.fields) {\n        names[field.name] = {\n          position: field.position,\n          grouped: !group.virtual || group.iteration_limit > 1,\n          is_repeatable: field.is_repeatable\n        };\n      }\n    }\n  }\n  for (const name in names) {\n    const info = names[name];\n    const group = form.groups.find(\n      group => group.lower <= info.position && group.upper > info.position\n    );\n    if (info.grouped && info.is_repeatable) {\n      // Array of arrays\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        if (_.last(subvalues) === null) {\n          subvalues = _.dropRight(subvalues, 1);\n        }\n        values.push(subvalues);\n        while (Array.isArray(_.last(values)) && _.last(values).length === 0) {\n          values = _.dropRight(values, 1);\n        }\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.grouped) {\n      // Just a plain array\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        values.push(subvalues[0]);\n      }\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.is_repeatable) {\n      // Just a plain array\n      const instance = group.instances[0];\n      let values = instance.fields\n        .find(field => field.name === name)\n        .values.map(value => value.value);\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else {\n      // Simple value\n      const instance = group.instances[0];\n      const value = instance.fields.find(field => field.name === name).values[0].value;\n      packed.values.push({ name, value });\n    }\n  }\n  packed.values = packed.values.filter(value => value.value !== null);\n  return packed;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getPrivileges(name, isAlias) {\n  return RestClient.get(`/entity/${name}/privileges`, {\n    ...(isAlias && { cls: 'alias' }),\n    page_size: 2147483645\n  });\n}\n\n/**\n    privilege: type,\n    enitity_name: entityName,\n    alias: isAlias\n    role: user_or_group.role,\n    role_type: user_or_group.is_group ? 'group' : 'user',\n    explicit_grant: user_or_group.granted.includes(type),\n    explicit_denied: user_or_group.denied.includes(type),\n    action: granted ? 'revoke' : 'grant'\n  }}\n */\nexport async function setPrivileges(data) {\n  const { granted, alias } = data;\n\n  const actions = granted ? ['revoke', 'deny'] : ['grant', 'allow'];\n\n  try {\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[0]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[1]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    return getPrivileges(data.enitity_name, data.alias);\n  } catch (e) {\n    throw new Error('failed');\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LayersOutlinedIcon from '@material-ui/icons/LayersOutlined';\nimport { mdiClipboardPlayMultipleOutline, mdiShieldCheckOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nexport const navigationItems = [\n  {\n    title: <FormattedMessage id=\"navigation.dashboard\" />,\n    to: '/dashboard',\n    id: 'dashboard',\n    icon: <DashboardOutlinedIcon />,\n    qaClass: 'qa-nav-dashboard'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.jobs\" />,\n    to: '/jobs',\n    id: 'jobs',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiClipboardPlayMultipleOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-jobs'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.system\" />,\n    to: '/system',\n    id: 'system',\n    icon: <LayersOutlinedIcon />,\n    qaClass: 'qa-nav-system',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.entitites\" />,\n        to: '/system/entities',\n        qaClass: 'qa-nav-entities'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.explorer\" />,\n        to: '/system/explorer',\n        qaClass: 'qa-nav-explorer'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.user.and.groups\" />,\n        to: '/system/mas-accounts/users',\n        qaClass: 'qa-nav-mas-accounts'\n      }\n    ]\n  },\n  {\n    title: <FormattedMessage id=\"navigation.compliance\" />,\n    to: '/compliance',\n    id: 'compliance',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiShieldCheckOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-compliance',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.license.collection\" />,\n        to: '/compliance/license-collection',\n        qaClass: 'qa-nav-license-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      }\n    ]\n  }\n];\n","import { getQuery, getInvocationStatus } from './selectors';\n\nimport { InvocationStatus } from './constants';\n\nimport { fetchInvocation } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  const { uuid, process } = getQuery(store.getState());\n\n  if (uuid) {\n    await store.dispatch(fetchInvocation(uuid, process));\n  }\n\n  const STATUS = getInvocationStatus(store.getState());\n\n  switch (STATUS) {\n    case InvocationStatus.EXECUTING:\n    case InvocationStatus.SCHEDULED:\n    case InvocationStatus.DELAYED:\n    case 'NOT_FETCHED':\n      console.log('[invocation-poller] - polling', STATUS); // eslint-disable-line\n      throw new Error('need to poll invocation...');\n    default:\n      break;\n  }\n\n  console.log('[invocation-poller] - done'); // eslint-disable-line\n\n  return Promise.resolve();\n}\n\nexport const invocationPoller = withPolling(task, 5000);\n","import React from 'react';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors }) => {\n  let content;\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occured:</p>\n        <div className=\"list error\">\n          {errors.map((error, index) => {\n            return <p key={index}>• {error}</p>;\n          })}\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              {output.map((row, index) => {\n                return (\n                  <p className=\"row\" key={`${row.data.text}-${index}`}>\n                    {row.data.text}\n                  </p>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        {output.map((row, index) => {\n          return (\n            <p className=\"row\" key={index}>\n              {row.data.text}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return content;\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { fromJS } from 'immutable';\n\nexport const bindReducer = (initialState, actions) => (state = fromJS(initialState), action) => {\n  if (typeof actions[action.type] === 'function') {\n    return actions[action.type](state, action.payload);\n  }\n\n  return state;\n};\n","export const actionStates = {\n  LOADING: 'LOADING',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS',\n};\n","import { actionStates } from 'shared/lib';\n\nexport class ActionCreatorHandler {\n  constructor(action) {\n    this.action = action;\n  }\n\n  getEventAction() {\n    return this.action;\n  }\n\n  getLoadingAction() {\n    return `${this.action}__${actionStates.LOADING}`;\n  }\n\n  getFailAction() {\n    return `${this.action}__${actionStates.FAIL}`;\n  }\n\n  getSuccessAction() {\n    return `${this.action}__${actionStates.SUCCESS}`;\n  }\n\n  dispatchLoading(payload) {\n    return {\n      type: this.getLoadingAction(),\n      payload,\n    };\n  }\n\n  dispatchFail(payload) {\n    return {\n      type: this.getFailAction(),\n      payload,\n    };\n  }\n\n  dispatchSuccess(payload) {\n    return {\n      type: this.getSuccessAction(),\n      payload,\n    };\n  }\n\n  dispatchEvent(payload) {\n    return {\n      type: this.action,\n      payload,\n    };\n  }\n}\n","export const slugify = (text) => text.toString().toLowerCase()\n  .trim()\n  .replace(/[^a-z0-9 -]/g, '')\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-');\n","export const createUrl = (url, params = {}) => {\n  if (typeof params !== 'object' || !params) {\n    return url;\n  }\n  let path = url;\n  const query = { ...params };\n  Object.keys(query).forEach((key) => {\n    if (typeof query[key] !== 'undefined' && path.includes(`:${key}`)) {\n      path = path.replace(`:${key}`, query[key]);\n      delete query[key];\n    }\n  });\n\n  if (!Object.keys(query).length || !Object.keys(query).find(((key) => typeof query[key] !== 'undefined'))) {\n    return path;\n  }\n\n  const paramsUrl = Object.keys(query).filter((key) => query[key])\n    .map((key) => `${key}=${encodeURIComponent(query[key])}`)\n    .join('&');\n  return `${path}${'?'.concat(...paramsUrl)}`;\n};\n","export const numberPretty = (number) => {\n  if (!number) {\n    return number;\n  }\n  const parts = number.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n","const formatNumber = (number, pow, decimals = 1) => (number / (10 ** pow)).toFixed(decimals);\n\nexport const smartNumber = (number, decimals = false) => {\n  if (typeof number !== 'number') {\n    return number;\n  }\n  if (number < 10 ** 3) {\n    if (typeof decimals === 'number') {\n      return +number.toFixed(+decimals);\n    }\n    return number;\n  }\n\n  if (number < 10 ** 6) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 3, decimals)} K`;\n    }\n    return `${formatNumber(number, 3)} K`;\n  }\n\n  if (number < 10 ** 9) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 6, decimals)} M`;\n    }\n    return `${formatNumber(number, 6)} M`;\n  }\n\n  if (typeof decimals === 'number') {\n    return `${formatNumber(number, 9, decimals)} B`;\n  }\n  return `${formatNumber(number, 9)} B`;\n};\n","export const capitalizeFirstLetter = (s) => s.toString().charAt(0).toUpperCase() + s.slice(1);\n","export const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n","/* eslint-disable */\nexport const phoneNumberPattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n","export const urlPattern = /^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)$/;\n","export const randomStringGenerator = (length = 5) => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n  for (let i = 0; i < length; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n","export const generateUniqueId = () => btoa(Math.floor(new Date().valueOf() * Math.random())).replace(/=/g, '').slice(0, 16);\n","export const emptyFunc = () => null;\n","export const delay = (timer) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve();\n  }, timer);\n});\n","import moment from 'moment';\n\nimport { isBeforeDay } from './isBeforeDay';\n\nexport function isInclusivelyAfterDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n  return !isBeforeDay(a, b);\n}\n","const STATES = {\n  loading: 'LOADING',\n  fail: 'FAIL',\n  success: 'SUCCESS'\n};\n\nexport const SEPARATOR = '__';\n\nexport function type(name, stateKey) {\n  const state = STATES[stateKey];\n\n  if (state) {\n    return name + SEPARATOR + state;\n  }\n\n  return name;\n}\n\n/**\n *\n * These could be written as classes with static methods.\n *\n * */\n\nexport const types = {\n  action: type,\n  loading: function loadingType(name) {\n    return type(name, 'loading');\n  },\n  success: function successType(name) {\n    return type(name, 'success');\n  },\n  fail: function failType(name) {\n    return type(name, 'fail');\n  }\n};\n\nexport const creators = {\n  action: function action(name, payload) {\n    return { type: name, payload };\n  },\n  loading: function loadingAction(name, payload) {\n    return { type: type(name, 'loading'), payload };\n  },\n  success: function successAction(name, payload) {\n    return { type: type(name, 'success'), payload };\n  },\n  fail: function failAction(name, payload) {\n    return { type: type(name, 'fail'), payload };\n  }\n};\n","import { produce } from 'immer';\n\nfunction unchanged(state) {\n  return state;\n}\n\nexport function createReducer(reducers, initialState = {}) {\n  const reducerInitialState = reducers.initialState || initialState;\n\n  return function r(state = reducerInitialState, action) {\n    const { type } = action;\n\n    if (!type) {\n      console.error('[createReducer] action does not have a type', action); // eslint-disable-line\n      return unchanged(state);\n    }\n\n    const reducer = reducers[action.type];\n\n    if (reducer) {\n      return produce(state, nextState => {\n        reducer(nextState, action, state);\n      });\n    }\n\n    return unchanged(state);\n  };\n}\n","import moment from 'moment';\nimport _ from 'lodash';\n\nexport function getWorkloadData(jobs, dateRange) {\n  if (jobs.length === 0) return [];\n\n  const jobsWithFormattedInvokedDate = _.orderBy(jobs, ['date_invoke'], ['asc']).map(job => ({\n    ...job,\n    date_invoke: moment(job.date_invoke)\n      .utc()\n      .local()\n      .format('D MMM YY')\n  }));\n  const groupJobsByDate = _.groupBy(jobsWithFormattedInvokedDate, 'date_invoke');\n  const data = [];\n\n  // if no process was executed during selected interval, simply return an empty array\n  if (Object.keys(groupJobsByDate).length === 0) {\n    return [];\n  }\n\n  Object.keys(groupJobsByDate).forEach(date => {\n    const item = { name: date, SUCCEEDED: 0, FAILED: 0, ABORTED: 0, total: 0 };\n    groupJobsByDate[date].forEach(el => {\n      item[el.status]++;\n      if (el.status === 'SUCCEEDED' || el.status === 'FAILED' || el.status === 'ABORTED') {\n        item.total++;\n      }\n    });\n\n    data.push(item);\n  });\n\n  // display all days between the first one that run a process and the last one\n  const intervalArray = [];\n  const daylist = getDaysArray(dateRange);\n  const totalDays = daylist.reduce((o, key) => ({ ...o, [key]: '' }), {});\n\n  // update the total days from the interval array with the days that have some processes executed\n  data.forEach(day => {\n    totalDays[day.name] = day;\n  });\n\n  Object.keys(totalDays).forEach(date => {\n    // for the days in the interval that have no executed process, add an empty entry\n    if (typeof totalDays[date] === 'string') {\n      totalDays[date] = {\n        name: date,\n        SUCCEEDED: 0,\n        FAILED: 0,\n        ABORTED: 0,\n        total: 0\n      };\n    }\n    intervalArray.push(totalDays[date]);\n  });\n\n  return intervalArray;\n}\n/**\n * Creates an array for the selected interval of days\n */\nfunction getDaysArray(dateRange) {\n  let { currentDate } = dateRange;\n  const { endDate } = dateRange;\n  const dateArray = [];\n\n  while (currentDate <= endDate) {\n    dateArray.push(moment(currentDate).format('D MMM YY'));\n    currentDate = moment(currentDate).add(1, 'days');\n  }\n\n  return dateArray;\n}\n","import { CheckAuthorizationEffect } from './check-authorization/check-authorization.effect';\nimport { LoginEffect } from './login/login.effect';\nimport { LogoutEffect } from './logout/logout.effect';\n\nexport const sessionEffects = [CheckAuthorizationEffect, LoginEffect, LogoutEffect];\n","import { emptyFunc } from 'shared/lib';\n\nexport const tryAsync = async (action, onError = emptyFunc) => {\n  try {\n    await action();\n  } catch (e) {\n    onError(e);\n  }\n};\n","import Cookie from 'js-cookie';\nimport axios from 'axios';\n\nimport { CONSTANTS } from 'config';\nimport { createUrl } from 'shared/lib';\n\n\nclass RestClientClass {\n  constructor() {\n    this.authentications = {\n      basicAuth: {\n        name: 'Authorization',\n        accessToken: '',\n      },\n    };\n\n    this.baseUrl = CONSTANTS.BASE.HOST;\n\n    if (CONSTANTS.BASE.VERSION) {\n      this.baseUrl = `${CONSTANTS.BASE.HOST}/${CONSTANTS.BASE.VERSION}`;\n    }\n\n    this.client = axios.create({\n      timeout: CONSTANTS.BASE.TIMEOUT,\n      baseURL: this.baseUrl,\n      // withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.get = this.get.bind(this);\n    this.delete = this.delete.bind(this);\n    this.head = this.head.bind(this);\n    this.post = this.post.bind(this);\n    this.put = this.put.bind(this);\n    this.patch = this.patch.bind(this);\n  }\n\n  setBasicAuth() {\n    this.authentications.basicAuth.accessToken = `Basic ${Cookie.get('Authorization')}`;\n  }\n\n  removeBasicAuth() {\n    this.authentications.basicAuth.accessToken = Cookie.remove('Authorization');\n  }\n\n  getRequestConfig() {\n    return {\n      headers: {\n        [this.authentications.basicAuth.name]: this.authentications.basicAuth.accessToken,\n      },\n    };\n  }\n\n  get(path, query) {\n    const url = createUrl(path, query);\n    return this.client.get(url, this.getRequestConfig());\n  }\n\n  delete(path, query) {\n    const url = createUrl(path, query);\n    return this.client.delete(url, this.getRequestConfig());\n  }\n\n  head(path, query) {\n    const url = createUrl(path, query);\n    return this.client.head(url, this.getRequestConfig());\n  }\n\n  post(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.post(url, body, this.getRequestConfig());\n  }\n\n  put(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.put(url, body, this.getRequestConfig());\n  }\n\n  patch(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.patch(url, body, this.getRequestConfig());\n  }\n}\n\nexport const RestClient = new RestClientClass();\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\n\nimport { actionStates } from 'shared/lib';\nimport { loginSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nimport { Form } from './components';\n\nexport class LoginPage extends React.PureComponent {\n  componentDidMount() {\n    Cookie.remove('Authorization');\n  }\n\n  componentDidUpdate() {\n    if (this.props.status === actionStates.SUCCESS) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.login.title\"\n        isLoading={this.props.status === actionStates.LOADING}\n      >\n        <Form\n          isLoading={this.props.status === actionStates.LOADING}\n          errors={this.props.errors}\n          submit={this.props.login}\n          resetErrors={this.props.resetErrors}\n        />\n      </Container>\n    );\n  }\n\n  static path = '/login';\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  errors: PropTypes.object.isRequired,\n  status: PropTypes.oneOf([actionStates.LOADING, actionStates.SUCCESS, actionStates.FAIL, '']).isRequired,\n  login: PropTypes.func.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  errors: loginSelector(state).get('errors'),\n  status: loginSelector(state).get('status'),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (data) => dispatch(actions.login.dispatchLoading(data)),\n  resetErrors: () => dispatch(actions.login.dispatchFail([])),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport LoginGraphic from '../../../../assets/images/login_graphic.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_blue.svg';\nimport MasLogo from '../../../../assets/images/mas_logo_blue.svg';\n\nimport './container.local.scss';\n\nexport class ContainerComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={`${className} flex`}>\n        <div className={`${className}__wrapper`}>\n          <div className=\"header\">\n            <div className=\"mas-logo-container\">\n              <img className=\"img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n            </div>\n            <Typography className={`${className}__title`} variant=\"h3\" component=\"h2\">\n              <FormattedMessage id={this.props.title} />\n            </Typography>\n            {!!this.props.description && (\n              <div className={`${className}__description`}>\n                {this.props.description}\n              </div>\n            )}\n          </div>\n          {this.props.children}\n        </div>\n        <div className={`${className}__graphics`}>\n          <div className=\"logo-container\">\n            <img className=\"img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          </div>\n          <div className=\"graphic-container\">\n            <img className=\"img-responsive\" src={LoginGraphic} alt=\"Login graphic\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  description: PropTypes.string,\n  className: PropTypes.string,\n};\n\nContainerComponent.defaultProps = {\n  className: 'container',\n  description: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { RestErrors } from 'shared/components';\n\nimport './form.local.scss';\n\nexport class FormComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  render() {\n    const { className } = this.props;\n    const restErrors = this.getRestErrors();\n\n    return (\n      <div className={className}>\n        <form onSubmit={this.submitHandler} noValidate autoComplete=\"off\">\n          <div className=\"flex direction-column\">\n            <TextField\n              autoFocus\n              className={`${className}__field`}\n              helperText={this.getError('username')}\n              onChange={this.valueChangeHandler('username')}\n              variant=\"outlined\"\n              label={<FormattedMessage id=\"general.form.username\" />}\n              inputProps={{\n                className: 'qa-login-username',\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n              InputLabelProps={{\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n            />\n\n            <FormControl className={`${className}__field`} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={this.state.showPassword ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.valueChangeHandler('password')}\n                inputProps={{\n                  className: 'qa-login-password',\n                  style: { fontSize: '14px', fontFamily: 'Lato' }\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <div className=\"password-icon\">\n                      <IconButton\n                        className=\"qa-login-toggle-password-visibility\"\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.setShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                        edge=\"end\"\n                        color=\"inherit\"\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </div>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          {restErrors.size > 0 && (\n            <div className={`${className}__errors`}>\n              <RestErrors errors={restErrors} />\n            </div>\n          )}\n          <div className={`${className}__actions flex`}>\n            <Button\n              className=\"qa-login-btn\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                this.props.isLoading || this.state.username === '' || this.state.password === ''\n              }\n            >\n              <FormattedMessage id=\"session.login.button\" />\n            </Button>\n            <div className=\"forgot-password qa-forgot-password\">\n              <FormattedMessage id=\"session.login.forgot-password\" />\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  setShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  getError(field) {\n    const error = this.props.errors.find(item => item.get('path') === `.${field}`);\n    if (!error) {\n      return '';\n    }\n\n    return error.get('message') || 'This field is invalid';\n  }\n\n  getRestErrors() {\n    return this.props.errors.filter(\n      item => item.get('path') !== '.username' && item.get('path') !== '.password'\n    );\n  }\n\n  resetErrors() {\n    if (this.props.errors.size) {\n      this.props.resetErrors();\n    }\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    this.props.submit({\n      username: this.state.username,\n      password: this.state.password\n    });\n  }\n\n  valueChangeHandler(name) {\n    return event => {\n      this.resetErrors();\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n}\n\nFormComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nFormComponent.defaultProps = {\n  className: 'form'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { slugify } from 'shared/lib';\n\nimport './rest-errors.local.scss';\n\nexport class RestErrorsComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        {this.props.errors.map((error) => (\n          <div key={slugify(error.get('message'))}>\n            {error.get('message')}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRestErrorsComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nRestErrorsComponent.defaultProps = {\n  className: 'rest-errors',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport './job-item.local.scss';\n\nexport class JobItemComponent extends React.PureComponent {\n  render() {\n    const { extended } = this.props;\n    if (extended) {\n      return (\n        <div className={`${this.props.className} ${this.jobStatus()}`}>\n          <div className=\"status-icon\">{this.props.statusChild}</div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <div className=\"name\" title={this.props.job.get('process')}>\n                {this.formatName()}\n              </div>\n            </div>\n            <div className=\"second-row\">\n              <div className=\"time\">\n                {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n              </div>\n              {this.props.job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n              <div className=\"date\">\n                {moment(this.props.job.get('date_invoke'))\n                  .utc()\n                  .local()\n                  .format('D MMM YYYY')}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${this.props.className} ${this.jobStatus()}`}>\n        <Link to={`/jobs/job?invocation=${this.props.job.get('uuid')}`}>\n          <div className=\"first-row\">\n            <div className=\"name\" title={this.props.job.get('process')}>\n              {this.formatName()}\n            </div>\n            <div className=\"time\">\n              {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n            </div>\n          </div>\n          <div className=\"second-row\">\n            {this.props.job.get('user_owner') && (\n              <div className=\"run-by\">\n                <AccountCircleOutlinedIcon />\n                {this.props.job.get('user_owner')}\n              </div>\n            )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('name') && (\n                <div className=\"dbms\">\n                  <SvgIcon>\n                    <Icon path={mdiHexagonMultipleOutline} />\n                  </SvgIcon>\n                  {this.props.job\n                    .get('connections')\n                    .get('dbms')\n                    .get('name')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('shell') &&\n              this.props.job\n                .get('connections')\n                .get('shell')\n                .get('host_address') && (\n                <div className=\"server\">\n                  <StorageIcon />\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('shell') &&\n                    this.props.job\n                      .get('connections')\n                      .get('shell')\n                      .get('host_address')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special')\n                .get('database') && (\n                <div className=\"database\">\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('dbms') &&\n                    this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('protocol_special')\n                      .get('database')}\n                </div>\n              )}\n            <div className=\"date\">\n              {moment(this.props.job.get('date_invoke'))\n                .utc()\n                .local()\n                .format('D MMM YYYY')}\n            </div>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n\n  jobStatus = () => {\n    switch (this.props.job.get('status')) {\n      case 'EXECUTING':\n        return 'executing';\n      case 'SUCCEEDED':\n        return 'succeeded';\n      case 'SCHEDULED':\n        return 'scheduled';\n      case 'DELAYED':\n        return 'delayed';\n      case 'ABORTED':\n        return 'aborted';\n      case 'FAILED':\n        return 'failed';\n      case 'KILLED':\n        return 'killed';\n      default:\n        return '';\n    }\n  };\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItemComponent.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired,\n  extended: PropTypes.bool,\n  statusChild: PropTypes.element\n};\n\nJobItemComponent.defaultProps = {\n  className: 'job-item',\n  extended: false,\n  statusChild: null\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\n\nimport { CustomTooltip, CustomAxisTick } from './components';\n\nimport './workload-graph.local.scss';\n\nexport class WorkloadGraphComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <ResponsiveContainer>\n          <AreaChart data={this.props.data} margin={{ top: 16, right: 5, left: 5, bottom: 16 }}>\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0.16} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"chartStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0} />\n                <stop offset=\"5%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"95%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickSize={false}\n              axisLine={false}\n              interval=\"preserveStartEnd\"\n              tick={<CustomAxisTick />}\n            />\n            <Tooltip\n              content={<CustomTooltip />}\n              offset={0}\n              cursor={false}\n              viewBox={{ width: 750, height: 144 }}\n              position={{ x: 'auto', y: 0 }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"total\"\n              stroke=\"url(#chartStroke)\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#gradient)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n\nexport default WorkloadGraphComponent;\n\nWorkloadGraphComponent.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nWorkloadGraphComponent.defaultProps = {\n  className: 'workload-graph'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport './custom-tooltip.local.scss';\n\nexport class CustomTooltipComponent extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.label !== this.props.label) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    if (!this.props.active) return null;\n    return (\n      <div className={this.props.className} position={{ x: '100%', y: '-100%' }}>\n        { this.props.payload\n        && (\n          <>\n            <div className=\"date\">\n              { moment(this.props.payload[0].payload.name).format('DD.MM.YYYY')}\n            </div>\n            <div className=\"info-container\">\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.succeeded\" />\n                </div>\n                <div className=\"value success\">\n                  {this.props.payload[0].payload.SUCCEEDED}\n                </div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.aborted\" />\n                </div>\n                <div className=\"value error\">\n                  {this.props.payload[0].payload.FAILED}\n                </div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.failed\" />\n                </div>\n                <div className=\"value error\">\n                  {this.props.payload[0].payload.ABORTED}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomTooltipComponent;\n\nCustomTooltipComponent.propTypes = {\n  className: PropTypes.string,\n  payload: PropTypes.array,\n  active: PropTypes.bool,\n  label: PropTypes.string,\n};\n\nCustomTooltipComponent.defaultProps = {\n  className: 'custom-tooltip',\n  payload: [],\n  active: false,\n  label: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './custom-axis-tick.local.scss';\n\nexport class CustomAxisTickComponent extends React.PureComponent {\n  render() {\n    return (\n      <g transform={`translate(${this.props.x},${this.props.y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill=\"rgba(12, 50, 110, 0.38)\">{this.props.payload.value}</text>\n      </g>\n    );\n  }\n}\n\nexport default CustomAxisTickComponent;\n\nCustomAxisTickComponent.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  payload: PropTypes.object,\n};\n\nCustomAxisTickComponent.defaultProps = {\n  x: null,\n  y: null,\n  payload: {},\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './circle-img.local.scss';\n\nexport class CircleImgComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.image}\n      </div>\n    );\n  }\n}\n\nexport default CircleImgComponent;\n\nCircleImgComponent.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nCircleImgComponent.defaultProps = {\n  className: 'circle-img',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './number-label.local.scss';\n\nexport class NumberLabelComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n\nexport default NumberLabelComponent;\n\nNumberLabelComponent.propTypes = {\n  className: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nNumberLabelComponent.defaultProps = {\n  className: 'number-label',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './string-label.local.scss';\n\nexport class StringLabelComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.text}</div>;\n  }\n}\n\nexport default StringLabelComponent;\n\nStringLabelComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.node.isRequired\n};\n\nStringLabelComponent.defaultProps = {\n  className: 'string-label'\n};\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport './search-input.local.scss';\n\nexport class SearchInputComponent extends PureComponent {\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <>\n        <div className=\"search-icon\">\n          <SearchIcon />\n        </div>\n        <InputBase\n          className=\"search-input-container\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={onChange}\n          inputProps={{\n            className: 'search qa-search',\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchInputComponent;\n\nSearchInputComponent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport classnames from 'classnames';\n\nimport './dropdown.local.scss';\n\nexport class DropdownComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDropdownOpen: false\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isDropdownOpen) {\n      this.setState({ isDropdownOpen: true });\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    let parentWidth;\n\n    if (this.anchorRef && this.anchorRef.current && this.anchorRef.current.offsetWidth) {\n      parentWidth = this.anchorRef.current.offsetWidth;\n    }\n    return (\n      <>\n        {this.props.target(\n          { isOpen: this.state.isDropdownOpen, ref: this.anchorRef },\n          { toggle: this.handleToggle }\n        )}\n        {items && (\n          <Popover\n            open={this.state.isDropdownOpen}\n            anchorEl={this.anchorRef.current}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList className=\"dropdown-menu-container\" style={{ width: parentWidth }}>\n                {items.map((item, index) => (\n                  <MenuItem\n                    className={classnames('', { disabled: item.disabled })}\n                    key={index}\n                    onClick={() => this.onClickCallback(index)}\n                  >\n                    {item.icon && <ListItemIcon className=\"icon\">{item.icon}</ListItemIcon>}\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Popover>\n        )}\n      </>\n    );\n  }\n\n  handleToggle = () => {\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen\n    }));\n  };\n\n  setCloseDropdown = event => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ isDropdownOpen: false });\n  };\n\n  onClickCallback = itemIndex => {\n    this.props.onSelect(itemIndex, this.props.items[itemIndex]);\n    this.setState({ isDropdownOpen: false });\n  };\n}\n\nexport default DropdownComponent;\n\nDropdownComponent.propTypes = {\n  onSelect: PropTypes.func,\n  target: PropTypes.func,\n  items: PropTypes.array,\n  isDropdownOpen: PropTypes.bool\n};\n\nDropdownComponent.defaultProps = {\n  onSelect: () => {},\n  items: [],\n  target: (meta, actions) => (\n    <Button ref={meta.ref} onClick={actions.toggle}>\n      {meta.isOpen ? 'Close' : 'Dropdown'}\n    </Button>\n  ),\n  isDropdownOpen: false\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './small-input.local.scss';\n\nexport const SmallInputComponent = forwardRef(({ value, icon, disabled, ...others }, ref) => (\n  <div\n    ref={ref}\n    className={classnames('small-input', { disabled, active: value.length })}\n  >\n    { icon && <div className=\"icon\">{icon}</div> }\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      {...others}\n    />\n  </div>\n));\n\nSmallInputComponent.propTypes = {\n  icon: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nSmallInputComponent.defaultProps = {\n  icon: null,\n  value: '',\n  disabled: false,\n};\n\nexport default SmallInputComponent;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SingleDatePicker } from 'react-dates';\nimport { mdiCalendarBlank, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './single-date-picker.local.scss';\n\nexport class SingleDatePickerComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: true,\n    };\n  }\n\n  render() {\n    const { date, onDateChange, ...others } = this.props;\n\n    return (\n      <div className=\"date-picker-container\">\n        <SingleDatePicker\n          date={date}\n          onDateChange={onDateChange}\n          focused={this.state.focused}\n          onFocusChange={({ focused }) => this.setState({ focused })}\n          id=\"date-picker\"\n          numberOfMonths={1}\n          customInputIcon={<SvgIcon><Icon path={mdiCalendarBlank} /></SvgIcon>}\n          placeholder=\"Select Date\"\n          isOutsideRange={() => false}\n          readOnly\n          hideKeyboardShortcutsPanel\n          displayFormat=\"D MMM YYYY\"\n          /** TODO: @Razvan, look at this please. */\n          navPrev={<div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\"><SvgIcon><Icon path={mdiChevronLeft} size={6} /></SvgIcon></div>}\n          navNext={<div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\"><SvgIcon><Icon path={mdiChevronRight} size={6} /></SvgIcon></div>}\n          {...others}\n        />\n      </div>\n    );\n  }\n}\n\nSingleDatePickerComponent.propTypes = {\n  date: PropTypes.object,\n  onDateChange: PropTypes.func.isRequired,\n};\n\nSingleDatePickerComponent.defaultProps = {\n  date: null,\n};\n\nexport default SingleDatePickerComponent;\n","import React from 'react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArrowLeftRight, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\n\nimport DateRangePickerWrapper from './range-date-range-picker.container';\nimport 'react-dates/initialize'; // necessary for latest version\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport './range-date-picker.local.scss';\n\nexport class RangeDatePicker extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"date-picker-container\">\n        <DateRangePickerWrapper\n          anchorDirection=\"left\"\n          autoFocus={false}\n          block={false}\n          customArrowIcon={<SvgIcon><Icon path={mdiArrowLeftRight} /></SvgIcon>}\n          customCloseIcon={null}\n          customInputIcon={null}\n          disabled={false}\n          displayFormat=\"MMM D YYYY\"\n          enableOutsideDays={false}\n          endDateId=\"endDate\"\n          endDatePlaceholderText=\"End Date\"\n          horizontalMargin={0}\n          initialEndDate={null}\n          initialStartDate={moment()}\n          initialVisibleMonth={null}\n          isDayBlocked={() => false}\n          isDayHighlighted={() => false}\n          isOutsideRange={() => false}\n          isRTL={false}\n          keepOpenOnDateSelect={false}\n          minimumNights={0}\n          monthFormat=\"MMMM YYYY\"\n          navPrev={<div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\"><SvgIcon><Icon path={mdiChevronLeft} size={6} /></SvgIcon></div>}\n          navNext={<div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\"><SvgIcon><Icon path={mdiChevronRight} size={6} /></SvgIcon></div>}\n          navPosition=\"navPositionTop\"\n          numberOfMonths={2}\n          onClose={() => false}\n          onNextMonthClick={() => false}\n          onPrevMonthClick={() => false}\n          orientation=\"horizontal\"\n          phrases={{\n            calendarLabel: 'Calendar',\n            chooseAvailableEndDate: function noRefCheck() {},\n            chooseAvailableStartDate: function noRefCheck() {},\n            clearDates: 'Clear Dates',\n            closeDatePicker: 'Close',\n            dateIsSelected: function noRefCheck() {},\n            dateIsSelectedAsEndDate: function noRefCheck() {},\n            dateIsSelectedAsStartDate: function noRefCheck() {},\n            dateIsUnavailable: function noRefCheck() {},\n            enterKey: 'Enter key',\n            escape: 'Escape key',\n            focusStartDate: 'Interact with the calendar and add the check-in date for your trip.',\n            hideKeyboardShortcutsPanel: 'Close the shortcuts panel.',\n            homeEnd: 'Home and end keys',\n            jumpToNextMonth: 'Move forward to switch to the next month.',\n            jumpToPrevMonth: 'Move backward to switch to the previous month.',\n            keyboardBackwardNavigationInstructions: 'Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardForwardNavigationInstructions: 'Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardShortcuts: 'Keyboard Shortcuts',\n            leftArrowRightArrow: 'Right and left arrow keys',\n            moveFocusByOneDay: 'Move backward (left) and forward (right) by one day.',\n            moveFocusByOneMonth: 'Switch months.',\n            moveFocusByOneWeek: 'Move backward (up) and forward (down) by one week.',\n            moveFocustoStartAndEndOfWeek: 'Go to the first or last day of a week.',\n            openThisPanel: 'Open this panel.',\n            pageUpPageDown: 'page up and page down keys',\n            questionMark: 'Question mark',\n            returnFocusToInput: 'Return to the date input field.',\n            roleDescription: 'datepicker',\n            selectFocusedDate: 'Select the date in focus.',\n            showKeyboardShortcutsPanel: 'Open the keyboard shortcuts panel.',\n            upArrowDownArrow: 'up and down arrow keys',\n          }}\n          regular={false}\n          renderCalendarDay={undefined}\n          renderDayContents={(text) => this.renderDayContents(text)}\n          renderMonthText={null}\n          reopenPickerOnClearDates={false}\n          required={false}\n          screenReaderInputMessage=\"\"\n          showClearDates={false}\n          showDefaultInputIcon={false}\n          small={false}\n          startDateId=\"startDate\"\n          startDatePlaceholderText=\"Start Date\"\n          stateDateWrapper={() => false}\n          withFullScreenPortal={false}\n          withPortal={false}\n          onDatesChange={this.props.onDatesChange}\n          endDate={this.props.endDate}\n          startDate={this.props.startDate}\n          focusedInput={null}\n          hideKeyboardShortcutsPanel\n        />\n      </div>\n    );\n  }\n\n  renderDayContents = (text) => <div className=\"wrapper-custom-date\"><div className=\"custom-date\">{text.date()}</div></div>;\n}\n\nRangeDatePicker.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onDatesChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { array, object, oneOfType } from 'prop-types';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline,\n  mdiCancel,\n  mdiHexagonMultipleOutline,\n  mdiDatabase\n} from '@mdi/js';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { Center } from 'shared/components';\n\nimport './JobResults.local.scss';\n\nexport class JobResults extends React.PureComponent {\n  render() {\n    const { jobs } = this.props;\n\n    if (jobs && jobs.size === 0) {\n      return <Center>Job list is empty</Center>;\n    }\n    return <>{this.renderJobsResults(jobs)}</>;\n  }\n\n  renderJobsResults = jobs =>\n    jobs.map((job, index) => (\n      <Link key={index} to={`/jobs/job?invocation=${job.get('uuid')}`}>\n        <div className=\"result-job-row\">\n          <div className=\"job-status-container\">{this.jobStatus(job.get('status'))}</div>\n          <div className=\"job-content\">\n            <div className=\"first-row\">{this.formatName(job.get('process'))}</div>\n            <div className=\"second-row\">\n              <div className=\"time\">\n                <ScheduleIcon />\n                {moment(job.get('date_invoke')).format('D.MM.YYYY, HH:mm:ss')}\n              </div>\n              {job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    ));\n\n  jobStatus = status => {\n    switch (status) {\n      case 'EXECUTING':\n        return (\n          <div className=\"job-status executing\">\n            <SvgIcon>\n              <Icon path={mdiProgressClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SUCCEEDED':\n        return (\n          <div className=\"job-status succeeded\">\n            <SvgIcon>\n              <Icon path={mdiCheckCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SCHEDULED':\n        return (\n          <div className=\"job-status scheduled\">\n            <SvgIcon>\n              <Icon path={mdiCalendarArrowRight} />\n            </SvgIcon>\n          </div>\n        );\n      case 'ABORTED':\n        return (\n          <div className=\"job-status aborted\">\n            <SvgIcon>\n              <Icon path={mdiStopCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'DELAYED':\n        return (\n          <div className=\"job-status delayed\">\n            <SvgIcon>\n              <Icon path={mdiTimelineClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'FAILED':\n        return (\n          <div className=\"job-status failed\">\n            <SvgIcon>\n              <Icon path={mdiAlertRhombusOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'KILLED':\n        return (\n          <div className=\"job-status killed\">\n            <SvgIcon>\n              <Icon path={mdiCancel} />\n            </SvgIcon>\n          </div>\n        );\n      default:\n        return '';\n    }\n  };\n\n  formatName = jobName => {\n    const formattedName = [];\n    const name = jobName.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    return formattedName;\n  };\n}\n\nJobResults.propTypes = {\n  jobs: oneOfType([array, object])\n};\n\nexport default JobResults;\n","import React, { createContext, useContext } from 'react';\nimport { any, node } from 'prop-types';\n\nconst Context = createContext();\n\nexport function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nSwitch.propTypes = {\n  value: any,\n  children: node\n};\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nCase.propTypes = {\n  value: any,\n  children: node\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUITable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport './Table.local.scss';\n\nexport const Table = ({ columns, children, sortBehavior, changeSort, className }) => {\n  return (\n    <MUITable stickyHeader className={className}>\n      <TableHead className=\"sticky-head\">\n        <TableRow>\n          {columns.map(HeaderCell(sortBehavior, changeSort))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {children}\n      </TableBody>\n    </MUITable>\n  );\n};\n\nconst HeaderCell = (sortBehavior, changeSort) => (column, index) => (\n  <TableCell\n    key={`header_column_${index}`}\n    align={column.align}\n    component={column.component}\n    padding={column.padding}\n    sortDirection={sortBehavior.order}\n    variant={column.variant}\n  >\n    { column.sortKey ? (\n      <TableSortLabel\n        active={sortBehavior.sortKey === column.sortKey}\n        direction={sortBehavior.order}\n        onClick={changeSort(column.sortKey, sortBehavior.order === 'asc' ? 'desc' : 'asc')}\n      >\n        {column.label}\n      </TableSortLabel>\n    ) : column.label }\n  </TableCell>\n);\n\nTable.Row = TableRow;\nTable.Cell = TableCell;\n\nTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  sortBehavior: PropTypes.shape({\n    order: PropTypes.string,\n    sortKey: PropTypes.string\n  }),\n  changeSort: PropTypes.func\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nexport class LogoutPage extends React.PureComponent {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.logout.title\"\n        isLoading\n      >\n        <div />\n      </Container>\n    );\n  }\n\n  static path = '/logout';\n}\n\nLogoutPage.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: (data) => dispatch(actions.logout.dispatchLoading(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartTimelineVariant } from '@mdi/js';\n\nimport {\n  JobItem,\n  WorkloadGraph,\n  CircleImg,\n  NumberLabel,\n  StringLabel,\n  Center,\n  RangeDatePicker\n} from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { filterStatusSelector } from './store/state';\nimport { Header } from 'core/components/Header';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { StatusContainer, Search } from './containers';\nimport { ConnectedServerUsage } from './containers/ServerUsage/ServerUsage';\n\nimport './root.module.scss';\n\nexport class RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n\n    this.onChangeDatesHandler = this.onChangeDatesHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n  }\n\n  render() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const averageJobs = Math.round(parseInt(this.props.jobs.get('total_count'), 10) / (days + 1));\n\n    return (\n      <div className={this.props.className}>\n        <Header>\n          <h1 className=\"header-title\">Dashboard</h1>\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Search />\n        <StatusContainer />\n        <div className=\"summary-container\">\n          <div className=\"jobs-container\">\n            {this.props.jobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <>\n                <div className=\"jobs-content\" id=\"jobs-content\">\n                  {this.filteredJobs(this.props.storeFilterStatus)}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"workload-container\">\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Generating Workload Chart</Loader>\n                </Center>\n              ) : (\n                <>\n                  <div className=\"workload-header\">\n                    <CircleImg\n                      image={\n                        <SvgIcon>\n                          <Icon path={mdiChartTimelineVariant} />\n                        </SvgIcon>\n                      }\n                    />\n                    <NumberLabel number={averageJobs} />\n                    <StringLabel\n                      text={\n                        <>\n                          <FormattedMessage id=\"dashboard.jobs\" />/\n                          <FormattedMessage id=\"dashboard.day\" />\n                        </>\n                      }\n                    />\n                  </div>\n                  <div className=\"workload-content\">\n                    <WorkloadGraph\n                      data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                        currentDate: moment.unix(\n                          this.props.globalFilters.get('startDate'),\n                          'YYYY-MM-DD'\n                        ),\n                        endDate: moment.unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                      })}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"servers-usage-container\">\n              <ConnectedServerUsage />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  filteredJobs = status => {\n    const { jobs } = this.props;\n\n    if (status === 'ALL') {\n      return (\n        <>\n          {jobs\n            .get('content')\n            .slice(0, 20)\n            .map((item, index) => (\n              <JobItem key={index} job={item} />\n            ))}\n          {jobs.get('total_count') > 20 && (\n            <Button className=\"full-log center qa-view-full-log\">\n              <Link to=\"/jobs\">\n                <FormattedMessage id=\"dashboard.view-full-log\" />\n              </Link>\n            </Button>\n          )}\n        </>\n      );\n    }\n\n    const totalFilteredJobs = jobs.get('content').filter(job => job.get('status') === status).size;\n\n    if (totalFilteredJobs === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <>\n        {jobs\n          .get('content')\n          .filter(job => job.get('status') === status)\n          .slice(0, 20)\n          .map((item, index) => (\n            <JobItem key={index} job={item} />\n          ))}\n        {totalFilteredJobs > 20 && (\n          <Button className=\"full-log center qa-view-full-log\">\n            <Link to={`/jobs?status=${status}`}>\n              <FormattedMessage id=\"dashboard.view-full-log\" />\n            </Link>\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  onChangeDatesHandler(range) {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n\n      const days = moment(range.endDate, 'YYYY-MM-DD')\n        .utc()\n        .diff(moment(range.startDate, 'YYYY-MM-DD').utc(), 'days');\n\n      this.props.getJobs({\n        date_invoke: moment(range.startDate)\n          .utc()\n          .format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      });\n    }\n  }\n}\n\nRootModule.propTypes = {\n  className: PropTypes.string,\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nRootModule.defaultProps = {\n  className: 'dashboard'\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  storeFilterStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport classnames from 'classnames';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.local.scss';\n\nexport const Loader = ({ children, inline }) => {\n  return (\n    <div className={classnames('loader', { inline })}>\n      <CircularProgress />\n      {children && <div className=\"loader-text\">{children}</div>}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  children: node\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './ParameterLoader.local.scss';\n\nexport const ParameterLoader = ({ children }) => {\n  return (\n    <div className=\"loader\">\n      {children && <div className=\"loader-text\">{children}</div>}\n      <div className=\"loader-slot\">\n        <LinearProgress variant=\"indeterminate\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { jobsSelector } from 'shared/store/state';\nimport { filterStatusSelector } from '../../store/state';\n\nimport { Daemon, JobStatus } from './components';\n\nimport './status.local.scss';\n\nexport class StatusContainer extends React.PureComponent {\n  render() {\n    const { className, jobs } = this.props;\n    return (\n      <Paper className={className}>\n        <Daemon />\n        <div className=\"jobs-status-container\">\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader inline>Loading jobs</Loader>\n            </Center>\n          ) : (\n            this.filterJobs(jobs.toJS().content)\n          )}\n        </div>\n      </Paper>\n    );\n  }\n\n  filterJobs = jobs => {\n    const { active } = this.props;\n    const count = {\n      executing: 0,\n      succeeded: 0,\n      scheduled: 0,\n      aborted: 0,\n      failed: 0\n    };\n    count.executing = jobs.filter(job => job.status === 'EXECUTING')?.length;\n    count.succeeded = jobs.filter(job => job.status === 'SUCCEEDED')?.length;\n    count.scheduled = jobs.filter(job => job.status === 'SCHEDULED')?.length;\n    count.aborted = jobs.filter(job => job.status === 'ABORTED')?.length;\n    count.failed = jobs.filter(job => job.status === 'FAILED')?.length;\n\n    return (\n      <>\n        <JobStatus count={count.executing} status=\"EXECUTING\" active={active} />\n        <JobStatus count={count.succeeded} status=\"SUCCEEDED\" active={active} />\n        <JobStatus count={count.scheduled} status=\"SCHEDULED\" active={active} />\n        <JobStatus count={count.aborted} status=\"ABORTED\" active={active} />\n        <JobStatus count={count.failed} status=\"FAILED\" active={active} />\n      </>\n    );\n  };\n}\n\nStatusContainer.propTypes = {\n  className: PropTypes.string,\n  jobs: PropTypes.object.isRequired\n};\n\nStatusContainer.defaultProps = {\n  className: 'status-container'\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  active: filterStatusSelector(state)\n});\n\nexport default connect(mapStateToProps)(StatusContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { daemonPoller } from '../../../../store/tasks';\nimport { isDaemonRunning } from '../../../../store/selectors';\n\nimport './daemon.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const Daemon = () => {\n  const running = useSelector(isDaemonRunning);\n\n  useEffect(() => {\n    daemonPoller.start();\n\n    return () => {\n      daemonPoller.stop();\n    };\n  }, []);\n\n  return (\n    <div className=\"daemon qa-daemon-status\">\n      {running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.running\" />}>\n          <div className=\"status running\">\n            <PlayCircleOutlineIcon />\n          </div>\n        </LightTooltip>\n      )}\n\n      {!running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.not.running\" />}>\n          <div className=\"status not-running\">\n            <ErrorOutlineIcon className=\"not-running\" />\n          </div>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport { actions } from 'dashboard/store/actions';\nimport { filterStatusSelector } from 'dashboard/store/state';\n\nimport './job-status.local.scss';\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return <>{this.renderContent()}</>;\n  }\n\n  filterByStatus = status => {\n    if (this.props.storeStatus === status.toUpperCase()) {\n      this.props.setStatus('ALL');\n    } else {\n      this.props.setStatus(status.toUpperCase());\n    }\n  };\n\n  renderContent() {\n    let icon = null;\n    let status = '';\n    switch (this.props.status) {\n      case 'EXECUTING':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiProgressClock} />\n          </SvgIcon>\n        );\n        status = 'executing';\n        break;\n      case 'SUCCEEDED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCheckCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'succeeded';\n        break;\n      case 'SCHEDULED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCalendarArrowRight} />\n          </SvgIcon>\n        );\n        status = 'scheduled';\n        break;\n      case 'ABORTED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiStopCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'aborted';\n        break;\n      case 'FAILED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiAlertRhombusOutline} />\n          </SvgIcon>\n        );\n        status = 'failed';\n        break;\n      default:\n        // error message\n        break;\n    }\n\n    if (icon) {\n      return (\n        <div\n          className={classnames(`job-status ${status}`, {\n            active: this.props.status === this.props.active\n          })}\n          role=\"presentation\"\n          onClick={() => this.filterByStatus(status)}\n        >\n          <div className=\"header\">\n            <div className=\"icon\">{icon}</div>\n            <div className=\"count\">{this.props.count}</div>\n          </div>\n          <div className=\"status\">{this.props.status}</div>\n        </div>\n      );\n    }\n    // error case\n    return null;\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setStatus: PropTypes.func\n};\n\nexport const mapStateToProps = state => ({\n  storeStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setStatus: status => dispatch(actions.setFilterStatus.dispatchEvent(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobStatus);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector, processesSearchedSelector } from 'shared/store/state';\n\nimport { FormattedMessage } from 'react-intl';\nimport { debounce } from 'lodash';\nimport { mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport Paper from '@material-ui/core/Paper';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { SearchInput } from 'shared/components';\nimport { SearchResults } from '../../components';\n\nimport './search-area.local.scss';\n\n/** EXPERIMENTAL :D */\nimport { AddFilter } from '../../components/add-filter/add-filter';\n\nexport class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSearchResults: false,\n      searchTerm: '',\n      selectedFilter: null\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    if (this.state.showSearchResults) {\n      this.getSearchResults(searchedTerm);\n    }\n  }, 500);\n\n  render() {\n    const { className, getSearchedJobs, getSearchedProcesses } = this.props;\n    return (\n      <Paper\n        className={`${className} ${this.state.showSearchResults ? 'no-bottom-radius' : ''}\n        `}\n      >\n        <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n\n        <AddFilter\n          filters={this.state.selectedFilter}\n          updateFilters={this.updateSelectedFilter}\n          hasSearchTerm={this.state.searchTerm.length > 0}\n        />\n\n        {this.state.searchTerm.length > 0 && (\n          <div className=\"clear-search\">\n            <ClearIcon onClick={this.clearSearch} />\n          </div>\n        )}\n        {this.state.showSearchResults && (\n          <div className=\"search-results-container\">\n            <SearchResults\n              category=\"jobs\"\n              totalResults={getSearchedJobs.get('total_count')}\n              content={getSearchedJobs.get('content')}\n              isLoading={getSearchedJobs.get('fetching')}\n              displayedResults={this.state.selectedFilter ? 7 : 3}\n              filters={{\n                nameFilter: this.state.searchTerm,\n                customFilter: this.state.selectedFilter\n              }}\n            />\n            {!this.state.selectedFilter && (\n              <SearchResults\n                category=\"processes\"\n                totalResults={getSearchedProcesses.get('total_count')}\n                content={getSearchedProcesses.get('content')}\n                isLoading={getSearchedProcesses.get('fetching')}\n                displayedResults={3}\n              />\n            )}\n            <div className=\"full-results-container qa-full-search-results\">\n              <div className=\"icon-container\">\n                <SearchIcon />\n              </div>\n              <div className=\"content\">\n                <FormattedMessage id=\"dashboard.view-full-search-results\" />\n              </div>\n              <div className=\"open qa-open-full-results\">\n                <SvgIcon>\n                  <Icon path={mdiChevronRight} />\n                </SvgIcon>\n              </div>\n            </div>\n          </div>\n        )}\n      </Paper>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: this.state.selectedFilter ? 7 : 3,\n      page: 1,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    if (this.state.selectedFilter) {\n      switch (this.state.selectedFilter.type) {\n        case 'user':\n          QSP.owner = this.state.selectedFilter.value;\n          break;\n        case 'status':\n          QSP.status = this.state.selectedFilter.value.toUpperCase();\n          break;\n        case 'day':\n          QSP.date_invoke = moment(this.state.selectedFilter.value).format('YYYY-MM-DD');\n          QSP.period = 1;\n          break;\n        default:\n          break;\n      }\n    }\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n\n    if (!this.state.selectedFilter) {\n      this.props.searchProcesses({ name_filter: searchedTerm, page_size: 3, page: 1 });\n    }\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length < 3 && this.state.showSearchResults) {\n      this.setState({ showSearchResults: false });\n    } else if (searchedTerm.length === 3) {\n      if (!this.state.showSearchResults) {\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    } else if (searchedTerm.length > 3) {\n      if (!this.state.showSearchResults) {\n        // used for pasted value\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({\n      showSearchResults: false,\n      searchTerm: '',\n      selectedFilter: null\n    });\n  };\n\n  updateSelectedFilter = (filter /** operationType */) => {\n    /**\n     *  FIXME: TO OUR FUTURE SELVES\n     *  save(null) will not be ok in terms of filters being arrays,\n     *  ideally we should delimit the operation delete, add, edit  @Constanin you will do this my friend :D\n     */\n\n    if (this.state.searchTerm) {\n      this.setState({ selectedFilter: filter }, () => {\n        this.getSearchResults(this.state.searchTerm);\n      });\n    } else {\n      this.setState({ selectedFilter: filter });\n    }\n  };\n}\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  searchJobs: PropTypes.func.isRequired,\n  getSearchedJobs: PropTypes.object.isRequired,\n  searchProcesses: PropTypes.func.isRequired,\n  getSearchedProcesses: PropTypes.object.isRequired\n};\n\nSearch.defaultProps = {\n  className: 'search-container'\n};\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state),\n  getSearchedProcesses: processesSearchedSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data)),\n  searchProcesses: data => dispatch(actions.searchProcesses.dispatchLoading(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed } from '@mdi/js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport { JobResults } from 'shared/components/JobResults';\nimport { createUrl } from 'shared/lib';\n\nimport './search-results.local.scss';\n\nexport class SearchResultsComponent extends React.PureComponent {\n  render() {\n    const { className, category, totalResults, isLoading, displayedResults, content } = this.props;\n    return (\n      <div className={className}>\n        {isLoading ? (\n          <div className=\"header-area\">\n            <div className=\"category-name\">{category}</div>\n            <div className=\"loading\">\n              <CircularProgress size=\"20px\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"header-area\">\n              <div className=\"category-name\">{category}</div>\n              <div className=\"separator\">-</div>\n              <div className=\"total-results\">\n                {totalResults} <FormattedMessage id=\"dashboard.results\" />\n              </div>\n              {totalResults > displayedResults && (\n                <Button className=\"all-results qa-view-all-results\">\n                  {category === 'jobs' && (\n                    <Link to={() => this.createURLLink()}>\n                      <FormattedMessage id=\"dashboard.view-all-results\" />\n                    </Link>\n                  )}\n                  {category !== 'jobs' && <FormattedMessage id=\"dashboard.view-all-results\" />}\n                </Button>\n              )}\n            </div>\n            <div className=\"content-area\">\n              {category === 'jobs' && <JobResults jobs={content} />}\n              {category === 'processes' && this.renderProcessesResults()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderProcessesResults = () =>\n    this.props.content.map((process, index) => (\n      <div key={index} className=\"result-process-row\">\n        <div className=\"icon-container\">\n          <SvgIcon>\n            <Icon path={mdiPlaySpeed} />\n          </SvgIcon>\n        </div>\n        <div className=\"process-container\">{process.get('name')}</div>\n      </div>\n    ));\n\n  createURLLink = () => {\n    let url = '/jobs/search-results';\n    const params = {};\n\n    if (this.props.filters.nameFilter) {\n      params.name_filter = this.props.filters.nameFilter;\n    }\n\n    if (this.props.filters.customFilter) {\n      params[this.props.filters.customFilter.type] = this.props.filters.customFilter.value;\n    }\n\n    url = createUrl(url, params);\n    return url;\n  };\n}\n\nexport default SearchResultsComponent;\n\nSearchResultsComponent.propTypes = {\n  className: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  category: PropTypes.string,\n  totalResults: PropTypes.number,\n  isLoading: PropTypes.bool,\n  displayedResults: PropTypes.number\n};\n\nSearchResultsComponent.defaultProps = {\n  className: 'results-container',\n  content: [],\n  category: '',\n  totalResults: 0,\n  isLoading: false,\n  displayedResults: 3\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { JobsEffect } from './jobs/jobs.effect';\nimport { JobsConnectionsEffect } from './connections/connections.effect';\nimport { SearchJobsEffect } from './search-jobs/search-jobs.effect';\nimport { SearchProcessesEffect } from './search-processes/search-processes.effect';\nimport { GlobalFiltersEffect } from './global-filters/global-filters.effect';\n\nexport const sharedEffects = [\n  JobsEffect,\n  JobsConnectionsEffect,\n  SearchJobsEffect,\n  SearchProcessesEffect,\n  GlobalFiltersEffect\n];\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Cookie from 'js-cookie';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\n\nimport { Login, Logout } from 'session';\nimport { actionStates } from 'shared/lib/action-creator';\nimport { authorizationSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Layout } from './core';\n\nimport './scoped-css-mui-compatibility';\n\nexport class RootModule extends React.PureComponent {\n  componentDidMount() {\n    if (!Cookie.get('Authorization')) {\n      this.props.history.push('/login');\n      this.props.setAuthorization();\n\n      return;\n    }\n\n    this.props.checkAuthorization();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.authorizationStatus !== prevProps.authorizationStatus &&\n      this.props.authorizationStatus === actionStates.FAIL\n    ) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    if (this.props.authorizationStatus === actionStates.LOADING) {\n      return (\n        <Center>\n          <CircularProgress />\n        </Center>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path={Login.path} component={Login} />\n        <Route exact path={Logout.path} component={Logout} />\n        <Route path=\"/\" component={Layout} />\n      </Switch>\n    );\n  }\n}\n\nRootModule.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  authorizationStatus: PropTypes.oneOf([\n    '',\n    actionStates.SUCCESS,\n    actionStates.LOADING,\n    actionStates.FAIL\n  ]).isRequired,\n  setAuthorization: PropTypes.func.isRequired,\n  checkAuthorization: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  authorizationStatus: authorizationSelector(state).get('status')\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  checkAuthorization: () => dispatch(actions.checkAuthorization.dispatchLoading()),\n  setAuthorization: () => dispatch(actions.checkAuthorization.dispatchFail())\n});\n\nexport default hot(connect(mapStateToProps, mapDispatchToProps)(RootModule));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Dashboard } from 'dashboard';\nimport { Jobs } from 'jobs';\nimport { Entities } from 'entities';\nimport { UsersAndGroups } from 'users-manager';\nimport { Explorer } from 'explorer';\nimport { Sidebar } from './containers';\nimport { JobProcess } from '../job-process';\nimport { ConnectedJobsSearchResults } from 'jobs-search-results/JobsSearchResults';\nimport { ConnectedExecutiveDashboard } from 'executive-dashboard/ExecutiveDashboard';\nimport { LicenseCollection } from 'license-collection/LicenseCollection';\n\nimport './root.local.scss';\n\nexport class RootLayout extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Sidebar />\n        <div className=\"app-container\">\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/jobs/search-results\" component={ConnectedJobsSearchResults} />\n            <Route exact path=\"/jobs/job\" component={JobProcess} />\n            <Route exact path=\"/system/entities\" component={Entities} />\n            <Route path=\"/system/mas-accounts\" component={UsersAndGroups} />\n            <Route exact path=\"/system/explorer\" component={Explorer} />\n            <Route\n              exact\n              path=\"/compliance/executive-dashboard\"\n              component={ConnectedExecutiveDashboard}\n            />\n            <Route exact path=\"/compliance/license-collection\" component={LicenseCollection} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nRootLayout.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { connect } from 'react-redux';\n\nimport { getWorkloadData } from 'shared/lib/workload';\n\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\n\nimport { Header } from 'core/components/Header';\nimport {\n  WorkloadGraph,\n  Center,\n  RangeDatePicker,\n  SimpleSearchInput,\n  Switch\n} from 'shared/components';\nimport { Main, Paper } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport { JobItem } from './components/job-item';\nimport { JobList } from './components/job-list';\n\nimport { Filters } from './containers/filters';\nimport { JobsInvocations } from './containers/jobs-invocations';\n\nimport { Schedule } from './containers/Schedule/Schedule';\n\nimport './jobs.local.scss';\n\nfunction renderJobItem(item, index) {\n  return <JobItem extended key={index} job={item} />;\n}\n\nclass RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      },\n      shell_host_address_filter: query.get('shell_host_address_filter'),\n      protocol_filter: query.get('protocol_filter'),\n      status: query.get('status'),\n      database_name_filter: query.get('database_name_filter'),\n      name_filter: '',\n      selectedTab: 'all'\n    };\n  }\n\n  render() {\n    const {\n      shell_host_address_filter,\n      protocol_filter,\n      status,\n      database_name_filter,\n      selectedTab\n    } = this.state;\n\n    return (\n      <JobsInvocations>\n        <Header title=\"Jobs\">\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <NavigationTab\n                tabs={[\n                  { label: 'All jobs', value: 'all' },\n                  { label: 'Upcoming', value: 'upcoming' }\n                ]}\n                active={selectedTab}\n                onClick={this.handleOnTabChange}\n              />\n            </Paper.Header>\n            <Switch value={selectedTab}>\n              <Switch.Case value=\"all\">\n                <Paper.Header>\n                  <div style={{ height: 220, width: '100%' }}>\n                    {this.props.jobs.get('fetching') ? (\n                      <Center>\n                        <Loader>Computing workload</Loader>\n                      </Center>\n                    ) : (\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                      />\n                    )}\n                  </div>\n                </Paper.Header>\n              </Switch.Case>\n              <Switch.Case value=\"upcoming\">{null}</Switch.Case>\n            </Switch>\n            <Paper.Content scrollable={false}>\n              <div className=\"jobs-filters-controllers\">\n                <div className=\"job-search\">\n                  <SimpleSearchInput\n                    value={this.state.name_filter}\n                    onBlur={() => this.performFilter(this.state)}\n                    onChange={this.onSearchInputChange}\n                  />\n                </div>\n                <Filters\n                  selections={{\n                    shell_host_address_filter,\n                    protocol_filter,\n                    status,\n                    database_name_filter\n                  }}\n                  onChange={this.handleOnFilterChange}\n                />\n              </div>\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Loading jobs list</Loader>\n                </Center>\n              ) : (\n                <JobList items={this.returnListBasedOnTab()}>{renderJobItem}</JobList>\n              )}\n            </Paper.Content>\n            <Paper.Footer>\n              <Schedule />\n              <Button to=\"/jobs/job\">New Job</Button>\n            </Paper.Footer>\n          </Paper>\n        </Main>\n      </JobsInvocations>\n    );\n  }\n\n  updateQSP = (filter, value) => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (!value) {\n      query.delete(filter);\n    } else if (query.has(filter) && query.get(filter) !== value) {\n      query.set(filter, value);\n    } else {\n      query.append(filter, value);\n    }\n\n    query.toString();\n\n    this.props.history.push({ search: `?${query}` });\n  };\n\n  handleOnTabChange = tab => {\n    this.setState({ selectedTab: tab });\n  };\n\n  handleOnFilterChange = (filter, value) => {\n    this.updateQSP(filter, value);\n\n    this.setState(\n      {\n        [filter]: value\n      },\n      () => {\n        this.performFilter(this.state);\n      }\n    );\n  };\n\n  returnListBasedOnTab = () => {\n    const { selectedTab, status } = this.state;\n    const list = this.props.jobs.get('content');\n\n    if (status) {\n      return list.filter(item => item.get('status') === status);\n    }\n\n    if (selectedTab === 'upcoming') {\n      return list.filter(item => item.get('status') === 'SCHEDULED');\n    }\n\n    return list;\n  };\n\n  performFilter = ({\n    shell_host_address_filter,\n    protocol_filter,\n    status,\n    database_name_filter,\n    name_filter\n  }) => {\n    const { globalFilters } = this.props;\n\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const payload = {\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    };\n\n    if (shell_host_address_filter) {\n      payload.shell_host_address_filter = shell_host_address_filter;\n    }\n\n    if (protocol_filter) {\n      payload.protocol_filter = protocol_filter;\n    }\n\n    if (status) {\n      payload.status = status;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (name_filter) {\n      payload.name_filter = name_filter;\n    }\n\n    this.props.getJobs(payload);\n  };\n\n  onSearchInputChange = event => {\n    this.setState({\n      name_filter: event.target.value\n    });\n  };\n\n  onChangeDatesHandler = range => {\n    this.setState(\n      {\n        range: {\n          startDate: range.startDate,\n          endDate: range.endDate\n        }\n      },\n      () => {\n        this.props.setGlobalFilters(range);\n        this.performFilter(this.state);\n      }\n    );\n  };\n}\nRootModule.propTypes = {\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n  },\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport { bool } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MUITextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from '../../LightTooltip/LightTooltip';\n\nimport './Input.local.scss';\n\nexport const Input = forwardRef(function InputFw(\n  { inline, error, size, children, description, multiline, ...rest },\n  ref\n) {\n  const InputProps = { ...(rest.InputProps && rest.InputProps) };\n\n  if (description) {\n    InputProps.endAdornment = (\n      <>\n        <InputAdornment position=\"end\">\n          <LightTooltip title={description}>\n            <SvgIcon>\n              <path d={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        </InputAdornment>\n        {InputProps.endAdornment}\n      </>\n    );\n  }\n\n  return (\n    <MUITextField\n      ref={ref}\n      fullWidth\n      className={classnames('input-field', { inline, error })}\n      variant=\"outlined\"\n      error={error}\n      {...(multiline && {\n        multiline: true,\n        rows: 7\n      })}\n      {...rest}\n      InputProps={InputProps} // eslint-disable-line\n      size={size}\n    >\n      {children}\n    </MUITextField>\n  );\n});\n\nInput.propTypes = {\n  inline: bool,\n  error: bool\n};\n","import React from 'react';\nimport MUIButton from '@material-ui/core/Button';\n\nimport './Button.local.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nexport const Button = ({ to, href, ...props }) => {\n  const link = to || href;\n\n  if (link) {\n    return <MUIButton color=\"primary\" {...props} component={LinkBehavior} to={link} />;\n  }\n\n  return <MUIButton color=\"primary\" {...props} />;\n};\n","import React from 'react';\nimport { bool, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Overflow } from '../Overflow/Overflow';\n\nimport './Paper.local.scss';\n\nexport const Paper = ({ padded, flex, children, ...rest }) => (\n  <div className={classnames('paper', { padded, [flex]: flex })} {...rest}>\n    {children}\n  </div>\n);\n\nPaper.propTypes = {\n  children: node,\n  padded: bool,\n  flex: oneOf(['column', 'row'])\n};\n\nPaper.defaultProps = {\n  padded: true,\n  flex: 'column'\n};\n\nexport const PaperHeader = ({ children, ...rest }) => (\n  <header className=\"paper-header\" {...rest}>\n    {children}\n  </header>\n);\n\nPaperHeader.propTypes = {\n  children: node\n};\n\nexport const PaperContent = ({ children, scrollable }) => {\n  if (scrollable) {\n    return (\n      <Overflow className=\"paper-content\" variant=\"white\">\n        {children}\n      </Overflow>\n    );\n  }\n\n  return <main className=\"paper-content\">{children}</main>;\n};\n\nPaperContent.propTypes = {\n  scrollable: bool,\n  children: node\n};\n\nPaperContent.defaultProps = {\n  scrollable: true\n};\n\nexport const PaperFooter = ({ children }) => <footer className=\"paper-footer\">{children}</footer>;\n\nPaperFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nPaperFooter.Left = LeftSideSlot;\nPaperFooter.Right = RightSideSlot;\n\nexport const PaperTitle = ({ children }) => <h2 className=\"paper-title\">{children}</h2>;\n\nPaperTitle.propTypes = {\n  children: node\n};\n\nPaper.Header = PaperHeader;\nPaper.Title = PaperTitle;\nPaper.Content = PaperContent;\nPaper.Footer = PaperFooter;\n","import React from 'react';\nimport { node, bool } from 'prop-types';\nimport classnames from 'classnames';\nimport './Main.local.scss';\n\nexport const Main = ({ flex, children }) => (\n  <main\n    className={classnames('page-main', {\n      flex\n    })}\n  >\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: node,\n  flex: bool\n};\n\nMain.defaultProps = {\n  flex: true\n};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Section.local.scss';\n\nexport const Section = ({ children, full }) => (\n  <section\n    className={classnames('section-block', {\n      full\n    })}\n  >\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  children: node,\n  full: bool\n};\n\nexport const SectionTitle = ({ children, info }) => (\n  <>\n    <h3 className=\"section-title\">{children}</h3>\n    {info && <h4 className=\"section-title-info\">{info}</h4>}\n  </>\n);\n\nSectionTitle.propTypes = {\n  children: node,\n  info: node\n};\n\nexport const SectionHeader = ({ children }) => (\n  <>\n    <header className=\"section-header\">{children}</header>\n  </>\n);\n\nSectionHeader.propTypes = {\n  children: node\n};\n\nexport const SectionInfo = ({ children }) => (\n  <>\n    <h4 className=\"section-title-info\">{children}</h4>\n  </>\n);\n\nSectionInfo.propTypes = {\n  children: node\n};\n\nexport const SectionContent = ({ children }) => (\n  <>\n    <main className=\"section-content\">{children}</main>\n  </>\n);\n\nSection.Header = SectionHeader;\nSection.Content = SectionContent;\nSection.Title = SectionTitle;\nSection.Info = SectionInfo;\n","import React, { useState, useCallback } from 'react';\n\nimport { func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './ScrollableContainer.local.scss';\n\nexport const ScrollableContainer = ({ children, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  return (\n    <div\n      className={classnames('scrollable-container', {\n        scrolled,\n        [variant]: variant\n      })}\n    >\n      {children({\n        className: classnames('scrollable-element', {\n          [variant]: variant\n        }),\n        onWheel\n      })}\n    </div>\n  );\n};\n\nScrollableContainer.propTypes = {\n  children: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nScrollableContainer.defaultProps = {};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport './Column.local.scss';\n\nexport const Column = ({ children, ...rest }) => {\n  return (\n    <div className=\"column\" {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Row.local.scss';\n\nexport const Row = ({ children, compact, ...rest }) => {\n  return (\n    <div className={classnames('row', { compact })} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { Link } from 'react-router-dom';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiClockOutline, mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { JobStatus } from '../job-status';\n\nimport './job-item.local.scss';\n\nexport class JobItem extends React.PureComponent {\n  render() {\n    return (\n      <Link to={`/jobs/job/?invocation=${this.props.job.get('uuid')}`}>\n        <div className={`${this.props.className}`}>\n          <div className=\"status-icon\">\n            <JobStatus status={this.props.job.get('status')} />\n          </div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <div className=\"name\" title={this.props.job.get('process')}>\n                {this.formatName()}\n              </div>\n            </div>\n            <div className=\"second-row\">\n              <div className=\"metadata-element time\">\n                <SvgIcon>\n                  <path d={mdiClockOutline} />\n                </SvgIcon>\n                {moment(this.props.job.get('date_invoke')).format('D MMM YYYY, HH:mm:ss')}\n              </div>\n              {this.props.job.get('user_owner') && (\n                <div className=\"metadata-element run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"metadata-element dbms\">\n                    <SvgIcon>\n                      <path d={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"metadata-element server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"metadata-element database\">\n                    <SvgIcon>\n                      <path d path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItem.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired\n};\n\nJobItem.defaultProps = {\n  className: 'job-item'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiCancel,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport './job-status.local.scss';\n\nconst statusMap = {\n  EXECUTING: mdiProgressClock,\n  SUCCEEDED: mdiCheckCircleOutline,\n  SCHEDULED: mdiCalendarArrowRight,\n  DELAYED: mdiTimelineClock,\n  ABORTED: mdiStopCircleOutline,\n  FAILED: mdiAlertRhombusOutline,\n  KILLED: mdiCancel\n};\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"daemon qa-daemon-status\">\n        <div className={`status ${this.props.status.toLowerCase()}`}>\n          <SvgIcon>\n            <path d={statusMap[this.props.status]} />\n          </SvgIcon>\n        </div>\n      </div>\n    );\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string\n};\nJobStatus.defaultProps = {\n  status: ''\n};\n","import React from 'react';\n\nimport { any, func } from 'prop-types';\n\nimport { Overflow, Center } from 'shared/components/layout';\n\nimport './job-list.local.scss';\n\nexport const JobList = ({ items, children }) => {\n  const noneAvailable = items.size === 0;\n\n  if (noneAvailable) {\n    return <NoJobs />;\n  }\n\n  return (\n    <Overflow variant=\"white\" component=\"ul\">\n      {items.map((item, index, list) => (\n        <li key={index} className=\"list-item\">\n          {children(item, index, list)}\n        </li>\n      ))}\n    </Overflow>\n  );\n};\n\nJobList.propTypes = {\n  items: any,\n  children: func\n};\n\nJobList.defaultProps = {\n  items: []\n};\n\nfunction NoJobs() {\n  return (\n    <Center>\n      <p>There are no jobs available with these filters.</p>\n    </Center>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getJobsFiltersOptions } from 'shared/store/selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiHexagonMultipleOutline, mdiDatabase, mdiServer, mdiCircleSlice5 } from '@mdi/js';\n\nimport MUIselect from 'shared/components/MUIselect';\nimport './filters.scss';\n\nconst Filters = props => {\n  const { filters, selections, onChange } = props;\n  const { shell_host_address_filter, protocol_filter, status, database_name_filter } = selections;\n\n  return (\n    <div className=\"job-filters\">\n      <MUIselect\n        options={[\n          { value: '', label: 'All' },\n          ...filters.protocol.map(el => ({ value: el, label: el }))\n        ]}\n        selectedOption={{ value: protocol_filter }}\n        handleSelect={({ value }) => onChange('protocol_filter', value)}\n        label={\n          <span className=\"job-filter-select-label-wrap\">\n            <SvgIcon>\n              <path d={mdiHexagonMultipleOutline} />\n            </SvgIcon>\n            <span className=\"job-filter-select-label\">DBMS</span>\n          </span>\n        }\n      />\n      <MUIselect\n        options={[\n          { value: '', label: 'All' },\n          ...filters.database.map(el => ({ value: el, label: el }))\n        ]}\n        selectedOption={{ value: database_name_filter }}\n        handleSelect={({ value }) => onChange('database_name_filter', value)}\n        label={\n          <span className=\"job-filter-select-label-wrap\">\n            <SvgIcon>\n              <path d={mdiServer} />\n            </SvgIcon>\n            <span className=\"job-filter-select-label\">Database</span>\n          </span>\n        }\n      />\n      <MUIselect\n        options={[\n          { value: '', label: 'All' },\n          ...filters.address.map(el => ({ value: el, label: el }))\n        ]}\n        selectedOption={{ value: shell_host_address_filter }}\n        handleSelect={({ value }) => onChange('shell_host_address_filter', value)}\n        label={\n          <span className=\"job-filter-select-label-wrap\">\n            <SvgIcon>\n              <path d={mdiDatabase} />\n            </SvgIcon>\n            <span className=\"job-filter-select-label\">Server</span>\n          </span>\n        }\n      />\n      <MUIselect\n        selectedOption={{ value: status }}\n        options={[\n          { value: '', label: 'All' },\n          ...filters.status.map(el => ({ value: el, label: el }))\n        ]}\n        handleSelect={({ value }) => onChange('status', value)}\n        label={\n          <span className=\"job-filter-select-label-wrap\">\n            <SvgIcon>\n              <path d={mdiCircleSlice5} />\n            </SvgIcon>\n            <span className=\"job-filter-select-label\">Status</span>\n          </span>\n        }\n      />\n    </div>\n  );\n};\nFilters.propTypes = {\n  filters: PropTypes.object.isRequired,\n  selections: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  filters: getJobsFiltersOptions(state)\n});\n\nexport default connect(mapStateToProps)(Filters);\n","import { createSelector } from 'reselect';\n\nimport { connectionsSelector } from '../state';\n\nexport const getJobsFiltersOptions = createSelector(connectionsSelector, connections => {\n  const filters = {\n    address: [], // connections - server\n    protocol: [], // connections - dbms\n    status: ['EXECUTING', 'SUCCEEDED', 'SCHEDULED', 'ABORTED', 'FAILED'], // hardcoded\n    database: [] // connections -  database\n  };\n\n  connections.get('content').forEach(connection => {\n    const address = connection.get('address');\n    const protocol = connection.get('protocol');\n    const database = connection.getIn(['special', 'database']);\n\n    if (address && !filters.address.includes(address)) {\n      filters.address.push(address);\n    }\n\n    if (protocol && !filters.protocol.includes(protocol)) {\n      if (protocol !== 'SSH') {\n        filters.protocol.push(protocol);\n      }\n    }\n\n    if (database && !filters.database.includes(database)) {\n      filters.database.push(database);\n    }\n  });\n  return filters;\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { actions } from 'shared/store/actions';\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\nimport { globalFiltersSelector } from 'shared/store/state';\n\nexport const JobsInvocations = ({ children }) => {\n  const dispatch = useDispatch();\n  const getJobs = data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n    dispatch(actions.getConnections.dispatchLoading(data));\n  };\n  const globalFilters = useSelector(globalFiltersSelector);\n\n  React.useEffect(() => {\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    getJobs({\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n    dispatch(loadAllAccountsThunk());\n  }, []);\n\n  return children;\n};\nJobsInvocations.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './ModalFooter.local.scss';\n\nexport const ModalFooter = ({ children }) => {\n  return <footer className=\"modal-footer\">{children}</footer>;\n};\n\nModalFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nModalFooter.Left = LeftSideSlot;\nModalFooter.Right = RightSideSlot;\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\n\nimport './root.local.scss';\nimport { MenuItem } from '@material-ui/core';\nimport { fetchEntities, selectEntity, setFilterType, setFilterSearch, openModal } from './actions';\nimport { getEntities, getBreadcrumbs, ENTITY_TYPES, getSelectedEntity } from './selectors';\nimport Entity from './components/Entity';\nimport SelectedEntity from './containers/SelectedEntity';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport debounce from 'lodash/debounce';\n\n/* eslint-disable */\n\nconst ENTITY_ICONS = {\n  root: <FolderIcon />,\n  namespace: <FolderIcon />,\n  constant: <FilterCenterFocusIcon />,\n  form: <AssignmentTurnedInIcon />,\n  schedule: <EventNoteIcon />,\n  account: <VpnKeyIcon />,\n  process: <SlowMotionVideoIcon />,\n  type: <DeveloperModeIcon />,\n  exception: <WarningIcon />,\n  prototype: <AssignmentIcon />\n};\n\nlet searchWithDebounce = () => {};\n\nfunction RootModule({\n  fetchEntities,\n  selectEntity,\n  columns,\n  breadcrumbs,\n  filters,\n  setFilterType,\n  setFilterSearch,\n  selectedEntity,\n  job\n}) {\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    fetchEntities();\n    searchWithDebounce = debounce(value => {\n      setFilterSearch(value);\n    }, 700);\n    if (filters.search) {\n      setSearchInput(filters.search);\n    }\n  }, []);\n\n  function renderBreadcrumb(breadcrumb) {\n    return (\n      <span key={breadcrumb}>\n        <span className=\"breadcrumb\">{breadcrumb}</span> /{' '}\n      </span>\n    );\n  }\n\n  function renderColumn(columns, colNum) {\n    return (\n      <div key={colNum}>\n        {columns.rows.map(entity => (\n          <Entity\n            key={entity.name}\n            entity={entity}\n            selectEntity={selectEntity}\n            columns={columns}\n            entityIcons={ENTITY_ICONS}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function handleSearchChange(e) {\n    const val = e.target.value;\n    searchWithDebounce(val);\n    setSearchInput(val);\n  }\n\n  function renderColumns() {\n    if (Array.isArray(columns) && columns[0]?.rows?.length) {\n      return columns.map(renderColumn);\n    }\n    return 'No Entities Found.';\n  }\n\n  return (\n    <>\n      <Header title=\"Entities\" />\n      <Container maxWidth={false} classes={{ root: 'define-height-container' }}>\n        <div className=\"entities-breadcrumb\">{['root', ...breadcrumbs].map(renderBreadcrumb)}</div>\n        <div className=\"entities-filters\">\n          <Select value={filters.type} onChange={ev => setFilterType(ev.target.value)}>\n            {[{ type: 'all', title: 'ALL' }, ...ENTITY_TYPES].map(type => (\n              <MenuItem key={type.type} value={type.type}>\n                {type.title}\n              </MenuItem>\n            ))}\n          </Select>\n          <div className=\"entities-search-wrap\">\n            <SimpleSearchInput value={searchInput} onChange={handleSearchChange} />\n          </div>\n        </div>\n        <Grid container spacing={3} classes={{ root: 'define-height-grid-root' }}>\n          <Grid item xs={9} classes={{ root: 'define-height' }}>\n            <div className=\"columns\">{renderColumns()}</div>\n          </Grid>\n          <Grid item xs={3}>\n            <SelectedEntity selectedEntity={selectedEntity} entityIcons={ENTITY_ICONS} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nRootModule.propTypes = {\n  fetchEntities: PropTypes.func,\n  selectEntity: PropTypes.func,\n  setFilterType: PropTypes.func,\n  setFilterSearch: PropTypes.func,\n  columns: PropTypes.array,\n  breadcrumbs: PropTypes.array,\n  filters: PropTypes.object,\n  selectedEntity: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    columns: getEntities(state),\n    breadcrumbs: getBreadcrumbs(state),\n    filters: state.entities.filters,\n    selectedEntity: getSelectedEntity(state)\n  }),\n  { fetchEntities, selectEntity, setFilterType, setFilterSearch, openModal }\n)(RootModule);\n","import React from 'react';\nimport { Route, Link, Switch, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header/Header';\n\nimport { Button } from 'shared/components/controls';\n\nimport { HeaderPageSwitch } from './components/HeaderPageSwitch/HeaderPageSwitch';\n\nimport { UsersPage } from './users';\n\nimport { GroupsPage } from './groups';\n\nexport const UsersAndGroupsPage = () => {\n  return (\n    <>\n      <Header>\n        <UserManagementHeaderLinks />\n        <RightSideControls />\n      </Header>\n      <UserManagementSwitch />\n    </>\n  );\n};\n\nexport const UserManagementHeaderLinks = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  const routes = [\n    { to: `${url}/users`, label: 'Users' },\n    { to: `${url}/groups`, label: 'Groups' }\n  ];\n\n  return <HeaderPageSwitch active={location.pathname} routes={routes} />;\n};\n\nexport const RightSideControls = () => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  if (location.pathname.includes('create-new')) {\n    return null;\n  }\n\n  if (location.pathname.includes('users')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/users/create-new`} component={Link}>\n          Create User\n        </Button>\n      </div>\n    );\n  }\n\n  if (location.pathname.includes('groups')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/groups/create-new`} component={Link}>\n          Create Group\n        </Button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const UserManagementSwitch = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${url}`}>\n        <UsersPage />\n      </Route>\n      <Route path={`${url}/groups`}>\n        <GroupsPage />\n      </Route>\n      <Route path={`${url}/users`}>\n        <UsersPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default UsersAndGroupsPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { func, array, object } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { Main } from 'shared/components/layout';\n\nimport { loadAllUsersThunk } from '../store/thunks';\n\nimport './root.scss';\n\nimport { ConnectedUserLoader } from './containers/UserLoader';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { UserCard } from '../components/UserCard/UserCard';\n\nimport { NoUserSelectedPage } from './pages/NoUsersSelected';\nimport { CreateNewUserPage } from './pages/CreateNewUser/CreateNewUser';\n\nexport const UsersPage = ({ allUsers, selectedUser, loadAllUsers }) => {\n  useEffect(() => {\n    loadAllUsers();\n  }, []);\n\n  function filterUserByQuery(user, query) {\n    return user.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const userLink = user => {\n    return `${match.url}/${user.name}`;\n  };\n\n  return (\n    <Main>\n      <section className=\"users-search-section\">\n        <SearchableList items={allUsers} filter={filterUserByQuery}>\n          {user => <UserCard selected={selectedUser} user={user} href={userLink(user)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <UserSwitch />\n      </section>\n    </Main>\n  );\n};\n\nUsersPage.propTypes = {\n  allUsers: array,\n  selectedUser: object,\n  loadAllUsers: func\n};\n\nexport const UserSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewUserPage />\n      </Route>\n      <Route path={`${path}/:userName`}>\n        <ConnectedUserLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoUserSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allUsers: state.usersManager.users.all,\n    selectedUser: state.usersManager.users.selected\n  }),\n  dispatch => ({\n    loadAllUsers: () => dispatch(loadAllUsersThunk())\n  })\n)(UsersPage);\n","import React, { useEffect } from 'react';\nimport { func, array } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main } from 'shared/components/layout';\n\nimport { loadAllGroupsThunk } from './store/thunks';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { GroupCard } from './components/GroupCard/GroupCard';\n\nimport { ConnectedGroupLoader } from './pages/GroupView/GroupView';\nimport { CreateNewGroupPage } from './pages/CreateNewGroup/CreateNewGroup';\nimport { NoGroupSelectedPage } from './pages/NoGroupSelected';\n\nimport './root.local.scss';\n\nexport const GroupsPage = ({ allGroups, loadAllGroups }) => {\n  useEffect(() => {\n    loadAllGroups();\n  }, []);\n\n  function filterGroupByQuery(group, query) {\n    return group.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const groupLink = group => {\n    return `${match.url}/${group.name}`;\n  };\n\n  return (\n    <Main>\n      <section className=\"search-list-section\">\n        <SearchableList items={allGroups} filter={filterGroupByQuery}>\n          {group => <GroupCard group={group} href={groupLink(group)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <GroupsPagesSwitch />\n      </section>\n    </Main>\n  );\n};\n\nGroupsPage.propTypes = {\n  allGroups: array,\n  loadAllGroups: func\n};\n\nexport const GroupsPagesSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewGroupPage />\n      </Route>\n      <Route path={`${path}/:groupName`}>\n        <ConnectedGroupLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoGroupSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allGroups: state.groups.all\n  }),\n  dispatch => ({\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(GroupsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, array, bool, object } from 'prop-types';\nimport moment from 'moment';\n\nimport { Center, RangeDatePicker } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper } from 'shared/components/layout';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions } from 'shared/store/actions';\nimport { Header } from 'core/components/Header';\nimport { loadAllAccountsThunk, loadProtocolsThunk } from './store/thunks';\nimport { Treeview } from './treeview';\nimport { ConnectedBreadcrumbsTitle } from './containers/Breadcrumbs/Breadcrumbs';\nimport { ContentSwitch } from './components/ContentSwitch/ContentSwitch';\n\nimport { AddServerCard } from './containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from './containers/AddDatabaseCard/AddDatabaseCard';\n\nimport './root.local.scss';\n\nexport class ExplorerPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n  }\n\n  componentDidMount() {\n    const { loadProtocols, loadAllAccounts } = this.props;\n\n    loadProtocols();\n    loadAllAccounts();\n  }\n\n  render() {\n    const {\n      treeviewData,\n      isLoading,\n      storeState: { level }\n    } = this.props;\n    return (\n      <>\n        <Header>\n          <h1 className=\"header-title\">Explorer</h1>\n          {level === 'workload' || level === 'license' ? (\n            <RangeDatePicker\n              onDatesChange={this.onChangeDatesHandler}\n              startDate={this.state.range.startDate}\n              endDate={this.state.range.endDate}\n            />\n          ) : null}\n        </Header>\n        <Main>\n          {isLoading ? (\n            <Center>\n              <Loader>Loading accounts</Loader>\n            </Center>\n          ) : (\n            <>\n              <Treeview data={treeviewData} />\n              <Paper>\n                <Paper.Header>\n                  <h1 className=\"breadcrumbs-title\">\n                    <ConnectedBreadcrumbsTitle />\n                  </h1>\n                  <div className=\"action-container\">\n                    <AddServerCard />\n                    <AddDatabaseCard />\n                  </div>\n                </Paper.Header>\n                <ContentSwitch activePage={level} />\n              </Paper>\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n\n  onChangeDatesHandler = range => {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n    }\n  };\n}\n\nExplorerPage.propTypes = {\n  treeviewData: array,\n  loadAllAccounts: func,\n  isLoading: bool,\n  storeState: object,\n  globalFilters: object,\n  setGlobalFilters: func\n};\n\nexport default connect(\n  state => ({\n    treeviewData: state.explorer.structured?.dbms || [],\n    isLoading: state.explorer.flags.accounts.loading || state.explorer.flags.protocols.loading,\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state)\n  }),\n  dispatch => ({\n    loadAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    loadProtocols: () => dispatch(loadProtocolsThunk()),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(ExplorerPage);\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { ConnectedDBMS } from './layers/Dbms/Dbms';\n\nimport './root.local.scss';\n\nexport class Treeview extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <ul className=\"treeview-container\">\n        {data.map(dbms => (\n          <ConnectedDBMS key={dbms.protocol} data={dbms} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTreeview.propTypes = {\n  data: array\n};\n\nexport default Treeview;\n","/**\n *\n *\n * THIS WILL BE DEPREACTED\n *\n * DO NOT USE !!!\n *\n * import from editors / parameters\n *\n */\n\nimport React, { forwardRef } from 'react';\nimport { object, func } from 'prop-types';\n\nimport MomentUtils from '@date-io/moment';\n\nimport { Field, useField } from 'formik';\nimport * as Yup from 'yup';\n\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nconst requiredValidation = value => {\n  try {\n    Yup.string()\n      .required('Field is required')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const Text = forwardRef(({ options, ...props }, ref) => {\n  const [field, meta] = useField({\n    name: props.name,\n    validate: props.required ?? requiredValidation\n  });\n\n  function mapOptions(items) {\n    return items.map(({ value, label, disabled }) => (\n      <MenuItem key={value} value={value} disabled={disabled}>\n        {label}\n      </MenuItem>\n    ));\n  }\n\n  return (\n    <Input\n      select={!!options}\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    >\n      {options ? mapOptions(options) : props.children}\n    </Input>\n  );\n});\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: 'true' },\n  { label: 'False', value: 'false' }\n];\n\nexport const BooleanSelect = forwardRef(({ options, ...props }, ref) => {\n  return <Text type=\"text\" defaultValue=\"true\" {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nconst FORMAT_OPTIONS = [\n  { label: 'TEXT', value: 'TEXT' },\n  { label: 'TEXT', value: 'TEXT' }\n];\n\nexport const FormatSelect = forwardRef(({ options, ...props }, ref) => {\n  return <Text type=\"text\" defaultValue=\"true\" {...props} ref={ref} options={FORMAT_OPTIONS} />;\n});\n\nexport const Date = forwardRef((props, ref) => {\n  const [field, meta, helpers] = useField({\n    name: props.name,\n    validate: props.required ?? requiredValidation\n  });\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          disablePast\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          id=\"date-picker-inline\"\n          label=\"Date\"\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={field.value}\n          onChange={helpers.setValue}\n        />\n        <FormHelperText>{meta.touched ? meta.error : null}</FormHelperText>\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\n/**\n * DEPRECATED - do not use, should remove at separate point for forms that do.\n * @param {*} param0\n */\nexport const TextField = ({ parameter, validate: propsValidate, children, ...others }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n            {...others}\n          >\n            {children}\n          </Input>\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StorageSidebar, ObjectsSidebar } from './Sidebar';\nimport { StorageViewer, ObjectsViewer } from './Viewer';\n\nimport './root.local.scss';\n\nexport const DbObjects = ({ type, data, list, dbName, selectedItem, setItem, loadingFlags, invalidObjects }) => {\n  const { loadingPoints, loadingDetails, loading } = loadingFlags;\n  if (type === 'storage') {\n    return (\n      <div className=\"db-objects-tabs\">\n        <StorageSidebar dbName={dbName} isLoading={loadingPoints} list={list} selectedItem={selectedItem} setItem={setItem} />\n        <StorageViewer data={data} isLoading={loadingDetails} />\n      </div>\n    );\n  }\n   return (\n      <div className=\"db-objects-tabs\">\n        <ObjectsSidebar dbName={dbName} invalidObjects={invalidObjects} isLoading={loading} list={list} selectedItem={selectedItem} setItem={setItem} />\n        <ObjectsViewer data={data} isLoading={loading} />\n      </div>\n    );\n};\n\nDbObjects.propTypes = {\n  type: PropTypes.string,\n  data: PropTypes.object,\n  list: PropTypes.array,\n  selectedItem: PropTypes.string,\n  setItem: PropTypes.func,\n  dbName: PropTypes.string\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport { currentUserSelector } from 'session/store/state';\nimport { Navigation, UserMenu, Compile } from './components';\n\nimport MasLogo from '../../../../assets/images/mas_logo_white.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_white.svg';\nimport './sidebar.local.scss';\n\nexport class SidebarContainer extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className=\"logo-container\">\n          <img className=\"vendita-logo img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          <img className=\"mas-logo img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n        </div>\n\n        <div className=\"nav-area\">\n          <Navigation />\n        </div>\n        <div className=\"bottom\">\n          <Compile />\n          <UserMenu user={this.props.currentUser.get('name')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebarContainer.propTypes = {\n  className: PropTypes.string,\n  currentUser: PropTypes.object.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  currentUser: currentUserSelector(state)\n});\n\nSidebarContainer.defaultProps = {\n  className: 'sidebar'\n};\n\nexport default connect(mapStateToProps, null)(SidebarContainer);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarOutline } from '@mdi/js';\n\nimport './favorites.local.scss';\n\nexport class Favorites extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-nav-favorites`}>\n        <SvgIcon>\n          <Icon path={mdiStarOutline} />\n        </SvgIcon>\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  className: PropTypes.string\n};\n\nFavorites.defaultProps = {\n  className: 'favorites'\n};\n\nexport default Favorites;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { navigationItems } from './constants';\n\nimport './navigation.local.scss';\n\nexport class Navigation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      navId: '',\n      anchorElement: null\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setCurrentNavItem();\n  }\n\n  componentDidUpdate() {\n    this.setCurrentNavItem();\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {navigationItems.map((item, index) => {\n          if (item.items && item.items.length > 0) {\n            return (\n              <div key={index}>\n                <div\n                  role=\"presentation\"\n                  key={index}\n                  className={`nav-item ${\n                    this.state.activeTab === index || this.state.navId === item.id ? ' active ' : ''\n                  } ${item.qaClass ? item.qaClass : ''}`}\n                  onClick={e => this.setToggleDropdown(e, item.id)}\n                >\n                  <IconButton className=\"icon\">{item.icon}</IconButton>\n                  <p>{item.title}</p>\n                </div>\n                <Popover\n                  className=\"nav-sublist-container\"\n                  anchorEl={this.state.anchorElement}\n                  open={this.state.navId === item.id}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={this.setCloseDropdown}>\n                      <MenuList className=\"nav-sublist-menu\" id=\"menu-list-grow\">\n                        {item.items.map(subItem => (\n                          <MenuItem\n                            key={subItem.to}\n                            className={subItem.qaClass}\n                            to={subItem.to}\n                            component={Link}\n                            onClick={this.setCloseDropdown}\n                          >\n                            {subItem.title}\n                          </MenuItem>\n                        ))}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Popover>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              role=\"presentation\"\n              key={item.to}\n              className={`nav-item ${this.state.activeTab === index ? 'active' : ''} ${\n                item.qaClass ? item.qaClass : ''\n              }`}\n              onClick={() => this.setActiveTab(index, item.to)}\n            >\n              <IconButton className=\"icon\">{item.icon}</IconButton>\n              <p>{item.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.props.history.push(page);\n    this.setState({ navId: '' });\n  };\n\n  setToggleDropdown = (e, name) => {\n    if (name === this.state.navId) {\n      this.setState({ navId: '', anchorElement: null });\n    } else {\n      this.setState({ navId: name, anchorElement: e.target });\n    }\n  };\n\n  setActiveTab = (newActiveTab, page) => {\n    this.props.history.push(page);\n    this.setState({ activeTab: newActiveTab, navId: '' });\n  };\n\n  setCurrentNavItem() {\n    const index = navigationItems.findIndex(\n      item =>\n        item.to === this.props.location.pathname || this.props.location.pathname.startsWith(item.to)\n    );\n\n    if (this.state.activeTab !== index) {\n      this.setState({ activeTab: index });\n    }\n  }\n}\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nNavigation.defaultProps = {\n  className: 'navigation'\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nimport './notification.local.scss';\n\nexport class Notification extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-notification`}>\n        <NotificationsNoneIcon />\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  className: PropTypes.string\n};\n\nNotification.defaultProps = {\n  className: 'notification'\n};\n\nexport default Notification;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Logout } from 'session/pages';\n\nimport './user-menu.local.scss';\n\nexport class UserMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n\n    this.menuAnchorRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"user-menu qa-user-menu\"\n          ref={this.menuAnchorRef}\n          onClick={this.setToggleDropdown}\n          role=\"presentation\"\n        >\n          <Avatar className=\"user-avatar\">{this.props.user.substring(0, 2).toUpperCase()}</Avatar>\n        </div>\n        <Popover\n          className=\"user-menu-list-container\"\n          anchorEl={this.menuAnchorRef.current}\n          open={this.state.isVisible}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList\n                className=\"user-menu-list\"\n                autoFocusItem={this.state.isVisible}\n                id=\"menu-list-grow\"\n              >\n                <MenuItem\n                  className=\"qa-user-menu-groups\"\n                  onClick={event => this.setCloseDropdown(event, 'help')}\n                >\n                  <FormattedMessage id=\"navigation.help\" />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-logout\" to={Logout.path} component={Link}>\n                  <FormattedMessage id=\"navigation.logout\" />\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popover>\n      </>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page === 'help') {\n      window.open(\n        'https://masmanual.venditabeta.com/index.php/Vendita_MAS_Documentation_Library#User_Guides_MAS_3.0',\n        '_blank'\n      );\n    }\n\n    this.setState({ isVisible: false });\n  };\n\n  setToggleDropdown = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible\n    }));\n  };\n}\n\nUserMenu.propTypes = {\n  user: PropTypes.string.isRequired\n};\n\nexport default withRouter(UserMenu);\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\n\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\n\nimport { postCompile } from 'shared/api/compile';\n\nimport './compile.local.scss';\n\nexport const Compile = () => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => setOpen(true),\n    close: () => setOpen(false)\n  };\n\n  return (\n    <>\n      <div className=\"compile\">\n        <Tooltip title=\"Compile\">\n          <VideoLibraryOutlinedIcon onClick={modalActions.open} />\n        </Tooltip>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Compiler />\n      </Modal>\n    </>\n  );\n};\n\nconst Compiler = () => {\n  const [compilation, setCompilation] = useState('compiling');\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    console.log('[started compilation'); // eslint-disable-line\n    postCompile()\n      .then(() => {\n        setCompilation('success');\n        console.log('[succeded compilation'); // eslint-disable-line\n      })\n      .catch(() => {\n        setCompilation('failed');\n        console.log('[failed compilation'); // eslint-disable-line\n      });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '430px',\n        minHeight: '330px'\n      }}\n    >\n      <ModalHeader icon={<VideoLibraryOutlinedIcon />} title=\"Compile\" />\n      <Switch value={compilation}>\n        <Switch.Case value=\"compiling\">\n          <Center>\n            <Loader>Running compilation...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"failed\">\n          <Center>\n            <Result type=\"fail\">\n              <Result.Text compact>Compilation failed.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header';\n\nimport { Main, Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport './job-process.local.scss';\nimport { Breadcrumbs, Link } from '@material-ui/core';\n\nimport ConnectedJobView from './job-view';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getQuery, getInvocationStatus, getInvocation } from './store/selectors';\nimport { processQuery } from './store/actions';\nimport { InvocationStatus } from './store/constants';\n\nimport './root.local.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\n\nconst JobProcess = () => {\n  const query = useQuery();\n\n  const uuid = query.get('invocation');\n  const processName = query.get('process');\n  const redirected = query.get('redirected');\n\n  return (\n    <>\n      <Header>\n        <Breadcrumbs classes={{ root: 'job-main-breadcrumbs' }} aria-label=\"breadcrumb\">\n          <LinkRouter to=\"/jobs\">Jobs</LinkRouter>\n          <OtherMainLinks />\n        </Breadcrumbs>\n      </Header>\n      <Main>\n        <Paper>\n          <PrepareFlow uuid={uuid} process={processName}>\n            <ConnectedJobView redirected={redirected == 'true'} />\n          </PrepareFlow>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n\nexport default JobProcess;\n\nfunction PrepareFlow({ children, uuid, process }) {\n  const query = useSelector(getQuery);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(processQuery(uuid, process));\n  }, [uuid]);\n\n  if (query.uuid !== uuid) {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Setting up invocation viewer</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return children;\n}\n\nfunction OtherMainLinks() {\n  const status = useSelector(getInvocationStatus);\n  const invocation = useSelector(getInvocation);\n\n  if (status === InvocationStatus.NEW) {\n    return <div className=\"current-job\">New Job</div>;\n  }\n\n  if (invocation && invocation.designation) {\n    return <div className=\"current-job\">{invocation.designation}</div>;\n  }\n\n  return null;\n}\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  CHECK_AUTHORIZATION: '[session] CHECK_AUTHORIZATION',\n  LOGIN: '[session] LOGIN',\n  LOGOUT: '[session] LOGOUT',\n};\n\nexport const sessionActions = {\n  checkAuthorization: new ActionCreator(actionsTypes.CHECK_AUTHORIZATION),\n  login: new ActionCreator(actionsTypes.LOGIN),\n  logout: new ActionCreator(actionsTypes.LOGOUT),\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* checkAuthorization() {\n  RestClient.setBasicAuth();\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_USER);\n    yield put(actions.checkAuthorization.dispatchSuccess(response));\n  } catch (errors) {\n    yield put(actions.checkAuthorization.dispatchFail());\n  }\n}\n\nexport function* CheckAuthorizationEffect() {\n  yield takeEvery(actions.checkAuthorization.getLoadingAction(), checkAuthorization);\n}\n","export default {\n  INTL: 'en',\n  BASE: {\n    HOST: '/mas',\n    VERSION: '',\n    TIMEOUT: 1000 * 60,\n    ENDPOINTS: {\n      LOGIN: '/authenticate',\n      CURRENT_USER: 'user/mas',\n      DAEMON_STATUS: 'daemon/status',\n      JOB_COUNT: '/invocation/dashboard/job_count',\n      JOBS: '/invocation',\n      PROCESSES: '/process',\n      USERS: '/user',\n      DATATYPES: '/type',\n      PROTOTYPES: '/prototype',\n      GROUPS: '/group',\n      ACCOUNTS: '/account',\n      FORMS: '/form',\n      FORM: '/form',\n      PROTOCOLS: '/protocol',\n      DOWNLOAD_PACKAGING: '/download/oracle_report',\n      SESSIONS: name => `/system/explorer/${name}/all_sessions`,\n      DB_LAST_BACKUP: '/system/explorer/backup_last_24hr',\n      DB_STATUS: '/system/explorer/dbstate',\n      EXECUTIVE_DASHBOARD: '/execdashboard',\n      STORAGE_DF: name => `/system/explorer/${name}/df_free_space`,\n      STORAGE_TS: '/system/explorer/ts_usage'\n    }\n  }\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\nimport Cookie from 'js-cookie';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* login(action) {\n  try {\n    Cookie.set('Authorization', Buffer.from(`${action.payload.username}:${action.payload.password}`).toString('base64'));\n    RestClient.setBasicAuth();\n    yield RestClient.post(CONSTANTS.BASE.ENDPOINTS.LOGIN);\n    yield put(actions.login.dispatchSuccess());\n    yield put(actions.checkAuthorization.dispatchLoading());\n  } catch (errors) {\n    if (!errors.response) {\n      yield put(actions.login.dispatchFail([\n        {\n          message: 'Unknown Error. Please contact the administrator!',\n        },\n      ]));\n      return;\n    }\n\n    if (errors.response.data.status === 422) {\n      yield put(actions.login.dispatchFail(errors.response.data.error.details));\n      return;\n    }\n\n    if (errors.response.data.status === 401) {\n      yield put(actions.login.dispatchFail([\n        {\n          message: errors.response.statusText,\n        },\n      ]));\n\n      return;\n    }\n\n    if (errors.response.data.status === 500 && (action.payload.password === '' || action.payload.username === '')) {\n      yield put(actions.login.dispatchFail([\n        {\n          message: errors.response.statusText,\n        },\n      ]));\n\n      return;\n    }\n\n    throw errors;\n  }\n}\n\nexport function* LoginEffect() {\n  yield takeEvery(actions.login.getLoadingAction(), login);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { Login } from 'session/pages';\n\nfunction loginPath() {\n  return process.env.NODE_ENV === 'development' ? window.location.replace(Login.path) : window.location.replace(`/ui/#${Login.path}`);\n}\n\nfunction* logout() {\n  RestClient.removeBasicAuth();\n  loginPath();\n  yield put(actions.logout.dispatchSuccess());\n}\n\nexport function* LogoutEffect() {\n  yield takeEvery(actions.logout.getLoadingAction(), logout);\n}\n","module.exports = __webpack_public_path__ + \"svgs/ae6021ac50f5c1e93465ff63ea3769d4.svg\";","module.exports = __webpack_public_path__ + \"svgs/0e998e182da8161761cd7209592a7dae.svg\";","module.exports = __webpack_public_path__ + \"svgs/fc315038f28eb52f1b1228e70e8919d6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { isInclusivelyAfterDay } from 'shared/lib';\n\nimport { DateRangePicker, DateRangePickerPhrases, DateRangePickerShape } from 'react-dates';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n} from './constants';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  // initialStartDate: momentPropTypes.momentObj,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  startDateId: PropTypes.string,\n  startDatePlaceholderText: PropTypes.string,\n  endDateId: PropTypes.string,\n  endDatePlaceholderText: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDates: PropTypes.bool,\n  showDefaultInputIcon: PropTypes.bool,\n  customInputIcon: PropTypes.object,\n  customArrowIcon: PropTypes.node,\n  customCloseIcon: PropTypes.object,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: PropTypes.string,\n  orientation: PropTypes.string,\n  anchorDirection: PropTypes.string,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.string,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDates: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  // navigation related props\n  navPosition: PropTypes.string,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.string,\n  renderDayContents: PropTypes.func,\n  minimumNights: PropTypes.number,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization\n  displayFormat: PropTypes.func,\n  monthFormat: PropTypes.string,\n  phrases: DateRangePickerPhrases,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: (day) => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: (date) => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  render() {\n    const { focusedInput } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={this.props.startDate}\n          endDate={this.props.endDate}\n        />\n      </div>\n    );\n  }\n\n  onDatesChange(range) {\n    this.props.onDatesChange(range);\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  GET_JOBS: '[jobs] GET_JOBS',\n  GET_CONNECTIONS: '[jobs] GET_CONNECTIONS',\n  SEARCH_JOBS: '[jobs] SEARCH_JOBS'\n};\n\nexport const jobsActions = {\n  getJobs: new ActionCreator(actionsTypes.GET_JOBS),\n  getConnections: new ActionCreator(actionsTypes.GET_CONNECTIONS),\n  searchJobs: new ActionCreator(actionsTypes.SEARCH_JOBS)\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SEARCH_PROCESSES: '[processes] SEARCH_PROCESSES',\n};\n\nexport const processActions = {\n  searchProcesses: new ActionCreator(actionsTypes.SEARCH_PROCESSES),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  UPDATE_GLOBAL_FILTERS: '[shared] UPDATE_GLOBAL_FILTERS',\n};\n\nexport const globalFiltersActions = {\n  setGlobalFilters: new ActionCreator(actionsTypes.UPDATE_GLOBAL_FILTERS),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SET_FILTER_STATUS: '[dashboard] SET_FILTER_STATUS'\n};\n\nexport const filterStatusActions = {\n  setFilterStatus: new ActionCreator(actionsTypes.SET_FILTER_STATUS)\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport function checkDaemon() {\n  return RestClient.get(CONSTANTS.BASE.ENDPOINTS.DAEMON_STATUS);\n}\n","import { createSelector } from 'reselect';\n\nexport const isDaemonRunning = createSelector(\n  state => state.daemon,\n  daemon => {\n    return daemon.running;\n  }\n);\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Chip from '@material-ui/core/Chip';\nimport { DayFilterEditor } from '../day-filter-editor/day-filter-editor';\nimport { UserFilterEditor } from '../user-filter-editor/user-filter-editor';\nimport { StatusFilterEditor } from '../status-filter-editor/status-filter-editor';\nimport { FilterLoader } from '../filter-loader/filter-loader';\n\nimport './filter-chip.local.scss';\n\nexport const FilterChip = ({ value, type, save }) => {\n  const [editMode, setEditMode] = useState(false);\n  const FILTERS_MAP = {\n    status: StatusFilterEditor,\n    day: DayFilterEditor,\n    user: UserFilterEditor,\n  };\n  const IconComp = FILTERS_MAP[type].TypeDescriptor.icon;\n\n  return (\n    <>\n      {editMode\n        ? (\n          <ClickAwayListener onClickAway={() => { setEditMode(false); }}>\n            <div>\n              <FilterLoader value={value} type={type} setFilterValue={(newFilter) => { save(newFilter); setEditMode(false); }} />\n            </div>\n          </ClickAwayListener>\n        )\n        : (\n          <Chip\n            className=\"filter-chip\"\n            icon={<IconComp />}\n            label={value}\n            onClick={() => { setEditMode(true); }}\n            onDelete={() => { save(null); }}\n          />\n        )}\n    </>\n  );\n};\n\nFilterChip.propTypes = {\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  save: PropTypes.func,\n};\n\nFilterChip.defaultProps = {\n  save: () => {},\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center, Switch } from 'shared/components';\n\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\n\nimport { UsageListing } from './components/UsageListing/UsageListing';\n\nexport const ServerUsage = ({ loading, usage, getAllAccounts }) => {\n  useEffect(() => {\n    getAllAccounts();\n  }, []);\n\n  return (\n    <Switch value={loading}>\n      <Switch.Case value>\n        <Center>\n          <Loader>Loading Usage Parameters</Loader>\n        </Center>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <UsageListing usage={usage} />\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nexport const ConnectedServerUsage = connect(\n  state => {\n    return {\n      loading: state.explorer.flags.serversUsage.loading,\n      usage: state.explorer.serversUsage\n    };\n  },\n  dispatch => ({\n    getAllAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(ServerUsage);\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPercent } from '@mdi/js';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\n\nimport { UsageEntry } from '../UsageEntry/UsageEntry';\n\nimport './UsageListing.local.scss';\n\nexport const UsageListing = ({ usage }) => {\n  return (\n    <>\n      <header>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiPercent} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={usage.highLoadCount} />\n        <StringLabel text=\"servers with high load\" />\n      </header>\n      <div className=\"servers-list\">\n        {usage.servers.map(server => (\n          <UsageEntry key={server.address} server={server} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './UsageEntry.local.scss';\n\nexport const UsageEntry = ({ server }) => {\n  const { dbms, address, usage } = server;\n\n  const getServerUsageClass = () => {\n    if (usage <= 50) {\n      return 'low-usage';\n    }\n\n    if (usage > 50 && usage <= 75) {\n      return 'medium-usage';\n    }\n\n    return 'high-usage';\n  };\n\n  return (\n    <div className={`server-usage-item ${getServerUsageClass()}`}>\n      <div className=\"icon-container\">\n        <SvgIcon>\n          <Icon path={mdiDns} />\n        </SvgIcon>\n      </div>\n      <div className=\"name-container\">\n        <span className=\"name\">\n          <span className=\"dbms\">{dbms}</span>\n          <span className=\"separator\">/</span>\n          <span className=\"server\">{address}</span>\n        </span>\n        <div className=\"full-percentage\">\n          <div className=\"filled\" style={{ width: `${usage}%` }} />\n        </div>\n      </div>\n      <div className=\"percent-container\">\n        <span>{usage}%</span>\n      </div>\n    </div>\n  );\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\n// import mock from './_mock.json';\n\nfunction* jobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    // yield put(actions.getJobs.dispatchSuccess(mock));\n    yield put(actions.getJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getJobs.dispatchFail(errors));\n  }\n}\n\nexport function* JobsEffect() {\n  yield takeEvery(actions.getJobs.getLoadingAction(), jobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* connections() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n      page_size: 2147483645\n    });\n\n    yield put(actions.getConnections.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getConnections.dispatchFail(errors));\n  }\n}\n\nexport function* JobsConnectionsEffect() {\n  yield takeEvery(actions.getConnections.getLoadingAction(), connections);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchJobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    yield put(actions.searchJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchJobs.dispatchFail(errors));\n  }\n}\n\nexport function* SearchJobsEffect() {\n  yield takeEvery(actions.searchJobs.getLoadingAction(), searchJobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchProcesses(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROCESSES, query.payload);\n\n    yield put(actions.searchProcesses.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchProcesses.dispatchFail(errors));\n  }\n}\n\nexport function* SearchProcessesEffect() {\n  yield takeEvery(actions.searchProcesses.getLoadingAction(), searchProcesses);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\n\nfunction* globalFilters(filters) {\n  yield put(actions.setGlobalFilters.dispatchSuccess(filters.payload));\n}\n\nexport function* GlobalFiltersEffect() {\n  yield takeEvery(actions.setGlobalFilters.getLoadingAction(), globalFilters);\n}\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  SELECT_USER,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  REMOVE_USER_FROM_GROUPS,\n  DELETE_USER,\n  CREATE_USER\n} from '../actions';\n\nimport { mapUsersData, mapLoadedUser } from '../mappers';\n\nexport const initialState = {\n  users: {\n    all: [],\n    selected: null\n  },\n  flags: {\n    users: { loading: false },\n    user: { loading: false },\n    privileges: { disabled: false }\n  },\n  debug: {\n    user: {}\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_USERS)]: draft => {\n    draft.flags.users.loading = true;\n  },\n  [types.success(LOAD_ALL_USERS)]: (draft, { payload }) => {\n    draft.users.all = mapUsersData(payload);\n\n    draft.flags.users.loading = false;\n  },\n  [types.action(SELECT_USER)]: (draft, { payload }) => {\n    draft.users.selected = payload;\n  },\n  [types.loading(LOAD_USER)]: draft => {\n    draft.flags.user.loading = true;\n    draft.users.selected = null;\n  },\n  [types.success(LOAD_USER)]: (draft, { payload }) => {\n    draft.flags.user.loading = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.loading(DELETE_USER)]: draft => {\n    draft.flags.user.removing = true;\n  },\n  [types.success(DELETE_USER)]: (draft, { payload }) => {\n    draft.users.selected = null;\n    draft.flags.user.removing = false;\n    draft.users.all = mapUsersData(payload);\n  },\n  [types.fail(DELETE_USER)]: (draft, { payload }) => {\n    draft.flags.user.removing = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.action(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.loading(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(REMOVE_USER_FROM_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(CREATE_USER)]: draft => {\n    draft.flags.user.creating = true;\n  },\n  [types.success(CREATE_USER)]: draft => {\n    draft.flags.user.creating = false;\n  },\n  [types.fail(CREATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.creating = false;\n    draft.debug.user.errors = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  PATCH_SELECTED_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport const initialState = {\n  all: [],\n  ops: {\n    all: { done: false, loading: false },\n    selected: { done: false, loading: false },\n    privileges: { done: false, loading: false },\n    remove: { loading: false },\n    create: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_GROUPS)]: draft => {\n    draft.ops.all = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.loading(LOAD_GROUP)]: draft => {\n    draft.ops.selected = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_GROUP)]: (draft, { payload }) => {\n    const response = payload;\n    draft.selected = response.data.groups[0]; //eslint-disable-line\n    draft.ops.selected = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_GROUP)]: (draft, { payload }) => {\n    draft.selected = null;\n    draft.ops.selected = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.action(PATCH_SELECTED_GROUP)]: (draft, { payload }) => {\n    draft.selected = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REMOVE_USERS_FROM_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(REMOVE_GROUPS_FROM_GROUP)]: draft => {\n    draft.ops.group_subgroups = { loading: true };\n  },\n  [types.success(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(ADD_USERS_TO_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: true };\n  },\n  [types.success(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: false };\n  },\n  [types.fail(CREATE_GROUP)]: (draft, { payload }) => {\n    draft.ops.create = {\n      loading: false,\n      errors: payload\n    };\n  },\n  [types.loading(DELETE_GROUP)]: draft => {\n    draft.ops.remove = { loading: true };\n  },\n  [types.success(DELETE_GROUP)]: draft => {\n    draft.selected = null;\n    draft.ops.remove = { loading: false };\n  },\n  [types.fail(DELETE_GROUP)]: (draft, { payload }) => {\n    draft.ops.remove = { loading: false, errors: payload };\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_ACCOUNTS,\n  CHANGE_STATE,\n  LOAD_ALL_LICENSES,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_PROTOTYPES,\n  LOAD_ALL_DATATYPES,\n  LOAD_ALL_FORMS,\n  LOAD_SESSIONS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  LOAD_STORAGE_POINTS,\n  LOAD_OBJECT_DETAILS,\n  PROVIDE_SERVERS_USAGE,\n  SET_STORAGE_NS,\n  SET_SELECTED_OBJECT,\n  LOAD_STORAGE_DETAILS,\n  LOAD_PROTOCOLS\n} from '../actions';\nimport { mapAccountsTree, mapAccountsNewStructure, mapProtocols } from '../mappers';\n\nexport const initialState = {\n  accounts: [],\n  rawAccounts: [],\n  flags: {\n    accounts: { loading: false },\n    protocols: { loading: false },\n    sessions: { loading: false },\n    storage: { loadingPoints: false, loadingDetails: false },\n    objects: { loading: false },\n    license: { loading: false },\n    reports: { loading: false },\n    prototypes: { loading: false },\n    datatypes: { loading: false },\n    forms: { loading: false },\n    serversUsage: { loading: true }\n  },\n  sessions: [],\n  storage: {\n    points: [],\n    selected: null,\n    details: {}\n  },\n  objects: {\n    selectedOwner: null,\n    selectedObject: null\n  },\n  licenses: [],\n  reports: {},\n  prototypes: [],\n  protocols: [],\n  datatypes: [],\n  forms: [],\n  state: {\n    path: '',\n    level: 'all-dbms'\n  },\n  serversUsage: {},\n  dbLastBackup: [],\n  dbStatus: []\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_ACCOUNTS)]: draft => {\n    draft.flags.accounts.loading = true;\n  },\n  [types.success(LOAD_ALL_ACCOUNTS)]: (draft, { payload }) => {\n    draft.accounts = mapAccountsTree(payload.data.accounts);\n    draft.structured = mapAccountsNewStructure(payload.data.accounts, payload.protocols);\n    draft.rawAccounts = payload.data.accounts;\n\n    draft.state.path = '';\n    draft.state.level = 'all-dbms';\n\n    draft.flags.accounts.loading = false;\n  },\n  [types.loading(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = true;\n  },\n  [types.success(LOAD_PROTOCOLS)]: (draft, { payload }) => {\n    draft.protocols = mapProtocols(payload.data.protocols);\n    draft.flags.protocols.loading = false;\n  },\n  [types.fail(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = false;\n  },\n  [CHANGE_STATE]: (draft, { payload }, base) => {\n    draft.state = { ...base.state, ...payload };\n  },\n  [types.loading(LOAD_ALL_LICENSES)]: draft => {\n    draft.flags.license.loading = true;\n  },\n  [types.success(LOAD_ALL_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload.data.invocations;\n    draft.flags.license.loading = false;\n  },\n  [types.loading(LICENSE_FULL_REPORT)]: draft => {\n    draft.flags.reports.loading = true;\n  },\n  [types.success(LICENSE_FULL_REPORT)]: (draft, { payload }, base) => {\n    draft.reports = { ...base.reports, ...payload };\n    draft.flags.reports.loading = false;\n  },\n  [types.loading(LOAD_ALL_PROTOTYPES)]: draft => {\n    draft.flags.prototypes.loading = true;\n  },\n  [types.success(LOAD_ALL_PROTOTYPES)]: (draft, { payload }) => {\n    draft.prototypes = payload.data.prototypes;\n    draft.flags.prototypes.loading = false;\n  },\n  [types.loading(LOAD_ALL_DATATYPES)]: draft => {\n    draft.flags.datatypes.loading = true;\n  },\n  [types.success(LOAD_ALL_DATATYPES)]: (draft, { payload }) => {\n    draft.datatypes = payload.data.data_types;\n    draft.flags.datatypes.loading = false;\n  },\n  [types.loading(LOAD_ALL_FORMS)]: draft => {\n    draft.flags.forms.loading = true;\n  },\n  [types.success(LOAD_ALL_FORMS)]: (draft, { payload }) => {\n    draft.forms = payload.data.forms;\n    draft.flags.forms.loading = false;\n  },\n  [types.loading(PROVIDE_SERVERS_USAGE)]: draft => {\n    draft.flags.serversUsage.loading = true;\n  },\n  [types.success(PROVIDE_SERVERS_USAGE)]: (draft, { payload }) => {\n    draft.flags.serversUsage.loading = false;\n    draft.serversUsage = payload;\n  },\n  [types.loading(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = true;\n  },\n  [types.success(LOAD_STORAGE_POINTS)]: (draft, { payload }) => {\n    draft.flags.storage.loadingPoints = false;\n    draft.storage.points = payload;\n  },\n  [types.loading(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = true;\n  },\n  [types.success(LOAD_STORAGE_DETAILS)]: (draft, { payload }) => {\n    draft.flags.storage.loadingDetails = false;\n    draft.storage.details = payload;\n  },\n  [types.success(SET_STORAGE_NS)]: (draft, { payload }) => {\n    draft.storage.selected = payload;\n  },\n  [types.loading(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = true;\n  },\n  [types.success(LOAD_OBJECT_DETAILS)]: (draft, { payload }) => {\n    draft.flags.objects.loading = false;\n    payload.forEach(({ name, res }) => {\n      draft.objects[name] = res;\n    });\n  },\n  [types.success(SET_SELECTED_OBJECT)]: (draft, { payload }) => {\n    draft.objects.selectedObject = payload.object;\n    draft.objects.selectedOwner = payload.owner;\n  },\n  [types.success(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = true;\n  },\n  [types.success(LOAD_SESSIONS)]: (draft, { payload }) => {\n    draft.flags.sessions.loading = false;\n    // sort flags should be sent to backend and not stored on state.\n    draft.flags.sessions.sort = payload.sort;\n    draft.sessions = payload.data;\n  },\n  [types.success(PROVIDE_DB_LAST_BACKUP)]: (draft, { payload }) => {\n    draft.dbLastBackup = payload;\n  },\n  [types.success(PROVIDE_DB_STATUS)]: (draft, { payload }) => {\n    draft.dbStatus = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\nimport { PROVIDE_EXECUTIVE_DASHBOARD, SELECT_ALL, DESELECT_ALL, TOGGLE_SERVER } from '../actions';\nimport { mapAllServers } from '../mappers';\n\nexport const initialState = {\n  rawEntries: [],\n  allServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  selectedServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  flags: {\n    dashboard: { loading: false, callFailed: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = true;\n  },\n  [types.success(PROVIDE_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawEntries = payload.execdashboard;\n    draft.allServers = mapAllServers(payload.execdashboard);\n    draft.selectedServers = mapAllServers(payload.execdashboard);\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [DESELECT_ALL]: draft => {\n    draft.selectedServers = [];\n  },\n  [SELECT_ALL]: (draft, { payload }) => {\n    draft.selectedServers = mapAllServers(payload);\n  },\n  [TOGGLE_SERVER]: (draft, { payload }) => {\n    draft.selectedServers = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","export const initialState = {\n  data: {},\n  fetch_status: {},\n  isLoading: true,\n  breadcrumbs: [],\n  filters: {\n    type: 'all',\n    search: ''\n  }\n};\n\nexport function FETCH_ENTITIES_REQUEST(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'fetching';\n}\n\nexport function FETCH_ENTITIES_SUCCESS(nextState, { entityType, result }) {\n  nextState.data[entityType] = result;\n  nextState.fetch_status[entityType] = 'fetched';\n}\n\nexport function FETCH_ENTITIES_FAILURE(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'failed';\n}\n\nexport function FETCH_ENTITIES_ALL_REQUEST(nextState) {\n  nextState.isLoading = true;\n}\n\nexport function FETCH_ENTITIES_ALL_SUCCESS(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function FETCH_ENTITIES_ALL_FAILURE(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function SELECT_ENTITY(nextState, { entity, index }, state) {\n  nextState.breadcrumbs.splice(index, state.breadcrumbs.length - 1);\n  nextState.breadcrumbs[index] = entity.name.split('.').pop();\n}\n\nexport function UPDATE_FILTERS(nextState, { name, value }) {\n  nextState.filters[name] = value;\n  if (name === 'type' || name === 'search') {\n    nextState.breadcrumbs = [];\n  }\n}\n","export const initialState = {\n  running: true\n};\n\nexport function DAEMON_STATUS_REQUEST() {}\n\nexport function DAEMON_STATUS_SUCCESS(nextState, { result }) {\n  nextState.running = !!result?.data?.data?.running;\n}\n\nexport function DAEMON_STATUS_FAILURE(nextState) {\n  nextState.running = false;\n}\n","import { InvocationStatus } from './constants';\n\nexport const initialState = {\n  loading: true,\n  query: { processed: false },\n  fetchedInvocation: false,\n  invocation: { status: 'NOT_FETCHED' }\n};\n\nexport function PROCESS_QUERY(nextState, { uuid, process }) {\n  nextState.query = { processed: true, uuid, process };\n  if (uuid) {\n    nextState.invocation = { status: 'NOT_FETCHED' };\n  } else {\n    nextState.invocation = { status: '__NEW__', process: process || '' };\n  }\n}\n\nexport function FETCH_INVOCATION_SUCCESS(nextState, { result }) {\n  const [recieved] = result.data.data.invocations;\n  nextState.invocation = recieved;\n}\n\nexport function FETCH_INVOCATION_FAILURE(nextState, { process }) {\n  nextState.invocation = { status: InvocationStatus.NEW, process };\n}\n\nexport function REPLACE_INVOCATION(nextState, { invocation }) {\n  nextState.invocation = invocation;\n}\n","export const api = () => next => async action => {\n  const { type, promise, schema, ...rest } = action;\n  const isPromise = promise instanceof Promise;\n  if (!isPromise || !type) {\n    next(action);\n    return;\n  }\n\n  next({ type: `${type}_REQUEST`, ...rest });\n  try {\n    const result = await promise;\n    if (schema) {\n      next({ type, ...rest, data: result, schema });\n    }\n    next({ type: `${type}_SUCCESS`, ...rest, result });\n  } catch (error) {\n    console.error('[middlewares] error: ', error); // eslint-disable-line\n    next({ type: `${type}_FAILURE`, ...rest, error });\n  }\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  ADD_NOTIFICATIONS: '[core] ADD_NOTIFICATIONS',\n  REMOVE_NOTIFICATION: '[core] REMOVE_NOTIFICATION',\n};\n\nexport const notificationActions = {\n  addNotifications: new ActionCreator(actionsTypes.ADD_NOTIFICATIONS),\n  removeNotification: new ActionCreator(actionsTypes.REMOVE_NOTIFICATION),\n};\n","import React, { useState, useEffect } from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { ViewTabs } from '../ViewTabs/ViewTabs';\nimport { Documentation } from '../Documentation/Documentation';\nimport { ConnectedScheduleForm } from '../../containers/ScheduleForm/ScheduleForm';\nimport { getProcess } from 'shared/api/process';\n\nexport const ScheduleModal = ({ open, actions, invocation }) => {\n  const [result, setResult] = useState('');\n  const [tab, setTab] = useState('schedule');\n  const [processDetails, setProcessDetails] = useState({});\n\n  useEffect(() => {\n    if (invocation && invocation.process) {\n      getProcess(invocation.process)\n        .then(data => {\n          if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n            setProcessDetails(data.data.data.processes[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n  }, []);\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '85vw',\n          minHeight: '85vh',\n          maxWidth: '85vw',\n          maxHeight: '85vh'\n        }}\n      >\n        <ModalHeader\n          title=\"New Schedule\"\n          icon={\n            <SvgIcon>\n              <SlowMotionVideoIcon />\n            </SvgIcon>\n          }\n        />\n        <Switch value={result}>\n          <Switch.Case value=\"success\">\n            <Result type=\"success\">\n              <Result.Text>Schedule was added successfully!</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Done\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"fail\">\n            <Result type=\"fail\">\n              <Result.Text>An error occurred and the new schedule could not be added.</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Close\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"\">\n            <Paper.Header>\n              <ViewTabs active={tab} changeTab={setTab} invocation={invocation} />\n            </Paper.Header>\n            <Switch value={tab}>\n              <Switch.Case value=\"schedule\">\n                <ConnectedScheduleForm setResult={setResult} invocation={invocation} />\n              </Switch.Case>\n              <Switch.Case value=\"documentation\">\n                <Paper.Content>\n                  <Documentation process={processDetails} />\n                </Paper.Content>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nexport function ViewTabs({ active, changeTab, invocation }) {\n  const tabs = [{ label: 'Schedule', value: 'schedule', active: true }];\n\n  if (invocation) {\n    tabs.push({ label: 'Documentation', value: 'documentation' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React from 'react';\n\nimport { Section } from 'shared/components/layout';\n\nexport const Documentation = ({ process }) => {\n  if (!process) {\n    return <Section>Select a process in order to see its documentation</Section>;\n  }\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { fetchEntity } from 'entities/actions';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { ProcessSelect } from 'shared/components/form/editors/Custom';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { postSchedule } from 'shared/api/schedule';\n\nimport { isEmpty, pickBy } from 'lodash';\n\nexport const ConnectedScheduleForm = connect(null, {\n  request: fetchEntity\n})(ScheduleForm);\n\nfunction ScheduleForm({ setResult, request, invocation }) {\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name && sch_name.includes('.')) {\n      errors.sch_name = 'Name can not include \".\"';\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={handleSubmit.bind(this, monitor, setResult, request)}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <ProcessSelect\n                        name=\"process\"\n                        label=\"Process\"\n                        value={invocation?.process}\n                        disabled={invocation}\n                        required\n                      />\n                    </Section.Content>\n                  </Section>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text name=\"sch_name\" label=\"Name\" required />\n                      </Row>\n                      <Row>\n                        <Text name=\"sch_description\" label=\"Description\" multiline required />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_min\" label=\"T_min\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_hr\" label=\"T_hr\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_day\" label=\"T_Day\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_mon\" label=\"T_mon\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_wkd\" label=\"T_wkd\" value=\"*\" />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation?.parameters} editable />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n}\n\nasync function handleSubmit(monitor, setResult, request, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value) {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(values) {\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else {\n          if (field_name === 'deflt') {\n            extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n          } else {\n            extracted.replvars.push({ [field_name]: values[key] });\n          }\n        }\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], parameters: {} }\n  );\n\n  return { parameters: { ...result.parameters, replvars: cleanUpReplVars(result.replvars) } };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n","export const formatAccount = account => {\n  const prefix = `${account.protocol.toLowerCase()}://${account.user}:******@${account.address}:${\n    account.port\n  }`;\n  const { special } = account;\n\n  if (special?.database) {\n    return `${prefix}/${special.database}`;\n  }\n\n  return prefix;\n};\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default: {\n      const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n      const matches = regex.exec(deflt);\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return Number.parseInt(matches[2]); // eslint-disable-line\n          case 'str': {\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            const json = `[${matches[2]}]`;\n            try {\n              return JSON.parse(json)[0];\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          }\n\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n    }\n  }\n  return null;\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst Groups = ({ groups, onSelect, eventTypeIcons = [] }) => {\n  const renderGroupsList = () => {\n    if (Array.isArray(groups) && groups.length) {\n      return groups.map(item => {\n        return (\n          <ListItem\n            onClick={() => onSelect(item)}\n            selected={item.selected}\n            key={item.data.name}\n            button\n          >\n            <ListItemIcon>\n              <GroupIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n            </ListItemIcon>\n            <ListItemText primary={item.data.name} />\n            <ListItemSecondaryAction>\n              {item.displayIcons && eventTypeIcons.map(icon => icon)}\n              <SvgIcon size=\"small\" edge=\"end\" color=\"primary\">\n                <path d={item.selected ? mdiChevronLeft : mdiChevronRight} />\n              </SvgIcon>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Groups:</div>\n      </div>\n      <List dense disablePadding>\n        {renderGroupsList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Button } from 'shared/components/controls';\n\nimport './users.scss';\n\nconst Users = ({\n  users,\n  onSelect,\n  onSelectUserAction,\n  isClearActionAvailable,\n  isGroupSelected,\n  eventTypeIcons\n}) => {\n  const renderUsersList = () => {\n    if (Array.isArray(users) && users.length) {\n      let emptyListMessage = '';\n      if (!isGroupSelected) {\n        emptyListMessage = 'Please select a group to view its users.';\n      } else if (!users.find(item => item.display)) {\n        emptyListMessage = 'No users available in the group.';\n      }\n      if (emptyListMessage) {\n        return (\n          <div className=\"notifications-users-empty-list\">\n            <PermIdentityIcon size=\"small\" />\n            <span>{emptyListMessage}</span>\n          </div>\n        );\n      }\n      return users\n        .filter(user => user.display)\n        .map(user => {\n          return (\n            <ListItem\n              onClick={() => onSelect(user)}\n              selected={user.selected}\n              key={user.data.name}\n              button\n            >\n              <ListItemIcon>\n                <PersonIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n              </ListItemIcon>\n              <ListItemText primary={user.data.name} />\n              <ListItemSecondaryAction classes={{ root: 'notifications-users-check-wrap' }}>\n                {user.selected && eventTypeIcons.map(icon => icon)}\n                <Checkbox\n                  onChange={() => onSelect(user)}\n                  edge=\"end\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  checked={user.selected}\n                  classes={{ root: 'checkbox-custom' }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n    }\n    return null;\n  };\n\n  const currentActionLabel = isClearActionAvailable ? 'Clear' : 'Select all';\n  const shouldDisplayAction = isGroupSelected && users.find(item => item.display);\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Users:</div>\n        {shouldDisplayAction && (\n          <Button role=\"presentation\" onClick={() => onSelectUserAction(isClearActionAvailable)}>\n            {currentActionLabel}\n          </Button>\n        )}\n      </div>\n      <List dense disablePadding>\n        {renderUsersList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport classnames from 'classnames';\nimport './events.scss';\n\nconst Events = ({ jobStart, jobCompletion, abnormalEvent, onSelect, areUsersSelected }) => {\n  const classes = classnames('notification-events', { 'events-wrap-disabled': !areUsersSelected });\n  return (\n    <div className={classes}>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-title\">Event type:</div>\n        </div>\n        <span>\n          <PlayCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job start</span>\n        </span>\n        <span>\n          <CheckCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job completion</span>\n        </span>\n        <span>\n          <ErrorOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">abnormal event</span>\n        </span>\n      </div>\n      <div className=\"notification-events-col old-notice\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n      </div>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Center } from 'shared/components/layout';\n\nimport { Button } from 'shared/components/controls';\n\nimport './notification-list.scss';\nimport { withStyles } from '@material-ui/core';\n\nconst UserChip = withStyles({\n  root: {\n    background: 'rgba(55, 101, 175, 0.08)',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '& > svg': {\n      marginLeft: '8px'\n    }\n  }\n})(Chip);\n\nconst NotificationList = ({ users, eventTypeIcons, toggleApplyButton }) => {\n  const filteredUsers = users.filter(user => user.selected);\n  const renderUserList = () => {\n    if (!filteredUsers.length) {\n      return <Center>No notifications applied</Center>;\n    }\n    return filteredUsers.map(user => {\n      return (\n        <UserChip\n          classes={{ root: 'notification-list-item' }}\n          label={\n            <>\n              <span>{user.data.name}</span>\n              {eventTypeIcons}\n            </>\n          }\n          color=\"default\"\n          icon={<PersonIcon size=\"small\" />}\n        />\n      );\n    });\n  };\n\n  let buttonLabel = 'Add';\n  let buttonIcon = <NotificationsNoneIcon />;\n  if (filteredUsers.length) {\n    buttonLabel = 'Edit';\n    buttonIcon = <EditIcon />;\n  }\n\n  return (\n    <div className=\"notification-list-wrapper\">\n      <div>{renderUserList()}</div>\n      <div className=\"notification-list-edit-section\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={toggleApplyButton}\n          startIcon={buttonIcon}\n          endIcon={<ArrowDropDownIcon />}\n          classes={{ root: 'notifications-add-edit' }}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport './Entity.scss';\nimport GroupIcon from '@material-ui/icons/Group';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\n\n/* eslint-disable */\nconst Entity = ({ entity, selectEntity, columns, entityIcons }) => {\n  const cls = classnames('entity', {\n    '--isSelected': entity.isSelected\n  });\n  const user = entity.user_owner;\n  const aliasStr = entity.alias;\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={cls}\n      onClick={event => {\n        selectEntity(entity, columns.level);\n\n        const target = event.currentTarget;\n        const box = target.getBoundingClientRect();\n        const parent = target.parentNode.parentNode;\n\n        setTimeout(function() {\n          parent.scrollTo({ left: box.right, behavior: 'smooth' });\n        }, 200);\n      }}\n    >\n      <div className=\"entity-icon-wrap\">{entityIcons[entity.entity]}</div>\n      <div className=\"entity-details\">\n        <div className=\"entity-name\">\n          {!!aliasStr && (\n            <div title={`Alias of ${aliasStr}`}>\n              <FilterNoneIcon />\n            </div>\n          )}\n          {entity.name}\n        </div>\n        <div className=\"entity-user\">\n          <GroupIcon />\n          <span>{user}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/* eslint-enable */\n\nexport default Entity;\n","import React from 'react';\nimport Switch from '../components/Switch';\nimport ActionsNamespace from '../components/ActionsNamespace';\nimport ActionsConstant from '../components/ActionsConstant';\nimport ActionsProcess from '../components/ActionsProcess';\nimport ActionsForm from '../components/ActionsForm';\nimport ActionsAccount from '../components/ActionsAccount';\nimport ActionsRoot from '../components/ActionsRoot';\nimport ActionsPrototype from '../components/ActionsPrototype';\nimport ActionsSchedule from '../components/ActionsSchedule';\nimport ActionsCommon from '../components/ActionsCommon';\nimport GroupIcon from '@material-ui/icons/Group';\nimport './SelectedEntity.scss';\n\nconst SelectedEntity = ({ selectedEntity, entityIcons }) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  return (\n    <div className=\"selected-entity\">\n      <div className=\"selected-entity-title\">\n        <div className=\"selected-entity-title-icon\">{entityIcons[selectedEntity.entity]}</div>\n        <div className=\"selected-entity-title-details\">\n          {selectedEntity.name}\n          <div className=\"selected-entity-title-user\">\n            <GroupIcon />\n            <span>{selectedEntity.user_owner}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"entity-detail-wrap\">\n        <div className=\"entity-description-wrap\">{selectedEntity.description}</div>\n\n        <Switch value={selectedEntity.entity}>\n          <Switch.Case value=\"root\">\n            <ActionsRoot />\n          </Switch.Case>\n\n          <Switch.Case value=\"namespace\">\n            <ActionsNamespace entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"constant\">\n            <ActionsConstant entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"form\">\n            <ActionsForm entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"process\">\n            <ActionsProcess entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"prototype\">\n            <ActionsPrototype entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"schedule\">\n            <ActionsSchedule entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"account\">\n            <ActionsAccount entity={selectedEntity} />\n          </Switch.Case>\n        </Switch>\n        <ActionsCommon entity={selectedEntity} />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedEntity;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { patchConstant } from 'shared/api/constant';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsConstant = ({ entity }) => {\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConstant constant={entity} />;\n};\n\nexport default ActionsConstant;\n\nexport const ConnectedEditConstant = connect(null, {\n  request: fetchEntity\n})(EditConstant);\n\nfunction EditConstant({ constant, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const [result, setResult] = useState('');\n  const disableActions = constant?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Constant\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Constant was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the constant could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: constant.name, value: constant.value }}\n                onSubmit={handleSubmit.bind(this, setResult, request)}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" disabled value={constant.name} />\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"value\"\n                                label=\"Value\"\n                                value={constant.value}\n                                description={constant.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const body = {\n    value: values.value\n  };\n\n  patchConstant(values.name, body)\n    .then(() => {\n      setResult('success');\n      request('constant');\n    })\n    .catch(error => {\n      console.log('[edit constant] patch constant error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function patchConstant(name, body) {\n  return RestClient.patch(`/constant/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { postSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\nimport { isEmpty, pickBy } from 'lodash';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport { EditProcessModal } from './process-actions/EditProcessModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nconst ActionsProcess = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  return (\n    <>\n      <Button\n        component={LinkBehavior}\n        classes={{ root: 'entity-button' }}\n        to={`/jobs/job?process=${entity.name}&redirected=true`}\n        disabled={isDisabled}\n      >\n        New job\n      </Button>\n      <ConnectedNewSchedule process={entity} isDisabled={isDisabled} />\n      {hasWritePrivileges(entity) && <EditProcessModal process={entity} />}\n    </>\n  );\n};\n\nexport default ActionsProcess;\n\nexport const ConnectedNewSchedule = connect(null, {\n  request: fetchEntity\n})(NewSchedule);\n\nfunction NewSchedule({ process, isDisabled, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  // processDetails might be used at a later date\n  const [processDetails, setProcessDetails] = useState({}); // eslint-disable-line\n  const [tab, setTab] = useState('schedule');\n\n  const onClickHandler = () => {\n    setOpen(true);\n\n    getProcess(process.name)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        New Schedule\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '800px',\n            minHeight: '85vh',\n            maxWidth: '85vw',\n            maxHeight: '85vh'\n          }}\n        >\n          <ModalHeader\n            title=\"New Schedule\"\n            icon={\n              <SvgIcon>\n                <SlowMotionVideoIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  An error occurred and the new schedule could not be added.\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm process={process} setResult={setResult} request={request} />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={process} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({ process, setResult, request }) => {\n  const derivedMonitor = {\n    enabled: false,\n    events: 0,\n    users: []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name && sch_name.includes('.')) {\n      errors.sch_name = 'Name can not include \".\"';\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    return errors;\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{ process: process.name }}\n        validate={extraValidations}\n        onSubmit={handleSubmit.bind(this, monitor, setResult, request)}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={process.description}\n                          value={process.name}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text name=\"sch_name\" label=\"Name\" required />\n                      </Row>\n                      <Row>\n                        <Text name=\"sch_description\" label=\"Description\" multiline required />\n                      </Row>\n\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_min\" label=\"T_min\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_hr\" label=\"T_hr\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_day\" label=\"T_Day\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_mon\" label=\"T_mon\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_wkd\" label=\"T_wkd\" value=\"*\" />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={process.parameters} editable />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(monitor, setResult, request, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value) {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(values) {\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else {\n          if (field_name === 'deflt') {\n            extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n          } else {\n            extracted.replvars.push({ [field_name]: values[key] });\n          }\n        }\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], parameters: {} }\n  );\n\n  return { parameters: { ...result.parameters, replvars: cleanUpReplVars(result.replvars) } };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { ProcessEditor } from './ProcessEditor';\n\nimport { fetchEntity } from '../../actions';\n\nexport const EditProcessModal = ({ process }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('editing');\n\n  const modalActions = {\n    open: useCallback(() => {\n      setResult('editing');\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n\n      if (result === 'success') {\n        dispatch(fetchEntity('process'));\n      }\n    }, [result])\n  };\n\n  return (\n    <>\n      <Button classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Edit Process\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            maxWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Process\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            desc={process.name}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"editing\">\n              <ProcessEditor process={process} setResult={setResult} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Process was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Done</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the process could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Close</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { QualifiedName } from 'shared/components/form/editors/Custom';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { patchProcess } from 'shared/api/process';\n\nimport './ProcessEditor.local.scss';\n\nexport function ProcessEditor({ process, setResult }) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        saveProcessEdits(values, process, setResult);\n      }}\n    >\n      {() => {\n        return (\n          <>\n            <Paper.Content>\n              <Form>\n                <Section>\n                  <Section.Header>\n                    <Section.Title>Details</Section.Title>\n                  </Section.Header>\n                  <Section.Content>\n                    <Row>\n                      <Column>\n                        <QualifiedName\n                          name=\"process_name\"\n                          label=\"Name\"\n                          value={process.name}\n                          required\n                        />\n                      </Column>\n                    </Row>\n                  </Section.Content>\n                </Section>\n                <Section>\n                  <Section.Content>\n                    {process.steps.map((step, index) => {\n                      return <Step step={step} step_index={index} />;\n                    })}\n                  </Section.Content>\n                </Section>\n              </Form>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <SubmitButton variant=\"contained\">Save</SubmitButton>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nfunction Step({ step, step_index }) {\n  const expressions = parseEvaluatableExpressions(step, step_index);\n  const noEvaluatableExpressions = !expressions.length;\n\n  if (noEvaluatableExpressions) {\n    return null;\n  }\n\n  return (\n    <div className=\"step\">\n      <div className=\"title\">Step: {step.label}</div>\n      <div className=\"description\">{step.description}</div>\n      <div className=\"expressions\">\n        <div className=\"list\">\n          {expressions.map((exp, index) => (\n            <StepExpression key={index} {...exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction StepExpression({ expression, exp_index, step, step_index }) {\n  const name = `step-${step_index}-expression-${exp_index}`;\n  return (\n    <Row>\n      <Text\n        multiline\n        value={expression.evaluate}\n        label={`Expression ${expression.assign || exp_index} of ${step.label}`}\n        name={name}\n        required\n      />\n    </Row>\n  );\n}\n\nfunction parseEvaluatableExpressions(step, step_index) {\n  const { expressions } = step;\n\n  if (!Array.isArray(expressions) || expressions.length === 0) {\n    return [];\n  }\n\n  return expressions.reduce((acc, exp, index) => {\n    if (exp.evaluate) {\n      acc.push({\n        expression: exp,\n        exp_index: index,\n        step,\n        step_index\n      });\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction saveProcessEdits(values, process, setResult) {\n  const { process_name, ...evaluations } = values;\n  const toSend = {};\n\n  const steps = _.cloneDeep(process.steps);\n\n  /**\n   * extract and remap field values.\n   */\n  const extracted = extractFieldInfo(evaluations);\n\n  extracted.forEach(({ step, expression, value }) => {\n    const path = `[${step}].expressions[${expression}].evaluate`;\n\n    _.set(steps, path, value);\n  });\n\n  /** Prepare patch request body */\n  toSend.steps = steps;\n\n  if (process.name !== process_name) {\n    toSend.rename = values.process_name;\n  }\n\n  patchProcess(process.name, toSend)\n    .then(() => {\n      setResult('success');\n    })\n    .catch(() => {\n      setResult('fail');\n    });\n}\n\nfunction extractFieldInfo(all) {\n  const key_struct = /^step-(\\d+)-expression-(\\d+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      step: matched[1],\n      expression: matched[2],\n      value\n    };\n  });\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\nimport { postForm } from 'shared/api/form';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButtonNoDirty } from 'shared/components/form/SubmitButtonNoDirty';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { Ensure } from 'core/components/Ensure';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction findFormPrototype(form, prototypes) {\n  const name = form.prototype;\n  const found = prototypes.find(item => item.name === name);\n\n  return found;\n}\n\nfunction findFormEntry(entity, forms) {\n  if (entity.alias) {\n    return forms.find(entry => entry.name === entity.alias);\n  }\n\n  return entity;\n}\n\nconst ActionsForm = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n  return (\n    <>\n      {canWrite && (\n        <Ensure type=\"prototype\" inlineLoader>\n          {({ data: prototypes }) => (\n            <Ensure type=\"form\" inlineLoader>\n              {({ data: forms }) => (\n                <ConnectedFormModal\n                  disabled={disableActions}\n                  form={findFormEntry(entity, forms)}\n                  prototype={findFormPrototype(entity, prototypes)}\n                />\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      )}\n      <ConnectedCopyForm form={entity} />\n    </>\n  );\n};\n\nexport default ActionsForm;\n\nexport const ConnectedCopyForm = connect(null, {\n  request: fetchEntity\n})(CopyForm);\n\nfunction CopyForm({ form, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const [result, setResult] = useState('');\n  const disableActions = form?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Copy\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '300px'\n          }}\n        >\n          <ModalHeader\n            title=\"Copy Form\"\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was copied successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be copied.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: `${form.name}_copy` }}\n                onSubmit={handleSubmit.bind(this, setResult, request, form.name)}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              Please choose a new name for the copy of form &apos;{form.name}&apos;.\n                            </Section.Header>\n                            <Row>\n                              <Text\n                                name=\"name\"\n                                label=\"Name\"\n                                value={`${form.name}_copy`}\n                                description={form.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButtonNoDirty variant=\"contained\">Save</SubmitButtonNoDirty>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, formName, values) {\n  const body = {\n    name: values.name\n  };\n\n  postForm(formName, body)\n    .then(() => {\n      setResult('success');\n      request('form');\n    })\n    .catch(error => {\n      console.log('[copy form] put form error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButtonNoDirty = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { Section, Row, Column } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Ensure } from 'core/components/Ensure';\n\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { PackedContext } from './FormEditor';\n\nexport const FormParameters = ({ packed, prototype }) => {\n  return (\n    <Section>\n      <Section.Header></Section.Header>\n      <Section.Content>\n        <Ensure type=\"form\">\n          {({ data: forms }) => (\n            <Ensure type=\"type\">\n              {({ data: datatypes }) => (\n                <Ensure type=\"prototype\">\n                  {({ data: prototypes }) => (\n                    <Ensure type=\"process\">\n                      <FieldsAndGroupsEditor\n                        prototype={prototype}\n                        groups={packed.groups}\n                        prototypes={prototypes}\n                        datatypes={datatypes}\n                        forms={forms}\n                      />\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nconst DataContext = React.createContext({ datatypes: [], forms: [], prototypes: [] });\n\nfunction FieldsAndGroupsEditor({ groups, datatypes, prototypes, forms }) {\n  const entities = useMemo(\n    () => ({\n      datatypes,\n      prototypes,\n      forms\n    }),\n    [datatypes, prototypes, forms]\n  );\n\n  return (\n    <>\n      <DataContext.Provider value={entities}>\n        {groups.map((group, index) => (\n          <FieldGroup key={index} pointer={index} group={group} />\n        ))}\n      </DataContext.Provider>\n    </>\n  );\n}\n\nfunction FieldGroup({ group, pointer }) {\n  return (\n    <>\n      {group.instances.map((instance, index) => (\n        <GroupInstance\n          key={`${pointer}|${index}`}\n          group={group}\n          instance={instance}\n          pointers={{ group: pointer, instance: index }}\n          count={group.instances.length}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction GroupInstance({ group, instance, pointers, count }) {\n  let title = group.name ? `Group ${group.name}` : null;\n  if (group.iteration_limit > 1) {\n    title = group.name\n      ? `Group ${group.name} (${pointers.instance + 1} of ${count})`\n      : `Group (Unnamed) (${pointers.instance + 1} of ${count})`;\n  }\n\n  const canAdd =\n    group.iteration_limit > 1 && count - 1 === pointers.instance && count < group.iteration_limit;\n\n  const { dispatch } = useContext(PackedContext);\n\n  return (\n    <div>\n      <Section.Title>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}\n        >\n          {title}\n          {count !== 1 && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_GROUP_INSTANCE',\n                  pointers\n                });\n              }}\n            >\n              Remove Group\n            </Button>\n          )}\n        </div>\n      </Section.Title>\n      <div>\n        {instance.fields.map((field, index) => (\n          <Field\n            key={`${pointers.group}|${pointers.instance}|${field.name}`}\n            group={group}\n            instance={instance}\n            pointers={{ ...pointers, field: index }}\n            field={field}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {canAdd && (\n          <Button\n            onClick={() => {\n              const fields = instance.fields.map(field => {\n                return {\n                  ...field,\n                  values: [{ instance: 0, value: null }]\n                };\n              });\n              const newInstance = {\n                ...instance,\n                instance: instance.instance + 1,\n                fields\n              };\n\n              dispatch({\n                type: 'ADD_GROUP_INSTANCE',\n                pointers,\n                instance: newInstance\n              });\n            }}\n          >\n            Add Group\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Field({ field, pointers }) {\n  return (\n    <div>\n      {field.values.map((value, index) => (\n        <Value\n          key={`${pointers.group}|${pointers.instance}|${field.name}|${index}`}\n          field={field}\n          value={value.value}\n          pointers={{ ...pointers, value: index }}\n          count={field.values.length}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Value({ field, value, pointers, count }) {\n  const packet = useContext(DataContext);\n\n  const canRemove = field.is_repeatable && count !== 1;\n  const canAdd = field.is_repeatable && pointers.value + 1 === count;\n\n  const { dispatch } = useContext(PackedContext);\n\n  const label = field.is_repeatable\n    ? `${field.name} (${pointers.value + 1} of ${count})`\n    : field.name;\n\n  function uniquedName(name, idx) {\n    const string = `group-${idx.group}-instance-${idx.instance}-field-${idx.field}-value-${idx.value}---${field.name}`;\n\n    return string;\n  }\n\n  const parameter = normalize(\n    {\n      name: uniquedName(field.name, pointers),\n      provided_field_name: field.name,\n      is_required: field.is_required,\n      value,\n      data_type: field.data_type,\n      description: field.description,\n      deflt: field.deflt,\n      meta: field.meta\n    },\n    packet.datatypes,\n    packet.prototypes,\n    packet.forms\n  );\n\n  // for some reason, is_required is set as false for a supported parameter (eg: mas0300.sys.invocation.server_list prototype)\n  // FIX ME: need to investigate further, for now, will make the value the same as field\n  parameter.is_required = field.is_required;\n  // console.log(parameter, field);\n\n  const is_supported = parameter.is_supported && parameter.editor.type !== 'hidden';\n\n  if (!is_supported) {\n    return (\n      <Row key={pointers.value}>\n        <p>{field.name} (Unsuported)</p>\n        <Parameter\n          normalized={{ ...parameter, is_required: false, editor: { type: 'text' } }}\n          disabled\n          label={label}\n        />\n      </Row>\n    );\n  }\n\n  return (\n    <Row key={pointers.value}>\n      <Column key={field.name}>\n        <Parameter normalized={parameter} label={label} />\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          {canAdd && canRemove && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_FIELD_VALUE',\n                  pointers\n                });\n              }}\n            >\n              Remove\n            </Button>\n          )}\n          {canAdd && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                onClick={() => {\n                  dispatch({\n                    type: 'ADD_FIELD_VALUE',\n                    pointers\n                  });\n                }}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n        </div>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\n\nimport { ConnectedEditConnection } from './ConnectedEditConnection';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsAccount = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const type = getEntityType(entity);\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConnection connection={entity} type={type} isDisabled={isDisabled} />;\n};\n\nexport default ActionsAccount;\n\nconst CONNECTION_TYPES = {\n  SERVER: 'server',\n  DATABASE: 'database'\n};\n\nconst getEntityType = entity => {\n  if (entity.protocol === 'SSH') {\n    return CONNECTION_TYPES.SERVER;\n  }\n\n  if (entity.protocol !== 'SSH' && entity.special && entity.special.database) {\n    return CONNECTION_TYPES.DATABASE;\n  }\n\n  return '';\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport _ from 'lodash';\nimport { fetchEntity } from '../actions';\n\nimport { patchConnection } from 'shared/api/accounts';\n\nimport { Switch } from 'shared/components';\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { ModeSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text, Password, Integer } from 'shared/components/form/editors/Generic';\n\nimport { fetchProtocols } from 'shared/api/protocols';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nexport const ConnectedEditConnection = connect(null, {\n  request: fetchEntity\n})(EditConnection);\n\nfunction EditConnection({ connection, isDisabled, type, request }) {\n  if (type === '') return null;\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [passwordEditable, setPasswordEditable] = useState(false);\n  const [showRSA, setShowRSA] = useState(false);\n  const [protocols, setProtocols] = useState([]);\n  const initialValues = {\n    name: connection.name || '',\n    description: connection.description || '',\n    host: connection.address || '',\n    port: connection.port || '',\n    user: connection.user || '',\n    password: connection.user_key || '',\n    confirm_password: connection.user_key || '',\n    rsa_key: connection.user_key || '',\n    protocol: connection.protocol\n  };\n\n  if (type === 'database') {\n    initialValues.database = connection.special.database || '';\n    initialValues.mode = connection.special.mode || '';\n  }\n\n  let extraValidations;\n  if (!showRSA) {\n    extraValidations = values => {\n      const errors = {};\n\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n\n      return errors;\n    };\n  }\n\n  const getProtocols = () => {\n    fetchProtocols().then(response => {\n      if (response.result === 'success') {\n        setProtocols(response.protocols);\n      }\n    });\n  };\n\n  useEffect(() => {\n    return () => {\n      setPasswordEditable(false);\n    };\n  }, [open]);\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          if (type === 'database') {\n            getProtocols();\n          }\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vh',\n            minHeight: '50vh',\n            width: '808px',\n            height: '784px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Connection\"\n            icon={\n              <SvgIcon>\n                <VpnKeyIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Connection was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the connection could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={initialValues}\n                validate={extraValidations}\n                onSubmit={handleSubmit.bind(\n                  this,\n                  setResult,\n                  request,\n                  protocols,\n                  showRSA,\n                  type,\n                  connection\n                )}\n              >\n                {() => {\n                  const selectedProtocol =\n                    connection.protocol &&\n                    protocols.find(protocol => protocol.name === connection.protocol);\n                  const allowRSA = type === 'database' ? !!selectedProtocol?.allow_rsa_key : true;\n                  const withDatabase = selectedProtocol?.special_required?.includes('database');\n                  const withMode = selectedProtocol?.name === 'ORACLE';\n\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              <Section.Title>Details:</Section.Title>\n                            </Section.Header>\n                            <Row>\n                              <Column>\n                                <Row>\n                                  <Text name=\"name\" label=\"Name\" value={connection.name} required />\n                                </Row>\n                                <Row>\n                                  <Text\n                                    name=\"protocol\"\n                                    label=\"Protocol\"\n                                    value={connection.protocol}\n                                    disabled\n                                  />\n                                </Row>\n                              </Column>\n                              <Column>\n                                <Text\n                                  name=\"description\"\n                                  value={connection.description}\n                                  label=\"Description\"\n                                  multiline\n                                  required\n                                />\n                              </Column>\n                            </Row>\n                          </Section>\n                          <Section>\n                            <Section.Header>\n                              <Section.Title>Connection Info:</Section.Title>\n                            </Section.Header>\n                            <Row>\n                              <Column style={{ maxWidth: '80%', width: '80%' }}>\n                                <Text\n                                  name=\"host\"\n                                  label=\"Host\"\n                                  value={connection.name}\n                                  disabled\n                                  required\n                                />\n                              </Column>\n                              <Column style={{ maxWidth: '20%', width: '20%' }}>\n                                <Integer name=\"port\" label=\"Port\" value={connection.port} />\n                              </Column>\n                            </Row>\n                            {type === 'database' && (\n                              <Row>\n                                {withDatabase && (\n                                  <Column\n                                    style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}\n                                  >\n                                    <Text\n                                      name=\"database\"\n                                      label=\"Database\"\n                                      value={connection.special.database}\n                                      required\n                                    />\n                                  </Column>\n                                )}\n                                {withMode && (\n                                  <Column style={{ maxWidth: '20%' }}>\n                                    <ModeSelect name=\"mode\" label=\"Mode\" />\n                                  </Column>\n                                )}\n                              </Row>\n                            )}\n                            <Row>\n                              <Column>\n                                <Text name=\"user\" label=\"User\" value={connection.user} required />\n                              </Column>\n                              {passwordEditable && (\n                                <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                              )}\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Left>\n                          {!passwordEditable && (\n                            <Button onClick={() => setPasswordEditable(true)}>\n                              Change existing passsword\n                            </Button>\n                          )}\n                          {passwordEditable && allowRSA && (\n                            <Checkbox\n                              checked={showRSA}\n                              onInput={() => setShowRSA(prev => !prev)}\n                              label=\"Use RSA key\"\n                            />\n                          )}\n                        </Paper.Footer.Left>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, protocols, showRSA, type, connection, values) {\n  const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n  const allowRSA = type === 'database' ? !!selectedProtocol?.allow_rsa_key : true;\n  const withDatabase = selectedProtocol?.special_required?.includes('database');\n  const withMode = selectedProtocol?.name === 'ORACLE';\n\n  const request_body = {\n    rename: values.name,\n    user: values.user,\n    description: values.description,\n    protocol: values.protocol,\n    address: values.host,\n    user_key: (allowRSA && showRSA ? values.rsa_key : values.password) || undefined,\n    port: Number.parseInt(values.port, 10),\n    special: {\n      ...(withDatabase && { database: values.database }),\n      ...(withMode && { mode: values.mode })\n    }\n  };\n\n  if (_.isEmpty(request_body.special)) {\n    delete request_body.special;\n  }\n\n  patchConnection(connection.name, request_body)\n    .then(() => {\n      setResult('success');\n      request('account');\n    })\n    .catch(error => {\n      console.log('[edit connection] patch connection error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => {\n  return (\n    <Column>\n      <Switch value={allowed && showRSA}>\n        <Switch.Case value>\n          <Text name=\"rsa_key\" label=\"RSA Key\" multiline required />\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Row>\n            <Password name=\"password\" label=\"Password\" required />\n          </Row>\n          <Row>\n            <Password name=\"confirm_password\" label=\"Confirm Password\" required />\n          </Row>\n        </Switch.Case>\n      </Switch>\n    </Column>\n  );\n};\n","import React from 'react';\nimport { ConnectedNewNamespace } from './ActionsNamespace';\n\nconst ActionsRoot = () => {\n  return (\n    <>\n      <ConnectedNewNamespace />\n    </>\n  );\n};\n\nexport default ActionsRoot;\n","import React from 'react';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nconst ActionsPrototype = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <ConnectedFormModal isNew prototype={entity} disabled={disableActions} />\n    </>\n  );\n};\n\nexport default ActionsPrototype;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport _, { isEmpty, pickBy } from 'lodash';\n\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { patchSchedule, getSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsSchedule = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConnectedEditSchedule schedule={entity} isDisabled={isDisabled} />\n    </>\n  );\n};\n\nexport default ActionsSchedule;\n\nexport const ConnectedEditSchedule = connect(null, {\n  request: fetchEntity\n})(EditSchedule);\n\nfunction EditSchedule({ schedule, isDisabled, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const [processDetails, setProcessDetails] = useState({});\n  const [tab, setTab] = useState('schedule');\n\n  useEffect(() => {\n    if (!_.isEmpty(scheduleDetails) && !_.isEmpty(processDetails)) {\n      setOpen(true);\n    }\n  }, [scheduleDetails, processDetails]);\n\n  const onClickHandler = () => {\n    /** TODO cover the case when one (or both) of the below calls fail or no data is returned from them */\n\n    getSchedule(schedule.name)\n      .then(data => {\n        if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n          setScheduleDetails(data.data.data.schedules[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n\n    getProcess(schedule.process)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '800px',\n            minHeight: '85vh',\n            maxWidth: '85vw',\n            maxHeight: '85vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Schedule\"\n            icon={\n              <SvgIcon>\n                <EventNoteIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  An error occurred and the new schedule could not be added.\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={processDetails}\n                    schedule={scheduleDetails}\n                    setResult={setResult}\n                    request={request}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={processDetails} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({ schedule, setResult, request }) => {\n  const derivedMonitor = {\n    enabled: !!schedule?.parameters?.events,\n    events: schedule?.parameters?.events || 0,\n    users: schedule?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const splittedName = schedule.name.split('.');\n  const name = splittedName[splittedName.length - 1];\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name.includes('.')) {\n      errors.sch_name = 'Name can not include \".\"';\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={handleSubmit.bind(this, schedule, monitor, setResult, request)}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={schedule.description}\n                          value={schedule.process}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text name=\"sch_name\" label=\"Name\" value={name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={schedule.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_min\" label=\"T_min\" value={schedule.t_min} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_hr\" label=\"T_hr\" value={schedule.t_hr} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_day\" label=\"T_Day\" value={schedule.t_day} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_mon\" label=\"T_mon\" value={schedule.t_mon} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_wkd\" label=\"T_wkd\" value={schedule.t_wkd} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <ProcessParameters recieved={schedule.parameters} editable />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(schedule, monitor, setResult, request, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    rename: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value) {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  patchSchedule(schedule.name, body)\n    .then(() => {\n      setResult('success');\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[edit schedule] edit schedule error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(values) {\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else {\n          if (field_name === 'deflt') {\n            extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n          } else {\n            extracted.replvars.push({ [field_name]: values[key] });\n          }\n        }\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], parameters: {} }\n  );\n\n  return { parameters: { ...result.parameters, replvars: cleanUpReplVars(result.replvars) } };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getAlias, patchAlias, postAlias } from 'shared/api/alias';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { ConnectedDeleteEntity } from './common-actions/DeleteEntity';\nimport { PrivilegesModal } from './common-actions/privileges/PrivilegesModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction isEntityDeletable(entity) {\n  return (\n    entity.owner !== 'postgres' &&\n    (entity.entity === 'namespace' ||\n      entity.entity === 'form' ||\n      entity.entity === 'process' ||\n      entity.entity === 'schedule' ||\n      entity.entity === 'account')\n  );\n}\n\nconst ActionsCommon = ({ entity }) => {\n  const displayActions = entity.entity !== 'root';\n  if (displayActions) {\n    const displayDelete = isEntityDeletable(entity);\n    const isAlias = entity.alias;\n    const disableActions = entity?.meta?.appearance === 'Greyed';\n    const canWrite = hasWritePrivileges(entity);\n\n    return (\n      <>\n        {canWrite && (\n          <PrivilegesModal entity={entity} isAlias={isAlias} disabled={disableActions} />\n        )}\n        {!isAlias && <ConnectedNewAlias entity={entity} />}\n        {isAlias && canWrite && <ConnectedEditAlias entity={entity} />}\n        {canWrite && displayDelete && (\n          <ConnectedDeleteEntity entity={entity} disabled={disableActions} />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nexport default ActionsCommon;\n\n//* These should be moved to the common-actions folder */\n\nexport const ConnectedNewAlias = connect(null, {\n  request: fetchEntity\n})(NewAlias);\n\nfunction NewAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: '',\n                  original: entity ? entity.name : '',\n                  description: ''\n                }}\n                onSubmit={handleSubmitNew.bind(this, setResult, request)}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"namespace (leave blank for relative name)\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const alias = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name: values.original,\n    alias,\n    description: values.description\n  };\n\n  postAlias(body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedEditAlias = connect(null, {\n  request: fetchEntity\n})(EditAlias);\n\nfunction EditAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = entity.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.original = entity ? entity.alias : '';\n    values.description = description;\n\n    return values;\n  };\n\n  const getAliasDetails = name => {\n    getAlias(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.aliases &&\n          data.data.data.aliases[0] &&\n          data.data.data.aliases[0].description\n        ) {\n          setDescription(data.data.data.aliases[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get alias] error getting alias details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getAliasDetails(entity.name);\n        }}\n      >\n        Edit Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={handleEditSubmit.bind(this, setResult, request, entity.name)}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"namespace (leave blank for relative name)\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleEditSubmit(setResult, request, originalName, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    rename: name,\n    description: values.description\n  };\n\n  patchAlias(originalName, body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteEntity = connect(null, {\n  refresh: fetchEntity\n})(DeleteEntity);\n\nfunction DeleteEntity({ disabled, entity, refresh }) {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Are you sure you want to delete this {type} ?</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <BodyText>{name} successfully deleted!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                      refresh(type);\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <BodyText>You do not have permissions to delete this entity.</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function deleteEntity(name, type) {\n  try {\n    const { data } = await RestClient.delete(`/${type}/${name}`);\n\n    return { result: data.result };\n  } catch (e) {\n    return { result: 'fail' };\n  }\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { PrivilegesEditor } from './PrivilegesEditor';\n\nexport const PrivilegesModal = ({ disabled, entity, isAlias }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      // refresh(entity.type);\n      setOpen(false);\n    }, [])\n  };\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Privileges\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vw',\n            minHeight: '648px',\n            maxHeight: '648px'\n          }}\n        >\n          <ModalHeader\n            title=\"Privileges\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <PrivilegesEditor entity={entity} isAlias={isAlias} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\n\nimport { Paper, Center, NavigationTab } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Result, ModalContext } from 'shared/components/overlays';\nimport { Button, Checkbox as LabeledCheckbox } from 'shared/components/controls';\n\nimport { getPrivileges, setPrivileges } from 'shared/api/privileges';\n\nimport './PrivilegesEditor.local.scss';\nimport { mdiAccount } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nexport const PrivilegesEditor = ({ entity }) => {\n  const hasAlias = !!entity.alias;\n  const {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    updatePrivilege\n  } = usePrivileges(entity, hasAlias);\n  const [tab, switchTab] = useState('users');\n  const { actions } = useContext(ModalContext);\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader>Loading privileges for entity</Loader>\n      </Center>\n    );\n  }\n\n  if (!data) {\n    return (\n      <Center>\n        <Result type=\"fail\">\n          <Result.Text compact>Could not load privileges list for {entity.name}</Result.Text>\n        </Result>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab\n          active={tab}\n          tabs={[\n            { label: 'Users', value: 'users' },\n            { label: 'Groups', value: 'groups' }\n          ]}\n          onClick={switchTab}\n        />\n      </Paper.Header>\n      <PrivilegesList\n        privileges={data.privileges.filter(p => {\n          if (p.role === 'mas') {\n            return false;\n          }\n          if (p.role === 'admin') {\n            return false;\n          }\n          if (tab === 'users') {\n            return !p.is_group;\n          }\n\n          return p.is_group;\n        })}\n        updater={privilege => {\n          updatePrivilege(privilege);\n        }}\n        updating={updating}\n        entityType={entity.entity}\n        entityName={hasAlias && editAliasParent ? entity.alias : entity.name}\n        isAlias={hasAlias && !editAliasParent}\n      />\n      <Paper.Footer>\n        {!!entity.alias && (\n          <Paper.Footer.Left>\n            <LabeledCheckbox\n              color=\"primary\"\n              icon={<CheckBoxOutlineBlankIcon />}\n              checkedIcon={<CheckBoxIcon />}\n              checked={editAliasParent}\n              onChange={() => {\n                setEditAliasParent(!editAliasParent);\n              }}\n              label=\"Show parent privileges\"\n            />\n          </Paper.Footer.Left>\n        )}\n        <Paper.Footer.Right>\n          <Button color=\"primary\" variant=\"contained\" onClick={actions.close}>\n            Done\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nfunction PrivilegesList({ privileges, updating, updater, entityType, entityName, isAlias }) {\n  const types = privilegeTypes(entityType, isAlias);\n\n  function renderType(type) {\n    return (\n      <div className=\"column role\" key={type}>\n        {type}\n      </div>\n    );\n  }\n\n  function mapByEntity(user_or_group) {\n    return (\n      <div className=\"item\" key={`alias-${isAlias}-role-${user_or_group.role}`}>\n        <div className=\"column role\">\n          <SvgIcon color=\"primary\">\n            <path d={mdiAccount} />\n          </SvgIcon>\n          {user_or_group.role}\n        </div>\n        <div className=\"types\">\n          {types.map(type => {\n            const granted = user_or_group.effective.includes(type);\n            return (\n              <div className=\"column type\">\n                <Checkbox\n                  key={`alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n                  classes={{ root: 'privilege-checkbox' }}\n                  checked={granted}\n                  disabled={updating}\n                  onChange={() => {\n                    updater({\n                      privilege: type,\n                      enitity_name: entityName,\n                      alias: isAlias,\n                      role: user_or_group.role,\n                      role_type: user_or_group.is_group ? 'group' : 'user',\n                      granted\n                    });\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"privileges\">\n      <div className=\"header\">\n        {renderType('Name')}\n        <div className=\"types\">{types.map(renderType)}</div>\n      </div>\n      <div className=\"list\">{privileges.map(mapByEntity)}</div>\n    </div>\n  );\n}\n\nfunction privilegeTypes(entityType, alias = false) {\n  const type = entityType.toLowerCase();\n  const privileges = [];\n  if (!alias) {\n    if (type === 'namespace') {\n      privileges.push('affiliate');\n    } else if (['account', 'constant', 'form', 'process'].includes(type)) {\n      privileges.push('execute');\n    }\n  }\n  privileges.push('read', 'write');\n  return privileges;\n}\n\nfunction usePrivileges(entity, hasAlias) {\n  const [editAliasParent, setEditAliasParent] = useState(!hasAlias);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getPrivileges(\n      hasAlias && editAliasParent ? entity.alias : entity.name,\n      hasAlias && !editAliasParent\n    )\n      .then(resp => {\n        setData(resp?.data?.data?.entities?.[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setData(null);\n        setLoading(false);\n      });\n  }, [editAliasParent]);\n\n  const updatePrivilege = useCallback(\n    privilege => {\n      setUpdating(true);\n      setPrivileges(privilege)\n        .then(resp => {\n          setData(resp?.data?.data?.entities?.[0]);\n          setUpdating(false);\n        })\n        .catch(() => {\n          setUpdating(false);\n        });\n    },\n    [entity, editAliasParent]\n  );\n\n  return {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    setUpdating,\n    setData,\n    updatePrivilege\n  };\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { arrayOf, node, string, shape } from 'prop-types';\n\nimport './HeaderPageSwitch.local.scss';\n\nexport const HeaderPageSwitch = ({ routes }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header-page-switch\" data-qa=\"header-page-switch\">\n      {routes.map(({ to, label }) => (\n        <div\n          key={to}\n          className={classnames('header-page-switch-link', {\n            'active-link': location.pathname.includes(to)\n          })}\n        >\n          <Link key={to} to={to} data-qa={`header-page-switch-link-to-${to}`}>\n            {label}\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nHeaderPageSwitch.propTypes = {\n  routes: arrayOf(\n    shape({\n      to: string,\n      label: node\n    })\n  )\n};\n\nHeaderPageSwitch.defaultProps = {\n  routes: []\n};\n","import React, { useEffect } from 'react';\nimport { func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadUserThunk } from '../../store/thunks';\n\nimport { ConnectedUserView } from '../pages/UserView/UserView';\n\nexport const UserLoader = ({ loadUser, loading }) => {\n  const { userName } = useParams();\n  useEffect(() => {\n    if (userName) {\n      loadUser(userName);\n    }\n  }, [userName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading User <b>{userName}</b>\n        </Loader>\n      ) : (\n        <ConnectedUserView />\n      )}\n    </>\n  );\n};\n\nUserLoader.propTypes = {\n  loadUser: func,\n  loading: bool\n};\n\nexport const ConnectedUserLoader = connect(\n  state => ({\n    loading: state.usersManager.flags.user.loading\n  }),\n  dispatch => ({ loadUser: name => dispatch(loadUserThunk(name)) })\n)(UserLoader);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { UserGroupsContainer } from './containers/UserGroups';\n\nimport './UserView.local.scss';\nimport { removeUserThunk } from '../../../store/thunks';\nimport { EditUserDetailsContainer } from './containers/EditUserDetails';\nimport { EditUserInfoContainer } from './containers/EditUserInfo';\n\nexport const UserView = ({ user, removeUser, removing }) => {\n  const history = useHistory();\n\n  /* This needs to be written as a result check or 404 page for a user. */\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <Paper flex=\"column\">\n      <Paper.Header>\n        <Paper.Title>{user.name}</Paper.Title>\n      </Paper.Header>\n      <Paper.Content>\n        <Section>\n          <Section.Title>Global Privileges</Section.Title>\n          <PrivilegesContainer />\n        </Section>\n        <Section>\n          <Section.Title>Member of Groups</Section.Title>\n          <UserGroupsContainer />\n        </Section>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"secondary\"\n            disabled={removing}\n            onClick={() => {\n              removeUser(user.name)\n                .then(() => {\n                  history.push('/system/mas-accounts/users');\n                })\n                .catch(() => {\n                  alert('Could not remove user!'); // eslint-disable-line\n                });\n            }}\n          >\n            Remove\n          </Button>\n          <EditUserDetailsContainer />\n          <EditUserInfoContainer />\n        </Paper.Footer.Left>\n      </Paper.Footer>\n    </Paper>\n  );\n};\n\nUserView.propTypes = {\n  user: object,\n  removeUser: func,\n  removing: bool\n};\n\nexport const ConnectedUserView = connect(\n  state => ({\n    user: state.usersManager.users.selected,\n    removing: state.usersManager.flags.user.removing\n  }),\n  dispatch => ({\n    removeUser: userName => dispatch(removeUserThunk(userName))\n  })\n)(UserView);\n","import React from 'react';\nimport { string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../../store/thunks';\n\nexport const Privileges = ({ user, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <div className=\"user-privileges\">\n      <ul className=\"privileges-list\">\n        {privileges.map(entry => {\n          return (\n            <li key={entry.key} className=\"privileges-item\">\n              <Privilege user={user} privilege={entry} actions={actions} disabled={disabled} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPrivileges.propTypes = {\n  user: string,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ user, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(user, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  user: string,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      disabled: state.usersManager.flags.privileges.disabled,\n      privileges: mapPrivileges(user.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (user, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      ),\n    revoke: (user, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\n\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditUserGroupsContainer } from './EditUserGroups';\n\nimport './UserGroups.local.scss';\nimport { removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const UserGroups = ({ user, groups, removeFromGroups }) => {\n  return (\n    <div className=\"user-groups-block\">\n      <ScrollableContainer variant=\"row white\">\n        {passed => (\n          <ul {...passed}>\n            {groups.map(group_name => (\n              <li className=\"group-card-item\" key={group_name}>\n                <AvatarCard\n                  label={group_name}\n                  avatar={{ fallback: <GroupIcon /> }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        removeFromGroups(user, [group_name]);\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"group-card-item\" key=\"add-user-to-groups\">\n              <EditUserGroupsContainer />\n            </li>\n          </ul>\n        )}\n      </ScrollableContainer>\n    </div>\n  );\n};\n\nUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  removeFromGroups: func\n};\n\nexport const UserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user: user.name, groups: user.member_of };\n  },\n  dispatch => ({\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n  })\n)(UserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './EditUserGroups.local.scss';\nimport { addUserToGroupsThunk, removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const EditUserGroups = ({ user, groups, addToGroups, flags }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard label=\"Add to group\" avatar={{ fallback: <AddIcon /> }} />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            maxWidth: '840px',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n            />\n\n            <div className=\"modal-content\">\n              <GroupsList\n                user={user}\n                selected={groups}\n                flags={flags}\n                closeModal={closeModal}\n                onAdd={(userName, selections) => {\n                  return addToGroups(userName, selections);\n                }}\n              />\n            </div>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nEditUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  addToGroups: func,\n  flags: object\n};\n\nexport const EditUserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user: user.name, groups: user.member_of, flags: state.usersManager.flags.user };\n  },\n  dispatch => ({\n    addToGroups: (user, groups) => dispatch(addUserToGroupsThunk({ user, groups })),\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n    /** add to group thunk here */\n    /** remove from group thunk here */\n  })\n)(EditUserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nconst GroupsList = ({ user, selected, onAdd, closeModal }) => {\n  const [state, setState] = useState({\n    selections: [],\n    loading: true,\n    done: false,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(g => !selected.includes(g.name));\n  }, [state.all, state.showAll, selected]);\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS)\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return <p>Could not retrieve all groups</p>;\n  }\n\n  if (state.success) {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Added to selected groups succesfully!</Result.Text>\n          </Result>\n        </Center>\n\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.fail) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not add user to groups!</Result.Text>\n          </Result>\n        </Center>\n\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"seachable-list-container\">\n        <SearchableList\n          items={filtered}\n          filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n          variant=\"row white\"\n        >\n          {entry => {\n            return (\n              <div className=\"card-wrap\" style={{ width: '178px' }}>\n                <AvatarCard\n                  onClick={() => {\n                    setState(prev =>\n                      produce(prev, draft => {\n                        const selections = new Set(prev.selections);\n\n                        if (selections.has(entry.name)) {\n                          selections.delete(entry.name);\n                        } else {\n                          selections.add(entry.name);\n                        }\n\n                        draft.selections = [...selections];\n                      })\n                    );\n                  }}\n                  disabled={state.showAll ? selected.includes(entry.name) : false}\n                  selected={state.selections.includes(entry.name)}\n                  label={entry.name}\n                  avatar={{ fallback: <GroupIcon /> }}\n                />\n              </div>\n            );\n          }}\n        </SearchableList>\n        <div className=\"additional-actions\">\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that the user is a part of\"\n          />\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              onAdd(user, state.selections)\n                .then(\n                  setState(\n                    produce(state, draft => {\n                      draft.success = true;\n                    })\n                  )\n                )\n                .catch(err => {\n                  setState(\n                    produce(state, draft => {\n                      draft.fail = err;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  user: string,\n  selected: array,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { ChangePasswordContainer } from './ChangePassword';\nimport { UserDatesBox } from '../components/UserDatesBox';\n\n// import './EditUserDetails.local.scss';\n\nexport const EditUserDetails = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        User Details\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '370px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-details\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"User Details\"\n          />\n          <UserDetailsForm user={user} modalActions={modalActions} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserDetails.propTypes = {\n  user: object\n};\n\nexport const EditUserDetailsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserDetails);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserDetailsForm = ({ user, modalActions }) => {\n  const [state, setState] = useState({ submitResult: undefined });\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  const initialValues = {\n    description: user.description\n  };\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          if (_.isEqual(initialValues, values)) {\n            actions.setSubmitting(false);\n            modalActions.close();\n          }\n\n          // parse and add user information form data.\n\n          /**\n            patch user description\n            */\n          RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`, {\n            description: values.description\n          })\n            .then(() => {\n              setState(prev => ({ ...prev, submitResult: 'success' }));\n            })\n            .catch(() => {\n              actions.setSubmitting(false);\n\n              setState(prev => ({ ...prev, submitResult: 'fail' }));\n            });\n        }}\n      >\n        {({ dirty, isSubmitting, submitForm }) => (\n          <>\n            <Paper.Content scrollable>\n              <Form>\n                <UserDatesBox created={user.date_created} updated={user.date_updated} />\n                <Row>\n                  <Field name=\"description\">\n                    {({ field, meta }) => {\n                      return (\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          error={meta.error && meta.touched}\n                          helperText={meta.touched ? meta.error : undefined}\n                          label=\"Short Description\"\n                        />\n                      );\n                    }}\n                  </Field>\n                </Row>\n              </Form>\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <ChangePasswordContainer />\n              </Paper.Footer.Left>\n              <Paper.Footer.Right>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || isSubmitting}\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nUserDetailsForm.propTypes = {\n  user: object,\n  modalActions: object\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { SvgIcon } from '@material-ui/core';\nimport { mdiAccountPlus, mdiAccountEdit } from '@mdi/js';\nimport moment from 'moment';\n\nimport './UserDatesBox.local.scss';\n\nexport const UserDatesBox = ({ created, updated }) => (\n  <div className=\"dates-box\">\n    {created && <DateCreated date={created} />}\n    {updated && <DateUpdated date={updated} />}\n  </div>\n);\n\nUserDatesBox.propTypes = { created: string, updated: string };\n\nexport const DateCreated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountPlus} />\n    </SvgIcon>\n    <span>Created on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateCreated.propTypes = { date: string };\n\nexport const DateUpdated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountEdit} />\n    </SvgIcon>\n    <span>Updated on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateUpdated.propTypes = { date: string };\n\nfunction parseDate(date) {\n  return moment(date).format('DD MMM YYYY');\n}\n","import React, { useState, useEffect } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\n// import './EditUserInfo.local.scss';\n\nexport const EditUserInfo = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Contact Info\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '632px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"Contact Information\"\n          />\n          <UserInfoForm user={user} modalActions={modalActions} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserInfo.propTypes = {\n  user: object\n};\n\nexport const EditUserInfoContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserInfo);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserInfoForm = ({ user, modalActions }) => {\n  const [state, setState] = useState({ loading: true });\n\n  useEffect(() => {\n    const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n    const prototypeEndpoint = 'prototype/mas0300.sys.user.information?version=1';\n\n    RestClient.get(prototypeEndpoint).then(formproto => {\n      const proto = formproto.data.data.prototypes[0];\n\n      RestClient.get(formEndpoint)\n        .then(formdata => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: false,\n            data: formdata.data.data.forms[0],\n            proto\n          });\n        })\n        .catch(() => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: true,\n            proto\n          });\n        });\n    });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <>\n        <Center>\n          <Loader />\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"primary\" onClick={modalActions.close}>\n              Cancel\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.result === 'success') {\n    const { fields, values } = mapFormValues(state.proto, state.data);\n\n    return (\n      <>\n        <Formik\n          validateOnChange={false}\n          initialValues={values}\n          onSubmit={(submited, actions) => {\n            if (_.isEqual(values, submited)) {\n              actions.setSubmitting(false);\n              modalActions.close();\n            }\n\n            const sendable_data = fields.reduce((d, entry) => {\n              /** Empty values have to be nulled to be sent in the data :( */\n              let value = submited[entry.name] || null;\n\n              /**\n                TODO: backend accepts array for is_repeatable values\n               */\n              if (entry.is_repeatable && !Array.isArray(value)) {\n                value = [value];\n              }\n\n              d.push({\n                name: entry.label, // for this particular form, the names contain spaces.\n                value\n              });\n\n              return d;\n            }, []);\n            // parse and add user information form data.\n\n            /**\n            Send user.info data to backend\n            */\n            const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n\n            if (state.create) {\n              const body = {\n                name: `mas0000.user.${user.name}.form.user_information`,\n                description: `User information for ${user.name}`,\n                values: sendable_data,\n                prototype: state.proto.name\n              };\n\n              RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.FORM}`, body)\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            } else {\n              RestClient.patch(formEndpoint, {\n                description: state.data.description,\n                rename: state.data.name,\n                values: sendable_data\n              })\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            }\n          }}\n        >\n          {({ dirty, isSubmitting, submitForm }) => (\n            <>\n              <Paper.Content scrollable>\n                <Form style={{ paddingTop: '16px' }}>\n                  {fields.map(entry => (\n                    <Row key={entry.name}>\n                      <FieldSwitch parameter={entry} />\n                    </Row>\n                  ))}\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button color=\"primary\" onClick={modalActions.close}>\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!dirty || isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          )}\n        </Formik>\n      </>\n    );\n  }\n};\n\nfunction mapFormValues(proto, provided) {\n  const { fields } = proto;\n  const data = provided && provided.values;\n\n  return fields.reduce(\n    (dict, entry, index) => {\n      const normalized = entry.name.replace(' ', '_');\n      const value = data && data[index].value;\n\n      if (entry.is_repeatable && Array.isArray(entry.value)) {\n        /**\n          TODO: array values have to be unpacked\n         */\n        dict.values[normalized] = value ? value[0] : '';\n      } else {\n        dict.values[normalized] = value || '';\n      }\n\n      dict.fields.push({\n        ...entry,\n        name: normalized,\n        label: entry.name\n      });\n\n      return dict;\n    },\n    { values: {}, fields: [] }\n  );\n}\n\nexport const TextField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    const schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './UserCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const UserCard = ({ href, user }) => {\n  const { pathname } = useLocation();\n  const { name, src } = user;\n  return (\n    <Link\n      to={href}\n      className={classnames('user-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`user-card-of-${name}`}\n    >\n      <Avatar className=\"user-avatar\" alt={name} src={src}>\n        {user.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"user-name\">{name}</span>\n    </Link>\n  );\n};\n\nUserCard.propTypes = {\n  href: string,\n  user: object\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoUserSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>User Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a user from the list to view or edit their details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n  </Paper>\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Section, Center, Row, Column } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { NewUserGroups } from './components/NewUserGroups';\n\nimport { createUserThunk } from '../../../store/thunks';\n\nimport './CreateNewUser.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmpassword: Yup.string()\n    .required('Please confim the password you entered')\n    .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  groups: Yup.array()\n});\n\nconst CreateNewUser = ({ submitUserValues, allUsers }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.username) ||\n      (values.username && values.username.substr(-1) === '.')\n    ) {\n      errors.username = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allUsers.map(user => {\n      if (exists) return;\n\n      if (user.name === values.username) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.username = 'A user with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /** Not used. Navigating dirrectly to new user */\n    if (operation.result === 'success') {\n      return (\n        <>\n          <Paper>\n            <Paper.Content scrollable={false}>\n              <Center>\n                <Result type={operation.result}>\n                  <Result.Text>User created successfully</Result.Text>\n                </Result>\n              </Center>\n            </Paper.Content>\n            <Paper.Footer>\n              <Button to=\"/system/mas-accounts/users\" component={Link}>\n                Go to user\n              </Button>\n            </Paper.Footer>\n          </Paper>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Text>Could not create new user</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirmpassword: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitUserValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.username));\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: error.result\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <Paper>\n          <Form className=\"create-new-user-form\">\n            <Paper.Title>New User</Paper.Title>\n            <Paper.Content>\n              <Section>\n                <Section.Title>User Details</Section.Title>\n                <Section.Content>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"username\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"description\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            label=\"Short Description\"\n                            placeholder=\"Short description\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"password\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"confirmpassword\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            autoComplete=\"off\"\n                            required\n                            label=\"Confirm Password\"\n                            placeholder=\"Confirm Passwords\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                </Section.Content>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => <NewUserGroups groups={values.groups} helpers={helpers} />}\n                </FieldArray>\n              </Section>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <div className=\"left-side-action\">\n                <Button to=\"/system/mas-accounts/users\" color=\"primary\">\n                  Cancel\n                </Button>\n              </div>\n\n              <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !isValid}>\n                Save\n              </Button>\n            </Paper.Footer>\n          </Form>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewUser.propTypes = { submitUserValues: func };\n\nexport const CreateNewUserPage = connect(\n  state => ({\n    allUsers: state.usersManager.users.all\n  }),\n  dispatch => ({\n    submitUserValues: values => dispatch(createUserThunk(values))\n  })\n)(CreateNewUser);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './NewUserGroups.local.scss';\n\nexport const NewUserGroups = ({ groups, helpers }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {groups.map(group_name => (\n            <li className=\"group-card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = groups.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n              />\n            </li>\n          ))}\n          <li className=\"group-card-item\" key=\"add-user-to-groups\">\n            <GroupsSelection selected={groups} helpers={helpers} />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nNewUserGroups.propTypes = {\n  username: string,\n  groups: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            maxWidth: '840px',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n            />\n\n            <div className=\"modal-content\">\n              <GroupsList selected={selected} helpers={helpers} closeModal={closeModal} />\n            </div>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS)\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Center>\n\n        <ModalFooter>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"seachable-list-container\">\n        <SearchableList\n          items={state.all}\n          filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n          variant=\"row white\"\n        >\n          {entry => {\n            return (\n              <div className=\"card-wrap\" style={{ width: '178px' }}>\n                <AvatarCard\n                  onClick={() => {\n                    const existing = selected.indexOf(entry.name);\n\n                    if (existing !== -1) {\n                      helpers.remove(existing);\n                    } else {\n                      helpers.push(entry.name);\n                    }\n                  }}\n                  selected={selected.includes(entry.name)}\n                  label={entry.name}\n                  avatar={{ fallback: <GroupIcon /> }}\n                />\n              </div>\n            );\n          }}\n        </SearchableList>\n        <ModalFooter>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Confirm\n          </Button>\n        </ModalFooter>\n      </div>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './GroupCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const GroupCard = ({ href, group }) => {\n  const { pathname } = useLocation();\n\n  const { name, src } = group;\n  return (\n    <Link\n      to={href}\n      className={classnames('group-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`group-card-of-${name}`}\n    >\n      <Avatar className=\"group-avatar\" alt={name} src={src}>\n        {group.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"group-name\">{name}</span>\n    </Link>\n  );\n};\n\nGroupCard.propTypes = {\n  href: string,\n  group: object\n};\n","import React, { useEffect } from 'react';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { Paper } from 'shared/components/layout';\n\nimport { loadGroupThunk, removeGroupThunk } from '../../store/thunks';\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { GroupUsersContainer } from './containers/GroupUsers';\nimport { SubGroupsContainer } from './containers/SubGroups';\n\nimport './GroupView.local.scss';\n\nexport const GroupView = ({ group, removing, removeGroup }) => {\n  /* This needs to be written as a result check or 404 page for a group. */\n  if (!group) {\n    return <></>;\n  }\n\n  const history = useHistory();\n\n  return (\n    <Paper flex=\"column\">\n      <Paper.Header>\n        <Paper.Title>{group.name}</Paper.Title>\n      </Paper.Header>\n\n      <Paper.Content scrollable>\n        <PrivilegesContainer />\n        <GroupUsersContainer />\n        <SubGroupsContainer />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"secondary\"\n            disabled={removing}\n            onClick={() => {\n              removeGroup(group.name)\n                .then(() => {\n                  history.push('/system/mas-accounts/groups');\n                })\n                .catch(() => {\n                  alert('Could not remove group!'); // eslint-disable-line\n                });\n            }}\n          >\n            Remove\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n    </Paper>\n  );\n};\n\nGroupView.propTypes = {\n  group: object,\n  removing: bool,\n  removeGroup: func\n};\n\nexport const ConnectedGroupView = connect(\n  state => ({\n    group: state.groups.selected,\n    removing: state.groups.ops.remove.loading\n  }),\n  dispatch => ({\n    removeGroup: name => dispatch(removeGroupThunk(name))\n  })\n)(GroupView);\n\nexport const GroupLoader = ({ loadGroup, loading }) => {\n  const { groupName } = useParams();\n  useEffect(() => {\n    if (groupName) {\n      loadGroup(groupName);\n    }\n  }, [groupName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading Group <b>{groupName}</b>\n        </Loader>\n      ) : (\n        <ConnectedGroupView />\n      )}\n    </>\n  );\n};\n\nGroupLoader.propTypes = {\n  loadGroup: func,\n  loading: bool\n};\n\nexport const ConnectedGroupLoader = connect(\n  state => ({\n    loading: state.groups.ops.selected.loading\n  }),\n  dispatch => ({ loadGroup: name => dispatch(loadGroupThunk(name)) })\n)(GroupLoader);\n","import React from 'react';\nimport { object, string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { Section } from 'shared/components/layout';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../store/thunks';\n\nexport const Privileges = ({ group, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Class privileges:</Section.Title>\n        <Section.Info>\n          Effective class privileges are calculated based on explicit grants and denies in this\n          group and in groups of which this group may be a member\n        </Section.Info>\n      </Section.Header>\n      <div className=\"user-privileges\">\n        <ul className=\"privileges-list\">\n          {privileges.map(entry => {\n            return (\n              <li key={entry.key} className=\"privileges-item\">\n                <Privilege group={group} privilege={entry} actions={actions} disabled={disabled} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nPrivileges.propTypes = {\n  group: object,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ group, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(group.name, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  group: object,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      disabled: state.groups.ops.privileges.loading,\n      privileges: mapPrivileges(group.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (group, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      ),\n    revoke: (group, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport './GroupUsers.local.scss';\nimport { EditGroupUsersContainer } from './EditGroupUsers';\n\nimport { removeUsersFromGroupThunk } from '../../../store/thunks';\n\nexport const GroupUsers = ({ group, removeUsersFromGroup }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Users in this group</Section.Title>\n      </Section.Header>\n      <div>\n        <ul className=\"card-list\">\n          {group.users.map(user => (\n            <li className=\"card-item\" key={user}>\n              <AvatarCard\n                label={user}\n                avatar={{ initial: user.charAt(0) }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      removeUsersFromGroup(group.name, user);\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-user-to-groups\">\n            <EditGroupUsersContainer />\n          </li>\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nGroupUsers.propTypes = {\n  group: object,\n  removeUsersFromGroup: func\n};\n\nexport const GroupUsersContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeUsersFromGroup: (group, user) => dispatch(removeUsersFromGroupThunk({ group, user }))\n  })\n)(GroupUsers);\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { addUsersToGroupThunk } from '../../../store/thunks';\n\nimport './EditGroupUsers.local.scss';\n\nexport const EditGroupUsers = ({ group, addUsersToGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add user\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <Paper style={{ minWidth: '75vh', minHeight: '75vh' }}>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <SvgIcon>\n                    <path d={mdiAccountGroup} />\n                  </SvgIcon>\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the users you want to add this group\"\n              aria={aria}\n              onClose={actions.close}\n            />\n            <UsersSelection\n              group={group}\n              closeModal={closeModal}\n              onAdd={selections => {\n                return addUsersToGroup(group.name, selections);\n              }}\n            />\n          </Paper>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditGroupUsers.propTypes = {\n  group: object,\n  addUsersToGroup: func\n};\n\nexport const EditGroupUsersContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    addUsersToGroup: (group, users) => dispatch(addUsersToGroupThunk({ group, users }))\n  })\n)(EditGroupUsers);\n\nconst UsersSelection = ({ group, closeModal, onAdd }) => {\n  const [state, setState] = useState({\n    selections: [],\n    usersFetched: false,\n    usersSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(u => !group.users.includes(u.name));\n  }, [state.all, state.showAll, group]);\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}`)\n      .then(({ data }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data.data.users;\n            draft.usersFetched = true;\n            draft.result = 'success';\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error.messages;\n            draft.usersFetched = true;\n            draft.result = 'fail';\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <Paper.Content>\n        <Loader />\n      </Paper.Content>\n    );\n  }\n\n  if (state.usersFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve user list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected users to group succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add users to group!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <SearchableList\n          items={filtered}\n          filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n          variant=\"row white\"\n        >\n          {entry => {\n            return (\n              <div className=\"card-wrap\" style={{ width: '178px' }}>\n                <AvatarCard\n                  onClick={() => {\n                    setState(prev =>\n                      produce(prev, draft => {\n                        const selections = new Set(prev.selections);\n\n                        if (selections.has(entry.name)) {\n                          selections.delete(entry.name);\n                        } else {\n                          selections.add(entry.name);\n                        }\n\n                        draft.selections = [...selections];\n                      })\n                    );\n                  }}\n                  disabled={state.showAll ? group.users.includes(entry.name) : false}\n                  selected={state.selections.includes(entry.name)}\n                  label={entry.name}\n                  avatar={{\n                    initial: entry.name.charAt(0)\n                  }}\n                />\n              </div>\n            );\n          }}\n        </SearchableList>\n      </Paper.Content>\n      <ModalFooter>\n        <ModalFooter.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show users that are members of this group\"\n          />\n        </ModalFooter.Left>\n        <ModalFooter.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              /**\n                NOTE: (to self)\n\n                This is lim 0 -> complete trash\n\n                Can't use redux for snippets of this operation.\n                The redux action that is required should only be to update final group entry at maximum.\n\n                Either all ops are in redux, or none are.\n               */\n              onAdd(state.selections).then(response => {\n                setState(prev =>\n                  produce(prev, draft => {\n                    draft.loading = false;\n                    draft.usersSubmitted = true;\n                    draft.result = response.result;\n                    draft.error = response.messages;\n                  })\n                );\n              });\n            }}\n          >\n            Add\n          </Button>\n        </ModalFooter.Right>\n      </ModalFooter>\n    </>\n  );\n};\n\nUsersSelection.propTypes = {\n  group: object,\n  onAdd: func,\n  closeModal: func\n};\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiAccountGroup } from '@mdi/js';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { EditSubGroupsContainer } from './EditSubGroups';\n\nimport { removeSubGroupsThunk } from '../../../store/thunks';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ group, removeSubGroups }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Member of groups</Section.Title>\n      </Section.Header>\n      <div>\n        <ul className=\"card-list\">\n          {group.member_of.map(subgroup => (\n            <li className=\"card-item\" key={subgroup}>\n              <AvatarCard\n                label={subgroup}\n                avatar={{\n                  fallback: (\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  )\n                }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      removeSubGroups(group.name, [subgroup]);\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-sub-group\">\n            <EditSubGroupsContainer />\n          </li>\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nSubGroups.propTypes = {\n  group: object,\n  removeSubGroups: func\n};\n\nexport const SubGroupsContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeSubGroups: (group, groups) => dispatch(removeSubGroupsThunk({ group, groups }))\n  })\n)(SubGroups);\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { PATCH_SELECTED_GROUP } from '../../../store/actions';\n\nimport './EditSubGroups.local.scss';\n\nexport const EditSubGroups = ({ group, updateGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <Paper style={{ minWidth: '75vh', minHeight: '75vh' }}>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <SvgIcon>\n                    <path d={mdiAccountGroup} />\n                  </SvgIcon>\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select which groups this one should be a part of\"\n              aria={aria}\n              onClose={actions.close}\n            />\n            <GroupSelection group={group} updateGroup={updateGroup} closeModal={actions.close} />\n          </Paper>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditSubGroups.propTypes = {\n  group: object,\n  updateGroup: func\n};\n\nexport const EditSubGroupsContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    updateGroup: group => dispatch(creators.action(PATCH_SELECTED_GROUP, group))\n  })\n)(EditSubGroups);\n\nconst GroupSelection = ({ group, closeModal, updateGroup }) => {\n  const [state, setState] = useState({\n    selections: [],\n    groupsFetched: false,\n    subgroupsSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? [...state.all]\n      : state.all.filter(g => !group.member_of.includes(g.name));\n  }, [state.all, state.showAll, group]);\n\n  const isDisabled = name => {\n    if (group.name === name) {\n      return true;\n    }\n\n    if (state.showAll) {\n      return group.member_of.includes(name);\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`)\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.groups;\n            draft.groupsFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.groupsFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <Paper.Content>\n        <Loader />\n      </Paper.Content>\n    );\n  }\n\n  if (state.groupsFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve groups list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected groups succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add selected groups!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <SearchableList\n          items={filtered}\n          filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n          variant=\"row white\"\n        >\n          {entry => {\n            return (\n              <div className=\"card-wrap\" style={{ width: '178px' }}>\n                <AvatarCard\n                  onClick={() => {\n                    setState(prev =>\n                      produce(prev, draft => {\n                        const selections = new Set(prev.selections);\n\n                        if (selections.has(entry.name)) {\n                          selections.delete(entry.name);\n                        } else {\n                          selections.add(entry.name);\n                        }\n\n                        draft.selections = [...selections];\n                      })\n                    );\n                  }}\n                  disabled={isDisabled(entry.name)}\n                  selected={state.selections.includes(entry.name)}\n                  label={entry.name}\n                  avatar={{\n                    fallback: (\n                      <SvgIcon>\n                        <path d={mdiAccountGroup} />\n                      </SvgIcon>\n                    )\n                  }}\n                />\n              </div>\n            );\n          }}\n        </SearchableList>\n      </Paper.Content>\n      <ModalFooter>\n        <ModalFooter.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that this one already is a member of\"\n          />\n        </ModalFooter.Left>\n        <ModalFooter.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group.name}/grant`, {\n                groups: state.selections\n              })\n                .then(({ data: resolved }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = resolved.result;\n                    })\n                  );\n\n                  updateGroup(resolved.data.groups[0]);\n                })\n                .catch(({ data: rejected }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = rejected.result;\n                      draft.error = rejected.messages;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </ModalFooter.Right>\n      </ModalFooter>\n    </>\n  );\n};\n\nGroupSelection.propTypes = {\n  group: object,\n  updateGroup: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Center } from 'shared/components';\nimport { Paper, Section, Column, Row } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { createGroupThunk } from '../../store/thunks';\n\nimport { SubGroups } from './components/SubGroups';\n\nimport './CreateNewGroup.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  groupname: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Group name is required'),\n  groups: Yup.array()\n});\n\nconst CreateNewGroup = ({ submitGroupValues, allGroups }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.groupname) ||\n      (values.groupname && values.groupname.substr(-1) === '.')\n    ) {\n      errors.groupname = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allGroups.map(group => {\n      if (exists) return;\n\n      if (group.name === values.groupname) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.groupname = 'A group with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /**\n     * Failed results are the ony onnes that are shown.\n     * For successfull creation, the user is navigated to the new entry\n     */\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Title>Could not create new group</Result.Title>\n              </Result>\n            </Center>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        groupname: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitGroupValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.groupname));\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: error.result\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid, submitForm }) => (\n        <Paper>\n          <Paper.Title>New Group</Paper.Title>\n          <Paper.Content>\n            <Form className=\"create-new-group-form\">\n              <Section>\n                <Section.Title>Group Details</Section.Title>\n                <Row>\n                  <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                    <Field name=\"groupname\">\n                      {({ field, meta }) => (\n                        <Input\n                          required\n                          {...field}\n                          label=\"Group Name\"\n                          placeholder=\"Group Name\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                  <Column style={{ maxWidth: '220px' }}>\n                    <Field name=\"description\">\n                      {({ field, meta }) => (\n                        <Input\n                          {...field}\n                          label=\"Short Description\"\n                          placeholder=\"Short Description\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                </Row>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => <SubGroups selections={values.groups} helpers={helpers} />}\n                </FieldArray>\n              </Section>\n            </Form>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button to=\"/system/mas-accounts/groups\" color=\"primary\">\n                Cancel\n              </Button>\n            </Paper.Footer.Left>\n\n            <Paper.Footer.Right>\n              <Button\n                type=\"submit\"\n                onClick={submitForm}\n                variant=\"contained\"\n                disabled={isSubmitting || !isValid}\n              >\n                Save\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewGroup.propTypes = { submitGroupValues: func };\n\nexport const CreateNewGroupPage = connect(\n  state => ({\n    allGroups: state.groups.all\n  }),\n  dispatch => ({\n    submitGroupValues: values => dispatch(createGroupThunk(values))\n  })\n)(CreateNewGroup);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ selections, helpers }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {selections.map(group_name => (\n            <li className=\"card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = selections.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-group-to-groups\">\n            <GroupsSelection selected={selections} helpers={helpers} />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nSubGroups.propTypes = {\n  username: string,\n  selections: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    open: openModal,\n    close: closeModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"add-to-group-button\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <Paper style={{ minWidth: '75vh', minHeight: '75vh' }}>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={aria}\n              onClose={actions.close}\n            />\n            <GroupsList selected={selected} helpers={helpers} closeModal={actions.close} />\n          </Paper>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS)\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={state.all}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row white\"\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ minWidth: '178px', maxWidth: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <ModalFooter>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </ModalFooter>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoGroupSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>Group Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a group from the list to view or edit its details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n    {/* <Paper.Footer /> */}\n  </Paper>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { mdiHexagonMultipleOutline } from '@mdi/js';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { changeStateThunk } from '../../../store/thunks';\n\nimport { ServerList } from '../ServerList/ServerList';\n\nimport './Dbms.local.scss';\n\nexport class DBMS extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"dbms-item\">\n        <header>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.protocol}-dbms`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiHexagonMultipleOutline} />\n              </SvgIcon>\n            </div>\n            <div\n              className={`value ${path.startsWith(data.path) ? 'active' : ''}`}\n              title={data.protocol}\n            >\n              {data.protocol}\n            </div>\n          </div>\n          <div\n            role=\"presentation\"\n            data-qa={`toggle-${data.protocol}-dbms`}\n            className={`status ${path.startsWith(data.path) ? 'active' : ''}`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <RemoveIcon /> : <AddIcon />}\n          </div>\n        </header>\n        <ul className=\"dbms-content\">{isExpanded && <ServerList servers={data.servers} />}</ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nDBMS.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDBMS = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(DBMS);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedServer } from './containers/Server/Server';\n\nexport class ServerList extends React.PureComponent {\n  render() {\n    const { servers } = this.props;\n\n    return servers.map(server => <ConnectedServer key={server.address} data={server} />);\n  }\n}\n\nServerList.propTypes = {\n  servers: array\n};\n\nexport default ServerList;\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { DatabaseList } from '../../../DatabaseList/DatabaseList';\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Server.local.scss';\n\nexport class Server extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"server-item\">\n        <header className={`${path.startsWith(data.path) ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.address}-server`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={data.address}>\n              {data.address}\n            </div>\n          </div>\n          <div\n            className=\"status\"\n            role=\"presentation\"\n            data-qa={`toggle-${data.address}-server`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n          </div>\n        </header>\n        <ul className=\"server-content\">\n          {isExpanded && <DatabaseList databases={data.databases} />}\n        </ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nServer.propTypes = {\n  data: object,\n  storeState: object,\n  changeState: func\n};\n\nexport const ConnectedServer = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Server);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedDatabase } from './containers/Database/Database';\n\nexport class DatabaseList extends React.PureComponent {\n  render() {\n    const { databases } = this.props;\n    return databases.map(database => <ConnectedDatabase key={database.name} data={database} />);\n  }\n}\n\nDatabaseList.propTypes = {\n  databases: array\n};\n\nexport default DatabaseList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Database.local.scss';\n\nexport class Database extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.storeState.path === props.data.path) {\n      return { isExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n\n    const name = data.special.database;\n\n    return (\n      <li className=\"database-item\">\n        <header className={`${data.path === path ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${name}-database`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDatabase} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={name}>\n              {name}\n            </div>\n          </div>\n        </header>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nDatabase.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDatabase = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Database);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string, func, object } from 'prop-types';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport { changeStateThunk } from '../../store/thunks';\n\nimport './Breadcrumbs.local.scss';\n\nexport class BreadcrumbsTitle extends React.PureComponent {\n  render() {\n    const {\n      storeState: { path }\n    } = this.props;\n\n    return this.renderBreadcrumbs(path);\n  }\n\n  renderBreadcrumbs = path => {\n    const links = path\n      .split(this.props.separator)\n      .filter(e => e)\n      .reduce(\n        (routes, entry, index, list) => {\n          const previous = list.slice(0, index);\n          previous.push(entry);\n          const routePath = previous.join(this.props.separator);\n\n          const route = { label: entry, route: routePath };\n          routes.push(route);\n\n          return routes;\n        },\n        [{ label: 'DBMS', route: '' }]\n      );\n\n    return (\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        {links.map(link => {\n          return (\n            <div\n              data-qa={`breadcrumbs-${link.label}`}\n              className=\"path\"\n              role=\"presentation\"\n              key={link.route}\n              onClick={() => this.navigateTo(link.route)}\n            >\n              {link.label}\n            </div>\n          );\n        })}\n      </Breadcrumbs>\n    );\n  };\n\n  navigateTo = selectedLink => {\n    if (selectedLink === this.props.storeState.path) {\n      return;\n    }\n\n    this.props.changeState({ path: selectedLink });\n\n    this.setActiveLevel(selectedLink);\n  };\n\n  setActiveLevel = selectedLink => {\n    const linkElements = selectedLink.split(this.props.separator).filter(e => e);\n\n    switch (linkElements.length) {\n      case 0:\n        this.props.changeState({ level: 'all-dbms' });\n        break;\n      case 1:\n        this.props.changeState({ level: 'all-servers' });\n        break;\n      case 2:\n        this.props.changeState({ level: 'all-databases' });\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nBreadcrumbsTitle.propTypes = {\n  storeState: object,\n  changeState: func,\n  separator: string\n};\n\nBreadcrumbsTitle.defaultProps = {\n  separator: '--'\n};\n\nexport const ConnectedBreadcrumbsTitle = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(BreadcrumbsTitle);\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { ConnectedAllDbms } from '../../containers/AllDbms/AllDbms';\nimport { ConnectedAllServers } from '../../containers/AllServers/AllServers';\nimport { ConnectedAllDatabases } from '../../containers/AllDatabases/AllDatabases';\nimport { ConnectedWorkload } from '../../containers/Workload/Workload';\nimport { ConnectedLicense } from '../../containers/License/License';\nimport { ConnectedStorage } from '../../containers/Storage/Storage';\nimport { ConnectedObjects } from '../../containers/Objects/Objects';\nimport { ConnectedSessions } from '../../containers/Sessions/Sessions';\n\nexport class ContentSwitch extends React.PureComponent {\n  render() {\n    const { activePage } = this.props;\n\n    return this.renderPage(activePage);\n  }\n\n  renderPage = activePage => {\n    switch (activePage) {\n      case 'all-dbms':\n        return <ConnectedAllDbms />;\n      case 'all-servers':\n        return <ConnectedAllServers />;\n      case 'all-databases':\n        return <ConnectedAllDatabases />;\n      case 'workload':\n        return <ConnectedWorkload />;\n      case 'license':\n        return <ConnectedLicense />;\n      case 'storage':\n        return <ConnectedStorage />;\n      case 'objects':\n        return <ConnectedObjects />;\n      case 'sessions':\n        return <ConnectedSessions />;\n      default:\n        return <></>;\n    }\n  };\n}\n\nContentSwitch.propTypes = {\n  activePage: string\n};\n\nexport default ContentSwitch;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHexagonMultipleOutline, mdiChartTimelineVariant } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nexport class AllDbms extends React.PureComponent {\n  render() {\n    const { all } = this.props;\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {all.map(dbms => (\n            <ActionCard\n              key={dbms.name}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n              }\n              label={dbms.name}\n              onClick={() => this.setPath(dbms.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: dbms.path, level: 'workload' })\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n  };\n}\n\nAllDbms.propTypes = {\n  all: array,\n  changeState: func\n};\n\nexport const ConnectedAllDbms = connect(\n  state => ({\n    all: state.explorer?.structured?.dbms || [],\n    allDbms: state.explorer.accounts\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDbms);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiChartTimelineVariant, mdiPercent } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nimport { ServerSettings } from '../Settings/ServerSettings';\n\nexport class AllServers extends React.PureComponent {\n  render() {\n    const { all, serversUsage } = this.props;\n\n    const servers = all;\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {servers.map((server, index) => (\n            <ActionCard\n              key={`${server.name}-${index}`}\n              settings={<ServerSettings server={server} />}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiDns} />\n                </SvgIcon>\n              }\n              label={server.address}\n              onClick={() => this.setPath(server.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: server.path, level: 'workload' })\n                }\n              ]}\n              readOnlyOptions={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiPercent} />\n                    </SvgIcon>\n                  ),\n                  label: 'CPU Load',\n                  fillable: true,\n                  percentage:\n                    serversUsage.find(sv => sv.address === server.address)?.usage || undefined\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n  };\n}\n\nAllServers.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllServers = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const dbms = structured.dbms.find(entry => entry.protocol === path);\n\n    return {\n      all: dbms?.servers || [],\n      allDbms: state.explorer.accounts,\n      storeState: state.explorer.state,\n      serversUsage: state.explorer.serversUsage?.servers || []\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllServers);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport { mdiSettings, mdiDns } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\n\nexport const ServerSettings = ({ server }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n\n      <Modal open={open} actions={modalActions}>\n        <EditServerContainer server={server} />\n      </Modal>\n    </>\n  );\n};\n\nexport const EditServer = ({ server, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    fetchProtocols().then(resp => {\n      if (resp.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: resp.protocols || []\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '50vh',\n        minHeight: '50vh',\n        width: '808px',\n        height: '784px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Edit Server\"\n        desc=\"Edit the server connection information\"\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <ServerForm\n            server={server}\n            protocols={state.protocols}\n            handleSubmission={reloadAccounts}\n            editing\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditServerContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditServer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiDatabase,\n  mdiCheckboxMultipleBlankOutline,\n  mdiShape,\n  mdiLicense,\n  mdiHexagonSlice2\n} from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nimport { DatabaseSettings } from '../Settings/DatabaseSettings';\n\nimport { retrieveServerEntry, getBackup, getDBStatus } from '../../store/selectors';\n\nexport class AllDatabases extends React.PureComponent {\n  render() {\n    const { databases, retrieveDbBackup, retrieveDbStatus } = this.props;\n\n    return (\n      <>\n        <Paper.Content>\n          <CardsLayout>\n            {databases.map(database => (\n              <ActionCard\n                key={database.name}\n                lastBackup={retrieveDbBackup(database)}\n                settings={<DatabaseSettings database={database} />}\n                status={retrieveDbStatus(database)}\n                icon={\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                }\n                label={database.special.database}\n                onClick={() => this.setPath(database.path)}\n                options={[\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiChartTimelineVariant} />\n                      </SvgIcon>\n                    ),\n                    label: 'Workload',\n                    onClick: () =>\n                      this.props.changeState({ path: database.path, level: 'workload' })\n                  },\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiCheckboxMultipleBlankOutline} />\n                      </SvgIcon>\n                    ),\n                    label: 'Sessions',\n                    onClick: () =>\n                      this.props.changeState({ path: database.path, level: 'sessions' })\n                  },\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiShape} />\n                      </SvgIcon>\n                    ),\n                    label: 'Objects',\n                    onClick: () => this.props.changeState({ path: database.path, level: 'objects' })\n                  },\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiHexagonSlice2} />\n                      </SvgIcon>\n                    ),\n                    label: 'Storage',\n                    onClick: () => this.props.changeState({ path: database.path, level: 'storage' })\n                  },\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiLicense} />\n                      </SvgIcon>\n                    ),\n                    label: 'License reporting',\n                    onClick: () => this.props.changeState({ path: database.path, level: 'license' })\n                  }\n                ]}\n              />\n            ))}\n          </CardsLayout>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nAllDatabases.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllDatabases = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const [protocol, address] = path.split('--');\n    const server = retrieveServerEntry({ protocol, address }, structured);\n    const backups = state.explorer.dbLastBackup;\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      databases: (server && server.databases) || [],\n      retrieveDbBackup: database => getBackup(database, backups),\n      retrieveDbStatus: database => getDBStatus(database, statuses)\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDatabases);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport { mdiSettings, mdiDatabase } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\n\nexport const DatabaseSettings = ({ database }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n\n      <Modal open={open} actions={modalActions}>\n        <EditDatabaseContainer database={database} />\n      </Modal>\n    </>\n  );\n};\n\nexport const EditDatabase = ({ database, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [], modes: [] });\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '50vh',\n        minHeight: '50vh',\n        width: '808px',\n        height: '784px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Edit Database\"\n        desc=\"Edit the server connection information\"\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <DatabaseForm\n            account={database}\n            protocols={state.protocols}\n            modes={state.modes}\n            handleSubmission={reloadAccounts}\n            editing\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditDatabaseContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditDatabase);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Overflow, Paper } from 'shared/components/layout';\nimport { Center, WorkloadGraph } from 'shared/components';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { JobResults } from 'shared/components/JobResults';\n\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\n\nimport './Workload.local.scss';\n\nexport class Workload extends React.PureComponent {\n  componentDidMount() {\n    this.getJobsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.storeState.path !== prevProps.storeState.path ||\n      this.props.globalFilters !== prevProps.globalFilters\n    ) {\n      this.getJobsData();\n    }\n  }\n\n  render() {\n    const {\n      jobs,\n      storeState: { path, level }\n    } = this.props;\n    const pageLevel = path.split('--').filter(e => e).length;\n    return (\n      <>\n        <Paper.Header>\n          {pageLevel === 3 && <NavigationTab active={level} onClick={this.changeTab} />}\n        </Paper.Header>\n        <Paper.Content>\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader>Loading jobs</Loader>\n            </Center>\n          ) : (\n            <>\n              {jobs.get('total_count') > 0 ? (\n                <>\n                  <div className=\"container\">\n                    <div className=\"graph-container\">\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                      />\n                    </div>\n                    <div className=\"jobs-container\">\n                      <Overflow>\n                        <JobResults jobs={jobs.get('content')} />\n                      </Overflow>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Center>Job list is empty</Center>\n              )}\n            </>\n          )}\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getJobsData() {\n    const {\n      storeState: { path }\n    } = this.props;\n    const levelFilters = path.split('--').filter(e => e);\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      protocol_filter: levelFilters[0],\n      shell_host_address_filter: levelFilters[1],\n      database_name_filter: levelFilters[2]\n    });\n  }\n}\n\nWorkload.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  jobs: object,\n  getJobs: func,\n  changeState: func\n};\n\nexport const ConnectedWorkload = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    jobs: jobsSelector(state)\n  }),\n  dispatch => ({\n    getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Workload);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func, array, bool } from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\n\nimport { Paper } from 'shared/components/layout';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { changeStateThunk, loadAllLicensesThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { LicenseList } from './LicenseList/LicenseList';\nimport { ConnectedReport } from './Report/Report';\n\nimport './License.local.scss';\n\nexport class License extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLicenses: [],\n      singleLicense: null,\n      page: 1 // 1 = licenses list, 2 = license report\n    };\n  }\n\n  componentDidMount() {\n    this.getLicenseData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.globalFilters !== prevProps.globalFilters) {\n      this.getLicenseData();\n    }\n  }\n\n  render() {\n    const {\n      storeState: { level },\n      licenseList,\n      isLoading\n    } = this.props;\n    const { selectedLicenses, page, singleLicense } = this.state;\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={this.changeTab} />\n        </Paper.Header>\n        {page === 1 &&\n          (isLoading ? (\n            <Paper.Content>\n              <Center>\n                <Loader>Loading reports</Loader>\n              </Center>\n            </Paper.Content>\n          ) : (\n            <>\n              <Paper.Content>\n                <LicenseList\n                  data={licenseList}\n                  selectedLicenses={selectedLicenses}\n                  setSelectedLicensesCallback={this.setSelectedLicenses}\n                  compareWithLatestCallback={this.compareWithLatest}\n                  licenseReportCallback={this.licenseReport}\n                />\n              </Paper.Content>\n              {licenseList.length > 0 && (\n                <Paper.Footer>\n                  <Button\n                    className=\"compare-btn\"\n                    disabled={selectedLicenses.length !== 2}\n                    variant=\"contained\"\n                    onClick={() => this.compareReports()}\n                    data-qa=\"compare-reports\"\n                  >\n                    Compare\n                  </Button>\n                </Paper.Footer>\n              )}\n            </>\n          ))}\n\n        {page === 2 && (\n          <>\n            <Paper.Content>\n              <ConnectedReport licenses={selectedLicenses} license={singleLicense} />\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <Button\n                  data-qa=\"back-to-licenses\"\n                  className=\"back-btn\"\n                  onClick={() => this.showLicenseList()}\n                >\n                  Back\n                </Button>\n              </Paper.Footer.Left>\n            </Paper.Footer>\n          </>\n        )}\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getLicenseData = () => {\n    const {\n      storeState: { path },\n      globalFilters\n    } = this.props;\n    const ancestors = path.split('--').filter(e => e);\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    const payload = {\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      status: 'SUCCEEDED',\n      name_filter: 'vendita.oracle.rdbms.util.monitor.licensed_feature_usage.full_report',\n      protocol_filter: ancestors[0],\n      shell_host_address_filter: ancestors[1],\n      database_name_filter: ancestors[2]\n    };\n    this.props.loadAllLicenses(payload);\n  };\n\n  setSelectedLicenses = license => {\n    const { selectedLicenses } = this.state;\n    // check if license was already selected\n    const exists = selectedLicenses.findIndex(e => e.uuid === license.uuid);\n\n    // if exists, remove it from array\n    if (exists > -1) {\n      const newSelectedLicenses = [...selectedLicenses];\n      newSelectedLicenses.splice(exists, 1);\n      this.setState({ selectedLicenses: newSelectedLicenses });\n    } else if (selectedLicenses.length < 2) {\n      // if there are less than two elements, add it\n      this.setState({ selectedLicenses: [...selectedLicenses, license] });\n    }\n  };\n\n  compareReports = () => {\n    this.setState({ page: 2, singleLicense: null });\n  };\n\n  compareWithLatest = (latestReport, selectedReport) => {\n    const comparable = [];\n    comparable.push(latestReport, selectedReport);\n    this.setState({ selectedLicenses: comparable, page: 2, singleLicense: null });\n  };\n\n  showLicenseList = () => {\n    this.setState({ page: 1, selectedLicenses: [], singleLicense: null });\n  };\n\n  licenseReport = license => {\n    this.setState({ singleLicense: license, page: 2 });\n  };\n}\n\nLicense.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  changeState: func,\n  loadAllLicenses: func,\n  licenseList: array,\n  isLoading: bool\n};\n\nexport const ConnectedLicense = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    licenseList: state.explorer.licenses,\n    isLoading: state.explorer.flags.license.loading\n  }),\n  dispatch => ({\n    loadAllLicenses: payload => dispatch(loadAllLicensesThunk(payload)),\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(License);\n","import React, { useState, useCallback } from 'react';\nimport { array, func } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiLicense, mdiFileCompare } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Center } from 'shared/components';\n\nimport './LicenseList.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LicenseList = ({\n  data,\n  selectedLicenses,\n  setSelectedLicensesCallback,\n  compareWithLatestCallback,\n  licenseReportCallback\n}) => {\n  const [hoveredLicenseUuid, setHoveredLicenseUuid] = useState(null);\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const updateHoveredLicenseUuid = licenseUuid => {\n    setHoveredLicenseUuid(licenseUuid);\n  };\n\n  const renderIcon = licenseUuid => {\n    let icon = (\n      <SvgIcon>\n        <Icon path={mdiLicense} />\n      </SvgIcon>\n    );\n\n    // license is selected\n    if (selectedLicenses.findIndex(l => l.uuid === licenseUuid) > -1) {\n      icon = <CheckIcon />;\n    } else if (hoveredLicenseUuid === licenseUuid) {\n      icon = <CheckIcon className=\"hovered-icon\" />;\n    }\n\n    return icon;\n  };\n\n  return (\n    <div\n      className={classnames('searchable-list-slot', {\n        scrolled\n      })}\n    >\n      {data.length > 0 ? (\n        <div className=\"grid\" onWheel={onWheel}>\n          {data.map((license, index) => {\n            return (\n              <div\n                data-qa={`report-${data.length - index}-details`}\n                className=\"row\"\n                key={license.uuid}\n                role=\"presentation\"\n                onMouseEnter={() => updateHoveredLicenseUuid(license.uuid)}\n                onMouseLeave={() => updateHoveredLicenseUuid(null)}\n                onClick={() => licenseReportCallback(license)}\n              >\n                <div className=\"column\">\n                  <div\n                    data-qa={`toggle-selected-report-${data.length - index}`}\n                    className={`icon-container ${\n                      selectedLicenses.findIndex(l => l.uuid === license.uuid) > -1\n                        ? 'selected'\n                        : ''\n                    }${hoveredLicenseUuid === license.uuid ? ' hovered' : ''}`}\n                    onClick={event => {\n                      event.stopPropagation();\n                      setSelectedLicensesCallback(license);\n                    }}\n                    role=\"presentation\"\n                  >\n                    {renderIcon(license.uuid)}\n                  </div>\n                </div>\n                <div className=\"column name\">\n                  {`License feature usage report ${data.length - index}`}\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Date:</div>\n                    <div className=\"value\">{moment(license.date_invoke).format('D.MM.YYYY')}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Ran at:</div>\n                    <div className=\"value\">{moment(license.date_invoke).format('HH:mm:ss')}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Ran by:</div>\n                    <div className=\"value\">{license.user_owner}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  {index > 0 && selectedLicenses.length === 0 && (\n                    <div\n                      data-qa={`compare-report${data.length - index}-to-latest`}\n                      className=\"icon\"\n                      onClick={event => {\n                        event.stopPropagation();\n                        compareWithLatestCallback(data[0], license);\n                      }}\n                      role=\"presentation\"\n                    >\n                      <LightTooltip placement=\"bottom\" title=\"Compare to latest\">\n                        <SvgIcon>\n                          <Icon path={mdiFileCompare} />\n                        </SvgIcon>\n                      </LightTooltip>\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <Center>Currently there are no license reporting available.</Center>\n      )}\n    </div>\n  );\n};\n\nLicenseList.propTypes = {\n  data: array,\n  selectedLicenses: array,\n  setSelectedLicensesCallback: func,\n  compareWithLatestCallback: func,\n  licenseReportCallback: func\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, func, array, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { getLicenseReportThunk } from '../../../store/thunks';\nimport { FeaturesStatus } from '../../../components/LicenseReporting/FeaturesStatus/FeaturesStatus';\nimport { FeaturesUsage } from '../../../components/LicenseReporting/FeaturesUsage/FeaturesUsage';\nimport { UnusedFeatures } from '../../../components/LicenseReporting/UnusedFeatures/UnusedFeatures';\n\nimport './Report.local.scss';\n\nexport class Report extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolled: false\n    };\n  }\n\n  async componentDidMount() {\n    const { license, getLicenseReport, licenses } = this.props;\n    if (license) {\n      await getLicenseReport(license);\n    } else {\n      await Promise.all([getLicenseReport(licenses[0]), getLicenseReport(licenses[1])]);\n    }\n  }\n\n  render() {\n    const { scrolled } = this.state;\n    const { isLoading, reportOne, reportTwo } = this.props;\n    return isLoading ? (\n      <Center>\n        <Loader>Loading report details</Loader>\n      </Center>\n    ) : (\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled\n        })}\n      >\n        <div className=\"container\" onWheel={event => this.onWheel(event)}>\n          <FeaturesStatus reportOne={reportOne} reportTwo={reportTwo} />\n          <FeaturesUsage reportOne={reportOne} reportTwo={reportTwo} />\n          <UnusedFeatures reportOne={reportOne} reportTwo={reportTwo} />\n        </div>\n      </div>\n    );\n  }\n\n  onWheel = event => {\n    if (event.currentTarget.scrollTop) {\n      if (!this.state.scrolled) {\n        this.setState({ scrolled: true });\n      }\n    } else if (this.state.scrolled) {\n      this.setState({ scrolled: false });\n    }\n\n    scroller(event);\n  };\n}\n\nReport.propTypes = {\n  getLicenseReport: func,\n  isLoading: bool,\n  license: object,\n  licenses: array,\n  reportOne: object,\n  reportTwo: object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let reportOne;\n  let reportTwo;\n  if (ownProps.license) {\n    // need to display details for only one report so get its details from the store\n    if (state.explorer.reports && state.explorer.reports[ownProps.license.uuid]) {\n      reportOne = state.explorer.reports[ownProps.license.uuid];\n    }\n  } else if (\n    // we have two reports to compare\n\n    state.explorer.reports &&\n    state.explorer.reports[ownProps.licenses[0].uuid] &&\n    state.explorer.reports[ownProps.licenses[1].uuid]\n  ) {\n    if (ownProps.licenses[0].date_invoke > ownProps.licenses[1].date_invoke) {\n      reportOne = state.explorer.reports[ownProps.licenses[1].uuid];\n      reportTwo = state.explorer.reports[ownProps.licenses[0].uuid];\n    } else {\n      reportOne = state.explorer.reports[ownProps.licenses[0].uuid];\n      reportTwo = state.explorer.reports[ownProps.licenses[1].uuid];\n    }\n  }\n\n  return {\n    isLoading: state.explorer.flags.reports.loading,\n    reportOne,\n    reportTwo\n  };\n};\n\nexport const ConnectedReport = connect(mapStateToProps, dispatch => ({\n  getLicenseReport: license => dispatch(getLicenseReportThunk(license))\n}))(Report);\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { object, node, any } from 'prop-types';\nimport moment from 'moment';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheckboxMarkedCircle, mdiCloseCircle } from '@mdi/js';\n\nimport './FeaturesStatus.local.scss';\n\nexport class FeaturesStatus extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0\n    };\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"features-status-container\">\n        <header>\n          <h1>License Features Status</h1>\n        </header>\n\n        {!reportTwo && <div className=\"feature-status\">{this.renderSingleReport()}</div>}\n        {reportTwo && <div className=\"feature-status\">{this.renderComparableReports()}</div>}\n      </div>\n    );\n  }\n\n  setSelectedIndex = (event, newIndex) => {\n    this.setState({ selectedIndex: newIndex });\n  };\n\n  renderSingleReport = () => {\n    const columns = Object.entries(this.props.reportOne.FEATURES);\n\n    return (\n      <>\n        <div className=\"feature-name\">\n          <Tabs\n            orientation=\"vertical\"\n            value={this.state.selectedIndex}\n            onChange={(event, newIndex) => this.setSelectedIndex(event, newIndex)}\n          >\n            {columns.map((column, index) => (\n              <Tab key={column[0]} label={column[0]} data-qa={`feature-column-${index}`} />\n            ))}\n          </Tabs>\n        </div>\n        <div className=\"feature-details\">\n          <header className=\"row header\">\n            <div className=\"feature\">Feature</div>\n            <div className=\"status-container\">\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportOne.date_invoke).format('D MMM YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportOne.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n            </div>\n          </header>\n          {columns.map((column, index) => {\n            const values = Object.keys(column[1]);\n            return (\n              <TabPanel key={index} value={this.state.selectedIndex} index={index}>\n                {values.map((value, valIndex) => {\n                  return (\n                    <div key={`${index}-${valIndex}`} className=\"row\">\n                      <div className=\"feature-name\">{values[valIndex]}</div>\n                      <div className=\"status-container\">\n                        {column[1][value].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </TabPanel>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n\n  renderComparableReports = () => {\n    const comparableFeatures = {};\n    const { reportOne, reportTwo } = this.props;\n    if (reportOne.FEATURES && reportTwo && reportTwo.FEATURES) {\n      const reportOneEntries = Object.entries(reportTwo.FEATURES);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        const options = Object.keys(feature[1]);\n\n        options.map((value, index) => {\n          comparableFeatures[feature[0]][options[index]] = [\n            feature[1][value].toString() === 'true' ? 'true' : 'false'\n          ];\n          comparableFeatures[feature[0]][options[index]][1] = 'false';\n\n          return null;\n        });\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportOne.FEATURES);\n      reportTwoEntries.map(feature => {\n        const options = Object.keys(feature[1]);\n\n        if (feature[0] in comparableFeatures) {\n          options.map((value, index) => {\n            comparableFeatures[feature[0]][options[index]][1] =\n              feature[1][value].toString() === 'true' ? 'true' : 'false';\n            return null;\n          });\n        } else {\n          // current featured category was not present in previous report so we add it\n          comparableFeatures[feature[0]] = {};\n\n          options.map((value, index) => {\n            // add it as false for the previous report\n            comparableFeatures[feature[0]][options[index]] = ['false'];\n            // add it with current value for the current report\n            comparableFeatures[feature[0]][options[index]][1] =\n              feature[1][value].toString() === 'true' ? 'true' : 'false';\n\n            return null;\n          });\n        }\n        return null;\n      });\n    }\n\n    const columns = Object.entries(comparableFeatures);\n\n    return (\n      <>\n        <div className=\"feature-name\">\n          <Tabs\n            orientation=\"vertical\"\n            value={this.state.selectedIndex}\n            onChange={(event, newIndex) => this.setSelectedIndex(event, newIndex)}\n          >\n            {columns.map((column, index) => (\n              <Tab key={column[0]} label={column[0]} data-qa={`feature-column-${index}`} />\n            ))}\n          </Tabs>\n        </div>\n\n        <div className=\"feature-details\">\n          <header className=\"row header\">\n            <div className=\"feature\">Feature</div>\n            <div className=\"status-container compare\">\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportOne.date_invoke).format('D MMM YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportOne.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportTwo.date_invoke).format('D MMM YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportTwo.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n            </div>\n          </header>\n\n          {columns.map((column, index) => {\n            const values = Object.keys(column[1]);\n            return (\n              <TabPanel key={index} value={this.state.selectedIndex} index={index}>\n                {values.map((value, valIndex) => {\n                  return (\n                    <div key={`${index}-${valIndex}`} className=\"row\">\n                      <div className=\"feature-name\">{values[valIndex]}</div>\n                      <div className=\"status-container compare\">\n                        {column[1][value][0].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                        {column[1][value][1].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </TabPanel>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n}\n\nFeaturesStatus.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesStatus;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: node,\n  index: any.isRequired,\n  value: any.isRequired\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './FeaturesUsage.local.scss';\n\nexport class FeaturesUsage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n    return (\n      <div className=\"features-usage-container\">\n        <header>\n          <h1>License Features Usage</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne.USED);\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          <div className=\"value single\">{feature[1].USAGES}</div>\n          <div className=\"label\">{feature[0]}</div>\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const comparableFeatures = {};\n    if (reportOne.USED && reportOne && reportOne.USED) {\n      const reportOneEntries = Object.entries(reportOne.USED);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        comparableFeatures[feature[0]].usage = [parseInt(feature[1].USAGES, 10)];\n        comparableFeatures[feature[0]].usage[1] = 0;\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportTwo.USED);\n\n      reportTwoEntries.map(feature => {\n        if (feature[0] in comparableFeatures) {\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        } else {\n          comparableFeatures[feature[0]] = {};\n          comparableFeatures[feature[0]].usage = [0];\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        }\n\n        return null;\n      });\n    }\n\n    const features = Object.entries(comparableFeatures);\n    return features.map(feature => {\n      return (\n        <LightTooltip\n          key={feature[0]}\n          placement=\"top\"\n          title={\n            <>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportOne.date_invoke).format('D MMM YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[0]}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportTwo.date_invoke).format('D MMM YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[1]}</div>\n              </div>\n            </>\n          }\n        >\n          <div className=\"feature\">\n            {this.getFeatureValue(\n              comparableFeatures[feature[0]].usage[0],\n              comparableFeatures[feature[0]].usage[1]\n            )}\n            <div className=\"label\">{feature[0]}</div>\n          </div>\n        </LightTooltip>\n      );\n    });\n  };\n\n  getFeatureValue = (rep1, rep2) => {\n    let valueNode = <div className=\"value lower\">{rep1 - rep2}</div>;\n\n    if (rep1 === rep2) {\n      valueNode = <div className=\"value equal\">=</div>;\n    } else if (rep2 > rep1) {\n      valueNode = <div className=\"value higher\">{rep2 - rep1}</div>;\n    }\n\n    return valueNode;\n  };\n}\n\nFeaturesUsage.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesUsage;\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n\n    '& .row': {\n      display: 'flex',\n\n      '& .value': {\n        paddingLeft: '15px',\n        marginLeft: 'auto',\n        fontWeight: '600'\n      }\n    }\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\n\nimport './UnusedFeatures.local.scss';\n\nexport class UnusedFeatures extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"unused-features-container\">\n        <header>\n          <h1>Unused features</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne.UNUSED);\n\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          {feature[0]}\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const features = Object.keys(reportTwo.UNUSED);\n\n    const comparableFeatures = features.filter(feature => {\n      return reportOne.UNUSED[feature] !== undefined;\n    });\n\n    return comparableFeatures.map(feature => {\n      return (\n        <div key={feature} className=\"feature\">\n          {feature}\n        </div>\n      );\n    });\n  };\n}\n\nUnusedFeatures.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default UnusedFeatures;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, loadStoragePointsThunk, setStorageItemThunk, loadStorageDetailsThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport { getFullPath, getFormattedStorage, getStorageDetailsData } from '../../store/selectors';\n\nconst Storage = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getStoragePoints,\n  getStorageDetails,\n  storagePoints,\n  storageDetails,\n  selectedItem,\n  setStorageItem,\n  loadingFlags\n}) => {\n  const dbName = path.split('--')[2];\n\n  useEffect(() => {\n    getStoragePoints({\n      fullPath\n    });\n  }, [fullPath]);\n\n  useEffect(() => {\n    if (selectedItem) {\n      getStorageDetails({\n        selectedItem,\n        fullPath\n      });\n    }\n  }, [selectedItem]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          data={storageDetails}\n          list={storagePoints}\n          selectedItem={selectedItem}\n          setItem={setStorageItem}\n          dbName={dbName}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nStorage.propTypes = {\n  storeState: PropTypes.object,\n  storagePoints: PropTypes.array,\n  storageDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setStorageItem: PropTypes.func,\n  selectedItem: PropTypes.string,\n  getStoragePoints: PropTypes.func\n};\n\nexport const ConnectedStorage = connect(\n  state => ({\n    storeState: state.explorer.state,\n    storagePoints: getFormattedStorage(state),\n    selectedItem: state.explorer.storage.selected,\n    loadingFlags: state.explorer.flags.storage,\n    storageDetails: getStorageDetailsData(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setStorageItem: path => dispatch(setStorageItemThunk(path)),\n    getStorageDetails: filters => dispatch(loadStorageDetailsThunk(filters)),\n    getStoragePoints: filters => dispatch(loadStoragePointsThunk(filters))\n  })\n)(Storage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, setSelectedObjectThunk, loadObjectsThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport { getFullPath, getStructuredObjects, getSelectedObjectData, getInvalidObjects } from '../../store/selectors';\n\nconst Objects = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getObjects,\n  objectsData,\n  invalidObjects,\n  objectDetails,\n  selectedItem,\n  setObjectsItem,\n  loadingFlags\n}) => {\n  const dbName = path.split('--')[2];\n\n  useEffect(() => {\n    getObjects({\n      fullPath\n    });\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          invalidObjects={invalidObjects}\n          data={objectDetails}\n          list={objectsData}\n          selectedItem={selectedItem}\n          setItem={setObjectsItem}\n          dbName={dbName}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nObjects.propTypes = {\n  storeState: PropTypes.object,\n  objectsData: PropTypes.array,\n  objectDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setObjectsItem: PropTypes.func,\n  selectedItem: PropTypes.object,\n  getObjects: PropTypes.func\n};\n\nexport const ConnectedObjects = connect(\n  state => ({\n    storeState: state.explorer.state,\n    objectsData: getStructuredObjects(state),\n    selectedItem: {\n      owner: state.explorer.objects.selectedOwner,\n      object: state.explorer.objects.selectedObject\n    },\n    loadingFlags: state.explorer.flags.objects,\n    objectDetails: getSelectedObjectData(state),\n    invalidObjects: getInvalidObjects(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setObjectsItem: object => dispatch(setSelectedObjectThunk(object)),\n    getObjects: filters => dispatch(loadObjectsThunk(filters))\n  })\n)(Objects);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeStateThunk, loadSessionsThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { Table, LightTooltip, Center } from 'shared/components';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { Button } from 'shared/components/controls';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import SvgIcon from '@material-ui/core/SvgIcon';\n// import Icon from '@mdi/react';\n// import { mdiViewCompact } from '@mdi/js';\nimport { getFullPath, getSortedSessions } from '../../store/selectors';\n\nimport './Sessions.local.scss';\n\nconst columns = [\n  { label: 'Serial #' },\n  { label: 'Username' },\n  { label: 'Status' },\n  { label: 'Machine' },\n  { label: 'SID' },\n  { label: 'Logon time', sortKey: 'LOGON_TIME' },\n  { label: 'Program' },\n  { label: 'Type' }\n  // { label: '' } -> disabled view details button for now...\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">\n          {name}\n        </span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell><CellWithTooltip name={row['SERIAL#']} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.USERNAME} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.STATUS} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.MACHINE} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.SID} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.LOGON_TIME} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.PROGRAM} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.TYPE} /></Table.Cell>\n    { /* <Table.Cell padding=\"none\" className=\"view-details\">\n      <LightTooltip placement=\"bottom\" title={<span>View Details</span>}>\n        <SvgIcon>\n          <Icon path={mdiViewCompact} />\n        </SvgIcon>\n      </LightTooltip>\n    </Table.Cell> */ }\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return (\n      <Center>\n        { noDataMessage }\n      </Center>\n    );\n  }\n  return (\n    <Table {...tableProps}>\n      { sessions.map(rowRenderer) }\n    </Table>\n  );\n};\n\nexport const Sessions = (props) => {\n  const {\n    level,\n    sessions,\n    isLoading,\n    getSessions,\n    fullPath,\n    changeTab\n  } = props;\n\n  const [sortBehavior, setSortBehavior] = useState({ sortKey: 'LOGON_TIME', order: 'asc' });\n  const changeSort = (sortKey, order) => () => setSortBehavior({ sortKey, order });\n  const getSessionsData = () => {\n    getSessions({\n      sort: sortBehavior,\n      fullPath,\n      page_size: 2147483645\n    });\n  };\n  const tableProps = { changeSort, columns, sortBehavior };\n\n  useEffect(getSessionsData, [sortBehavior]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} />\n      </Paper.Header>\n      <Paper.Content>\n        <TableRenderer isLoading={isLoading} sessions={sessions} tableProps={tableProps} noDataMessage=\"No Sessions Available\" />\n      </Paper.Content>\n      <Paper.Footer>\n        <Button className=\"qa-refresh-btn align-right\" onClick={getSessionsData}>\n          <FormattedMessage id=\"general.refresh\" />\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nSessions.propTypes = {\n  level: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  fullPath: PropTypes.string.isRequired,\n  changeTab: PropTypes.func\n};\n\nexport const ConnectedSessions = connect(\n  state => ({\n    sessions: getSortedSessions(state),\n    level: state.explorer.state.level,\n    isLoading: state.explorer.flags.sessions.loading,\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getSessions: filters => dispatch(loadSessionsThunk(filters))\n  })\n)(Sessions);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDns } from '@mdi/js';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { fetchProtocols } from 'shared/api/protocols';\n\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport './AddServerCard.local.scss';\n\nexport const AddServerCard = () => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"action-btn\" startIcon={<AddIcon />} onClick={modalActions.open}>\n        Add New Server\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <AddNewServerContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewServer = ({ server = { protocol: 'SSH' }, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    fetchProtocols().then(resp => {\n      setState({\n        loading: false,\n        result: resp.result,\n        protocols: resp.protocols || []\n      });\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '50vh',\n        minHeight: '50vh',\n        width: '808px',\n        height: '784px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Add New Server\"\n        desc=\"Input the server connection information\"\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading protocols list</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <ServerForm\n                server={server}\n                handleSubmission={reloadAccounts}\n                protocols={state.protocols}\n                isNew\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Paper.Content>\n                <Result>\n                  <Result.Text>Could not load protocols list.</Result.Text>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button color=\"primary\" onClick={actions.close}>\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewServerContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewServer);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDatabase } from '@mdi/js';\n\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport './AddDatabaseCard.local.scss';\n\nexport const AddDatabaseCard = () => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"action-btn\" startIcon={<AddIcon />} onClick={modalActions.open}>\n        Add New DB\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <AddNewDatabaseContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewDatabase = ({ account, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '50vh',\n        minHeight: '50vh',\n        width: '808px',\n        height: '784px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Add New Database\"\n        desc=\"Input the server connection information\"\n      />\n\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading Required Protocols and Privilege Modes</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <DatabaseForm\n                protocols={state.protocols}\n                modes={state.modes}\n                account={account}\n                handleSubmission={reloadAccounts}\n                isNew\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Center>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load required protocols or privilege modes list.\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer></Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewDatabaseContainer = connect(\n  state => () => {\n    const path = state.explorer.state.path.split('--');\n    return {\n      account: {\n        protocol: path[0],\n        address: path[1]\n      }\n    };\n  },\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewDatabase);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postCompile() {\n  return RestClient.post('/compile');\n}\n","module.exports = __webpack_public_path__ + \"svgs/6842f8a8cfcb1999b9a1e64174e25a11.svg\";","module.exports = __webpack_public_path__ + \"svgs/727bf5a83867f2c49ff66ab6df50ae78.svg\";","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport './job-process.local.scss';\n\nimport { getInvocation } from './store/selectors';\nimport { invocationPoller } from './store/tasks';\nimport { AllowOutputFor } from './store/constants';\n\nimport JobForm from './job-form';\n\nimport { JobOutput } from './containers/output/output';\nimport { JobStatus } from './components/JobStatus/JobStatus';\n\nexport const JobView = ({ invocation, redirected }) => {\n  const [tab, setTab] = useState('details');\n\n  useEffect(() => {\n    invocationPoller.start();\n\n    return function stopPolling() {\n      invocationPoller.stop();\n    };\n  }, [invocation.status]);\n\n  if (!invocation || invocation.status === 'NOT_FETCHED') {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Fetching invocation</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <ViewTabs invocation={invocation} active={tab} changeTab={setTab} />\n        <JobStatus />\n      </Paper.Header>\n      <Switch value={tab}>\n        <Switch.Case value=\"details\">\n          <JobForm redirected={redirected} />\n        </Switch.Case>\n        <Switch.Case value=\"output\">\n          <JobOutput />\n        </Switch.Case>\n      </Switch>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    invocation: getInvocation(state)\n  };\n}, {})(JobView);\n\nfunction ViewTabs({ active, changeTab, invocation }) {\n  const withOutput = AllowOutputFor.includes(invocation.status);\n\n  const tabs = [\n    { label: 'Job Details', value: 'details', active: true },\n    { label: 'Output', value: 'output', disabled: !withOutput }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { isEmpty, pickBy } from 'lodash';\n\nimport moment from 'moment';\n\nimport { Switch } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { Notifications } from './containers/notifications/notifications';\n\nimport { Formik, Form } from 'formik';\n\nimport { Text, Date, Time } from 'shared/components/form/editors/Generic';\nimport { PlatformSelect, ProcessSelect } from 'shared/components/form/editors/Custom';\n\nimport { Button } from 'shared/components/controls';\n\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nimport './job-process.local.scss';\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { getCurrentUserName } from '../session/store/selectors';\n\nimport { getInvocation } from './store/selectors';\nimport { AllowGeneralEditingFor, InvocationStatus } from './store/constants';\n\nimport { postInvocation } from 'shared/api/invocation';\n\nimport { ProcessParameters } from './job-parameters';\n\nimport { Schedule } from 'jobs/containers/Schedule/Schedule';\n\nconst JobForm = ({ loggedInAs, invocation, redirected }) => {\n  const history = useHistory();\n\n  const [editable, setEditable] = useState(AllowGeneralEditingFor.includes(invocation.status));\n\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const { initialValues, disabledFields } = deriveFormState(invocation, editable);\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(true);\n          handleJobCreation(values, monitor).then(({ result, invocations }) => {\n            if (result === 'success') {\n              const { uuid } = invocations[0];\n\n              history.push(`/jobs/job?invocation=${uuid}`);\n            }\n          });\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Column xs={3}>\n                          <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            disabled={disabledFields.platform || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={9}>\n                          <ProcessSelect\n                            name=\"process\"\n                            label=\"Process\"\n                            value={invocation.process}\n                            required\n                            disabled={disabledFields.process || !editable || redirected}\n                          />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column xs={3}>\n                          <Date name=\"date_invoke\" label=\"Date\" disabled={!editable} />\n                        </Column>\n                        <Column xs={3}>\n                          <Time name=\"time_invoke\" label=\"Hour\" disabled={!editable} />\n                        </Column>\n                        <Column xs={3}>\n                          <Text name=\"job_user\" label=\"User\" required disabled value={loggedInAs} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation.parameters} editable={editable} />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row spacing={3}>\n                        <Column xs={12}>\n                          <Notifications\n                            name=\"notifications\"\n                            key={invocation.uuid}\n                            disabled={!editable}\n                            recievedData={derivedMonitor}\n                            onApply={n_state => {\n                              if (n_state.events === 0 || isEmpty(n_state.users)) {\n                                setMonitor({\n                                  enabled: false\n                                });\n                              }\n                              setMonitor({\n                                enabled: true,\n                                ...n_state\n                              });\n                            }}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button to=\"/jobs\" color=\"primary\">\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <FormVerbs\n                    status={invocation.status}\n                    editable={editable}\n                    setEditable={setEditable}\n                    monitor={monitor}\n                    invocation={invocation}\n                  />\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    loggedInAs: getCurrentUserName(state),\n    invocation: getInvocation(state)\n  };\n}, {})(JobForm);\n\n/* eslint-disable no-unused-vars */\nfunction FormVerbs({ status, editable, setEditable, monitor, invocation }) {\n  const makeEditable = () => setEditable(true);\n\n  return (\n    <Switch value={editable}>\n      <Switch.Case value>\n        <SubmitButton>{monitor.enabled ? 'Monitor' : 'Run'}</SubmitButton>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Schedule invocation={invocation} />\n          <Button onClick={makeEditable}>Edit</Button>\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n}\n\nfunction handleJobCreation(values, monitor) {\n  const {\n    process,\n    platform,\n    date_invoke,\n    time_invoke,\n    job_user,\n    ...params_with_maybe_replvars\n  } = values;\n  const sendable = {};\n\n  const { parameters, replvars } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value) {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (date_invoke) {\n    const dateMoment = moment(date_invoke, 'MM/DD/YYYY');\n\n    const timeMoment = time_invoke ? moment(time_invoke, 'hh:mm') : moment();\n\n    dateMoment.hour(timeMoment.hour);\n    dateMoment.minute(timeMoment.minute);\n\n    sendable.timestamp = dateMoment.format('YYYY-MM-DDTHH:mm:ss');\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    sendable.process = 'mas.sys.invocation.notify.create';\n\n    sendable.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      when: sendable.timestamp,\n      events: monitor.events,\n      users: monitor.users\n    };\n\n    sendable.timestamp = null;\n  } else {\n    sendable.process = process;\n\n    sendable.parameters = pickBy(parameters, rejector);\n  }\n\n  return postInvocation(sendable);\n}\n\nfunction deriveFormState(invocation) {\n  const values = {\n    process: invocation.process,\n    parameters: { ...invocation.parameters }\n  };\n  const disabledFields = {\n    ...(invocation.status !== InvocationStatus.NEW && {\n      platform: true,\n      process: true,\n      user: true,\n      parameters: true\n    })\n  };\n\n  return { initialValues: values, disabledFields };\n}\n\nfunction extractReplVars(values) {\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else {\n          if (field_name === 'deflt') {\n            extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n          } else {\n            extracted.replvars.push({ [field_name]: values[key] });\n          }\n        }\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], parameters: {} }\n  );\n\n  return { parameters: { ...result.parameters, replvars: cleanUpReplVars(result.replvars) } };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n","import { createSelector } from 'reselect';\n\n//\nexport const getCurrentUserName = createSelector(\n  state => state.session,\n  session => {\n    /** ImmutableJs object :( */\n    return session.get('currentUser').get('name');\n  }\n);\n","import React from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { Paper } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { Center } from 'shared/components';\nimport './output.scss';\nimport { useSelector } from 'react-redux';\nimport { getInvocation } from '../../store/selectors';\nimport { InvocationStatus } from '../../store/constants';\n\nimport { ListOutput } from '../../components/ListOutput/ListOutput';\n\nimport { fetchInvocationOutput } from 'shared/api/invocation';\n\nimport { sendToEmail } from 'license-collection/utils/sendToEmail';\nimport { copyToClipboard } from 'license-collection/utils/copyToClipboard';\n\nfunction noOutput(invocation = {}) {\n  return [\n    {\n      data: {\n        text: 'No output to display.\\n'\n      }\n    },\n    {\n      data: {\n        text: `Status: ${invocation.status}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Process: ${invocation.process}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Invocation: ${invocation.uuid}\\n`\n      }\n    }\n  ];\n}\n\nexport const JobOutput = () => {\n  const invocation = useSelector(getInvocation);\n\n  const [loading, setLoading] = React.useState(true);\n  const [output, setOutput] = React.useState(noOutput(invocation));\n\n  React.useEffect(() => {\n    fetchInvocationOutput(invocation.uuid)\n      .then(({ data }) => {\n        const recieved = data.data.outputs;\n\n        if (recieved && recieved.length) {\n          setOutput(recieved);\n        } else {\n          setOutput(noOutput(invocation));\n        }\n\n        setLoading(false);\n      })\n      .catch(() => {\n        setOutput(noOutput(invocation));\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const outputType = invocation.status === InvocationStatus.FAILED ? 'fail' : 'normal';\n\n  const monitoring = output?.[0]?.data?.text?.match?.(\n    /{\"process\": {\"uuid\": \"([0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12})\",/\n  )?.[1];\n\n  console.log(monitoring); // eslint-disable-line\n\n  return (\n    <>\n      <Paper.Content scrollable>\n        <ListOutput\n          type={outputType}\n          output={output}\n          errors={invocation.errors}\n          monitoring={monitoring}\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"primary\"\n            onClick={() => sendToEmail(invocation, output, invocation.process)}\n          >\n            Send to email\n          </Button>\n          <Button color=\"primary\" onClick={() => copyToClipboard(output, invocation)}>\n            Copy to clipboard\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n    </>\n  );\n};\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors, monitoring }) => {\n  let content;\n\n  if (monitoring) {\n    return (\n      <div className=\"list\">\n        <h3>Monitor</h3>\n        <p>Invocation id: {monitoring}</p>\n        <Button to={`/jobs/job?invocation=${monitoring}`} color=\"primary\">\n          Go to Monitored Invocation\n        </Button>\n      </div>\n    );\n  }\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occured:</p>\n        <div className=\"list error\">\n          <code>\n            <pre>{errors.join('\\n')}</pre>\n          </code>\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              <code>\n                <pre>{output.map(row => row.data.text).join('')}</pre>\n              </code>\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        <code>\n          <pre>{output.map(row => row.data.text).join('')}</pre>\n        </code>\n      </div>\n    );\n  }\n\n  return content;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { want } from 'shared/lib/want';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiTimelineClock,\n  mdiCancel,\n  mdiAlertRhombusOutline,\n  mdiStopCircleOutline\n} from '@mdi/js';\n\nimport { getInvocationStatus } from '../../store/selectors';\nimport {\n  InvocationStatus,\n  CannotShowStatusFor,\n  FAILURES,\n  SUCESSES,\n  WARNINGS\n} from '../../store/constants';\n\nimport './JobStatus.local.scss';\n\nexport const JobStatus = () => {\n  const STATUS = useSelector(getInvocationStatus);\n  const ignore = CannotShowStatusFor.includes(STATUS);\n\n  if (ignore) {\n    return null;\n  }\n\n  return (\n    <div className=\"status-label\" style={{ background: wantStatusColor(STATUS) }}>\n      <SvgIcon fontSize=\"inherit\" color=\"inherit\">\n        <path d={wantStatusIcon(STATUS)} />\n      </SvgIcon>\n      <span className=\"status-label-text\">{STATUS}</span>\n    </div>\n  );\n};\n\nconst wantStatusIcon = want(\n  {\n    [InvocationStatus.EXECUTING]: mdiProgressClock,\n    [InvocationStatus.SUCCEEDED]: mdiCheckCircleOutline,\n    [InvocationStatus.DELAYED]: mdiTimelineClock,\n    [InvocationStatus.SCHEDULED]: mdiCalendarArrowRight,\n    [InvocationStatus.KILLED]: mdiCancel,\n    [InvocationStatus.FAILED]: mdiAlertRhombusOutline,\n    [InvocationStatus.ABORTED]: mdiStopCircleOutline\n  },\n  '',\n  status => status\n);\n\nconst wantStatusColor = want(\n  {\n    fail: '#ED3A4A',\n    warning: '#F1BD5C',\n    success: '#34CC88'\n  },\n  '#3765AF', // progress blue color for unresolved statuses\n  status => {\n    if (FAILURES.includes(status)) {\n      return 'fail';\n    }\n\n    if (SUCESSES.includes(status)) {\n      return 'success';\n    }\n\n    if (WARNINGS.includes(status)) {\n      return 'warning';\n    }\n  }\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { debounce } from 'lodash';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Header } from 'core/components/Header';\nimport { AddFilter } from 'dashboard/components/add-filter/add-filter';\n\nimport { SearchInput, Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper, Overflow } from 'shared/components/layout';\nimport { JobResults } from 'shared/components/JobResults';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector } from 'shared/store/state';\n\nimport './JobsSearchResults.local.scss';\n\nexport class JobsSearchResults extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: '',\n      selectedFilter: null\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    this.getSearchResults(searchedTerm);\n  }, 500);\n\n  componentDidMount() {\n    const query = this.props.location.search.substring(1);\n    const params = query.split('&');\n    const searchTerm = params[0].split('=')[1];\n    let selectedFilter = null;\n    if (params[1]) {\n      selectedFilter = {\n        type: params[1].split('=')[0],\n        value: params[1].split('=')[1]\n      };\n    }\n    this.setState({ searchTerm, selectedFilter }, () => {\n      this.getSearchResults(searchTerm);\n    });\n  }\n\n  render() {\n    const { getSearchedJobs } = this.props;\n    return (\n      <>\n        <Header>\n          <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n            <div>Jobs</div>\n            <div>Search-results</div>\n          </Breadcrumbs>\n        </Header>\n\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <div className=\"search-area\">\n                <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n                <AddFilter\n                  filters={this.state.selectedFilter}\n                  updateFilters={this.updateSelectedFilter}\n                />\n              </div>\n            </Paper.Header>\n            {getSearchedJobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <Paper.Content>\n                <Overflow>\n                  <div className=\"content-area\">\n                    <JobResults jobs={this.props.getSearchedJobs.get('content')} />\n                  </div>\n                </Overflow>\n              </Paper.Content>\n            )}\n          </Paper>\n        </Main>\n      </>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: 2147483645,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    if (this.state.selectedFilter) {\n      switch (this.state.selectedFilter.type) {\n        case 'user':\n          QSP.owner = this.state.selectedFilter.value;\n          break;\n        case 'status':\n          QSP.status = this.state.selectedFilter.value.toUpperCase();\n          break;\n        case 'day':\n          QSP.date_invoke = moment(this.state.selectedFilter.value).format('YYYY-MM-DD');\n          QSP.period = 1;\n          break;\n        default:\n          break;\n      }\n    }\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length === 3) {\n      this.getSearchResults(searchedTerm);\n    } else {\n      this.apiSearchWithDebounce(searchedTerm);\n    }\n  };\n\n  updateSelectedFilter = filter => {\n    this.setState({ selectedFilter: filter }, () => {\n      this.getSearchResults(this.state.searchTerm);\n    });\n  };\n}\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data))\n});\n\nexport const ConnectedJobsSearchResults = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobsSearchResults);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Center, Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { Header } from 'core/components/Header/Header';\n// import { RefreshDashboard } from './components/RefreshDashboard/RefreshDashboard';\n// import { ToggleDashboard } from './components/ToggleDashboard/ToggleDashboard';\nimport { PhysicalDashboard } from './components/PhysicalDashboard/PhysicalDashboard';\nimport { VirtualDashboard } from './components/VirtualDashboard/VirtualDashboard';\nimport { NoData } from './components/NoData/NoData';\nimport { ConnectedToggleSelection } from './containers/ToggleSelection/ToggleSelection';\n\nimport { loadExecutiveDashboardThunk } from './store/thunks';\n\nimport './ExecutiveDashboard.local.scss';\n\nfunction ExecutiveDashboard({\n  isLoading,\n  callFailed,\n  selected,\n  rawEntries,\n  getExecutiveDashboard\n}) {\n  const [dashboardType, setDashboardType] = useState('physical');\n  // const [isRefreshNeeded, setIsRefreshNeeded] = useState(false); // will update based on the new API that will be provide by the BE\n  useEffect(() => {\n    // do the new API provided by the BE\n    // set isRefreshNeeded value based on result\n\n    // if we have no data in store, do the call, else new data will be added on demand -> refresh button\n    // if (rawEntries.length === 0) {\n    getExecutiveDashboard();\n    // }\n  }, []);\n\n  // function refreshDashboard() {\n  //   getExecutiveDashboard();\n  // }\n\n  // function changeDashboard(type) {\n  //   setDashboardType(type);\n  // }\n\n  return (\n    <>\n      <Header title=\"Executive Dashboard\">\n        {!isLoading && !callFailed && (\n          <div className=\"header-actions-container\">\n            {dashboardType === 'physical' && <ConnectedToggleSelection />}\n            {/* <RefreshDashboard active={isRefreshNeeded} onClickCallback={refreshDashboard} /> */}\n            {/* <div className=\"separator\" /> */}\n            {/* <ToggleDashboard active={dashboardType} onClickCallback={changeDashboard} /> */}\n          </div>\n        )}\n      </Header>\n      <Main>\n        <Switch value={isLoading}>\n          <Switch.Case value>\n            <Center>\n              <Loader>Loading Executive Dashboard...</Loader>\n            </Center>\n          </Switch.Case>\n          <Switch.Case value={false}>\n            <Switch value={callFailed}>\n              <Switch.Case value>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load Executive Dashboard data. Please refresh the page and try again.\n                  </Result.Text>\n                </Result>\n              </Switch.Case>\n              <Switch.Case value={false}>\n                {rawEntries.length === 0 && <NoData />}\n                {rawEntries.length > 0 && (\n                  <Switch value={dashboardType}>\n                    <Switch.Case value=\"virtual\">\n                      {/* TODO update with actual data that will be received */}\n\n                      <VirtualDashboard servers={[]} />\n                    </Switch.Case>\n                    <Switch.Case value=\"physical\">\n                      <PhysicalDashboard selected={selected} />\n                    </Switch.Case>\n                  </Switch>\n                )}\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Main>\n    </>\n  );\n}\n\nexport const ConnectedExecutiveDashboard = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.dashboard.loading,\n      callFailed: state.executiveDashboard.flags.dashboard.callFailed,\n      selected: state.executiveDashboard.selectedServers.length,\n      rawEntries: state.executiveDashboard.rawEntries\n    };\n  },\n  dispatch => ({\n    getExecutiveDashboard: () => dispatch(loadExecutiveDashboardThunk())\n  })\n)(ExecutiveDashboard);\n","import React from 'react';\n\nimport { ConnectedSearchSection } from '../../containers/SearchSection/SearchSection';\nimport { SwitchContent } from '../SwitchContent/SwitchContent';\n\nexport const PhysicalDashboard = ({ selected }) => {\n  return (\n    <>\n      <ConnectedSearchSection />\n      <SwitchContent nrSelected={selected} />\n    </>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SearchableList } from 'users-manager/components/SearchableList/SearchableList';\nimport { ServerCard } from '../../components/ServerCard/ServerCard';\n\nimport { toggleServerThunk } from '../../store/thunks';\n\nimport './SearchSection.local.scss';\n\nfunction SearchSection({ allServers, selectedServers, toggleServer }) {\n  function filterServerByQuery(server, query) {\n    return server.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  function isServerSelected(server) {\n    if (selectedServers.find(sv => sv.name === server.name)) return true;\n    return false;\n  }\n\n  function toggleSelected(server) {\n    toggleServer(server);\n  }\n\n  return (\n    <section className=\"servers-search-section\">\n      <SearchableList items={allServers} filter={filterServerByQuery}>\n        {server => (\n          <ServerCard\n            selected={isServerSelected(server)}\n            toggleSelectedCallback={toggleSelected}\n            server={server}\n          />\n        )}\n      </SearchableList>\n    </section>\n  );\n}\n\nexport const ConnectedSearchSection = connect(\n  state => {\n    return {\n      allServers: state.executiveDashboard.allServers,\n      selectedServers: state.executiveDashboard.selectedServers\n    };\n  },\n  dispatch => ({\n    toggleServer: name => dispatch(toggleServerThunk(name))\n  })\n)(SearchSection);\n","module.exports = __webpack_public_path__ + \"svgs/4b3cf735142a68d8e31e71d5905527d8.svg\";","import React from 'react';\n\nimport { Switch } from 'shared/components';\n\nimport { EmptyContent } from '../EmptyContent/EmptyContent';\nimport { ConnectedDashboard } from '../../containers/Dashboard/Dashboard';\nimport { ConnectedServerView } from '../../containers/ServerView/ServerView';\n\nimport './SwitchContent.local.scss';\n\nexport const SwitchContent = ({ nrSelected }) => {\n  let page = '';\n  if (nrSelected === 0) {\n    page = 'empty-content';\n  } else if (nrSelected === 1) {\n    page = 'server-details';\n  } else if (nrSelected > 1) {\n    page = 'dashboard';\n  }\n\n  return (\n    <section className=\"dashboard-view-section\">\n      <Switch value={page}>\n        <Switch.Case value=\"empty-content\">\n          <EmptyContent />\n        </Switch.Case>\n        <Switch.Case value=\"server-details\">\n          <ConnectedServerView />\n        </Switch.Case>\n        <Switch.Case value=\"dashboard\">\n          <ConnectedDashboard />\n        </Switch.Case>\n      </Switch>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './EmptyContent.local.scss';\n\nexport const EmptyContent = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              Please select at least a server in order to view its details\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Column } from 'shared/components/layout';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { OptionsTile } from '../../components/OptionsTile/OptionsTile';\n\nfunction Dashboard({ selected }) {\n  return (\n    <>\n      <Row>\n        <Column xs={6}>\n          <ServersTile servers={selected} />\n        </Column>\n        <Column xs={6}>\n          <DatabasesTile servers={selected} />\n        </Column>\n      </Row>\n      <OptionsTile servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedDashboard = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(Dashboard);\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarCircleOutline } from '@mdi/js';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper, Overflow } from 'shared/components/layout';\n\nimport { OptionsList } from './components/OptionsList/OptionsList';\nimport { OptionsChart } from './components/OptionsChart/OptionsChart';\n\nimport './OptionsTile.local.scss';\n\nexport const OptionsTile = ({ servers }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.totalInstalledOptions;\n  }, 0);\n\n  const installedOptions = [\n    {\n      name: 'Advanced Analytics',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.aa_count;\n      }, 0),\n      color: '#176BA0',\n      secondaryColor: '#E8F9F5',\n      label: 'AA'\n    },\n    {\n      name: 'Advanced Compression',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.ac_count;\n      }, 0),\n      color: '#1AC9E6',\n      secondaryColor: '#e8fafc',\n      label: 'AC'\n    },\n    {\n      name: 'Advanced Security',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.as_count;\n      }, 0),\n      color: '#6DF0D2',\n      secondaryColor: '#f0fdfb',\n      label: 'AS'\n    },\n    {\n      name: 'Database Vault',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.dv_count;\n      }, 0),\n      color: '#7D3AC1',\n      secondaryColor: '#f2ebf9',\n      label: 'DV'\n    },\n    {\n      name: 'Multitenant',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.mt_count;\n      }, 0),\n      color: '#EA7369',\n      secondaryColor: '#fbedf7',\n      label: 'MT'\n    },\n    {\n      name: 'Active Data Guard',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.adg_count;\n      }, 0),\n      color: '#1DE4BD',\n      secondaryColor: '#e8fcf8',\n      label: 'ADG'\n    },\n    {\n      name: 'Real Application Clusters',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.rac_count;\n      }, 0),\n      color: '#EF7E32',\n      secondaryColor: '#fdf2eb',\n      label: 'RAC'\n    },\n    {\n      name: 'OLAP',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.olap_count;\n      }, 0),\n      color: '#F0A58F',\n      secondaryColor: '#fdf6f4',\n      label: 'OL'\n    },\n    {\n      name: 'Partitioning (User)',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.part_count;\n      }, 0),\n      color: '#C02323',\n      secondaryColor: '#f9e9e9',\n      label: 'P'\n    },\n    {\n      name: 'In-Memory Database',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.in_mem_db_count;\n      }, 0),\n      color: '#DB4CB2',\n      secondaryColor: '#fbedf7',\n      label: 'IMD'\n    }\n  ];\n\n  return (\n    <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiStarCircleOutline} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={total} />\n        <StringLabel text=\"Options installed\" />\n      </Paper.Header>\n      <div className=\"container\">\n        <div className=\"graph-container\">\n          <OptionsChart data={installedOptions} />\n        </div>\n        <div className=\"label-container\">\n          <Overflow>\n            <OptionsList options={installedOptions} />\n          </Overflow>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\n\nimport { OptionItem } from '../OptionItem/OptionItem';\n\nexport const OptionsList = ({ options }) => {\n  return options.map(option => <OptionItem key={option.name} option={option} />);\n};\n","import React from 'react';\n\nimport './OptionItem.local.scss';\n\nexport const OptionItem = ({ option }) => {\n  return (\n    <div className=\"option\">\n      <div className=\"value\" style={{ backgroundColor: option.secondaryColor }}>\n        <span style={{ color: option.color }}>{option.value}</span>\n      </div>\n      <div style={{ color: option.color }}>{option.name}</div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { BarChart, Bar, XAxis, Cell, ResponsiveContainer, YAxis, CartesianGrid } from 'recharts';\n\nimport './OptionsChart.local.scss';\n\nexport const OptionsChart = ({ data }) => {\n  const renderCustomXAxisTick = ({ x, y, payload }) => {\n    const index = data.findIndex(sv => sv.label === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={data[index].color}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <XAxis dataKey=\"label\" tickSize={false} axisLine={false} tick={renderCustomXAxisTick} />\n        <YAxis\n          width={20}\n          tickSize={false}\n          axisLine={false}\n          allowDecimals={false}\n          type=\"number\"\n          domain={[0, 'dataMax']}\n          stroke=\"rgba(12, 50, 110, 0.38)\"\n        />\n        <Bar dataKey=\"value\">\n          {data.map((entry, index) => {\n            return <Cell key={`${entry.name}-${index}`} fill={entry.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Column } from 'shared/components/layout';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { UsedOptions } from '../../components/UsedOptions/UsedOptions';\n\nfunction ServerView({ selected }) {\n  return (\n    <>\n      <Row>\n        <Column xs={6}>\n          <ServersTile servers={selected} isSingle />\n        </Column>\n        <Column xs={6}>\n          <DatabasesTile servers={selected} />\n        </Column>\n      </Row>\n      <UsedOptions servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedServerView = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(ServerView);\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlayCircle, mdiCheck } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport './UsedOptions.local.scss';\n\nexport const UsedOptions = ({ servers }) => {\n  function optionType(type) {\n    if (type.value === 1) {\n      return (\n        <LightTooltip\n          placement=\"top\"\n          title={\n            <>\n              <span style={{ fontWeight: '600' }}>{type.name}:&nbsp;</span>\n              <span>Installed</span>\n            </>\n          }\n        >\n          <SvgIcon className=\"installed\">\n            <Icon path={mdiCheck} />\n          </SvgIcon>\n        </LightTooltip>\n      );\n    }\n\n    return null;\n  }\n\n  return (\n    <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiPlayCircle} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={servers[0].totalInstalledOptions} />\n        <StringLabel text=\"Options installed\" />\n      </Paper.Header>\n      <Paper.Content scrollable={false}>\n        <div className=\"grid\">\n          <div className=\"column header left\" />\n          <div className=\"column header aa\">AA</div>\n          <div className=\"column header ac\">AC</div>\n          <div className=\"column header adg\">ADG</div>\n          <div className=\"column header as\">AS</div>\n          <div className=\"column header dv\">DV</div>\n          <div className=\"column header imd\">IMD</div>\n          <div className=\"column header mt\">MT</div>\n          <div className=\"column header ol\">OL</div>\n          <div className=\"column header p\">P</div>\n          <div className=\"column header rac\">RAC</div>\n          {servers[0].sids.map((sid, index) => {\n            return (\n              <div key={`${sid.sid}-${index}`} className=\"row\">\n                <div className=\"column left\">{sid.sid}</div>\n                <div className=\"column\">\n                  {optionType({ name: 'Advanced Analytics', value: sid.aa_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Advanced Compression', value: sid.ac_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Active Data Guard', value: sid.adg_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Advanced Security', value: sid.as_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Database Vault', value: sid.dv_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'In-Memory Database', value: sid.in_mem_db_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Multitenant', value: sid.mt_count })}\n                </div>\n                <div className=\"column\">{optionType({ name: 'OLAP', value: sid.olap_count })}</div>\n                <div className=\"column\">\n                  {optionType({ name: 'Partitioning (User)', value: sid.part_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Real Application Clusters', value: sid.rac_count })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Paper.Content>\n    </Paper>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState } from 'react';\n\nimport { Center } from 'shared/components';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { ServerCard } from '../ServerCard/ServerCard';\n\nimport './VirtualDashboard.local.scss';\n\n// const servers = [\n//   { name: 'VCenterServerName_1', hosts: '44', cpu: '12', cores: '32' },\n//   { name: 'VCenterServerName_2', hosts: '4', cpu: '10', cores: '10' },\n//   { name: 'VCenterServerName_3', hosts: '45', cpu: '10', cores: '4' },\n//   { name: 'VCenterServerName_4', hosts: '34', cpu: '10', cores: '4' },\n//   { name: 'VCenterServerName_5', hosts: '24', cpu: '12', cores: '32' },\n//   { name: 'VCenterServerName_6', hosts: '14', cpu: '8', cores: '4' },\n//   { name: 'VCenterServerName_7', hosts: '6', cpu: '12', cores: '32' },\n//   { name: 'VCenterServerName_8', hosts: '4', cpu: '8', cores: '8' },\n//   { name: 'VCenterServerName_9', hosts: '44', cpu: '12', cores: '32' },\n//   { name: 'VCenterServerName_10', hosts: '34', cpu: '12', cores: '8' },\n//   { name: 'VCenterServerName_11', hosts: '14', cpu: '6', cores: '16' },\n//   { name: 'VCenterServerName_12', hosts: '44', cpu: '6', cores: '16' }\n// ];\n\n// const test_servers = [];\n\nexport const VirtualDashboard = ({ servers }) => {\n  const [query, setQuery] = useState('');\n  const filtered = servers.filter(item => filterServerByQuery(item, query));\n\n  function filterServerByQuery(server) {\n    let found = false;\n\n    Object.values(server).map(val => {\n      if (val.toLowerCase().includes(query.toLowerCase())) {\n        found = true;\n      }\n\n      return null;\n    });\n\n    return found;\n  }\n\n  return (\n    <div className=\"container\">\n      {servers.length === 0 && <Center>Currently there are no virtual servers</Center>}\n      {servers.length > 0 && (\n        <>\n          <div className=\"search-input-slot\">\n            <SimpleSearchInput\n              data-qa=\"users-search-input\"\n              value={query}\n              onChange={e => setQuery(e.target.value)}\n            />\n          </div>\n          <div className=\"servers-container\">\n            {filtered.map(server => (\n              <ServerCard key={server.name} server={server} type=\"virtual\" />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiShieldCheckOutline } from '@mdi/js';\n\nimport './NoData.local.scss';\n\nexport const NoData = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiShieldCheckOutline} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              Please run &nbsp;\n              <Link className=\"link\" to=\"/compliance/license-collection\">\n                License Collection\n              </Link>\n              &nbsp; in order to populate this dashboard\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\n\nimport { deselectAllThunk, selectAllThunk } from '../../store/thunks';\n\nfunction ToggleSelection({ servers, selected, deselectAll, selectAll }) {\n  if (servers === selected) {\n    return (\n      <Button style={{ color: '#03A9F4' }} onClick={() => deselectAll()}>\n        Deselect All\n      </Button>\n    );\n  }\n  return (\n    <Button style={{ color: '#03A9F4' }} onClick={() => selectAll()}>\n      Select all\n    </Button>\n  );\n}\n\nexport const ConnectedToggleSelection = connect(\n  state => {\n    return {\n      servers: state.executiveDashboard.allServers.length,\n      selected: state.executiveDashboard.selectedServers.length\n    };\n  },\n  dispatch => ({\n    deselectAll: () => dispatch(deselectAllThunk()),\n    selectAll: () => dispatch(selectAllThunk())\n  })\n)(ToggleSelection);\n","import React, { useState } from 'react';\n\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport { Navigation } from './components/Navigation/Navigation';\nimport { ConnectedHardware } from './Pages/Hardware/Hardware';\nimport { ConnectedSoftware } from './Pages/Software/Software';\nimport { ConnectedPackaging } from './Pages/Packaging/Packaging';\n\nexport const LicenseCollection = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function changeActiveTab(newActiveTab) {\n    setActiveTab(newActiveTab);\n  }\n\n  return (\n    <>\n      <Header title=\"License collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <Navigation active={activeTab} onClickCallback={changeActiveTab} />\n          </Paper.Header>\n          <Paper.Content>\n            <Switch value={activeTab}>\n              <Switch.Case value={0}>\n                <ConnectedHardware />\n              </Switch.Case>\n              <Switch.Case value={1}>\n                <ConnectedSoftware />\n              </Switch.Case>\n              <Switch.Case value={2}>\n                <ConnectedPackaging />\n              </Switch.Case>\n            </Switch>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Navigation.local.scss';\n\nconst data = [\n  { label: 'Hardware Data Requirements Collection' },\n  { label: 'Software Data Requirements Collection' },\n  { label: 'Packaging Process' }\n];\n\nexport const Navigation = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"nav-chip-container\">\n      {data.map((chip, index) => (\n        <div\n          className={classnames('nav-chip', { active: active === index })}\n          key={index}\n          onClick={() => onClickCallback(index)}\n          role=\"presentation\"\n          data-qa={`chip-nav-${index}`}\n        >\n          {chip.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func } from 'prop-types';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiMemory } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport {\n  getAllPrototypesThunk,\n  getAllDatatypesThunk,\n  loadAllAccountsThunk\n} from 'explorer/store/thunks';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Hardware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.hw_scan';\n\nexport class Hardware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      process: null,\n      isProcessLoading: true,\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      prototypes,\n      datatypes,\n      rawAccounts,\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      getAllPrototypes,\n      getAllDatatypes,\n      getAllAccounts\n    } = this.props;\n\n    if (!loadingPrototypes && prototypes.length === 0) {\n      getAllPrototypes();\n    }\n\n    if (!loadingDatatypes && datatypes.length === 0) {\n      getAllDatatypes();\n    }\n\n    if (!loadingAccounts && rawAccounts.length === 0) {\n      getAllAccounts();\n    }\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${processName}`);\n      if (response.data.data && response.data.data.processes && response.data.data.processes[0]) {\n        this.setState({ process: response.data.data.processes[0], isProcessLoading: false });\n      }\n    } catch (errors) {\n      this.setState({ isProcessLoading: false });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const { process, isProcessLoading } = this.state;\n    const {\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      datatypes,\n      prototypes\n    } = this.props;\n    let parameters = null;\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"hardware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Hardware scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Hardware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n      />\n    );\n  }\n}\n\nHardware.propTypes = {\n  prototypes: array,\n  datatypes: array,\n  rawAccounts: array,\n  loadingPrototypes: bool,\n  loadingDatatypes: bool,\n  loadingAccounts: bool,\n  getAllPrototypes: func,\n  getAllDatatypes: func,\n  getAllAccounts: func\n};\n\nexport const ConnectedHardware = connect(\n  state => ({\n    prototypes: state.explorer.prototypes,\n    datatypes: state.explorer.datatypes,\n    rawAccounts: state.explorer.rawAccounts,\n    loadingPrototypes: state.explorer.flags.prototypes.loading,\n    loadingDatatypes: state.explorer.flags.datatypes.loading,\n    loadingAccounts: state.explorer.flags.accounts.loading\n  }),\n  dispatch => ({\n    getAllPrototypes: () => dispatch(getAllPrototypesThunk()),\n    getAllDatatypes: () => dispatch(getAllDatatypesThunk()),\n    getAllAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(Hardware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n  const matches = regex.exec(deflt);\n  const json = `[${matches[2]}]`;\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default:\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return parseInt(matches[2], 10);\n          case 'str':\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            try {\n              return JSON.parse(json)[0];\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n  }\n  return null;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func } from 'prop-types';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiApplication } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport {\n  getAllPrototypesThunk,\n  getAllDatatypesThunk,\n  loadAllAccountsThunk,\n  getAllFormsThunk\n} from 'explorer/store/thunks';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Software.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.sw_scan';\n\nexport class Software extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      process: null,\n      isProcessLoading: true,\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      prototypes,\n      datatypes,\n      rawAccounts,\n      forms,\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      loadingForms,\n      getAllPrototypes,\n      getAllDatatypes,\n      getAllAccounts,\n      getAllForms\n    } = this.props;\n\n    if (!loadingPrototypes && prototypes.length === 0) {\n      getAllPrototypes();\n    }\n\n    if (!loadingDatatypes && datatypes.length === 0) {\n      getAllDatatypes();\n    }\n\n    if (!loadingAccounts && rawAccounts.length === 0) {\n      getAllAccounts();\n    }\n\n    if (!loadingForms && forms.length === 0) {\n      getAllForms();\n    }\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${processName}`);\n      if (response.data.data && response.data.data.processes && response.data.data.processes[0]) {\n        this.setState({ process: response.data.data.processes[0], isProcessLoading: false });\n      }\n    } catch (errors) {\n      this.setState({ isProcessLoading: false });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const { process, isProcessLoading } = this.state;\n    const {\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      loadingForms,\n      datatypes,\n      prototypes\n    } = this.props;\n    let parameters = null;\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Database features scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to target server, Target DBMS, Database form for the target\n                      database, SSH connection to the target host, working directory in the repo\n                      host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Software Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiApplication} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        forms={this.props.forms}\n        prototypes={this.props.prototypes}\n      />\n    );\n  }\n}\n\nSoftware.propTypes = {\n  prototypes: array,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  loadingPrototypes: bool,\n  loadingDatatypes: bool,\n  loadingAccounts: bool,\n  loadingForms: bool,\n  getAllPrototypes: func,\n  getAllDatatypes: func,\n  getAllAccounts: func,\n  getAllForms: func\n};\n\nexport const ConnectedSoftware = connect(\n  state => ({\n    prototypes: state.explorer.prototypes,\n    datatypes: state.explorer.datatypes,\n    rawAccounts: state.explorer.rawAccounts,\n    forms: state.explorer.forms,\n    loadingPrototypes: state.explorer.flags.prototypes.loading,\n    loadingDatatypes: state.explorer.flags.datatypes.loading,\n    loadingAccounts: state.explorer.flags.accounts.loading,\n    loadingForms: state.explorer.flags.forms.loading\n  }),\n  dispatch => ({\n    getAllPrototypes: () => dispatch(getAllPrototypesThunk()),\n    getAllDatatypes: () => dispatch(getAllDatatypesThunk()),\n    getAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    getAllForms: () => dispatch(getAllFormsThunk())\n  })\n)(Software);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func } from 'prop-types';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiArchiveArrowDownOutline } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport {\n  getAllPrototypesThunk,\n  getAllDatatypesThunk,\n  loadAllAccountsThunk\n} from 'explorer/store/thunks';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport { downloadFile } from '../../utils/downloadFile';\n\nimport './Packaging.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.packager';\n\nexport class Packaging extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      process: null,\n      isProcessLoading: true,\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined,\n      formValues: {},\n      isDownloadDisabled: true,\n      isEmailDisabled: true\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      prototypes,\n      datatypes,\n      rawAccounts,\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      getAllPrototypes,\n      getAllDatatypes,\n      getAllAccounts\n    } = this.props;\n\n    if (!loadingPrototypes && prototypes.length === 0) {\n      getAllPrototypes();\n    }\n\n    if (!loadingDatatypes && datatypes.length === 0) {\n      getAllDatatypes();\n    }\n\n    if (!loadingAccounts && rawAccounts.length === 0) {\n      getAllAccounts();\n    }\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${processName}`);\n      if (response.data.data && response.data.data.processes && response.data.data.processes[0]) {\n        this.setState({ process: response.data.data.processes[0], isProcessLoading: false });\n      }\n    } catch (errors) {\n      this.setState({ isProcessLoading: false });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const { process, isProcessLoading } = this.state;\n    const {\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      datatypes,\n      prototypes\n    } = this.props;\n    let parameters = null;\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined,\n                    formValues: formatParameters(values),\n                    isDownloadDisabled: true,\n                    isEmailDisabled: true\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"packaging-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Package (HW, SW) file for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>Repo working directory, repo SSH connection</p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Paper.Footer.Left>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isDownloadDisabled}\n                      data-qa=\"download-btn\"\n                      onClick={() => {\n                        downloadFile(this.state.formValues);\n                        this.setState({ isEmailDisabled: false });\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isEmailDisabled}\n                      data-qa=\"email-btn\"\n                      onClick={() => this.sendEmail()}\n                    >\n                      Email\n                    </Button>\n                  </Paper.Footer.Left>\n                  <Paper.Footer.Right>\n                    <Button\n                      className=\"btn submit\"\n                      type=\"submit\"\n                      disabled={!dirty || isSubmitting}\n                      variant=\"contained\"\n                      data-qa=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Packaging Process ',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiArchiveArrowDownOutline} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n\n            try {\n              await RestClient.get(\n                '/execdashboard/update',\n                formatParameters({\n                  lms_repo: this.state.formValues.repo_working_dir,\n                  repo_shell: this.state.formValues.repo_shell\n                })\n              );\n              this.setState({\n                output: outputReponse.data.data.outputs,\n                invocation,\n                outputOpen: invocation.status !== 'SUCCEEDED',\n                isDownloadDisabled: invocation.status !== 'SUCCEEDED'\n              });\n            } catch (error) {\n              console.log('[collection-packaging-exec-dashboard-update] error: ', error); // eslint-disable-line\n              this.setState({ outputOpen: false });\n            }\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        type=\"packaging\"\n        output={this.state.output}\n        processName={processName}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        messages={['Preparing job...', 'Executing job...', 'Preparing files...']}\n      />\n    );\n  };\n\n  sendEmail = () => {\n    const body = 'Please attach the downloaded file. It should be named \"ct_cpuq.tar\".';\n    window.location.href = `mailto:?subject=Packaging files&body=${encodeURIComponent(body)}`;\n  };\n\n  chooseField(parameter) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n      />\n    );\n  }\n}\n\nPackaging.propTypes = {\n  prototypes: array,\n  datatypes: array,\n  rawAccounts: array,\n  loadingPrototypes: bool,\n  loadingDatatypes: bool,\n  loadingAccounts: bool,\n  getAllPrototypes: func,\n  getAllDatatypes: func,\n  getAllAccounts: func\n};\n\nexport const ConnectedPackaging = connect(\n  state => ({\n    prototypes: state.explorer.prototypes,\n    datatypes: state.explorer.datatypes,\n    rawAccounts: state.explorer.rawAccounts,\n    loadingPrototypes: state.explorer.flags.prototypes.loading,\n    loadingDatatypes: state.explorer.flags.datatypes.loading,\n    loadingAccounts: state.explorer.flags.accounts.loading\n  }),\n  dispatch => ({\n    getAllPrototypes: () => dispatch(getAllPrototypesThunk()),\n    getAllDatatypes: () => dispatch(getAllDatatypesThunk()),\n    getAllAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(Packaging);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async query => {\n  const formatQuery = {\n    lms_repo: query.repo_working_dir,\n    repo_shell: query.repo_shell\n  };\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_PACKAGING, formatQuery);\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'ct_cpuq.tar';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import { en } from './en';\n\nexport const i18nMessages = {\n  en,\n};\n","import dashboard from './dashboard.json';\nimport general from './general.json';\nimport session from './session.json';\nimport header from './header.json';\n\nexport const en = {\n  ...dashboard,\n  ...general,\n  ...session,\n  ...header,\n};\n","import 'babel-polyfill';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport store from 'core/store';\n\nimport { App } from './app';\nimport { CONSTANTS } from './app/config';\nimport { i18nMessages } from './i18n';\n\nimport './style.scss';\n\nconst provider = (\n  <IntlProvider locale={CONSTANTS.INTL} messages={i18nMessages[CONSTANTS.INTL]}>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.NODE_ENV === 'development' ? '/' : '/ui/#/'}>\n        <Switch>\n          <Route component={App} path=\"/\" />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  </IntlProvider>\n);\n\nrender(provider, document.getElementById('root'));\n","var map = {\n\t\"./af\": 663,\n\t\"./af.js\": 663,\n\t\"./ar\": 664,\n\t\"./ar-dz\": 665,\n\t\"./ar-dz.js\": 665,\n\t\"./ar-kw\": 666,\n\t\"./ar-kw.js\": 666,\n\t\"./ar-ly\": 667,\n\t\"./ar-ly.js\": 667,\n\t\"./ar-ma\": 668,\n\t\"./ar-ma.js\": 668,\n\t\"./ar-sa\": 669,\n\t\"./ar-sa.js\": 669,\n\t\"./ar-tn\": 670,\n\t\"./ar-tn.js\": 670,\n\t\"./ar.js\": 664,\n\t\"./az\": 671,\n\t\"./az.js\": 671,\n\t\"./be\": 672,\n\t\"./be.js\": 672,\n\t\"./bg\": 673,\n\t\"./bg.js\": 673,\n\t\"./bm\": 674,\n\t\"./bm.js\": 674,\n\t\"./bn\": 675,\n\t\"./bn.js\": 675,\n\t\"./bo\": 676,\n\t\"./bo.js\": 676,\n\t\"./br\": 677,\n\t\"./br.js\": 677,\n\t\"./bs\": 678,\n\t\"./bs.js\": 678,\n\t\"./ca\": 679,\n\t\"./ca.js\": 679,\n\t\"./cs\": 680,\n\t\"./cs.js\": 680,\n\t\"./cv\": 681,\n\t\"./cv.js\": 681,\n\t\"./cy\": 682,\n\t\"./cy.js\": 682,\n\t\"./da\": 683,\n\t\"./da.js\": 683,\n\t\"./de\": 684,\n\t\"./de-at\": 685,\n\t\"./de-at.js\": 685,\n\t\"./de-ch\": 686,\n\t\"./de-ch.js\": 686,\n\t\"./de.js\": 684,\n\t\"./dv\": 687,\n\t\"./dv.js\": 687,\n\t\"./el\": 688,\n\t\"./el.js\": 688,\n\t\"./en-SG\": 689,\n\t\"./en-SG.js\": 689,\n\t\"./en-au\": 690,\n\t\"./en-au.js\": 690,\n\t\"./en-ca\": 691,\n\t\"./en-ca.js\": 691,\n\t\"./en-gb\": 692,\n\t\"./en-gb.js\": 692,\n\t\"./en-ie\": 693,\n\t\"./en-ie.js\": 693,\n\t\"./en-il\": 694,\n\t\"./en-il.js\": 694,\n\t\"./en-nz\": 695,\n\t\"./en-nz.js\": 695,\n\t\"./eo\": 696,\n\t\"./eo.js\": 696,\n\t\"./es\": 697,\n\t\"./es-do\": 698,\n\t\"./es-do.js\": 698,\n\t\"./es-us\": 699,\n\t\"./es-us.js\": 699,\n\t\"./es.js\": 697,\n\t\"./et\": 700,\n\t\"./et.js\": 700,\n\t\"./eu\": 701,\n\t\"./eu.js\": 701,\n\t\"./fa\": 702,\n\t\"./fa.js\": 702,\n\t\"./fi\": 703,\n\t\"./fi.js\": 703,\n\t\"./fo\": 704,\n\t\"./fo.js\": 704,\n\t\"./fr\": 705,\n\t\"./fr-ca\": 706,\n\t\"./fr-ca.js\": 706,\n\t\"./fr-ch\": 707,\n\t\"./fr-ch.js\": 707,\n\t\"./fr.js\": 705,\n\t\"./fy\": 708,\n\t\"./fy.js\": 708,\n\t\"./ga\": 709,\n\t\"./ga.js\": 709,\n\t\"./gd\": 710,\n\t\"./gd.js\": 710,\n\t\"./gl\": 711,\n\t\"./gl.js\": 711,\n\t\"./gom-latn\": 712,\n\t\"./gom-latn.js\": 712,\n\t\"./gu\": 713,\n\t\"./gu.js\": 713,\n\t\"./he\": 714,\n\t\"./he.js\": 714,\n\t\"./hi\": 715,\n\t\"./hi.js\": 715,\n\t\"./hr\": 716,\n\t\"./hr.js\": 716,\n\t\"./hu\": 717,\n\t\"./hu.js\": 717,\n\t\"./hy-am\": 718,\n\t\"./hy-am.js\": 718,\n\t\"./id\": 719,\n\t\"./id.js\": 719,\n\t\"./is\": 720,\n\t\"./is.js\": 720,\n\t\"./it\": 721,\n\t\"./it-ch\": 722,\n\t\"./it-ch.js\": 722,\n\t\"./it.js\": 721,\n\t\"./ja\": 723,\n\t\"./ja.js\": 723,\n\t\"./jv\": 724,\n\t\"./jv.js\": 724,\n\t\"./ka\": 725,\n\t\"./ka.js\": 725,\n\t\"./kk\": 726,\n\t\"./kk.js\": 726,\n\t\"./km\": 727,\n\t\"./km.js\": 727,\n\t\"./kn\": 728,\n\t\"./kn.js\": 728,\n\t\"./ko\": 729,\n\t\"./ko.js\": 729,\n\t\"./ku\": 730,\n\t\"./ku.js\": 730,\n\t\"./ky\": 731,\n\t\"./ky.js\": 731,\n\t\"./lb\": 732,\n\t\"./lb.js\": 732,\n\t\"./lo\": 733,\n\t\"./lo.js\": 733,\n\t\"./lt\": 734,\n\t\"./lt.js\": 734,\n\t\"./lv\": 735,\n\t\"./lv.js\": 735,\n\t\"./me\": 736,\n\t\"./me.js\": 736,\n\t\"./mi\": 737,\n\t\"./mi.js\": 737,\n\t\"./mk\": 738,\n\t\"./mk.js\": 738,\n\t\"./ml\": 739,\n\t\"./ml.js\": 739,\n\t\"./mn\": 740,\n\t\"./mn.js\": 740,\n\t\"./mr\": 741,\n\t\"./mr.js\": 741,\n\t\"./ms\": 742,\n\t\"./ms-my\": 743,\n\t\"./ms-my.js\": 743,\n\t\"./ms.js\": 742,\n\t\"./mt\": 744,\n\t\"./mt.js\": 744,\n\t\"./my\": 745,\n\t\"./my.js\": 745,\n\t\"./nb\": 746,\n\t\"./nb.js\": 746,\n\t\"./ne\": 747,\n\t\"./ne.js\": 747,\n\t\"./nl\": 748,\n\t\"./nl-be\": 749,\n\t\"./nl-be.js\": 749,\n\t\"./nl.js\": 748,\n\t\"./nn\": 750,\n\t\"./nn.js\": 750,\n\t\"./pa-in\": 751,\n\t\"./pa-in.js\": 751,\n\t\"./pl\": 752,\n\t\"./pl.js\": 752,\n\t\"./pt\": 753,\n\t\"./pt-br\": 754,\n\t\"./pt-br.js\": 754,\n\t\"./pt.js\": 753,\n\t\"./ro\": 755,\n\t\"./ro.js\": 755,\n\t\"./ru\": 756,\n\t\"./ru.js\": 756,\n\t\"./sd\": 757,\n\t\"./sd.js\": 757,\n\t\"./se\": 758,\n\t\"./se.js\": 758,\n\t\"./si\": 759,\n\t\"./si.js\": 759,\n\t\"./sk\": 760,\n\t\"./sk.js\": 760,\n\t\"./sl\": 761,\n\t\"./sl.js\": 761,\n\t\"./sq\": 762,\n\t\"./sq.js\": 762,\n\t\"./sr\": 763,\n\t\"./sr-cyrl\": 764,\n\t\"./sr-cyrl.js\": 764,\n\t\"./sr.js\": 763,\n\t\"./ss\": 765,\n\t\"./ss.js\": 765,\n\t\"./sv\": 766,\n\t\"./sv.js\": 766,\n\t\"./sw\": 767,\n\t\"./sw.js\": 767,\n\t\"./ta\": 768,\n\t\"./ta.js\": 768,\n\t\"./te\": 769,\n\t\"./te.js\": 769,\n\t\"./tet\": 770,\n\t\"./tet.js\": 770,\n\t\"./tg\": 771,\n\t\"./tg.js\": 771,\n\t\"./th\": 772,\n\t\"./th.js\": 772,\n\t\"./tl-ph\": 773,\n\t\"./tl-ph.js\": 773,\n\t\"./tlh\": 774,\n\t\"./tlh.js\": 774,\n\t\"./tr\": 775,\n\t\"./tr.js\": 775,\n\t\"./tzl\": 776,\n\t\"./tzl.js\": 776,\n\t\"./tzm\": 777,\n\t\"./tzm-latn\": 778,\n\t\"./tzm-latn.js\": 778,\n\t\"./tzm.js\": 777,\n\t\"./ug-cn\": 779,\n\t\"./ug-cn.js\": 779,\n\t\"./uk\": 780,\n\t\"./uk.js\": 780,\n\t\"./ur\": 781,\n\t\"./ur.js\": 781,\n\t\"./uz\": 782,\n\t\"./uz-latn\": 783,\n\t\"./uz-latn.js\": 783,\n\t\"./uz.js\": 782,\n\t\"./vi\": 784,\n\t\"./vi.js\": 784,\n\t\"./x-pseudo\": 785,\n\t\"./x-pseudo.js\": 785,\n\t\"./yo\": 786,\n\t\"./yo.js\": 786,\n\t\"./zh-cn\": 787,\n\t\"./zh-cn.js\": 787,\n\t\"./zh-hk\": 788,\n\t\"./zh-hk.js\": 788,\n\t\"./zh-tw\": 789,\n\t\"./zh-tw.js\": 789\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1403;","/**\n * A IFFE to ignore warnings of prop-types validation\n * from Material-UI components used with scoped-css-loader.\n *\n * They are invalid and will not appear in prod builds, they are\n * cumbersome for development for now.\n *\n * TODO: investigate if there is another option when there is time.\n * For now it looks like there is not.\n */\n\n/* eslint-disable */\n(function clearMUIDataVWarnings() {\n  const error = console.error.bind(console);\n  const partial = /Warning:.*data-v-/;\n\n  console.error = (message, ...args) => {\n    if (typeof message === 'string' && message.search(partial) !== -1) {\n      return;\n    }\n\n    error(message, ...args);\n  };\n})();\n\n/* eslint-enable */\n"],"sourceRoot":""}