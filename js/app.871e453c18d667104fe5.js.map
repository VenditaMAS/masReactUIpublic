{"version":3,"sources":["webpack:///./src/app/config.js","webpack:///./src/app/shared/components/form/editors/Generic.jsx","webpack:///./src/app/explorer/store/actions/index.js","webpack:///./src/app/shared/components/overlays/Result/Result.jsx","webpack:///./src/app/explorer/store/thunks/index.js","webpack:///./src/app/executive-dashboard/store/actions/index.js","webpack:///./src/app/users-manager/groups/store/actions.js","webpack:///./src/app/explorer/SystemExplorerFeatureUtil.js","webpack:///./src/app/shared/lib/cron-validator/cron-validator.js","webpack:///./src/app/users-manager/store/actions/index.js","webpack:///./src/app/entities/actions.js","webpack:///./src/app/session/store/actions/index.js","webpack:///./src/app/shared/store/actions/index.js","webpack:///./src/app/explorer/store/selectors/index.js","webpack:///./src/app/shared/components/tooltip/Tooltip.jsx","webpack:///./src/app/shared/components/form/editors/Custom.jsx","webpack:///./src/app/job-process/store/constants.js","webpack:///./src/app/entities/utils/privileges.js","webpack:///./src/app/license-allocation/store/actions/index.js","webpack:///./src/app/shared/components/form/SubmitButton.jsx","webpack:///./src/app/users-manager/components/AvatarCard/AvatarCard.jsx","webpack:///./src/app/shared/components/form/editors/field-level-validations.js","webpack:///./src/app/license-collection/utils/formatTimePeriod.js","webpack:///./src/app/shared/api/invocation.js","webpack:///./src/app/shared/store/state/index.js","webpack:///./src/app/session/store/selectors/index.js","webpack:///./src/app/users-manager/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/thunks.js","webpack:///./src/app/license-collection/utils/formikFormatter.js","webpack:///./src/app/executive-dashboard/store/thunks/index.js","webpack:///./src/app/shared/components/form/parameters/variants.jsx","webpack:///./src/app/job-process/store/selectors.js","webpack:///./src/app/core/components/Ensure/Ensure.jsx","webpack:///./src/app/executive-dashboard/components/OperatingSystemsTile/OperatingSystemsConstants.js","webpack:///./src/app/users-manager/components/SearchableList/SearchableList.jsx","webpack:///./src/app/session/store/state/index.js","webpack:///./src/app/entities/selectors.js","webpack:///./src/app/users-manager/store/mappers/index.js","webpack:///./src/app/license-collection/utils/copyToClipboard.js","webpack:///./src/app/shared/components/layout/NavigationTab/NavigationTab.jsx","webpack:///./src/app/users-manager/store/selectors/index.js","webpack:///./src/app/explorer/components/NavigationTab/NavigationTab.jsx","webpack:///./src/app/shared/api/accounts.js","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSqlStatementsUtil.js","webpack:///./src/app/license-collection/utils/normalizeParameter.jsx","webpack:///./src/app/license-collection/controls/TextField/TextField.jsx","webpack:///./src/app/license-collection/controls/DropdownField/DropdownField.jsx","webpack:///./src/app/license-collection/components/OutputModal/OutputModal.jsx","webpack:///./src/app/shared/api/schedule.js","webpack:///./src/app/explorer/store/mappers/index.js","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/SystemExplorerViewMode.js","webpack:///./src/app/core/store/index.js","webpack:///./src/app/executive-dashboard/components/LicensableFeaturesGraph/LicensableFeaturesConstants.js","webpack:///./src/app/entities/components/Switch.jsx","webpack:///./src/app/executive-dashboard/components/ServersNetworkTile/ServersNetworkConstants.js","webpack:///./src/app/shared/api/protocols.js","webpack:///./src/app/job-process/job-parameters.jsx","webpack:///./src/app/shared/components/form/parameters/normalizeParameter.js","webpack:///./src/app/job-process/containers/notifications/notifications.jsx","webpack:///./src/app/shared/api/process.js","webpack:///./src/app/executive-dashboard/components/ChartTooltip/ChartTooltip.jsx","webpack:///./src/app/shared/components/range-date-picker/constants.js","webpack:///./src/app/shared/components/form/parameters/index.jsx","webpack:///./src/app/shared/components/simple-search-input/simple-search-input.jsx","webpack:///./src/app/core/components/Header/Header.jsx","webpack:///./src/app/dashboard/store/state/index.js","webpack:///./src/app/dashboard/store/actions/index.js","webpack:///./src/app/explorer/containers/AddServerCard/AddServerCard.jsx","webpack:///./src/app/explorer/containers/AddDatabaseCard/AddDatabaseCard.jsx","webpack:///./src/app/explorer/containers/ImportCSV/ImportCSV.jsx","webpack:///./src/app/shared/api/delete.js","webpack:///./src/app/entities/mappers.js","webpack:///./src/app/explorer/components/ActionCard/ActionCard.jsx","webpack:///./src/app/explorer/components/CardsLayout/CardsLayout.jsx","webpack:///./src/app/shared/lib/want/index.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/ChangePassword.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsList/OptionsList.jsx","webpack:///./src/app/license-allocation/store/thunks/index.js","webpack:///./src/app/license-allocation/store/selectors/index.js","webpack:///./src/app/shared/components/overlays/Modal/Modal.jsx","webpack:///./src/app/shared/api/namespace.js","webpack:///./src/app/shared/api/form.js","webpack:///./src/app/entities/components/form-actions/FormEditor.jsx","webpack:///./src/app/executive-dashboard/store/mappers/index.js","webpack:///./src/app/shared/components/center/center.component.jsx","webpack:///./src/app/shared/lib/react-dates/isBeforeDay.js","webpack:///./src/app/shared/components/LightTooltip/LightTooltip.jsx","webpack:///./src/app/shared/components/layout/Overflow/Overflow.jsx","webpack:///./src/app/shared/components/overlays/ModalHeader/ModalHeader.jsx","webpack:///./src/app/shared/components/controls/Checkbox/Checkbox.jsx","webpack:///./src/app/shared/lib/polling/index.js","webpack:///./src/app/explorer/containers/Forms/ServerForm.jsx","webpack:///./src/app/shared/api/datatypes.js","webpack:///./src/app/explorer/containers/Forms/DatabaseForm.jsx","webpack:///./src/app/shared/lib/download-file/download-file.js","webpack:///./src/app/jobs/actions/delete/DeleteJobModal.jsx","webpack:///./src/app/jobs/containers/Schedule/Schedule.jsx","webpack:///./src/app/entities/components/namespace-actions/NewNamespace.jsx","webpack:///./src/app/shared/components/form/SubmitButtonNoDirty.jsx","webpack:///./src/app/entities/components/form-actions/FormModal.jsx","webpack:///./src/app/explorer/containers/Settings/DatabaseSettings.jsx","webpack:///./src/app/license-collection/utils/getOutputText.js","webpack:///./src/app/job-process/store/actions.js","webpack:///./src/app/license-collection/utils/sendToEmail.js","webpack:///./src/app/session/store/effects/be-version/be-version.effect.js","webpack:///./src/app/jobs/components/total-jobs-count/TotalJobsCount.jsx","webpack:///./src/app/shared/api/alias.js","webpack:///./src/app/session/store/reducers/reducer.js","webpack:///./src/app/dashboard/store/tasks.js","webpack:///./src/app/dashboard/store/reducers/reducer.js","webpack:///./src/app/shared/store/reducers/reducer.js","webpack:///./src/app/core/store/reducers/reducer.js","webpack:///./src/app/core/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/wishes.jsx","webpack:///./src/app/shared/components/form/editors/filters.js","webpack:///./src/app/entities/components/form-actions/utils.js","webpack:///./src/app/shared/api/privileges.js","webpack:///./src/app/explorer/components/DbObjects/Sidebar.jsx","webpack:///./src/app/explorer/components/DbObjects/Viewer.jsx","webpack:///./src/app/license-collection/utils/formatMemoryZiseGb.js","webpack:///./src/app/explorer/components/StatusLabel/StatusLabel.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/constants.jsx","webpack:///./src/app/job-process/store/tasks.js","webpack:///./src/app/license-collection/components/ListOutput/ListOutput.jsx","webpack:///./src/app/session/store/reducers/index.js","webpack:///./src/app/shared/lib/bind-reducer/bind-reducer.js","webpack:///./src/app/shared/lib/action-creator/action-states.js","webpack:///./src/app/shared/lib/action-creator/action-creator.class.js","webpack:///./src/app/shared/lib/slugify/slugify.js","webpack:///./src/app/shared/lib/create-url/create-url.js","webpack:///./src/app/shared/lib/number-pretty/number-pretty.js","webpack:///./src/app/shared/lib/smart-number/smart-number.js","webpack:///./src/app/shared/lib/capitalize-first-letter/capitalize-first-letter.js","webpack:///./src/app/shared/lib/patterns/email.js","webpack:///./src/app/shared/lib/patterns/phone-number.js","webpack:///./src/app/shared/lib/patterns/url.js","webpack:///./src/app/shared/lib/random-generator/string.js","webpack:///./src/app/shared/lib/random-generator/unique-id.js","webpack:///./src/app/shared/lib/function-placeholder/index.js","webpack:///./src/app/shared/lib/delay/index.js","webpack:///./src/app/shared/lib/react-dates/isInclusivelyAfterDay.js","webpack:///./src/app/shared/lib/redux-utils/actions.utils.js","webpack:///./src/app/shared/lib/redux-utils/reducers.utils.js","webpack:///./src/app/shared/lib/workload/parseData.js","webpack:///./src/app/session/store/effects/index.js","webpack:///./src/app/shared/lib/rest/try-async.js","webpack:///./src/app/shared/lib/rest/rest-client.js","webpack:///./src/app/session/pages/login/login.page.jsx","webpack:///./src/app/session/components/container/container.component.jsx","webpack:///./src/app/session/pages/login/components/form/form.component.jsx","webpack:///./src/app/shared/components/rest-errors/rest-errors.component.jsx","webpack:///./src/app/shared/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/workload-graph/workload-graph.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-tooltip/custom-tooltip.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-axis-tick/custom-axis-tick.component.jsx","webpack:///./src/app/shared/components/circle-img/circle-img.component.jsx","webpack:///./src/app/shared/components/number-label/number-label.component.jsx","webpack:///./src/app/shared/components/string-label/string-label.component.jsx","webpack:///./src/app/shared/components/search-input/search-input.component.jsx","webpack:///./src/app/shared/components/dropdown/dropdown.component.jsx","webpack:///./src/app/shared/components/small-input/small-input.component.jsx","webpack:///./src/app/shared/components/single-date-picker/single-date-picker.component.jsx","webpack:///./src/app/shared/components/range-date-picker/range-date-picker.component.jsx","webpack:///./src/app/shared/components/JobResults/JobResults.jsx","webpack:///./src/app/shared/components/switch/Switch.jsx","webpack:///./src/app/shared/components/Table/Table.jsx","webpack:///./src/app/session/pages/logout/logout.page.jsx","webpack:///./src/app/dashboard/root.module.jsx","webpack:///./src/app/shared/components/loaders/Loader/Loader.jsx","webpack:///./src/app/shared/components/loaders/ParameterLoader/ParameterLoader.jsx","webpack:///./src/app/shared/components/layout/Paper/Paper.jsx","webpack:///./src/app/shared/components/layout/Main/Main.jsx","webpack:///./src/app/shared/components/layout/Section/Section.jsx","webpack:///./src/app/shared/components/layout/ScrollableContainer/ScrollableContainer.jsx","webpack:///./src/app/shared/components/layout/Column/Column.jsx","webpack:///./src/app/shared/components/layout/Row/Row.jsx","webpack:///./src/app/dashboard/containers/status/status.container.jsx","webpack:///./src/app/dashboard/containers/status/components/daemon/daemon.component.jsx","webpack:///./src/app/dashboard/containers/status/components/job-status/job-status.component.jsx","webpack:///./src/app/dashboard/containers/search-area/search-area.container.jsx","webpack:///./src/app/dashboard/components/search-results/search-results.component.jsx","webpack:///./src/app/shared/components/controls/Input/Input.jsx","webpack:///./src/app/shared/components/controls/Button/Button.jsx","webpack:///./src/app/shared/components/overlays/ModalFooter/ModalFooter.jsx","webpack:///./src/app/shared/components/overlays/ErrorModal/ErrorModal.jsx","webpack:///./src/app/shared/components/overlays/ConfirmationModal/ConfirmationModal.jsx","webpack:///./src/app/dashboard/store/reducers/index.js","webpack:///./src/app/shared/store/reducers/index.js","webpack:///./src/app/shared/store/effects/index.js","webpack:///./src/app/root.module.jsx","webpack:///./src/app/core/root.layout.jsx","webpack:///./src/app/jobs/root.module.jsx","webpack:///./src/app/jobs/components/job-item/job-item.component.jsx","webpack:///./src/app/jobs/components/job-status/job-status.component.jsx","webpack:///./src/app/jobs/containers/filters/filters.container.jsx","webpack:///./src/app/shared/store/selectors/connections.js","webpack:///./src/app/jobs/containers/jobs-invocations/jobs-invocations.container.jsx","webpack:///./src/app/shared/lib/deep-copy/deep-copy.js","webpack:///./src/app/entities/root.module.jsx","webpack:///./src/app/users-manager/root.jsx","webpack:///./src/app/users-manager/users/root.jsx","webpack:///./src/app/users-manager/groups/root.jsx","webpack:///./src/app/explorer/root.jsx","webpack:///./src/app/explorer/treeview/root.jsx","webpack:///./src/app/explorer/components/DbObjects/DbObjects.jsx","webpack:///./src/app/core/containers/sidebar/sidebar.container.jsx","webpack:///./src/app/core/containers/sidebar/components/favorites/favorites.component.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/navigation.component.jsx","webpack:///./src/app/core/containers/sidebar/components/notification/notification.component.jsx","webpack:///./src/app/core/containers/sidebar/components/user-menu/user-menu.component.jsx","webpack:///./src/app/core/containers/sidebar/components/compile/compile.component.jsx","webpack:///./src/app/job-process/root.module.jsx","webpack:///./src/app/session/store/actions/session.action.js","webpack:///./src/app/session/store/effects/check-authorization/check-authorization.effect.js","webpack:///./src/app/constants.js","webpack:///./src/app/session/store/effects/login/login.effect.js","webpack:///./src/app/session/store/effects/logout/logout.effect.js","webpack:///./src/assets/images/login_graphic.svg","webpack:///./src/assets/images/vendita_logo_blue.svg","webpack:///./src/assets/images/mas_logo_blue.svg","webpack:///./src/app/shared/components/range-date-picker/range-date-range-picker.container.jsx","webpack:///./src/app/shared/store/actions/jobs.action.js","webpack:///./src/app/shared/store/actions/process.action.js","webpack:///./src/app/shared/store/actions/global-filters.action.js","webpack:///./src/app/dashboard/store/actions/filter-status.action.js","webpack:///./src/app/shared/api/daemon.js","webpack:///./src/app/dashboard/store/selectors/index.js","webpack:///./src/app/dashboard/containers/servers-list/ServersList.jsx","webpack:///./src/app/shared/store/effects/jobs/jobs.effect.js","webpack:///./src/app/shared/store/effects/connections/connections.effect.js","webpack:///./src/app/shared/store/effects/search-jobs/search-jobs.effect.js","webpack:///./src/app/shared/store/effects/search-processes/search-processes.effect.js","webpack:///./src/app/shared/store/effects/global-filters/global-filters.effect.js","webpack:///./src/app/users-manager/store/reducers/index.js","webpack:///./src/app/users-manager/groups/store/reducer.js","webpack:///./src/app/explorer/store/reducers/index.js","webpack:///./src/app/executive-dashboard/store/reducers/index.js","webpack:///./src/app/license-allocation/store/reducers/index.js","webpack:///./src/app/entities/reducer.js","webpack:///./src/app/dashboard/store/reducers/daemon.js","webpack:///./src/app/job-process/store/reducer.js","webpack:///./src/app/core/store/middlewares.js","webpack:///./src/app/core/store/reducers/index.js","webpack:///./src/app/core/store/actions/notification.action.js","webpack:///./src/app/jobs/components/job-list/job-list.component.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ScheduleModal/ScheduleModal.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ViewTabs/ViewTabs.jsx","webpack:///./src/app/jobs/containers/Schedule/components/Documentation/Documentation.jsx","webpack:///./src/app/jobs/containers/Schedule/containers/ScheduleForm/ScheduleForm.jsx","webpack:///./src/app/shared/components/form/editors/formatters.js","webpack:///./src/app/shared/components/form/parameters/extractDefault.js","webpack:///./src/app/job-process/components/notification-groups/notification-groups.jsx","webpack:///./src/app/job-process/components/notification-users/notification-users.jsx","webpack:///./src/app/job-process/components/notification-events/notification-events.jsx","webpack:///./src/app/job-process/components/notification-list/notification-list.jsx","webpack:///./src/app/entities/components/Entity.jsx","webpack:///./src/app/entities/containers/SelectedEntity.jsx","webpack:///./src/app/entities/components/ActionsNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/EditNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/DeleteNamespace.jsx","webpack:///./src/app/entities/components/ActionsConstant.jsx","webpack:///./src/app/shared/api/constant.js","webpack:///./src/app/entities/components/ActionsProcess.jsx","webpack:///./src/app/entities/components/process-actions/EditProcessModal.jsx","webpack:///./src/app/entities/components/process-actions/ProcessEditor.jsx","webpack:///./src/app/entities/components/ActionsForm.jsx","webpack:///./src/app/entities/components/form-actions/FormParameters.jsx","webpack:///./src/app/entities/components/ActionsRoot.jsx","webpack:///./src/app/entities/components/ActionsPrototype.jsx","webpack:///./src/app/entities/components/ActionsSchedule.jsx","webpack:///./src/app/entities/components/ActionsCommon.jsx","webpack:///./src/app/entities/components/common-actions/DeleteEntity.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesModal.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesEditor.jsx","webpack:///./src/app/users-manager/components/HeaderPageSwitch/HeaderPageSwitch.jsx","webpack:///./src/app/users-manager/users/containers/UserLoader.jsx","webpack:///./src/app/users-manager/users/pages/UserView/UserView.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/Privileges.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/UserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserDetails.jsx","webpack:///./src/app/users-manager/users/pages/UserView/components/UserDatesBox.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserInfo.jsx","webpack:///./src/app/users-manager/components/UserCard/UserCard.jsx","webpack:///./src/app/users-manager/users/pages/NoUsersSelected.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/CreateNewUser.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/NewUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/components/GroupCard/GroupCard.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/GroupView.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/Privileges.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/GroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditGroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditSubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/CreateNewGroup.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/pages/NoGroupSelected.jsx","webpack:///./src/app/explorer/treeview/layers/Dbms/Dbms.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/ServerList.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/containers/Server/Server.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/DatabaseList.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/containers/Database/Database.jsx","webpack:///./src/app/explorer/containers/Breadcrumbs/Breadcrumbs.jsx","webpack:///./src/app/explorer/components/ContentSwitch/ContentSwitch.jsx","webpack:///./src/app/explorer/containers/AllDbms/AllDbms.jsx","webpack:///./src/app/explorer/containers/AllServers/AllServers.jsx","webpack:///./src/app/explorer/containers/Settings/ServerSettings.jsx","webpack:///./src/app/explorer/containers/AllDatabases/AllDatabases.jsx","webpack:///./src/app/explorer/containers/Workload/Workload.jsx","webpack:///./src/app/explorer/containers/License/License.jsx","webpack:///./src/app/explorer/containers/License/Report/Report.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesUsage/FeaturesUsage.jsx","webpack:///./src/app/explorer/components/LicenseReporting/UnusedFeatures/UnusedFeatures.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesTable/FeaturesTable.jsx","webpack:///./src/app/explorer/containers/Storage/Storage.jsx","webpack:///./src/app/explorer/containers/Storage/MSSQL/MssqlStorage.jsx","webpack:///./src/app/explorer/containers/Objects/Objects.jsx","webpack:///./src/app/explorer/containers/Sessions/Sessions.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/CommonSessionsTable.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/MssqlSessionsTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSQLStatements.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/charts/ElapsedTimeChart.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/OracleTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/PostgresTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MysqlTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MssqlTopSQLTable.jsx","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/ToggleSystemExplorerView.jsx","webpack:///./src/app/explorer/components/TableView/SystemExplorerTable.jsx","webpack:///./src/app/shared/api/compile.js","webpack:///./src/assets/images/mas_logo_white.svg","webpack:///./src/assets/images/vendita_logo_white.svg","webpack:///./src/app/job-process/job-view.jsx","webpack:///./src/app/job-process/job-form.jsx","webpack:///./src/app/job-process/containers/output/output.jsx","webpack:///./src/app/job-process/components/ListOutput/ListOutput.jsx","webpack:///./src/app/job-process/components/JobStatus/JobStatus.jsx","webpack:///./src/app/executive-dashboard/ExecutiveDashboard.jsx","webpack:///./src/app/executive-dashboard/components/RefreshDashboard/RefreshDashboard.jsx","webpack:///./src/app/executive-dashboard/components/ToggleDashboard/ToggleDashboard.jsx","webpack:///./src/app/executive-dashboard/containers/ToggleSelection/ToggleSelection.jsx","webpack:///./src/app/executive-dashboard/components/ServersNetworkTile/ServersNetworkTile.jsx","webpack:///./src/app/executive-dashboard/components/LicensableFeaturesGraph/LicensableFeaturesTile.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionItem/OptionItem.jsx","webpack:///./src/app/executive-dashboard/components/OperatingSystemsTile/OperatingSystemsTile.jsx","webpack:///./src/app/executive-dashboard/components/LicenseDeltaTile/LicenseDeltaTile.jsx","webpack:///./src/app/license-collection/LicenseCollection.jsx","webpack:///./src/app/license-collection/components/Navigation/Navigation.jsx","webpack:///./src/app/license-collection/Pages/Hardware/Hardware.jsx","webpack:///./src/app/license-collection/utils/extractDefault.js","webpack:///./src/app/license-collection/Pages/Software/Software.jsx","webpack:///./src/app/license-collection/Pages/VMware/VMware.jsx","webpack:///./src/app/license-collection/Pages/Packaging/Packaging.jsx","webpack:///./src/app/shared/components/overlays/SuccessModal/SuccessModal.jsx","webpack:///./src/app/license-collection/utils/downloadFile.js","webpack:///./src/app/license-collection/Pages/PreSoftware/PreSoftware.jsx","webpack:///./src/app/license-allocation/LicenseAllocation.jsx","webpack:///./src/app/license-allocation/components/AllocatedLicensesTable/AllocatedLicensesTable.jsx","webpack:///./src/app/license-allocation/components/assign-license-modal/AssignLicenseModal.jsx","webpack:///./src/app/licensing/Licensing.jsx","webpack:///./src/i18n/index.js","webpack:///./src/i18n/en/index.js","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/scoped-css-mui-compatibility.js","webpack:///./src/assets/fonts/Lato-Regular.ttf","webpack:///./src/assets/fonts/OpenSans-Regular.ttf"],"names":["CONSTANTS","defaultConstants","Text","forwardRef","ref","options","validate","defaultValue","value","required","reactToChange","props","useState","shouldValidate","setShouldValidate","validation","useMemo","check","useField","touched","name","field","meta","helpers","formikCtx","useFormikContext","useEffect","setValue","setTouched","multiline","isPopup","undefined","setError","length","selected","find","o","description","disableClearable","id","getOptionLabel","option","label","getOptionDisabled","disabled","onChange","e","renderInput","params","type","error","helperText","Email","validations","merge","email","PhoneNumber","phone","Integer","required_not_null","Password","BOOL_OPTIONS","BooleanSelect","Date","moment","format","utc","fullWidth","utils","MomentUtils","disableToolbar","inputVariant","KeyboardButtonProps","date","Time","ampm","mask","Select","isNamespace","getOptionSelected","desription","LOAD_ALL_ACCOUNTS","CHANGE_STATE","LOAD_ALL_LICENSES","LOAD_TOP_SQL_STATEMENTS","LICENSE_FULL_REPORT","PROVIDE_SERVERS_USAGE","LOAD_STORAGE_POINTS","SET_STORAGE_NS","LOAD_STORAGE_DETAILS","LOAD_OBJECT_DETAILS","SET_SELECTED_OBJECT","LOAD_SESSIONS","PROVIDE_DB_LAST_BACKUP","PROVIDE_DB_STATUS","UPDATE_DB_STATUS","LOAD_PROTOCOLS","LOAD_COLLECTION_PROCESS","EXECUTE_COLLECTION_PROCESS","LOAD_MSSQL_DISK_IO","LOAD_MSSQL_STORAGE_USED","LOAD_MSSQL_FILE_STORAGE","icons_map","success","mdiCheckDecagram","fail","mdiAlertDecagram","Result","children","className","classnames","fontSize","d","propTypes","oneOf","node","ResultText","compact","bool","ResultMessages","messages","map","msg","index","key","text","split","Messages","loadAllAccountsThunk","payload","dispatch","getState","creators","loading","RestClient","get","BASE","ENDPOINTS","ACCOUNTS","page_size","response","data","protocols","explorer","from","provideServersUsageThunk","provideDBLastBackupThunks","provideDBStatusThunks","loadProtocolsThunk","PROTOCOLS","changeStateThunk","newState","action","loadAllLicensesThunk","JOBS","loadTopSQLStatementsThunk","postInvocation","creationResult","invocations","invocationUuid","uuid","statusChecksCount","isFinished","sleep","fetchInvocation","bind","invocationStatus","invocation","status","fetchInvocationOutput","invocationOutput","result","outputs","timeout","ms","Promise","resolve","setTimeout","fn","args","getLicenseReportThunk","fullPath","dbconn","Array","isArray","reportData","loadSessionsThunk","filters","SESSIONS","sort","loadSessionsByProcessThunk","protocol","dbmsProperty","TopSqlStatementsUtil","getDbmsPropertyName","parameters","oformat","process","SystemExplorerFeatureUtil","getSessionsEndpoint","timestamp","resultTxt","statementsJson","sessionsData","JSON","parse","sessionsLoaderResolver","shouldLoadSessionsByProcess","enableSessionsLoadingFlag","disableSessionsLoadingFlag","loadStorageDetailsThunk","STORAGE_DF","setStorageItemThunk","ns","loadStoragePointsThunk","STORAGE_TS","loadMssqlStorageDataThunk","storageKey","resultJson","invocationOutputPoller","output","parseInvocationResult","loadObjectsThunk","objectApis","path","allSettled","api","dbms","allData","res","loadObjectsByProcessThunk","getObjectsEndpoint","objectsJSON","item","objectsLoaderResolver","shouldLoadObjectsByProcess","setSelectedObjectThunk","servers","structured","slice","usageResult","server","loadUsagePerDb","filter","push","address","usage","highLoadCount","a","b","parseFloat","Oracle","r","Mysql","Pgsql","Mssql","databases","db","special","database","dbLastBackup","loadDBLastBackup","backup","dbStatus","loadDBStatus","message","dbName","refreshServerDbsStatusThunk","retrieveDBStatus","shell","DB_STATUS","toString","toLowerCase","parseInt","refreshDBStatusThunk","selectedDBMS","sv","loadProcessDetailsThunk","PROCESSES","details","processes","executeCollectionProcessThunk","HOST_CPU","s","DB_LAST_BACKUP","isValid","PROVIDE_EXECUTIVE_DASHBOARD","PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD","SELECT_ALL","DESELECT_ALL","TOGGLE_SERVER","LOAD_NETWORK_NODES","LOAD_NETWORK_EDGES","LOAD_SERVER_DETAILS","LOAD_OS_TYPE","LOAD_DB_EDITION","LOAD_DB_VERSION","LOAD_USAGE","LOAD_USAGE_STAT","LOAD_LICENSE_DELTA","LOAD_ALL_GROUPS","LOAD_GROUP","DELETE_GROUP","GRANT_PRIVILEGE","REVOKE_PRIVILEGE","ADD_USERS_TO_GROUP","REMOVE_USERS_FROM_GROUP","REMOVE_GROUPS_FROM_GROUP","PATCH_SELECTED_GROUP","CREATE_GROUP","DbmsType","ORACLE","POSTGRES","MYSQL","MSSQL","OTHER","DbmsFeature","WORKLOAD","TOP_SQL","OBJECTS","STORAGE","LICENSE_REPORTING","FEATURE_BY_TYPE_MAP","LOAD_SESSIONS_BY_PROCESS","LOAD_OBJECTS_BY_PROCESS","LOAD_STORAGE_BY_PROCESS","OBJECTS_SIDEBAR_DISABLED","SESSIONS_ENDPOINT_MAP","OBJECTS_ENDPOINT_MAP","DBMS_LIST_ORDER","OBJECTS_DATA_MAPPERS","OBJECT_NAME","CREATED","create_date","OBJECT_ID","object_id","LAST_DDL_TIME","modify_date","dbmsType","feature","includes","isFeatureAllowed","fullName","startsWith","startIdx","lastIndexOf","substr","MONTH_LIST","WEEKDAYS_LIST","CronValidator","minutes","isValidNumberValue","cleanValue","hours","days","month","isValidAlternativeValue","weekDay","time","maxVal","zeroAllowed","every","part","isValidNumberPart","rangeNumbersArr","el","isValidNumberRange","timeNumber","trim","dataArray","element","allowedValues","isValidAlternativePart","rangeValues","isValidAlternativeRange","indexOf","values","FORMAT_MSG","MINUTES","HOURS","DAYS","MONTH","DAY_OF_WEEK","EVERY_HOUR_WARNING","ALLOWED_MINUTES_OPTIONS","LOAD_ALL_USERS","SELECT_USER","LOAD_USER","ADD_USER_TO_GROUPS","REMOVE_USER_FROM_GROUPS","DEACTIVATE_USER","CREATE_USER","fetchEntities","promises","ENTITY_TYPES_FETCH","query","url","concat","encodeURIComponent","promise","entityType","fetchEntity","eType","definition","desc","console","warn","selectEntity","entity","clearSelectedEntity","setFilterType","setFilterSearch","openModal","actions","sessionActions","jobsActions","processActions","globalFiltersActions","pipe","fns","arg","reduce","prev","filterBy","selector","equalityFn","retrieveFilteredAccounts","state","accounts","nodes","stateValue","currentValue","Object","keys","currentServer","retrieveServerEntry","structure","entry","retrieveDatabaseEntry","getStatePath","getStructured","getSessions","sessions","getSessionsFlags","flags","getTopSqlStatements","topSqlStatements","getTopSqlStatementsFlags","getStoragePointsLoadingFlag","storage","loadingPoints","getStorageDetailsLoadingFlag","loadingDetails","getSelectedStorage","getStoredEntries","storedEntries","getSelectedObject","objects","selectedObject","getSelectedOwner","selectedOwner","getObjectsEntries","getObjectsLoadingFlag","getMssqlDiskIO","mssqlDiskIO","getMssqlStorageUsed","mssqlStorageUsed","getMssqlFileStorage","mssqlFileStorage","getFullPath","createSelector","pathArr","haveStorageData","selectedStorage","getFormattedStorage","isLoading","points","_","point","Used_MB","Total_MB","Tablespace","freePerc","freeGB","Free_MB","totalGB","usedGB","haveObjectsData","selectedObjects","getStorageDetailsData","list","selectedNS","tablespace","files","TABLESPACE_NAME","getMssqlStorageDetails","diskIO","storageUsed","fileStorage","getStructuredObjects","tree","acc","forEach","object","OWNER","owner","getInvalidObjects","invalidObjects","included","findIndex","STATUS","getSelectedObjectData","isObject","getObjectsDataByProcess","objectsSelectorResolver","getSortedSessions","sortFunction","order","sortKey","getTime","selectTopSqlStatements","statementsTxt","getBackup","backups","getDBStatus","statuses","getDBStatusInfo","info","dbMessage","STATUS_TYPES","down","up","notConnected","notFound","getDBMSStatus","allStatuses","getDBMSStatusInfo","dbmsStatus","getServerStatus","getServerStatusInfo","serverStatus","getEntityPendingStatus","en","LightTooltip","withStyles","tooltip","color","backgroundColor","letterSpacing","lineHeight","fontFamily","Tooltip","LimitlessTooltip","maxWidth","RSAKey","FQName","recieved","fqname","namespace","parts","initial","join","last","style","marginBottom","NamespaceSelect","QualifiedName","masName","AccountSelect","showUrls","setShowUrls","boxName","showToggle","useCallback","target","checked","inlineLoader","ADDITIONAL_ACCOUNT_FILTERS","filterFn","deepCopy","account","formatAccount","Boolean","size","PLATFORMS","tester","PROCESS_TYPES","PlatformSelect","platformValue","platform","processValue","reverse","test","ProcessTypeSelect","typeValue","ProcessSelect","p","OPTIONS","appearance","is_executable","customVal","namespaces","FormPrototypeSelect","prototype","ModeSelect","mode","modes","enumerations","variadicListReducer","produce","draft","deflt","pop","useVariadicList","useReducer","replvars","Variadic","displayDeftlDesc","selectedProcess","Header","Title","Content","dataType","Fragment","VariadicInstance","defltDesc","types","display","alignItems","justifyContent","onClick","name_base","parsedDeflt","replace","firstCharLetter","Multiline","open","setOpen","InputProps","startAdornment","title","cursor","mdiArrowExpand","width","height","variant","Footer","Right","Replvalues","valuesNr","replvaluesParams","i","replvalues","repl","Uuid","InvocationStatus","NEW","ALL","NOT_FETCHED","ABORTED","SCHEDULED","SUCCEEDED","FAILED","EXECUTING","DELAYED","KILLED","AllowOutputFor","AllowGeneralEditingFor","CannotShowStatusFor","FAILURES","SUCESSES","WARNINGS","hasWritePrivileges","privileges","effective","hasOnlyReadPrivilege","isOnlySelectGroup","userDetails","toJS","member_of","isAdmin","LOAD_LICENSES","LOAD_DB_LICENSES","LOAD_LICENSE_TARGETS","LOAD_AVAILABLE_SERVERS","SubmitButton","confirmation","submitForm","isSubmitting","isValidating","dirty","modalActions","close","log","minWidth","maxHeight","icon","scrollable","BodyText","Left","fontStyle","fontWeight","marginTop","AvatarCard","avatar","onSelect","focusable","onFocus","event","stopPropagation","tabIndex","data-qa","alt","src","fallback","containEvent","placement","mdiInformationOutline","preventDefault","shape","string","func","mergeValidations","callbacks","provided","checkRequired","Yup","nullable","checkRequiredNotNullable","checkEmail","validateSync","checkPhoneNumber","matches","excludeEmptyString","checkUnsignedInt","checkName","checkFirstLetter","checkUuid","noop","unsigned_int","unsigned_float","signed_float","DAY","formatTimePeriod","timeMillis","millisLeft","seconds","Math","floor","body","post","requestInvocation","pollerFinished","succeeded","this","resultJsonString","localState","shared","jobsSelector","connectionsSelector","jobsSearchedSelector","processesSearchedSelector","globalFiltersSelector","getCurrentUserName","session","getCurrentUserDetails","loadAllUsersThunk","USERS","loadUserThunk","grantPrivilegeThunk","user","patch","revokePrivilegeThunk","addUserToGroupsThunk","groups","allUsers","errorMsg","removeUserFromGroupsThunk","deactivateUserThunk","createUserThunk","username","password","refreshed","loadAllGroupsThunk","GROUPS","loadGroupThunk","createGroupThunk","groupname","group","removeUsersFromGroupThunk","removeSubGroupsThunk","addUsersToGroupThunk","users","all","removeGroupThunk","delete","getInitialValues","initialValues","parameter","getValidationSchema","validationSchema","is_required","formatParameters","loadExecutiveDashboardThunk","EXECUTIVE_DASHBOARD","deselectAllThunk","selectAllThunk","rawEntries","executiveDashboard","toggleServerThunk","allServers","selectedServers","svIndex","nrCores","loadVirtualExecutiveDashboardThunk","VIRTUAL_EXECUTIVE_DASHBOARD","loadNetworkNodesThunk","serverId","loadNetworkEdgesThunk","loadServerDetailsThunk","loadOSTypeThunk","loadDBEditionThunk","loadDBVersionThunk","loadUsageThunk","loadUsageStat","serverPrefix","serverSuffix","usageStatResponse","obj","assign","totalRisk","total_risk","licenseCost","license_cost","supportCost","support_cost","unallocatedLicenses","unallocated_licenses","loadLicenseDeltaThunk","extractParameter","others","editor","additional","field_name","TextParameter","passable","PasswordParameter","PhoneNumberParameter","BooleanParameter","IntegerParameter","EmailParameter","ProcessParameter","AccountParameter","VariadicParameter","ReplvaluesParameter","FQNameParameter","RSAKeyParameter","MultilineParameter","UuidParameter","getQuery","invocation_viewer","getInvocation","getInvocationStatus","Ensure","connect","entitySelectors","request","Ensurer","fresh","Loading","ParameterLoader","Loader","LINUX_OS_PRIMARY_COLOR","LINUX_OS_SECONDARY_COLOR","WINDOWS_OS_PRIMARY_COLOR","WINDOWS_OS_SECONDARY_COLOR","SE_DB_PRIMARY_COLOR","SE_DB_SECONDARY_COLOR","EE_DB_PRIMARY_COLOR","EE_DB_SECONDARY_COLOR","DB_VERSION_COLOR_PALETTE","secondaryColor","SearchableList","items","visibleScroll","scrolled","setScrolled","onWheel","currentTarget","scrollTop","scroller","setQuery","filtered","scrollBy","top","deltaY","left","deltaX","array","defaultProps","authorizationSelector","currentUserSelector","loginSelector","beVersionSelector","beLicenceSelector","beHealthSelector","ENTITY_TYPES","dataEnclosure","ROOT_ENTITY","getBreadcrumbs","entities","breadcrumbs","collectData","namespacesWithMeta","collection","aliases","alias","alias_type","aliasedEntity","dataItem","ownNamespace","selectors","def","fetch_status","namespaceWithMetaSelector","dataNamespaces","getFilteredEntities","accumulator","getEntitiesAsHashMap","filteredEntities","search","domainArray","paths","findEntity","notPersisted","getEntities","entitiesMap","roots","entityName","names","isSelected","columns","breadcrumb","level","rows","bucket","entityLevel","getSelectedEntity","namespaceChildrenListSelector","selectedEntity","mapUsersData","mapLoadedUser","mapSortInsensitive","localeCompare","copyTextToClipboard","textToCopy","makeCopyToClipboard","copyToClipboard","getOutputText","navigator","permissions","then","clipboard","writeText","legacyMethod","textArea","document","createElement","appendChild","classList","add","focus","select","execCommand","removeChild","NavigationTab","active","tabs","indicatorColor","textColor","tab","React","PureComponent","getGroupDescription","allGroups","groupDetails","isAllowedProtocol","isSessionsAllowed","isObjectsAllowed","isStorageAllowed","postAccount","patchAccount","deleteAccount","getConnection","patchConnection","postFile","file","UPLOAD_ACCOUNTS","ALLOWED_DBMS","ALLOWED_FOR_CHARTS","PROCESS_ENDPOINT_MAP","DBMS_PROPERTY_NAME_MAP","supportedDataTypes","dataTypes","prototypes","position","Number","MAX_SAFE_INTEGER","data_type","substring","is_supported","extractDefault","getLabel","getIcon","labels","icons","target_working_dir","target_shell","repo_shell","repo_working_dir","form","vsphere_account","vcenterservername","partitioning_methods","mdiFolderHome","mdiLanConnect","mdiSourceRepository","mdiHexagonMultipleOutline","mdiCubeOutline","TextField","placeholder","endAdornment","mdiHelpCircleOutline","filterDbmsByShell","formValues","shellAccount","dbmsAccount","ADDITIONAL_OPTIONS_FILTERS","DropdownField","datatypes","rawAccounts","forms","currentFormValues","datatype","additionalFilter","opt","meta2","readOnly","toggle","onSendByEmail","processName","sendToEmail","OutputModal","content","interval","modalDetails","setMessage","sendToEmailWarningOpen","setSendToEmailWarningOpen","setInterval","clearInterval","errors","minHeight","postSchedule","getSchedule","patchSchedule","mapAccountsTree","splitIntoRootsByProtocol","root","splitIntoRootsByAddress","splitIntoRootsByDatabase","serversMap","existingEntry","databaseMap","mapAccountsNewStructure","raw","protocolsArr","dbServer","dbmsServerEntry","otherIndex","splice","mapProtocols","is_abstract","special_required","mapUpdateDBStatus","existingDb","mapLicenseReport","currentItem","DETECTED_USAGES","USED","NAME","_mapUsedLicense","UNUSED","FEATURES","license","USAGES","VERSION","LAST_USE","LAST_USAGE_DATE","FIRST_USE","FIRST_USAGE_DATE","SystemExplorerViewMode","TILES","TABLE","saga","createSagaMiddleware","persistConfig","storageSession","whitelist","configStore","appReducer","persistReducer","combineReducers","core","sessionReducer","dashboard","dashboardReducer","sharedReducer","usersManager","usersManagerReducer","groupsReducer","createReducer","explorerReducer","executiveDashboardReducer","daemon","licenseAllocation","licenseAllocationReducer","effects","sessionEffects","sharedEffects","store","createStore","routing","window","location","reload","composeWithDevTools","applyMiddleware","thunk","effect","run","LICENSABLE_FEATURE_DEFAULT_COLOR","LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR","LICENSABLE_FEATURES_COLORS","Context","createContext","Switch","Provider","Case","useContext","ROOT_NODE_ID","ROOT_NODE","widthConstraint","SERVER_NODE_COLOR","SERVER_NODE_SHAPE","DB_NODE_COLOR","DB_NODE_SHAPE","NODE_SIZE_MULTIPLIER","BASE_NETWORK_GRAPH_OPTIONS","layout","hierarchical","edges","fetchProtocols","ProcessParameters","editable","allValues","xs","normalize","chunk","spacing","normalized","space_begone","space_summon","param","defaults","defineEditor","maybeDisabled","parseProtocols","metaEditor","proto","sortBy","Notifications","getEventTypeIcons","jobStart","jobCompletion","abnormalEvent","notice","fullLog","toggleApplyButton","setState","isEditing","checkIfAllUsersSelectedCurrentGroup","selectedGroup","getSelectedGroup","usersData","onSelectGroup","groupsData","onSelectUser","setFlagGroupsIfContainSelectedUser","onSelectUserAction","shouldClear","displayIcons","onSelectEventType","recievedData","events","areUsersSelected","isClearActionAvailable","isGroupSelected","eventTypeIcons","onApply","mappedState","getProcess","patchProcess","ChartTooltip","assignedValue","usedValue","ownedValue","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","NAV_POSITION_TOP","ANCHOR_LEFT","WEEKDAYS","MODIFIER_KEY_NAMES","Set","RepeatableParameter","Parameter","is_repeatable","SimpleSearchInput","stretchContent","PropTypes","filterStatusSelector","filterStatusActions","checkDeamonStatus","checkDaemon","AddServerCard","trigger","AddNewServerContainer","AddNewServer","reloadAccounts","ModalContext","formRef","useRef","resp","mdiDns","formikRef","handleSubmission","isNew","AddDatabaseCard","AddNewDatabaseContainer","AddNewDatabase","fetchDataTypes","pr","mr","data_types","mdiDatabase","ImportCSV","ImportCSVContainer","ImportCSVFile","selectedFile","setSelectedFile","setResult","fileName","htmlFor","accept","downloadFile","DOWNLOAD_CSV_TEMPLATE","FormData","append","catch","deleteEntity","deleteInvocation","mapScheduledNames","allScheduled","nameArr","ActionCard","settings","addOnly","readOnlyOptions","lastBackup","statusInfo","addable","mdiContentSave","role","capitalizeFirstLetter","fillable","percentage","CardsLayout","want","Unresolved","keygen","settler","wantComponent","Picked","ChangePassword","useLinkTrigger","done","confirm","onSubmit","setSubmitting","innerRef","handleSubmit","ChangePasswordContainer","selectedUser","OptionsList","licensesInfoMock","license_id","product_name","product_id","metric","lic_total","lic_assigned","lic_avail","licenseTargetsMock","server_id","quantity","loadLicenseAllocationThunk","LICENSES_INFO","loadDbLicensesThunk","loadLicenseTargetsThunk","loadAvailableServersThunk","AVAILABLE_SERVERS","availableServersData","updateLicenseAssignmentThunk","isInitialAssignment","SUBMIT_LICENSE_ASSIGNMENT","put","UPDATE_LICENSE_ASSIGNMENT","getLicensesData","licenses","licensesLoading","getDbLicensesData","dbLicenses","dbLicensesLoading","getLicenseTargetsData","licenseTargets","licenseTargetsLoading","getAvailableServersData","availableServers","availableServersLoading","Modal","providedId","aria","onClose","disableBackdropClick","oneOfType","ModalHeader","getNamespace","patchNamespace","postNamespace","postForm","createForm","updateForm","pointers","instances","instance","fields","PackedContext","FormEditor","initialPacked","groupForm","cloneDeep","split_name","packed","contextValue","validateOnChange","form_name","protoName","extracted","extractFieldInfo","exclusions","filteredExtractions","val","packedCopy","set","unpacked","ungroupForm","v","rename","version","request_args","unshift","key_struct","entries","matched","exec","lower","mapAllServers","groupServers","entryInfo","srvname","model","sid","collDate","Ncore","totalDBs","eelic_count","selic_count","sids","installedOptions","aa_count","ac_count","as_count","dv_count","mt_count","adg_count","rac_count","olap_count","part_count","in_mem_db_count","rac_one_node_count","real_app_test_count","totalInstalledOptions","mapVirtualServers","vmname","vmguesthostname","vmguestos","vmipaddress","hosts_nr","cpu","cpucores","allSids","o1","o2","diff","CenterComponent","isRequired","isBeforeDay","isMoment","aYear","year","aMonth","bYear","bMonth","isSameYear","Overflow","component","nodeRef","scrollableX","setScrollableX","scrollableY","setScrollableY","scrolledX","setScrolledX","scrolledY","setScrolledY","Tag","onScroll","scrollLeft","current","box","clientWidth","clientHeight","scrollHeight","scrollWidth","closeable","providedAria","changedForm","context","fieldChanged","changed","Checkbox","rest","control","checkedIcon","task","duration","running","runTask","start","stop","ServerForm","editing","submission","setSubmission","passwordEditable","setPasswordEditable","showRSA","setShowRSA","handleAccountCreation","getCreateAccountHandler","allowedProtocols","availablePorts","default_port","host","port","server_password","user_key","confirm_server_password","rsa_key","loadNewAccountHandler","validateOnBlur","validateOnMount","formik","setFieldValue","PasswordOrRSA","allowed","onInput","request_body","server_user","DATATYPES","DatabaseForm","mapAccountValues","confirm_password","selectedProtocol","allowRSA","allow_rsa_key","withDatabase","withMode","padded","handler","blobData","blob","Blob","blobURL","URL","webkitURL","createObjectURL","tempLink","href","setAttribute","click","revokeObjectURL","ConnectedDeleteJobModal","globalFilters","getJobs","sharedActions","dispatchLoading","DeleteJobModal","terminator","startDate","unix","endDate","end","asDays","date_invoke","period","getQSP","mdiTrashCan","Schedule","setFilledValues","filledValues","selectedOption","setSelectedOption","canSelectProcess","setCanSelectProcess","onClickHandler","btnLabel","isScheduled","schedule","ConnectedNewNamespace","NewNamespace","isDisabled","classes","handleSubmitNew","SubmitButtonNoDirty","ConnectedFormModal","refresh","FormModal","mdiClipboardCheck","DatabaseSettings","editDbTrigger","deleteDbTrigger","deleteDbOpen","setDeleteDbOpen","deleteDbErrorOpen","setDeleteDbErrorOpen","deleteDbModalActions","deleteDbErrorModalActions","mdiSettings","mdiDelete","EditDatabaseContainer","EditDatabase","row","processQuery","updateInvocation","subject","getBeVersion","getBeLicence","getBeHeath","BeLicenceEffect","BeHealthEffect","BeVersionEffect","BE_VERSION","dispatchSuccess","dispatchFail","BE_LICENCE","BE_HEALTH","getBeHealth","takeEvery","getLoadingAction","TotalJobsCount","jobs","job","boxShadow","borderRadius","getAlias","patchAlias","postAlias","initialState","login","authorization","actionStates","LOADING","currentUser","beVersion","reducerActions","checkAuthorization","setIn","getSuccessAction","fromJS","SUCCESS","getFailAction","FAIL","Error","daemonPoller","withPolling","filterStatus","setFilterStatus","getEventAction","sessionGlobalFilters","subtract","startOf","localStorage","getItem","page_count","total_count","fetching","callFailed","reason","connections","searchResults","setGlobalFilters","nextState","setItem","stringify","logout","removeItem","getConnections","searchJobs","searchProcesses","notifications","addNotifications","removeNotification","notificationIndex","removeIn","notificationActions","WantParameter","number","boolean","variadic_parameter","filterShellByPlatform","shellFieldName","PLATFORM_VALUE_TO_TYPE","PostgreSQL","MySQL","platformTree","platformAddresses","hasOwnProperty","maxPosition","max","virtual","currentGroup","upper","nextGroup","iteration_limit","instanceCount","g","f","grouped","subvalues","dropRight","getPrivileges","isAlias","cls","setPrivileges","granted","role_type","privilege","enitity_name","VerticalUsageBar","fill","viewBox","x","y","rx","ry","SidebarStorageItem","StorageSidebar","selectedItem","mdiFileTableBox","iconMapper","triggers","mdiAlertOutline","tables","mdiTable","indexes","mdiTableColumnWidth","procedures","mdiAlphaPBox","packages","mdiInbox","packageBodies","mdiInboxFull","objectsSidebarMapper","invalidChildren","mdiFileTree","isObjectSelected","isInvalid","invalid","ObjectsSidebar","KPIDisplay","suffix","colorFormatting","digits","valueString","toLocaleString","minimumFractionDigits","maximumFractionDigits","NoDataComponent","mdiHelpRhombusOutline","StorageDetailsList","PCT_USED","FILE_NAME","SIZE_MB","MAXSIZE_MB","filePath","extension","chartType","loader","toFixed","is3D","colors","rootProps","StorageViewer","ObjectsViewer","sidebarDisabled","objectsDataMapper","getObjectsDataMapper","mdiArrangeBringToFront","mdiFlashCircle","formatMemorySizeGb","bytes","STATUS_LABEL_MAP","StatusLabel","navigationItems","to","qaClass","mdiClipboardPlayMultipleOutline","mdiShieldCheckOutline","invocationPoller","ListOutput","reducer","bindReducer","ActionCreatorHandler","slugify","createUrl","paramsUrl","numberPretty","formatNumber","pow","decimals","smartNumber","charAt","toUpperCase","emailPattern","phoneNumberPattern","urlPattern","randomStringGenerator","possible","random","generateUniqueId","btoa","valueOf","emptyFunc","delay","timer","isInclusivelyAfterDay","STATES","stateKey","unchanged","reducers","reducerInitialState","getWorkloadData","dateRange","isSingleDay","currentDate","jobsWithFormattedInvokedDate","orderBy","groupJobsByDate","groupBy","total","intervalArray","totalDays","getHoursArray","getDaysArray","day","dateArray","CheckAuthorizationEffect","LoginEffect","LogoutEffect","tryAsync","onError","RestClientClass","authentications","basicAuth","accessToken","baseUrl","HOST","client","axios","create","TIMEOUT","baseURL","headers","Accept","head","Cookie","remove","getRequestConfig","LoginPage","history","submit","resetErrors","mapStateToProps","mapDispatchToProps","ContainerComponent","MasLogo","VenditaLogo","LoginGraphic","FormComponent","setShowPassword","prevState","showPassword","handleMouseDownPassword","submitHandler","restErrors","getRestErrors","noValidate","autoComplete","autoFocus","getError","valueChangeHandler","inputProps","InputLabelProps","aria-label","onMouseDown","edge","labelWidth","RestErrorsComponent","JobItemComponent","jobStatus","formatName","nameContainerWidth","getElementById","offsetWidth","starPath","formattedName","canvas","getContext","metrics","measureText","shift","extended","statusChild","local","WorkloadGraphComponent","setSingleDay","activeLabel","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickSize","axisLine","tick","stroke","strokeWidth","fillOpacity","CustomTooltipComponent","nextProps","Component","CustomAxisTickComponent","transform","dy","textAnchor","CircleImgComponent","image","NumberLabelComponent","StringLabelComponent","SearchInputComponent","DropdownComponent","handleToggle","isDropdownOpen","setCloseDropdown","anchorRef","contains","onClickCallback","itemIndex","createRef","parentWidth","isOpen","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClickAway","SmallInputComponent","SingleDatePickerComponent","focused","onDateChange","onFocusChange","numberOfMonths","customInputIcon","mdiCalendarBlank","isOutsideRange","hideKeyboardShortcutsPanel","displayFormat","navPrev","mdiChevronLeft","navNext","mdiChevronRight","RangeDatePicker","renderDayContents","anchorDirection","block","customArrowIcon","mdiArrowLeftRight","customCloseIcon","enableOutsideDays","endDateId","endDatePlaceholderText","horizontalMargin","initialEndDate","initialStartDate","initialVisibleMonth","isDayBlocked","isDayHighlighted","isRTL","keepOpenOnDateSelect","minimumNights","monthFormat","navPosition","onNextMonthClick","onPrevMonthClick","orientation","phrases","calendarLabel","chooseAvailableEndDate","chooseAvailableStartDate","clearDates","closeDatePicker","dateIsSelected","dateIsSelectedAsEndDate","dateIsSelectedAsStartDate","dateIsUnavailable","enterKey","escape","focusStartDate","homeEnd","jumpToNextMonth","jumpToPrevMonth","keyboardBackwardNavigationInstructions","keyboardForwardNavigationInstructions","keyboardShortcuts","leftArrowRightArrow","moveFocusByOneDay","moveFocusByOneMonth","moveFocusByOneWeek","moveFocustoStartAndEndOfWeek","openThisPanel","pageUpPageDown","questionMark","returnFocusToInput","roleDescription","selectFocusedDate","showKeyboardShortcutsPanel","upArrowDownArrow","regular","renderCalendarDay","renderMonthText","reopenPickerOnClearDates","screenReaderInputMessage","showClearDates","showDefaultInputIcon","small","startDateId","startDatePlaceholderText","stateDateWrapper","withFullScreenPortal","withPortal","onDatesChange","focusedInput","JobResults","renderJobsResults","mdiProgressClock","mdiCheckCircleOutline","mdiCalendarArrowRight","mdiStopCircleOutline","mdiTimelineClock","mdiAlertRhombusOutline","mdiCancel","jobName","fromSearch","any","Table","sortBehavior","changeSort","stickyHeader","HeaderCell","column","align","padding","sortDirection","direction","Row","TableRow","Cell","TableCell","LogoutPage","RootModule","filteredJobs","totalFilteredJobs","range","onChangeDatesHandler","entitiesStatus","averageJobs","round","storeFilterStatus","mdiChartTimelineVariant","inline","Paper","flex","PaperHeader","PaperContent","PaperFooter","LeftSideSlot","RightSideSlot","PaperTitle","Main","mdPage","Section","full","SectionTitle","SectionHeader","SectionInfo","SectionContent","Info","ScrollableContainer","Column","StatusContainer","filterJobs","count","executing","scheduled","aborted","failed","Daemon","useSelector","isDaemonRunning","JobStatus","filterByStatus","storeStatus","setStatus","renderContent","dispatchEvent","Search","apiSearchWithDebounce","debounce","searchedTerm","showSearchResults","getSearchResults","QSP","name_filter","page","filterProcesses","processStatus","storedProcesses","results","handleOnChange","searchTerm","clearSearch","getSearchedJobs","setSearchFilter","setTypeFilter","category","totalResults","displayedResults","nameFilter","SearchResultsComponent","renderProcessesResults","mdiPlaySpeed","createURLLink","Input","nrRows","LinkBehavior","Button","link","ModalFooter","ErrorModal","ConfirmationModal","JobsEffect","JobsConnectionsEffect","SearchJobsEffect","SearchProcessesEffect","GlobalFiltersEffect","listen","newLocation","pathname","currentPathname","currentSearch","go","setAuthorization","prevProps","authorizationStatus","exact","Login","Logout","Layout","hot","RootLayout","Jobs","JobProcess","Entities","UsersAndGroups","Explorer","ConnectedExecutiveDashboard","LicenseCollection","LicenseAllocation","Licensing","renderJobItem","loggedUser","toggleWorkloadDisplay","isWorkloadDisplayed","updateQSP","URLSearchParams","has","handleOnTabChange","selectedTab","performFilter","handleOnFilterChange","returnListBasedOnTab","shell_host_address_filter","platform_filter","database_name_filter","user_filter","platform_name_filter","platform_dbms_filter","pageFilters","onSearchInputChange","onKeyDown","loadAllUsers","whiteSpace","paddingTop","selections","excludeStatus","currentTab","ALLOWED_FOR_DELETE","JobItem","canDelete","setUuid","mdiClockOutline","statusMap","PLATFORM","Filters","u","platforms","selectedPlatform","selectedServer","selectedDb","selectedStatus","mdiServer","mdiCircleSlice5","getJobsFiltersOptions","connection","getIn","JobsInvocations","useLocation","useDispatch","ENTITY_ICONS","constant","exception","CachedIcon","searchWithDebounce","searchInput","setSearchInput","renderColumn","colNum","entityIcons","clearCach","sessionStorage","ev","loadingData","UsersAndGroupsPage","UserManagementHeaderLinks","RightSideControls","UserManagementSwitch","useRouteMatch","routes","Link","UsersPage","loadAllGroups","match","userLink","UserSwitch","GroupsPage","groupLink","GroupsPagesSwitch","ops","ExplorerPage","handleClick","anchorElement","handleClose","viewMode","loadProtocols","loadAllAccounts","treeviewData","storeState","newMode","startIcon","aria-controls","aria-haspopup","keepMounted","activePage","switchToTileView","Treeview","DbObjects","loadingFlags","isObjectsSidebarDisabled","RUNNING","STATUS_SPAN","marginLeft","textShadow","STOPPED","SidebarContainer","postgresStatus","beHealth","masSystemsMonitor","masDaemonStatus","uptime1Minute","uptime5Minutes","uptime15Minutes","daysUntilExpire","beLicence","licensed_feature","expirationDate","licenseStatus","paddingRight","pkg","Favorites","mdiStarOutline","Navigation","navId","handlePopoverOpen","handlePopoverClose","setActiveTab","newActiveTab","activeTab","setCurrentNavItem","onMouseEnter","onMouseLeave","subItem","withRouter","Notification","UserMenu","menuAnchorRef","isVisible","openAdminPage","setToggleDropdown","autoFocusItem","Compile","setStep","step","Confirmation","Compiler","textAlign","compilation","setCompilation","postCompile","useQuery","LinkRouter","RouterLink","redirected","OtherMainLinks","PrepareFlow","designation","actionsTypes","CHECK_AUTHORIZATION","LOGIN","LOGOUT","ActionCreator","setBasicAuth","CURRENT_USER","source","INTL","CURRENT_TIME","DAEMON_STATUS","JOB_COUNT","PROTOTYPES","FORMS","FORM","DOWNLOAD_PACKAGING","DELETE_LICENSE_ASSIGNMENT","UPLOAD_SUPPORT_RENEWAL_FILE","UPLOAD_MAS_LICENSE_FILE","Buffer","statusText","loginPath","removeBasicAuth","module","exports","autoFocusEndDate","momentPropTypes","momentObj","DateRangePickerPhrases","omit","DateRangePickerShape","localeData","longDateFormat","DateRangePickerWrapper","GET_JOBS","GET_CONNECTIONS","SEARCH_JOBS","SEARCH_PROCESSES","UPDATE_GLOBAL_FILTERS","SET_FILTER_STATUS","ServersList","getAllAccounts","setAnchorElement","serversNumber","ConnectedServersList","serversUsage","deactivating","debug","groups_update","producers","updating_groups","creating","group_users","group_subgroups","reports","collectionProcesses","hardware","wasExecuted","preSoftware","software","vmware","packaging","base","loadingDiskIO","loadingStorageUsed","loadingFileStorage","rawVirtualServers","virtualServers","network","nodesLoading","edgesLoading","serverDetailsLoading","techDetails","osTypeLoading","dbEditionLoading","dbVersionLoading","licensableFeatures","usageStat","licenseDelta","networkNodes","networkEdges","networkServerDetails","osType","dbEdition","dbVersion","execdashboard","execdashboard_virtual","FETCH_ENTITIES_REQUEST","FETCH_ENTITIES_SUCCESS","FETCH_ENTITIES_FAILURE","FETCH_ENTITIES_ALL_REQUEST","FETCH_ENTITIES_ALL_SUCCESS","FETCH_ENTITIES_ALL_FAILURE","SELECT_ENTITY","CLEAR_SELECTED_ENTITY","UPDATE_FILTERS","DAEMON_STATUS_REQUEST","DAEMON_STATUS_SUCCESS","DAEMON_STATUS_FAILURE","processed","fetchedInvocation","PROCESS_QUERY","FETCH_INVOCATION_SUCCESS","FETCH_INVOCATION_FAILURE","REPLACE_INVOCATION","next","schema","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","JobList","NoJobs","ConnectedJobList","ScheduleModal","setTab","processDetails","setProcessDetails","scheduleDetails","setScheduleDetails","newSchedule","schedules","textDecoration","changeTab","ViewTabs","Documentation","ScheduleFormComp","derivedMonitor","enabled","monitor","serverTime","everyHourWarningShown","wasSCheduleCallDone","allScheduledNames","masTimeFormatted","currentTime","availableProcess","platformVal","typeVal","processVal","selectedType","platformMatches","typeMatches","nameValue","splittedName","t_min","t_hr","t_day","t_mon","t_wkd","sch_name","isValidMinutes","isValidHours","isValidDays","isValidMonth","isValidWeekDay","n_state","isEmpty","ConnectedScheduleForm","rejector","sch_description","params_with_maybe_replvars","extractReplVars","pickBy","rawValues","extractFQName","cleanUpReplVars","prefix","Groups","dense","disablePadding","button","primary","Users","currentActionLabel","shouldDisplayAction","emptyListMessage","renderUsersList","Events","UserChip","background","Chip","NotificationList","filteredUsers","buttonLabel","buttonIcon","endIcon","Entity","user_owner","aliasStr","getBoundingClientRect","parent","parentNode","scrollTo","behavior","SelectedEntity","ActionsNamespace","disableActions","hasWrite","deleteRights","parseName","tail","parsed","fq","ConnectedEditNamespace","nestedNames","EditNamespace","canUpdateName","setDescription","ConnectedDeleteNamespace","DeleteNamespace","ActionsConstant","ConnectedEditConstant","EditConstant","mdiImageFilterCenterFocus","patchConstant","ActionsProcess","ConnectedNewSchedule","NewSchedule","openErrorModal","setOpenErrorModal","errorModalActions","ScheduleForm","EditProcessModal","ProcessEditor","saveProcessEdits","steps","Step","step_index","expressions","parseEvaluatableExpressions","exp","StepExpression","expression","exp_index","evaluate","process_name","evaluations","toSend","findFormPrototype","findFormEntry","ActionsForm","canWrite","ConnectedCopyForm","CopyForm","formName","FormParameters","FieldsAndGroupsEditor","DataContext","FieldGroup","pointer","GroupInstance","canAdd","Field","newInstance","Value","packet","canRemove","idx","provided_field_name","ActionsRoot","ActionsPrototype","ActionsSchedule","ConnectedEditSchedule","EditSchedule","setMonitor","isEntityDeletable","ActionsCommon","displayDelete","ConnectedNewAlias","ConnectedEditAlias","NewAlias","original","EditAlias","splittedNamespace","handleEditSubmit","originalName","ConnectedDeleteEntity","clearSelected","DeleteEntity","PrivilegesModal","PrivilegesEditor","hasAlias","usePrivileges","editAliasParent","updating","setEditAliasParent","updatePrivilege","switchTab","PrivilegesList","is_group","updater","privilegeTypes","renderType","user_or_group","mdiAccount","setLoading","setUpdating","setData","HeaderPageSwitch","arrayOf","UserLoader","loadUser","userName","useParams","ConnectedUserLoader","UserView","deactivateUser","defaultResult","noGroups","deactivate","titleStyles","textTransform","ConnectedUserView","removing","Privileges","grant","revoke","Privilege","capitalize","PrivilegesContainer","mapPrivileges","class_privileges","actual","str","UserGroups","removeFromGroups","retrieveGroupDescription","setSelectedGroup","errorMessage","setErrorMessage","isOnlySelect","questionMessage","passed","group_name","mdiDeleteCircleOutline","UserGroupsContainer","visibleGroups","EditUserGroups","addToGroups","isFormChanged","setIsFormChanged","closeModal","aria-labelledby","aria-describedby","GroupsList","onAdd","EditUserGroupsContainer","showAll","err","EditUserDetails","UserDetailsForm","EditUserDetailsContainer","submitResult","isEqual","created","date_created","updated","date_updated","UserDatesBox","DateCreated","DateUpdated","mdiAccountPlus","parseDate","mdiAccountEdit","EditUserInfo","UserInfoForm","EditUserInfoContainer","formEndpoint","formproto","formdata","mapFormValues","submited","sendable_data","FieldSwitch","dict","EmailField","PhoneNumberField","notRequired","Field_Types","FieldComponent","getComponent","UserCard","endsWith","groupless","mdiAccountOff","NoUserSelectedPage","min","confirmpassword","CreateNewUser","submitUserValues","useHistory","operation","setOperation","exists","marginRight","CreateNewUserPage","NewUserGroups","existing","GroupsSelection","mdiAccountGroup","GroupCard","GroupView","removeGroup","deleteGroup","ConnectedGroupView","GroupLoader","loadGroup","groupName","ConnectedGroupLoader","GroupUsers","removeUsersFromGroup","setSelectedUser","GroupUsersContainer","EditGroupUsers","addUsersToGroup","mdiAccountMultiplePlus","UsersSelection","EditGroupUsersContainer","usersFetched","usersSubmitted","resolved","rejected","SubGroups","removeSubGroups","subgroup","SubGroupsContainer","EditSubGroups","updateGroup","GroupSelection","EditSubGroupsContainer","groupsFetched","subgroupsSubmitted","subgroupError","CreateNewGroup","submitGroupValues","CreateNewGroupPage","NoGroupSelectedPage","DBMS","toggleExpanded","isExpanded","setPath","changeState","autoExpanded","ConnectedDBMS","ServerList","Server","isActive","activePath","storedPath","splitAccountName","ConnectedServer","DatabaseList","Database","ConnectedDatabase","BreadcrumbsTitle","renderBreadcrumbs","links","separator","previous","route","navigateTo","selectedLink","setActiveLevel","ConnectedBreadcrumbsTitle","ContentSwitch","renderPage","AllDbms","retrieveDBMSStatus","retrieveDBMSStatusInfo","ConnectedAllDbms","allDbms","serverLabel","serverFullName","AllServers","renderOptions","retrievePendingStatus","refreshServerDBs","refreshServerDbsStatus","retrieveServerStatus","retrieveServerStatusInfo","hasDatabases","mdiPercent","ConnectedAllServers","ServerSettings","deleteServerOpen","setDeleteServerOpen","deleteServerErrorOpen","setDeleteServerErrorOpen","deleteServerModalActions","deleteServerErrorModalActions","EditServerContainer","EditServer","AllDatabases","refreshDBStatus","refreshDatabaseStatus","mdiCheckboxMultipleBlankOutline","mdiShape","mdiHexagonSlice2","mdiFormatAlignTop","mdiLicense","retrieveDbBackup","retrieveDbStatus","retrieveDbStatusInfo","ConnectedAllDatabases","Workload","newTab","getJobsData","pageLevel","levelFilters","protocol_filter","ConnectedWorkload","License","ConnectedLicense","Report","getLicenseReport","reportTwo","licenseFeatures","reportOne","ConnectedReport","FeaturesUsage","renderSingleReport","renderComparableReports","comparableFeatures","getFeatureValue","rep1","rep2","valueNode","needsExpansion","listRef","offsetHeight","flexDirection","paddingLeft","UnusedFeatures","CellWithTooltip","rowRenderer","hover","CURRENTLY_USED","mdiCheckboxMarkedCircle","mdiCloseCircle","TableRenderer","tableProps","FeaturesTable","sortLicenseFeatures","orderMultiplier","sortByName","sortByUsages","sortByStatus","sorted","Storage","getStoragePoints","getStorageDetails","storagePoints","storageDetails","setStorageItem","isMssql","ConnectedStorage","diskIOColumns","diskIOTableProps","diskIORowRenderer","Database_name","physical_name","dbid","io_stall","io_stall_queued_read_ms","io_stall_queued_write_ms","io_stall_read_ms","io_stall_write_ms","num_of_bytes_read","num_of_bytes_written","num_of_reads","num_of_writes","sample_ms","size_on_disk_bytes","type_desc","fileStorageColumns","fileStorageTableProps","fileStorageRowRenderer","data_space_id","file_id","growth","max_size","state_desc","PieChartColors","PieChartTooltip","MssqlStorage","prepareStorageGraphData","storageData","logsStorageSize","sum","getMssqlStorageData","dataLoading","usedStorageInfo","hasFileStorageInfo","hasDiskIOInfo","hasAnyData","storagePieData","database_size","unallocated_space","cx","cy","innerRadius","outerRadius","ConnectedMssqlStorage","Objects","getObjects","objectsData","objectDetails","setObjectsItem","ConnectedObjects","Sessions","getSessionsData","enableLoadingFlag","disableLoadingFlag","refreshSessions","ConnectedSessions","USERNAME","MACHINE","SID","LOGON_TIME","PROGRAM","TYPE","noDataMessage","CommonSessionsTable","sortSessions","sortedSessions","killSession","spid","ecid","loginame","hostname","blk","dbname","cmd","request_id","openKillSessionConfirmation","sessionId","MssqlSessionsTable","session_id","killSessionConfirmationOpen","sessionIdToKill","killSessionConfirmationActions","killSessionErrorModalActions","killSessionErrorOpen","TopSQLStatements","getTopSqlStatementsData","getEndpoint","prepareChartData","topStatementsData","ELAPSED_TIME","cpuTime","PCT_CPU","ioTime","PCT_IO","sqlId","SQL_ID","timeMillisFull","cpuPercent","ioPercent","elapsedTimeChartData","isChartSupported","ConnectedTopSQLStatements","renderCustomXAxisTick","renderLegend","renderChartTooltip","ElapsedTimeChart","barGap","strokeDasharray","verticalAlign","domain","tickFormatter","stackId","SESS_ID","CHILD_NUMBER","SQL_TEXT","mdiContentCopy","MODULE","EXECUTIONS","ELAPSED_PER_EXEC","sqlStatements","OracleTopSQLTable","sortSqlStatements","sortedStatements","queryid","userid","calls","avg_time_ms","PostgresTopSQLTable","SESSION_ID","USER","SQL_Text","TIME","STATE","MysqlTopSQLTable","QueryName","ExecutionCount","MaxElapsedTime","AvgElapsedTime","Logical_Reads","physical_reads","logical_writes","MssqlTopSQLTable","ToggleSystemExplorerView","mdiViewComfy","HostnameCellWithTooltip","isChecked","updateSelection","navigateToDetails","isWorkloadAllowed","isTopSqlAllowed","isLicenseReportingAllowed","testConnectionsTrigger","clickHandler","addServerTrigger","addDatabaseTrigger","importCsvTrigger","editDatabaseTrigger","deleteDatabaseTrigger","SystemExplorerTable","allDatabases","createCheckboxHeaderColumnConfig","protocolGroup","toggleDbsSelectionByProtocol","isAllDbsByProtocolSelected","selectedDbs","dbIndex","forceUpdate","shouldAddAll","allWithoutCurrent","clearDbsByProtocol","dbs","allByProtocol","selectedByProtocol","testConnections","isDbSelected","some","hasSingleSelection","getFirstDatabase","group1","group2","getListOrder","detailsPageParams","columnsConfig","ConnectedSystemExplorerTable","JobView","JobForm","loggedInAs","setEditable","deriveFormState","disabledFields","userValue","dateValue","timeValue","time_invoke","handleJobCreation","FormVerbs","sendable","job_user","dateMoment","timeMoment","dateTime","asMinutes","when","noOutput","JobOutput","setOutput","outputType","monitoring","outputFormat","preparedJSON","jsonString","enableClipboard","displayObjectSize","displayDataTypes","wantStatusColor","wantStatusIcon","warning","ExecutiveDashboard","dashboardType","setDashboardType","setSelectedServer","onServerChanged","RefreshDashboard","mdiChartDonut","ToggleDashboard","ToggleSelection","deselectAll","selectAll","ConnectedToggleSelection","ServersNetworkTile","nodeId","selectedNode","networkData","graph","isServerNode","getServerDetails","mapNodes","arr","t","mapEdges","serverNodes","serverEdges","arrows","getNetworkNodes","getNetworkEdges","newProps","serverDetails","preparedNodes","hasData","server_manufacturer","processor_identifier","total_physical_cores","total_logical_cores","physical_sockets_populated","ConnectedServersNetworkTile","ScoreItem","clazz","LicensableFeaturesTile","mapLicenses","licenseConfig","config","abbreviation","getLicensableFeatures","getUsageStat","licensesData","currencyFormatter","Intl","NumberFormat","currency","isFinite","blendStroke","ConnectedLicensableFeaturesTile","OptionItem","hasIssues","mdiAlert","OperatingSystemsTile","mapOS","osData","os","isWindowsOS","mapDBEdition","dbEditionData","isSEEdition","database_edition","mapDBEditionByServer","mapDBVersion","dbVersionData","database_version","qty","db_version_short","getOSType","getDBEdition","getDBVersion","graphData","preparedOSData","preparedDBEditionsData","preparedDBVersionsData","ConnectedOperatingSystemsTile","LicenseDeltaTile","mapData","licenseData","groupedData","lic_owned","lic_used","assigned","used","owned","getLicenseDelta","chartData","allowDecimals","angle","ConnectedLicenseDeltaTile","chip","Hardware","poller","runPoller","pollInvocation","outputReponse","clearTimeout","renderModal","outputOpen","requestProcessData","isProcessLoading","executeCollectionProcess","loadingPrototypes","loadingDatatypes","loadingAccounts","loadingForms","normalizeParameter","chooseField","mdiMemory","ConnectedHardware","Software","wasHardwareExecuted","wasPreSoftwareExecuted","mdiApplication","ConnectedSoftware","VMware","mdiCubeScan","ConnectedVMware","Packaging","lms_repo","isSucceeded","successModalOpen","failedModalOpen","isDownloadDisabled","renderPackagingSuccessModal","renderPackagingFailedModal","sendEmail","isEmailDisabled","wasVsphereExecuted","mdiArchiveArrowDownOutline","ConnectedPackaging","SuccessModal","formatQuery","PROCESS_NAME","PARAMS_TO_NORMALIZE","PreSoftware","normalizedParam","ConnectedPreSoftware","openLicenseAssignments","host_name","license_metric","license_term","license_type","licenses_assigned","licenses_available","mdiPencil","AllocatedLicensesTable","assignLicenseModalOpened","selectedAssignment","getLicenses","assignLicenseModalActions","assignmentToEdit","ConnectedAllocatedLicensesTable","AssignLicenseModal","ConnectedAssignLicense","AssignLicense","getAvailableServers","updateLicenseAssignment","refreshLicenses","term","licenseOptions","availableServersOptions","serverInfo","ip_address","selectedLicense","available","abs","selectedSupportRenewalFile","setSelectedSupportRenewalFile","supportRenewalFileResult","setSupportRenewalFileResult","uploadSupportRenewalFileDisabled","setUploadSupportRenewalFileDisabled","supportRenewalFileName","selectedMasLicenseFile","setSelectedMasLicenseFile","masLicenseFileResult","setMasLicenseFileResult","selectedMasLicenseFileDisabled","setSelectedMasLicenseFileDisabled","masLicenseFileName","i18nMessages","general","header","persistor","persistStore","provider","locale","basename","App","render","webpackContext","req","webpackContextResolve","__webpack_require__","code","partial"],"mappings":"ouFAEaA,EAAYC,K,4FAAZD,E,i9ECqBAE,EAAOC,qBAAW,cAE7BC,GACA,IAFEC,EAEF,EAFEA,QAASC,EAEX,EAFWA,SAEX,IAFqBC,oBAErB,MAFoC,GAEpC,EAFwCC,EAExC,EAFwCA,MAAOC,EAE/C,EAF+CA,SAAUC,EAEzD,EAFyDA,cAAkBC,EAE3E,OACA,IAA4CC,oBAAS,GAArD,GAAOC,EAAP,KAAuBC,EAAvB,KACMC,EAAaC,mBAAQ,WACzB,OAAKH,EAGDP,IAIAG,EACKQ,IAAMR,cADf,GANS,OASR,CAACH,EAAUG,EAAUI,IAExB,IAA+BK,YAAS,CACtCC,SAAS,EACTC,KAAMT,EAAMS,KACZd,SAAUS,IAHZ,GAAOM,EAAP,KAAcC,EAAd,KAAoBC,EAApB,KAMMC,EAAYC,cAgClB,GA9BAC,qBAAU,WAEJlB,QACFe,EAAQI,SAASpB,GAEjBgB,EAAQI,SAASnB,GAEnBe,EAAQK,YAAW,GACnBd,GAAkB,KACjB,CAACN,IAEJkB,qBAAU,WAKRhB,GAAiBA,EAAcF,EAAOgB,KACrC,CAAChB,IAEJkB,qBAAU,WAER,OAAO,WACAf,EAAMkB,WAAclB,EAAMmB,UAC7BP,EAAQI,cAASI,GAEjBR,EAAQS,cAASD,OAGpB,SAEiBA,IAAhBV,EAAMb,MACR,OAAO,kBAAC,IAAD,uBAGT,GAAIH,GAAWA,EAAQ4B,OAAQ,SACvBC,EAAQ,UAAG7B,EAAQ8B,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,QAAUa,EAAMb,gBAAvC,QAAiD,KACzD6B,GAAc,UAAAhC,EAAQ8B,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,QAAUa,EAAMb,gBAApC,eAA4C6B,mBAAeN,EAC/E,OACE,kBAAC,IAAD,CACEO,kBAAgB,EAChBC,GAAE,uBAAkB5B,EAAMS,MAC1Bf,QAASA,EACTG,MAAO0B,EACPM,eAAgB,SAAAC,GAAM,OAAIA,EAAOC,OAASrB,EAAMb,OAChDmC,kBAAmB,SAAAF,GAAM,OAAIA,EAAOG,UACpCC,SAAU,SAACC,EAAGL,GACZlB,EAAQI,SAASc,EAAOjC,OAOxBE,GAAiBA,EAAc+B,EAAOjC,MAAOgB,IAE/CoB,SAAUjC,EAAMiC,SAChBG,YAAa,SAAAC,GACX,OACE,kBAAC,IAAD,KACMrC,EACAqC,EAFN,CAGE5C,IAAKA,EACL6C,KAAK,OACLC,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,QAAUG,EAAK4B,MAAQ,GACxCb,YAAaA,QAQzB,OACE,kBAAC,IAAD,KACM1B,EACAU,EAFN,CAGEjB,IAAKA,EACL8C,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,QAAUG,EAAK4B,MAAQ,QAzGhB,qMAkBGhC,IAMbO,SAsFb,SAAS2B,EAAMzC,GACpB,IAAM0C,EAAcrC,mBAAQ,wBAAMC,IAAMqC,MAAMrC,IAAMsC,MAAlB,UAAyB5C,EAAMF,gBAA/B,QAA2CQ,IAAMR,YAAW,CAC5FE,EAAMF,WAGR,OAAO,kBAACP,EAAD,GAAMI,SAAU+C,GAAiB1C,EAAjC,CAAwCsC,KAAK,WAG/C,SAASO,EAAY7C,GAC1B,IAAM0C,EAAcrC,mBAAQ,wBAAMC,IAAMqC,MAAMrC,IAAMwC,MAAlB,UAAyB9C,EAAMF,gBAA/B,QAA2CQ,IAAMR,YAAW,CAC5FE,EAAMF,WAGR,OAAO,kBAACP,EAAD,GAAMI,SAAU+C,GAAiB1C,IAGnC,SAAS+C,EAAT,GAAyC,IAAtBpD,EAAsB,EAAtBA,SAAaK,EAAS,OACxC0C,EAAcrC,mBAAQ,wBAAMC,IAAMqC,MAAN,UAAY3C,EAAMF,gBAAlB,QAA8BQ,IAAM0C,qBAAoB,CACxFhD,EAAMF,SACNH,IAIF,OAAO,kBAACJ,EAAD,KAAUS,EAAV,CAAiBL,SAAU+C,EAAaJ,KAAK,YAG/C,SAASW,EAASjD,GACvB,OAAO,kBAACT,EAAD,KAAUS,EAAV,CAAiBsC,KAAK,c,EA3BfG,E,0BAQAI,E,0BAQAE,E,wBAchB,I,IAAMG,EAAe,CACnB,CAAEnB,MAAO,OAAQlC,OAAO,GACxB,CAAEkC,MAAO,QAASlC,OAAO,IAGdsD,EAAgB3D,sBAAW,WAAwCC,GAAK,EAA1BC,QAA0B,IAAdM,EAAc,OACnF,OAAO,kBAACT,EAAD,GAAM+C,KAAK,OAAOzC,OAAK,EAACD,cAAY,GAAKI,EAAzC,CAAgDP,IAAKA,EAAKC,QAASwD,QAG/DE,EAAO5D,qBAAW,YAAcQ,EAAOP,GAClD,QAA+Bc,YAAS,CACtCE,KAAMT,EAAMS,OADd,GAAOC,EAAP,KAAcC,EAAd,KAAoBC,EAApB,KAIAG,qBAAU,WAKR,OAJAH,EAAQI,SAAShB,EAAMH,OACvBe,EAAQK,YAAW,GAGZ,WACLL,EAAQI,cAASI,GACjBR,EAAQK,YAAW,GACnBL,EAAQS,cAASD,MAElB,CAACpB,EAAMH,QAEV,IAAMA,EAAQa,EAAMb,MAAQwD,IAAO3C,EAAMb,OAAOyD,OAAO,cAAgBD,MAASE,MAEhF,OACE,kBAAC,IAAD,CAAaC,WAAS,EAACjB,MAAO5B,EAAK4B,OAAS5B,EAAKH,SAC/C,kBAAC,IAAD,CAAyBiD,MAAOC,KAC9B,kBAAC,IAAD,CACEjE,IAAKA,EACLkE,gBAAc,EACdC,aAAa,WACbN,OAAO,aACPvB,MAAO/B,EAAM+B,MACbE,SAAUjC,EAAMiC,SAChB4B,oBAAqB,CACnB,aAAc,eAEhBtB,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BX,MAAOA,EACPqC,SAAU,SAAA4B,GAAI,OAAIlD,EAAQI,UAAS8C,aAAA,EAAAA,EAAMR,OAAO,gBAAiB,YAlC7C,mEACG/C,SAwCpBwD,EAAOvE,qBAAW,YAAcQ,EAAOP,GAClD,QAA+Bc,YAAS,CACtCE,KAAMT,EAAMS,OADd,GAAOC,EAAP,KAAcC,EAAd,KAAoBC,EAApB,KAIAG,qBAAU,WAKR,OAJAH,EAAQI,SAAShB,EAAMH,OACvBe,EAAQK,YAAW,GAGZ,WACLL,EAAQI,cAASI,GACjBR,EAAQK,YAAW,GACnBL,EAAQS,cAASD,MAElB,CAACpB,EAAMH,QAEV,IAAMA,EAAQa,EAAMb,MAChBwD,IAAO3C,EAAMb,MAAO,SACpBwD,MACGE,MACAD,OAAO,SACd,OACE,kBAAC,IAAD,CAAaE,WAAS,EAACjB,MAAO5B,EAAK4B,OAAS5B,EAAKH,SAC/C,kBAAC,IAAD,CAAyBiD,MAAOC,KAC9B,kBAAC,IAAD,CACEM,MAAM,EACNvE,IAAKA,EACLkE,gBAAc,EACdC,aAAa,WACbN,OAAO,QACPvB,MAAO/B,EAAM+B,MACbE,SAAUjC,EAAMiC,SAChB4B,oBAAqB,CACnB,aAAc,eAEhBtB,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BX,MAAOA,EACPqC,SAAU,SAAA4B,GACRlD,EAAQI,UAAS8C,aAAA,EAAAA,EAAMR,OAAO,WAAY,MAE5CW,KAAK,cAzCe,mEACG1D,SA+CpB2D,EAAS1E,qBAAW,cAE/BC,GACA,IAFEC,EAEF,EAFEA,QAASC,EAEX,EAFWA,SAAUC,EAErB,EAFqBA,aAAcC,EAEnC,EAFmCA,MAAOC,EAE1C,EAF0CA,SAA0BE,GAEpE,EAFoDmE,YAEpD,QACM/D,EAAaC,mBAAQ,WACzB,OAAIV,IAIAG,EACKQ,IAAMR,cADf,KAGC,CAACH,EAAUG,IAEd,IAA+BS,YAAS,CACtCC,SAAS,EACTC,KAAMT,EAAMS,KACZd,SAAUS,IAHZ,GAAOM,EAAP,KAAcC,EAAd,KAAoBC,EAApB,KAsBA,OAhBAG,qBAAU,WAKR,OAJAH,EAAQI,SAASnB,GAASD,GAAgB,IAC1CgB,EAAQK,YAAW,GAGZ,WACLL,EAAQI,cAASI,GACjBR,EAAQK,YAAW,GACnBL,EAAQS,cAASD,MAElB,IAMC1B,GAAWA,EAAQ4B,OAEnB,kBAAC,IAAD,CACEK,kBAAgB,EAChBC,GAAE,uBAAkB5B,EAAMS,MAC1Bf,QAASA,EACT0E,kBAAmB,SAAAtC,GAAM,OAAIA,EAAOjC,QAAUa,EAAMb,OACpDgC,eAAgB,SAAAC,GAAM,OAAIA,EAAOC,OAASlC,GAAS,IACnDA,MAAOA,EACPqC,SAAU,SAACC,EAAGL,GACZlB,EAAQI,SAASc,EAAOjC,QAE1BuC,YAAa,SAAAC,GACX,OACE,kBAAC,IAAD,KACMrC,EACAqC,EAFN,CAGE5C,IAAKA,EACL6C,KAAK,OACLC,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,QAAUG,EAAK4B,MAAQ,GACxC8B,gBAAYjD,QAStB,kBAAC,IAAD,KACMpB,EACAU,EAFN,CAGEjB,IAAKA,EACL6C,KAAK,OACLC,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,QAAUG,EAAK4B,MAAQ,QAxEd,wFAcChC,U,6FA5PpBhB,E,6EA8GGkD,E,8EAQAI,E,oFAQAE,E,gFAUAE,E,iFAIVC,E,qFAKOC,E,sFAIAC,E,6EAyCAW,E,6EAgDAG,E,qzCCrQAI,EAAoB,oBACpBC,EAAe,eACfC,EAAoB,oBACpBC,EAA0B,0BAC1BC,EAAsB,sBACtBC,EAAwB,wBACxBC,EAAsB,sBACtBC,EAAiB,iBACjBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAgB,gBAChBC,EAAyB,yBACzBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAA0B,0BAC1BC,EAA6B,6BAC7BC,EAAqB,qBACrBC,EAA0B,0BAC1BC,EAA0B,2B,6FApB1BpB,E,+EACAC,E,0EACAC,E,+EACAC,E,qFACAC,E,iFACAC,E,mFACAC,E,iFACAC,E,4EACAC,E,kFACAC,E,iFACAC,E,iFACAC,E,2EACAC,E,oFACAC,E,+EACAC,E,8EACAC,E,4EACAC,E,qFACAC,E,wFACAC,E,gFACAC,E,qFACAC,E,+fCXPC,EAAY,CAChBC,QAASC,IACTC,KAAMC,KAGKC,EAAS,SAAC,GAAuB,I,MAArBC,EAAqB,EAArBA,SAAU3D,EAAW,EAAXA,KACjC,OACE,yBACE4D,UAAWC,IAAW,kB,EAAD,G,EAClB7D,E,EAAOA,E,iGAFZ,sBAKE,yBAAK4D,UAAU,cAAf,sBACE,kBAAC,IAAD,CAASE,SAAS,UAAlB,sBACE,0BAAMC,EAAGV,EAAUrD,IAASyD,IAA5B,yBAGJ,+CAAME,KAKZD,EAAOM,UAAY,CACjBhE,KAAMiE,gBAAM,CAAC,UAAW,SACxBN,SAAUO,QAGL,IAAMC,EAAa,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAUS,EAAb,EAAaA,QAAb,OACxB,wBAAIR,UAAWC,IAAW,cAAe,CAAEO,YAA3C,sBAAwDT,IAG1DQ,EAAWH,UAAY,CACrBI,QAASC,OACTV,SAAUO,QAGL,I,IAAMI,EAAiB,SAAC,GAAD,QAAGC,gBAAH,MAAc,GAAd,SAC5B,yBAAKX,UAAU,kBAAf,sBACGW,EAASC,KAAI,SAACC,EAAKC,GAAN,iBACZ,yBAAKd,UAAU,gBAAgBe,IAAKD,EAApC,sBACE,6CAAID,SAAJ,UAAIA,EAAKG,YAAT,iBAAI,EAAWC,aAAf,iBAAI,SAAmB,aAAvB,aAAI,EAA2B,UAMvCV,EAAWH,UAAY,CACrBL,SAAUO,QAGZR,EAAOzG,KAAOkH,EACdT,EAAOoB,SAAWR,G,6FAnDZjB,E,oFAKOK,E,iFAsBAS,E,qFASAG,E,uwECTN,SAASS,EAAqBC,GACnC,mDAAO,WAAOC,EAAUC,GAAjB,6FACLD,EAASE,IAASC,QAAQpD,MADrB,kBAIoBqD,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUC,SAAU,CACvEC,UAAW,aALV,QAIGC,EAJH,QAQMC,KAAKC,UAAYX,IAAWY,SAASD,UAE9CZ,EAASE,IAAS7B,QAAQtB,IAAmB2D,EAASC,OAVnD,uDAYHX,EAASE,IAAS3B,KAAKxB,IAAd,OAZN,2BAgBiB,eAAlBgD,aAAA,EAAAA,EAASe,MACXd,EAASe,MAETf,EAASgB,KACThB,EAASiB,MApBN,yDAAP,wDAyBK,SAASC,IACd,mDAAO,WAAMlB,GAAN,6FACLA,EAASE,IAASC,QAAQrC,MADrB,kBAIoBsC,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUY,WAJ5D,OAIGT,EAJH,OAMHV,EAASE,IAAS7B,QAAQP,IAAgB4C,EAASC,OANhD,gDAQHX,EAASE,IAAS3B,KAAKT,IAAd,OARN,yDAAP,sDAaK,SAASsD,EAAiBC,GAC/B,OAAO,SAAArB,GAGL,OAFAA,EAASE,IAASoB,OAAOtE,IAAcqE,IAEhC,QAIJ,SAASE,EAAqBxB,GACnC,mDAAO,WAAMC,GAAN,6FACLA,EAASE,IAASC,QAAQlD,MADrB,kBAIoBmD,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUiB,KAAMzB,GAJlE,OAIGW,EAJH,OAKHV,EAASE,IAAS7B,QAAQpB,IAAmByD,EAASC,OALnD,gDAOHX,EAASE,IAAS3B,KAAKtB,IAAd,OAPN,yDAAP,sDAYK,SAASwE,EAA0B1B,GAAS,WACjD,mDAAO,WAAMC,GAAN,yGACLA,EAASE,IAAS7B,QAAQnB,IAAyB,OACnD8C,EAASE,IAASC,QAAQjD,MAFrB,kBAK0BwE,YAAe3B,GALzC,YAKG4B,EALH,QAOgBC,YAAY7H,OAP5B,iBAQK8H,EAAiBF,EAAeC,YAAY,GAAGE,KACjDC,EAAoB,EACpBC,GAAa,EAVhB,aAYMD,EAAoB,KAAOC,EAZjC,kCAagCC,EAAMC,IAAgBC,KAAK,EAAMN,IAbjE,QAaOO,EAbP,OAcCL,IACAC,EAAoD,cAAvCI,EAAiBC,WAAWC,QAAiE,WAAvCF,EAAiBC,WAAWC,OAfhG,yCAkB8BC,YAAsBV,GAlBpD,QAkBKW,EAlBL,OAmBKC,EAASD,EAAiB7B,KAAKA,KAAK+B,QAAUF,EAAiB7B,KAAKA,KAAK+B,QAAQ,GAAG/B,KAAKhB,KAAO,KACtGK,EAASE,IAAS7B,QAAQnB,IAAyBuF,IApBlD,wBAsBDzC,EAASE,IAAS3B,KAAKrB,IAAyB,gCAtB/C,0DAyBH8C,EAASE,IAAS3B,KAAKrB,IAAd,OAzBN,0DAAP,sDA8BF,SAASyF,EAAQC,GACf,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,M,SAGrCX,E,mFAAf,WAAqBe,GAArB,sHACQL,EAAQ,KADhB,sBAA4BM,EAA5B,iCAA4BA,EAA5B,mCAESD,EAAE,WAAF,EAAMC,IAFf,iD,sBAKO,SAASC,EAAsBC,GACpC,mDAAO,WAAMnD,GAAN,6FACLA,EAASE,IAASC,QAAQhD,MADrB,kBAGoBiD,IAAWC,IAAI,eAAgB,CAAE+C,OAAQD,IAH7D,OAGGzC,EAHH,OAIE2C,MAAMC,QAAQ5C,EAASC,QAC1BD,EAASC,KAAO,IAElBX,EAASE,IAAS7B,QAAQlB,IAAqB,CAAEoG,WAAY7C,EAASC,QAPnE,gDASHX,EAASE,IAAS3B,KAAKpB,IAAd,OATN,iCAYE,QAZF,yDAAP,sDAgBK,SAASqG,EAAkBC,GAChC,mDAAO,WAAMzD,GAAN,6FACLA,EAASE,IAASC,QAAQzC,MADrB,kBAIoB0C,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUmD,SAASD,EAAQN,UAAW,CACzF1C,UAAWgD,EAAQhD,YALlB,OAIGC,EAJH,OAOHV,EAASE,IAAS7B,QAAQX,IAAe,CAAEiD,KAAMD,EAASC,KAAMgD,KAAMF,EAAQE,QAP3E,gDASH3D,EAASE,IAAS3B,KAAKb,IAAd,OATN,iCAYE,QAZF,yDAAP,sDAgBK,SAASkG,EAA2BH,GAAS,WAClD,mDAAO,WAAMzD,GAAN,uHACLA,EAASE,IAASC,QAAQzC,MAElByF,EAAuBM,EAAvBN,SAAUU,EAAaJ,EAAbI,SACZC,EAAeC,IAAqBC,oBAAoBH,GACxD9D,EAAU,CACdkE,YAAU,GACRC,QAAS,QADD,IAEPJ,EAAeX,GAFR,eAGC,GAHD,GAKVgB,QAASC,IAA0BC,oBAAoBR,GACvDS,UAAW,MAZR,kBAgB0B5C,YAAe3B,GAhBzC,YAgBG4B,EAhBH,QAiBgBC,YAAY7H,OAjB5B,iBAkBK8H,EAAiBF,EAAeC,YAAY,GAAGE,KACjDC,EAAoB,EACpBC,GAAa,EApBhB,aAsBMD,EAAoB,KAAOC,EAtBjC,kCAuBgCC,EAAMC,IAAgBC,KAAK,EAAMN,IAvBjE,QAuBOO,EAvBP,OAwBCL,IACAC,EAAoD,cAAvCI,EAAiBC,WAAWC,QAAiE,WAAvCF,EAAiBC,WAAWC,OAzBhG,yCA4B8BC,YAAsBV,GA5BpD,QA4BKW,EA5BL,OA6BK+B,EAAY/B,EAAiB7B,KAAKA,KAAK+B,QAAUF,EAAiB7B,KAAKA,KAAK+B,QAAQ,GAAG/B,KAAKhB,KAAO,KACnG6E,GAAkBD,GAAa,IAAI3E,MAAM,MAAM,GAC/C6E,EAAeD,EAAiBE,KAAKC,MAAMH,GAAkB,GACnExE,EAASE,IAAS7B,QAAQX,IAAe,CAAEiD,KAAM8D,EAAcd,KAAMF,EAAQE,QAhC5E,wBAkCD3D,EAASE,IAAS3B,KAAKb,IAAe,gCAlCrC,0DAqCHsC,EAASE,IAAS3B,KAAKb,IAAd,OArCN,0DAAP,sDA0CK,SAASkH,EAAuBnB,GACrC,IAAQI,EAAaJ,EAAbI,SACR,OAAIO,IAA0BS,4BAA4BhB,GACjDD,EAA2BH,GAE7BD,EAAkBC,GAGpB,SAASqB,IACd,mDAAO,WAAM9E,GAAN,gFACLA,EAASE,IAASC,QAAQzC,MADrB,gDAAP,sDAKK,SAASqH,IACd,mDAAO,WAAM/E,GAAN,gFACLA,EAASE,IAAS3B,KAAKb,MADlB,gDAAP,sDAKK,SAASsH,EAAwBvB,GACtC,mDAAO,WAAMzD,GAAN,+FACLA,EAASE,IAASC,QAAQ5C,MADrB,kBAGoB6C,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAU0E,WAAWxB,EAAQN,WAH/E,OAGGzC,EAHH,OAIGC,EACJD,EAASC,MAAQD,EAASC,KAAK5G,OAC3B,CAAE4G,KAAMD,EAASC,KAAMjB,IAAK+D,EAAQN,UACpC,CAAExC,KAAM,GAAIjB,IAAK+D,EAAQN,UAC/BnD,EAASE,IAAS7B,QAAQd,IAAsBoD,IAR7C,gDAUHX,EAASE,IAAS3B,KAAKhB,IAAd,OAVN,yDAAP,sDAeK,SAAS2H,EAAoBC,GAClC,OAAOjF,IAAS7B,QAAQf,IAAgB6H,GAGnC,SAASC,EAAuB3B,GACrC,mDAAO,WAAMzD,GAAN,+FACLA,EAASE,IAASC,QAAQ9C,MADrB,kBAGoB+C,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAU8E,WAAY,CACzEjC,OAAQK,EAAQN,WAJf,OAGGzC,EAHH,OAMGC,EAAO,CAAEA,KAAMD,EAASC,KAAMjB,IAAK+D,EAAQN,WAAc,CAC7DxC,KAAM,GACNjB,IAAK+D,EAAQN,UAEfnD,EAASE,IAAS7B,QAAQhB,IAAqBsD,IAV5C,gDAYHX,EAASE,IAAS3B,KAAKlB,IAAd,OAZN,yDAAP,sDAiBK,SAASiI,EAA0B7B,GACxC,mDAAO,WAAMzD,GAAN,2GACGmD,EAAkCM,EAAlCN,SAAUgB,EAAwBV,EAAxBU,QAASoB,EAAe9B,EAAf8B,WAC3BvF,EAASE,IAASC,QAAQoF,IAFrB,SAKGxF,EAAU,CACdkE,WAAY,CACVb,OAAQD,EACRe,QAAS,OACT/E,SAAS,GAEXgF,UACAG,UAAW,MAGTkB,EAAa,GAfd,SAgB0B9D,YAAe3B,GAhBzC,YAgBG4B,EAhBH,QAiBgBC,YAAY7H,OAjB5B,wBAkBK8H,EAAiBF,EAAeC,YAAY,GAAGE,KAlBpD,UAmBoB2D,YAAuB5D,GAnB3C,QAmBK6D,EAnBL,OAoBDF,EAAaG,YAAsBD,GApBlC,QAsBH1F,EAASE,IAAS7B,QAAQkH,EAAY,CAAE5E,KAAM6E,EAAY9F,IAAK+D,EAAQN,YAtBpE,kDAwBHnD,EAASE,IAAS3B,KAAKgH,EAAd,OAxBN,0DAAP,sDA6BK,SAASK,EAAiBnC,GAC/B,mDAAO,WAAMzD,GAAN,+FACLA,EAASE,IAASC,QAAQ3C,MACpBqI,EAAa,CACjB,CAAE3M,KAAM,WAAY4M,KAAM,mBAC1B,CAAE5M,KAAM,SAAU4M,KAAM,iBACxB,CAAE5M,KAAM,UAAW4M,KAAM,iBACzB,CAAE5M,KAAM,aAAc4M,KAAM,qBAC5B,CAAE5M,KAAM,WAAY4M,KAAM,mBAC1B,CAAE5M,KAAM,gBAAiB4M,KAAM,yBAR5B,kBAWiBjD,QAAQkD,WAC1BF,EAAWtG,KAAI,SAAAyG,GAAG,OAChB5F,IAAWC,IAAX,0BAAkC2F,EAAIF,MAAQ,CAC5CG,KAAMxC,EAAQN,SACd1C,UAAW,iBAfd,OAWCyF,EAXD,OAmBHA,EAAUL,EAAWtG,KAAI,SAACyG,EAAKvG,GAAU,QACvC,MAAO,CACL0G,IAAG,UAAED,EAAQzG,UAAV,iBAAE,EAAgBnH,aAAlB,aAAE,EAAuBqI,KAC5BzH,KAAM8M,EAAI9M,SAGd8G,EAASE,IAAS7B,QAAQb,IAAqB,CAAEmD,KAAMuF,EAASxG,IAAK+D,EAAQN,YAzB1E,kDA2BHnD,EAASE,IAAS3B,KAAKf,IAAd,OA3BN,0DAAP,sDAgCK,SAAS4I,EAA0B3C,GACxC,mDAAO,WAAMzD,GAAN,2GACLA,EAASE,IAASC,QAAQ3C,MADrB,SAIK2F,EAAuBM,EAAvBN,SAAUU,EAAaJ,EAAbI,SACZ9D,EAAU,CACdkE,WAAY,CACVb,OAAQD,EACRe,QAAS,OACT/E,SAAS,GAEXgF,QAASC,IAA0BiC,mBAAmBxC,GACtDS,UAAW,MAGTgC,EAAc,GAff,SAgB0B5E,YAAe3B,GAhBzC,YAgBG4B,EAhBH,QAiBgBC,YAAY7H,OAjB5B,wBAkBK8H,EAAiBF,EAAeC,YAAY,GAAGE,KAlBpD,UAmBoB2D,YAAuB5D,GAnB3C,QAmBK6D,EAnBL,OAoBDY,EAAcX,YAAsBD,GApBnC,QAuBGQ,EAAUI,EAAY/G,KAAI,SAACgH,GAC/B,MAAO,CACLJ,IAAKI,EACLrN,KAAMqN,EAAKrN,SAGf8G,EAASE,IAAS7B,QAAQb,IAAqB,CAAEmD,KAAMuF,EAASxG,IAAK+D,EAAQN,YA7B1E,kDA+BHnD,EAASE,IAAS3B,KAAKf,IAAd,OA/BN,0DAAP,sDAoCK,SAASgJ,EAAsB/C,GACpC,IAAQI,EAAaJ,EAAbI,SACR,OAAIO,IAA0BqC,2BAA2B5C,GAChDuC,EAA0B3C,GAE5BmC,EAAiBnC,GAGnB,SAASiD,EAAuB1M,GACrC,OAAOkG,IAAS7B,QAAQZ,IAAqBzD,GAGxC,SAAS+G,IACd,mDAAO,WAA4Bf,EAAUC,GAAtC,+FACD0G,EAAU,GAEV1G,IAAWY,SAAS+F,WAAWX,KAAKhM,MAAK,SAAA6E,GAAC,MAAmB,WAAfA,EAAE+E,cAClD8C,EAAU1G,IACPY,SAAS+F,WAAWX,KAAKhM,MAAK,SAAA6E,GAAC,MAAmB,WAAfA,EAAE+E,YACrC8C,QAAQE,SAGPC,EAAc,CAAEH,QAAS,IAT1B,SAWoB9D,QAAQkD,WAC/BY,EAAQpH,KAAI,SAAAwH,GACV,OAAOC,EAAeD,OAbrB,qBAiBFE,QAAO,SAAAxE,GAAM,MAAsB,cAAlBA,EAAOH,UACxB/C,KAAI,SAAAkD,GAOH,OANAqE,EAAYH,QAAQO,KAAK,CACvBjB,KAAMxD,EAAOnK,MAAM2N,KACnBkB,QAAS1E,EAAOnK,MAAMyO,OACtBK,MAAO3E,EAAOnK,MAAM8O,OAAS,IAGxB,QAGXN,EAAYO,cAAgBP,EAAYH,QAAQM,QAAO,SAAAF,GAAM,OAAIA,EAAOK,OAAS,MAAIrN,OACrF+M,EAAYH,QAAQhD,MAAK,SAAC2D,EAAGC,GAAJ,OAAUC,WAAWD,EAAEH,OAASI,WAAWF,EAAEF,UAEtEpH,EAASE,IAAS7B,QAAQjB,IAAuB0J,IA/B5C,kBAiCEA,GAjCF,iDAAP,wDAqCK,SAAS9F,IACd,mDAAO,WAA+BhB,EAAUC,GAAzC,2GACG2G,EAAe3G,IAAWY,SAA1B+F,WACFa,EAASb,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,MAAmB,WAAfA,EAAE7D,YACrC8D,EAAQf,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,MAAmB,UAAfA,EAAE7D,YACpC+D,EAAQhB,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,MAAmB,UAAfA,EAAE7D,YACpCgE,EAAQjB,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,MAAmB,UAAfA,EAAE7D,YAEtC8C,EAAU,GACVmB,EAAY,GAGZL,IACFK,EAAYL,EAAOK,UACnBnB,EAAUc,EAAOd,SAIfgB,IACFG,EAAY,GAAH,SAAOA,GAAP,EAAqBH,EAAMG,UAAUb,QAAO,SAAAc,GAAE,MAA4B,UAAxBA,EAAGC,QAAQC,cACtEtB,EAAU,GAAH,SAAOA,GAAP,EAAmBgB,EAAMhB,WAI9BiB,IACFE,EAAY,GAAH,SACJA,GADI,EAEJF,EAAME,UAAUb,QAAO,SAAAc,GAAE,MAA4B,aAAxBA,EAAGC,QAAQC,cAE7CtB,EAAU,GAAH,SAAOA,GAAP,EAAmBiB,EAAMjB,WAI9BkB,IACFC,EAAY,GAAH,SAAOA,GAAP,EAAqBD,EAAMC,UAAUb,QAAO,SAAAc,GAAE,MAA4B,WAAxBA,EAAGC,QAAQC,cACtEtB,EAAU,GAAH,SAAOA,GAAP,EAAmBkB,EAAMlB,WAG5BuB,EAAe,GArChB,UAuCoBrF,QAAQkD,WAAW+B,EAAUvI,KAAI,SAACwI,GAAD,OAAQI,EAAiBJ,EAAIpB,OAvClF,sBA0CFM,QAAO,SAAAxE,GAAM,MAAsB,cAAlBA,EAAOH,UACxB/C,KAAI,SAAAkD,GAMH,OALAyF,EAAahB,KAAK,CAChBhO,KAAMuJ,EAAOnK,MAAMY,KACnBkP,OAAQ3F,EAAOnK,MAAM8P,SAGhB,QAGXpI,EAASE,IAAS7B,QAAQV,IAAwBuK,IApD7C,kBAsDEA,GAtDF,iDAAP,wDA0DK,SAASjH,IACd,mDAAO,WAA2BjB,EAAUC,GAArC,2GACG2G,EAAe3G,IAAWY,SAA1B+F,WACFa,EAASb,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,MAAmB,WAAfA,EAAE7D,YACrC8D,EAAQf,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,MAAmB,UAAfA,EAAE7D,YACpC+D,EAAQhB,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,MAAmB,UAAfA,EAAE7D,YACpCgE,EAAQjB,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,MAAmB,UAAfA,EAAE7D,YAEtC8C,EAAU,GACVmB,EAAY,GAGZL,IACFK,EAAYL,EAAOK,UACnBnB,EAAUc,EAAOd,SAIfgB,IACFG,EAAY,GAAH,SAAOA,GAAP,EAAqBH,EAAMG,YACpCnB,EAAU,GAAH,SAAOA,GAAP,EAAmBgB,EAAMhB,WAI9BiB,IACFE,EAAY,GAAH,SAAOA,GAAP,EAAqBF,EAAME,YACpCnB,EAAU,GAAH,SAAOA,GAAP,EAAmBiB,EAAMjB,WAI9BkB,IACFC,EAAY,GAAH,SAAOA,GAAP,EAAqBD,EAAMC,YACpCnB,EAAU,GAAH,SAAOA,GAAP,EAAmBkB,EAAMlB,WAG5B0B,EAAW,GAlCZ,UAmCoBxF,QAAQkD,WAC/B+B,EAAUvI,KAAI,SAACwI,GAAD,OAAQO,EAAaP,EAAIpB,OApCpC,sBAwCFM,QAAO,SAAAxE,GAAM,MAAsB,cAAlBA,EAAOH,UACxB/C,KAAI,SAAAkD,GAUH,OATA4F,EAASnB,KAAK,CACZhO,KAAMuJ,EAAOnK,MAAMY,KACnBoJ,OAAQG,EAAOnK,MAAMgK,OACrByE,OAAQtE,EAAOnK,MAAMyO,OACrBd,KAAMxD,EAAOnK,MAAM2N,KACnBsC,QAAS9F,EAAOnK,MAAMiQ,QACtBC,OAAQ/F,EAAOnK,MAAMkQ,SAGhB,QAGXxI,EAASE,IAAS7B,QAAQT,IAAmByK,IAtDxC,kBAwDEA,GAxDF,iDAAP,wDA4DK,SAASI,EAA4B1B,GAC1C,mDAAO,WAA+B/G,EAAUC,GAAzC,MAGUyI,EAHV,8IAGL,WAAgCT,GAAhC,iHACEjI,EACEE,IAASC,QAAQtC,IAAkB,CACjC,CACE3E,KAAM+O,EAAS/O,KACf6N,OAAQkB,EAASd,QACjBlB,KAAMgC,EAASpE,SACf2E,OAAQP,SAAF,UAAEA,EAAUD,eAAZ,aAAE,EAAmBC,SAC3B3F,QACE,UAAArC,IAAWY,SAASwH,SAASpO,MAAK,SAAA8N,GAAE,OAAIA,EAAG7O,OAAS+O,EAAS/O,eAA7D,eAAoEoJ,SACpE,oBAKF2D,EAAOgC,EAAS/O,KAChByP,EAAQ5B,EAAO7N,KAhBvB,kBAkB2BkH,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUqI,UAAW,CAAE3C,OAAM0C,UAlBtF,cAkBUjI,EAlBV,OAoBQ4B,GAAS,UAAA5B,EAASC,KAAK2B,cAAd,eAAsBuG,WAAWC,gBAAiB,QAE3B,KAAhCC,SAASrI,EAASC,KAAM,MAC1B2B,EAAS,QAvBf,kBA0BW,CACLpJ,KAAM+O,EAAS/O,KACf6N,OAAQkB,EAASd,QACjBlB,KAAMgC,EAASpE,SACf2E,OAAQP,SAAF,UAAEA,EAAUD,eAAZ,aAAE,EAAmBC,SAC3BM,QAAS7H,SAAF,UAAEA,EAAUC,YAAZ,aAAE,EAAgB4H,QACzBjG,WAhCN,yCAmCItC,EACEE,IAAS3B,KAAKV,IAAkB,CAC9B,CACE3E,KAAM+O,EAAS/O,KACf6N,OAAQkB,EAASd,QACjBlB,KAAMgC,EAASpE,SACf2E,OAAQP,SAAF,UAAEA,EAAUD,eAAZ,aAAE,EAAmBC,SAC3B3F,OAAQ,QACRtH,MAAK,SA3Cf,kBAgDW,CACL9B,KAAM+O,EAAS/O,KACf6N,OAAQkB,EAASd,QACjBlB,KAAMgC,EAASpE,SACf2E,OAAQP,SAAF,UAAEA,EAAUD,eAAZ,aAAE,EAAmBC,SAC3B3F,OAAQ,QACRtH,MAAK,OAtDX,0DAHK,yBAGU0N,EAHV,4CACGZ,EAAcf,EAAde,UA6DFO,EAAW,GA9DZ,SA+DoBxF,QAAQkD,WAAW+B,EAAUvI,IAAImJ,IA/DrD,qBAkEFzB,QAAO,SAAAxE,GAAM,MAAsB,cAAlBA,EAAOH,UACxB/C,KAAI,SAAAkD,GAUH,OATA4F,EAASnB,KAAK,CACZhO,KAAMuJ,EAAOnK,MAAMY,KACnBoJ,OAAQG,EAAOnK,MAAMgK,OACrByE,OAAQtE,EAAOnK,MAAMyO,OACrBd,KAAMxD,EAAOnK,MAAM2N,KACnBuC,OAAQ/F,EAAOnK,MAAMkQ,OACrBD,QAAS9F,EAAOnK,MAAMiQ,UAGjB,QAGXvI,EAASE,IAAS7B,QAAQR,IAAkBwK,IAhFvC,kBAkFEA,GAlFF,iDAAP,wDAsFK,SAASW,EAAqBjB,GACnC,mDAAO,WAA2B/H,EAAUC,GAArC,+GACG2G,EAAe3G,IAAWY,SAA1B+F,WAEFqC,EAAerC,EAAWX,KAAKhM,MAAK,SAAAyN,GAAC,OAAIA,EAAE7D,WAAakE,EAAGlE,YAE3DoC,EAAO8B,EAAG7O,KACVyP,EAAQM,EAAY,UACtBA,EAAatC,QAAQ1M,MAAK,SAAAiP,GAAE,OAAIA,EAAG/B,UAAYY,EAAGZ,kBAD5B,aACtB,EAA4DjO,UAC5DW,EAEJmG,EACEE,IAASC,QAAQtC,IAAkB,CACjC,CACE3E,KAAM6O,EAAG7O,KACT6N,OAAQgB,EAAGZ,QACXlB,KAAM8B,EAAGlE,SACTvB,OAAM,UAAErC,IAAWY,SAASwH,SAASpO,MAAK,SAAA6E,GAAC,OAAIA,EAAE5F,OAAS6O,EAAG7O,eAAvD,aAAE,EAA4DoJ,WAhBrE,kBAsBoBlC,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUqI,UAAW,CACxE3C,OACA0C,UAxBC,cAsBGjI,EAtBH,OA2BC4B,GAAS,UAAA5B,EAASC,KAAK2B,cAAd,eAAsBuG,WAAWC,gBAAiB,QAE3B,KAAhCC,SAASrI,EAASC,KAAM,MAC1B2B,EAAS,QAGL+F,EAAW,CACf,CACEnP,KAAM+M,EACNc,OAAQgB,EAAGZ,QACXlB,KAAM8B,EAAGlE,SACTvB,WAGJtC,EAASE,IAAS7B,QAAQR,IAAkBwK,IAzCzC,kBA0CIA,GA1CJ,kCA4CHrI,EACEE,IAAS3B,KAAKV,IAAkB,CAC9B,CACE3E,KAAM6O,EAAG7O,KACT6N,OAAQgB,EAAGZ,QACXlB,KAAM8B,EAAGlE,SACTvB,OAAQ,QACRtH,MAAK,SAnDR,0DAAP,wDA2DK,SAASmO,EAAwBpJ,GACtC,mDAAO,WAAMC,GAAN,mGACLA,EAASE,IAASC,QAAQpC,IAAyB,CAAE7E,KAAM6G,EAAQ7G,QAD9D,kBAIoBkH,IAAWC,IAAX,UAClBvI,IAAUwI,KAAKC,UAAU6I,UADP,YACoBrJ,EAAQoE,UALhD,OAIGzD,EAJH,OAQG2I,EAAU,CACdnQ,KAAM6G,EAAQ7G,KACdyH,MAAMD,SAAA,UAAAA,EAAUC,YAAV,mBAAgBA,YAAhB,eAAsB2I,UAAU,KAAM,IAG9CtJ,EAASE,IAAS7B,QAAQN,IAAyBsL,IAbhD,gDAeHrJ,EAASE,IAAS3B,KAAKR,IAAyB,CAAE7E,KAAM6G,EAAQ7G,KAAM8B,MAAK,QAfxE,yDAAP,sDAoBK,SAASuO,EAA8BxJ,GAC5C,mDAAO,WAAMC,GAAN,uFACLA,EAASE,IAASoB,OAAOtD,IAA4B,CAAE9E,KAAM6G,EAAQ7G,QADhE,kBAGE,QAHF,gDAAP,sD,SAOa8N,E,mFAAf,WAA8BD,GAA9B,iGACQkB,EAAWlB,EAAOe,UAAU,GADpC,SAEyB1H,IAAWC,IAAX,2BAAmC4H,EAAS/O,KAA5C,qBAFzB,cAEQwH,EAFR,OAIQ0G,EAAQI,WAAW9G,EAASC,KAAK6I,UAJzC,kBAMS,CACLvD,KAAMgC,EAASpE,SACfkD,OAAQkB,EAASd,QACjBC,UATJ,iD,+BAaee,E,qFAAf,WAAgCF,EAAUtB,GAA1C,mGACQV,EAAOgC,EAAS/O,KAChByP,EAFR,UAEgBhC,EAAQ1M,MACpB,SAAAwP,GAAC,OAAIA,EAAE3B,WAAa2B,EAAE3B,UAAU7N,MAAK,SAAA6E,GAAC,OAAIA,EAAE5F,OAAS+O,EAAS/O,kBAHlE,aAEgB,EAEXA,KAJL,SAMyBkH,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUmJ,eAAgB,CAC7EzD,OACA0C,UARJ,cAMQjI,EANR,yBAWS,CACLxH,KAAM+O,EAAS/O,KACfkP,OAAQtM,IAAO4E,EAASC,KAAKyH,QAAQuB,UACjC7N,IAAO4E,EAASC,KAAKyH,QAAQrM,OAAO,eACpC,OAfR,iD,+BAmBeuM,E,wFAAf,WAA4BL,EAAUtB,GAAtC,+GACQV,EAAOgC,EAAS/O,KAChByP,EAFR,UAEgBhC,EAAQ1M,MACpB,SAAAwP,GAAC,OAAIA,EAAE3B,WAAa2B,EAAE3B,UAAU7N,MAAK,SAAA6E,GAAC,OAAIA,EAAE5F,OAAS+O,EAAS/O,kBAHlE,aAEgB,EAEXA,KAJL,kBAO2BkH,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUqI,UAAW,CACxE3C,OACA0C,UATN,cAOUjI,EAPV,OAYQ4B,GAAS,UAAA5B,EAASC,KAAK2B,cAAd,eAAsBuG,WAAWC,gBAAiB,QAE3B,KAAhCC,SAASrI,EAASC,KAAM,MAC1B2B,EAAS,QAff,kBAkBW,CACLpJ,KAAM+O,EAAS/O,KACf6N,OAAQkB,EAASd,QACjBlB,KAAMgC,EAASpE,SACf0E,QAAS7H,SAAF,UAAEA,EAAUC,YAAZ,aAAE,EAAgB4H,QACzBC,OAAQP,SAAF,UAAEA,EAAUD,eAAZ,aAAE,EAAmBC,SAC3B3F,WAxBN,2DA2BW,CACLpJ,KAAM+O,EAAS/O,KACf6N,OAAQkB,EAASd,QACjBlB,KAAMgC,EAASpE,SACf0E,QAASN,SAAF,UAAEA,EAAUtH,YAAZ,aAAE,EAAgB4H,QACzBC,OAAQP,SAAF,UAAEA,EAAUD,eAAZ,aAAE,EAAmBC,SAC3B3F,OAAQ,UAjCd,2D,oHA1sBgBxC,E,iFA0BAoB,E,+EAcAE,E,6EAQAG,E,iFAaAE,E,sFA+BPkB,E,oEAIMV,E,kEAKCiB,E,kFAiBAM,E,8EAiBAI,E,uFA2CAgB,E,mFAQAE,E,sFAMAC,E,uFAMAC,E,oFAgBAE,E,gFAIAE,E,mFAkBAE,E,sFA8BAM,E,6EAiCAQ,E,sFAqCAI,E,kFAQAE,E,mFAIA3F,E,qFAsCAC,E,sFA2DAC,E,kFA6DAwH,E,wFAuFAO,E,iFA4DAG,E,oFAqBAI,E,0FAQDvC,E,2EAaAmB,E,6EAmBAG,E,g3BC9uBFsB,EAA8B,8BAC9BC,EAAsC,sCAEtCC,EAAa,aACbC,EAAe,eACfC,EAAgB,gBAEhBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAsB,sBAEtBC,EAAe,eACfC,EAAkB,kBAClBC,EAAkB,kBAElBC,EAAa,aACbC,EAAkB,kBAElBC,EAAqB,sB,6FAlBrBb,E,oGACAC,E,4GAEAC,E,mFACAC,E,qFACAC,E,sFAEAC,E,2FACAC,E,2FACAC,E,4FAEAC,E,qFACAC,E,wFACAC,E,wFAEAC,E,mFACAC,E,wFAEAC,E,o4DClBAC,EAAkB,kBAClBC,EAAa,aACbC,EAAe,eACfC,EAAkB,wBAClBC,EAAmB,yBACnBC,EAAqB,qBACrBC,EAA0B,0BAE1BC,EAA2B,2BAC3BC,EAAuB,uBACvBC,EAAe,gB,6FAVfT,E,mFACAC,E,8EACAC,E,gFACAC,E,mFACAC,E,oFACAC,E,sFACAC,E,2FACsB,sB,uFACtBC,E,4FACAC,E,wFACAC,E,mwBCVAC,EAAW,CACtBC,OAAQ,SACRC,SAAU,QACVC,MAAO,QACPC,MAAO,QACPC,MAAO,SAGIC,EAAc,CACzBC,SAAU,WACVjI,SAAU,WACVkI,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,kBAAmB,qBAGfC,GAAmB,OACtBZ,EAASC,OAAS,CAACK,EAAYC,SAAUD,EAAYG,QAASH,EAAYI,QAASJ,EAAYhI,SAAUgI,EAAYE,QAASF,EAAYK,oBADpH,IAEtBX,EAASG,MAAQ,CAACG,EAAYC,SAAUD,EAAYE,UAF9B,IAGtBR,EAASE,SAAW,CAACI,EAAYC,SAAUD,EAAYE,UAHjC,IAItBR,EAASI,MAAQ,CAACE,EAAYC,SAAUD,EAAYG,QAASH,EAAYI,QAASJ,EAAYhI,SAAUgI,EAAYE,UAJ9F,IAKtBR,EAASK,MAAQ,CAACC,EAAYC,WALR,GAQnBM,EAA2B,CAACb,EAASI,OACrCU,EAA0B,CAACd,EAASI,OACpCW,EAA0B,CAACf,EAASI,OACpCY,EAA2B,CAAChB,EAASI,OAErCa,EAAwB,EAAH,GACxBjB,EAASI,MAAQ,uDAGdc,EAAuB,EAAH,GACvBlB,EAASI,MAAQ,4DAMde,GAAe,OAClBnB,EAASC,OAAS,IADA,IAElBD,EAASI,MAAQ,IAFC,IAGlBJ,EAASG,MAAQ,IAHC,IAIlBH,EAASE,SAAW,IAJF,IAKlBF,EAASK,MAAQ,IALC,GAQfe,EAAuB,EAAH,GACvBpB,EAASI,OAAQ,SAACjF,GACjB,MAAO,CACLkG,YAAalG,EAAKrN,KAClBwT,QAASnG,EAAKoG,YACdC,UAAWrG,EAAKsG,UAChBC,cAAevG,EAAKwG,gBAKb3I,EAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,+BACE,SAAwB4I,EAAUC,GAChC,SAAKD,GAAaC,GAAYjB,EAAoBgB,KAG3ChB,EAAoBgB,GAAUE,SAASD,KALlD,+BAQE,SAAyBD,GACvB,OAAO5I,EAA0B+I,iBAAiBH,EAAUtB,EAAYC,YAT5E,+BAYE,SAAyBqB,GACvB,OAAO5I,EAA0B+I,iBAAiBH,EAAUtB,EAAYhI,YAb5E,6BAgBE,SAAuBsJ,GACrB,OAAO5I,EAA0B+I,iBAAiBH,EAAUtB,EAAYE,WAjB5E,8BAoBE,SAAwBoB,GACtB,OAAO5I,EAA0B+I,iBAAiBH,EAAUtB,EAAYG,WArB5E,sCAwBE,SAAgCmB,GAC9B,OAAOZ,EAAyBc,SAASF,KAzB7C,8BA4BE,SAAwBA,GACtB,OAAO5I,EAA0B+I,iBAAiBH,EAAUtB,EAAYI,WA7B5E,uCAgCE,SAAiCkB,GAC/B,OAAO5I,EAA0B+I,iBAAiBH,EAAUtB,EAAYK,qBAjC5E,8BAoCE,SAAwBqB,GAEtB,KADAA,EAAWA,GAAY,IACTC,WA5DY,YA6DxB,MAAO,GAET,IAAMC,EAAWF,EAASG,YA9DI,aA+D9B,OAAkB,IAAdD,EACK,GAEFF,EAASI,OAAOF,EAlEO,YAkE8BvT,UA7ChE,yCAgDE,SAAmCiT,GACjC,OAAOf,EAAyBiB,SAASF,KAjD7C,wCAoDE,SAAkCA,GAChC,OAAOd,EAAwBgB,SAASF,KArD5C,wCAwDE,SAAkCA,GAChC,OAAOb,EAAwBe,SAASF,KAzD5C,iCA4DE,SAA2BA,GACzB,OAAOX,EAAsBW,KA7DjC,gCAgEE,SAA0BA,GACxB,OAAOV,EAAqBU,KAjEhC,kCAoEE,SAA4BA,GAC1B,OAAOR,EAAqBQ,KArEhC,0BAwEE,SAAoBA,GAClB,OAAOT,EAAgBS,IAAa,M,EAzExC,O,2BAAA,M,6FA5Da5B,E,4EAQAM,E,+EASPM,E,uFAQAC,E,4FACAC,E,2FACAC,E,2FACAC,E,4FAEAC,E,yFAIAC,E,wFAIwB,W,yFACI,Y,6FAE5BC,E,mFAQAC,E,wFAWOpI,E,knBC5DPqJ,EAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,EAAgB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAOpDC,EAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,6BAEE,SAAsBC,GACpB,OAAOD,EAAcE,mBAAmBF,EAAcG,WAAWF,GAT3C,MAM1B,0BAME,SAAoBG,GAClB,OAAOJ,EAAcE,mBAAmBF,EAAcG,WAAWC,GAZ9C,MAKvB,yBAUE,SAAmBC,GACjB,OAAOL,EAAcE,mBAAmBF,EAAcG,WAAWE,GAf/C,MAItB,0BAcE,SAAoBC,GAClB,OAAON,EAAcE,mBAAmBF,EAAcG,WAAWG,GAlB7C,IAkBsE,IACrFN,EAAcO,wBAAwBP,EAAcG,WAAWG,GAAQR,KAhBhF,4BAmBE,SAAsBU,GACpB,OAAOR,EAAcE,mBAAmBF,EAAcG,WAAWK,GAtB3C,IAuBjBR,EAAcO,wBAAwBP,EAAcG,WAAWK,GAAUT,KArBlF,gCAoCE,SAA0BU,EAAMC,GAA4B,IAApBC,IAAoB,yDAC1D,SAAa,MAATF,GAAiBE,GAAwB,MAATF,KAIhCA,EAAKlB,SAAS,KACTkB,EAAKxO,MAAM,KAAK2O,OAAM,SAACC,GAC5B,OAAOb,EAAcc,kBAAkBD,EAAMH,EAAQC,MAIlDX,EAAcc,kBAAkBL,EAAMC,EAAQC,MA/CzD,+BAkDE,SAAyBF,EAAMC,GAA4B,IAApBC,IAAoB,yDACzD,GAAIF,EAAKlB,SAAS,KAChB,OAAO,EAiBT,GAAIkB,EAAKlB,SAAS,KAAM,CACtB,IAAMwB,EAAkBN,EAAKxO,MAAM,KAAKL,KAAI,SAACoP,GAAD,OAAQ5F,SAAS4F,EAAI,OACjE,OAAOhB,EAAciB,mBAAmBF,EAAiBL,IAAsC,IAA3BK,EAAgB3U,QAAgB2U,EAAgB,IAAMA,EAAgB,GAG5I,IAAMG,EAAa9F,SAASqF,EAAM,IAClC,OAAIE,EACKO,GAAc,GAAKA,GAAcR,EAEnCQ,EAAa,GAAKA,GAAcR,IA9E3C,wBAiFE,SAAkB/V,GAChB,OAAQA,GAAS,IAAIwW,OAAOhG,gBAlFhC,gCAqFE,SAA0BiG,EAAWV,GAA4B,IAApBC,IAAoB,yDAC/D,OAAOS,EAAUR,OAAM,SAACS,GACtB,OAAIV,EACKU,GAAW,GAAKA,GAAWX,EAE7BW,EAAU,GAAKA,GAAWX,OA1FvC,qCA8FE,SAA+B/V,EAAO2W,GACpC,OAAI3W,EAAM4U,SAAS,KACV5U,EAAMsH,MAAM,KAAK2O,OAAM,SAACC,GAC7B,OAAOb,EAAcuB,uBAAuBV,EAAMS,MAI/CtB,EAAcuB,uBAAuB5W,EAAO2W,KArGvD,oCAwGE,SAA8B3W,EAAO2W,GACnC,GAAI3W,EAAM4U,SAAS,KACjB,OAAO,EAOT,GAAI5U,EAAM4U,SAAS,KAAM,CACvB,IAAMiC,EAAc7W,EAAMsH,MAAM,KAChC,OAAO+N,EAAcyB,wBAAwBD,EAAaF,IAAyC,IAAvBE,EAAYpV,QACnFkV,EAAcI,QAAQF,EAAY,KAAOF,EAAcI,QAAQF,EAAY,IAGlF,OAAOxB,EAAcyB,wBAAwB,CAAC9W,GAAQ2W,KAvH1D,qCA0HE,SAA+BK,EAAQL,GACrC,OAAOK,EAAOf,OAAM,SAACjW,GACnB,OAAO2W,EAAc/B,SAASS,EAAcG,WAAWxV,W,EA5H7D,O,2BAAA,KAAaqV,EAwBJ4B,WAAa,CAClBC,QAAS,2BACTC,MAAO,8EACPC,KAAM,6EACNC,MAAO,4FACPC,YAAa,iGACbC,mBAAoB,6JA9BXlC,EAiCJmC,wBAA0B,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,O,6FAzC3DrC,E,oFACAC,E,uFACoB,G,2FACH,G,wFACD,G,uFACE,G,yFACE,E,2FAEbC,E,qtBCRAoC,EAAiB,iBACjBC,EAAc,cAEdC,EAAY,YAEZnF,EAAmB,mBACnBD,EAAkB,kBAElBqF,EAAqB,qBACrBC,EAA0B,0BAC1BC,EAAkB,kBAClBC,EAAc,e,6FAXdN,E,iFACAC,E,8EAEAC,E,4EAEAnF,E,mFACAD,E,kFAEAqF,E,qFACAC,E,0FACAC,E,kFACAC,E,snBCRN,SAASC,IACd,OAAO,SAAetQ,GACpB,IAAMuQ,EAAWC,IAAmBjR,KAAI,YAAqB,IAAlBxE,EAAkB,EAAlBA,KAAM0V,EAAY,EAAZA,MAC3CC,EAAM,GAAH,OAAM3V,GACT0V,IACFC,EAAMA,EAAIC,OAAJ,WAAeC,mBAAmBH,MAE1C,IAAMI,EAAUzQ,IAAWC,IAAIqQ,EAAK,CAAEjQ,UAAW,aAMjD,OALAT,EAAS,CACPjF,KAAM,iBACN8V,UACAC,WAAY/V,IAEP8V,KAGT7Q,EAAS,CACPjF,KAAM,qBACN8V,QAASN,KAKR,SAASQ,EAAYC,GAC1B,IAAMC,EAAaT,IAAmBvW,MAAK,SAAAiX,GAAI,OAAIF,IAAUE,EAAKnW,QAElE,OAAKkW,EAME,SAAejR,GACpB,IAAM6Q,EAAUzQ,IAAWC,IAAX,UACX4Q,EAAWlW,MADA,OACOkW,EAAWR,MAAX,WAAuBQ,EAAWR,OAAU,GADnD,0BAUhB,OANAzQ,EAAS,CACPjF,KAAM,iBACN8V,UACAC,WAAYG,EAAWlW,OAGlB8V,GAhBA,WACLM,QAAQC,KAAK,qCAAsCJ,IAmBlD,SAASK,EAAaC,EAAQ7R,GACnC,MAAO,CACL6R,SACA7R,QACA1E,KAAM,iBAIH,SAASwW,EAAoBD,EAAQ7R,GAC1C,MAAO,CACL6R,SACA7R,QACA1E,KAAM,yBAIH,SAASyW,EAAclZ,GAC5B,MAAO,CACLY,KAAM,OACNZ,QACAyC,KAAM,kBAIH,SAAS0W,EAAgBnZ,GAC9B,MAAO,CACLY,KAAM,SACNZ,QACAyC,KAAM,kBAIH,SAAS2W,EAAUxY,GACxB,MAAO,CACL6B,KAAM,sBACN7B,S,6FAlFYoX,E,+DAuBAS,E,6DAwBAM,E,8DAQAE,E,qEAQAC,E,+DAQAC,E,iEAQAC,E,moBChFHC,EAAU,EAAH,GACfC,M,4FADQD,E,8pBCEAA,EAAU,EAAH,GACfE,IACAC,IACAC,M,4FAHQJ,E,inCCkBb,SAASK,IAAa,2BAALC,EAAK,yBAALA,EAAK,gBACpB,OAAO,SAAAC,GAAG,OAAID,EAAIE,QAAO,SAACC,EAAMpP,GAAP,OAAcA,EAAGoP,KAAOF,IAGnD,SAASG,EAASC,EAAUC,EAAYja,GACtC,OAAO,SAAAqI,GACL,OAAIrI,EACKqI,EAAKsG,QAAO,SAAA0H,GAAE,OAAI4D,EAAWD,EAAS3D,GAAKrW,MAG7CqI,GAIJ,SAAS6R,EAAyB3O,EAAUkD,GACjD,OAAO,SAAA0L,GACL,IAAQC,EAAaD,EAAM5R,SAAnB6R,SAcR,OAAOV,EAZkBK,GACvB,SAAA1D,GAAE,OAAKA,EAAGgE,MAAM,GAAKhE,EAAGgE,MAAM,GAAG9O,SAAW,MAC5C,SAAC+O,EAAYC,GAAb,OAA8BD,IAAeC,IAC7ChP,GAGqBwO,GACrB,SAAA1D,GAAE,OAAImE,OAAOC,KAAKpE,EAAGhI,YACrB,SAACA,EAASqM,GAAV,OAA4BrM,EAAQuG,SAAS8F,KAC7CjM,GAGKiL,CAAuCU,IAI3C,SAASO,EAAT,EAAoDC,GAAW,IAAhCrP,EAAgC,EAAhCA,SAAUsD,EAAsB,EAAtBA,QACxClB,EAAOiN,EAAUjN,KAAKhM,MAAK,SAAAkZ,GAAK,OAAIA,EAAMtP,WAAaA,KAC7D,OAAOoC,GAAQA,EAAKU,QAAQ1M,MAAK,SAAA8M,GAAM,OAAIA,EAAOI,UAAYA,KAGzD,SAASiM,EAAT,EAAgEF,GAAW,IAA1CjL,EAA0C,EAA1CA,SAGtC,OAFegL,EAAoB,CAAEpP,SAD2C,EAAhCA,SACDsD,QADiC,EAAtBA,SACA+L,GAE5CpL,UAAU7N,MAAK,SAAA8N,GAAE,OAAIA,EAAGC,QAAQC,WAAaA,KAG7D,IAAMoL,EAAe,SAAAZ,GAAK,OAAIA,EAAM5R,SAAS4R,MAAM3M,MAC7CwN,EAAgB,SAAAb,GAAK,OAAIA,EAAM5R,SAAS+F,WAAWX,MACnDsN,EAAc,SAAAd,GAAK,OAAIA,EAAM5R,SAAS2S,UACtCC,EAAmB,SAAAhB,GAAK,OAAIA,EAAM5R,SAAS6S,MAAMF,UACjDG,EAAsB,SAAAlB,GAAK,OAAIA,EAAM5R,SAAS+S,kBAC9CC,EAA2B,SAAApB,GAAK,OAAIA,EAAM5R,SAAS6S,MAAME,kBACzDE,EAA8B,SAAArB,GAAK,OAAIA,EAAM5R,SAAS6S,MAAMK,QAAQC,eACpEC,EAA+B,SAAAxB,GAAK,OAAIA,EAAM5R,SAAS6S,MAAMK,QAAQG,gBACrEC,EAAqB,SAAA1B,GAAK,OAAIA,EAAM5R,SAASkT,QAAQ/Z,UACrDoa,EAAmB,SAAA3B,GAAK,OAAIA,EAAM5R,SAASkT,QAAQM,eACnDC,EAAoB,SAAA7B,GAAK,OAAIA,EAAM5R,SAAS0T,QAAQC,gBACpDC,EAAmB,SAAAhC,GAAK,OAAIA,EAAM5R,SAAS0T,QAAQG,eACnDC,EAAoB,SAAAlC,GAAK,OAAIA,EAAM5R,SAAS0T,QAAQF,eACpDO,EAAwB,SAAAnC,GAAK,OAAIA,EAAM5R,SAAS6S,MAAMa,QAAQpU,SAC9D0U,EAAiB,SAAApC,GAAK,OAAIA,EAAM5R,SAASkT,QAAQe,aACjDC,EAAsB,SAAAtC,GAAK,OAAIA,EAAM5R,SAASkT,QAAQiB,kBACtDC,EAAsB,SAAAxC,GAAK,OAAIA,EAAM5R,SAASkT,QAAQmB,kBAE/CC,EAAcC,YAAe,CAAC/B,EAAcC,IAAgB,SAACnQ,EAAU8C,GAAS,UACrFoP,EAAUlS,EAASvD,MAAM,MAC/B,iBAAOqG,EACJhM,MAAK,qBAAG6L,OAAoBuP,EAAQ,aADvC,iBAAO,EAEH1O,QAAQ1M,MAAK,qBAAGkN,UAA0BkO,EAAQ,aAFtD,iBAAO,EAGHvN,UAAU7N,MAAK,qBAAG+N,QAAsBC,WAAaoN,EAAQ,aAHjE,aAAO,EAG+Dnc,QAG3Doc,EAAkBF,YAC7B,CAACD,EAAaf,IACd,SAACjR,EAAUkR,GACT,IAAMkB,EAAkBlB,EAAclR,IAAa,GAEnD,OAAO2P,OAAOC,KAAKwC,GAAiBxb,OAAS,KAIpCyb,EAAsBJ,YACjC,CAACD,EAAaf,EAAkBN,IAChC,SAAC3Q,EAAUkR,EAAeoB,GAAc,MAChCC,EAAM,UAAGrB,EAAclR,UAAjB,aAAG,EAAyBuS,OACxC,GAAID,IAAcE,IAAErS,QAAQoS,GAC1B,MAAO,GAGT,OAAOA,EAAOnW,KAAI,SAAAqW,GAChB,IAAIxO,EAASwO,EAAMC,QAAUD,EAAME,SAAY,IAI/C,OAHI1O,EAAQ,IACVA,EAAQ,GAEH,CACLjC,GAAIyQ,EAAMG,WACVC,SAAUJ,EAAM,aAChBK,OAAQL,EAAMM,QATH,KAUXC,QAASP,EAAME,SAVJ,KAWXM,OAAQR,EAAMC,QAXH,KAYXzO,eAMKiP,EAAkBjB,YAC7B,CAACD,EAAaR,IACd,SAACxR,EAAUkR,GACT,IAAMiC,EAAkBjC,EAAclR,IAAa,GAEnD,OAAO2P,OAAOC,KAAKuD,GAAiBvc,OAAS,KAIpCwc,EAAwBnB,YACnC,CACED,EACAf,EACAoB,EACAvB,EACAE,IAEF,SAAChR,EAAUkR,EAAemC,EAAMf,EAAWgB,GAAe,MAClDpN,EAAO,UAAGgL,EAAclR,UAAjB,aAAG,EAAyBkG,QACzC,OAAIoM,IAAcE,IAAErS,QAAQ+F,GACnB,CACLqN,WAAY,GACZC,MAAO,IAGJ,CACLD,WAAYF,EAAKvc,MAAK,qBAAGkL,KAAgBsR,KACzCE,MAAOtN,EAAQpC,QAAO,qBAAG2P,kBAA0CH,SAK5DI,EAAyBzB,YACpC,CACEP,EACAE,EACAE,IAEF,SAAC6B,EAAQC,EAAaC,GACpB,MAAO,CAAEF,SAAQC,cAAaC,kBAIrBC,EAAuB7B,YAClC,CAACD,EAAaR,EAAmBC,IACjC,SAACzR,EAAUkR,EAAeoB,GACxB,GAAIA,EACF,MAAO,GAGT,IAAMlB,EAAUF,EAAclR,IAAa,GACrC+T,EAAOpE,OAAOC,KAAKwB,GAASpC,QAAO,SAACgF,EAAKzX,GAS7C,OARAiW,IAAErS,QAAQiR,EAAQ7U,KAChB6U,EAAQ7U,GAAK0X,SAAQ,SAAAC,GACfF,EAAIE,EAAOC,SAAWH,EAAIE,EAAOC,OAAOpK,SAASxN,GACnDyX,EAAIE,EAAOC,OAAOpQ,KAAKxH,GAEvByX,EAAIE,EAAOC,OAAS,CAAC5X,MAGpByX,IACN,IACH,OAAOrE,OAAOC,KAAKmE,GAAM3X,KAAI,SAAAG,GAAG,MAAK,CAAE6X,MAAO7X,EAAK6U,QAAS2C,EAAKxX,UAIxD8X,EAAoBpC,YAC/B,CAACD,EAAaR,EAAmBC,IACjC,SAACzR,EAAUkR,EAAeoB,GACxB,GAAIA,EACF,MAAO,GAET,IAAMgC,EAAiB,GACjBlD,EAAUF,EAAclR,IAAa,GAY3C,OAXA2P,OAAOC,KAAKwB,GAAS6C,SAAQ,SAAA1X,GAC3BiW,IAAErS,QAAQiR,EAAQ7U,KAChB6U,EAAQ7U,GAAK0X,SAAQ,SAAAC,GACnB,IAAMK,EAAWD,EAAeE,WAC9B,gBAAGJ,EAAH,EAAGA,MAAere,EAAlB,EAAUme,OAAV,OAA6BE,KAAUF,aAAL,EAAKA,EAAQC,QAASpe,IAASwG,KAE/D2X,GAA4B,UAAlBA,EAAOO,SAAoC,IAAdF,GACzCD,EAAevQ,KAAK,CAAEqQ,MAAOF,EAAOC,MAAOD,OAAQ3X,UAIpD+X,KAIEI,EAAwBzC,YACnC,CAACd,EAAmBG,EAAkBU,EAAaR,IACnD,SAAC0C,EAAQE,EAAOpU,EAAUkR,GACxB,IAAME,EAAUF,EAAclR,GAC9B,OAAKkU,GAAWE,GAAU5B,IAAEmC,SAASvD,IAAaoB,IAAErS,QAAQiR,EAAQ8C,IAG7D9C,EAAQ8C,GAAQpQ,QAAO,qBAAGqQ,QAAsBC,KAF9C,MAMAQ,EAA0B3C,YACrC,CAACD,EAAaR,IACd,SAACxR,EAAUkR,GACT,IAAME,EAAUF,EAAclR,GAC9B,OAAKwS,IAAEmC,SAASvD,GAGTzB,OAAOxD,OAAOiF,GAFZ,MAMN,SAASyD,EAAwBvF,EAAO5O,GAC7C,OAAIO,IAA0BqC,2BAA2B5C,GAChDkU,EAAwBtF,GAE1BoF,EAAsBpF,GAGxB,I,IAAMwF,EAAoB7C,YAC/B,CAAC7B,EAAaE,IACd,SAACD,EAAD,GAAiC,IAO3B0E,EAPO/X,EAAoB,EAApBA,QAASwD,EAAW,EAAXA,KACpB,OAAIxD,IAAYwV,IAAErS,QAAQkQ,GACjB,QAEI3Z,IAAT8J,EACK6P,GAKP0E,EADiB,QAAfvU,EAAKwU,MACQ,SAAC7Q,EAAGC,GACjB,OAAO,IAAI1L,KAAKyL,EAAE3D,EAAKyU,UAAUC,UAAY,IAAIxc,KAAK0L,EAAE5D,EAAKyU,UAAUC,WAG1D,SAAC/Q,EAAGC,GACjB,OAAO,IAAI1L,KAAK0L,EAAE5D,EAAKyU,UAAUC,UAAY,IAAIxc,KAAKyL,EAAE3D,EAAKyU,UAAUC,WAGpE7E,EAAS3M,QAAQlD,KAAKuU,OAIpBI,EAAyBlD,YACpC,CAACzB,EAAqBE,IACtB,SAAC0E,EAAD,GACE,GAD8B,EAAdpY,UACAoY,EACd,MAAO,GAGT,IAAM/T,GAAkB+T,GAAiB,IAAI3Y,MAAM,MAAM,GACzD,OAAO4E,EAAiBE,KAAKC,MAAMH,GAAkB,MAI5CgU,EAAY,SAACvQ,EAAUwQ,GAAY,MAG9C,OAFY,UAAGA,EAAQxe,MAAK,SAAA8N,GAAE,OAAIA,EAAG7O,OAAS+O,EAAS/O,eAA3C,aAAG,EAA+CkP,QAKnDsQ,EAAc,SAACzQ,EAAU0Q,GAAa,MAGjD,OAFe,UAAAA,EAAS1e,MAAK,SAAA8N,GAAE,OAAIA,EAAG7O,OAAS+O,EAAS/O,eAAzC,eAAgDoJ,SAAU,iBAK9DsW,EAAkB,SAAC3Q,EAAU0Q,GAAa,QAC/CrW,GAAS,UAAAqW,EAAS1e,MAAK,SAAA8N,GAAE,OAAIA,EAAG7O,OAAS+O,EAAS/O,eAAzC,eAAgDoJ,SAAU,gBACnEuW,EAAI,UAAGF,EAAS1e,MAAK,SAAA8N,GAAE,OAAIA,EAAG7O,OAAS+O,EAAS/O,eAA5C,aAAG,EAAgDqP,QAE7D,OAAOuQ,GAAUxW,EAAQuW,IAGdE,EAAe,CAC1BC,KAAM,OACNC,GAAI,KACJje,MAAO,QACPke,aAAc,gBACdC,SAAU,aAGCC,EAAgB,SAACnT,EAAM0S,GAClC,GAAwB,IAApBA,EAAS5e,OAAc,MAAO,gBAElC,IAAMsf,EAAc,GAQpB,OANAV,EACG1R,QAAO,SAAAnI,GAAC,OAAIA,EAAEmH,OAASA,EAAK/M,QAC5Bke,SAAQ,SAAoBjE,GAC3BkG,EAAYlG,EAAM7Q,SAAU,KAG5B+W,EAAYN,EAAaC,MAAc,OACvCK,EAAYN,EAAa/d,OAAe,QACxCqe,EAAYN,EAAaE,IAAY,KAElC,iBAGIK,EAAoB,SAACrT,EAAM0S,GACtC,GAAwB,IAApBA,EAAS5e,OACX,MAAO,GAGT,IAAMwf,EAAa,CACjBP,KAAM,GACNhe,MAAO,GACPie,GAAI,GACJ,gBAAiB,GACjB,YAAa,IAGfN,EACG1R,QAAO,SAAAnI,GAAC,OAAIA,EAAEmH,OAASA,EAAK/M,QAC5Bke,SAAQ,SAAoBjE,GAC3BoG,EAAWpG,EAAM7Q,SAAWiX,EAAWpG,EAAM7Q,QAAQ4E,KAAK,CACxDH,OAAQoM,EAAMpM,OACdwB,QAASuQ,GAAU3F,EAAM7Q,OAAQ6Q,EAAM5K,cAI7C,IAAIA,EAAU,GA+Cd,OA7CIgR,EAAWP,KAAKjf,OAAS,IACI,IAA3Bwf,EAAWP,KAAKjf,OAClBwO,GAAW,GAAJ,OAAOgR,EAAWP,KAAK,GAAGjS,OAA1B,0BAEPwB,GAAW,0BAAJ,OAA8BgR,EAAWP,KAAKzZ,KAAI,SAAC2J,EAAIzJ,GAC5D,OAAIA,EAAQ8Z,EAAWP,KAAKjf,OAAS,EAC5BmP,EAAGnC,OAEZ,WAAWmC,EAAGnC,WAJT,uCASPwS,EAAWve,MAAMjB,OAAS,IACI,IAA5Bwf,EAAWve,MAAMjB,OACnBwO,GAAW,GAAJ,OAAOgR,EAAWve,MAAM,GAAG+L,OAA3B,gCAEPwB,GAAW,6BAAJ,OAAiCgR,EAAWve,MAAMuE,KAAI,SAAC2J,EAAIzJ,GAChE,OAAIA,EAAQ8Z,EAAWP,KAAKjf,OAAS,EAC5BmP,EAAGnC,OAEZ,WAAWmC,EAAGnC,WAJT,6CASPwS,EAAW,iBAAiBxf,OAAS,IACI,IAAvCwf,EAAW,iBAAiBxf,OAC9BwO,GAAW,GAAJ,OAAOgR,EAAW,iBAAiB,GAAGxS,OAAtC,iFAEPwB,GAAW,+CAAJ,OAAmDgR,EAAW,iBAAiBha,KACpF,SAAA2J,GAAE,OAAIA,EAAGV,UADJ,wBAOkB,IAA3B+Q,EAAWP,KAAKjf,QACY,IAA5Bwf,EAAWve,MAAMjB,QACsB,IAAvCwf,EAAW,iBAAiBxf,QAC5Bwf,EAAWN,GAAGlf,OAAS,IAEvBwO,EAAU,uBAGLA,GAGIiR,EAAkB,SAACzS,EAAQ4R,GACtC,GAAwB,IAApBA,EAAS5e,OAAc,MAAO,gBAClC,IAAMsf,EAAc,GAQpB,OANAV,EACG1R,QAAO,SAAAiC,GAAE,OAAIA,EAAGnC,SAAWA,EAAOI,WAClCiQ,SAAQ,SAAoBjE,GAC3BkG,EAAYlG,EAAM7Q,SAAU,KAG5B+W,EAAYN,EAAaE,IAAY,KACrCI,EAAYN,EAAa/d,OAAe,QACxCqe,EAAYN,EAAaC,MAAc,OACvCK,EAAYN,EAAaI,UAAkB,YAExC,iBAGIM,EAAsB,SAAC1S,EAAQ4R,GAC1C,GAAwB,IAApBA,EAAS5e,OACX,MAAO,GAGT,IAAM2f,EAAe,CACnBV,KAAM,GACNhe,MAAO,GACPie,GAAI,GACJ,gBAAiB,GACjB,YAAa,IAGfN,EACG1R,QAAO,SAAAiC,GAAE,OAAIA,EAAGnC,SAAWA,EAAOI,WAClCiQ,SAAQ,SAAoBjE,GAC3BuG,EAAavG,EAAM7Q,SAAWoX,EAAavG,EAAM7Q,QAAQ4E,KAAK,CAC5DsB,OAAQ2K,EAAM3K,OACdD,QAASuQ,GAAU3F,EAAM7Q,OAAQ6Q,EAAM5K,cAI7C,IAAIA,EAAU,GAqCd,OAnCImR,EAAaV,KAAKjf,OAAS,IACI,IAA7B2f,EAAaV,KAAKjf,OACpBwO,GAAW,GAAJ,OAAOmR,EAAaV,KAAK,GAAGxQ,OAA5B,uBAEPD,GAAW,4BAAJ,OAAgCmR,EAAaV,KAAKzZ,KAAI,SAAA2J,GAAE,OAAIA,EAAGV,UAA/D,gBAIPkR,EAAa1e,MAAMjB,OAAS,IACI,IAA9B2f,EAAa1e,MAAMjB,OACrBwO,GAAW,GAAJ,OAAOmR,EAAa1e,MAAM,GAAGwN,OAA7B,0BAEPD,GAAW,kCAAJ,OAAsCmR,EAAa1e,MAAMuE,KAAI,SAAA2J,GAAE,OAAIA,EAAGV,UAAtE,QAIPkR,EAAa,iBAAiB3f,OAAS,IACI,IAAzC2f,EAAa,iBAAiB3f,OAChCwO,GAAW,GAAJ,OAAOmR,EAAa,iBAAiB,GAAGlR,OAAxC,8DAEPD,GAAW,kCAAJ,OAAsCmR,EAAa,iBAAiBna,KACzE,SAAA2J,GAAE,OAAIA,EAAGV,UADJ,wBAOoB,IAA7BkR,EAAaV,KAAKjf,QACY,IAA9B2f,EAAa1e,MAAMjB,QACsB,IAAzC2f,EAAa,iBAAiB3f,QAC9B2f,EAAaT,GAAGlf,OAAS,IAEzBwO,EAAU,yBAGLA,GAGIoR,EAAyB,SAACrI,EAAQqH,EAAU5d,GACvD,IAYmB,EAXbkL,EADYqL,EAAOxL,KAAKlG,MAAM,MACb,GACvB,OAAwB,IAApB+Y,EAAS5e,OAAqB,CAAES,MAAO,WAAF,OAAaO,EAAb,cAA+BoF,SAAS,GAEpE,WAATpF,EACK4d,EACJ1R,QAAO,SAAA2S,GAAE,OAAIA,EAAG3T,OAASA,GAAQ2T,EAAG7S,SAAWuK,EAAOnK,WACtDlN,MAAK,SAAAW,GAAC,OAAIA,EAAEuF,WACX,CAAE3F,MAAO,gBAAiB2F,SAAS,GACnC,CAAE3F,MAAO,qBAAsB2F,SAAS,GAGjC,OAATpF,EACK,UAAA4d,EAAS1e,MAAK,SAAA8N,GAAE,OAAIA,EAAG7O,OAASoY,EAAOpY,eAAvC,SAA8CiH,QACjD,CAAE3F,MAAO,gBAAiB2F,SAAS,GACnC,CAAE3F,MAAO,oBAAqB2F,SAAS,GAGtC,CAAE3F,MAAO,UAAWO,MAAM,IAGtB+d,GAAY,SAACxW,EAAQiG,GAChC,IAAKA,EAAS,CACZ,GAAe,OAAXjG,EACF,MAAO,kBAGT,GAAe,UAAXA,EACF,MAAO,kDAGT,GAAe,SAAXA,EACF,MAAO,oBAGT,GAAe,kBAAXA,GAAyC,cAAXA,EAChC,MAAO,sDAIX,OAAOiG,I,6FAjfAyJ,E,oEAIAK,E,wEAUOG,E,wFAoBAS,E,mFAKAG,E,qFAMVC,E,4EACAC,E,6EACAC,E,2EACAE,E,gFACAE,E,mFACAE,E,wFACAC,E,2FACAG,E,4FACAE,E,kFACAC,E,gFACAE,E,iFACAG,E,gFACAE,E,iFACAC,E,qFACAC,E,8EACAE,E,mFACAE,E,mFAEOE,E,2EAQAG,E,+EASAE,E,mFAyBAa,E,+EASAE,E,qFAuBAM,E,sFAWAI,E,oFAuBAO,E,iFAuBAK,E,qFAWAE,E,uFAWGC,E,uFAOHC,E,iFAwBAK,E,sFAYAE,E,yEAMAE,E,2EAMAE,E,+EAOAG,E,4EAQAK,E,6EAkBAE,E,iFAwEAE,E,+EAkBAC,E,mFA8DAE,E,sFAsBAb,G,2eCjfAe,EAAeC,aAAW,iBAAO,CAC5CC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPYN,CASxBO,KAESC,EAAmBR,aAAW,iBAAO,CAChDC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,YACZG,SAAU,WARkBT,CAU5BO,M,6FArBSR,E,gFAWAS,E,gtFCOAE,EAAS,SAAA/hB,GACpB,OAAO,kBAAC,IAAD,GAAMkB,WAAS,GAAKlB,KAGhBgiB,EAAS,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,SAAajiB,EAAY,OACxC6W,EAAW/V,cAAX+V,OAEFqL,GAASD,aAAA,EAAAA,EAAUC,UAAUD,aAApB,EAAoBA,EAAUxhB,OAAQ,KACjDA,EAAOoW,EAAO,WAAD,OAAY7W,aAAZ,EAAYA,EAAOS,OAChC0hB,EAAYtL,EAAO,qBAGvB,GAAIqL,QAAmB9gB,IAATX,EAAoB,CAChC,IAAM2hB,EAAQF,EAAO/a,MAAM,KAE3B,GAAqB,IAAjBib,EAAM9gB,OACPb,EADqB,EACb2hB,EADa,MAIpBA,EAAM9gB,OAAS,IACjB6gB,EAAYjF,IAAEmF,QAAQD,GAAOE,KAAK,KAClC7hB,EAAOyc,IAAEqF,KAAKH,IAKlB,QAAahhB,IAATX,GAAyC,MAAnBA,EAAK2N,OAAO,GAAY,CAChD,IAAMgU,EAAQ3hB,EAAK0G,MAAM,KAEzB,GAAqB,IAAjBib,EAAM9gB,OACPb,EADqB,EACb2hB,EADa,MAIpBA,EAAM9gB,OAAS,IACjB6gB,EAAYjF,IAAEmF,QAAQD,GAAOE,KAAK,KAClC7hB,EAAOyc,IAAEqF,KAAKH,IAIlB,OACE,oCACE,kBAAC,IAAD,CACEI,MAAO,CAAEC,aAAc,QACvB5iB,MAAOY,EACPiB,YAAY,qEACZ5B,UAAQ,EACRW,KAAI,kBAAaT,aAAb,EAAaA,EAAOS,MACxBsB,MAAM,OACNE,SAAUjC,EAAMiC,WAElB,kBAACygB,EAAD,CACEjiB,KAAK,oBACLsB,MAAM,mBACNL,YAAY,4CACZ7B,MAAOsiB,EACPlgB,SAAUjC,EAAMiC,SAChBK,KAAK,aAMN,SAASqgB,EAAc3iB,GAC5B,IAAM0C,EAAcrC,mBAAQ,wBAAMC,IAAMqC,MAAMrC,IAAMsiB,QAAlB,UAA2B5iB,EAAMF,gBAAjC,QAA6CQ,IAAMR,YAAW,CAC9FE,EAAMF,WAGR,OAAO,kBAAC,IAAD,GAAMH,SAAU+C,GAAiB1C,EAAjC,CAAwCsC,KAAK,U,EA/DzC0f,E,kDACQlhB,Q,EAyDL6hB,E,wBAcT,IAAME,EAAgB,SAAC,GAAiC,QAA/B1a,iBAA+B,MAAnB,GAAmB,EAAZnI,EAAY,OACrD6W,EAAW/V,cAAX+V,OACR,IAAgC5W,oBAAS,GAAzC,GAAO6iB,EAAP,KAAiBC,EAAjB,KACMC,EAAU,GAAH,OAAMhjB,EAAMS,KAAZ,cAEPwiB,EAAaC,uBAAY,SAAA/gB,GAC7B4gB,EAAY5gB,EAAEghB,OAAOC,WACpB,IAEH,OACE,kBAAC,IAAD,CAAQ9gB,KAAK,UAAU+gB,cAAY,IAChC,YAAwB,IAAfpJ,EAAe,EAArB/R,KACE6V,EAAO9D,EAEX,GAAI9R,GAAaA,EAAU7G,OAAQ,CACjC,GAAIgiB,IAA2BtjB,EAAMS,MAEnCsd,EAD0BuF,IAA2BtjB,EAAMS,MAClCiZ,QAAO,SAACgF,EAAK6E,GAEpC,OADA7E,EAAM6E,EAASC,YAAS9E,GAAM7H,KAE7BoD,GAGL8D,EAAOA,EAAKvP,QAAO,SAAAiV,GAAO,OAAItb,EAAUsM,SAASgP,EAAQrY,aAG3D,IAAM1L,EAAUqe,EAAKjX,KAAI,SAAA2c,GAAO,MAAK,CACnC1hB,MAAO+gB,EAAWY,YAAcD,GAAWA,EAAQhjB,KACnDZ,MAAO4jB,EAAQhjB,SAUjB,OAJI0H,EAAU7G,QACZ2Y,EAASzL,OAAOmV,SAIhB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAU3jB,EAAV,CAAiBN,QAASA,KAC1B,kBAAC,IAAD,CACEkkB,KAAK,QACLhiB,GAAIohB,EACJviB,KAAMuiB,EACN9gB,SAAU+gB,EACVhhB,SAAUjC,EAAMiC,SAChBF,MAAM,2B,EA/CP8gB,E,qHACQ/hB,QAuDd,IAAM+iB,EAAY,CACvB,CAAE9hB,MAAO,MAAOlC,MAAO,MAAOikB,OAAQ,MACtC,CAAE/hB,MAAO,UAAWlC,MAAO,UAAWikB,OAAQ,aAC9C,CAAE/hB,MAAO,QAASlC,MAAO,QAASikB,OAAQ,WAC1C,CAAE/hB,MAAO,SAAUlC,MAAO,SAAUikB,OAAQ,YAC5C,CAAE/hB,MAAO,aAAclC,MAAO,aAAcikB,OAAQ,WACpD,CACE/hB,MAAO,uBACPlC,MAAO,uBACPikB,OAAQ,0BAEV,CAAE/hB,MAAO,aAAclC,MAAO,aAAcikB,OAAQ,mBAGzCC,EAAgB,CAC3B,CAAEhiB,MAAO,MAAOlC,MAAO,MAAOikB,OAAQ,MACtC,CAAE/hB,MAAO,SAAUlC,MAAO,SAAUikB,OAAQ,cAC5C,CAAE/hB,MAAO,SAAUlC,MAAO,SAAUikB,OAAQ,cAC5C,CAAE/hB,MAAO,SAAUlC,MAAO,SAAUikB,OAAQ,cAC5C,CAAE/hB,MAAO,UAAWlC,MAAO,UAAWikB,OAAQ,eAC9C,CAAE/hB,MAAO,MAAOlC,MAAO,MAAOikB,OAAQ,WACtC,CAAE/hB,MAAO,QAASlC,MAAO,QAASikB,OAAQ,aAC1C,CAAE/hB,MAAO,WAAYlC,MAAO,WAAYikB,OAAQ,gBAChD,CAAE/hB,MAAO,MAAOlC,MAAO,MAAOikB,OAAQ,WACtC,CAAE/hB,MAAO,MAAOlC,MAAO,MAAOikB,OAAQ,WACtC,CAAE/hB,MAAO,WAAYlC,MAAO,WAAYikB,OAAQ,gBAChD,CAAE/hB,MAAO,OAAQlC,MAAO,OAAQikB,OAAQ,aAG7BE,EAAiB,SAAAhkB,GAAS,QAMnB,IALV6W,EAAW/V,cAAX+V,OAEJoN,EAAa,UAAGpN,aAAH,EAAGA,EAAQqN,gBAAX,QAAuB,MAClCC,EAAY,UAAGtN,aAAH,EAAGA,EAAQnL,eAAX,QAAsB,GAEpCyY,IAEFF,EAAa,oBADcJ,EAAUzV,MAAM,GAAGgW,UAEzB5iB,MAAK,SAAA0iB,GAAQ,OAAIA,EAASJ,OAAOO,KAAKF,aAD9C,aACX,EAAyEtkB,aAD9D,QACuE,OAGtF,OAAO,kBAAC,IAAD,GAAMyC,KAAK,OAAOzC,MAAOokB,EAAexjB,KAAK,YAAeT,EAA5D,CAAmEN,QAASmkB,M,EAZxEG,E,kDACQljB,QAcd,IAAMwjB,EAAoB,SAAAtkB,GAAS,QAMtB,IALV6W,EAAW/V,cAAX+V,OAEJ0N,EAAS,UAAG1N,aAAH,EAAGA,EAAQvU,YAAX,QAAmB,MAC1B6hB,EAAY,UAAGtN,aAAH,EAAGA,EAAQnL,eAAX,QAAsB,GAEpCyY,IAEFI,EAAS,oBADcR,EAAc3V,MAAM,GAAGgW,UAE7B5iB,MAAK,SAAAc,GAAI,OAAIA,EAAKwhB,OAAOO,KAAKF,aADtC,aACP,EAA6DtkB,aADtD,QAC+D,OAG1E,OAAO,kBAAC,IAAD,GAAMyC,KAAK,OAAOzC,MAAO0kB,EAAW9jB,KAAK,QAAWT,EAApD,CAA2DN,QAASqkB,M,EAZhEO,E,kDACQxjB,QAcd,IAAM0jB,EAAgB,SAAAxkB,GAAS,QAC5B6W,EAAW/V,cAAX+V,OACFoN,EAAa,UAAGpN,aAAH,EAAGA,EAAQqN,gBAAX,QAAuB,GACpCK,EAAS,UAAG1N,aAAH,EAAGA,EAAQvU,YAAX,QAAmB,GAE9B4hB,EAAWL,EAAU,GACrBvhB,EAAOyhB,EAAc,GAUzB,OARIE,IACFC,EAAWL,EAAUriB,MAAK,SAAAijB,GAAC,OAAIA,EAAE5kB,QAAUokB,MAGzCM,IACFjiB,EAAOyhB,EAAcviB,MAAK,SAAAijB,GAAC,OAAIA,EAAE5kB,QAAU0kB,MAI3C,kBAAC,IAAD,CAAQjiB,KAAK,YAAY+gB,cAAY,GACnC,kBAAC,IAAD,CAAQ/gB,KAAK,UAAU+gB,cAAY,IAChC,YAAc,IACTxS,EADS,EAAX3I,KAGEgc,GAA+B,QAAnBA,EAASrkB,QACvBgR,EAAYA,EAAUrC,QAAO,SAAA9C,GAAO,OAAIwY,EAASJ,OAAOO,KAAK3Y,EAAQjL,UAGnE6B,GAAuB,QAAfA,EAAKzC,QACfgR,EAAYA,EAAUrC,QAAO,SAAA9C,GAAO,OAAIpJ,EAAKwhB,OAAOO,KAAK3Y,EAAQjL,UAcnE,IAAMikB,GAVN7T,EAAYA,EAAUrC,QAAO,SAAA9C,GAC3B,OAAImF,EAAUlQ,OAAQ+K,EAAQ/K,KAAKgkB,YACE,WAA5BjZ,EAAQ/K,KAAKgkB,eASrBnW,QAAO,SAAAiW,GAAC,OAAIA,EAAEG,iBACd9d,KAAI,SAAAgH,GAAI,MAAK,CACZjO,MAAOiO,EAAKrN,KACZsB,MAAO+L,EAAKrN,KACZiB,YAAaoM,EAAKpM,YAClBO,SAAU6L,EAAKnN,MAAiC,WAAzBmN,EAAKnN,KAAKgkB,eAGrC,OAAO,kBAAC,IAAD,GAAMriB,KAAK,OAAO1C,aAAa,GAAGa,KAAK,WAAcT,EAArD,CAA4DN,QAASglB,U,EAlDzEF,E,kDACQ1jB,QAwDd,IAAM4hB,EAAkB,SAAC,GAAwB,IAAtB7iB,EAAsB,EAAtBA,MAAUG,EAAY,OAEhDJ,EADakB,cAAX+V,OACoBsL,WAAa,GACrC0C,EAAYhlB,EAEhB,OACE,kBAAC,IAAD,CAAQyC,KAAK,YAAYiX,MAAI,IAC1B,YAAsB,IAAnB1P,EAAmB,EAAnBA,OAAQ3B,EAAW,EAAXA,KACV,GAAe,aAAX2B,IAA0B3B,EAC5B,OAAO,kBAAC,IAAD,8BAGT,GAAe,WAAX2B,EACF,OAAO,kBAAC,IAAD,mCAGT,IAgB8B,EAhB1Bib,EAAa5c,EAUXwc,GARNI,EAAaA,EAAWtW,QAAO,SAAA2T,GAC7B,OAAIA,EAAUxhB,OAAQwhB,EAAUxhB,KAAKgkB,YACE,WAA9BxC,EAAUxhB,KAAKgkB,eAMC7d,KAAI,SAAAgH,GAAI,MAAK,CACtCjO,MAAOiO,EAAKrN,KACZsB,MAAO+L,EAAKrN,KACZwB,SAAU6L,EAAKnN,MAAiC,WAAzBmN,EAAKnN,KAAKgkB,eAGf,YAAhB3kB,aAAA,EAAAA,EAAOsC,QACTuiB,GAAY,UAAAH,EAAQljB,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,QAAUA,YAA9B,eAAsCA,QAAS,IAG7D,OACE,kBAAC,IAAD,GACEyC,KAAK,OACL1C,aAAcA,EACda,KAAK,YACLZ,MAAOglB,GACH7kB,EALN,CAMEN,QAASglB,EACT5kB,UAAQ,S,EA5CP4iB,E,kDACQ5hB,QAmDd,IAAMikB,EAAsB,SAAA/kB,GACjC,OACE,kBAAC,IAAD,CAAQsC,KAAK,YAAY+gB,cAAY,IAClC,YAA0B,IAGnB3jB,GAHmB,EAAvBwI,MACyB,IAENpB,KAAI,SAAAke,GAAS,MAAK,CACrCjjB,MAAOijB,EAAUvkB,KACjBZ,MAAOmlB,EAAUvkB,SAGnB,OAAO,kBAAC,IAAD,GAAM+C,WAAS,GAAKxD,EAApB,CAA2B0B,YAAY,GAAGhC,QAASA,SAMrDulB,EAAa,SAAAjlB,GACxB,IACMJ,EADakB,cAAX+V,OACoBqO,MAAQ,GAEpC,OACE,kBAAC,IAAD,CAAQ5iB,KAAK,OAAOiX,MAAI,IACrB,YAAsB,IAAnB1P,EAAmB,EAAnBA,OAAQ3B,EAAW,EAAXA,KACV,GAAe,aAAX2B,IAA0B3B,EAC5B,OAAO,kBAAC,IAAD,wBAGT,GAAe,WAAX2B,EACF,OAAO,kBAAC,IAAD,8BAGT,IAAMsb,EAAQjd,EAAKsG,QAAO,SAAAlM,GAAI,MAAkB,uCAAdA,EAAK7B,QAA+C,GAEtF,GAAI0kB,EAAMxkB,MAAkC,WAA1BwkB,EAAMxkB,KAAKgkB,WAC3B,OAAO,KAGT,IAAMD,EACJS,EAAMC,cACND,EAAMC,aAAate,KAAI,SAAAgH,GAAI,MAAK,CAC9BjO,MAAOiO,EAAK/L,MACZA,MAAO+L,EAAK/L,MACZE,SAAU6L,EAAKnN,MAAiC,WAAzBmN,EAAKnN,KAAKgkB,eAGrC,OACE,kBAAC,IAAD,GACEriB,KAAK,OACL1C,aAAcA,EACdqC,SAAUkjB,EAAMxkB,MAAkC,WAA1BwkB,EAAMxkB,KAAKgkB,WACnClkB,KAAK,WACDT,EALN,CAMEN,QAASglB,SAQrB,SAASW,EAAoBtH,EAAMlV,GACjC,OAAQA,EAAOvG,MACb,IAAK,oBACH,OAAOgjB,YAAQvH,GAAM,SAAAwH,GACnBA,EAAM9W,KAAK,CAAEhO,KAAM,GAAI6B,KAAM,GAAIkjB,WAAOpkB,EAAWM,YAAa,KAAM7B,MAAO,QAGjF,IAAK,mBACH,OAAOylB,YAAQvH,GAAM,SAAAwH,GACnBA,EAAME,SAGV,QACE,OAAO1H,GAIb,SAAS2H,EAAgBzD,GACvB,QAAyB0D,qBAAWN,GAAqBpD,aAAA,EAAAA,EAAU2D,WAAY,IAA/E,GAEA,MAAO,CAAE7H,KAFT,KAEexW,SAFf,M,EA9DW0d,E,kDACQnkB,Q,EA4DZ4kB,E,0DAMF,IAAMG,EAAW,SAAC,GAA2B,IAAzB5D,EAAyB,EAAzBA,SAAUhgB,EAAe,EAAfA,SAC3B4U,EAAW/V,cAAX+V,OACFiP,EAAuC,6CAApBC,EAEzB,EAA2BL,EAAgBzD,GAAnClE,EAAR,EAAQA,KAAMxW,EAAd,EAAcA,SAERwe,EAAkBlP,EAAOnL,QAE/B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAQsa,OAAT,KACE,kBAAC,IAAQC,MAAT,kBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,SACV,YAAyB,IAClB5C,EADkB,EAAtBwI,KAECsG,QAAO,SAAA2X,GACN,MACsB,4CAApBJ,GACoB,4CAApBA,GACoB,6CAApBA,GACoB,6CAApBA,IAEyB,WAAlBI,EAAS1lB,MAAuC,YAAlB0lB,EAAS1lB,SAIjDqG,KAAI,SAAAqf,GACH,MAAO,CACLpkB,MAAOokB,EAAS1lB,KAChBZ,MAAOsmB,EAAS1lB,SAItB,OACE,oCACE,6BACGsd,EAAKjX,KAAI,SAACgH,EAAM9G,GAAP,OACR,kBAAC,IAAMof,SAAP,CAAgBnf,IAAKD,GACnB,kBAACqf,EAAD,CACEne,KAAM4F,EACN9G,MAAOA,EACPsf,UAAWR,EACXS,MAAO7mB,EACPuC,SAAUA,SAKlB,yBACEugB,MAAO,CACLgE,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGjB3I,EAAKzc,OAAS,GACb,kBAAC,IAAD,CACEigB,MAAM,YACNoF,QAAS,WACPpf,EAAS,CAAEjF,KAAM,sBAEnBL,SAAUA,GALZ,UAUF,kBAAC,IAAD,CACE0kB,QAAS,WACPpf,EAAS,CAAEjF,KAAM,uBAEnBL,SAAUA,GAJZ,eAkBlB,SAASokB,EAAT,GAA4E,QAAhDne,YAAgD,MAAzC,GAAyC,EAArClB,EAAqC,EAArCA,MAAOsf,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,MAAOtkB,EAAY,EAAZA,SACxD2kB,EAAY,YAAH,OAAe5f,GAE1B6f,EAAc3e,EAAKsd,MAMvB,OAJItd,EAAKsd,QACPqB,EAAc3e,EAAKsd,MAAMsB,QAAQ,WAAY,IAAIA,QAAQ,QAAS,KAIlE,oCACE,kBAAC,IAAD,CACEtE,MAAO,CAAEC,aAAc,QACvB1gB,MAAM,OACNO,KAAK,OACL7B,KAAI,UAAKmmB,EAAL,UACJ/mB,MAAOqI,EAAKzH,KACZwB,SAAUA,EACVtC,SAAUW,IAAMqC,MAAMrC,IAAMymB,gBAAiBzmB,IAAMsiB,SACnD9iB,UAAQ,IAEV,kBAAC,IAAD,CACE0iB,MAAO,CAAEC,aAAc,QACvB1gB,MAAM,OACNO,KAAK,OACL7B,KAAI,UAAKmmB,EAAL,UACJlnB,QAAS6mB,EACT1mB,MAAOqI,EAAK5F,KACZL,SAAUA,EACVnC,UAAQ,IAETwmB,GACC,oCACE,kBAAC,IAAD,CACE9D,MAAO,CAAEC,aAAc,QACvB1gB,MAAM,QACNO,KAAK,OACL7B,KAAI,UAAKmmB,EAAL,WACJ/mB,MAAOgnB,EACP5kB,SAAUA,EACVtC,SAAUW,IAAMymB,kBAElB,kBAAC,IAAD,CACEvE,MAAO,CAAEC,aAAc,QACvB1gB,MAAM,cACNO,KAAK,OACL7B,KAAI,UAAKmmB,EAAL,iBACJ/mB,MAAOqI,EAAKxG,YACZ9B,aAAc,KACdqC,SAAUA,EACVtC,SAAUW,IAAMymB,oBAIpBT,GACA,kBAAC,IAAD,CACE9D,MAAO,CAAEC,aAAc,QACvB1gB,MAAM,QACNO,KAAK,OACL7B,KAAI,UAAKmmB,EAAL,WACJ/mB,MAAOqI,EAAKrI,MACZoC,SAAUA,K,EAnJP4jB,E,uFACQ/kB,IAGQ4kB,MAsJtB,IAAMsB,EAAY,SAAAhnB,GACvB,QAAwBC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAEMrnB,EADaiB,cAAX+V,OACa7W,EAAMS,MAE3B,OACE,oCACE,kBAAC,IAAD,GACE0mB,WAAY,CACVC,eACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcC,MAAM,UAClB,kBAAC,IAAD,CACE7E,MAAO,CAAE8E,OAAQ,WACjBX,QAAS,WACPO,GAAQ,KAGV,0BAAM7gB,EAAGkhB,UAMnB1nB,MAAOA,EACPsB,QAAS8lB,EACT/lB,WAAS,GACLlB,IAEN,kBAAC,IAAD,CAAOinB,KAAMA,GACX,kBAAC,IAAD,CACEzE,MAAO,CACLgF,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAMvB,QAAP,KACE,kBAAC,IAAD,GAAMrmB,MAAOA,EAAOqB,WAAS,EAACC,QAAS8lB,EAAMS,QAAQ,YAAe1nB,KAEtE,kBAAC,IAAM2nB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAAS,kBAAMO,GAAQ,KAA/B,e,EAzCDF,E,oFAEQlmB,QAgDd,IAAM+mB,EAAa,SAAC,GAAqC,IAAnC5F,EAAmC,EAAnCA,SAAUhgB,EAAyB,EAAzBA,SAAajC,EAAY,OACtD6W,EAAW/V,cAAX+V,OAGFiR,EAFOzN,OAAOC,KAAKzD,GACHrI,QAAO,SAAAvH,GAAG,OAAIA,EAAI2N,WAAW,cACzBtT,OAAS,EAC7BymB,EAAmB,GAEzB,GAAID,EAAW,EACb,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAUE,IAAK,CACjC,IAAM1lB,EAC8B,YAAlCuU,EAAO,YAAD,OAAamR,EAAb,WAAwC,SAAWnR,EAAO,YAAD,OAAamR,EAAb,WAC3DjmB,EAAQ8U,EAAO,YAAD,OAAamR,EAAb,WACdvnB,EAAO,cAAH,OAAiBunB,GACrBnoB,EACJoiB,WAAUgG,YAAchG,EAASgG,WAAWpR,EAAO,YAAD,OAAamR,EAAb,YAC9C/F,EAASgG,WAAWpR,EAAO,YAAD,OAAamR,EAAb,YAC1BnR,EAAO,cAAD,OAAemR,IAC3BD,EAAiBtZ,KAAK,CAAEnM,OAAMP,QAAOtB,OAAMZ,UAI/C,OAAIkoB,EAAiBzmB,OAAS,EAE1B,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAQ0kB,OAAT,KACE,kBAAC,IAAQC,MAAT,qBAGH8B,EAAiBjhB,KAAI,SAACohB,EAAMlhB,GAC3B,OACE,kBAAC,IAAD,CACEC,IAAKD,EACLwb,MAAO,CAAEC,aAAc,QACvB1gB,MAAOmmB,EAAKnmB,MACZO,KAAM4lB,EAAK5lB,KACX7B,KAAMynB,EAAKznB,KACXZ,MAAOqoB,EAAKroB,MACZoC,SAAUA,EACVP,YAAa1B,EAAM0B,kBAS7B,kBAAC,IAAD,KACE,kBAAC,IAAQskB,OAAT,KACE,kBAAC,IAAQC,MAAT,sB,EAlDK4B,E,kDACQ/mB,QAuDd,I,KAAMqnB,GAAO,SAAAnoB,GAClB,OAAO,kBAAC,IAAD,GAAML,SAAUW,IAAM+I,MAAUrJ,M,6FAroB5B+hB,E,8EAIAC,E,8EA0DGW,E,qFAcHE,E,qFAwDAgB,E,iFAcAE,E,qFAeAC,E,sFAeAM,E,yFAeAE,E,qFAyDA9B,E,uFAoDAqC,E,2FAiBAE,E,kFA4CJI,E,2FAiBAK,E,uFAMIG,E,gFAsFJQ,E,wFAoEIW,E,iFAkDAa,E,kFAwDAM,G,+oBCzpBAC,EAAmB,CAC9BC,IAAK,UACLC,IAAK,UACLC,YAAa,cACbC,QAAS,UACTC,UAAW,YACXC,UAAW,YACXC,OAAQ,SACRC,UAAW,YACXC,QAAS,UACTC,OAAQ,UAGGC,EAAiB,CAC5BX,EAAiBI,QACjBJ,EAAiBU,OACjBV,EAAiBO,OACjBP,EAAiBM,UACjBN,EAAiBQ,WAGNI,EAAyB,CAACZ,EAAiBC,KAE3CY,EAAsB,CACjCb,EAAiBC,IACjBD,EAAiBE,IACjBF,EAAiBG,aAGNW,EAAW,CACtBd,EAAiBO,OACjBP,EAAiBI,QACjBJ,EAAiBU,QAGNK,EAAW,CAACf,EAAiBM,WAE7BU,EAAW,CAAChB,EAAiBS,QAAST,EAAiBK,Y,6FArCvDL,E,6EAaAW,E,2EAQAC,E,mFAEAC,E,gFAMAC,E,qEAMAC,E,qEAEAC,E,wfCrCN,SAASC,EAAmBxQ,GAAQ,UACzC,OAAOA,SAAP,UAAOA,EAAQyQ,kBAAf,iBAAO,EAAoBC,iBAA3B,iBAAO,EAA+B9U,gBAAtC,aAAO,SAA0C,SAG5C,SAAS+U,EAAqB3Q,GAAQ,UAC3C,OAA8C,KAA1CA,SAAA,UAAAA,EAAQyQ,kBAAR,mBAAoBC,iBAApB,eAA+BjoB,SAAqD,UAArCuX,SAAA,UAAAA,EAAQyQ,kBAAR,eAAoBC,UAAU,IAO5E,SAASE,EAAkB7Y,GAChC,IAAKA,EAAS,OAAO,EACrB,IAAM8Y,EAAc9Y,EAAQ+Y,OAE5B,QAAKD,EAAYE,cAGmB,IAAjCF,EAAYE,UAAUtoB,QAA6C,WAA7BooB,EAAYE,UAAU,IAC3B,IAAjCF,EAAYE,UAAUtoB,QACrBooB,EAAYE,UAAUnV,SAAS,WAC/BiV,EAAYE,UAAUnV,SAAS,SAQ9B,SAASoV,EAAQjZ,GACtB,IAAKA,EAAS,OAAO,EAErB,IAAM8Y,EAAc9Y,EAAQ+Y,OAE5B,QAAKD,EAAYE,aAEbF,EAAYE,UAAUnV,SAAS,U,6FArCrB4U,E,6EAIAG,E,+EAQAC,E,4EAkBAI,E,4hBC9BHC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAuB,uBACvBC,EAAyB,0B,6FAHzBH,E,qFACAC,E,wFACAC,E,4FACAC,E,6lECMAC,EAAe,SAAC,GAAoD,QAAlDjkB,gBAAkD,MAAvC,SAAuC,EAA7BkkB,EAA6B,EAA7BA,aAAiBnqB,EAAY,OAC/E,EAAkEc,cAA1D+V,EAAR,EAAQA,OAAQuT,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAAcC,EAAxD,EAAwDA,MAExD,IAAwBtqB,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAIZ,OACE,oCACE,kBAAC,IAAD,GACE5kB,KAAK,SACLL,UAAWsoB,GAASF,GAAgBC,EACpC3D,QAAS,WACPjO,QAAQgS,IAAI,aAAc7T,GACtBsT,EACFjD,GAAQ,GAERkD,MAGApqB,GAEHiG,GAEH,kBAAC,IAAD,CAAOghB,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVC,UAAW,QACX9I,SAAU,SAGZ,kBAAC,IAAD,CAAauF,MAAM,UAAUwD,KAAM,kBAAC,IAAD,QACnC,kBAAC,IAAM3E,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,QACX,kBAACyoB,EAAD,yCAGJ,kBAAC,IAAMpD,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACErE,QAAS,WACPO,GAAQ,KAFZ,OAQF,kBAAC,IAAMS,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPO,GAAQ,GACRkD,MAHJ,aAgBd,SAASW,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,SAGZllB,G,EApFMikB,E,mIACuDppB,S,6FADvDopB,E,kFAuEJa,E,isCChEIK,EAAa,SAAC,GASrB,IARJrpB,EAQI,EARJA,MAQI,IAPJspB,cAOI,MAPK,GAOL,EANJ9pB,EAMI,EANJA,SACA2G,EAKI,EALJA,KACAojB,EAII,EAJJA,SACAziB,EAGI,EAHJA,OACAnH,EAEI,EAFJA,YACG1B,EACC,OACEurB,EAAY,EAAH,GACTD,GAAY,CACdE,QAAStI,uBACP,SAAAuI,GACEA,EAAMC,kBACNJ,EAASpjB,KAEX,CAACojB,EAAUpjB,IAEbyjB,SAAU3rB,EAAMiC,UAAY,EAAI,IAIpC,OACE,6BACMspB,EADN,CAEErlB,UAAWC,IAAW,cAAe,CAAE5E,aACvCqqB,UAAA,yBAA2B7pB,IACvB/B,EAJN,wBAME,kBAAC,IAAD,CAAQkG,UAAU,cAAc2lB,IAAK9pB,EAAO+pB,IAAKT,EAAOS,IAAxD,sBACGT,EAAOhJ,SAAWgJ,EAAOU,UAE5B,0BAAM7lB,UAAU,aAAhB,sBAA8BnE,GAC9B,yBAAKmE,UAAU,aAAf,sBACG2C,GACC,0BAAM8d,QAASqF,EAAc9lB,UAAU,cAAvC,sBACG2C,GAGmB,iBAAhBnH,GACN,kBAAC,IAAD,CAAcuqB,UAAU,QAAQ5E,MAAO3lB,EAAvC,sBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAM2L,KAAM6e,KAAZ,4BASd,SAASF,EAAa7pB,GACpBA,EAAEgqB,iBACFhqB,EAAEupB,kB,EAtDSN,E,iBAyDbA,EAAW9kB,UAAY,CACrBvE,MAAOyE,OACPjF,SAAUoF,OACV1E,SAAU0E,OACV0kB,OAAQe,gBAAM,CACZN,IAAKO,SACLN,SAAUvlB,SAEZ0B,KAAM0W,SACN0M,SAAUgB,OACVzjB,OAAQrC,S,6FAnEG4kB,E,2FAoDJY,E,6uBClEIO,EAAmB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAkB,SAAA3sB,GAChD,IAAI0C,EAQJ,OANAiqB,EAAU7N,SAAQ,SAAA8N,GACZA,GAAgC,mBAAbA,IACrBlqB,EAAQkqB,EAAS5sB,OAId0C,IAGImqB,EAAa,4CAAG,WAAM7sB,GAAN,yGAEnB8sB,MACHC,WACA9sB,SAAS,qBACTH,SAASE,GALa,+EAOlB,KAAEiQ,SAPgB,wDAAH,sDAWb+c,EAAwB,4CAAG,WAAMhtB,GAAN,yGAE9B8sB,MACH7sB,SAAS,qBACTH,SAASE,GAJwB,+EAM7B,KAAEiQ,SAN2B,wDAAH,sDAUxBgd,EAAa,SAAAjtB,GACxB,IACE8sB,MACGC,WACAhqB,MAAM,yBACNmqB,aAAaltB,GAChB,MAAOsC,GACP,OAAOA,EAAE2N,UAIAkd,EAAgB,4CAAG,WAAMntB,GAAN,yGAEtB8sB,MACHC,WACAK,QAAQ,4EAA6E,CACpFC,oBAAoB,EACpBpd,QAAS,2DAEVnQ,SAASE,GARgB,+EAUrB,KAAEiQ,SAVmB,wDAAH,sDAchBqd,EAAgB,4CAAG,WAAMttB,GAAN,yGAEtB8sB,MACHC,WACAK,QAAQ,SAAU,CACjBC,oBAAoB,EACpBpd,QAAS,oCAEVnQ,SAASE,GARgB,+EAUrB,KAAEiQ,SAVmB,wDAAH,sDAchBsd,EAAY,SAAAvtB,GACvB,IAAK,6BAA6BwkB,KAAKxkB,IAAWA,GAA8B,MAArBA,EAAMkV,QAAQ,GACvE,MAAO,0CAIEsY,EAAgB,4CAAG,WAAMxtB,GAAN,yGAEtB8sB,MACHC,WACAK,QAAQ,cAAe,CACtBC,oBAAoB,EACpBpd,QAAS,qCAEVnQ,SAASE,GARgB,+EAUrB,KAAEiQ,SAVmB,wDAAH,sDAchBwd,EAAY,SAAAztB,GACvB,GAAIA,EAAO,CACT,IAAK,kBAAkBwkB,KAAKxkB,GAC1B,MAAO,wEAGT,GAAoB,KADPA,EAAMinB,QAAQ,KAAM,IACxBxlB,OACP,MAAO,yGAKAisB,EAAO,a,EAEL,CACb5qB,MAAO4pB,EACPzsB,SAAU4sB,EACV1pB,kBAAmB6pB,EACnBjqB,MAAOkqB,EACPhqB,MAAOkqB,EACPQ,aAAcL,EACdM,eAAgBF,EAChBG,aAAcH,EACd3K,QAASwK,EACTrG,gBAAiBsG,EACjBhkB,KAAMikB,GAXO,O,6FA1GFf,E,wGAYAG,E,qGAWAG,E,gHAUAC,E,kGAWAE,E,wGAcAG,E,wGAcAC,E,iGAMAC,E,wGAcAC,E,iGAYAC,E,2iBC1GPI,EAAM,MAKCC,EAAmB,SAACC,GAC/B,IAAIC,EAAaD,EACXtY,EAAOuY,EAAaH,EAEpBrY,GADNwY,GAAcH,GAPH,KAULxY,GADN2Y,GATW,MACE,IAWPC,GADND,GAVa,KACA,IAab,OAFAA,GAXa,IAaN,CACLvY,GAAQ,EAAR,UAAeyY,KAAKC,MAAM1Y,GAA1B,KAAqC,KACrCD,GAAS,EAAT,UAAgB0Y,KAAKC,MAAM3Y,GAA3B,KAAuC,KACvCH,GAAW,EAAX,UAAkB6Y,KAAKC,MAAM9Y,GAA7B,KAA2C,KAC3C4Y,GAAW,EAAX,UAAkBC,KAAKC,MAAMF,GAA7B,KAA2C,KAC3CD,GAAc,EAAd,UAAqBE,KAAKC,MAAMH,GAAhC,MAAkD,MAClDtf,OAAOmV,SAASrB,KAAK,O,6FAtBnBqL,E,8EACO,K,+EACE,I,iFACA,I,iFAEFC,E,47BCHN,SAAe3kB,EAAtB,kC,iDAAO,WAA8BilB,GAA9B,iHAEoBvmB,IAAWwmB,KAAK,cAAeD,GAFnD,uBAEKhmB,EAFL,EAEKA,KAFL,kBAII,CAAE8B,OAAQ9B,EAAK8B,OAAQb,YAAajB,EAAKA,KAAKiB,cAJlD,yDAMI,CAAEa,OAAQ,OAAQb,YAAa,GAAItC,SAAU,KAAEA,WANnD,0D,sBAUA,SAASunB,EAAkB/kB,GAChC,OAAO1B,IAAWC,IAAX,sBAA8ByB,IAGhC,SAAeI,EAAtB,kC,iDAAO,WAA+BJ,GAA/B,+GAEoB1B,IAAWC,IAAX,sBAA8ByB,IAFlD,cAEGpB,EAFH,yBAII,CACL+B,OAAQ,UACRJ,WAAY3B,EAASC,KAAKA,KAAKiB,YAAY,KAN1C,uCASHuP,QAAQgS,IAAR,MATG,kBAUI,CAAE1gB,OAAQ,SAVd,0D,sBAcA,SAAeF,EAAtB,kC,iDAAO,WAAqCT,GAArC,yGACE1B,IAAWC,IAAX,sBAA8ByB,EAA9B,YAA8C,CACnDrB,UAAW,cAFR,iD,sBAMA,SAAegF,EAAtB,kC,iDAAO,WAAsC3D,GAAtC,4FACDC,EAAoB,EACpB+kB,GAAiB,EACjBC,GAAY,EAHX,YAKEhlB,EAAoB,KAAO+kB,EAL7B,iCAM4B7kB,EAAMC,EAAgBC,KAAK6kB,KAAMllB,IAN7D,OAMGM,EANH,OAOHL,IACAglB,EAAmD,cAAvC3kB,EAAiBC,WAAWC,OACxCwkB,EAAiBC,GAAoD,WAAvC3kB,EAAiBC,WAAWC,OATvD,gDAYEykB,EAAYxkB,EAAsBT,GAAQe,QAAQC,QAAQ,OAZ5D,kD,sBAeA,SAAS6C,EAAsBnD,GACpC,IACMykB,IADazkB,GAAoBA,EAAiB7B,KAAKA,KAAK+B,QAAUF,EAAiB7B,KAAKA,KAAK+B,QAAQ,GAAG/B,KAAKhB,KAAO,OACtF,IAAIC,MAAM,MAAM,GACxD,OAAOqnB,EAAmBviB,KAAKC,MAAMsiB,GAAoB,GAG3D,SAAStkB,EAAQC,GACf,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,M,SAGrCX,E,mFAAf,WAAqBe,GAArB,sHACQL,EAAQ,KADhB,sBAA4BM,EAA5B,iCAA4BA,EAA5B,mCAESD,EAAE,WAAF,EAAMC,IAFf,iD,oHA3DsBvB,E,qEAUNmlB,E,wEAIM3kB,E,sEAcAK,E,4EAMAkD,E,6EAeNE,E,4EAMPhD,E,8DAIMV,E,0hBC3DTilB,EAAa,SAAAzU,GAAK,OAAIA,EAAM0U,QAErBC,EAAehS,YAAe8R,GAAY,SAAAzU,GAAK,OAAIA,EAAMpS,IAAI,WAE7DgnB,EAAsBjS,YAAe8R,GAAY,SAAAzU,GAAK,OAAIA,EAAMpS,IAAI,kBAEpEinB,EAAuBlS,YAAe8R,GAAY,SAAAzU,GAAK,OAClEA,EAAMpS,IAAI,iBAAiBA,IAAI,WAGpBknB,EAA4BnS,YAAe8R,GAAY,SAAAzU,GAAK,OACvEA,EAAMpS,IAAI,iBAAiBA,IAAI,gBAGpBmnB,EAAwBpS,YAAe8R,GAAY,SAAAzU,GAAK,OACnEA,EAAMpS,IAAI,qB,6FAfN6mB,E,oEAEOE,E,sEAEAC,E,6EAEAC,E,8EAIAC,E,mFAIAC,E,6eCbAC,EAAqBrS,aAChC,SAAA3C,GAAK,OAAIA,EAAMiV,WACf,SAAAA,GAEE,OAAOA,EAAQrnB,IAAI,eAAeA,IAAI,WAI7BsnB,EAAwBvS,aACnC,SAAA3C,GAAK,OAAIA,EAAMiV,WACf,SAAAA,GACE,OAAOA,EAAQrnB,IAAI,eAAeA,IAAI,e,6FAX7BonB,E,iFAQAE,E,qrCCGN,SAASC,IACd,mDAAO,WAAM5nB,GAAN,6FACLA,EAASE,IAASC,QAAQ4P,MADrB,kBAIoB3P,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUsnB,MAAO,CACpEpnB,UAAW,aALV,OAIGC,EAJH,OAOHV,EAASE,IAAS7B,QAAQ0R,IAAgBrP,EAASC,OAPhD,gDASHX,EAASE,IAAS3B,KAAKwR,IAAd,OATN,iCAYE,QAZF,yDAAP,sDAgBK,SAAS+X,EAAc5uB,GAC5B,mDAAO,WAAM8G,GAAN,6FACLA,EAASE,IAASC,QAAQ8P,IAAW/W,IADhC,kBAIoBkH,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAUsnB,MAA3C,YAAoD3uB,IAJxE,OAIGwH,EAJH,OAKHV,EAASE,IAAS7B,QAAQ4R,IAAWvP,EAASC,OAL3C,gDAOHX,EAASE,IAAS3B,KAAK0R,IAAd,OAPN,yDAAP,sDAYK,SAAS8X,EAAoBjtB,GAClC,mDAAO,WAAMkF,GAAN,mGACGgoB,EAAoBltB,EAApBktB,KAAMtoB,EAAc5E,EAAd4E,IAAK3E,EAASD,EAATC,KAEnBiF,EAASE,IAASC,QAAQ0K,IAAiBmd,IAHtC,kBAMoB5nB,IAAW6nB,MAAX,UAClBnwB,IAAUwI,KAAKC,UAAUsnB,MADP,YACgBG,EADhB,kBAC8BjtB,EAD9B,YACsC2E,IAP1D,OAMGgB,EANH,OASHV,EAASE,IAAS7B,QAAQwM,IAAiBnK,EAASC,OATjD,gDAWHX,EAASE,IAAS3B,KAAKsM,IAAd,OAXN,yDAAP,sDAgBK,SAASqd,EAAqBptB,GACnC,mDAAO,WAAMkF,GAAN,mGACGgoB,EAAoBltB,EAApBktB,KAAMtoB,EAAc5E,EAAd4E,IAAK3E,EAASD,EAATC,KAEnBiF,EAASE,IAASC,QAAQ2K,IAAkBkd,IAHvC,kBAMoB5nB,IAAW6nB,MAAX,UAClBnwB,IAAUwI,KAAKC,UAAUsnB,MADP,YACgBG,EADhB,mBAC+BjtB,EAD/B,YACuC2E,IAP3D,OAMGgB,EANH,OASHV,EAASE,IAAS7B,QAAQyM,IAAkBpK,EAASC,OATlD,gDAWHX,EAASE,IAAS3B,KAAKuM,IAAd,OAXN,yDAAP,sDAgBK,SAASqd,EAAqBrtB,GACnC,mDAAO,WAAMkF,GAAN,yGACLA,EAASE,IAASC,QAAQ+P,IAAoBpV,IADzC,kBAIoBsF,IAAW6nB,MAAX,UAClBnwB,IAAUwI,KAAKC,UAAUsnB,MADP,YACgB/sB,EAAOktB,KADvB,UAErB,CAAEI,OAAQttB,EAAOstB,SANhB,cAIG1nB,EAJH,OAQHV,EAASE,IAAS7B,QAAQ6R,IAAoBxP,EAASC,OARpD,SAUoBP,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUsnB,MAAO,CACpEpnB,UAAW,aAXV,cAUG4nB,EAVH,OAaHroB,EAASE,IAAS7B,QAAQ0R,IAAgBsY,EAAS1nB,OAbhD,kBAeI,QAfJ,yCAiBC2nB,EAjBD,KAmBD,2CAAO5nB,gBAAP,mBAAiBC,YAAjB,SAAuBrB,UACvB,KAAMoB,SAASC,KAAKrB,SAASvF,OAAS,GADtC,UAEA,KAAM2G,SAASC,KAAKrB,SAAS,UAF7B,OAEA,EAAiCK,OAEjC2oB,EAAQ,UAAG,KAAM5nB,SAASC,KAAKrB,SAAS,UAAhC,aAAG,EAAiCK,KAAKC,MAAM,MAAM,IAE/DI,EAASE,IAAS3B,KAAK2R,IAAoBoY,IAzBxC,kBA2BI,CAAEvtB,KAAM,OAAQwN,QAAS+f,IA3B7B,0DAAP,sDAgCK,SAASC,EAA0BztB,GACxC,mDAAO,WAAMkF,GAAN,uGACLA,EAASE,IAASC,QAAQ+P,IAAoBpV,IADzC,kBAIoBsF,IAAW6nB,MAAX,UAClBnwB,IAAUwI,KAAKC,UAAUsnB,MADP,YACgB/sB,EAAOktB,KADvB,WAErB,CAAEI,OAAQttB,EAAOstB,SANhB,cAIG1nB,EAJH,OAQHV,EAASE,IAAS7B,QAAQ6R,IAAoBxP,EAASC,OARpD,kBASI,QATJ,uCAWC2nB,EAXD,KAaD,2CAAO5nB,gBAAP,mBAAiBC,YAAjB,SAAuBrB,UACvB,KAAMoB,SAASC,KAAKrB,SAASvF,OAAS,GADtC,UAEA,KAAM2G,SAASC,KAAKrB,SAAS,UAF7B,OAEA,EAAiCK,OAEjC2oB,EAAQ,UAAG,KAAM5nB,SAASC,KAAKrB,SAAS,UAAhC,aAAG,EAAiCK,KAAKC,MAAM,MAAM,IAG/DI,EAASE,IAAS3B,KAAK2R,IAAoBoY,IApBxC,kBAqBI,CAAEvtB,KAAM,OAAQwN,QAAS+f,IArB7B,yDAAP,sDA0BK,SAASE,EAAoBR,GAClC,mDAAO,WAAMhoB,GAAN,+FACLA,EAASE,IAASC,QAAQiQ,IAAiB4X,IADtC,kBAIG5nB,IAAW6nB,MAAX,UAAoBnwB,IAAUwI,KAAKC,UAAUsnB,MAA7C,YAAsDG,EAAK9uB,KAA3D,WAA0E,CAC9EkvB,OAAQJ,EAAK3F,YALZ,uBAQoBjiB,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUsnB,MAAO,CACpEpnB,UAAW,aATV,cAQG4nB,EARH,OAWHroB,EAASE,IAAS7B,QAAQ+R,IAAiBiY,EAAS1nB,OAXjD,UAaoBP,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAUsnB,MAA3C,YAAoDG,EAAK9uB,OAb7E,eAaGwH,EAbH,OAcHV,EAASE,IAAS7B,QAAQ4R,IAAWvP,EAASC,OAd3C,kBAgBI,QAhBJ,yCAkBHX,EAASE,IAAS3B,KAAK6R,IAAd,OAlBN,kBAoBI,KAAMzP,MApBV,0DAAP,sDAyBK,SAAS8nB,EAAgBnZ,GAC9B,mDAAO,WAAMtP,GAAN,mGACC2mB,EAAO,CACXztB,KAAMoW,EAAOoZ,SACbC,SAAUrZ,EAAOqZ,SACjBxuB,YAAamV,EAAOnV,YACpBiuB,OAAQ9Y,EAAO8Y,QAEjBpoB,EAASE,IAASC,QAAQkQ,IAAasW,IAPlC,kBAUoBvmB,IAAWwmB,KAAX,UAAmB9uB,IAAUwI,KAAKC,UAAUsnB,OAASlB,GAVzE,cAUGjmB,EAVH,gBAYqBN,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUsnB,MAAO,CACrEpnB,UAAW,aAbV,cAYGmoB,EAZH,OAeH5oB,EAASE,IAAS7B,QAAQ0R,IAAgB6Y,EAAUjoB,OAEpDX,EAASE,IAAS7B,QAAQgS,MAjBvB,kBAmBI3P,EAASC,MAnBb,yCAqBHX,EAASE,IAAS3B,KAAK8R,IAAd,OArBN,wDAsBI,KAAO3P,gBAtBX,aAsBI,EAAiBC,MAtBrB,0DAAP,uD,6FAvJcinB,E,mFAiBAE,E,+EAaAC,E,qFAiBAG,E,sFAiBAC,E,sFAiCAI,E,2FA2BAC,E,qFA0BAC,E,yiCCpJT,SAASI,IACd,mDAAO,WAAM7oB,GAAN,6FACLA,EAASE,IAASC,QAAQuK,MADrB,kBAIoBtK,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUuoB,OAAQ,CACrEroB,UAAW,aALV,OAIGC,EAJH,OAOHV,EAASE,IAAS7B,QAAQqM,IAAiBhK,EAASC,OAPjD,uDASHX,EAASE,IAAS3B,KAAKmM,IAAiB,KAAM/J,OAT3C,kBAWI,KAAMA,MAXV,yDAAP,sDAgBK,SAASooB,EAAe7vB,GAC7B,mDAAO,WAAM8G,GAAN,6FACLA,EAASE,IAASC,QAAQwK,IAAYzR,IADjC,kBAIoBkH,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAUuoB,OAA3C,YAAqD5vB,IAJzE,OAIGwH,EAJH,OAKHV,EAASE,IAAS7B,QAAQsM,IAAYjK,EAASC,OAL5C,gDAOHX,EAASE,IAAS3B,KAAKoM,IAAY,KAAMhK,OAPtC,yDAAP,sDAYK,SAASqoB,EAAiB1Z,GAC/B,mDAAO,WAAMtP,GAAN,mGACC2mB,EAAO,CACXztB,KAAMoW,EAAO2Z,UACb9uB,YAAamV,EAAOnV,YACpBiuB,OAAQ9Y,EAAO8Y,QAEjBpoB,EAASE,IAASC,QAAQgL,IAAcwb,IANnC,kBASoBvmB,IAAWwmB,KAAX,UAAmB9uB,IAAUwI,KAAKC,UAAUuoB,QAAUnC,GAT1E,cASGjmB,EATH,gBAWqBN,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUuoB,OAAQ,CACtEroB,UAAW,aAZV,cAWGmoB,EAXH,OAcH5oB,EAASE,IAAS7B,QAAQqM,IAAiBke,EAAUjoB,OAErDX,EAASE,IAAS7B,QAAQ8M,MAhBvB,kBAkBIzK,EAASC,MAlBb,yCAoBHX,EAASE,IAAS3B,KAAK4M,IAAd,OApBN,wDAqBI,KAAOzK,gBArBX,aAqBI,EAAiBC,MArBrB,0DAAP,sDA0BK,SAASonB,EAAoBjtB,GAClC,mDAAO,WAAMkF,GAAN,mGACGkpB,EAAqBpuB,EAArBouB,MAAOxpB,EAAc5E,EAAd4E,IAAK3E,EAASD,EAATC,KACpBiF,EAASE,IAASC,QAAQ0K,IAAiBqe,IAFtC,kBAKoB9oB,IAAW6nB,MAAX,UAClBnwB,IAAUwI,KAAKC,UAAUuoB,OADP,YACiBI,EADjB,kBACgCnuB,EADhC,YACwC2E,IAN5D,cAKGgB,EALH,OAQHV,EAASE,IAAS7B,QAAQwM,IAAiBnK,EAASC,OARjD,kBAUID,EAASC,MAVb,yCAYHX,EAASE,IAAS3B,KAAKsM,IAAd,OAZN,kBAaI,KAAMlK,MAbV,0DAAP,sDAkBK,SAASunB,EAAqBptB,GACnC,mDAAO,WAAMkF,GAAN,mGACGkpB,EAAqBpuB,EAArBouB,MAAOxpB,EAAc5E,EAAd4E,IAAK3E,EAASD,EAATC,KACpBiF,EAASE,IAASC,QAAQ2K,IAAkBoe,IAFvC,kBAKoB9oB,IAAW6nB,MAAX,UAClBnwB,IAAUwI,KAAKC,UAAUuoB,OADP,YACiBI,EADjB,mBACiCnuB,EADjC,YACyC2E,IAN7D,cAKGgB,EALH,OAQHV,EAASE,IAAS7B,QAAQyM,IAAkBpK,EAASC,OARlD,kBAUID,EAASC,MAVb,yCAYHX,EAASE,IAAS3B,KAAKuM,IAAd,OAZN,kBAaI,KAAMnK,MAbV,0DAAP,sDAkBK,SAASwoB,EAA0BruB,GACxC,mDAAO,WAAMkF,GAAN,uGACLA,EAASE,IAASC,QAAQ6K,IAAyBlQ,IAD9C,kBAIGsF,IAAW6nB,MAAX,UAAoBnwB,IAAUwI,KAAKC,UAAUsnB,MAA7C,YAAsD/sB,EAAOktB,KAA7D,WAA4E,CAChFI,OAAQ,CAACttB,EAAOouB,SALf,uBAQiB9oB,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAUuoB,OAA3C,YAAqDhuB,EAAOouB,QAR7E,OAQGA,EARH,OAUHlpB,EAASE,IAAS7B,QAAQ2M,IAAyBke,EAAMvoB,OAVtD,yDAYC2nB,EAZD,KAcD,2CAAO5nB,gBAAP,mBAAiBC,YAAjB,SAAuBrB,UACvB,KAAMoB,SAASC,KAAKrB,SAASvF,OAAS,GADtC,UAEA,KAAM2G,SAASC,KAAKrB,SAAS,UAF7B,OAEA,EAAiCK,OAEjC2oB,EAAQ,UAAG,KAAM5nB,SAASC,KAAKrB,SAAS,UAAhC,aAAG,EAAiCK,KAAKC,MAAM,MAAM,IAG/DI,EAASE,IAAS3B,KAAKyM,IAAyB,CAAEvI,OAAQ,OAAQnD,SAAUgpB,KArBzE,kBAuBI,CAAE7lB,OAAQ,OAAQnD,SAAUgpB,IAvBhC,0DAAP,sDA4BK,SAASc,EAAqBtuB,GACnC,mDAAO,WAAMkF,GAAN,uGACLA,EAASE,IAASC,QAAQ8K,IAA0BnQ,IAD/C,kBAIoBsF,IAAW6nB,MAAX,UAClBnwB,IAAUwI,KAAKC,UAAUuoB,OADP,YACiBhuB,EAAOouB,MADxB,WAErB,CAAEd,OAAQttB,EAAOstB,SANhB,OAIG1nB,EAJH,OAQHV,EAASE,IAAS7B,QAAQ4M,IAA0BvK,EAASC,OAR1D,uDAUC2nB,EAVD,KAYD,2CAAO5nB,gBAAP,mBAAiBC,YAAjB,SAAuBrB,UACvB,KAAMoB,SAASC,KAAKrB,SAASvF,OAAS,GADtC,UAEA,KAAM2G,SAASC,KAAKrB,SAAS,UAF7B,OAEA,EAAiCK,OAEjC2oB,EAAQ,UAAG,KAAM5nB,SAASC,KAAKrB,SAAS,UAAhC,aAAG,EAAiCK,KAAKC,MAAM,MAAM,IAG/DI,EAASE,IAAS3B,KAAK0M,IAA0B,CAAExI,OAAQ,OAAQnD,SAAUgpB,KAnB1E,kBAqBI,CAAE7lB,OAAQ,OAAQnD,SAAUgpB,IArBhC,yDAAP,sDA0BK,SAASe,EAAqBvuB,GACnC,mDAAO,WAAMkF,GAAN,2GACGkpB,EAAiBpuB,EAAjBouB,MAAOI,EAAUxuB,EAAVwuB,MAEftpB,EAASE,IAASC,QAAQ4K,IAAoBjQ,IAHzC,kBAMG+H,QAAQ0mB,IACZD,EAAM/pB,IAAN,4CAAU,WAAMyoB,GAAN,yGACD5nB,IAAW6nB,MAAX,UAAoBnwB,IAAUwI,KAAKC,UAAUsnB,MAA7C,YAAsDG,EAAtD,UAAoE,CACzEI,OAAQ,CAACc,MAFH,gDAAV,wDAPC,uBAcoB9oB,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAUuoB,OAA3C,YAAqDhuB,EAAOouB,QAdhF,cAcGxoB,EAdH,OAgBHV,EAASE,IAAS7B,QAAQ0M,IAAoBrK,EAASC,OAhBpD,kBAkBID,EAASC,MAlBb,yCAoBC2nB,EApBD,KAsBD,2CAAO5nB,gBAAP,mBAAiBC,YAAjB,SAAuBrB,UACvB,KAAMoB,SAASC,KAAKrB,SAASvF,OAAS,GADtC,UAEA,KAAM2G,SAASC,KAAKrB,SAAS,UAF7B,OAEA,EAAiCK,OAEjC2oB,EAAQ,UAAG,KAAM5nB,SAASC,KAAKrB,SAAS,UAAhC,aAAG,EAAiCK,KAAKC,MAAM,MAAM,IAG/DI,EAASE,IAAS3B,KAAKwM,IAAoBud,IA7BxC,kBA8BI,CAAE7lB,OAAQ,OAAQnD,SAAUgpB,IA9BhC,0DAAP,sDAmCK,SAASkB,EAAiBN,GAC/B,mDAAO,WAAMlpB,GAAN,uFACLA,EAASE,IAASC,QAAQyK,IAAcse,IADnC,kBAIG9oB,IAAWqpB,OAAX,UAAqB3xB,IAAUwI,KAAKC,UAAUuoB,OAA9C,YAAwDI,IAJ3D,cAKHlpB,EAASE,IAAS7B,QAAQuM,MAE1B5K,EAAS6oB,KAPN,kBASI,QATJ,uCAWH7oB,EAASE,IAAS3B,KAAKqM,IAAd,OAXN,kBAaI,KAAMjK,MAbV,yDAAP,uD,6FA5LckoB,E,qFAiBAE,E,iFAaAC,E,mFA2BAjB,E,sFAmBAG,E,uFAmBAiB,E,4FA6BAC,E,uFA2BAC,E,uFAoCAG,E,otBCzMT,SAASE,EAAiBzlB,GAC/B,IAAM0lB,EAAgB,GAOtB,OALA1lB,EAAW1E,KAAI,SAAAqqB,GAEb,OADAD,EAAcC,EAAU1wB,MAA4B,OAApB0wB,EAAU3L,MAAiB2L,EAAU3L,MAAQ,GACtE,QAGF0L,EAGF,SAASE,EAAoB5lB,GAClC,IAAM6lB,EAAmB,GAEzB7lB,EAAW1E,KAAI,SAAAqqB,GAOb,OANAE,EAAiBF,EAAU1wB,MAAQksB,MAE/BwE,EAAUG,aACZD,EAAiBF,EAAU1wB,MAAMX,SAAS,uBAGrC,QAIJ,SAASyxB,EAAiB1a,GAC/B,IAAMrL,EAAa,GAgBnB,OAdA6O,OAAOC,KAAKzD,GAAQ/P,KAAI,SAAAjH,GAWtB,MAV6B,iBAAlBgX,EAAOhX,IACZgX,EAAOhX,GAAOyB,OAAS,GAAKuV,EAAOhX,GAAOwW,UAC5C7K,EAAW3L,GAASgX,EAAOhX,IAEK,WAAzB,EAAOgX,EAAOhX,KACnBgX,EAAOhX,GAAOY,OAASoW,EAAOhX,GAAOY,KAAKa,OAAS,GAAKuV,EAAOhX,GAAOY,KAAK4V,UAC7E7K,EAAW3L,GAASgX,EAAOhX,GAAOY,MAI/B,QAGF+K,G,6FA1COylB,E,0FAWAG,E,6FAcAG,E,w3DCNT,SAASC,IACd,mDAAO,WAAMjqB,GAAN,6FACLA,EAASE,IAASC,QAAQyJ,MADrB,kBAIoBxJ,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAU2pB,oBAAqB,CAClFzpB,UAAW,aALV,OAIGC,EAJH,OAQHV,EAASE,IAAS7B,QAAQuL,IAA6BlJ,EAASC,KAAKA,OARlE,gDAUHX,EAASE,IAAS3B,KAAKqL,IAAd,OAVN,yDAAP,sDAeK,SAASugB,IACd,OAAO,SAAAnqB,GAGL,OAFAA,EAASE,IAASoB,OAAOyI,MAElB,QAIJ,SAASqgB,IACd,OAAO,SAAmBpqB,EAAUC,GAClC,IAAQoqB,EAAepqB,IAAWqqB,mBAA1BD,WAIR,OAFArqB,EAASE,IAASoB,OAAOwI,IAAYugB,IAE9B,QAIJ,SAASE,EAAkBxjB,GAChC,OAAO,SAAsB/G,EAAUC,GACrC,IAAQuqB,EAAevqB,IAAWqqB,mBAA1BE,WACFC,EAAoBxqB,IAAWqqB,mBAA/BG,gBAEAC,EAAUF,EAAW7S,WAAU,SAAAzO,GAAE,OAAIA,EAAGhQ,OAAS6N,EAAO7N,QAW9D,OAREuxB,EADEA,EAAgBxwB,MAAK,SAAAiP,GAAE,OAAIA,EAAGhQ,OAAS6N,EAAO7N,QAC9BuxB,EAAgBxjB,QAAO,SAAAiC,GAAE,OAAIA,EAAGhQ,OAAS6N,EAAO7N,QAEhD,GAAH,SAAOuxB,GAAP,CAAwBD,EAAWE,MAGpC/mB,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEqjB,QAAUpjB,EAAEojB,WAE7C3qB,EAASE,IAASoB,OAAO0I,IAAeygB,IACjC,QAIJ,SAASG,IACd,mDAAO,WAAM5qB,GAAN,6FACLA,EAASE,IAASC,QAAQ0J,MADrB,kBAIoBzJ,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUsqB,4BAA6B,CAC1FpqB,UAAW,aALV,OAIGC,EAJH,OAQHV,EAASE,IAAS7B,QAAQwL,IAAqCnJ,EAASC,KAAKA,OAR1E,gDAUHX,EAASE,IAAS3B,KAAKsL,IAAd,OAVN,yDAAP,sDAeK,SAASihB,EAAsBC,GACpC,mDAAO,WAAM/qB,GAAN,+FACLA,EAASE,IAASC,QAAQ8J,MADrB,SAICyG,EAJD,UAIU5Y,IAAUwI,KAAKC,UAAU2pB,oBAJnC,kBAKCa,IACFra,EAAM,GAAH,OAAMA,EAAN,oBAAqBqa,IANvB,SAQoB3qB,IAAWC,IAAIqQ,GARnC,OAQGhQ,EARH,OASHV,EAASE,IAAS7B,QAAQ4L,IAAoBvJ,EAASC,KAAKA,MAAQ,KATjE,kDAWHX,EAASE,IAAS3B,KAAK0L,IAAd,OAXN,0DAAP,sDAgBK,SAAS+gB,EAAsBD,GACpC,mDAAO,WAAM/qB,GAAN,+FACLA,EAASE,IAASC,QAAQ+J,MADrB,SAICwG,EAJD,UAIU5Y,IAAUwI,KAAKC,UAAU2pB,oBAJnC,kBAKCa,IACFra,EAAM,GAAH,OAAMA,EAAN,oBAAqBqa,IANvB,SAQoB3qB,IAAWC,IAAIqQ,GARnC,OAQGhQ,EARH,OASHV,EAASE,IAAS7B,QAAQ6L,IAAoBxJ,EAASC,KAAKA,MAAQ,KATjE,kDAWHX,EAASE,IAAS3B,KAAK2L,IAAd,OAXN,0DAAP,sDAgBK,SAAS+gB,EAAuBF,GACrC,mDAAO,WAAM/qB,GAAN,6FACLA,EAASE,IAASC,QAAQgK,MADrB,kBAIoB/J,IAAWC,IAAX,qCAA6C0qB,IAJjE,OAIGrqB,EAJH,OAKHV,EAASE,IAAS7B,QAAQ8L,IAAqBzJ,EAASC,KAAKA,KAAK,KAL/D,gDAOHX,EAASE,IAAS3B,KAAK4L,IAAd,OAPN,yDAAP,sDAYK,SAAS+gB,EAAgBH,GAC9B,mDAAO,WAAM/qB,GAAN,+FACLA,EAASE,IAASC,QAAQiK,MAEtBsG,EAHC,UAGQ5Y,IAAUwI,KAAKC,UAAU2pB,oBAHjC,YAIDa,IACFra,EAAM,GAAH,OAAM5Y,IAAUwI,KAAKC,UAAU2pB,oBAA/B,4BAAsEa,IALtE,kBASoB3qB,IAAWC,IAAIqQ,GATnC,OASGhQ,EATH,OAUHV,EAASE,IAAS7B,QAAQ+L,IAAc1J,EAASC,KAAKA,MAAQ,KAV3D,kDAYHX,EAASE,IAAS3B,KAAK6L,IAAd,OAZN,0DAAP,sDAiBK,SAAS+gB,EAAmBJ,GACjC,mDAAO,WAAM/qB,GAAN,+FACLA,EAASE,IAASC,QAAQkK,MAEtBqG,EAHC,UAGQ5Y,IAAUwI,KAAKC,UAAU2pB,oBAHjC,eAIDa,IACFra,EAAM,GAAH,OAAM5Y,IAAUwI,KAAKC,UAAU2pB,oBAA/B,+BAAyEa,IALzE,kBASoB3qB,IAAWC,IAAIqQ,GATnC,OASGhQ,EATH,OAUHV,EAASE,IAAS7B,QAAQgM,IAAiB3J,EAASC,KAAKA,MAAQ,KAV9D,kDAYHX,EAASE,IAAS3B,KAAK8L,IAAd,OAZN,0DAAP,sDAiBK,SAAS+gB,EAAmBL,GACjC,mDAAO,WAAM/qB,GAAN,+FACLA,EAASE,IAASC,QAAQmK,MAEtBoG,EAHC,UAGQ5Y,IAAUwI,KAAKC,UAAU2pB,oBAHjC,eAIDa,IACFra,EAAM,GAAH,OAAM5Y,IAAUwI,KAAKC,UAAU2pB,oBAA/B,+BAAyEa,IALzE,kBASoB3qB,IAAWC,IAAIqQ,GATnC,OASGhQ,EATH,OAUHV,EAASE,IAAS7B,QAAQiM,IAAiB5J,EAASC,KAAKA,MAAQ,KAV9D,kDAYHX,EAASE,IAAS3B,KAAK+L,IAAd,OAZN,0DAAP,sDAiBK,SAAS+gB,IACd,mDAAO,WAAMrrB,GAAN,6FACLA,EAASE,IAASC,QAAQoK,MADrB,kBAIoBnK,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAU2pB,oBAA3C,WAJpB,OAIGxpB,EAJH,OAKHV,EAASE,IAAS7B,QAAQkM,IAAY7J,EAASC,KAAKA,MAAQ,KALzD,gDAOHX,EAASE,IAAS3B,KAAKgM,IAAd,OAPN,yDAAP,sDAYK,SAAS+gB,EAAcP,GAC5B,mDAAO,WAAM/qB,GAAN,qGACLA,EAASE,IAASC,QAAQqK,MAEpB+gB,EAAeR,EAAW,MAAQ,GAClCS,EAAeT,EAAW,SAAH,OAAYA,GAAa,GAJjD,kBAM6B3qB,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAU2pB,oBAA3C,YAAkEqB,EAAlE,6BAAmGC,IANhI,OAMGC,EANH,OAOG9qB,GAAQ8qB,EAAkB9qB,KAAKA,MAAQ,IAAIwR,QAAO,SAACuZ,EAAKnlB,GAC5D,OAAOuM,OAAO6Y,OAAOD,EAAKnlB,KACzB,IACGxG,EAAU,CACd6rB,UAAWjrB,EAAKkrB,WAChBC,YAAanrB,EAAKorB,aAClBC,YAAarrB,EAAKsrB,aAClBC,oBAAqBvrB,EAAKwrB,sBAG5BnsB,EAASE,IAAS7B,QAAQmM,IAAiBzK,IAjBxC,kDAmBHC,EAASE,IAAS3B,KAAKiM,IAAd,OAnBN,0DAAP,sDAwBK,SAAS4hB,EAAsBrB,GACpC,mDAAO,WAAM/qB,GAAN,+FACLA,EAASE,IAASC,QAAQsK,MADrB,SAICiG,EAJD,UAIU5Y,IAAUwI,KAAKC,UAAU2pB,oBAJnC,kBAKCa,IACFra,EAAM,GAAH,OAAM5Y,IAAUwI,KAAKC,UAAU2pB,oBAA/B,kCAA4Ea,IAN9E,SAQoB3qB,IAAWC,IAAIqQ,GARnC,OAQGhQ,EARH,OASHV,EAASE,IAAS7B,QAAQoM,IAAoB/J,EAASC,KAAKA,MAAQ,KATjE,kDAWHX,EAASE,IAAS3B,KAAKkM,IAAd,OAXN,0DAAP,uD,6FAlNcwf,E,mGAgBAE,E,wFAQAC,E,sFAUAG,E,yFAoBAK,E,0GAgBAE,E,6FAiBAE,E,6FAiBAC,E,8FAaAC,E,uFAkBAC,E,0FAkBAC,E,0FAkBAC,E,sFAaAC,E,qFAyBAc,E,m+CCxNhB,SAASC,EAAT,GAA8D,IAAlCzC,EAAkC,EAAlCA,UAAwB0C,GAAU,EAAvB5R,SAAuB,QAC5D,EAAgCkP,EAAU2C,OAAzBC,GAAjB,EAAQzxB,KAAR,QAEA,UACE2E,IAAKkqB,EAAU1wB,KACfsB,MAAOovB,EAAUpvB,OAASovB,EAAU1wB,KACpCA,KAAM0wB,EAAU6C,YAAc7C,EAAU1wB,KACxCX,SAAUqxB,EAAUG,YACpB1xB,aAAcuxB,EAAU3L,OAAS2L,EAAUtxB,MAC3C6B,YAAayvB,EAAUzvB,aACpBqyB,EACAF,GAIA,I,IAAMI,EAAgB,SAAAj0B,GAC3B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAASk0B,IAGNC,EAAoB,SAAAn0B,GAC/B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAak0B,IAGVE,EAAuB,SAAAp0B,GAClC,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAgBk0B,IAGbG,EAAmB,SAAAr0B,GAC9B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAkBk0B,IAGfI,EAAmB,SAAAt0B,GAC9B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAYk0B,IAGTK,EAAiB,SAAAv0B,GAC5B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAUk0B,IAGPM,EAAmB,SAAAx0B,GAC9B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAkBk0B,IAGfO,EAAmB,SAAAz0B,GAC9B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAD,GAAemI,UAAW,IAAQ+rB,KAG9BQ,EAAoB,SAAA10B,GAC/B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAD,GAAUiiB,SAAUjiB,EAAMiiB,UAAciS,KAGpCS,EAAsB,SAAA30B,GACjC,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAD,GAAYiiB,SAAUjiB,EAAMiiB,UAAciS,KAGtCU,EAAkB,SAAA50B,GAC7B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAD,GAAQiiB,SAAUjiB,EAAMiiB,UAAciS,KAGlCW,EAAkB,SAAA70B,GAC7B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAWk0B,IAGRY,EAAqB,SAAA90B,GAChC,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAAck0B,IAGXa,EAAgB,SAAA/0B,GAC3B,IAAMk0B,EAAWN,EAAiB5zB,GAElC,OAAO,kBAAC,IAASk0B,K,6FAhGVN,E,6FAeIK,E,0FAMAE,E,8FAMAC,E,iGAMAC,E,6FAMAC,E,6FAMAC,E,2FAMAC,E,6FAMAC,E,6FAMAC,E,8FAMAC,E,gGAMAC,E,4FAMAC,E,4FAMAC,E,+FAMAC,E,8hBCzGAC,EAAWrY,aACtB,SAAA3C,GAAK,OAAIA,EAAMib,kBAAkBjd,SACjC,SAAAA,GAAK,OAAIA,KAGEkd,EAAgBvY,aAC3B,SAAA3C,GAAK,OAAIA,EAAMib,kBAAkBrrB,cACjC,SAAAA,GAAU,OAAIA,KAGHurB,EAAsBxY,YAAeuY,GAAe,SAAAtrB,GAAU,OAAIA,EAAWC,W,6FAV7EmrB,E,qEAKAE,E,0EAKAC,E,ihBCFAC,EAASC,aACpB,SAACrb,EAAD,GAAqB,IAAX1X,EAAW,EAAXA,KAGR,OAAOuX,EAFUyb,IAAgBhzB,IAEjB0X,KAElB,CACEub,QAASjd,KAPS+c,CASpBG,GAEF,SAASA,EAAT,GAA+F,IAA5EvvB,EAA4E,EAA5EA,SAAUwvB,EAAkE,EAAlEA,MAAkE,IAA3Dlc,YAA2D,SAA7CjX,EAA6C,EAA7CA,KAAM+gB,EAAuC,EAAvCA,aAAcnb,EAAyB,EAAzBA,KAAM2B,EAAmB,EAAnBA,OAAQ0rB,EAAW,EAAXA,QAUlF,GATAx0B,qBAAU,WACO,aAAX8I,GACW,aAAXA,IAEW,YAAXA,GAAyB4rB,IAE7BF,EAAQjzB,KACP,KAEEuH,GAAqB,gBAAXA,EACb,OAAO,KAGT,GAAe,aAAXA,IAA0B0P,EAAM,CAClC,IAAMmc,EAAUrS,EAAesS,IAAkBC,IAEjD,OACE,kBAAC,IAAD,KACE,kBAACF,EAAD,gBAAkBpzB,EAAlB,QAKN,MAAe,WAAXuH,GAAwB0P,EAQJ,mBAAbtT,EACF,oCAAGA,EAAS,CAAE4D,SAAQ3B,OAAMqtB,QAAS,kBAAMA,EAAQjzB,OAGrD,oCAAG2D,GAVN,kBAAC,IAAD,CAAQ3D,KAAK,QACX,kBAAC,IAAO/C,KAAR,wBAA8B+C,EAA9B,W,EA3BCkzB,E,yBAuCMJ,G,6FAlDFA,E,sEAWJI,E,+wBCrBIK,EAAyB,UACzBC,EAA2B,UAC3BC,EAA2B,UAC3BC,EAA6B,UAE7BC,EAAsB,UACtBC,EAAwB,UACxBC,EAAsB,UACtBC,EAAwB,UAExBC,EAA2B,CACtC,CACE9U,MAAO,UACP+U,eAAgB,WACf,CACD/U,MAAO,UACP+U,eAAgB,WAElB,CACE/U,MAAO,UACP+U,eAAgB,WACf,CACD/U,MAAO,UACP+U,eAAgB,WACf,CACD/U,MAAO,UACP+U,eAAgB,WACf,CACD/U,MAAO,UACP+U,eAAgB,WACf,CACD/U,MAAO,UACP+U,eAAgB,WACf,CACD/U,MAAO,UACP+U,eAAgB,WACf,CACD/U,MAAO,UACP+U,eAAgB,WACf,CACD/U,MAAO,UACP+U,eAAgB,a,6FAzCPT,E,qIACAC,E,uIACAC,E,uIACAC,E,yIAEAC,E,kIACAC,E,oIACAC,E,kIACAC,E,oIAEAC,E,mzDCFAE,EAAiB,SAAC,GAAwD,IAAtDC,EAAsD,EAAtDA,MAAOvwB,EAA+C,EAA/CA,SAAUuI,EAAqC,EAArCA,OAAQkZ,EAA6B,EAA7BA,QAAS+O,EAAoB,EAApBA,cACjE,IAAgCx2B,oBAAS,GAAzC,GAAOy2B,EAAP,KAAiBC,EAAjB,KACMC,EAAU1T,uBACd,SAAAuI,GACMA,EAAMoL,cAAcC,UACjBJ,GACHC,GAAY,GAELD,GACTC,GAAY,GAGdI,EAAStL,KAEX,CAACiL,IAGH,IAA0Bz2B,mBAAS,IAAnC,GAAO+X,EAAP,KAAcgf,EAAd,KACMC,EAAWT,EAAMhoB,QAAO,SAAAV,GAAI,OAAIU,EAAOV,EAAMkK,MAEnD,OACE,oCACE,yBAAK9R,UAAU,oBAAf,sBACE,kBAAC,IAAD,CACE0lB,UAAQ,qBACR/rB,MAAOmY,EACP9V,SAAU,SAAAC,GAAC,OAAI60B,EAAS70B,EAAEghB,OAAOtjB,QAHnC,wBAMF,yBACEqG,UAAWC,IAAW,uBAAD,GACnBswB,gBACAC,YACChP,EAAUA,IAJf,sBAOE,wBACExhB,UAAWC,IAAW,OAAD,KAClBuhB,EAAUA,IAEbkP,QAASA,EAJX,sBAMGK,EAASnwB,KAAI,SAACgH,EAAM9G,EAAO+W,GAAd,OACZ,wBAAI9W,IAAKD,EAAOd,UAAU,YAA1B,sBACGD,EAAS6H,EAAM9G,EAAO+W,WAqBrC,SAASgZ,EAAStL,GACDA,EAAMoL,cAEdK,SAAS,CACdC,IAAK1L,EAAM2L,OACXC,KAAM5L,EAAM6L,S,EAtEHf,E,mGAqDbA,EAAejwB,UAAY,CACzBkwB,MAAOe,QACPtxB,SAAUqmB,OACV9d,OAAQ8d,OACR5E,QAASnhB,gBAAM,CAAC,MAAO,QAAS,eAGlCgwB,EAAeiB,aAAe,CAC5BhB,MAAO,GACPhoB,OAAQ,SAACV,EAAMkK,GAAP,OAAiBlK,IAASkK,K,6FA9DvBue,E,uGAiEJQ,E,ioBCvEHtI,EAAa,SAAAzU,GAAK,OAAIA,EAAMiV,SAErBwI,EAAwB9a,YAAe8R,GAAY,SAAAzU,GAAK,OACnEA,EAAMpS,IAAI,oBAGC8vB,EAAsB/a,YAAe8R,GAAY,SAAAzU,GAAK,OAAIA,EAAMpS,IAAI,kBAEpE+vB,EAAgBhb,YAAe8R,GAAY,SAAAzU,GAAK,OAAIA,EAAMpS,IAAI,YAE9DgwB,EAAoBjb,YAAe8R,GAAY,SAAAzU,GAAK,OAAIA,EAAMpS,IAAI,gBAClEiwB,EAAoBlb,YAAe8R,GAAY,SAAAzU,GAAK,OAAIA,EAAMpS,IAAI,gBAClEkwB,EAAmBnb,YAAe8R,GAAY,SAAAzU,GAAK,OAAIA,EAAMpS,IAAI,gB,6FAZxE6mB,E,qEAEOgJ,E,gFAIAC,E,8EAEAC,E,wEAEAC,E,4EACAC,E,4EACAC,E,6uCCZAC,EAAe,CAC1B,CACEz1B,KAAM,UACN+kB,MAAO,aACP2Q,cAAe,WACfhgB,MAAO,KAET,CACE1V,KAAM,WACN+kB,MAAO,WACP2Q,cAAe,YACfhgB,MAAO,KAET,CACE1V,KAAM,YACN+kB,MAAO,YACP2Q,cAAe,aACfhgB,MAAO,KAET,CACE1V,KAAM,OACN+kB,MAAO,OACP2Q,cAAe,QACfhgB,MAAO,KAET,CACE1V,KAAM,YACN+kB,MAAO,YACPrP,MAAO,IACPggB,cAAe,cAEjB,CACE11B,KAAM,UACN0V,MAAO,IACPqP,MAAO,UACP2Q,cAAe,aAEjB,CACE11B,KAAM,YACN0V,MAAO,IACPqP,MAAO,YACP2Q,cAAe,cAEjB,CACE11B,KAAM,WACN+kB,MAAO,WACP2Q,cAAe,YACfhgB,MAAO,KAET,CACE1V,KAAM,OACN0V,MAAO,IACPqP,MAAO,OACP2Q,cAAe,eAINjgB,EAAqBggB,EAAa7f,OAAO,CACpD5V,KAAM,UAGF21B,EAAc,CAClBx3B,KAAM,OACNoY,OAAQ,OACRnX,YAAa,sDAGFw2B,EAAiB,SAAAle,GAAK,OAAIA,EAAMme,SAASC,aAEtD,SAASC,EAAYnwB,EAArB,EAAoDowB,GAAoB,UAA3Ch2B,EAA2C,EAA3CA,KAAM01B,EAAqC,EAArCA,cAC7BO,EAAU,UAAGrwB,EAAK5F,UAAR,iBAAG,EAAY4F,YAAf,iBAAG,EAAkBA,YAArB,aAAG,EAAyB8vB,GAE1C,GAAIO,EAAY,SAiBD,IAhBPC,EAAO,UAAGtwB,EAAKuwB,aAAR,iBAAG,EAAYvwB,YAAf,aAAG,EAAkBA,KAAKswB,QACpChqB,QAAO,SAAAV,GAAI,OAAIA,EAAK4qB,aAAep2B,KACnCwE,KAAI,SAAAgH,GAC6CA,EAAxC+K,OADG,QACK4f,EAAgC3qB,EAAhC2qB,MAAOC,EAAyB5qB,EAAzB4qB,WAAe14B,EAAtC,EAAgD8N,EAAhD,GAQM6qB,EAAa,UAAGzwB,EAAK5F,UAAR,iBAAG,EAAY4F,YAAf,aAAG,EAAkBA,KAAK8vB,GAAex2B,MAAK,SAAAW,GAAC,OAAIA,EAAE1B,OAASg4B,KAEjF,YAAaE,GAAiBA,EAA9B,CAA8CF,SAAUz4B,EAAxD,CAA+D6Y,OAAQ6f,OAG3E,GAAIF,EAEFD,EAAU,UAAGrwB,EAAK5F,UAAR,iBAAG,EAAY4F,YAAf,aAAG,EAAkBA,KAAK8vB,GAAe9f,OAAOsgB,GAQxD5tB,MAAMC,QAAQytB,KAChBC,EAAaA,EAAW7e,QAAO,SAACgF,EAAKka,GACnC,IAEkB,EAFZC,EAAeP,EAAmB92B,MAAK,SAAAkL,GAAE,OAAIksB,EAASn4B,KAAKmU,WAAWlI,EAAGjM,SAE/E,OAAIo4B,EACqC,YAAnCA,SAAA,UAAAA,EAAcl4B,YAAd,eAAoBgkB,YACfjG,EAGFA,EAAIxG,OAAO,CAAC,EAAD,GAEX0gB,EAFW,CAGdj4B,KAAM,EAAF,GACCi4B,EAASj4B,KACTk4B,EAAal4B,UAMjB+d,EAAIxG,OAAO0gB,KACjB,KAIP,OAAOL,EAGF,I,IAAMjD,EAAkByC,EAAare,QAAO,SAACof,EAAWC,GAa7D,OAZAD,EAAUC,EAAIz2B,MAAQqa,aACpB,SAAA3C,GAAK,OAAIA,EAAMme,SAASjwB,QACxB,SAAA8R,GAAK,OAAIA,EAAMme,SAASa,gBACxB,SAAAhf,GAAK,OAAIif,EAA0Bjf,MACnC,SAAC9R,EAAM2B,EAAQyuB,GACb,MAAO,CACLpwB,KAAMmwB,EAAYnwB,EAAM6wB,EAAKT,GAC7BzuB,OAAQA,aAAF,EAAEA,EAASkvB,EAAIz2B,UAKpBw2B,IACN,IAEUG,EAA4Btc,aACvC,SAAA3C,GAAK,OAAIA,EAAMme,SAASjwB,QACxB,SAAAA,GAAQ,UACAgxB,EAAc,UAAGhxB,EAAKia,iBAAR,iBAAG,EAAgBja,YAAnB,iBAAG,EAAsBA,YAAzB,aAAG,EAA4B4c,WACnD,OAAIla,MAAMC,QAAQquB,GACTA,EAAe1qB,QACpB,SAAAV,GAAI,OAAIA,EAAKnN,MAAQmN,EAAKnN,KAAKgkB,YAAuC,WAAzB7W,EAAKnN,KAAKgkB,cAGpD,MAIEwU,EAAsBxc,aACjC,SAAA3C,GAAK,OAAIA,EAAMme,SAASjwB,QACxB,SAAA8R,GAAK,OAAIA,EAAMme,SAASntB,WACxB,SAAAgP,GAAK,OAAIif,EAA0Bjf,MACnC,SAAC9R,EAAM8C,EAASstB,GAKd,OAHmB,QAAjBttB,EAAQ1I,KACJy1B,EACAA,EAAavpB,QAAO,SAAAlM,GAAI,OAAIA,EAAKA,OAAS0I,EAAQ1I,MAAsB,cAAdA,EAAKA,SAElEoX,QAAO,SAAC0f,EAAa92B,GACpB,OAAO82B,EAAYlhB,OAAOmgB,EAAYnwB,EAAM5F,EAAMg2B,MACjD,IACF9pB,OAAOmV,YAID0V,EAAuB1c,YAClCwc,GACA,SAAAnf,GAAK,OAAIA,EAAMme,SAASntB,WACxB,SAACmtB,EAAUntB,GACT,IAAIsuB,EAAmBnB,EAcvB,MAbqB,QAAjBntB,EAAQ1I,MAAmC,cAAjB0I,EAAQ1I,OACpCg3B,EAAmBnB,EAAS3pB,QAAO,SAAAV,GAAI,MAAoB,cAAhBA,EAAK+K,WAE9C7N,EAAQuuB,SACVD,EAAmBA,EAAiB9qB,QAAO,SAAAV,GACzC,GAAqB,QAAjB9C,EAAQ1I,MAAmC,cAAjB0I,EAAQ1I,KAAsB,CAC1D,IAAMk3B,EAAc1rB,EAAKrN,KAAK0G,MAAM,KAEpC,OADkBqyB,EAAYA,EAAYl4B,OAAS,GAClCmT,SAASzJ,EAAQuuB,QAEpC,OAAOzrB,EAAKrN,KAAKgU,SAASzJ,EAAQuuB,YAG/BD,EAAiB5f,QAAO,SAAC0f,EAAavgB,GAC3C,IAAM4gB,EAAQ5gB,EAAOpY,KAAKgU,SAAS,KAAOoE,EAAOpY,KAAK0G,MAAM,KAAO,GAanE,OAZAsyB,EAAM9a,SAAQ,SAACtR,EAAMrG,GACnB,IAAMC,EAAMwyB,EAAMrrB,MAAM,EAAGpH,GAAOsb,KAAK,KACvC,IAAK8W,EAAYnyB,GAAM,CACrB,IAAMyyB,EAAavB,EAAS32B,MAAK,SAAAsM,GAAI,OAAIA,EAAKrN,OAASwG,KACvDmyB,EAAYnyB,GAAOyyB,GAAc,CAC/Bj5B,KAAMwG,EACN0yB,cAAc,OAIpBP,EAAYvgB,EAAOpY,MAAQoY,EAEpBugB,IACN,OAIMQ,EAAcjd,YACzBub,EACAmB,GACA,SAACjB,EAAayB,GACZ,IAAM1B,EAAW9d,OAAOxD,OAAOgjB,GACzBC,EAAQzf,OAAOC,KAAKuf,GACvBrrB,QAAO,SAACurB,EAAY/yB,EAAOgzB,GAC1B,OACGD,EAAWtlB,SAAS,OACpBulB,EAAMx4B,MAAK,SAAAf,GAAI,OAAIA,EAAKmU,WAAL,UAAmBmlB,EAAnB,UACiB,cAAnCF,EAAYE,GAAYlhB,WAG7B/R,KAAI,SAAAG,GAAG,YACH4yB,EAAY5yB,GADT,CAENgzB,WAAY7B,EAAY3jB,SAASolB,EAAY5yB,GAAKxG,WAEhDy5B,EAAU9B,EAAYtxB,KAAI,SAACqzB,EAAYnzB,GAC3C,MAAO,CACLozB,MAAOpzB,EACPqG,KAAgB,IAAVrG,EAAc,IAAMoxB,EAAYhqB,MAAM,EAAGpH,GAAOsb,KAAK,KAC3D+X,KAAM,OASV,OANAH,EAAQzrB,KAAK,CACX2rB,MAAOhC,EAAY92B,OACnB+L,KAAM,GAAF,OAAK+qB,EAAY9V,KAAK,KAAtB,KACJ+X,KAAM,KAGDlC,EAASze,QAAO,SAAC0f,EAAavgB,GACnC,IAAMxL,EAAOwL,EAAOpY,KAAK0G,MAAM,KAC/B,GAAIiyB,EAAY93B,OAAS+L,EAAK/L,OAC5B,OAAO83B,EAET,IAAMkB,EAASlB,EAAY/rB,EAAK/L,OAAS,GACzC,IAAKg5B,EACH,OAAOlB,EAET,GAAoB,MAAhBkB,EAAOjtB,KAET,OADAitB,EAAOD,KAAOP,EACPV,EAGT,IAAKvgB,EAAOpY,KAAKmU,WAAW0lB,EAAOjtB,MACjC,OAAO+rB,EAET,IAAM34B,EAAOoY,EAAOpY,KAAKqmB,QAAQwT,EAAOjtB,KAAM,IAAIyZ,QAAQ,IAAK,IACzDyT,EAAc1hB,EAAOpY,KAAK0G,MAAM,KAAK7F,OAAS,EAOpD,OANAg5B,EAAOD,KAAK5rB,KAAZ,KACKoK,EADL,CAEEpY,OACAw5B,aAAY7B,EAAYmC,IAAenC,EAAYmC,KAAiB95B,KAG/D24B,IACNc,MAIMM,EAAoB7d,YAC/B0c,EACAnB,GACA,SAACC,EAAUC,GACT,IACMvf,EAASsf,EADFC,EAAY9V,KAAK,MAE9B,OAAOzJ,WAAQ8gB,aAAe1B,EAAcpf,KAInC4hB,EAAgC9d,YAC3C6d,EACAnB,GACA,SAACqB,EAAgBvC,GACf,IAAMpa,EAAO1D,OAAOC,KAAK6d,GACnBhW,EAAY,GAAH,OAAMuY,EAAej6B,KAArB,KAEf,OAAOsd,EAAKvP,QAAO,SAAA/N,GAAI,OAAIA,EAAKmU,WAAWuN,IAAc1hB,IAAS0hB,S,6FA/RzD4V,E,gEAyDAhgB,E,sEAIPkgB,E,+DAMOC,E,kEAEJG,E,+DA0DI/C,E,mEAgBA2D,E,6EAaAE,E,uEAiBAE,E,wEAqCAO,E,+DA4DAY,E,qEAUAC,E,ogBC1RN,SAASE,EAAarzB,GAC3B,OAAOA,EAAQY,KAAK2oB,MAGf,SAAS+J,EAActzB,GAC5B,OAAOA,EAAQY,KAAK2oB,MAAM,GAGrB,SAASgK,EAAmBvzB,GACjC,OAAOA,EAAQ8G,QAAQlD,MAAK,SAAyB2D,EAAGC,GACtD,OAAOD,EAAEpO,KAAK4P,cAAcyqB,cAAchsB,EAAErO,KAAK4P,mB,6FAVrCsqB,E,+EAIAC,E,gFAIAC,E,sfCNHE,EAAsB,SAACC,GAClCC,EAAoBD,IAGTE,EAAkB,SAACjuB,EAAQrD,GAEtCqxB,EADaE,YAAcluB,EAAQrD,KAIrC,SAASqxB,EAAoB/zB,GAC3Bk0B,UAAUC,YAAYrjB,MAAM,CAAEvX,KAAM,oBAAqB66B,MAAK,SAAAtxB,GACvC,YAAjBA,EAAOgQ,OAAwC,WAAjBhQ,EAAOgQ,MAEvCohB,UAAUG,UAAUC,UAAUt0B,GAAMo0B,MAClC,WAEE5iB,QAAQgS,IAAI,gCAAiCxjB,MAE/C,WAEEwR,QAAQC,KAAK,8DAIjB8iB,EAAav0B,KAEdu0B,EAAa/xB,KAAK6kB,KAAMrnB,IAG7B,SAASu0B,EAAav0B,GACpB,IAAMw0B,EAAWC,SAASC,cAAc,YAExCF,EAAS77B,MAAQqH,EACjBy0B,SAASzN,KAAK2N,YAAYH,GAC1BA,EAASI,UAAUC,IAAI,wBACvBL,EAASM,QACTN,EAASO,SACTN,SAASO,YAAY,QACrBP,SAASzN,KAAKiO,YAAYT,GAC1BhjB,QAAQgS,IAAI,uCAAwCxjB,I,6FAvCzC6zB,E,6FAIAG,E,yFAKJD,E,6FAoBAQ,E,w4GCvBIW,cAAb,4QACE,WACE,MAAkC7N,KAAKvuB,MAA/Bq8B,EAAR,EAAQA,OAAQ1V,EAAhB,EAAgBA,QAAS2V,EAAzB,EAAyBA,KACzB,OACE,kEAAKp2B,UAAU,iBAAf,sBACE,2DAAC,sDAAD,CACErG,MAAOy8B,EAAKx1B,KAAI,SAAA3E,GAAC,OAAIA,EAAEtC,SAAO+W,QAAQylB,GACtCE,eAAe,UACfC,UAAU,UAHZ,sBAKGF,EAAKx1B,KAAI,SAAA21B,GAAG,OACX,2DAAC,qDAAD,CACEx1B,IAAKw1B,EAAI16B,MACTA,MAAO06B,EAAI16B,MACX4kB,QAAS,kBAAMA,EAAQ8V,EAAI58B,QAC3B+rB,UAAA,sBAAwB6Q,EAAI58B,OAJ9B,8BAXZ,0IAAmC68B,6CAAMC,eAwBzCP,cAAc91B,UAAY,CACxB+1B,OAAQhQ,+CACR1F,QAAS2F,6CACTgQ,KAAM/E,+CAGR6E,cAAc5E,aAAe,CAC3B8E,KAAM,I,aAGOF,cAAA,wC,gKAlCFA,c,koBCRAQ,EAAsB,SAACn8B,EAAMo8B,GACxC,IAAMC,EAAeD,EAAUr7B,MAAK,SAAAivB,GAAK,OAAIA,EAAMhwB,OAASA,KAE5D,OAAOq8B,aAAA,EAAAA,EAAcp7B,cAAe,K,4FAHzBk7B,E,kjHCQAR,cAAb,4QACE,WACE,MAAsC7N,KAAKvuB,MAAnCq8B,EAAR,EAAQA,OAAQ1V,EAAhB,EAAgBA,QAASvb,EAAzB,EAAyBA,SAEnBlD,EAAO,CACX,CAAEnG,MAAO,WAAYlC,MAAO,cAC5ByL,iFAAqByxB,kBAAkB3xB,IAAY,CAAErJ,MAAO,qBAAsBlC,MAAO,YACzF8L,0DAA0BqxB,kBAAkB5xB,IAAY,CAAErJ,MAAO,WAAYlC,MAAO,cACpF8L,0DAA0BsxB,iBAAiB7xB,IAAY,CAAErJ,MAAO,UAAWlC,MAAO,aAClF8L,0DAA0BuxB,iBAAiB9xB,IAAY,CAAErJ,MAAO,UAAWlC,MAAO,YAClF2O,OAAOmV,SAMT,MAJiB,WAAbvY,GACFlD,EAAKuG,KAAK,CAAE1M,MAAO,oBAAqBlC,MAAO,YAI/C,kEAAKqG,UAAU,iBAAf,sBACE,2DAAC,sDAAD,CACErG,MAAOqI,EAAKpB,KAAI,SAAA3E,GAAC,OAAIA,EAAEtC,SAAO+W,QAAQylB,GACtCE,eAAe,UACfC,UAAU,UAHZ,sBAKGt0B,EAAKpB,KAAI,SAAA21B,GAAG,OACX,2DAAC,qDAAD,CACEx1B,IAAKw1B,EAAI16B,MACTA,MAAO06B,EAAI16B,MACX4kB,QAAS,kBAAMA,EAAQ8V,EAAI58B,QAC3B+rB,UAAA,sBAAwB6Q,EAAI58B,OAJ9B,8BAxBZ,0IAAmC68B,6CAAMC,eAqCzCP,cAAc91B,UAAY,CACxB+1B,OAAQhQ,+CACR1F,QAAS2F,8C,aAGI8P,cAAA,wC,gKA1CFA,c,0iCCLN,SAAee,EAAtB,kC,iDAAO,WAA2BjP,GAA3B,mHAEoBvmB,IAAWwmB,KAAK9uB,IAAUwI,KAAKC,UAAUC,SAAUmmB,GAFvE,uBAEKhmB,EAFL,EAEKA,KAFL,kBAII,CAAE8B,OAAQ9B,EAAK8B,OAAQiQ,SAAU/R,EAAKA,KAAK+R,WAJ/C,yDAMI,CAAEjQ,OAAQ,OAAQiQ,SAAU,GAAIpT,SAAQ,UAAE,KAAEoB,SAASC,YAAb,aAAE,EAAiBrB,WAN/D,0D,sBAUA,SAAeu2B,EAAtB,oC,iDAAO,WAA4B38B,EAAMytB,GAAlC,mHAEoBvmB,IAAW6nB,MAAX,UAAoBnwB,IAAUwI,KAAKC,UAAUC,SAA7C,YAAyDtH,GAAQytB,GAFrF,uBAEKhmB,EAFL,EAEKA,KAFL,kBAII,CAAE8B,OAAQ9B,EAAK8B,OAAQiQ,SAAU/R,EAAKA,KAAK+R,WAJ/C,yDAMI,CAAEjQ,OAAQ,OAAQiQ,SAAU,GAAIpT,SAAQ,UAAE,KAAEoB,SAASC,YAAb,aAAE,EAAiBrB,WAN/D,0D,sBAUA,SAAew2B,EAAtB,kC,iDAAO,WAA6B58B,GAA7B,mHAEoBkH,IAAWqpB,OAAX,UAAqB3xB,IAAUwI,KAAKC,UAAUC,SAA9C,YAA0DtH,IAF9E,uBAEKyH,EAFL,EAEKA,KAFL,kBAGI,CAAE8B,OAAQ9B,EAAK8B,OAAQnD,SAAUqB,EAAKrB,WAH1C,yDAKI,CAAEmD,OAAQ,OAAQiQ,SAAU,GAAIpT,SAAQ,UAAE,KAAEoB,SAASC,YAAb,aAAE,EAAiBrB,WAL/D,0D,sBASA,SAASy2B,EAAc78B,GAC5B,OAAOkH,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAUC,SAA3C,YAAuDtH,GAAQ,CACpEuH,UAAW,aAIR,SAASu1B,EAAgB98B,EAAMytB,GACpC,OAAOvmB,IAAW6nB,MAAX,UAAoBnwB,IAAUwI,KAAKC,UAAUC,SAA7C,YAAyDtH,GAAQytB,EAAM,CAC5ElmB,UAAW,aAIR,SAASw1B,EAASC,GACvB,OAAO91B,IAAWwmB,KAAK9uB,IAAUwI,KAAKC,UAAU41B,gBAAiBD,I,6FA1C7CN,E,gEAUAC,E,iEAUAC,E,kEASNC,E,kEAMAC,E,oEAMAC,E,8tBC1CVG,EAAe,CAAChrB,IAASC,OAAQD,IAASE,SAAUF,IAASG,MAAOH,IAASI,OAC7E6qB,EAAqB,CAACjrB,IAASC,QAE/BirB,GAAoB,OACrBlrB,IAASC,OAAS,gEADG,IAErBD,IAASE,SAAW,+CAFC,IAGrBF,IAASG,MAAQ,4CAHI,IAIrBH,IAASI,MAAQ,kEAJI,GAOpB+qB,GAAsB,OACvBnrB,IAASC,OAAS,QADK,IAEvBD,IAASE,SAAW,QAFG,IAGvBF,IAASG,MAAQ,QAHM,IAIvBH,IAASI,MAAQ,UAJM,GAOfzH,EAAb,yB,4FAAA,S,UAAA,O,EAAA,E,EAAA,gCACE,SAAyBkC,GACvB,OAAOmwB,EAAalpB,SAASjH,KAFjC,8BAKE,SAAwBA,GACtB,OAAOowB,EAAmBnpB,SAASjH,KANvC,yBASE,SAAmBA,GACjB,OAAOqwB,EAAqBrwB,IAAS,KAVzC,iCAaE,SAA2BA,GACzB,OAAOswB,EAAuBtwB,IAAS,O,EAd3C,O,2BAAA,M,6FAjBMmwB,E,uGACAC,E,6GAEAC,E,+GAOAC,E,iHAOOxyB,E,wtBCNPyyB,EAAqB,CACzB,UACA,QACA,QACA,UACA,8BACA,4BACA,2BACA,8BACA,yCACA,SACA,iBACA,oB,EAGa,SAAC5M,EAAW6M,EAAWC,GAgBpC,IAfA9M,EAAY,EAAH,GAAQA,IACP+M,SAAW/M,EAAUxwB,KAAKu9B,UAAYC,OAAOC,iBAClB,kBAA1BjN,EAAUG,cACnBH,EAAUG,aAAc,GAEtBH,EAAUkN,UAAUzpB,WAAW,eAEjCuc,EAAUG,aAAc,EACxBH,EAAUkN,UAAYlN,EAAUkN,UAAUC,UAAUnN,EAAUkN,UAAUznB,QAAQ,KAAO,IAEjE,OAApBua,EAAU3L,QAEZ2L,EAAUG,aAAc,GAE1BH,EAAUoN,cAAe,EACrBpN,EAAUG,YAEZ,GADAH,EAAUoN,cAAe,EACrBN,EAAWz8B,MAAK,qBAAGf,OAAoB0wB,EAAUkN,aACnDlN,EAAUoN,cAAe,MACpB,CACL,IAAMpY,EAAW6X,EAAUx8B,MAAK,qBAAGf,OAAoB0wB,EAAUkN,aAC7DlY,IACEvb,MAAMC,QAAQsb,EAASf,cACzB+L,EAAUoN,aAAepY,EAASf,aAAa9jB,OAAS,EAExD6kB,EAAS1lB,KAAKmU,WAAW,8BACP,gCAAlBuR,EAAS1lB,KAET0wB,EAAUoN,cAAe,EAEzBpN,EAAUoN,aAAeR,EAAmBtpB,SAAS0c,EAAUkN,YAcvE,OARAlN,EAAU3L,MAAQgZ,YAAerN,EAAU3L,OACf,uBAAxB2L,EAAUkN,WAA0D,OAApBlN,EAAUtxB,QAC5DsxB,EAAUtxB,MAAQ,QAGpBsxB,EAAUpvB,MAAQ08B,EAAStN,EAAU1wB,MACrC0wB,EAAUtG,KAAO6T,EAAQvN,EAAU1wB,MAE5B0wB,GA7CM,MAgDf,I,IAAMsN,EAAW,SAAAh+B,GACf,OAAOk+B,EAAOl+B,IAASA,GAGnBi+B,EAAU,SAAAj+B,GACd,OAAOm+B,EAAMn+B,IAAS,MAGlBk+B,EAAS,CACbE,mBAAoB,oBACpBC,aAAc,oBACdC,WAAY,kBACZC,iBAAkB,iBAClBC,KAAM,gBACNzxB,KAAM,cACN0xB,gBAAiB,kBACjBC,kBAAmB,sBACnBC,qBAAsB,4CAGlBR,EAAQ,CACZC,mBACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMxxB,KAAMgyB,OAGhBP,aACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMzxB,KAAMiyB,QAGhBP,WACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM1xB,KAAMiyB,QAGhBN,iBACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM3xB,KAAMkyB,QAGhB/xB,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMH,KAAMmyB,OAGhBP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM5xB,KAAMgyB,OAGhBH,gBACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM7xB,KAAMoyB,OAGhBN,kBACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM9xB,KAAMoyB,S,6FAzHZ1B,E,gGA+DAU,E,sFAIAC,E,qFAIAC,E,oFAYAC,E,20BClFOc,EAAY,SAAC,GAA4B,IAA1BvO,EAA0B,EAA1BA,UAAWlvB,EAAe,EAAfA,SASrC,OACE,kBAAC,IAAD,CAAOxB,KAAM0wB,EAAU1wB,KAAMd,SATd,SAAAE,GACf,GAAIsxB,EAAUG,cACPzxB,EACH,MAAO,0BAMX,uBACG,YAAqB,IAAlBa,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,kBAAC,IAAD,GACEuF,UAAWjE,EAAW,WAAa,IAC/BvB,EAFN,CAGEgnB,QAAQ,WACRplB,KAAK,OACLkB,WAAS,EACTvB,SAAUA,EACVM,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,SAAWG,EAAK4B,MAAQ5B,EAAK4B,WAAQnB,EACtDW,MAAOovB,EAAUpvB,MACjB49B,YAAaxO,EAAUpvB,MACvBolB,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgB8W,SAAS,QAAzB,sBACG/M,EAAUtG,KACTsG,EAAUtG,KAEV,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMxd,KAAMiyB,KAAZ,yBAKRM,aACE,kBAACxe,EAAD,CAAc6K,UAAU,aAAa5E,MAAO8J,EAAUzvB,YAAtD,sBACE,kBAAC,IAAD,CAAgBw8B,SAAS,MAAzB,sBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAM7wB,KAAMwyB,IAAZ,2BA3BZ,4BAwCVH,EAAUp5B,UAAY,CACpB6qB,UAAWvS,UAGb,I,IAAMwC,EAAeC,aAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,M,6FAlES8d,E,2FAyDPte,E,igDC1DN,SAAS0e,EAAkBpgC,EAASqgC,GAElC,GADArgC,EAAUA,GAAW,IAChBqgC,IAAeA,EAAWjB,aAC7B,OAAOp/B,EAGT,IAAMsgC,EAAeD,EAAWjB,aAChC,OAAOp/B,EAAQ8O,QAAO,SAAAyxB,GAAW,OAAIA,EAAYvxB,UAAYsxB,EAAatxB,WAG5E,I,IAAMwxB,EAA6B,CACjC1yB,KAAMsyB,GAGKK,EAAgB,SAAC,GAQxB,IAPJhP,EAOI,EAPJA,UACAiP,EAMI,EANJA,UACAC,EAKI,EALJA,YACAC,EAII,EAJJA,MACArC,EAGI,EAHJA,WACAh8B,EAEI,EAFJA,SACAs+B,EACI,EADJA,kBAEMpa,EAAWia,EAAU5+B,MAAK,SAAAg/B,GAAQ,OAAIA,EAAS//B,OAAS0wB,EAAUkN,aACpEl2B,EAAY,KAEhB,GAAIge,GACF,IACEA,EAAS1lB,KAAKmU,WAAW,8BACP,gCAAlBuR,EAAS1lB,OAELmK,MAAMC,QAAQsb,EAAS/a,WAAa+a,EAAS/a,SAAS9J,OAAS,EAAG,CAYpE,GAXA6G,EAAY,GACZge,EAAS/a,SAASuT,SAAQ,SAAAvT,GACP,SAAbA,EAGFjD,EAAY,GAAH,SAAOA,GAAP,CAAkB,QAAS,QAAS,SAAU,UAEvDA,EAAUsG,KAAKrD,MAIfm1B,GAAqBL,EAA2B/O,EAAU1wB,MAE5D4/B,GAAcI,EADWP,EAA2B/O,EAAU1wB,OAC/B4/B,EAAaE,GAG9C,IAAM7gC,EAAU2gC,EACbv5B,KAAI,SAAA2c,GAAO,MAAK,CAAEhjB,KAAMgjB,EAAQhjB,KAAMZ,MAAO4jB,MAC7CjV,QAAO,SAAA1M,GAAM,OAAkB,OAAdqG,GAAsBA,EAAUsM,SAAS3S,EAAOjC,MAAMuL,aAU1E,OACE,kBAAC,IAAD,CAAO3K,KAAM0wB,EAAU1wB,KAAMd,SATd,SAAAE,GACf,GAAIsxB,EAAUG,cACPzxB,EACH,MAAO,0BAMX,uBACG,YAAqB,IAAlBa,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,kBAAC,IAAD,CACE2qB,SAAU,SAACtkB,EAAO05B,GAChBhgC,EAAMwB,SAAS,CAAEihB,OAAQ,CAAE1iB,KAAM0wB,EAAU1wB,KAAMZ,MAAO6gC,EAAI7gC,UAE9DoC,SAAUA,EACVkhB,OAAQ,SAACwd,EAAOznB,GAAR,OACN,kBAAC,IAAD,GACEhT,UAAWjE,EAAW,WAAa,GACnCK,KAAK,OACLs+B,UAAQ,EACR3+B,UAAQ,EACRylB,QAAQ,WACRlkB,WAAS,EACTzB,MAAOovB,EAAUpvB,MACjB49B,YAAaxO,EAAUpvB,OACnBrB,EATN,CAUEb,MAAOa,EAAMb,MAAQa,EAAMb,MAAMY,KAAO,GACxCyB,SAAU,aACVykB,QAASzN,EAAQ2nB,OACjBphC,IAAKkhC,EAAMlhC,IACX8C,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,SAAWG,EAAK4B,MAAQ5B,EAAK4B,WAAQnB,EACtD+lB,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgB8W,SAAS,QAAzB,sBACG/M,EAAUtG,KACTsG,EAAUtG,KAEV,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMxd,KAAMiyB,KAAZ,yBAMRM,aACE,kBAAC,IAAD,CAAgB1B,SAAS,MAAzB,sBACE,kBAAC,IAAD,0BA/BR,yBAqCF1H,MAAO92B,EA3CT,+BAmDP,CACL,IAAMslB,EAAYiZ,EAAWz8B,MAAK,SAAAijB,GAAC,OAAIA,EAAEhkB,OAAS0wB,EAAUkN,aAE5D,GAAIrZ,EAAW,CACb,IAAMtlB,EAAU4gC,EACb9xB,QAAO,SAAAywB,GAAI,OAAIA,EAAKja,YAAcA,EAAUvkB,QAC5CqG,KAAI,SAAAm4B,GAAI,MAAK,CAAEx+B,KAAMw+B,EAAKx+B,KAAMZ,MAAOo/B,EAAKx+B,SAU/C,OACE,kBAAC,IAAD,CAAOA,KAAM0wB,EAAU1wB,KAAMd,SATd,SAAAE,GACf,GAAIsxB,EAAUG,cACPzxB,EACH,MAAO,0BAMX,uBACG,YAAqB,IAAlBa,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,kBAAC,IAAD,CACE2qB,SAAU,SAACtkB,EAAO05B,GAChBhgC,EAAMwB,SAAS,CAAEihB,OAAQ,CAAE1iB,KAAM0wB,EAAU1wB,KAAMZ,MAAO6gC,EAAI7gC,UAE9DoC,SAAUA,EACVkhB,OAAQ,SAACwd,EAAOznB,GAAR,OACN,kBAAC,IAAD,GACEhT,UAAWjE,EAAW,WAAa,GACnCK,KAAK,OACLs+B,UAAQ,EACR3+B,UAAQ,EACRylB,QAAQ,WACRlkB,WAAS,EACTzB,MAAOovB,EAAUpvB,MACjB49B,YAAaxO,EAAUpvB,OACnBrB,EATN,CAUEb,MAAOa,EAAMb,MAAQa,EAAMb,MAAQ,GACnCqC,SAAU,aACVykB,QAASzN,EAAQ2nB,OACjBphC,IAAKkhC,EAAMlhC,IACX8C,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,SAAWG,EAAK4B,MAAQ5B,EAAK4B,WAAQnB,EACtD+lB,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgB8W,SAAS,QAAzB,sBACG/M,EAAUtG,KACTsG,EAAUtG,KAEV,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMxd,KAAMiyB,KAAZ,yBAMRM,aACE,kBAAC,IAAD,CAAgB1B,SAAS,MAAzB,sBACE,kBAAC,IAAD,0BA/BR,yBAqCF1H,MAAO92B,EA3CT,2BAoDZ,OAAO,iFAGTygC,EAAc75B,UAAY,CACxB6qB,UAAWvS,SACXwhB,UAAW7I,QACX8I,YAAa9I,QACb+I,MAAO/I,QACP0G,WAAY1G,U,6FAnMLuI,E,2GAUHI,E,oHAIOC,E,yiDCbb,SAASW,EAAcl3B,EAAYqD,EAAQ8zB,EAAavW,GACvCwW,YAAYp3B,EAAYqD,EAAQ8zB,IAE7CvW,EAAavD,OAIV,I,IAAMga,EAAc,SAAC,GAQtB,IACAC,EAcAC,EAtBJla,EAOI,EAPJA,KACA/N,EAMI,EANJA,QACAjM,EAKI,EALJA,OACArD,EAII,EAJJA,WACAw3B,EAGI,EAHJA,aACAL,EAEI,EAFJA,YACAl6B,EACI,EADJA,SAIA,IAA8B5G,mBAAS4G,EAAS,IAAhD,GAAOiJ,EAAP,KAAgBuxB,EAAhB,KACA,IAA4DphC,oBAAS,GAArE,GAAOqhC,EAAP,KAA+BC,EAA/B,KACM/W,EAAe,CACnBvD,KAAM,WACJsa,GAA0B,IAE5B9W,MAAO,WACL8W,GAA0B,KAiG9B,OA1FAxgC,qBAAU,WACR,GAAI8F,GAAYA,EAASvF,OAAS,EAAG,CACnC,GAAK2lB,EAEE,CACL,IAAIjgB,EAAQ,EAQZ,OAPAm6B,EAAWK,aAAY,WACrBH,EAAWx6B,EAASG,IAChBA,EAAQ,EAAIH,EAASvF,SACvB0F,GAAS,KAEV,KAEI,kBAAMy6B,cAAcN,IAV3BM,cAAcN,MAajB,CAACla,IAECha,GAAgC,cAAtBrD,EAAWC,QAAgD,WAAtBD,EAAWC,SAC7Dq3B,EACE,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,uBAASpxB,IAEX,kBAAC,IAAM6X,OAAP,QAKoB,WAAtB/d,EAAWC,SACbq3B,EACE,oCACE,kBAAC,IAAMhb,QAAP,CAAe4E,YAAY,GACzB,yBAAK5kB,UAAU,YAAf,sBACE,kBAAC,IAAD,CAAY5D,KAAK,OAAO2K,OAAQA,EAAQy0B,OAAQ93B,EAAW83B,OAA3D,yBAGJ,kBAAC,IAAM/Z,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACE9kB,UAAU,MACVygB,QAAS,kBAAMma,EAAcl3B,EAAYqD,EAAQ8zB,EAAavW,IAC9DoB,UAAQ,gBAHV,uCAOA,kBAAC,IAAD,CACE1lB,UAAU,MACVygB,QAAS,kBAAMuU,YAAgBjuB,EAAQrD,IACvCgiB,UAAQ,oBAHV,+CAagB,cAAtBhiB,EAAWC,SACbq3B,EACE,oCACE,kBAAC,IAAMhb,QAAP,CAAe4E,YAAY,GACzB,yBAAK5kB,UAAU,YAAf,sBACE,kBAAC,IAAD,CAAY+G,OAAQA,EAApB,yBAGJ,kBAAC,IAAM0a,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACE9kB,UAAU,MACVygB,QAAS,kBAAMma,EAAcl3B,EAAYqD,EAAQ8zB,EAAavW,IAC9DoB,UAAQ,gBAHV,uCAOA,kBAAC,IAAD,CACE1lB,UAAU,MACVygB,QAAS,kBAAMuU,YAAgBjuB,EAAQrD,IACvCgiB,UAAQ,oBAHV,6CASJ,kBAAC,IAAD,CAAY3E,KAAMqa,EAAwBpoB,QAASsR,EAAc1a,QAzF5C,sIAyFrB,yBAMJ,kBAAC,IAAD,CAAOmX,KAAMA,EAAM/N,QAASA,EAA5B,sBACE,kBAAC,IAAD,CACEsJ,MAAO,CACLmI,SAAU,OACVgX,UAAW,OACXna,MAAO,OACPC,OAAQ,QALZ,sBAQE,kBAAC,IAAD,CACEJ,MAAO+Z,EAAa/Z,MACpB5O,KAA4B,WAAtB7O,EAAWC,OAAsB,qBAAuB,SAC9DwhB,OACE,kBAAC,IAAD,CACEnlB,UAAWC,IAAW,cAAe,CAAE5D,MAA6B,WAAtBqH,EAAWC,SAD3D,sBAGGu3B,EAAavW,MAPpB,uBAWCqW,K,EAxIID,E,iOAPJH,E,qGAOIG,E,+hBCnBN,SAASW,EAAa1T,GAC3B,OAAOvmB,IAAWwmB,KAAK,WAAYD,EAAM,CACvClmB,UAAW,aAIR,SAAS65B,EAAYphC,GAC1B,OAAOkH,IAAWC,IAAX,mBAA2BnH,GAAQ,CACxCuH,UAAW,aAIR,SAAS85B,EAAcrhC,EAAMytB,GAClC,OAAOvmB,IAAW6nB,MAAX,mBAA6B/uB,GAAQytB,EAAM,CAChDlmB,UAAW,c,6FAdC45B,E,iEAMAC,E,gEAMAC,E,qgDCdT,SAASC,EAAgB75B,GAI9B,IAAM4xB,EAAQ5xB,EAAKwR,OAAOsoB,EAA0B,IAWpD,OAVAlI,EAAMnb,SAAQ,SAAAsjB,GAGZA,EAAK/zB,QAAU+zB,EAAK/nB,MAAMR,OAAOwoB,EAAyB,IAC1C7nB,OAAOC,KAAK2nB,EAAK/zB,SACzByQ,SAAQ,SAAAle,GACd,IAAM6N,EAAS2zB,EAAK/zB,QAAQzN,GAC5B6N,EAAOe,UAAYf,EAAO4L,MAAMR,OAAOyoB,EAA0B,UAG9DrI,EAEF,SAASkI,EAAyBtjB,EAAK5Q,GAC5C,IACQ1C,EAAa0C,EAAb1C,SACR,GAF0B,CAAC,OAELqJ,SAASrJ,GAC7B,OAAOsT,EAET,IAAM5Q,EAAKyB,UAAWzB,EAAKyB,QAAQC,SACjC,OAAOkP,EAET,IAAMujB,EAAOvjB,EAAIld,MAAK,SAAAyN,GAAC,OAAIA,EAAExO,OAAS2K,KAYtC,OAXI62B,EACFA,EAAK/nB,MAAL,YAAiB+nB,EAAK/nB,OAAtB,CAA6BpM,IAE7B4Q,EAAIjQ,KAAK,CACPhO,KAAMqN,EAAK1C,SACXiC,KAAMS,EAAK1C,SACX9I,KAAM,OACN4X,MAAO,CAACpM,GACRI,QAAS,KAGNwQ,EAET,SAASwjB,EAAwBE,EAAYt0B,GAC3C,IAAQY,EAAYZ,EAAZY,QACF2zB,EAAgBD,EAAW1zB,GAWjC,OAVI2zB,EACFA,EAAcnoB,MAAd,YAA0BmoB,EAAcnoB,OAAxC,CAA+CpM,IAE/Cs0B,EAAW1zB,GAAW,CACpBjO,KAAMqN,EAAKY,QACXrB,KAAM,GAAF,OAAKS,EAAK1C,SAAV,aAAuB0C,EAAKY,SAChCpM,KAAM,SACN4X,MAAO,CAACpM,IAGLs0B,EAET,SAASD,EAAyBG,EAAax0B,GAC7C,IACuBrN,EACnBqN,EADFyB,QAAWC,SAOb,OALA8yB,EAAY7hC,GAAQ,CAClBA,OACA4M,KAAM,GAAF,OAAKS,EAAK1C,SAAV,aAAuB0C,EAAKY,QAA5B,aAAwCjO,GAC5C+F,KAAMsH,GAEDw0B,EAUF,SAASC,EAAwBrB,EAAS/4B,GAC/C,IAAM8R,EAAW,CAAEuoB,IAAKtB,GAEpBuB,EAAet6B,EAAUrB,KAAI,SAAA2d,GAAC,OAAIA,EAAEhkB,QAEZ,IAAxBgiC,EAAanhC,SACfmhC,EAAe,CAAC,aAAc,OAAQ,QAGxCxoB,EAAS5K,UAAY6xB,EAAQ1yB,QAAO,SAAAiV,GAAO,OAAIA,EAAQlU,QAAQC,YAC/DyK,EAASzM,KAAO,GAGhByM,EAAS5K,UAAUsP,SAAQ,SAAkBjE,GAM3C,IAWIpM,EAXEkB,EAAW,EAAH,GACTkL,EADS,CAEZrN,KAAM,GAAF,OAAKqN,EAAMtP,SAAX,aAAwBsP,EAAMhM,QAA9B,aAA0CgM,EAAMnL,QAAQC,YAG1DhC,EAAOyM,EAASzM,KAAKhM,MAAK,SAAAgM,GAAI,OAAIA,EAAK/M,OAAS+O,EAASpE,YAEvDs3B,EAAWzoB,EAASuoB,IAAIhhC,MAC5B,SAAAiiB,GAAO,OAAIgf,EAAahuB,SAASgP,EAAQrY,WAAaqY,EAAQ/U,UAAYc,EAASd,WAqBrF,GAdEJ,EADEo0B,EACO,EAAH,CACJr1B,KAAM,GAAF,OAAKmC,EAASpE,SAAd,aAA2BoE,EAASd,UACrCg0B,EAFC,CAGJrzB,UAAW,CAACG,KAIL,CACPnC,KAAM,GAAF,OAAKmC,EAASpE,SAAd,aAA2BoE,EAASd,SACxCA,QAASc,EAASd,QAClBW,UAAW,CAACG,IAIXhC,EAAL,CAoBAA,EAAK6B,UAAUZ,KAAKe,GAGpB,IAAImzB,EAAkBn1B,EAAKU,QAAQ1M,MAAK,SAAAiP,GAAE,OAAIA,EAAG/B,UAAYc,EAASd,WAEjEi0B,EAGCA,EAAgBtzB,UAClBszB,EAAgBtzB,UAAUZ,KAAKe,GAE/BmzB,EAAgBtzB,UAAY,CAACG,GAL/BhC,EAAKU,QAAQO,KAAb,KAAuBH,EAAvB,CAA+Be,UAAW,CAACG,WApB3CyK,EAASzM,KAAKiB,KAAK,CACjBhO,KAAM+O,EAASpE,SACfA,SAAUoE,EAASpE,SACnBiC,KAAMmC,EAASpE,SACfiE,UAAW,CAACG,GACZtB,QAAS,CAACI,OAuBb2L,GAGgBinB,EAAQ1yB,QAAO,SAAAkM,GAAK,OAAI+nB,EAAahuB,SAASiG,EAAMtP,aAK5DuT,SAAQ,SAAArQ,GAGjB,IAFe2L,EAAS5K,UAAU7N,MAAK,SAAA8N,GAAE,OAAIA,EAAGZ,UAAYJ,EAAOI,WAEtD,CACX,IAAMk0B,EAAa3oB,EAASzM,KAAK0R,WAAU,SAAA7Y,GAAC,MAAe,UAAXA,EAAE5F,QAE9CmiC,GAAc,EAChB3oB,EAASzM,KAAKo1B,GAAY10B,QAAQO,KAAlC,GACEpB,KAAM,UAAF,OAAYiB,EAAOI,UACpBJ,EAFL,CAGEe,UAAW,MAGb4K,EAASzM,KAAKiB,KAAK,CACjBhO,KAAM,QACN4M,KAAM,QACNjC,SAAU,QACV8C,QAAS,CAAC,EAAD,CAAGb,KAAM,UAAF,OAAYiB,EAAOI,UAAcJ,EAAxC,CAAgDe,UAAW,YAM5E,IAAMuzB,EAAa3oB,EAASzM,KAAK0R,WAAU,SAAA7Y,GAAC,MAAe,UAAXA,EAAE5F,QAIlD,OAHImiC,GAAc,GAAkD,IAA7C3oB,EAASzM,KAAKo1B,GAAY10B,QAAQ5M,QACvD2Y,EAASzM,KAAKq1B,OAAOD,EAAY,GAE5B3oB,EAGF,SAAS6oB,EAAa36B,GAa3B,OAZyBA,EAAUqG,QAAO,SAAAiW,GAAK,QAC7C,OAAIA,EAAEse,cAIFte,SAAJ,UAAIA,EAAGue,wBAAP,iBAAI,EAAqBvuB,gBAAzB,QAAI,SAAgC,gBAUjC,SAASwuB,EAAkBC,EAAY7zB,EAAW2N,GACvD,IAAIkD,EAAW,EAAIgjB,GAWnB,OATA7zB,EAAUsP,SAAQ,SAASrP,GACzB,IAAMtI,EAAQk8B,EAAWhkB,WAAU,SAAA7Y,GAAC,OAAIA,EAAE5F,OAAS6O,EAAG7O,QAClDuG,GAAS,EACXkZ,EAASlZ,GAAT,KAAuBsI,EAAvB,CAA2B5H,QAASsV,IAEpCkD,EAAW,GAAH,SAAOA,GAAP,MAAsB5Q,EAAtB,CAA0B5H,QAASsV,SAIxCkD,EAGF,SAASijB,EAAiBr4B,GAC/B,IAAMd,GAAUc,GAAc,IAAI4O,QAAO,SAACgF,EAAK0kB,GAO7C,OANIA,EAAYC,gBAAkB,EAChC3kB,EAAI4kB,KAAKF,EAAYG,MAAQC,EAAgBJ,GAE7C1kB,EAAI+kB,OAAOL,EAAYG,MAAQH,EAEjC1kB,EAAIglB,SAASj1B,KAAK20B,GACX1kB,IACN,CAAE+kB,OAAQ,GAAIH,KAAM,GAAII,SAAU,KAErC,OADAhrB,QAAQgS,IAAI1gB,GACLA,EAGT,SAASw5B,EAAgBG,GACvB,MAAO,CACLC,OAAQD,EAAQN,gBAChBQ,QAASF,EAAQE,QACjBC,SAAUH,EAAQI,gBAClBC,UAAWL,EAAQM,mB,6FApPPlC,E,6EAiBAC,E,sFAuBPE,E,qFAeAC,E,sFAmBOI,E,qFAwHAO,E,0EAgBAG,E,+EAeAE,E,8EAcPK,E,0bC/OIU,EAAyB,CACpCC,MAAO,QACPC,MAAO,U,4FAFIF,E,kjDC4BPG,EAAOC,cAEPC,EAAgB,CACpBt9B,IAAK,OACLqU,QAASkpB,IACTC,UAAW,CAAC,aAODC,EAAc,WACzB,IAAMC,EAAaC,YAAeL,EAAeM,0BAAgB,CAC/DC,SACA7V,QAAS8V,IACTC,UAAWC,IACXvW,OAAQwW,IACRC,aAAcC,IACdzV,OAAQ0V,IACRlN,SAAUmN,YAAcnN,GACxB/vB,SAAUm9B,IACVtQ,kBAAmBqQ,YAAcn8B,GACjC0oB,mBAAoB2T,IACpBC,OAAQH,YAAcG,GACtBC,kBAAmBC,OAafC,EAAU,GAAH,SAAOC,KAAP,EAA0BC,MAEjCC,EAAQC,uBAZE,SAAChsB,EAAOnR,GAEF,8BAAhBA,EAAOvG,OAET0X,EAAQ,CAAEisB,QADUjsB,EAAZisB,SAERC,OAAOC,SAASC,UAElB,OAAOzB,EAAW3qB,EAAOnR,KAKQw9B,8BAAoBC,0BAAgBjC,EAAMkC,IAAOh5B,OAMpF,OAJAq4B,EAAQjnB,SAAQ,SAAA6nB,GACdnC,EAAKoC,IAAID,MAGJT,G,EAGMrB,IAAA,O,6FAjDTL,E,sDAEAE,E,+DAUOG,E,4iBCxCAgC,EAAmC,UACnCC,EAA6C,UAE7CC,EAA6B,CACxC,CACErlB,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,OAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,OAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,KAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,OAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,OAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,OAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,MAER,CACEif,MAAO,UACP+U,eAAgB,UAChBh0B,KAAM,Q,6FAlFGokC,E,oJACAC,E,8JAEAC,E,oiBCDPC,EAAUC,0BAED,SAASC,EAAT,GAAqC,IAAnBlnC,EAAmB,EAAnBA,MAAOoG,EAAY,EAAZA,SACtC,OAAO,kBAAC4gC,EAAQG,SAAT,CAAkBnnC,MAAOA,GAAQoG,GAG1C,SAASghC,EAAT,GAAmC,IAAnBpnC,EAAmB,EAAnBA,MAAOoG,EAAY,EAAZA,SAGrB,OAFqBihC,qBAAWL,KAEXhnC,EACZ,KAGFoG,E,EAPAghC,E,4BAUTF,EAAOE,KAAOA,G,6FAhBRJ,E,oEAEkBE,E,mEAIfE,E,4pBCRIE,EAAe,EACfC,EAAY,CAAExlC,GAAIulC,EAAcplC,MAAO,MAAOslB,MAAO,aAAc9F,MAAO,UAAW6K,MAAO,SAAUib,gBAAiB,KACvHC,EAAoB,UACpBC,EAAoB,SACpBC,EAAgB,UAChBC,EAAgB,SAChBC,EAAuB,GACvBC,EAA6B,CACxCC,OAAQ,CACNC,cAAc,GAEhBC,MAAO,CACLvmB,MAAO,WAETkG,OAAQ,U,6FAdG0f,E,uHACAC,E,oHACAE,E,4HACAC,E,4HACAC,E,wHACAC,E,wHACAC,E,+HACAC,E,g1BCJN,SAAeI,IAAtB,+B,iDAAO,8HAEoBpgC,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUY,WAF5D,uBAEKR,EAFL,EAEKA,KAFL,kBAII,CAAE8B,OAAQ9B,EAAK8B,OAAQ7B,UAAWD,EAAKA,KAAKC,YAJhD,yDAMI,CAAE6B,OAAQ,OAAQ7B,UAAW,KANjC,0D,mHAAe4/B,E,iuBCWTC,EAAoB,SAAC,GAAgC,QAA9B/lB,gBAA8B,MAAnB,GAAmB,EAAfgmB,EAAe,EAAfA,SACzCpxB,EAAW/V,cAAX+V,OAeR,SAASuD,EAAa8tB,EAAW/W,GAC/B,YAAkC/vB,IAA9B8mC,EAAU/W,EAAU1wB,MACfynC,EAAU/W,EAAU1wB,MAGzBynC,WAAW18B,iBAAwDpK,KAA1C8mC,aAAA,EAAAA,EAAW18B,WAAW2lB,EAAU1wB,OACpDynC,aAAP,EAAOA,EAAW18B,WAAW2lB,EAAU1wB,WADzC,EAOF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAQulB,OAAT,KACE,kBAAC,IAAQC,MAAT,oBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,CAAQrmB,QAASgX,EAAOnL,SACtB,kBAAC,IAAOu7B,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,CAAQsoC,GAAI,IACV,oEAGJ,kBAAC,IAAOlB,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,CAAQyC,KAAK,SACV,gBAASg+B,EAAT,EAAGp4B,KAAH,OACC,kBAAC,IAAD,CAAQ5F,KAAK,SACV,gBAAS89B,EAAT,EAAGl4B,KAAH,OACC,kBAAC,IAAD,CAAQ5F,KAAK,cACV,gBAAS27B,EAAT,EAAG/1B,KAAH,OACC,kBAAC,IAAD,CAAQ5F,KAAK,YACV,YAAc,IAzCHy+B,EAC5Br1B,EAwCoBxD,EAAW,EAAXA,KAiBI+uB,GA1DI8J,EA0CoClqB,EAAOnL,SAzCvEA,EAyCgFxD,EAzC5D1G,MAAK,SAAAsM,GAAI,OAAIA,EAAKrN,OAASsgC,MAG5Cr1B,EAAQF,WAAW1E,KAAI,SAAA2d,GAAC,YAAUA,EAAV,CAAa5kB,MAAOoiB,EAASwC,EAAEhkB,MAAOwB,UAAWgmC,OAE3E,IAsC+CnhC,KAAI,SAAAqqB,GAChC,OAAOiX,YAAUjX,EAAWiP,EAAWnC,EAAYqC,MAclD9xB,QAAO,SAAAiW,GAAC,MAAsB,WAAlBA,EAAEqP,OAAOxxB,QACrB4I,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEqvB,SAAWpvB,EAAEovB,YAGjC,OAAwB,IAApBjH,EAAS31B,OAET,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,wIASO+mC,gBAAMpR,EAAU,GAEjBnwB,KAAI,SAACzE,EAAQ2E,GAAT,OAChB,kBAAC,IAAD,CAAKC,IAAKD,EAAOshC,QAAS,GACvBjmC,EAAOyE,KAAI,SAAAqqB,GAAS,OACnB,kBAAC,IAAD,CAAQlqB,IAAKkqB,EAAU1wB,KAAM0nC,GAAI,GAC/B,kBAAC,IAAD,CACEI,WAAYpX,EACZtxB,MAAOua,EAAavD,EAAQsa,GAC5BlvB,UAAWgmC,EACXhmB,SAAUA,6B,EA7FnC+lB,E,kDACQlnC,S,4FADRknC,E,ssBCRPjK,EAAqB,CACzB,UACA,QACA,SACA,UACA,QACA,OACA,iBACA,mBACA,8BACA,4BACA,2BACA,8BACA,0CAGK,SAASyK,EAAa/nC,GAC3B,OAAOA,EAAKqmB,QAAQ,MAAO,OAGtB,SAAS2hB,EAAahoC,GAC3B,OAAOA,EAAKqmB,QAAQ,OAAQ,KAGf,SAASshB,EAAUM,EAAO1K,EAAWC,EAAYqC,GAC9D,IAAMnP,EAAY,EAAH,GAAQuX,GAUvB,OARAC,EAASxX,EAAW6M,EAAWC,GAE/B9M,EAAU2C,OAAS8U,EAAazX,EAAW6M,EAAWC,EAAYqC,GAElEnP,EAAU6C,WAAawU,EAAarX,EAAU1wB,MAE9CooC,EAAc1X,GAEPA,EAGT,SAAS0X,EAAc1X,GAGF,WAFIA,EAAUxwB,KAAzBgkB,YAEuBwM,EAAU2C,SACvC3C,EAAU2C,OAAO7xB,UAAW,GAIhC,SAAS0mC,EAASxX,EAAW6M,EAAWC,GAAY,MAqBlD,GApBA9M,EAAU+M,UAAW,UAAA/M,EAAUxwB,YAAV,eAAgBu9B,WAAYC,OAAOC,iBACnB,kBAA1BjN,EAAUG,cACnBH,EAAUG,aAAc,GAIE,kBAAxBH,EAAUkN,WAAoD,eAAnBlN,EAAU1wB,KAEvD0wB,EAAUG,aAAc,EACfH,EAAUkN,UAAUzpB,WAAW,eAExCuc,EAAUG,aAAc,EACxBH,EAAUkN,UAAYlN,EAAUkN,UAAUC,UAAUnN,EAAUkN,UAAUznB,QAAQ,KAAO,IAGjE,OAApBua,EAAU3L,QAEZ2L,EAAUG,aAAc,GAE1BH,EAAUoN,cAAe,EACrBpN,EAAUG,YAUZ,GAFAH,EAAUoN,cAAe,EAErBN,EAAWz8B,MAAK,qBAAGf,OAAoB0wB,EAAUkN,aACnDlN,EAAUoN,cAAe,MACpB,CACL,IAAMpY,EAAW6X,EAAUx8B,MAAK,qBAAGf,OAAoB0wB,EAAUkN,aAC7DlY,IACEvb,MAAMC,QAAQsb,EAASf,cACzB+L,EAAUoN,aAAepY,EAASf,aAAa9jB,OAAS,EAExD6kB,EAAS1lB,KAAKmU,WAAW,8BACP,gCAAlBuR,EAAS1lB,KAET0wB,EAAUoN,cAAe,GAKzBpN,EAAUoN,aAAeR,EAAmBtpB,SAAS0c,EAAUkN,WAE/DlN,EAAU2C,OAAS,CACjBxxB,KAAM,SACNpB,WAAW,EACXskB,MAAO,MAOjB2L,EAAU3L,MAAQgZ,YAAerN,EAAU3L,OAEf,uBAAxB2L,EAAUkN,WAA0D,OAApBlN,EAAUtxB,QAC5DsxB,EAAU3L,MAAQ,QAMG,YAAnB2L,EAAU1wB,OACZ0wB,EAAU3L,MAAQ2L,EAAUtxB,MAAQsxB,EAAUtxB,MAAQ,QAI1D,SAASipC,EAAe3gC,GACtB,OAAKA,EAIAyC,MAAMC,QAAQ1C,GAIZA,EAAUuR,QAAO,SAAC4gB,EAAQlvB,GAQ/B,MANiB,SAAbA,EACFkvB,EAAO7rB,KAAK,QAAS,QAAS,SAAU,SAExC6rB,EAAO7rB,KAAKrD,GAGPkvB,IACN,IAZM,CAACnyB,GAJD,GAmBX,SAASygC,EAAazX,EAAW6M,EAAWC,EAAYqC,GACtD,IAAKnP,EAAUoN,aACb,MAAO,CAAEj8B,KAAM,SAAUL,UAAU,EAAMpC,MAAO,IAIlD,IAAQc,EAASwwB,EAATxwB,KACQooC,EAA2BpoC,EAAnCmzB,OAER,GAAmB,WAFwBnzB,EAAfgkB,WAG1B,MAAO,CAAEriB,KAAM,UAGjB,GAAmB,WAAfymC,EACF,MAAO,CAAEzmC,KAAM,OAAQL,UAAU,GAGnC,IAAM+iB,EAAYiZ,EAAWz8B,MAAK,SAAAwnC,GAAK,OAAIA,EAAMvoC,OAAS0wB,EAAUkN,aAEpE,GAAIrZ,EAIF,MAAO,CACL1iB,KAAM,SACN5C,QALc4gC,EACb9xB,QAAO,SAAAywB,GAAI,OAAIA,EAAKja,YAAcA,EAAUvkB,QAC5CqG,KAAI,SAAAm4B,GAAI,MAAK,CAAEl9B,MAAOk9B,EAAKx+B,KAAMZ,MAAOo/B,EAAKx+B,UAOlD,IAAM0lB,EAAW6X,EAAUx8B,MAAK,SAAAc,GAAI,OAAIA,EAAK7B,OAAS0wB,EAAUkN,aAEhE,IAAKlY,EACH,MAAO,CAAE7jB,KAAM,OAAQL,UAAU,EAAM2+B,UAAU,GAGnD,GAA8B,OAA1Bza,EAASf,cAAyBe,EAASf,aAAa9jB,OAAS,EAInE,MAAO,CAAEgB,KAAM,SAAU5C,QAHJupC,iBAAO9iB,EAASf,aAAc,UACtBte,KAAI,gBAAG/E,EAAH,EAAGA,MAAH,MAAgB,CAAEA,QAAOlC,MAAOkC,OAKnE,GACEokB,EAAS1lB,KAAKmU,WAAW,8BACP,gCAAlBuR,EAAS1lB,KAET,MAAO,CAAE6B,KAAM,UAAW6F,UAAW2gC,EAAe3iB,EAAS/a,WAG/D,OAAQ+a,EAAS1lB,MACf,IAAK,QACH,OAAQsoC,GACN,IAAK,UACH,MAAO,CAAEzmC,KAAM,UAAW6F,UAAW2gC,EAAenoC,EAAKyK,WAC3D,QACE,MAAO,CAAE9I,KAAM,UAErB,IAAK,SACH,OAAQymC,GACN,IAAK,WACH,MAAO,CAAEzmC,KAAM,YACjB,IAAK,SACL,IAAK,QACH,MAAO,CAAEA,KAAM,UACjB,IAAK,YAEH,MAAO,CAAEA,KAAM,aACjB,IAAK,MACH,MAAO,CAAEA,KAAM,MAAOpB,WAAW,GACnC,IAAK,UACH,MAAO,CAAEoB,KAAM,UAAW6F,UAAW2gC,EAAenoC,EAAKyK,WAC3D,QACE,MAAO,CAAE9I,KAAM,QAErB,IAAK,UACH,MAAO,CAAEA,KAAM,WACjB,IAAK,UACH,MAAO,CAAEA,KAAM,UACjB,IAAK,QACH,MAAO,CAAEA,KAAM,SAAU3C,SAAU,CAACW,IAAMotB,eAC5C,IAAK,OACH,MAAO,CAAEprB,KAAM,QACjB,IAAK,iBACH,MAAO,CAAEA,KAAM,SAAU3C,SAAU,CAACW,IAAMmtB,iBAC5C,IAAK,mBACH,MAAO,CAAEnrB,KAAM,SAAU3C,SAAU,CAACW,IAAMktB,eAC5C,IAAK,8BACH,MAAO,CAAElrB,KAAM,UAAW6F,UAAW2gC,EAAe3iB,EAAS/a,WAC/D,IAAK,4BACH,MAAO,CAAE9I,KAAM,SACjB,IAAK,2BACH,MAAO,CAAEA,KAAM,SACjB,IAAK,8BACH,MAAO,CAAEA,KAAM,WACjB,IAAK,yCACH,MAAO,CAAEA,KAAM,sBACjB,IAAK,gBAEH,MAAuB,eAAnB6uB,EAAU1wB,KACL,CAAE6B,KAAM,cAEV,CAAEA,KAAM,OAAQpB,WAAW,GACpC,QACE,MAAO,CAAEoB,KAAM,OAAQpB,WAAW,K,6FAnPlC68B,E,wGAgBUyK,E,kGAIAC,E,kGAIQL,E,+FAcfS,E,mGAQAF,E,8FAyEAG,E,oGAqBAF,E,urKClIIM,cAAb,uIACE,uBAAYlpC,GAAO,2CACjB,mBAAMA,IA6GRmpC,kBAAoB,WAClB,MAAmD,EAAKnvB,MAAhDovB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,cAAeC,EAAjC,EAAiCA,cAC3B1K,EAAQ,GAUd,OATIwK,EAASG,QAAUH,EAASI,UAC9B5K,EAAMnwB,KAAK,2DAAC,4EAAD,CAAuBmV,KAAK,QAAQpB,MAAO,CAAEjB,MAAO,0BAE7D8nB,EAAcE,QAAUF,EAAcG,UACxC5K,EAAMnwB,KAAK,2DAAC,6EAAD,CAAwBmV,KAAK,QAAQpB,MAAO,CAAEjB,MAAO,0BAE9D+nB,EAAcC,QAAUD,EAAcE,UACxC5K,EAAMnwB,KAAK,2DAAC,uEAAD,CAAkBmV,KAAK,QAAQpB,MAAO,CAAEjB,MAAO,yBAErDqd,GA1HU,EA6HnB6K,kBAAoB,WAClB,EAAKC,UAAS,SAAA1vB,GAAK,MAAK,CAAE2vB,WAAY3vB,EAAM2vB,eA9H3B,EAiInBC,oCAAsC,WACpC,IAAMC,EAAgB,EAAKC,mBAC3B,GAAID,EACF,OAAO,EAAK7vB,MAAM+vB,UACfv7B,QAAO,SAAAV,GAAI,OAA0D,IAAtD+7B,EAAc3hC,KAAK2oB,MAAMja,QAAQ9I,EAAK5F,KAAKzH,SAC1DqV,OAAM,SAAAhI,GAAI,OAAIA,EAAKvM,aAtIP,EA0InByoC,cAAgB,SAAAvZ,GACd,EAAKiZ,UAAS,SAAA1vB,GAAK,MAAK,CACtBiwB,WAAYjwB,EAAMiwB,WAAWnjC,KAAI,SAAAgH,GAAI,mBAChCA,EADgC,CAEnCvM,SAAUkvB,EAAMvoB,KAAKzH,OAASqN,EAAK5F,KAAKzH,UAE1CspC,UAAW/vB,EAAM+vB,UAAUjjC,KAAI,SAAAgH,GAAI,mBAC9BA,EAD8B,CAEjC0Y,SAAuD,IAA9CiK,EAAMvoB,KAAK2oB,MAAMja,QAAQ9I,EAAK5F,KAAKzH,gBAlJ/B,EAuJnBypC,aAAe,SAAA3a,GAEb,IAAMwa,EAAY,EAAK/vB,MAAM+vB,UAAUjjC,KAAI,SAAAgH,GACzC,OAAIA,EAAK5F,KAAKzH,OAAS8uB,EAAKrnB,KAAKzH,KAC/B,YAAYqN,EAAZ,CAAkBvM,UAAWuM,EAAKvM,WAE7BuM,KAET,EAAK47B,SAAS,CAAEK,YAAWE,WAAY,EAAKE,mCAAmCJ,MA/J9D,EAkKnBK,mBAAqB,SAAAC,GACnB,IAAMR,EAAgB,EAAKC,mBAC3B,GAAID,EAAe,CACjB,IAAME,EAAY,EAAK/vB,MAAM+vB,UAAUjjC,KAAI,SAAAgH,GACzC,OAA0D,IAAtD+7B,EAAc3hC,KAAK2oB,MAAMja,QAAQ9I,EAAK5F,KAAKzH,MAC7C,YAAYqN,EAAZ,CAAkBvM,UAAW8oC,IAExBv8B,KAET,EAAK47B,SAAS,CACZK,YACAE,WAAY,EAAKE,mCAAmCJ,OA7KvC,EAkLnBI,mCAAqC,SAAAJ,GACnC,OAAO,EAAK/vB,MAAMiwB,WAAWnjC,KAAI,SAAA2pB,GAAK,mBACjCA,EADiC,CAEpC6Z,eAAgBP,EAAUvoC,MAAK,SAAA+tB,GAC7B,OAAOA,EAAKhuB,WAA8D,IAAlDguB,EAAKrnB,KAAK0hB,UAAUhT,QAAQ6Z,EAAMvoB,KAAKzH,eAtLlD,EA2LnB8pC,kBAAoB,SAACjoC,EAAM2E,GACzB,EAAKyiC,UAAS,SAAA1vB,GAAK,0BAAQ1X,EAAR,YAAoB0X,EAAM1X,GAA1B,mBAAkC2E,GAAO+S,EAAM1X,GAAM2E,UAzLxE,IAAQujC,EAAiBxqC,EAAjBwqC,aAHS,OASjB,EAAKxwB,MAAQ,CACXiwB,WAAY,GACZF,UAAW,GACXX,SAAU,CACRG,QAAQ,EACRC,QATiB,CAAC,EAAG,EAAG,EAAG,GASL/0B,SAAS+1B,EAAaC,SAE9CpB,cAAe,CACbE,QAAQ,EACRC,QAZsB,CAAC,EAAG,EAAG,EAAG,GAYL/0B,SAAS+1B,EAAaC,SAEnDnB,cAAe,CACbC,QAAQ,EACRC,QAfoB,CAAC,EAAG,EAAG,GAeF/0B,SAAS+1B,EAAaC,SAEjDd,WAAW,GAxBI,EADrB,iIA6BE,8GAC2Cpb,KAAKvuB,MAAtCwqC,oBADV,MACyB,CAAE3Z,MAAO,IADlC,EAGElpB,gDAAWC,IAAI,SAAU,CAAEI,UAAW,aAAcszB,MAAK,SAAA5tB,GACnDA,GAAOA,EAAIxF,MAAQwF,EAAIxF,KAAKA,MAAQwF,EAAIxF,KAAKA,KAAKynB,QACpD,EAAK+Z,SAAS,CACZO,WAAYv8B,EAAIxF,KAAKA,KAAKynB,OAAO7oB,KAAI,SAAAgH,GACnC,MAAO,CAAE5F,KAAM4F,EAAMvM,UAAU,EAAO+oC,cAAc,WAK5D3iC,gDAAWC,IAAI,QAAS,CAAEI,UAAW,aAAcszB,MAAK,SAAA5tB,GAClDA,GAAOA,EAAIxF,MAAQwF,EAAIxF,KAAKA,MAAQwF,EAAIxF,KAAKA,KAAK2oB,OACpD,EAAK6Y,SAAS,CACZK,UAAWr8B,EAAIxF,KAAKA,KAAK2oB,MAAM/pB,KAAI,SAAAgH,GACjC,MAAO,CACL5F,KAAM4F,EACNvM,SAAUipC,EAAa3Z,MAAMpc,SAAS3G,EAAKrN,MAC3C+lB,SAAS,WAnBrB,gDA7BF,kFAwDE,WAAS,WACP,EAAqF+H,KAAKvU,MAAlF+vB,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,WAAYb,EAA/B,EAA+BA,SAAUC,EAAzC,EAAyCA,cAAeC,EAAxD,EAAwDA,cAAeK,EAAvE,EAAuEA,UACjEE,EAAgBtb,KAAKub,mBACrBY,EAAmBX,EAAUvoC,MAAK,SAAAsM,GAAI,OAAIA,EAAKvM,YAC/CopC,EAAyBpc,KAAKqb,sCACpC,OACE,kEACE1jC,UAAWC,kDAAW,4BAA6B,CACjDlE,SAAUssB,KAAKvuB,MAAMiC,YAGtB0nC,EACC,kEAAKzjC,UAAU,wBACb,2DAAC,mFAAD,CAAQolB,SAAUiD,KAAKyb,cAAera,OAAQsa,IAC9C,2DAAC,iFAAD,CACE3e,SAAUiD,KAAK2b,aACfE,mBAAoB7b,KAAK6b,mBACzBO,uBAAwBA,EACxB9Z,MAAOkZ,EACPa,kBAAmBf,EACnBgB,eAAgBtc,KAAK4a,sBAEvB,kEAAKjjC,UAAU,wBACb,2DAAC,mFAAD,CACEkjC,SAAUA,EACVC,cAAeA,EACfC,cAAeA,EACfhe,SAAUiD,KAAKgc,kBACfG,iBAAkBA,IAEpB,2DAAC,0DAAD,CACEhjB,QAAQ,YACRnG,MAAM,UACNqC,KAAK,QACL+C,QAAS,WACP,EAAK3mB,MAAM8qC,QAAQC,YAAY,EAAK/wB,QACpC,EAAKyvB,sBANT,WAcJ,2DAAC,+EAAD,CACE5Y,MAAOkZ,EACPc,eAAgBtc,KAAK4a,oBACrBM,kBAAmBlb,KAAKkb,kBACxBxnC,SAAUssB,KAAKvuB,MAAMiC,cAxGjC,8BAgME,WACE,OAAOssB,KAAKvU,MAAMiwB,WAAWzoC,MAAK,SAAAsM,GAAI,OAAIA,EAAKvM,cAjMnD,0IAAmCm7B,6CAAMC,e,SAqM1BuM,cAAA,wC,2BAWf,SAAS6B,YAAT,GAAwF,EAAjEd,WAAiE,IAArDF,EAAqD,EAArDA,UAAWX,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,cAC/DzY,EAAQkZ,EAAUv7B,QAAO,SAAA+gB,GAAI,OAAIA,EAAKhuB,YAAUuF,KAAI,SAAAyoB,GAAI,OAAIA,EAAKrnB,KAAKzH,QAExEgqC,EAAS,EAcb,OAZIrB,EAASI,UACXiB,GAAU,GAGRpB,EAAcG,UAChBiB,GAAU,GAGRnB,EAAcE,UAChBiB,GAAU,GAGL,CAAE5Z,QAAO4Z,U,qIAjOLvB,c,+GAgNJ6B,Y,mqBC9NF,SAASC,EAAWvqC,GACzB,OAAOkH,IAAWC,IAAX,mBAA2BnH,GAAQ,CACxCuH,UAAW,aAIR,SAASijC,EAAaxqC,EAAMytB,GACjC,OAAOvmB,IAAW6nB,MAAX,mBAA6B/uB,GAAQytB,I,6FAP9B8c,E,8DAMAC,E,iqBCJHC,EAAe,SAAChjC,GAC3B,IAAKA,IAASA,EAAKZ,SAAWY,EAAKZ,QAAQhG,OAAS,EAClD,MAAO,GAGT,IAAM6pC,EAAgBjjC,EAAKZ,QAAQ,GAAGzH,MAChCurC,EAAYljC,EAAKZ,QAAQ,GAAGzH,MAC5BwrC,EAAanjC,EAAKZ,QAAQ,GAAGzH,MACnC,OACE,yBAAKqG,UAAU,+BAAf,sBACE,kBAAC,IAAD,CAAc+lB,UAAU,aAAa5E,MAAM,eAA3C,sBACE,yBAAKnhB,UAAU,uCAAf,sBACE,yBAAKA,UAAU,mCAAf,sBACE,yBAAKA,UAAU,oCAAf,kCACA,yBAAKA,UAAU,qCAAf,sBAAqDilC,IAEvD,yBAAKjlC,UAAU,mCAAf,sBACE,yBAAKA,UAAU,oCAAf,8BACA,yBAAKA,UAAU,qCAAf,sBAAqDklC,IAEvD,yBAAKllC,UAAU,mCAAf,sBACE,yBAAKA,UAAU,oCAAf,+BACA,yBAAKA,UAAU,qCAAf,sBAAqDmlC,S,4FAtBpDH,E,kiCCAAI,EAAa,YACbC,EAAW,UAEXC,EAAyB,aAKzBC,EAAmB,iBAUnBC,EAAc,OAQdC,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAM9BC,EAAqB,IAAIC,IAAI,CAAC,QAAS,UAAW,MAAO,U,6FApCxC,I,6FACJ,a,yFACM,U,+FAEnBP,E,yFACAC,E,uFAEAC,E,qGACuB,W,mGACD,qB,kGAEA,oB,kGACtBC,E,+FAEuB,S,mGACD,Q,kGAEF,M,gGACG,S,mGACA,S,mGACD,Q,kGAEtBC,E,0FACe,Q,2FAEH,O,wFACF,K,sFAEC,G,uFACQ,U,+FACnBC,E,uFAEgB,G,4FACC,G,6FACU,G,uGAE3BC,E,mzCChCN,SAASE,EAAT,GAAwD,IAAzBvD,EAAyB,EAAzBA,WAAe1U,EAAU,OAC7D,OAAO,kBAAC,IAAD,GAAe1C,UAAWoX,GAAgB1U,IAG5C,I,IAAMkY,EAAY,SAAC,GAA8B,IAA5BxD,EAA4B,EAA5BA,WAAe1U,EAAa,OACtD,OAAI0U,EAAWyD,cACN,kBAACF,EAAD,KAAyBjY,EAAzB,CAAiC0U,WAAYA,KAG/C,kBAAC,IAAD,KAAmB1U,EAAnB,CAA2B1C,UAAWoX,O,6FAT/BuD,E,6FAIHC,E,8zCCDAE,EAAoB,SAAC,GAAkC,IAAhCpsC,EAAgC,EAAhCA,MAAOqC,EAAyB,EAAzBA,SAAalC,EAAY,OAClE,OACE,yBAAKkG,UAAU,eAAf,sBACE,uBAAGA,UAAU,mBAAb,sBACE,kBAAC,IAAD,CAAYE,SAAS,UAArB,wBAEF,6BACEvG,MAAOA,EACPqC,SAAUA,EACVgE,UAAU,uBACVy5B,YAAY,UACR3/B,EALN,2BAWNisC,EAAkB3lC,UAAY,CAC5BzG,MAAOwsB,SACPnqB,SAAUoqB,Q,UAGG2f,G,6FAtBFA,E,8vBCHAjmB,EAAS,SAAC,GAAD,IAAGqB,EAAH,EAAGA,MAAOphB,EAAV,EAAUA,SAAUimC,EAApB,EAAoBA,eAApB,OACpB,4BAAQhmC,UAAS,iBAAYgmC,EAAiB,oBAAsB,IAApE,sBACI7kB,GAAS,wBAAInhB,UAAU,eAAd,sBAA8BmhB,GACxCphB,IAIL+f,EAAO1f,UAAY,CACjB+gB,MAAO8kB,SACPlmC,SAAUkmC,QAGZnmB,EAAOwR,aAAe,CACpBnQ,MAAO,K,4FAbIrB,E,ocCFPyI,EAAa,SAAAzU,GAAK,OAAIA,EAAMgrB,WAErBoH,EAAuBzvB,YAAe8R,GAAY,SAAAzU,GAAK,OAAIA,EAAMpS,IAAI,oB,6FAF5E6mB,E,uEAEO2d,E,qsBCAAlzB,EAAU,EAAH,GACfmzB,KAKE,SAASC,IACd,OAAO,SAAsB/kC,GAC3BA,EAAS,CACPjF,KAAM,gBACN8V,QAASm0B,kB,6FAVFrzB,E,sEAMGozB,E,ghDCKHE,EAAgB,SAAC,GAA0B,IAAxBvqC,EAAwB,EAAxBA,SAAUwqC,EAAc,EAAdA,QACxC,IAAwBxsC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAEMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAIZ,OACE,oCACGulB,GAAWA,EAAQjiB,EAAavD,KAAMhlB,IACrCwqC,GACA,kBAAC,IAAD,CAAQvmC,UAAU,aAAaygB,QAAS6D,EAAavD,KAAMhlB,SAAUA,EAArE,wCAIF,kBAAC,IAAD,CAAOglB,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAACkiB,EAAD,2B,EArBKF,E,oCA2BN,IAAMG,EAAe,SAAC,GAAqD,QAAnDr+B,cAAmD,MAA1C,CAAElD,SAAU,OAA8B,EAArBwhC,EAAqB,EAArBA,eAC3D,IAA0B3sC,mBAAS,CAAEyH,SAAS,EAAMS,UAAW,KAA/D,GAAO6R,EAAP,KAAc0vB,EAAd,KACQxwB,EAAYguB,qBAAW2F,KAAvB3zB,QACF4zB,EAAUC,mBAYhB,OAVAhsC,qBAAU,WACRgnC,cAAiBzM,MAAK,SAAA0R,GACpBtD,EAAS,CACPhiC,SAAS,EACTsC,OAAQgjC,EAAKhjC,OACb7B,UAAW6kC,EAAK7kC,WAAa,UAGhC,IAGD,kBAAC,IAAD,CACEqa,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CACEoD,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAG4mC,IAAT,wBAGJ5lB,MAAM,iBACN5O,KAAK,0CACLy0B,UAAWJ,EARb,uBAUA,kBAAC,IAAD,CAAQjtC,MAAOma,EAAMtS,QAArB,sBACE,kBAAC,IAAOu/B,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,uBACE,kBAAC,IAAD,mDAGJ,kBAAC,IAAOonC,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,CAAQA,MAAOma,EAAMhQ,OAArB,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CACEyO,OAAQA,EACR6+B,iBAAkBP,EAClBzkC,UAAW6R,EAAM7R,UACjBilC,OAAK,EACLN,QAASA,EALX,wBAQF,kBAAC,IAAO7F,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAMqmB,QAAP,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAO3mB,KAAR,yCAGJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQrG,MAAM,UAAUoF,QAASzN,EAAQuR,MAAzC,uC,EAzDLkiB,E,wHAsEN,I,IAAMD,EAAwBrX,aACnC,iBAAO,MACP,SAAA9tB,GAAQ,MAAK,CACXqlC,eAAgB,kBAAMrlC,EAASF,mBAHEguB,CAKnCsX,I,6FAtGWH,E,+FA2BAG,E,8FAsEAD,E,0jDChGAW,EAAkB,SAAC,GAA0B,IAAxBprC,EAAwB,EAAxBA,SAAUwqC,EAAc,EAAdA,QAC1C,IAAwBxsC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAEMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAIZ,OACE,oCACGulB,GAAWA,EAAQjiB,EAAavD,KAAMhlB,IACrCwqC,GACA,kBAAC,IAAD,CAAQvmC,UAAU,aAAaygB,QAAS6D,EAAavD,KAAMhlB,SAAUA,EAArE,0CAIF,kBAAC,IAAD,CAAOglB,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAAC8iB,EAAD,2B,EArBKD,E,oCA2BN,IAAME,EAAiB,SAAC,GAAgC,IAA9B9pB,EAA8B,EAA9BA,QAASmpB,EAAqB,EAArBA,eACxC,IAA0B3sC,mBAAS,CAAEyH,SAAS,EAAMS,UAAW,KAA/D,GAAO6R,EAAP,KAAc0vB,EAAd,KACMoD,EAAUC,mBA0BhB,OAxBAhsC,qBAAU,WAERqJ,QAAQ0mB,IAAI,CACViX,cACAyF,YAAe,sCAAsC,KACpDlS,MAAK,YAAc,IACoC,EADpC,SAAZmS,EAAY,KAARC,EAAQ,KACF,YAAdD,EAAGzjC,QAAsC,YAAd0jC,EAAG1jC,OAChC0/B,EAAS,CACPhiC,SAAS,EACTsC,OAAQ,UACR7B,UAAWslC,EAAGtlC,UACdgd,MAAK,UAAEuoB,EAAGC,WAAW,UAAhB,aAAE,EAAkBvoB,eAG3BskB,EAAS,CACPhiC,SAAS,EACTsC,OAAQ,OACR7B,UAAW,GACXgd,MAAO,UAIZ,IAGD,kBAAC,IAAD,CACE3C,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CACEoD,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAGunC,IAAT,wBAGJvmB,MAAM,mBACN5O,KAAK,4CACLy0B,UAAWJ,EARb,uBAWA,kBAAC,IAAD,CAAQjtC,MAAOma,EAAMtS,QAArB,sBACE,kBAAC,IAAOu/B,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,uBACE,kBAAC,IAAD,2EAGJ,kBAAC,IAAOonC,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,CAAQA,MAAOma,EAAMhQ,OAArB,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CACEsI,UAAW6R,EAAM7R,UACjBgd,MAAOnL,EAAMmL,MACb1B,QAASA,EACT0pB,iBAAkBP,EAClBQ,OAAK,EACLN,QAASA,EANX,wBASF,kBAAC,IAAO7F,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQyC,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,qEAKJ,kBAAC,IAAMooB,OAAP,Y,EAxED4lB,E,+FAiFN,I,IAAMD,EAA0BjY,aACrC,SAAArb,GAAK,OAAI,WACP,IAAM3M,EAAO2M,EAAM5R,SAAS4R,MAAM3M,KAAKlG,MAAM,MAC7C,MAAO,CACLsc,QAAS,CACPrY,SAAUiC,EAAK,GACfqB,QAASrB,EAAK,SAIpB,SAAA9F,GAAQ,MAAK,CACXqlC,eAAgB,kBAAMrlC,EAASF,mBAXIguB,CAarCkY,I,6FAzHWF,E,qGA2BAE,E,oGAiFAD,E,gkDC5GAO,EAAY,SAAC,GAA0B,IAAxB5rC,EAAwB,EAAxBA,SAAUwqC,EAAc,EAAdA,QACpC,IAAwBxsC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAEMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAIZ,OACE,oCACGulB,GAAWA,EAAQjiB,EAAavD,KAAMhlB,IACrCwqC,GACA,kBAAC,IAAD,CAAQvmC,UAAU,aAAaygB,QAAS6D,EAAavD,KAAMhlB,SAAUA,EAArE,yCAIF,kBAAC,IAAD,CAAOglB,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAACsjB,EAAD,2B,EArBKD,E,oCA2BN,IAAME,EAAgB,SAAC,GAAuB,IAArBnB,EAAqB,EAArBA,eAC9B,IAAwC3sC,mBAAS,MAAjD,GAAO+tC,EAAP,KAAqBC,EAArB,KACA,IAA4BhuC,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACMC,GAAWH,aAAA,EAAAA,EAAcvtC,OAAQ,iBA6BvC,OACE,kBAAC,IAAD,CACE+hB,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CAAaoD,KAAM,kBAAC,IAAD,wBAAiBxD,MAAM,aAA1C,uBACA,kBAAC,IAAD,CAAQxnB,MAAOmK,EAAf,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,IACjB,yBAAKqG,UAAU,YAAf,sBACE,2BAAOkoC,QAAQ,cAAcloC,UAAU,kBAAvC,oCAEE,2BAAO5D,KAAK,OAAOV,GAAG,cAAcnB,KAAK,MAAM4tC,OAAO,OAAOnsC,SAxCjD,SAAAupB,GACtBwiB,EAAgBxiB,EAAMtI,OAAOjF,MAAM,KAuCzB,wBAEF,kBAAC,IAAD,CAAkB+N,UAAU,SAAS5E,MAAO8mB,EAA5C,sBACE,0BAAMjoC,UAAU,YAAhB,sBAA6BioC,KAGjC,kBAAC,IAAMxmB,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CAAQrE,QAAS,kBAAM2nB,YAAajvC,IAAUwI,KAAKC,UAAUymC,wBAA7D,4CAIF,kBAAC,IAAM5mB,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAjDD,WACjB,GAAKqnB,EAAL,CAKAE,EAAU,WACV,IAAMhmC,EAAO,IAAIsmC,SACjBtmC,EAAKumC,OAAO,MAAOT,GAEnBxQ,YAASt1B,GACNozB,MAAK,WACJ4S,EAAU,IACVtB,OAED8B,OAAM,WAGLR,EAAU,IACVtB,YAjBFsB,EAAU,UA+CF,mCAIN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,uBACE,kBAAC,IAAD,8CAGJ,kBAAC,IAAOonC,KAAR,CAAapnC,MAAM,SACjB,kBAAC,IAAD,CAAQyC,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,qCAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CAAQrE,QAAS,kBAAMunB,EAAU,KAAjC,oC,EAzEDH,E,sFAkFN,I,IAAMD,EAAqBzY,aAChC,iBAAO,MACP,SAAA9tB,GAAQ,MAAK,CACXqlC,eAAgB,kBAAMrlC,EAASF,mBAHDguB,CAKhC0Y,I,6FAlHWF,E,mFA2BAE,E,uFAkFAD,E,+yBC3HN,SAAea,EAAtB,oC,iDAAO,WAA4BluC,EAAM6B,GAAlC,iHAEoBqF,IAAWqpB,OAAX,WAAsB1uB,EAAtB,YAA8B7B,IAFlD,uBAEKyH,EAFL,EAEKA,KAFL,kBAII,CAAE8B,OAAQ9B,EAAK8B,SAJnB,yDAMI,CAAEA,OAAQ,SANd,0D,sBAUA,SAAS4kC,EAAiBvlC,GAC/B,OAAO1B,IAAWqpB,OAAX,sBAAiC3nB,K,6FAXpBslC,E,+DAUNC,E,ibCZT,SAASC,IAAqC,IAAnBC,EAAmB,uDAAJ,GACzC9U,EAAQ8U,EAAap1B,QAAO,SAACgF,EAAKhE,GACtC,IAAMq0B,EAAUr0B,EAAMja,KAAK0G,MAAM,KAC3B1G,EAAOsuC,EAAQA,EAAQztC,OAAS,GAEtC,OADAod,EAAIjQ,KAAKhO,GACFie,IACN,IAEH,OAAOsb,G,4FARO6U,E,01HCaHG,WAAb,6PACE,WACE,MAYIzgB,KAAKvuB,MAXPivC,EADF,EACEA,SACAplC,EAFF,EAEEA,OACAghB,EAHF,EAGEA,KACA9oB,EAJF,EAIEA,MACAmtC,EALF,EAKEA,QACAxvC,EANF,EAMEA,QACAinB,EAPF,EAOEA,QACAwoB,EARF,EAQEA,gBACAC,EATF,EASEA,WATF,IAUE9sC,YAVF,MAUS,GAVT,MAWE+sC,kBAXF,MAWe,GAXf,EAcA,OACE,kEAAKnpC,UAAWC,kDAAW,cAAe,CAAEmpC,QAASJ,IAArD,sBACE,2FACGE,GACC,kEAAKlpC,UAAU,cAAf,sBACE,mEAAMA,UAAU,OAAhB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMkiC,uCAAZ,yBAGJ,mEAAMrpC,UAAU,QAAhB,sBAAyBkpC,IAG5BH,GAAY,kEAAK/oC,UAAU,WAAf,sBAA2B+oC,IAE1C,kEAAK/oC,UAAU,YAAYygB,QAASA,EAAS6oB,KAAK,eAAlD,sBACG3lC,GACC,2DAAC,iEAAD,CAAcoiB,UAAU,SAAS5E,MAAOooB,0EAAsBJ,GAA9D,sBACE,kEAAKnpC,UAAS,iBAAY2D,EAAZ,YAAsBvH,GAApC,wBAGHuoB,GAEH,kEAAK3kB,UAAU,aAAf,sBAA6BnE,GAC5BrC,GACCA,EAAQoH,KAAI,SAAChF,EAAQkF,GAAT,OACV,kEACEd,UAAWC,kDAAW,SAAU,CAAElE,SAAUH,EAAOG,WACnDgF,IAAG,UAAKnF,EAAOC,MAAZ,YAAqBiF,GACxB2f,QAAS7kB,EAAO6kB,QAChB6oB,KAAK,eAJP,sBAME,kEAAKtpC,UAAU,OAAf,sBAAuBpE,EAAO+oB,MAC9B,kEAAK3kB,UAAU,QAAf,sBAAwBpE,EAAOC,WAGpCotC,GACCA,EAAgBroC,KAAI,SAAAhF,GAAM,OACxB,kEACEoE,UAAU,sBACVe,IAAKnF,EAAOC,MACZ4kB,QAAS7kB,EAAO6kB,QAChB6oB,KAAK,eAJP,sBAMG1tC,EAAO4tC,UAAY5tC,EAAO6tC,YACzB,kEAAKzpC,UAAU,SAASsc,MAAO,CAAEgF,MAAO,GAAF,OAAK1lB,EAAO6tC,WAAZ,MAAtC,uBAEF,kEAAKzpC,UAAU,OAAf,sBAAuBpE,EAAO+oB,MAC9B,kEAAK3kB,UAAU,QAAf,sBAAwBpE,EAAOC,OAC9BD,EAAO6tC,YAAc,kEAAKzpC,UAAU,WAAf,sBAA2BpE,EAAO6tC,WAAlC,YAjEpC,uIAAgCjT,6CAAMC,eAyEtCqS,WAAW1oC,UAAY,CACrB2oC,SAAUzoC,6CACVqkB,KAAMrkB,6CACNzE,MAAOsqB,+CACP6iB,QAASvoC,6CACTjH,QAAS63B,8CACT5Q,QAAS2F,6CACTziB,OAAQwiB,+CACR8iB,gBAAiB5X,+C,aAGJyX,WAAA,wC,gKApFFA,W,23GCRAY,YAAb,kQACE,WACE,IAAQ3pC,EAAasoB,KAAKvuB,MAAlBiG,SACR,OAAO,kEAAKC,UAAU,YAAf,sBAA4BD,KAHvC,wIAAiCy2B,6CAAMC,eAOvCiT,YAAYtpC,UAAY,CACtBL,SAAUO,8C,aAGGopC,YAAA,wC,gKAXFA,Y,qqBCHN,SAASC,EAAK/oC,GAAmD,IAA9CgpC,EAA8C,uDAAjC,kBAAM,MAAMC,EAAqB,uDAAZ,SAAA9oC,GAAG,OAAIA,GACjE,SAAS+oC,EAAQhwC,GAAO,MAChBiH,EAAM8oC,EAAO/vC,GACnB,iBAAO8G,EAAIG,UAAX,QAAmB6oC,EAGrB,OAAOE,EAGF,SAASC,EAAcD,GAO5B,OANA,SAAgBhwC,GACd,IAAMkwC,EAASF,EAAQhwC,GAEvB,OAAO,kBAACkwC,EAAWlwC,K,6FAbP6vC,E,4DASAI,E,w3DCGHE,EAAiB,SAAC,GAA6B,IAA3B5gB,EAA2B,EAA3BA,KAAM6gB,EAAqB,EAArBA,eACrC,IAAwBnwC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAIA,IAA4BjnB,mBAAS,CAAEowC,MAAM,EAAO9tC,WAAOnB,IAA3D,GAAO4I,EAAP,KAAekkC,EAAf,KACM1jB,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLyjB,EAAU,CAAEmC,MAAM,EAAO9tC,WAAOnB,IAChC8lB,GAAQ,KAGN4lB,EAAUC,mBAahB,OACE,qCACIqD,GACA,kBAAC,IAAD,CAAQ7uB,MAAM,UAAUoF,QAAS6D,EAAavD,KAA9C,yCAIDmpB,GACC,uBAAGZ,KAAK,eAAe7oB,QAAS6D,EAAavD,KAA7C,yCAKF,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAAC,IAAD,CACEhI,MAAO,CACLgF,MAAO,QACPC,OAAQ,SAHZ,sBAME,kBAAC,IAAD,CACE4D,OACE,kBAAC,IAAD,CAAQnlB,UAAU,iBAAiB2lB,IAAI,qBAAvC,sBACE,kBAAC,IAAD,yBAGJxE,MAAM,kBACN6lB,UAAWJ,EAPb,uBASC9iC,EAAOqmC,KACN,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQ/tC,KAAM0H,EAAOzH,MAAQ,OAAS,UAAtC,sBACE,kBAAC,IAAOhD,KAAR,KAAcyK,EAAOzH,MAAQyH,EAAOzH,MAAQ,uBAGhD,kBAAC,IAAMolB,OAAP,OAGF,kBAAC,IAAD,CACEuJ,cAAe,CACbhB,SAAU,GACVogB,QAAS,IAEX3wC,SAAU,SAAAkX,GACR,IAAM6qB,EAAS,GAkCf,OAhCK7qB,EAAOqZ,WACVwR,EAAOxR,SAAW,qBAGfrZ,EAAOy5B,UACV5O,EAAO4O,QAAU,oCAGfz5B,EAAOqZ,WAAarZ,EAAOy5B,UAC7B5O,EAAO4O,QAAU,0BAGfz5B,EAAOqZ,WACL,aAAa7L,KAAKxN,EAAOqZ,UAC3BwR,EAAOxR,SAAW,gDACTrZ,EAAOqZ,SAAS5uB,OAAS,EAClCogC,EAAOxR,SAAW,kDACR,QAAQ7L,KAAKxN,EAAOqZ,UAGpB,QAAQ7L,KAAKxN,EAAOqZ,UAGpB,QAAQ7L,KAAKxN,EAAOqZ,UAGpB,4BAA4B7L,KAAKxN,EAAOqZ,YAClDwR,EAAOxR,SACL,+FAJFwR,EAAOxR,SACL,mEAJFwR,EAAOxR,SACL,mEAJFwR,EAAOxR,SACL,oEAaCwR,GAET6O,SAAQ,e,EAAA,G,EAAA,yBAAE,WAAO15B,EAAQqC,GAAf,uFACRA,EAAQs3B,eAAc,GADd,kBAIA7oC,IAAW6nB,MAAX,UAAoBnwB,IAAUwI,KAAKC,UAAUsnB,MAA7C,YAAsDG,GAAQ,CAClEW,SAAUrZ,EAAOqZ,WALb,OAQNhX,EAAQs3B,eAAc,GACtBtC,EAAU,CAAEmC,MAAM,IATZ,gDAWNn3B,EAAQs3B,eAAc,GACtBtC,EAAU,CAAEmC,MAAM,EAAM9tC,OAzGrBA,EAyGuC,EAAD,GAzG7B,2BAKxB,SAHAA,SAAA,UAAAA,EAAO0F,gBAAP,mBAAiBC,YAAjB,SAAuBrB,UACvBtE,EAAM0F,SAASC,KAAKrB,SAASvF,OAAS,GADtC,UAEAiB,EAAM0F,SAASC,KAAKrB,SAAS,UAF7B,OAEA,EAAiCK,KAEjC,UAAO3E,EAAM0F,SAASC,KAAKrB,SAAS,UAApC,aAAO,EAAiCK,KAAKC,MAAM,MAAM,GAGpD,6BAoFa,kCA7FH,IAAA5E,EAAS,MAKxB,IAwFkB,mB,+KAAF,wDAeRkuC,SAAU3D,EAzDZ,uBA2DG,gBAAGviB,EAAH,EAAGA,MAAOF,EAAV,EAAUA,aAAcnZ,EAAxB,EAAwBA,QAASw/B,EAAjC,EAAiCA,aAAjC,OACC,oCACE,kBAAC,IAAMxqB,QAAP,CAAe4E,YAAU,GACvB,kBAAC,IAAD,CAAM5kB,UAAU,gBAAhB,sBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAOzF,KAAK,WAAZ,uBACG,YAAqB,IAAlBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,kBAAC,IAAD,KACMD,EADN,CAEE4B,KAAK,WACLC,QAAS5B,EAAK4B,MACdC,WAAY7B,EAAK4B,MACjBzC,UAAQ,EACRiC,MAAM,WACN49B,YAAY,eAPd,4BAaR,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAOl/B,KAAK,UAAZ,uBACG,YAAqB,IAAlBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,kBAAC,IAAD,KACMD,EADN,CAEE4B,KAAK,WACLxC,UAAQ,EACRyC,QAAS5B,EAAK4B,MACdC,WAAY7B,EAAK4B,MACjBR,MAAM,mBACN49B,YAAY,uBAPd,8BAeZ,kBAAC,IAAMhY,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS+pB,EACTzuC,UAAWsoB,IAAUrZ,GAAWmZ,EAJlC,wC,EAxKT8lB,E,uHA4LbA,EAAe7pC,UAAY,CACzBipB,KAAMlD,UAGD,I,IAAMskB,EAA0Btb,aAAQ,SAAArb,GAG7C,MAAO,CAAEuV,KAFIqhB,EAAa52B,GAENvZ,QAHiB40B,CAIpC8a,GAEH,SAASS,EAAa52B,GACpB,OAAOA,EAAMmrB,aAAatU,MAAMtvB,U,6FAvMrB4uC,E,6GAgMAQ,E,sHAMJC,E,kfChNIC,EAAc,SAAC,GAC1B,OAD0C,EAAdnxC,QACboH,KAAI,SAAAhF,GAAM,OAAI,kBAAC,IAAD,CAAYmF,IAAKnF,EAAOrB,KAAMqB,OAAQA,S,4FADxD+uC,E,u4BCCPC,EAAmB,CACvBC,WAAY,EACZC,aAAc,aACdC,WAAY,EACZC,OAAQ,EACRC,UAAW,EACXC,aAAc,EACdC,UAAW,GAGPC,EAAqB,CACzBC,UAAW,EACXjjC,OAAQ,cACRkB,SAAU,WACVgiC,SAAU,GAGL,SAASC,IACd,mDAAO,WAAMlqC,GAAN,6FACLA,EAASE,IAASC,QAAQoiB,MADrB,kBAGoBniB,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAU4pC,eAH5D,OAGGzpC,EAHH,OAIHV,EAASE,IAAS7B,QAAQkkB,IAAe7hB,EAASC,KAAKA,MAAQ,KAJ5D,gDAMHX,EAASE,IAAS3B,KAAKgkB,IAAd,OANN,yDAAP,sDAWK,SAAS6nB,IACd,mDAAO,WAAMpqC,GAAN,gFACLA,EAASE,IAASC,QAAQqiB,MAC1B,IAGExiB,EAASE,IAAS7B,QAAQmkB,IAAkB,CAAC+mB,KAC7C,MAAOvuC,GACPgF,EAASE,IAAS3B,KAAKikB,IAAkBxnB,IAPtC,gDAAP,sDAYK,SAASqvC,IACd,mDAAO,WAAMrqC,GAAN,gFACLA,EAASE,IAASC,QAAQsiB,MAC1B,IAGEziB,EAASE,IAAS7B,QAAQokB,IAAsB,CAACsnB,KACjD,MAAO/uC,GACPgF,EAASE,IAAS3B,KAAKkkB,IAAsBznB,IAP1C,gDAAP,sDAYK,SAASsvC,IACd,mDAAO,WAAMtqC,GAAN,+FACLA,EAASE,IAASC,QAAQuiB,MADrB,kBAGoBtiB,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUgqC,mBAH5D,OAGG7pC,EAHH,OAIG8pC,EAAuB9pC,EAASC,KAAKA,KAC3CX,EAASE,IAAS7B,QAAQqkB,IAAwB8nB,IAL/C,gDAOHxqC,EAASE,IAAS3B,KAAKmkB,IAAd,OAPN,yDAAP,sDAYK,SAAS+nB,EAA6BC,EAAqB3qC,GAChE,kCAAO,0GAEC2qC,EAFD,gCAGKtqC,IAAWwmB,KAAK9uB,IAAUwI,KAAKC,UAAUoqC,0BAA2B5qC,GAHzE,6CAKKK,IAAWwqC,IAAI9yC,IAAUwI,KAAKC,UAAUsqC,0BAA2B9qC,GALxE,yDASHoR,QAAQC,KAAR,MATG,2D,6FArEHm4B,E,uFAUAQ,E,yFAOUG,E,iGAYAE,E,0FAaAC,E,8FAaAC,E,gGAaAG,E,4hBCvEHK,EAAkB11B,YAC7B,CAAC,SAAC3C,GAAD,OAAWA,EAAM0rB,kBAAkB4M,YACpC,SAACA,GAAD,OAAcA,KAGHC,EAAkB51B,YAC7B,CAAC,SAAC3C,GAAD,OAAWA,EAAM0rB,kBAAkBzqB,MAAMq3B,SAAS5qC,WACnD,SAACsV,GAAD,OAAeA,KAGJw1B,EAAoB71B,YAC/B,CAAC,SAAC3C,GAAD,OAAWA,EAAM0rB,kBAAkB+M,cACpC,SAACH,GAAD,OAAcA,KAGHI,EAAoB/1B,YAC/B,CAAC,SAAC3C,GAAD,OAAWA,EAAM0rB,kBAAkBzqB,MAAMw3B,WAAW/qC,WACrD,SAACsV,GAAD,OAAeA,KAGJ21B,EAAwBh2B,YACnC,CAAC,SAAC3C,GAAD,OAAWA,EAAM0rB,kBAAkBkN,kBACpC,SAACN,GAAD,OAAcA,KAGHO,EAAwBl2B,YACnC,CAAC,SAAC3C,GAAD,OAAWA,EAAM0rB,kBAAkBzqB,MAAM23B,eAAelrC,WACzD,SAACsV,GAAD,OAAeA,KAGJ81B,EAA0Bn2B,YACrC,CAAC,SAAC3C,GAAD,OAAWA,EAAM0rB,kBAAkBqN,oBACpC,SAACT,GAAD,OAAcA,KAGHU,EAA0Br2B,YACrC,CAAC,SAAC3C,GAAD,OAAWA,EAAM0rB,kBAAkBzqB,MAAM83B,iBAAiBrrC,WAC3D,SAACsV,GAAD,OAAeA,M,6FArCJq1B,E,yFAKAE,E,yFAKAC,E,2FAKAE,E,2FAKAC,E,+FAKAE,E,+FAKAC,E,iGAKAE,E,uxBC5BAnG,EAAe/F,wBAAc,IAE7BmM,EAAQ,SAAC,GAAgD,IAA9ChsB,EAA8C,EAA9CA,KAAM/N,EAAwC,EAAxCA,QAAag6B,EAA2B,EAA/BtxC,GAAgBqE,EAAe,EAAfA,SAC/CrE,EAAKsxC,GAAc7pC,MACnB8pC,EAAO,CACX,4BAAsBvxC,EAAtB,gBACA,6BAAuBA,EAAvB,uBAGF,OACE,kBAACirC,EAAa7F,SAAd,CAAuBnnC,MAAO,CAAEszC,OAAMj6B,YACpC,kBAAC,IAAD,KAAci6B,EAAd,CAAoBlsB,KAAMA,EAAMmsB,QAASl6B,aAAF,EAAEA,EAASuR,MAAO4oB,sBAAoB,EAA7E,uBACE,yBAAKntC,UAAU,UAAf,sBACuB,mBAAbD,EAA0BA,EAAS,CAAErE,KAAIuxC,OAAMlsB,OAAM/N,YAAajT,MAOpFgtC,EAAM3sC,UAAY,CAChB4S,QAASkT,gBAAM,CACbnF,KAAMqF,OACN7B,MAAO6B,SAETrmB,SAAUqtC,oBAAU,CAAC9sC,OAAM8lB,SAC3BrF,KAAMtgB,OACN/E,GAAIyqB,UAGN4mB,EAAMM,YAAcA,K,6FA9BP1G,E,qFAEAoG,E,6gBCTN,SAASO,EAAa/yC,GAC3B,OAAOkH,IAAWC,IAAX,qBAA6BnH,GAAQ,CAC1CuH,UAAW,aAIR,SAASyrC,EAAehzC,EAAMytB,GACnC,OAAOvmB,IAAW6nB,MAAX,qBAA+B/uB,GAAQytB,EAAM,CAClDlmB,UAAW,aAIR,SAAS0rC,EAAcxlB,GAC5B,OAAOvmB,IAAWwmB,KAAK,aAAcD,EAAM,CACzClmB,UAAW,c,6FAdCwrC,E,kEAMAC,E,oEAMAC,E,4fCZT,SAASC,EAASlzC,EAAMytB,GAC7B,OAAOvmB,IAAWwmB,KAAX,gBAAyB1tB,EAAzB,UAAuCytB,EAAM,CAClDlmB,UAAW,aAIR,SAAS4rC,EAAW1lB,GACzB,OAAOvmB,IAAWwmB,KAAK,QAASD,EAAM,CACpClmB,UAAW,aAIR,SAAS6rC,EAAWpzC,EAAMytB,GAC/B,OAAOvmB,IAAW6nB,MAAX,gBAA0B/uB,GAAQytB,EAAM,CAC7ClmB,UAAW,c,6FAdC2rC,E,yDAMAC,E,2DAMAC,E,izFCOVxO,EAAgB,SAACrrB,EAAOnR,GAC5B,OAAQA,EAAOvG,MACb,IAAK,qBACH,OAAOgjB,YAAQtL,GAAO,SAAAuL,GACpBA,EAAMoK,OAAO9mB,EAAOirC,SAASrjB,OAAOsjB,UAAUtlC,KAAK5F,EAAOmrC,aAI9D,IAAK,wBACH,IAAQF,EAAajrC,EAAbirC,SAER,OAAOxuB,YAAQtL,GAAO,SAAAuL,GACpBA,EAAMoK,OAAOmkB,EAASrjB,OAAOsjB,UAAUlR,OAAOiR,EAASE,SAAU,MAGrE,IAAK,kBACH,IAAQF,EAAajrC,EAAbirC,SAER,OAAOxuB,YAAQtL,GAAO,SAAAuL,GACpB,IAAM7kB,EACJ6kB,EAAMoK,OAAOmkB,EAASrjB,OAAOsjB,UAAUD,EAASE,UAAUC,OAAOH,EAASpzC,OAE5EA,EAAMmW,OAAOpI,KAAK,CAAEulC,SAAUtzC,EAAMmW,OAAOvV,OAAQzB,MAAO,UAG9D,IAAK,qBACH,IAAQi0C,EAAajrC,EAAbirC,SAER,OAAOxuB,YAAQtL,GAAO,SAAAuL,GACpBA,EAAMoK,OAAOmkB,EAASrjB,OAAOsjB,UAAUD,EAASE,UAAUC,OACxDH,EAASpzC,OACTmW,OAAOgsB,OAAOh6B,EAAO7B,MAAO,MAIlC,QACE,OAAOgT,IAIAk6B,EAAgBpN,wBAAc,CAAEnX,OAAQ,KAE9C,SAASwkB,EAAT,GAAoE,QAA9C/G,EAA8C,EAA9CA,MAAOnO,EAAuC,EAAvCA,KAAMja,EAAiC,EAAjCA,UAAWkpB,EAAsB,EAAtBA,UAAWpB,EAAW,EAAXA,QACxDsH,EAAgBC,YAAUrvB,EAAW9H,IAAEo3B,UAAUrV,IAEjDsV,GAAatV,SAAA,UAAAA,EAAMx+B,YAAN,mBAAY0G,aAAZ,sBAAoB,OAAQ,CAAC,IAEhDitC,EAAc3zC,KAAOyc,IAAEqF,KAAKgyB,GAE5B,QAA2B5uB,qBAAW0f,EAAe+O,GAArD,GAAOI,EAAP,KAAejtC,EAAf,KAEMktC,EAAe,CAAED,SAAQjtC,YAE/B,OACE,kBAAC2sC,EAAclN,SAAf,CAAwBnnC,MAAO40C,GAC7B,kBAAC,IAAD,CACEvjB,cAAe,GACfwjB,kBAAkB,EAClBnE,SAAU,SAAC15B,EAAQqC,GAAT,OACRw3B,EAAa,CACXzR,OACAuV,SACApH,QACApoB,YACAnO,SACAqC,UACAg1B,eAEJuC,SAAU3D,IAET,WACC,OACE,oCACE,kBAAC,IAAM5mB,QAAP,CAAe4E,YAAU,GACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQ9E,OAAT,KACE,kBAAC,IAAQC,MAAT,sBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAezlB,KAAK,YAAYsB,MAAM,OAAOlC,MAAO20C,EAAO/zC,KAAMX,UAAQ,KAE3E,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEW,KAAK,cACLsB,MAAM,cACNlC,MAAO20C,EAAO9yC,YACdR,WAAS,EACTpB,UAAQ,KAGZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACED,MAAOmlB,aAAF,EAAEA,EAAWvkB,KAClBwB,UAAQ,EACRF,MAAM,OACNtB,KAAK,gBAIX,kBAAC,IAAD,CAAgB+zC,OAAQA,EAAQxvB,UAAWA,QAMnD,kBAAC,IAAM2C,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcF,QAAQ,aAAtB,e,SAWHgpB,E,mFAAf,+IACE1rB,EADF,EACEA,UACAwvB,EAFF,EAEEA,OACA39B,EAHF,EAGEA,OACAq3B,EAJF,EAIEA,UACAd,EALF,EAKEA,MACAnO,EANF,EAMEA,KAEQ0V,EAA4D99B,EAA5D89B,UAAWjzC,EAAiDmV,EAAjDnV,YAAwBkzC,EAAyB/9B,EAApCmO,UAAyBivB,EAR3D,EAQsEp9B,EARtE,GAUQg+B,EAAYC,EAAiBb,GAE7Bc,EAAa,CAAC,KAAM,OAAQ,IAE5BC,EAAsBH,EAAUrmC,QAAO,SAAAkM,GAAK,OAAKq6B,EAAWtgC,SAASiG,EAAMu6B,QAE3EC,EAAah4B,IAAEo3B,UAAUE,GAS/BQ,EAAoBr2B,SAAQ,SAAAjE,GAC1B,IAAMrN,EAAO,UAAH,OAAaqN,EAAM+V,MAAnB,uBAAuC/V,EAAMs5B,SAA7C,oBAAiEt5B,EAAMha,MAAvE,oBAAwFga,EAAM1T,MAA9F,WAEVkW,IAAEi4B,IAAID,EAAY7nC,EAAMqN,EAAM7a,WAM1Bu1C,EAAWC,YAAYH,IASpBr+B,OAASu+B,EAASv+B,OAAO/P,KAAI,SAAAjH,GACpC,GAAI+K,MAAMC,QAAQhL,EAAMA,OAAQ,CAE9B,IAAMo3B,EAAW,EAAH,GAAQp3B,EAAR,CAAeA,MAAOA,EAAMA,MAAM2O,QAAO,SAAA8mC,GAAC,QAAMA,OAM9D,OAJ8B,IAA1Bre,EAASp3B,MAAMyB,SACjB21B,EAASp3B,MAAQ,CAAC,OAGbo3B,EAGT,OAAOp3B,KAGHY,EAAOk0C,EAEbS,EAAS30C,KAAOA,EAEX2sC,IACGmI,EAAS,YAAIr4B,IAAEmF,QAAQ4c,EAAKx+B,KAAK0G,MAAM,OAA9B,CAAqCwtC,IAAWryB,KAAK,QACrD2c,EAAKx+B,OAClB20C,EAASG,OAASA,SACXH,EAAS30C,MAIpB20C,EAAS1zC,YAAcA,EACvB0zC,EAASpwB,UAAY4vB,EACrBQ,EAASI,QAAUxwB,EAAUwwB,QAEvBjgB,EAAU6X,EAAQwG,IAAaC,IAE/B4B,EAAe,CAACL,GAEjBhI,GAEHqI,EAAaC,QAAQzW,EAAKx+B,MAhF9B,oBAoFU80B,EAAO,WAAP,EAAWkgB,GApFrB,QAqFIvH,EAAU,WArFd,mDAuFIA,EAAU,QAvFd,4D,sBA4FA,SAAS4G,EAAiBhkB,GACxB,IAAM6kB,EAAa,+DAEnB,OAAOt7B,OAAOu7B,QAAQ9kB,GAAKhqB,KAAI,YAAkB,aAAhBG,EAAgB,KAAXpH,EAAW,KACzCg2C,EAAUF,EAAWG,KAAK7uC,GAEhC,MAAO,CACLxG,KAAMgoC,YAAaoN,EAAQ,IAC3B7uC,MAAO6uC,EAAQ,GACfn1C,MAAOm1C,EAAQ,GACf7B,SAAU6B,EAAQ,GAClBE,MAAOF,EAAQ,GACfplB,MAAOolB,EAAQ,GACfh2C,Y,EAxLUs0C,E,+IA1CV9O,E,2FAwCO6O,E,2FAEGC,E,wFA+EDzD,E,0FA4FNoE,E,y8CCxOF,SAASkB,EAAcJ,GAqC5B,OAAOK,EApCaL,EAAQl8B,QAAO,SAACgF,EAAKhE,GACvC,IAAMw7B,EAAY,CAChBz1C,KAAMia,EAAMy7B,QACZC,MAAO17B,EAAM07B,MACbZ,QAAS96B,EAAM86B,QACfa,IAAK37B,EAAM27B,IACXC,SAAU57B,EAAM47B,SAChBpkB,QAASxX,EAAM67B,MACfC,SAAU,EACVC,YAAa/7B,EAAM+7B,YACnBC,YAAah8B,EAAMg8B,YACnBC,KAAM,CAACj8B,GACPk8B,iBAAkB,CAChBC,SAAUn8B,EAAMm8B,SAAW,EAAI,EAC/BC,SAAUp8B,EAAMo8B,SAAW,EAAI,EAC/BC,SAAUr8B,EAAMq8B,SAAW,EAAI,EAC/BC,SAAUt8B,EAAMs8B,SAAW,EAAI,EAC/BC,SAAUv8B,EAAMu8B,SAAW,EAAI,EAC/BC,UAAWx8B,EAAMw8B,UAAY,EAAI,EACjCC,UAAWz8B,EAAMy8B,UAAY,EAAI,EACjCC,WAAY18B,EAAM08B,WAAa,EAAI,EACnCC,WAAY38B,EAAM28B,WAAa,EAAI,EACnCC,gBAAiB58B,EAAM48B,gBAAkB,EAAI,EAC7CC,mBAAoB78B,EAAM68B,mBAAqB,EAAI,EACnDC,oBAAqB98B,EAAM88B,oBAAsB,EAAI,IAInDC,EAAwBp9B,OAAOxD,OAAOq/B,EAAUU,kBAAkBl9B,QAAO,SAAC7K,EAAGC,GAAJ,OAAUD,EAAIC,KAK7F,OAJAonC,EAAUS,KAAO,CAAC,EAAD,GAAMj8B,EAAN,CAAa+8B,2BAC9BvB,EAAUuB,sBAAwBA,EAElC/4B,EAAIjQ,KAAKynC,GACFx3B,IACN,KAE8BxT,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEqjB,QAAUpjB,EAAEojB,WAGzD,SAASwlB,EAAkB9B,GA8BhC,OA7BoBA,EAAQl8B,QAAO,SAACgF,EAAKhE,GACvC,IAAM1T,EAAQ0X,EAAIQ,WAAU,SAAAzO,GAAE,OAAIA,EAAG0uB,oBAAsBzkB,EAAMykB,qBAyBjE,OAvBIn4B,GAAS,EAEQ,OAAjB0T,EAAMi9B,QACoB,OAA1Bj9B,EAAMk9B,iBACc,OAApBl9B,EAAMm9B,WACgB,OAAtBn9B,EAAMo9B,cAENp5B,EAAI1X,GAAO+wC,UAAY,GAGzBr5B,EAAIjQ,KAAK,CACP0wB,kBAAmBzkB,EAAMykB,kBACzB6Y,IAAKt9B,EAAMs9B,IACXC,SAAUv9B,EAAMu9B,SAChBF,SACmB,OAAjBr9B,EAAMi9B,QACoB,OAA1Bj9B,EAAMk9B,iBACc,OAApBl9B,EAAMm9B,WACgB,OAAtBn9B,EAAMo9B,YACF,EACA,IAGHp5B,IACN,IAKL,SAASu3B,EAAa/nC,GACpB,OAAOmM,OAAOxD,OAAO3I,EAAQwL,QAAO,SAACgF,EAAKhE,GACxC,GAAKgE,EAAIhE,EAAMja,MAER,CACL,IAAMy3C,EAAU,YAAIx5B,EAAIhE,EAAMja,MAAMk2C,MAApB,EAA6Bj8B,EAAMi8B,OAChDzrC,MAAK,SAACitC,EAAIC,GAAL,OAAa/0C,IAAO80C,EAAG7B,UAAU+B,KAAKh1C,IAAO+0C,EAAG9B,cAExD53B,EAAIhE,EAAMja,MAAQia,EAClBgE,EAAIhE,EAAMja,MAAMk2C,KAAOuB,EACvBx5B,EAAIhE,EAAMja,MAAM61C,SAAW4B,EAAQ,GAAG5B,cAPtC53B,EAAIhE,EAAMja,MAAQia,EASpB,OAAOgE,IACN,M,6FAtFWs3B,E,sFAwCA0B,E,0FAiCPzB,E,4uGCtEIqC,gBAAb,sRACE,WACE,OAAO,kEAAKpyC,UAAWqoB,KAAKvuB,MAAMkG,UAA3B,sBAAuCqoB,KAAKvuB,MAAMiG,YAF7D,4IAAqCy2B,6CAAMC,e,SAM5B2b,gBAAA,wC,2BAEfA,gBAAgBhyC,UAAY,CAC1BJ,UAAWimC,+CACXlmC,SAAUkmC,kDAAoB,CAACA,+CAAkBA,iDAAmBoM,YAGtED,gBAAgB9gB,aAAe,CAC7BtxB,UAAW,oB,qIAdAoyC,gB,ooBCHN,SAASE,EAAY3pC,EAAGC,GAC7B,IAAKzL,IAAOo1C,SAAS5pC,KAAOxL,IAAOo1C,SAAS3pC,GAAI,OAAO,EAEvD,IAAM4pC,EAAQ7pC,EAAE8pC,OACVC,EAAS/pC,EAAE2G,QAEXqjC,EAAQ/pC,EAAE6pC,OACVG,EAAShqC,EAAE0G,QAEXujC,EAAaL,IAAUG,EAG7B,OAAIE,GAFgBH,IAAWE,EAEOjqC,EAAE/K,OAASgL,EAAEhL,OAC/Ci1C,EAAmBH,EAASE,EACzBJ,EAAQG,G,4FAdDL,E,mdCCHp3B,EAAeC,aAAW,iBAAO,CAC5CC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPYN,CASxBO,M,4FATSR,E,qlDCIA43B,EAAW,SAAC,GAAgD,MAA9C9yC,EAA8C,EAA9CA,UAAW+yC,EAAmC,EAAnCA,UAAWhzC,EAAwB,EAAxBA,SAAUyhB,EAAc,EAAdA,QACnDwxB,EAAUnM,iBAAO,MACvB,IAAsC9sC,oBAAS,GAA/C,GAAOk5C,EAAP,KAAoBC,EAApB,KACA,IAAsCn5C,oBAAS,GAA/C,GAAOo5C,EAAP,KAAoBC,EAApB,KACA,IAAkCr5C,oBAAS,GAA3C,GAAOs5C,EAAP,KAAkBC,EAAlB,KACA,IAAkCv5C,oBAAS,GAA3C,GAAOw5C,EAAP,KAAkBC,EAAlB,KAEMC,EAAMV,GAAa,MAEnBW,EAAW12B,uBACf,SAAAuI,GACMA,EAAMoL,cAAcC,UACjB2iB,GACHC,GAAa,GAEND,GACTC,GAAa,GAGXjuB,EAAMoL,cAAcgjB,WACjBN,GACHC,GAAa,GAEND,GACTC,GAAa,KAGjB,CAACL,EAAaE,EAAaE,EAAWE,IAuBxC,OApBA14C,qBAAU,WACR,GAAIm4C,EAAQY,QAAS,CACnB,IAAMvjC,EAAU2iC,EAAQY,QAClBC,EAAM,CACVvyB,MAAOjR,EAAQyjC,YACfvyB,OAAQlR,EAAQ0jC,aAChBC,aAAc3jC,EAAQ2jC,aACtBC,YAAa5jC,EAAQ4jC,aAGnBJ,EAAIvyB,MAAQuyB,EAAII,cAAgBhB,GAClCC,GAAe,GAGbW,EAAItyB,OAASsyB,EAAIG,eAAiBb,GACpCC,GAAe,MAGlB,CAACrzC,IAGF,yBACEC,UAAWC,IACT,sBADmB,SAIhBuhB,EAAUA,GAJM,kBAKjByxB,GALiB,kBAMjBE,GANiB,gBAOjBE,GAPiB,gBAQjBE,GARiB,GAUnBvzC,IAGF,kBAACyzC,EAAD,CAAKl6C,IAAKy5C,EAAShzC,UAAWC,IAAW,qBAAsByzC,SAAUA,GACtE3zC,K,EAlEI+yC,E,+OAwEbA,EAAS1yC,UAAY,CACnBL,SAAUO,OACVN,UAAWmmB,SACX3E,QAASnhB,gBAAM,CAAC,WAGlByyC,EAASxhB,aAAe,I,4FA9EXwhB,E,2hDCSAzF,EAAc,SAAC,GAUtB,IATJloB,EASI,EATJA,OACAR,EAQI,EARJA,KACAxD,EAOI,EAPJA,MACA5O,EAMI,EANJA,KACA2hC,EAKI,EALJA,UACAhH,EAII,EAJJA,QACMiH,EAGF,EAHJlH,KACAjG,EAEI,EAFJA,UAEI,IADJoN,mBACI,SACEC,EAAUrT,qBAAW2F,KACrBsG,EAAOoH,EAAQpH,MAAQkH,EACvBnhC,EAAUqhC,EAAQrhC,SAAW,CAAEuR,MAAO2oB,GAC5C,IAAwBnzC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAUMszB,EAAe,SAAAvG,GACnB,IAAIwG,GAAU,EAWd,OAVkBpgC,OAAOC,KAAK25B,GAEpBntC,KAAI,SAAApG,GAKZ,OAJIuzC,EAAOvzC,KACT+5C,GAAU,GAGL,QAGFA,GAGT,OACE,4BAAQv0C,UAAU,eAAlB,sBACGmlB,GAAU,yBAAKnlB,UAAU,YAAf,sBAA4BmlB,GAEtCR,GACC,yBAAK3kB,UAAU,YAAf,sBACE,kBAAC,IAAD,CAAQA,UAAU,iBAAiB2lB,IAAI,cAAvC,sBACGhB,IAIP,yBAAK3kB,UAAU,mBAAmBtE,GAAIuxC,EAAK,mBAA3C,sBACE,wBAAIjtC,UAAU,cAAd,sBAA6BmhB,GAC5B5O,GACC,uBAAGvS,UAAU,aAAatE,GAAIuxC,EAAK,oBAAnC,sBACG16B,IAIN2hC,GAAalhC,EAAQuR,OACpB,oCACE,yBAAKvkB,UAAU,0BAAf,sBACE,4BAAQA,UAAU,qBAAqBygB,QA7CnC,WAAM,QACd2zB,GAAgBpN,SAAA,UAAAA,EAAW4M,eAAX,SAAoBvvB,OAASiwB,EAAatN,SAAD,UAACA,EAAW4M,eAAZ,aAAC,EAAoBt5C,SAChF0mB,GAAQ,GAERhO,EAAQuR,SAyCF,sBACE,kBAAC,IAAD,CAAWrkB,SAAS,QAApB,yBAIJ,kBAAC,IAAD,CAAO6gB,KAAMA,EAAb,sBACE,kBAAC,IAAD,CACEzE,MAAO,CACLmI,SAAU,QACVC,UAAW,QACX9I,SAAU,QAJd,sBAOE,kBAAC,IAAMkE,OAAP,KACE,yBAAK9f,UAAU,eAAf,sBACE,yBAAKA,UAAU,YAAf,sBACE,kBAAC,IAAD,CAAQA,UAAU,iBAAiB2lB,IAAI,cAAvC,sBACE,kBAAC,IAAD,0BAGJ,yBAAK3lB,UAAU,mBAAf,sBACE,wBAAIA,UAAU,cAAd,kCAEF,yBAAKA,UAAU,0BAAf,sBACE,4BACEA,UAAU,qBACVygB,QAAS,WACPO,GAAQ,IAHZ,sBAME,kBAAC,IAAD,CAAW9gB,SAAS,QAApB,2BAKR,kBAAC,IAAM8f,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,iDAGJ,kBAAC,IAAMpD,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACErE,QAAS,WACPO,GAAQ,IAFZ,6BAQF,kBAAC,IAAMS,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPO,GAAQ,GACRhO,EAAQuR,SAHZ,oCAmClB,SAASM,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,QARf,sBAWGllB,G,EAhKMstC,E,yDAkIbA,EAAYjtC,UAAY,CACtB+gB,MAAO7gB,OACPiS,KAAMjS,OACN4sC,QAAS9mB,OACT8tB,UAAWzzC,OACX0kB,OAAQ7kB,OACRqkB,KAAMrkB,OACN2sC,KAAM/mB,gBAAM,CACV,kBAAmBC,SACnB,mBAAoBA,YAIxBknB,EAAY/b,aAAe,CACzB4iB,WAAW,I,6FAhJA7G,E,gGAmJJxoB,E,knCC1JI2vB,EAAW,SAAC,GAAiC,IAA/B34C,EAA+B,EAA/BA,MAAOE,EAAwB,EAAxBA,SAAa04C,EAAW,OACxD,OACE,kBAAC,IAAD,CACE14C,SAAUA,EACViE,UAAU,iBACV00C,QACE,kBAAC,IAAD,GACE10C,UAAU,WACVqb,MAAM,UACNsJ,KAAM,kBAAC,IAAD,wBACNgwB,YAAa,kBAAC,IAAD,yBACTF,EALN,yBAQF54C,MAAOA,EAZT,wBAiBJ24C,EAASp0C,UAAY,CACnBvE,MAAOyE,OACPvE,SAAU0E,S,4FArBC+zC,E,6lCCTE,SAACI,GAA2B,IAArBC,EAAqB,uDAAV,IAC3BC,GAAU,EAD2B,SAG1BC,IAH0B,gFAGzC,gGACOD,EADP,0EAMUF,IANV,OAOIE,GAAU,EAPd,gDASI1wC,YAAW,kBAAM2wC,MAAWF,GAThC,0DAHyC,sBAgBzC,MAAO,CACLG,MADK,WAECF,IAGJA,GAAU,EACVC,MAEFE,KARK,WASHH,GAAU,KAzBD,O,+wDCgBFI,EAAa,SAAC,GAOrB,QANJ9sC,cAMI,MANK,GAML,EALJnG,EAKI,EALJA,UACAglC,EAII,EAJJA,iBACAkO,EAGI,EAHJA,QACAjO,EAEI,EAFJA,MACAN,EACI,EADJA,QAEA,IAAoC7sC,mBAAS,IAA7C,GAAOq7C,EAAP,KAAmBC,EAAnB,KACA,IAAgDt7C,oBAAUo7C,GAA1D,GAAOG,EAAP,KAAyBC,EAAzB,KACA,IAA8Bx7C,oBAAS,GAAvC,GAAOy7C,EAAP,KAAgBC,EAAhB,KACMC,EAAwBC,EAAwB,CACpDH,UACAF,mBACAD,gBACAnO,QACA9+B,WAGIwtC,EAAmB3zC,EAAUqG,QAAO,SAAAiW,GAAK,QAC7C,OAAIA,EAAEse,cAIFte,SAAJ,UAAIA,EAAGue,wBAAP,iBAAI,EAAqBvuB,gBAAzB,QAAI,SAAgC,gBAOhCsnC,EAAiBD,EAAiBpiC,QAAO,SAAC5S,EAAK2d,GAGnD,OAFA3d,EAAI2d,EAAEhkB,MAAQgkB,EAAEu3B,aAETl1C,IACN,IAgBH,IAdyB4T,EAcnBwW,EAbG,CACLzwB,MAFqBia,EAcapM,GAZtB7N,MAAQ,GACpBiB,YAAagZ,EAAMhZ,aAAe,GAClCu6C,KAAMvhC,EAAMhM,SAAW,GACvBwtC,KAAMxhC,EAAMwhC,MAAQH,EAAerhC,EAAMtP,UAAY,OACrDmkB,KAAM7U,EAAM6U,MAAQ,GACpB4sB,gBAAiBzhC,EAAM0hC,UAAY,GACnCC,wBAAyB,GACzBC,QAAS5hC,EAAM0hC,UAAY,GAC3BhxC,SAAUsP,EAAMtP,UAAY,OAuBhC,OACE,kBAAC,IAAD,CAAQvL,MAAOy7C,aAAF,EAAEA,EAAYtxC,QACzB,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,KAAc6tC,EAAQ,YAAc,UAApC,eAGJ,kBAAC,IAAMzlB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAAS41B,EAAsBjB,EAAWrhC,SAAUkzB,IAA5D,WAMN,kBAAC,IAAOlG,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,kBAAwB6tC,EAAQ,aAAe,SAA/C,aACA,kBAAC,IAAOhmC,SAAR,CAAiBP,SAAUy0C,EAAWz0C,aAG1C,kBAAC,IAAM8gB,OAAP,OAEF,kBAAC,IAAOsf,KAAR,CAAapnC,WAAOuB,GAClB,kBAAC,IAAD,CACE8vB,cAAeA,EACfqf,SAAUqL,EACVj8C,SA9CiB,SAAAkX,GACvB,IAAM6qB,EAAS,GAaf,OAZI8Z,IAAqBE,GACnB7kC,EAAOslC,kBAAoBtlC,EAAOwlC,0BACpC3a,EAAO2a,wBAA0B,0BAIjCxlC,EAAOqlC,OACJ,QAAQ73B,KAAKxN,EAAOqlC,QACvBxa,EAAOwa,KAAO,oCAIXxa,GAiCD8a,gBAAc,EAEdC,iBAAiB,EACjBhM,SAAU3D,IAET,WACC,OACE,oCACE,kBAAC,IAAM5mB,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,KACE,kBAAC,IAAQC,MAAT,kBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMxlB,KAAK,OAAOX,UAAQ,EAACiC,MAAM,OAAOlC,MAAOqxB,EAAczwB,QAE/D,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,KAAK,WACLX,UAAQ,EACRiC,MAAM,WACNE,UAAWmrC,EACX1tC,QAASo8C,EAAiBh1C,KAAI,SAAA2d,GAAC,MAAK,CAClC5kB,MAAO4kB,EAAEhkB,KACTsB,MAAO0iB,EAAEhkB,SAEXZ,MAAOqxB,EAAc9lB,SACrBrL,cAAe,SAACF,EAAO68C,GACrBA,EAAOC,cAAc,OAAQZ,EAAel8C,UAMtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEY,KAAK,cACLS,WAAS,EACTpB,UAAQ,EACRiC,MAAM,cACNlC,MAAOqxB,EAAcxvB,iBAK7B,kBAAC,IAAD,KACE,kBAAC,IAAQskB,OAAT,KACE,kBAAC,IAAQC,MAAT,0BAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQzD,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CACE/mB,KAAK,OACLsB,MAAM,OACNjC,UAAQ,EACRD,MAAOqxB,EAAc+qB,KACrBh6C,SAAUo5C,KAGd,kBAAC,IAAD,CAAQ74B,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CAAM/mB,KAAK,OAAOX,UAAQ,EAACiC,MAAM,OAAOlC,MAAOqxB,EAAcgrB,SAGjE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEz7C,KAAK,cACLsB,MAAM,OACNjC,UAAQ,EACRD,MAAOqxB,EAAc3B,QAGxBisB,GAAoB,kBAACoB,EAAD,CAAeC,SAAO,EAACnB,QAASA,QAM7D,kBAAC,IAAM/zB,OAAP,KACG0zB,GACC,kBAAC,IAAM1zB,OAAOqD,KAAd,MACIwwB,GACA,kBAAC,IAAD,CAAQ70B,QAAS,kBAAM80B,GAAoB,KAA3C,4BAIDD,GACC,kBAAC,IAAD,CACEp4B,QAASs4B,EACToB,QAAS,kBAAMnB,GAAW,SAAAhiC,GAAI,OAAKA,MACnC5X,MAAM,kBAKZs5C,GACA,kBAAC,IAAM1zB,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACE5H,QAASs4B,EACToB,QAAS,kBAAMnB,GAAW,SAAAhiC,GAAI,OAAKA,MACnC5X,MAAM,iBAIZ,kBAAC,IAAM4lB,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcuC,cAAY,GAA1B,mB,EAjNPixB,E,kJA6Nb,I,IAAMwB,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASnB,EAAZ,EAAYA,QAAZ,OACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ77C,MAAOg9C,GAAWnB,GACxB,kBAAC,IAAOzU,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,CAAMqB,WAAS,EAACT,KAAK,UAAUX,UAAQ,EAACiC,MAAM,aAEhD,kBAAC,IAAOklC,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUY,KAAK,kBAAkBsB,MAAM,WAAWjC,UAAQ,KAE5D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUW,KAAK,0BAA0BsB,MAAM,mBAAmBjC,UAAQ,SAOpF,SAAS+7C,EAAT,GAA8F,IAA3DH,EAA2D,EAA3DA,QAASF,EAAkD,EAAlDA,iBAAkBD,EAAgC,EAAhCA,cAAenO,EAAiB,EAAjBA,MAAO9+B,EAAU,EAAVA,OAClF,OAAO,SAA+BuI,GACpC,IAAMkmC,EAAe,EAAH,CAChB3xC,SAAUyL,EAAOzL,SACjBmkB,KAAM1Y,EAAOmmC,YACbt7C,YAAamV,EAAOnV,YACpBgN,QAASmI,EAAOolC,MACZT,GAAoB,CACtBY,SAAUV,EAAU7kC,EAAOylC,QAAUzlC,EAAOslC,iBAN9B,CAQhBD,KAAM/d,OAAO7tB,SAASuG,EAAOqlC,KAAM,MAGjC9O,EACF2P,EAAat8C,KAAOoW,EAAOpW,KAE3Bs8C,EAAaxH,OAAS1+B,EAAOpW,KAG3B2sC,EACFjQ,YAAY4f,GAAczhB,MAAK,SAAArzB,GAC7BszC,EAAc,EAAD,GACRtzC,OAIPm1B,YAAa9uB,EAAO7N,KAAMs8C,GAAczhB,MAAK,SAAArzB,GAC3CszC,EAAc,EAAD,GACRtzC,QAOb,SAASs0C,EAAsBtiC,EAAUkzB,GACvC,OAAO,WAKLA,M,6FAxRSiO,E,iFA6NPwB,E,oFAkBGf,E,8FAmCAU,E,4xBC/RF,SAAe/O,IAAtB,+B,iDAAO,0HAA8BlrC,EAA9B,+BAAqC,GAArC,kBAEoBqF,IAAWC,IAAX,UAClBvI,IAAUwI,KAAKC,UAAUm1C,WADP,OACmB36C,EAAO,IAAH,OAAOA,GAAS,KAH3D,uBAEK4F,EAFL,EAEKA,KAFL,kBAMI,CAAE8B,OAAQ9B,EAAK8B,OAAQ2jC,WAAYzlC,EAAKA,KAAKylC,aANjD,yDAQI,CAAE3jC,OAAQ,OAAQ2jC,WAAY,KARlC,0D,mHAAeH,E,msDCcT0P,EAAe,SAAC,GAQvB,QAPJz5B,eAOI,MAPM,GAON,MANJtb,iBAMI,MANQ,GAMR,EALJgd,EAKI,EALJA,MACAgoB,EAII,EAJJA,iBACAkO,EAGI,EAHJA,QACAjO,EAEI,EAFJA,MACAN,EACI,EADJA,QAEA,IAAgD7sC,oBAAUo7C,GAA1D,GAAOG,EAAP,KAAyBC,EAAzB,KACA,IAAoCx7C,mBAAS,IAA7C,GAAOq7C,EAAP,KAAmBC,EAAnB,KACMO,EAAmB3zC,EAAUqG,QAAO,SAAAiW,GACxC,IAAMlV,EAAUkV,aAAH,EAAGA,EAAGue,iBAEnB,OAAOzzB,GAAWA,EAAQkF,SAAS,eAErC,IAA8BxU,oBAAS,GAAvC,GAAOy7C,EAAP,KAAgBC,EAAhB,KAEMC,EAAwBC,EAAwB,CACpD1zC,UAAW2zC,EACX32B,QACAu2B,UACAtO,QACAmO,gBACA93B,YAGIs4B,EAAiBD,EAAiBpiC,QAAO,SAAC5S,EAAK2d,GAGnD,OAFA3d,EAAI2d,EAAEhkB,MAAQgkB,EAAEu3B,aAETl1C,IACN,IAkBH,IAAMoqB,EAhBN,WAAsC,IAAZxW,EAAY,uDAAJ,GAChC,MAAO,CACLja,KAAMyc,IAAEtV,IAAI8S,EAAO,OAAQ,IAC3BtP,SAAU8R,IAAEtV,IAAI8S,EAAO,WAAY,IACnChZ,YAAawb,IAAEtV,IAAI8S,EAAO,cAAe,IAEzCuhC,KAAM/+B,IAAEtV,IAAI8S,EAAO,UAAW,IAE9BwhC,KAAMh/B,IAAEtV,IAAI8S,EAAO,OAAQqhC,EAAe7+B,IAAEtV,IAAI8S,EAAO,cAEvDlL,SAAU0N,IAAEtV,IAAI8S,EAAO,mBAAoB,IAC3C6U,KAAMrS,IAAEtV,IAAI8S,EAAO,OAAQ,IAC3BwK,KAAMhI,IAAEtV,IAAI8S,EAAO,eAAgB,KAIjByiC,CAAiB15B,GAoBvC,OACE,kBAAC,IAAD,CAAQ5jB,MAAOy7C,aAAF,EAAEA,EAAYtxC,QACzB,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,KAAc6tC,EAAQ,YAAc,UAApC,eAGJ,kBAAC,IAAMzlB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAAS41B,EAAsBjB,EAAWrhC,SAAUkzB,IAA5D,WAMN,kBAAC,IAAOlG,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,kBAAwB6tC,EAAQ,aAAe,SAA/C,aACA,kBAAC,IAAOhmC,SAAR,CAAiBP,SAAUy0C,EAAWz0C,aAG1C,kBAAC,IAAM8gB,OAAP,OAEF,kBAAC,IAAOsf,KAAR,CAAapnC,WAAOuB,GAClB,kBAAC,IAAD,CACE8vB,cAAeA,EACfqf,SAAUqL,EACVj8C,SA/CiB,SAAAkX,GACvB,IAAM6qB,EAAS,GAcf,OAZI8Z,IAAqBE,GACnB7kC,EAAOqZ,WAAarZ,EAAOumC,mBAC7B1b,EAAO0b,iBAAmB,0BAI1BvmC,EAAOqlC,OACJ,QAAQ73B,KAAKxN,EAAOqlC,QACvBxa,EAAOwa,KAAO,oCAIXxa,GAiCD8a,gBAAc,EAEdC,iBAAiB,EACjBhM,SAAU3D,IAET,YAAgB,MAAbj2B,EAAa,EAAbA,OACIwmC,EACJxmC,EAAOzL,UAAYjD,EAAU3G,MAAK,SAAA4J,GAAQ,OAAIA,EAAS3K,OAASoW,EAAOzL,YACnEkyC,IAAaD,YAAkBE,eAC/BC,EAAeH,SAAH,UAAGA,EAAkBra,wBAArB,aAAG,EAAoCvuB,SAAS,YAC5DgpC,EAAsC,YAA3BJ,aAAA,EAAAA,EAAkB58C,MAEnC,OACE,oCACE,kBAAC,IAAMylB,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,KACE,kBAAC,IAAQC,MAAT,kBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKw3B,QAAM,GACT,kBAAC,IAAD,CAAMj9C,KAAK,OAAOX,UAAQ,EAACiC,MAAM,OAAOlC,MAAOqxB,EAAczwB,QAE/D,kBAAC,IAAD,CAAKi9C,QAAM,GACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEj9C,KAAK,WACLX,UAAQ,EACRiC,MAAM,WACNhC,cAAe,SAACF,EAAO68C,GACrBA,EAAOC,cAAc,OAAQZ,EAAel8C,KAE9CH,QAASo8C,EAAiBh1C,KAAI,SAAA2d,GAAC,MAAK,CAClC5kB,MAAO4kB,EAAEhkB,KACTsB,MAAO0iB,EAAEhkB,SAEXZ,MAAOqxB,EAAc9lB,cAK7B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACElK,WAAS,EACTT,KAAK,cACLsB,MAAM,cACNjC,UAAQ,EACRD,MAAOqxB,EAAcxvB,kBAM/B,kBAAC,IAAD,KACE,kBAAC,IAAQskB,OAAT,KACE,kBAAC,IAAQC,MAAT,0BAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ1D,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CAAM/mB,KAAK,OAAOX,UAAQ,EAACiC,MAAM,OAAOlC,MAAOqxB,EAAc+qB,QAE/D,kBAAC,IAAD,CAAQz5B,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CAAM/mB,KAAK,OAAOX,UAAQ,EAACiC,MAAM,OAAOlC,MAAOqxB,EAAcgrB,SAGjE,kBAAC,IAAD,KACGsB,GACC,kBAAC,IAAD,CAAQh7B,MAAO,CAAEmI,SAAU,MAAOnD,MAAO,OAAQ1F,SAAU,SACzD,kBAAC,IAAD,CACErhB,KAAK,WACLX,UAAQ,EACRiC,MAAM,WACNlC,MAAOqxB,EAAc1hB,YAI1BiuC,GACC,kBAAC,IAAD,CAAQj7B,MAAO,CAAEV,SAAU,QACzB,kBAAC,IAAD,CACErhB,KAAK,OACLsB,MAAM,OACNjC,UAAQ,EACRJ,QAASylB,EAAMre,KAAI,SAAAoe,GAAI,MAAK,CAC1BrlB,MAAOqlB,EAAKnjB,MACZA,MAAOmjB,EAAKnjB,UAEdlC,MAAOqxB,EAAchM,SAK7B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEzkB,KAAK,OACLsB,MAAM,OACNjC,UAAQ,EACRD,MAAOqxB,EAAc3B,MAAQ,MAGhCisB,GACC,kBAACoB,EAAD,CAAeC,QAASS,EAAU5B,QAASA,SAQvD,kBAAC,IAAM/zB,OAAP,KACG0zB,GACC,kBAAC,IAAM1zB,OAAOqD,KAAd,MACIwwB,GACA,kBAAC,IAAD,CAAQ70B,QAAS,kBAAM80B,GAAoB,KAA3C,4BAIDD,GAAoB8B,GACnB,kBAAC,IAAD,CACEl6B,QAASs4B,EACToB,QAAS,kBAAMnB,GAAW,SAAAhiC,GAAI,OAAKA,MACnC5X,MAAM,kBAKZs5C,GAAWiC,GACX,kBAAC,IAAM31B,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACE5H,QAASs4B,EACToB,QAAS,kBAAMnB,GAAW,SAAAhiC,GAAI,OAAKA,MACnC5X,MAAM,iBAIZ,kBAAC,IAAM4lB,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcuC,cAAY,GAA1B,mB,EA/OP+yB,E,kJA2Pb,I,IAAMN,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASnB,EAAZ,EAAYA,QAAZ,OACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ77C,MAAOg9C,GAAWnB,GACxB,kBAAC,IAAOzU,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,CAAMqB,WAAS,EAACT,KAAK,UAAUsB,MAAM,UAAUjC,UAAQ,KAEzD,kBAAC,IAAOmnC,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,CAAK69C,QAAM,GACT,kBAAC,IAAD,CAAUj9C,KAAK,WAAWX,UAAQ,EAACiC,MAAM,cAE3C,kBAAC,IAAD,CAAK27C,QAAM,GACT,kBAAC,IAAD,CAAUj9C,KAAK,mBAAmBX,UAAQ,EAACiC,MAAM,0BAO3D,SAAS85C,EAAT,GAAwF,IAArD1zC,EAAqD,EAArDA,UAAWuzC,EAA0C,EAA1CA,QAASH,EAAiC,EAAjCA,cAAenO,EAAkB,EAAlBA,MAAO3pB,EAAW,EAAXA,QAC3E,OAAO,SAA+B5M,GAAQ,MACtCwmC,EAAmBl1C,EAAU3G,MAAK,SAAA4J,GAAQ,OAAIA,EAAS3K,OAASoW,EAAOzL,YACvEkyC,IAAaD,YAAkBE,eAC/BC,EAAeH,SAAH,UAAGA,EAAkBra,wBAArB,aAAG,EAAoCvuB,SAAS,YAC5DgpC,EAAsC,YAA3BJ,aAAA,EAAAA,EAAkB58C,MAE7Bs8C,EAAe,CACnBxtB,KAAM1Y,EAAO0Y,KACb7tB,YAAamV,EAAOnV,YACpB0J,SAAUyL,EAAOzL,SACjBsD,QAASmI,EAAOolC,KAChBG,SAAUkB,GAAY5B,EAAU7kC,EAAOylC,QAAUzlC,EAAOqZ,SACxDgsB,KAAM/d,OAAO7tB,SAASuG,EAAOqlC,KAAM,IACnC3sC,QAAS,EAAF,GACDiuC,GAAgB,CAAEhuC,SAAUqH,EAAOrH,UACnCiuC,GAAY,CAAEv4B,KAAMrO,EAAOqO,QAI/BkoB,EACF2P,EAAat8C,KAAOoW,EAAOpW,KAE3Bs8C,EAAaxH,OAAS1+B,EAAOpW,KAG3B2sC,EACFjQ,YAAY4f,GAAczhB,MAAK,SAAArzB,GAC7BszC,EAAc,EAAD,GACRtzC,OAIPm1B,YAAa3Z,EAAQhjB,KAAMs8C,GAAczhB,MAAK,SAAArzB,GAC5CszC,EAAc,EAAD,GACRtzC,QAOb,SAASs0C,EAAsBtiC,EAAU0jC,GACvC,OAAO,WAGLA,M,6FA3TST,E,qFA2PPN,E,sFAkBGf,E,gGA0CAU,E,4kBCtUIjO,EAAY,e,EAAA,G,EAAA,yBAAG,WAAOr2B,GAAP,uHAEDtQ,IAAWC,IAAIqQ,GAFd,OAElBhQ,EAFkB,OAKlB21C,EAAW,CAAC31C,EAASC,MACrB21C,EAAO,IAAIC,KAAKF,EAAU,CAAEt7C,KAAM,6BAClCy7C,GAAW7X,OAAO8X,IAAM9X,OAAO8X,IAAM9X,OAAO+X,WAAWC,gBAAgBL,IACvEM,EAAWxiB,SAASC,cAAc,MAC/BpZ,MAAMgE,QAAU,OACzB23B,EAASC,KAAOL,EAChBI,EAASE,aAAa,WAPL,oBASjB1iB,SAASzN,KAAK2N,YAAYsiB,GAC1BA,EAASG,QAET3iB,SAASzN,KAAKiO,YAAYgiB,GAC1BjY,OAAO8X,IAAIO,gBAAgBR,GAjBH,kDAmBxBrlC,QAAQgS,IAAI,qBAAZ,MAnBwB,yD,+KAAH,uD,4FAAZ4jB,E,uiDCgBAkQ,EAA0BnpB,aACrC,SAAArb,GACE,MAAO,CACLykC,cAAe1vB,YAAsB/U,OAGzC,SAAAzS,GACE,MAAO,CACLm3C,QAAS,SAAAx2C,GACPX,EAASo3C,IAAcD,QAAQE,gBAAgB12C,QAThBmtB,CAarCwpB,GAEF,SAASA,EAAT,GAAkF,IAAxD53B,EAAwD,EAAxDA,KAAM/N,EAAkD,EAAlDA,QAAS7P,EAAyC,EAAzCA,KAAM2B,EAAmC,EAAnCA,QAASyzC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,QACrE,IAA4Bz+C,mBAAS,WAArC,GAAO+J,EAAP,KAAekkC,EAAf,KAmBM4Q,EAAa57B,uBAAY,WAC7B0rB,YAAiBvlC,GACdiyB,MAAK,WACJ4S,EAAU,WACNljC,GACF0zC,EAvBO,WACb,IAAK1zC,IAAYqP,OAAOC,KAAKtP,GAAS1J,OAAQ,CAC5C,IAAMy9C,EAAY17C,IAAO27C,KAAKP,EAAc72C,IAAI,cAC1Cq3C,EAAU57C,IAAO27C,KAAKP,EAAc72C,IAAI,YACxCszC,EAAQ73C,IAAO07C,EAAUz7C,OAAO,eAChC47C,EAAM77C,IAAO47C,EAAQ37C,OAAO,eAC5BiS,EAAOjF,SAASjN,IAAO03C,SAASmE,EAAI7G,KAAK6C,IAAQiE,SAAU,IAOjE,MANgB,CACdC,YAAaL,EAAUz7C,OAAO,cAC9B+7C,OAAQ9pC,EAAO,EACfvN,UAAW,YAKf,OAAOgD,EAQOs0C,OAGX5Q,OAAM,WACLR,EAAU,aAEb7kC,GACH,OACE,oCACE,kBAAC,IAAD,CAAO4d,KAAMA,EAAM/N,QAASA,EAA5B,sBACE,kBAAC,IAAD,CACEsJ,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CACEJ,MAAM,SACNwD,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAGk5C,KAAT,wBAJN,uBAQA,kBAAC,IAAD,CAAQ1/C,MAAOmK,EAAf,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,yBAAK4D,UAAU,YAAf,sBACE,uIAIN,kBAAC,IAAMyhB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,WACV4Q,KALJ,mCAaN,kBAAC,IAAO7X,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,UAAb,sBACE,wBAAI4D,UAAU,YAAd,2DAEF,kBAAC,IAAMyhB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPzN,EAAQuR,QACRyjB,EAAU,YAHd,iCAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,OAAb,sBACE,wBAAI4D,UAAU,YAAd,2DAEF,kBAAC,IAAMyhB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPzN,EAAQuR,QACRyjB,EAAU,YAHd,kCAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,6C,EA9GT+zB,E,mKAfIL,E,4FAeJK,E,y8CC5BIW,EAAW,SAAC,GAAmB,IAAjB51C,EAAiB,EAAjBA,WACzB,IAAwB3J,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLg1B,EAAgB,IAChBvR,EAAU,IACVhnB,GAAQ,KAGZ,IAAwCjnB,mBAAS,IAAjD,GAAOy/C,EAAP,KAAqBD,EAArB,KACA,IAA4Bx/C,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAA4CjuC,mBAAS,IAArD,GAAO0/C,EAAP,KAAuBC,EAAvB,KACA,IAAgD3/C,oBAAS,GAAzD,GAAO4/C,EAAP,KAAyBC,EAAzB,KAEMC,EAAiB,SAAAj+C,GACrB89C,EAAkB99C,GAClBg+C,GAAqBl2C,GACrBsd,GAAQ,IAGJ84B,EAAWp2C,EAAa,WAAa,eACrCq2C,EAAqC,eAAvBr2C,aAAA,EAAAA,EAAYC,UAA0BD,aAAtC,EAAsCA,EAAYs2C,UAEtE,OACE,oCACGD,GACC,kBAAC,IAAD,CAAQz9B,MAAO,CAAEmI,SAAU,SAAWhE,QAAS,kBAAMo5B,EAAe,mBAApE,iBAIF,kBAAC,IAAD,CACEp5B,QAAS,WACPo5B,EAAe,cAGhBC,GAEH,kBAAC,IAAD,CACE/4B,KAAMA,EACN/N,QAASsR,EACT5gB,WAAYA,EACZq2C,YAAaA,EACbN,eAAgBA,EAChBE,iBAAkBA,EAClB71C,OAAQA,EACRkkC,UAAWA,EACXwR,aAAcA,EACdD,gBAAiBA,M,EAlDZD,E,+TAAAA,E,w2DCeAW,EAAwB9qB,YAAQ,KAAM,CACjDE,QAASjd,KAD0B+c,CAElC+qB,GAEH,SAASA,EAAT,GAA8C,MAAtBj+B,EAAsB,EAAtBA,UAAWoT,EAAW,EAAXA,QACjC,IAAwBt1B,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,GACRgnB,EAAU,MAGd,IAA4BjuC,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACMmS,EAA6C,YAAhCl+B,SAAA,UAAAA,EAAWxhB,YAAX,eAAiBgkB,YAC9BmoB,EAAUC,mBAEhB,OACE,oCACE,kBAAC,IAAD,CACE9qC,SAAUo+C,EACVC,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,WACPO,GAAQ,KAJZ,iBASA,kBAAC,IAAD,CAAOD,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVgX,UAAW,UAGb,kBAAC,IAAD,CACEta,MAAM,gBACNwD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGJqiB,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,2CAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,WAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,iEAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,YAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,IACjB,kBAAC,IAAD,CACEqxB,cAAe,CACbzwB,KAAM,GACN0hB,UAAWA,EAAYA,EAAU1hB,KAAO,GACxCiB,YAAa,IAEf6uC,SAAU,SAAA15B,GACR0pC,EAAgBrS,EAAW3Y,EAAS1e,IAEtC45B,SAAU3D,IAET,YAAgB,IAAbj2B,EAAa,EAAbA,OACF,OACE,oCACE,kBAAC,IAAMqP,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMvlB,KAAK,OAAOsB,MAAM,OAAOlC,MAAOgX,EAAOpW,KAAMX,UAAQ,KAE7D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQqoC,GAAI,IACV,kBAAC,IAAD,CACE1nC,KAAK,YACLsB,MAAM,mBACNlC,MAAOgX,EAAOsL,cAIpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1hB,KAAK,cACLsB,MAAM,cACNlC,MAAOgX,EAAOnV,YACdR,WAAS,EACTpB,UAAQ,QAMlB,kBAAC,IAAM6nB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcF,QAAQ,aAAtB,mB,SAeX64B,E,uFAAf,WAA+BrS,EAAW3Y,EAAS1e,GAAnD,wFACQpW,EAAOoW,EAAOsL,UAAP,UAAsBtL,EAAOsL,UAA7B,YAA0CtL,EAAOpW,MAASoW,EAAOpW,KACxEytB,EAAO,CACXztB,OACAiB,YAAamV,EAAOnV,aAGtBgyC,YAAcxlB,GACXoN,MAAK,WACJ4S,EAAU,WACV3Y,EAAQ,gBAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,2CAA4CnoB,GACxD2rC,EAAU,WAdhB,iD,wBAzISkS,E,sLAJID,E,0GAIJC,E,iGAyIMG,E,0lCC5JFC,EAAsB,SAAC,GAAsC,QAApCv6C,gBAAoC,MAAzB,SAAyB,EAAZjG,EAAY,OACxE,EAA2Dc,cAAnD+V,EAAR,EAAQA,OAAQuT,EAAhB,EAAgBA,WAAYC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAE1C,OACE,kBAAC,IAAD,GACEhoB,KAAK,SACLL,SAAUooB,GAAgBC,EAC1B3D,QAAS,WACPjO,QAAQgS,IAAI,aAAc7T,GAC1BuT,MAEEpqB,GAEHiG,I,EAbMu6C,E,0FACgD1/C,S,4FADhD0/C,E,khDCWAC,EAAqBprB,YAAQ,KAAM,CAC9CqrB,QAASpoC,KADuB+c,CAE/BsrB,GAEH,SAASA,EAAT,GAAkE,IAA7C1+C,EAA6C,EAA7CA,SAA6C,IAAnCg9B,YAAmC,MAA5B,KAA4B,EAAtBja,EAAsB,EAAtBA,UAAW07B,EAAW,EAAXA,QAC/CtT,EAAiB,OAATnO,EACd,IAAwBh/B,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACA,IAA4BjnB,mBAAS,YAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACMpB,EAAUC,mBACVviB,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLyjB,EAAU,YACVhnB,GAAQ,KAMZ,OACE,oCACE,kBAAC,IAAD,CAAQjlB,SAAUA,EAAUq+C,QAAS,CAAEre,KAAM,iBAAmBtb,QAAS6D,EAAavD,MACnFmmB,EAAQ,WAAa,QAExB,kBAAC,IAAD,CAAOnmB,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVgX,UAAW,QACX/W,UAAW,SAGb,kBAAC,IAAD,CACEvD,MAAK,UAAK+lB,EAAQ,MAAQ,OAArB,SACLviB,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAGu6C,OAGb1T,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,YACjB,kBAAC,IAAD,CACEutC,MAAOA,EACPnO,KAAMA,EACNja,UAAWA,EACXkpB,UAAWA,EACXpB,QAASA,KAGb,kBAAC,IAAO7F,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,iBAAuB6tC,EAAQ,UAAY,UAA3C,mBAEF,kBAAC,IAAMzlB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbi2B,EAAQ,UAHZ,WAWN,kBAAC,IAAOzZ,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,4DAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,UAFjB,gB,EAxETk2B,E,8LAJIF,E,+FAIJE,E,kjDCHIE,EAAmB,SAAC,GAA2E,IAAzErxC,EAAyE,EAAzEA,SAAUvN,EAA+D,EAA/DA,SAAU2qC,EAAqD,EAArDA,eAAgBkU,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,gBACpF,IAAwB9gD,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACA,IAAwCjnB,oBAAS,GAAjD,GAAO+gD,EAAP,KAAqBC,EAArB,KACA,IAAkDhhD,oBAAS,GAA3D,GAAOihD,EAAP,KAA0BC,EAA1B,KAEM32B,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAINk6B,EAAuB,CAC3Bn6B,KAAM,WACJg6B,GAAgB,IAElBx2B,MAAO,WACLw2B,GAAgB,IAElB3Q,QAAS,WACPjT,YAAc7tB,EAAS/O,MAAM66B,MAAK,SAAC5tB,GACd,YAAfA,EAAI1D,OACN4iC,IAEAyU,EAA0Bp6B,YAM5Bo6B,EAA4B,CAChCp6B,KAAM,WACJk6B,GAAqB,IAEvB12B,MAAO,WACL02B,GAAqB,KAIzB,OAAIl/C,GAAa6+C,GAAkBC,EASjC,oCACGD,GAAiBA,EAAct2B,EAAavD,KAAMhlB,IACjD6+C,GACA,kBAAC,IAAD,CAAYn6B,QAAS6D,EAAavD,MAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM5Z,KAAMi0C,SAIjBP,GAAmBA,EAAgBK,EAAqBn6B,KAAMhlB,IAC7D8+C,GACA,kBAAC,IAAD,CAAYp6B,QAASy6B,EAAqBn6B,MACxC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM5Z,KAAMk0C,QAKlB,kBAAC,IAAD,CAAOt6B,KAAMA,EAAM/N,QAASsR,GAC1B,kBAACg3B,EAAD,CAAuBhyC,SAAUA,KAGnC,kBAAC,IAAD,CAAmByX,KAAM+5B,EAAc9nC,QAASkoC,EAAsBtxC,QAAQ,8CAC9E,kBAAC,IAAD,CAAYmX,KAAMi6B,EAAmBhoC,QAASmoC,EAA2BvxC,QAAQ,uEA9BjF,kBAAC,IAAD,CAAS0S,MAAO,CAAEjB,MAAO,wBACvB,kBAAC,IAAD,CAAMlU,KAAMi0C,S,EA5CPT,E,kJA8EN,IAAMY,EAAe,SAAC,GAAiC,IAA/BjyC,EAA+B,EAA/BA,SAAUo9B,EAAqB,EAArBA,eACvC,IAA0B3sC,mBAAS,CAAEyH,SAAS,EAAMS,UAAW,GAAIgd,MAAO,KAA1E,GAAOnL,EAAP,KAAc0vB,EAAd,KACMoD,EAAUC,mBAyBhB,OAxBAhsC,qBAAU,WAERqJ,QAAQ0mB,IAAI,CACViX,cACAyF,YAAe,sCAAsC,KACpDlS,MAAK,YAAc,IACoC,EADpC,SAAZmS,EAAY,KAARC,EAAQ,KACF,YAAdD,EAAGzjC,QAAsC,YAAd0jC,EAAG1jC,OAChC0/B,EAAS,CACPhiC,SAAS,EACTsC,OAAQ,UACR7B,UAAWslC,EAAGtlC,UACdgd,MAAK,UAAEuoB,EAAGC,WAAW,UAAhB,aAAE,EAAkBvoB,eAG3BskB,EAAS,CACPhiC,SAAS,EACTsC,OAAQ,OACR7B,UAAW,GACXgd,MAAO,UAIZ,IAGD,kBAAC,IAAD,CACE3C,MAAO,CACLgF,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CACEoD,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAGunC,OAGbvmB,MAAM,gBACN5O,KAAK,2CACLy0B,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOma,EAAMtS,SACnB,kBAAC,IAAOu/B,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,QAGJ,kBAAC,IAAOonC,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,CACE4jB,QAASjU,EACTrH,UAAW6R,EAAM7R,UACjBgd,MAAOnL,EAAMmL,MACbgoB,iBAAkBP,EAClByO,SAAO,EACPvO,QAASA,Q,EAzDR2U,E,0GAiEN,I,IAAMD,EAAwBnsB,YAAQ,MAAM,SAAA9tB,GAAQ,MAAK,CAC9DqlC,eAAgB,kBAAMrlC,EAASF,mBADIguB,CAEjCosB,I,6FAjJSZ,E,gGA8EAY,E,4FAiEAD,E,mnBChKArmB,EAAgB,SAACluB,EAAQrD,GACpC,IAAKA,IAAgBqD,GAAgC,WAAtBrD,EAAWC,OAAsB,MAAO,GAavE,MAT0B,WAAtBD,EAAWC,OACA,2CAAH,OACND,EAAW83B,OAAO56B,KAAI,SAAAvE,GAAK,kBAASA,MAAS+f,KAAK,MAD5C,cAERrV,GAAUA,EAAO3L,OAAS,EAA1B,oBAA2C2L,EAAOnG,KAAI,SAAA46C,GAAG,OAAIA,EAAIx5C,KAAKhB,QAAMob,KAAK,OAAU,IAGhFrV,EAAOnG,KAAI,SAAA46C,GAAG,OAAIA,EAAIx5C,KAAKhB,QAAMob,KAAK,Q,4FAX1C6Y,E,4eCEN,SAASwmB,EAAat4C,EAAMqC,GACjC,MAAO,CACLpJ,KAAM,gBACN+G,OACAqC,WAIG,SAASjC,EAAgBJ,EAAMqC,GACpC,OAAO,SAAenE,GACpBA,EAAS,CACPjF,KAAM,mBACN+G,OACAqC,UACA0M,QAASgW,YAAkB/kB,MAK1B,SAASu4C,EAAiBh4C,GAC/B,MAAO,CACLtH,KAAM,oBACNsH,e,6FAtBY+3C,E,uEAQAl4C,E,0EAWAm4C,E,idChBH5gB,EAAc,SAACp3B,EAAYqD,EAAQ8zB,GAC9C,IAAM75B,EAAOi0B,YAAcluB,EAAQrD,GACnC,GAAI1C,EAAK5F,OAJmB,IAK1B,OAAO,EAGT,IAAMwC,EAAOT,IAAOuG,EAAWw1C,aAAa97C,OAAO,wBAC7Cu+C,EAAU9gB,EAAc,GAAH,OAAMA,EAAN,WAA6B,aAClD7S,EAAO,YAAH,OAAe6S,EAAf,mBAAqCj9B,EAArC,qBAAsD8F,EAAWC,OAAjE,0BAAyF3C,GAEnG,OADAg/B,OAAOC,SAASiY,KAAhB,0BAA0CyD,EAA1C,iBAA0D1pC,mBAAmB+V,KACtE,I,6FAZqB,I,2FAEjB8S,E,kfCCH8gB,G,0BASAC,G,0BASAC,G,0BASOC,G,0BAIAC,G,0BAIAC,G,iFAnCjB,SAAUL,IAAV,+GAE2Bn6C,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUs6C,YAFnE,cAEUn6C,EAFV,gBAGUkqC,YAAIj5B,IAAQ4oC,aAAaO,gBAAgBp6C,EAASC,OAH5D,wEAKUiqC,YAAIj5B,IAAQ4oC,aAAaQ,gBALnC,qDASA,SAAUP,IAAV,+GAE2Bp6C,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUy6C,YAFnE,cAEUt6C,EAFV,gBAGUkqC,YAAIj5B,IAAQ6oC,aAAaM,gBAAgBp6C,EAASC,OAH5D,wEAKUiqC,YAAIj5B,IAAQ6oC,aAAaO,gBALnC,qDASA,SAAUN,IAAV,+GAE2Br6C,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAU06C,WAFnE,cAEUv6C,EAFV,gBAGUkqC,YAAIj5B,IAAQupC,YAAYJ,gBAAgBp6C,EAASC,OAH3D,wEAKUiqC,YAAIj5B,IAAQupC,YAAYH,gBALlC,qDASO,SAAUL,IAAV,gGACCS,YAAUxpC,IAAQ6oC,aAAaY,mBAAoBZ,GADpD,4CAIA,SAAUG,IAAV,gGACCQ,YAAUxpC,IAAQupC,YAAYE,mBAAoBX,GADnD,4CAIA,SAAUG,IAAV,gGACCO,YAAUxpC,IAAQ4oC,aAAaa,mBAAoBb,GADpD,6C,6FAnCGA,E,gGASAC,E,gGASAC,E,8FASOC,E,mGAIAC,E,kGAIAC,E,wfClCJS,EAAiB,SAAC,GAAqB,IAAnBC,EAAmB,EAAnBA,KAAMh5C,EAAa,EAAbA,OAoCrC,OAAIA,EAEA,yBAAK3D,UAAU,aAAf,sBACG28C,EAAKvhD,OADR,IACiBuI,EADjB,IAC0C,IAAhBg5C,EAAKvhD,OAAe,MAAQ,QAMxD,yBAAK4E,UAAU,aAAf,sBACE,kBAACkb,EAAD,CAAc6K,UAAU,SAAS5E,MA3CjC,yBAAKnhB,UAAU,oBAAf,sBACE,yBAAKA,UAAU,gBAAf,sBACE,0BAAMA,UAAU,QAAhB,qCAA2C,IAC3C,0BAAMA,UAAU,QAAhB,sBAAyB28C,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,cAAfA,EAAIj5C,UAAwBvI,SAE1E,yBAAK4E,UAAU,gBAAf,sBACE,0BAAMA,UAAU,QAAhB,qCAA2C,IAC3C,0BAAMA,UAAU,QAAhB,sBAAyB28C,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,cAAfA,EAAIj5C,UAAwBvI,SAE1E,yBAAK4E,UAAU,gBAAf,sBACE,0BAAMA,UAAU,QAAhB,qCAA2C,IAC3C,0BAAMA,UAAU,QAAhB,sBAAyB28C,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,cAAfA,EAAIj5C,UAAwBvI,SAE1E,yBAAK4E,UAAU,cAAf,sBACE,0BAAMA,UAAU,QAAhB,kCAAwC,IACxC,0BAAMA,UAAU,QAAhB,sBAAyB28C,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,YAAfA,EAAIj5C,UAAsBvI,SAExE,yBAAK4E,UAAU,cAAf,sBACE,0BAAMA,UAAU,QAAhB,kCAAwC,IACxC,0BAAMA,UAAU,QAAhB,sBAAyB28C,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,YAAfA,EAAIj5C,UAAsBvI,SAExE,yBAAK4E,UAAU,aAAf,sBACE,0BAAMA,UAAU,QAAhB,kCAAwC,IACxC,0BAAMA,UAAU,QAAhB,sBAAyB28C,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,WAAfA,EAAIj5C,UAAqBvI,SAEvE,yBAAK4E,UAAU,aAAf,sBACE,0BAAMA,UAAU,QAAhB,iCAAuC,IACvC,0BAAMA,UAAU,QAAhB,sBAAyB28C,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,WAAfA,EAAIj5C,UAAqBvI,UAgBzE,sBACE,gDAAOuhD,EAAKvhD,SACE,IAHlB,eASE8f,EAAeC,aAAW,iBAAO,CACrCC,QAAS,CACPE,gBAAiB,OACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZwJ,WAAY,MACZvJ,WAAY,YACZohC,UAAW,mCACXC,aAAc,UATG3hC,CAWjBO,M,6FAjESghC,E,gGAsDPxhC,E,uhBC3DC,SAAS6hC,EAASxiD,GACvB,OAAOkH,IAAWC,IAAX,iBAAyBnH,GAAQ,CACtCuH,UAAW,aAIR,SAASk7C,EAAWziD,EAAMytB,GAC/B,OAAOvmB,IAAW6nB,MAAX,iBAA2B/uB,GAAQytB,EAAM,CAC9ClmB,UAAW,aAIR,SAASm7C,EAAUj1B,GACxB,OAAOvmB,IAAWwmB,KAAK,SAAUD,EAAM,CACrClmB,UAAW,c,6FAdCi7C,E,0DAMAC,E,4DAMAC,E,s7BCVHC,EAAe,CAC1BC,MAAO,CACLx5C,OAAQ,GACR63B,OAAQ,IAEV4hB,cAAe,CACbz5C,OAAQ05C,IAAaC,SAEvBC,YAAa,CACXhjD,KAAM,GACNmQ,QAAS,IAEX8yC,UAAW,IAGAC,GAAc,OAExBzqC,IAAQ0qC,mBAAmBjB,oBAAqB,SAAA3oC,GAAK,OACpDA,EAAM6pC,MAAM,CAAC,gBAAiB,UAAWN,IAAaC,YAH/B,IAIxBtqC,IAAQ0qC,mBAAmBE,oBAAqB,SAAC9pC,EAAO1S,GAAR,OAC/C0S,EACGm7B,IACC,cACA4O,YAAO,CACLtjD,KAAM6G,EAAQ7G,KACdmQ,QAAStJ,EAAQsJ,WAGpBizC,MAAM,CAAC,gBAAiB,UAAWN,IAAaS,YAb5B,IAcxB9qC,IAAQ0qC,mBAAmBK,iBAAkB,SAAAjqC,GAAK,OACjDA,EAAM6pC,MAAM,CAAC,gBAAiB,UAAWN,IAAaW,SAf/B,IAkBxBhrC,IAAQmqC,MAAMV,oBAAqB,SAAA3oC,GAAK,OACvCA,EAAM6pC,MAAM,CAAC,QAAS,UAAWN,IAAaC,YAnBvB,IAoBxBtqC,IAAQmqC,MAAMS,oBAAqB,SAAA9pC,GAAK,OACvCA,EACG6pC,MAAM,CAAC,QAAS,UAAWN,IAAaS,SACxCH,MAAM,CAAC,gBAAiB,UAAWN,IAAaS,YAvB5B,IAwBxB9qC,IAAQmqC,MAAMY,iBAAkB,SAACjqC,EAAO0nB,GAAR,OAC/B1nB,EAAM6pC,MAAM,CAAC,QAAS,UAAWN,IAAaW,MAAML,MAAM,CAAC,QAAS,UAAWE,YAAOriB,OAzB/D,IA0BxBxoB,IAAQ4oC,aAAagC,oBAAqB,SAAC9pC,EAAO1S,GAEjD,OADkB0S,EAAMm7B,IAAI,YAAa7tC,EAAQY,SA3B1B,IA8BxBgR,IAAQ6oC,aAAa+B,oBAAqB,SAAC9pC,EAAO1S,GAEjD,OADkB0S,EAAMm7B,IAAI,YAAa7tC,EAAQY,SA/B1B,IAkCxBgR,IAAQupC,YAAYqB,oBAAqB,SAAC9pC,EAAO1S,GAEhD,OADkB0S,EAAMm7B,IAAI,WAAY7tC,EAAQY,SAnCzB,I,6FAfdk7C,E,4EAeAO,E,urCCbE7I,I,gFAAf,6GACQ/U,IAAMx+B,SAAS+kC,eADvB,aAGQ,IAAI6X,MAAM,kBAHlB,iD,sBAMO,I,IAAMC,EAAeC,YAAYvJ,EAAM,M,6FAN/BA,E,2DAMFsJ,E,ooBCVAhB,EAAe,CAC1BkB,aAAc,OAGHX,G,EAAc,G,EACxBzqC,IAAQqrC,gBAAgBC,iB,EAAmB,SAACxqC,EAAOnQ,GAElD,OADkBmQ,EAAMm7B,IAAI,eAAgBtrC,I,8LANnCu5C,E,8EAIAO,E,q1BCDTc,EAAuB,CACzB1F,UAAW17C,MACRqhD,SAAS,EAAG,KACZC,QAAQ,OACR3F,OACHC,QAAS57C,MACN04B,IAAI,EAAG,QACP4oB,QAAQ,OACR3F,QAKQoE,EAAe,CAC1B3E,cAHFgG,EAAuBx4C,KAAKC,MAAM04C,aAAaC,QAAQ,oBAAsBJ,EAI3E5B,KAAM,CACJ3hB,QAAS,GACT4jB,WAAY,EACZC,YAAa,EACbC,UAAU,EACVC,YAAY,EACZC,OAAQ,IAEVC,YAAa,CACXjkB,QAAS,GACT4jB,WAAY,EACZC,YAAa,EACbC,UAAU,GAEZI,cAAe,CACbvC,KAAM,CACJ3hB,QAAS,GACT6jB,YAAa,EACbC,UAAU,GAEZn0C,UAAW,CACTqwB,QAAS,GACT6jB,YAAa,EACbC,UAAU,KAKHrB,GAAc,OACxBzqC,IAAQmsC,iBAAiBvB,oBAAqB,SAAC9pC,EAAO1S,GACrD,IAAMg+C,EAAYtrC,EACf6pC,MAAM,CAAC,gBAAiB,aAAcv8C,EAAQy3C,UAAUC,QACxD6E,MAAM,CAAC,gBAAiB,WAAYv8C,EAAQ23C,QAAQD,QAEjDP,EAAgB6G,EAAU19C,IAAI,iBAAiB+hB,OAGrD,OAFAi7B,aAAaW,QAAQ,iBAAkBt5C,KAAKu5C,UAAU/G,IAE/C6G,KATgB,IAWxBnsC,IAAekqC,MAAMS,oBAAqB,SAAA9pC,GACzC,IAAMsrC,EAAYtrC,EACf6pC,MACC,CAAC,gBAAiB,aAClBxgD,MACGqhD,SAAS,EAAG,KACZC,QAAQ,OACR3F,QAEJ6E,MACC,CAAC,gBAAiB,WAClBxgD,MACG04B,IAAI,EAAG,QACP4oB,QAAQ,OACR3F,QAGDP,EAAgB6G,EAAU19C,IAAI,iBAAiB+hB,OAGrD,OAFAi7B,aAAaW,QAAQ,iBAAkBt5C,KAAKu5C,UAAU/G,IAE/C6G,KA/BgB,IAiCxBnsC,IAAessC,OAAO3B,oBAAqB,SAAA9pC,GAE1C,OADA4qC,aAAac,WAAW,kBACjB1rC,KAnCgB,IAqCxBd,IAAQwlC,QAAQoF,oBAAqB,SAAC9pC,EAAO1S,GAAR,OACpC0S,EAAMm7B,IACJ,OACA4O,YAAO,CACL7iB,QAAS55B,EAAQY,KAAKiB,YACtB27C,WAAYx9C,EAAQY,KAAK48C,WACzBC,YAAaz9C,EAAQY,KAAK68C,YAC1BC,UAAU,EACVC,YAAY,EACZC,OAAQ,SA9CW,IAiDxBhsC,IAAQwlC,QAAQuF,iBAAkB,SAACjqC,EAAO1S,GAAR,OACjC0S,EAAMm7B,IACJ,OACA4O,YAAO,CACLkB,YAAY,EACZD,UAAU,EACVF,WAAY,EACZ5jB,QAAS,GACT6jB,YAAa,EACbG,OAAQ59C,EAAQ49C,aA1DG,IA6DxBhsC,IAAQwlC,QAAQiE,oBAAqB,SAAA3oC,GAAK,OAAIA,EAAM6pC,MAAM,CAAC,OAAQ,aAAa,MA7DxD,IA8DxB3qC,IAAQysC,eAAe7B,oBAAqB,SAAC9pC,EAAO1S,GAAR,OAC3C0S,EAAMm7B,IACJ,cACA4O,YAAO,CACL7iB,QAAS55B,EAAQY,KAAK+R,SACtB6qC,WAAYx9C,EAAQY,KAAK48C,WACzBC,YAAaz9C,EAAQY,KAAK68C,YAC1BC,UAAU,QArES,IAwExB9rC,IAAQysC,eAAehD,oBAAqB,SAAA3oC,GAAK,OAChDA,EAAM6pC,MAAM,CAAC,cAAe,aAAa,MAzElB,IA0ExB3qC,IAAQ0sC,WAAW9B,oBAAqB,SAAC9pC,EAAO1S,GAAR,OACvC0S,EAAM6pC,MACJ,CAAC,gBAAiB,QAClBE,YAAO,CACL7iB,QAAS55B,EAAQY,KAAKiB,YACtB47C,YAAaz9C,EAAQY,KAAK68C,YAC1BC,UAAU,QAhFS,IAmFxB9rC,IAAQ0sC,WAAWjD,oBAAqB,SAAA3oC,GAAK,OAC5CA,EAAM6pC,MAAM,CAAC,gBAAiB,OAAQ,aAAa,MApF5B,IAqFxB3qC,IAAQ0sC,WAAW3B,iBAAkB,SAAAjqC,GAAK,OACzCA,EAAM6pC,MAAM,CAAC,gBAAiB,OAAQ,aAAa,MAtF5B,IAuFxB3qC,IAAQ2sC,gBAAgB/B,oBAAqB,SAAC9pC,EAAO1S,GAAR,OAC5C0S,EAAM6pC,MACJ,CAAC,gBAAiB,aAClBE,YAAO,CACL7iB,QAAS55B,EAAQY,KAAK2I,UACtBk0C,YAAaz9C,EAAQY,KAAK68C,YAC1BC,UAAU,QA7FS,IAgGxB9rC,IAAQ2sC,gBAAgBlD,oBAAqB,SAAA3oC,GAAK,OACjDA,EAAM6pC,MAAM,CAAC,gBAAiB,YAAa,aAAa,MAjGjC,IAkGxB3qC,IAAQ2sC,gBAAgB5B,iBAAkB,SAAAjqC,GAAK,OAC9CA,EAAM6pC,MAAM,CAAC,gBAAiB,YAAa,aAAa,MAnGjC,I,6FA3CvBY,E,mFAaSrB,E,2EA8BAO,E,+lBC9CAP,EAAe,CAC1B0C,cAAe,IAGJnC,GAAc,OACxBzqC,IAAQ6sC,iBAAiBvB,kBAAmB,SAACxqC,EAAO1S,GAAR,OAAoB0S,EAC9DrX,MAAM,gBAAiB2E,MAFD,IAGxB4R,IAAQ8sC,mBAAmBxB,kBAAmB,SAACxqC,EAAOisC,GAAR,OAA8BjsC,EAC1EksC,SAAS,CAAC,gBAAiBD,OAJL,I,6FAJd7C,E,yEAIAO,E,ipBCJAzqC,EAAU,EAAH,GACfitC,M,4FADQjtC,E,+bCmBAktC,EAAgBnW,YAC3BJ,YACE,CACE3oC,KAAM+sB,IACNoyB,OAAQ/xB,IACR2H,OAAQhI,IACRnxB,MAAOsxB,IACPkyB,QAASjyB,IACTzxB,MAAO2xB,IACPrS,OAAQ0S,IACRnR,QAASgR,IACT/oB,QAAS8oB,IACT+xB,mBAAoB7xB,IACpBxE,SAAUiE,IACVjzB,UAAW4zB,IACX7M,WAAY0M,IACZtrB,KAAM0rB,KAERd,KACA,SAAAj0B,GAGE,OAFmBA,EAAMmxB,UAAjB2C,OAEMxxB,S,EAKL8jD,G,6FA3BFA,E,8hBCnBA9iC,EAA6B,CACxC9V,KAAM,CACJsyB,EAAkBp2B,KAAK,KAAM,SAC7Bo2B,EAAkBp2B,KAAK,KAAM,iBAE/Bo1B,aAAc,CAAC0nB,GACft2C,MAAO,CAACs2C,IAGV,SAAS1mB,EAAkB2mB,EAAgBxsC,EAAU8lB,GAEnD,GADA9lB,EAAWA,GAAY,IAClB8lB,IAAeA,EAAW0mB,GAC7B,OAAOxsC,EAGT,IAAM+lB,EAAe/lB,EAASzY,MAAK,SAACiiB,GAAD,OAAaA,EAAQhjB,OAASs/B,EAAW0mB,MAC5E,OAAKzmB,EAIE/lB,EAASzL,QAAO,SAAAiV,GAAO,OAAIA,EAAQ/U,UAAYsxB,EAAatxB,WAH1DuL,EAMX,I,IAAMysC,EAAyB,CAC7B13C,OAAQ,SACR23C,WAAY,QACZC,MAAO,QACP,uBAAwB,SAG1B,SAASJ,EAAsBvsC,EAAU8lB,GAGvC,GAFA9lB,EAAWA,GAAY,IAElB8lB,IAAeA,EAAW7b,SAC7B,OAAOjK,EAGT,IACM4sC,EADe9kB,YAAgB9nB,GACHzY,MAAK,SAAC0iB,GAAD,OAAcA,EAASzjB,OAASimD,EAAuB3mB,EAAW7b,aACzG,IAAK2iC,EACH,OAAO5sC,EAGT,IAAM6sC,EAAoBzsC,OAAOC,KAAKusC,EAAa34C,SACnD,OAAO+L,EAASzL,QAAO,SAAAiV,GAAO,OAAoD,IAAhDqjC,EAAkBlwC,QAAQ6M,EAAQ/U,a,6FA5CzD4U,E,kGASJwc,E,yFAcH4mB,E,8FAOGF,E,ikEC5BInS,EAAY,SAACrvB,GAA2B,IAAhBia,EAAgB,uDAAT,KAyB1C,GAxBa,OAATA,IACFA,EAAO,CACLx+B,KAAM,KACNiB,YAAa,KACbsjB,UAAWA,EAAUvkB,KACrB+0C,QAASxwB,EAAUwwB,QACnB7lB,OAAQ,EAAI3K,EAAU2K,QACtB9Y,OAAQmO,EAAUivB,OAAOntC,KAAI,SAAApG,GAC3B,YAAYA,EAAZ,CAAmBb,MAAOa,EAAM8kB,aAKjCyZ,EAAK8nB,eAAe,YACvB9nB,EAAKtP,OAAL,EAAkB3K,EAAU2K,QAC5BsP,EAAKpoB,OAASmO,EAAUivB,OAAOntC,KAAI,SAAApG,GAEjC,YADcu+B,EAAKpoB,OAAOrV,MAAK,SAAA3B,GAAK,OAAIA,EAAMq+B,WAAax9B,EAAMw9B,YAG5Dx9B,OAKLu+B,EAAK8nB,eAAe,UAAW,CACjC,IAAMC,EAAc9pC,IAAE+pC,IAAIhoB,EAAKpoB,OAAO/P,KAAI,SAAAjH,GAAK,OAAIA,EAAMq+B,aAGrDe,EAAKtP,OAAOruB,OAAS,EAAG,WAE1B29B,EAAKtP,OAASsP,EAAKtP,OAAO7oB,KAAI,SAAA2pB,GAC5B,YAAYA,EAAZ,CAAmBy2B,SAAS,OAG9BjoB,EAAKtP,OAASzS,IAAE+rB,OAAOhK,EAAKtP,OAAQ,SAGpC,IADA,IAAIuO,EAAW,EACRA,GAAY8oB,GAAa,CAE9B,IAAMG,EAAeloB,EAAKtP,OAAOnuB,MAC/B,SAAAivB,GAAK,OAAIA,EAAMslB,OAAS7X,GAAYzN,EAAM22B,MAAQlpB,KAEpD,GAAMipB,EAEJjpB,EAAWipB,EAAaC,UACnB,CAEL,IAAMC,EAAYpoB,EAAKtP,OAAOnuB,MAAK,SAAAivB,GAAK,OAAIA,EAAMslB,MAAQ7X,KACpDmpB,GAEJpoB,EAAKtP,OAAL,CACE,CACElvB,KAAM,KACNymD,SAAS,EACTnR,MAAO7X,EACPkpB,MAAOC,EAAUtR,MACjBuR,gBAAiB,IANrB,SAQKroB,EAAKtP,SAGVuO,EAAWmpB,EAAUD,OAGrBnoB,EAAKtP,OAAOlhB,KAAK,CACfhO,KAAM,KACNymD,SAAS,EACTnR,MAAO7X,EACPkpB,MAAOJ,EAAc,EACrBM,gBAAiB,MAzCC,GAgD1BroB,EAAKtP,OAAOlhB,KAAK,CACfhO,KAAM,KACNymD,SAAS,EACTnR,MAAO,EACPqR,MAAOJ,EAAc,EACrBM,gBAAiB,IAIrBroB,EAAKtP,OAASzS,IAAE+rB,OAAOhK,EAAKtP,OAAQ,SAAS7oB,KAAI,SAAA2pB,GAE/C,OADAA,EAAMsjB,UAAY,GACXtjB,KAETwO,EAAKpoB,OAASqG,IAAE+rB,OAAOhK,EAAKpoB,OAAQ,YAjEH,UAmEfooB,EAAKtP,QAnEU,yBAmExBc,EAnEwB,QAoEzB5Z,EAASooB,EAAKpoB,OAAOrI,QACzB,SAAA3O,GAAK,OAAIA,EAAMq+B,UAAYzN,EAAMslB,OAASl2C,EAAMq+B,SAAWzN,EAAM22B,SAEnE,IAAK32B,EAAMy2B,SAAWz2B,EAAM62B,gBAAkB,EAM5C,IAJA,IAAMC,EAAgBv5B,KAAKi5B,IACzB,EACA/pC,IAAE+pC,IAAIpwC,EAAO/P,KAAI,SAAAjH,GAAK,OAAqB,OAAhBA,EAAMA,MAAiB,EAAIA,EAAMA,MAAMyB,YAJrB,WAMtCkmD,GACP,IAAIxT,EAAW,CACbA,SAAUwT,EACVvT,OAAQp9B,EAAO/P,KAAI,SAAAjH,GACjB,IAAIa,EAAQ,CACVD,KAAMZ,EAAMY,KACZiB,YAAa7B,EAAM6B,YACnBf,KAAMd,EAAMc,KACZu9B,SAAUr+B,EAAMq+B,SAChBG,UAAWx+B,EAAMw+B,UACjB2N,cAAensC,EAAMmsC,cACrB1a,YAAazxB,EAAMyxB,YACnBza,OAAQ,IAEV,GAAIjM,MAAMC,QAAQhL,EAAMA,QAAUA,EAAMA,MAAMyB,OAASkmD,EACrD,GAAI3nD,EAAMmsC,cACR,IAAK,IAAIyb,EAAI,EAAGA,EAAI5nD,EAAMA,MAAM2nD,GAAGlmD,OAAQmmD,IACzC/mD,EAAMmW,OAAOpI,KAAK,CAChBulC,SAAUyT,EACV5nD,MAAOA,EAAMA,MAAM2nD,GAAGC,UAI1B/mD,EAAMmW,OAAOpI,KAAK,CAChBulC,SAAU,EACVn0C,MAAOA,EAAMA,MAAM2nD,KAIzB,OAAO9mD,MAGX+vB,EAAMsjB,UAAUtlC,KAAKulC,IAhCdwT,EAAI,EAAGA,EAAID,EAAeC,IAAK,EAA/BA,OAkCJ,CAEL,IAAIxT,EAAW,CACbA,SAAU,EACVC,OAAQp9B,EAAO/P,KAAI,SAAAjH,GACjB,IAAIa,EAAQ,CACVD,KAAMZ,EAAMY,KACZiB,YAAa7B,EAAM6B,YACnBf,KAAMd,EAAMc,KACZu9B,SAAUr+B,EAAMq+B,SAChBG,UAAWx+B,EAAMw+B,UACjB2N,cAAensC,EAAMmsC,cACrB1a,YAAazxB,EAAMyxB,YACnBza,OAAQ,IAEV,GAAInW,EAAMsrC,eACR,GAAIphC,MAAMC,QAAQhL,EAAMA,OACtB,IAAK,IAAI4nD,EAAI,EAAGA,EAAI5nD,EAAMA,MAAMyB,OAAQmmD,IACtC/mD,EAAMmW,OAAOpI,KAAK,CAChBulC,SAAUyT,EACV5nD,MAAOA,EAAMA,MAAM4nD,UAKzB/mD,EAAMmW,OAAOpI,KAAK,CAChBulC,SAAU,EACVn0C,MAAOA,EAAMA,QAGjB,OAAOa,MAGX+vB,EAAMsjB,UAAUtlC,KAAKulC,KA7EzB,2BAA+B,IAnEE,qCAmJ1B/U,EAAKpoB,OA5KqC,UA+KjCooB,EAAKtP,QA/K4B,IA+KnD,2BAA+B,OAAtBc,EAAsB,YAsBRA,EAAMsjB,WAtBE,IAsB7B,2BAAsC,OAA7BC,EAA6B,YAClBA,EAASC,QADS,IACpC,2BAAmC,KAA1BvzC,EAA0B,QACL,IAAxBA,EAAMmW,OAAOvV,QACfZ,EAAMmW,OAAOpI,KAAK,CAChBulC,SAAU,EACVn0C,MAAO,QALuB,gCAtBT,gCA/KoB,8BAwNnD,OAAOo/B,GAGIoW,EAAc,SAAApW,GACzB,IADiC,EAC7BuV,EAAS,CACX9yC,YAAau9B,EAAKv9B,YAClBmV,OAAQ,IAENmjB,EAAQ,GALqB,IAMbiF,EAAKtP,QANQ,IAMjC,2BAAiC,OAAtBc,EAAsB,YACRA,EAAMsjB,WADE,IAC/B,2BAAwC,mBACTE,QADS,IACtC,2BAAqC,KAA1BvzC,EAA0B,QACnCs5B,EAAMt5B,EAAMD,MAAQ,CAClBy9B,SAAUx9B,EAAMw9B,SAChBwpB,SAAUj3B,EAAMy2B,SAAWz2B,EAAM62B,gBAAkB,EACnDtb,cAAetrC,EAAMsrC,gBALa,gCADT,gCANA,6CAiBtBvrC,GACT,IAAM2f,EAAO4Z,EAAMv5B,GACbgwB,EAAQwO,EAAKtP,OAAOnuB,MACxB,SAAAivB,GAAK,OAAIA,EAAMslB,OAAS31B,EAAK8d,UAAYzN,EAAM22B,MAAQhnC,EAAK8d,YAE9D,GAAI9d,EAAKsnC,SAAWtnC,EAAK4rB,cAAe,CAEtC,IAFsC,EAElCn1B,EAAS,GAFyB,IAGf4Z,EAAMsjB,WAHS,IAGtC,2BAAwC,KAClC4T,EADkC,QACb1T,OACtBzyC,MAAK,SAAAd,GAAK,OAAIA,EAAMD,OAASA,KAC7BoW,OAAO/P,KAAI,SAAAjH,GAAK,OAAIA,EAAMA,SAK7B,IAJ0B,OAAtBqd,IAAEqF,KAAKolC,KACTA,EAAYzqC,IAAE0qC,UAAUD,EAAW,IAErC9wC,EAAOpI,KAAKk5C,GACL/8C,MAAMC,QAAQqS,IAAEqF,KAAK1L,KAAsC,IAA1BqG,IAAEqF,KAAK1L,GAAQvV,QACrDuV,EAASqG,IAAE0qC,UAAU/wC,EAAQ,IAZK,8BAetC29B,EAAO39B,OAAOpI,KAAK,CAAEhO,OAAMZ,MAAOgX,SAC7B,GAAIuJ,EAAKsnC,QAAS,CAEvB,IAFuB,EAEnB7wC,EAAS,GAFU,IAGA4Z,EAAMsjB,WAHN,IAGvB,2BAAwC,KAClC4T,EADkC,QACb1T,OACtBzyC,MAAK,SAAAd,GAAK,OAAIA,EAAMD,OAASA,KAC7BoW,OAAO/P,KAAI,SAAAjH,GAAK,OAAIA,EAAMA,SAC7BgX,EAAOpI,KAAKk5C,EAAU,KAPD,8BASvB,KAAO9wC,EAAOvV,OAAS,GAAwB,OAAnB4b,IAAEqF,KAAK1L,IACjCA,EAASqG,IAAE0qC,UAAU/wC,EAAQ,GAE/B29B,EAAO39B,OAAOpI,KAAK,CAAEhO,OAAMZ,MAAOgX,SAC7B,GAAIuJ,EAAK4rB,cAAe,CAM7B,IAJA,IACIn1B,EADa4Z,EAAMsjB,UAAU,GACXE,OACnBzyC,MAAK,SAAAd,GAAK,OAAIA,EAAMD,OAASA,KAC7BoW,OAAO/P,KAAI,SAAAjH,GAAK,OAAIA,EAAMA,SACtBgX,EAAOvV,OAAS,GAAwB,OAAnB4b,IAAEqF,KAAK1L,IACjCA,EAASqG,IAAE0qC,UAAU/wC,EAAQ,GAE/B29B,EAAO39B,OAAOpI,KAAK,CAAEhO,OAAMZ,MAAOgX,QAC7B,CAEL,IACMhX,EADW4wB,EAAMsjB,UAAU,GACVE,OAAOzyC,MAAK,SAAAd,GAAK,OAAIA,EAAMD,OAASA,KAAMoW,OAAO,GAAGhX,MAC3E20C,EAAO39B,OAAOpI,KAAK,CAAEhO,OAAMZ,YAhD/B,IAAK,IAAMY,KAAQu5B,EAAO,EAAfv5B,GAoDX,OADA+zC,EAAO39B,OAAS29B,EAAO39B,OAAOrI,QAAO,SAAA3O,GAAK,OAAoB,OAAhBA,EAAMA,SAC7C20C,I,6FAhSIH,E,iFA2NAgB,E,q/BC7NN,SAASwS,EAAcpnD,EAAMqnD,GAClC,OAAOngD,IAAWC,IAAX,kBAA0BnH,EAA1B,oBACDqnD,GAAW,CAAEC,IAAK,SADjB,CAEL//C,UAAW,cAeR,SAAeggD,EAAtB,kC,iDAAO,WAA6B9/C,GAA7B,iGACG+/C,EAAmB//C,EAAnB+/C,QAASxvB,EAAUvwB,EAAVuwB,MAEXvf,EAAU+uC,EAAU,CAAC,SAAU,QAAU,CAAC,QAAS,SAHpD,kBAMGtgD,IAAW6nB,MAAX,WACAtnB,EAAKggD,UADL,YACkBhgD,EAAKsnC,KADvB,YAC+Bt2B,EAAQ,GADvC,YAC6ChR,EAAKigD,UADlD,YAC+DjgD,EAAKkgD,cACxE3vB,EAAQ,CAAEsvB,IAAK,cAAY3mD,EAC3B,CACE4G,UAAW,aAVZ,uBAcGL,IAAW6nB,MAAX,WACAtnB,EAAKggD,UADL,YACkBhgD,EAAKsnC,KADvB,YAC+Bt2B,EAAQ,GADvC,YAC6ChR,EAAKigD,UADlD,YAC+DjgD,EAAKkgD,cACxE3vB,EAAQ,CAAEsvB,IAAK,cAAY3mD,EAC3B,CACE4G,UAAW,aAlBZ,gCAsBI6/C,EAAc3/C,EAAKkgD,aAAclgD,EAAKuwB,QAtB1C,wCAwBG,IAAI0rB,MAAM,UAxBb,2D,oHAlBS0D,E,oEAkBMG,E,44BCDhBK,EAAmB,SAAC,GAAyB,IAC7CC,EADsB35C,EAAuB,EAAvBA,MAAOzI,EAAgB,EAAhBA,UASjC,OANEoiD,EADE35C,EAAQ,GACH,UACEA,EAAQ,GACV,UAEA,UAGP,yBAAKzI,UAAWA,EAAhB,sBACE,yBAAKqiD,QAAQ,eAAb,sBACE,0BAAMC,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIlhC,OAAO,MAAMD,MAAM,KAAK8gC,KAAK,0BAA7D,uBACA,0BAAME,EAAE,IAAIC,EAAG,IAAM95C,EAAO+5C,GAAG,IAAIC,GAAG,IAAIlhC,OAAQ9Y,EAAO6Y,MAAM,KAAK8gC,KAAMA,EAA1E,0BAOFM,EAAqB,SAAC,GAAD,IAAGl8C,EAAH,EAAGA,GAAIiC,EAAP,EAAOA,MAAO42C,EAAd,EAAcA,QAAStrB,EAAvB,EAAuBA,WAAvB,OACzB,yBACE/zB,UAAWC,IAAW,eAAgB,CAAE5E,SAAU04B,IAClDuV,KAAK,SACL7oB,QAAS,kBAAM4+B,EAAQ74C,IAHzB,sBAKE,kBAAC27C,EAAD,CAAkB15C,MAAOA,EAAOzI,UAAU,aAA1C,uBACCwG,IAIQm8C,EAAiB,SAAC,GAA+C,IAA7C9qC,EAA6C,EAA7CA,KAAMwnC,EAAuC,EAAvCA,QAASuD,EAA8B,EAA9BA,aAAc9rC,EAAgB,EAAhBA,UAC5D,OACE,yBAAK9W,UAAU,UAAf,sBACE,yBAAKA,UAAU,QAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAG0iD,IAAT,wBAFJ,eAMA,yBAAK7iD,UAAU,UAAf,sBACG8W,EACC,kBAAC,IAAD,uBACE,kBAAC,IAAD,2CAGFe,EAAKjX,KAAI,SAACyP,EAASvP,GAAV,OACP,kBAAC4hD,EAAD,GACE3uB,WAAY6uB,IAAiBvyC,EAAQ7J,GACrCzF,IAAKD,GACDuP,EAHN,CAIEgvC,QAASA,EAJX,8BAaNyD,EAAa,CACjBC,SAAU,CAAEp+B,KAAMq+B,IAAiBnnD,MAAO,YAC1ConD,OAAQ,CAAEt+B,KAAMu+B,KAAUrnD,MAAO,UACjCsnD,QAAS,CAAEx+B,KAAMy+B,KAAqBvnD,MAAO,WAC7CwnD,WAAY,CAAE1+B,KAAM2+B,IAAcznD,MAAO,cACzC0nD,SAAU,CAAE5+B,KAAM6+B,IAAU3nD,MAAO,YACnC4nD,cAAe,CAAE9+B,KAAM++B,IAAc7nD,MAAO,mBAGxC8nD,EAAuB,SAACtE,EAASuD,EAAc9pC,GAAxB,OAA2C,WAEtEhY,GACG,IAFD8X,EAEC,EAFDA,MAAOhD,EAEN,EAFMA,QAGHme,EAAanb,IAAUgqC,EAAahqC,MACpCgrC,EAAkB9qC,EAAexQ,QAAO,qBAAGsQ,QAA2BA,KAC5E,OACE,kBAAC,IAAMsH,SAAP,CAAgBnf,IAAKD,GACnB,yBACEd,UAAWC,IAAW,eAAgB,CACpC5E,SAAU04B,EACV,aAAcA,EACd,aAAcA,IAEhBuV,KAAK,SACL7oB,QAAS,kBAAM4+B,EAAQ,CAAEzmC,MAAOmb,EAAa,KAAOnb,EAAOF,OAAQ,QAPrE,sBASE,kBAAC,IAAD,uBACE,0BAAMvY,EAAG0jD,IAAT,wBAEDjrC,GAEFmb,GACCne,EAAQhV,KAAI,SAAC8X,EAAQoJ,GACnB,IAAMgiC,EAAmBprC,IAAWkqC,EAAalqC,OAC3CqrC,GAAkF,IAAtEH,EAAgB5qC,WAAU,qBAAGN,SAA4BA,KAC3E,OACE,yBACE3X,IAAG,UAAKD,EAAL,YAAcghB,GACjB9hB,UAAWC,IAAW,QAAS,eAAgB,CAC7C5E,SAAUyoD,EACVE,QAASD,IAEXza,KAAK,SACL7oB,QAAS,kBAAM4+B,EAAQ,CAAEzmC,QAAOF,YAPlC,sBASE,kBAAC,IAAD,uBACE,0BAAMvY,EAAG2iD,EAAWpqC,GAAQiM,KAA5B,wBAEDm+B,EAAWpqC,GAAQ7c,aAQrBooD,EAAiB,SAAC,GAMzB,IALJ5E,EAKI,EALJA,QACAuD,EAII,EAJJA,aACA/qC,EAGI,EAHJA,KACAf,EAEI,EAFJA,UACAgC,EACI,EADJA,eAEA,OACE,yBAAK9Y,UAAU,UAAf,sBACE,yBAAKA,UAAU,QAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAGunC,IAAT,wBAFJ,UAMA,yBAAK1nC,UAAU,UAAf,sBACG8W,EACC,kBAAC,IAAD,uBACE,kBAAC,IAAD,2CAGF,yBAAK9W,UAAU,oBAAf,sBACG6X,EAAKjX,IAAI+iD,EAAqBtE,EAASuD,EAAc9pC,S,6FA1I5DqpC,E,wFAoBAO,E,0FAWOC,E,sFA6BPG,E,kFASAa,E,4FA+COM,E,whDC1HPC,EAAa,SAAC,GAA+C,IAC7D9B,EADgBzoD,EAA6C,EAA7CA,MAAOwqD,EAAsC,EAAtCA,OAAsC,IAA9BC,uBAA8B,SAG/DhC,EADEzoD,EAAQ,GACH,UACEA,EAAQ,GACV,UAEA,UAET,IAAM0qD,EAAS1qD,EAAQ,GAAK,EAAI,EAC1B2qD,EAAc3qD,EAAM4qD,oBAAerpD,EAAW,CAClDspD,sBAAuB,EACvBC,sBAAuBJ,IAEzB,OACE,0BAAM/nC,MAAO8nC,EAAkB,CAAE/oC,MAAO+mC,GAAS,GAAjD,sBACGkC,EACAH,IAKDO,EAAkB,SAAC,GAAD,IAAGnqD,EAAH,EAAGA,KAAH,OACtB,yBAAKyF,UAAU,8BAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAGwkD,IAAT,wBAEF,gEAAoBpqD,EAApB,oCAIEqqD,EAAqB,SAAC,GAAwB,IAAtB5iD,EAAsB,EAAtBA,KAC5B,GADkD,EAAhB8U,UAEhC,OACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,2CAKN,IAAQiB,EAAsB/V,EAAtB+V,WAAYC,EAAUhW,EAAVgW,MAEpB,OAAKD,GAAeA,EAAWvR,GAK7B,yBAAKxG,UAAU,UAAf,sBACE,yBAAKA,UAAU,aAAf,sBACE,yBAAKA,UAAU,UAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAG0iD,IAAT,wBAED9qC,EAAWvR,IAEd,yBAAKxG,UAAU,UAAf,sBACE,yBAAKA,UAAU,QAAf,sBACE,yBAAKA,UAAU,MAAf,gCACA,+CACE,kBAACkkD,EAAD,CAAYvqD,MAAOoe,EAAWP,QAAS2sC,OAAO,KAA9C,yBAGJ,yBAAKnkD,UAAU,QAAf,sBACE,yBAAKA,UAAU,MAAf,oCACA,+CACE,kBAACkkD,EAAD,CAAYvqD,MAAOoe,EAAWN,OAAQ0sC,OAAO,KAA7C,yBAGJ,yBAAKnkD,UAAU,QAAf,sBACE,yBAAKA,UAAU,MAAf,iCACA,+CACE,kBAACkkD,EAAD,CAAYvqD,MAAOoe,EAAWtP,MAAO07C,OAAO,IAAIC,iBAAe,EAA/D,yBAGJ,yBAAKpkD,UAAU,QAAf,sBACE,yBAAKA,UAAU,MAAf,oCACA,+CACE,kBAACkkD,EAAD,CAAYvqD,MAAOoe,EAAWT,OAAQ6sC,OAAO,KAA7C,yBAGJ,yBAAKnkD,UAAU,QAAf,sBACE,yBAAKA,UAAU,MAAf,iCACA,+CACE,kBAACkkD,EAAD,CAAYvqD,MAAOoe,EAAWV,SAAU8sC,OAAO,IAA/C,2BAMPnsC,EAAMpX,KAAI,WAA+CE,GAAU,IAAtD+jD,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,WACpCC,EAAWH,EAAU7jD,MAAM,KACjC,IAA8BgkD,EAASA,EAAS7pD,OAAS,GAAG6F,MAAM,KAAlE,GAAOgnC,EAAP,KAAiBid,EAAjB,KACA,OACE,yBAAKnkD,IAAKD,EAAOd,UAAU,aAA3B,sBACE,yBAAKA,UAAU,YAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAG+iD,KAAT,wBAEDjb,EACD,0BAAMjoC,UAAU,YAAhB,0BAA8BklD,IAEhC,yBAAKllD,UAAU,UAAf,sBACE,yBAAKA,UAAU,QAAf,sBACE,yBAAKA,UAAU,MAAf,iCACA,+CACE,kBAACkkD,EAAD,CAAYvqD,MAAOkrD,EAAUV,OAAO,IAAIC,iBAAe,EAAvD,yBAGJ,yBAAKpkD,UAAU,QAAf,sBACE,yBAAKA,UAAU,MAAf,+BACA,+CACE,kBAACkkD,EAAD,CAAYvqD,MAAOorD,EAAU,KAAMZ,OAAO,KAA1C,yBAGJ,yBAAKnkD,UAAU,QAAf,sBACE,yBAAKA,UAAU,MAAf,mCACA,+CACE,kBAACkkD,EAAD,CAAYvqD,MAAOqrD,EAAa,KAAMb,OAAO,KAA7C,8BAOZ,+CACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CACE7iC,MAAM,QACNC,OAAO,QACP4jC,UAAU,WACVC,OAAQ,gEACRpjD,KAAM,CACJ,CAAC,OAAQ,iBACT,CAAC,SAAD,OAAU+V,EAAWT,OAAO+tC,QAAQ,GAApC,OAA6CttC,EAAWV,UACxD,CAAC,SAAD,OAAUU,EAAWN,OAAO4tC,QAAQ,GAApC,OAA6CttC,EAAWtP,QAE1DjP,QAAS,CACP8hB,gBAAiB,cACjBgqC,MAAM,EACNC,OAAQ,CAAC,oBAAqB,qBAEhCC,UAAW,CAAE,cAAe,KAf9B,0BAnFC,kBAACd,EAAD,CAAiBnqD,KAAK,aAAtB,wBA0GEkrD,EAAgB,SAAC,GAAwB,IAAtBzjD,EAAsB,EAAtBA,KAAM8U,EAAgB,EAAhBA,UACpC,OACE,yBAAK9W,UAAU,SAAf,sBACE,yBAAKA,UAAU,QAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAG+iD,KAAT,wBAFJ,cAMA,kBAAC0B,EAAD,CAAoB5iD,KAAMA,EAAM8U,UAAWA,EAA3C,yBAKO4uC,EAAgB,SAAC,GAAmD,IAAjD1jD,EAAiD,EAAjDA,KAAM8U,EAA2C,EAA3CA,UAAW6uC,EAAgC,EAAhCA,gBAAiBzgD,EAAe,EAAfA,SAC1D0gD,EAAoBngD,IAA0BogD,qBAAqB3gD,GAKzE,OAJM0gD,GAAqB5jD,GAAQA,EAAK5G,OAAS,IAC/C4G,EAAOA,EAAKkG,QAAQtH,IAAIglD,IAIxB,yBAAK5lD,UAAWC,IAAW,SAAU,CACjC,mBAAoB0lD,IADxB,sBAIE,yBAAK3lD,UAAU,QAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAG2lD,IAAT,wBAFJ,WAMChvC,EACC,kBAAC,IAAD,uBACE,kBAAC,IAAD,2CAGF,yBAAK9W,UAAU,UAAf,sBACE,kBAAC,IAAD,uBACIgC,GAAwB,IAAhBA,EAAK5G,OAGb4G,EAAKpB,KAAI,YAAwD,IAArDkN,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,QAASE,EAA+B,EAA/BA,UAAWE,EAAoB,EAApBA,cAC3C,OACE,yBAAKpN,IAAKkN,EAAWjO,UAAU,aAA/B,sBACE,yBAAKA,UAAU,YAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAG4lD,IAAT,wBAEDj4C,GAEH,yBAAK9N,UAAU,UAAf,sBACE,yBAAKA,UAAU,eAAf,sBACE,yBAAKA,UAAU,MAAf,uCACA,+CAAMmO,IAER,yBAAKnO,UAAU,eAAf,sBACE,yBAAKA,UAAU,MAAf,iCACA,+CAAM+N,SAlBhB,kBAAC22C,EAAD,CAAiBnqD,KAAK,SAAtB,4B,6FA5LR2pD,E,iFAsBAQ,E,sFASAE,E,yFAsHOa,E,oFAcAC,E,icC9KAM,EAAqB,SAACC,GACjC,OAAQA,EAHY,YAGWZ,QAAQ,K,6FAHnB,W,0FAETW,E,+7GCIPE,kBAAgB,uDACnB9rC,gDAAaC,KAAO,QADD,kCAEnBD,gDAAaE,GAAK,MAFC,kCAGnBF,gDAAa/d,MAAQ,cAHF,kCAInB+d,gDAAaG,aAAe,iBAJT,kCAKnBH,gDAAaI,SAAW,aALL,mBAQT2rC,YAAb,kQACE,WACE,IACExiD,EACE0kB,KAAKvuB,MADP6J,OAGF,OACE,kEAAK3D,UAAS,iBAAY2D,EAAOid,QAAQ,MAAO,MAAQ0oB,KAAK,eAA7D,sBAA6E4c,iBAAiBviD,MAPpG,wIAAiC6yB,6CAAMC,e,2BAYvC0vB,YAAY/lD,UAAY,CACtBuD,OAAQwiB,gD,qIArBJ+/B,iB,2GAQOC,Y,+lBCNAC,EAAkB,CAC7B,CACEjlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,yBAC5B2qD,GAAI,aACJ3qD,GAAI,YACJipB,KAAM,kBAAC,IAAD,MACN2hC,QAAS,oBAEX,CACEnlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,oBAC5B2qD,GAAI,QACJ3qD,GAAI,OACJipB,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMxd,KAAMo/C,OAGhBD,QAAS,eAEX,CACEnlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,sBAC5B2qD,GAAI,UACJ3qD,GAAI,SACJipB,KAAM,kBAAC,IAAD,MACN2hC,QAAS,gBACTh2B,MAAO,CACL,CACEnP,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,yBAC5B2qD,GAAI,mBACJC,QAAS,mBAEX,CACEnlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,wBAC5B2qD,GAAI,mBACJC,QAAS,mBAEX,CACEnlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,+BAC5B2qD,GAAI,6BACJC,QAAS,yBAIf,CACEnlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,0BAC5B2qD,GAAI,cACJ3qD,GAAI,aACJipB,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMxd,KAAMq/C,QAGhBF,QAAS,oBACTh2B,MAAO,CACL,CACEnP,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,kCAC5B2qD,GAAI,wBACJC,QAAS,oBAEX,CACEnlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,6BAC5B2qD,GAAI,iCACJC,QAAS,6BAEX,CACEnlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,mCAC5B2qD,GAAI,kCACJC,QAAS,8BAEX,CACEnlC,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,kCAC5B2qD,GAAI,iCACJC,QAAS,iC,4FAxEJF,E,+zBCEExR,I,gFAAf,8GAC4B9lB,YAAS+Q,IAAMv+B,YAAjC6B,EADV,EACUA,KAAMqC,EADhB,EACgBA,SAEVrC,EAHN,gCAIU08B,IAAMx+B,SAASkC,YAAgBJ,EAAMqC,IAJ/C,OAOQyT,EAASgW,YAAoB4Q,IAAMv+B,YAP3C,KASU2X,EATV,cAUSiJ,IAAiBQ,WAV1B,OAWSR,IAAiBK,WAX1B,OAYSL,IAAiBS,SACjB,gBAbT,6BAcMnQ,QAAQgS,IAAI,gCAAiCvL,GACvC,IAAIglC,MAAM,8BAftB,mDAoBEzrC,QAAQgS,IAAI,8BApBd,kBAsBStgB,QAAQC,WAtBjB,kD,sBAyBO,I,IAAMsiD,EAAmBtI,YAAYvJ,EAAM,M,6FAzBnCA,E,6DAyBF6R,E,8cC/BAC,EAAa,SAAC,GAA6B,IAA3B3/C,EAA2B,EAA3BA,OAAQ3K,EAAmB,EAAnBA,KAAMo/B,EAAa,EAAbA,OA0CzC,MAvCa,SAATp/B,EAEA,oCACE,uBAAG4D,UAAU,iBAAb,0DACA,yBAAKA,UAAU,aAAf,sBACGw7B,EAAO56B,KAAI,SAACvE,EAAOyE,GAClB,OAAO,uBAAGC,IAAKD,EAAR,2BAAkBzE,OAG5B0K,GAAUA,EAAO3L,OAAS,GACzB,oCACE,uBAAG4E,UAAU,WAAb,iCACA,yBAAKA,UAAU,OAAf,sBACG+G,EAAOnG,KAAI,SAAC46C,EAAK16C,GAChB,OACE,uBAAGd,UAAU,MAAMe,IAAG,UAAKy6C,EAAIx5C,KAAKhB,KAAd,YAAsBF,GAA5C,sBACG06C,EAAIx5C,KAAKhB,YAWxB,yBAAKhB,UAAU,OAAf,sBACG+G,EAAOnG,KAAI,SAAC46C,EAAK16C,GAChB,OACE,uBAAGd,UAAU,MAAMe,IAAKD,EAAxB,sBACG06C,EAAIx5C,KAAKhB,Y,4FAlCX0lD,E,kgBCDAC,EAAUC,YAAY1J,IAAcO,M,4FAApCkJ,E,0bCDAC,EAAc,SAAC1J,EAAclqC,GAAf,OAA2B,WAA0C,IAAzCc,EAAyC,uDAAjC+pC,YAAOX,GAAev6C,EAAW,uCAC9F,MAAoC,mBAAzBqQ,EAAQrQ,EAAOvG,MACjB4W,EAAQrQ,EAAOvG,MAAM0X,EAAOnR,EAAOvB,SAGrC0S,K,4FALI8yC,E,6bCFAvJ,EAAe,CAC1BC,QAAS,UACTU,KAAM,OACNF,QAAS,Y,4FAHET,E,wjCCEAwJ,qBAAb,WACE,8BAAYlkD,GAAQ,2CAClB0lB,KAAK1lB,OAASA,EAFlB,sEAKE,WACE,OAAO0lB,KAAK1lB,SANhB,8BASE,WACE,gBAAU0lB,KAAK1lB,OAAf,aAA0B06C,0CAAaC,WAV3C,2BAaE,WACE,gBAAUj1B,KAAK1lB,OAAf,aAA0B06C,0CAAaW,QAd3C,8BAiBE,WACE,gBAAU31B,KAAK1lB,OAAf,aAA0B06C,0CAAaS,WAlB3C,6BAqBE,SAAgB18C,GACd,MAAO,CACLhF,KAAMisB,KAAKo0B,mBACXr7C,aAxBN,0BA4BE,SAAaA,GACX,MAAO,CACLhF,KAAMisB,KAAK01B,gBACX38C,aA/BN,6BAmCE,SAAgBA,GACd,MAAO,CACLhF,KAAMisB,KAAKu1B,mBACXx8C,aAtCN,2BA0CE,SAAcA,GACZ,MAAO,CACLhF,KAAMisB,KAAK1lB,OACXvB,aA7CN,mJ,+JAAaylD,qB,0gBCFAC,EAAU,SAAC9lD,GAAD,OAAUA,EAAKkJ,WAAWC,cAC9CgG,OACAyQ,QAAQ,eAAgB,IACxBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,O,4FAJLkmC,E,gmDCAAC,EAAY,SAACh1C,GAAqB,MAAhB5V,EAAgB,uDAAP,GACtC,GAAsB,WAAlB,EAAOA,KAAwBA,EACjC,OAAO4V,EAET,IAAI5K,EAAO4K,EACLD,EAAQ,EAAH,GAAQ3V,GAQnB,GAPAgY,OAAOC,KAAKtC,GAAO2G,SAAQ,SAAC1X,QACA,IAAf+Q,EAAM/Q,IAAwBoG,EAAKoH,SAAL,WAAkBxN,MACzDoG,EAAOA,EAAKyZ,QAAL,WAAiB7f,GAAO+Q,EAAM/Q,WAC9B+Q,EAAM/Q,QAIZoT,OAAOC,KAAKtC,GAAO1W,SAAW+Y,OAAOC,KAAKtC,GAAOxW,MAAM,SAACyF,GAAD,YAA+B,IAAf+Q,EAAM/Q,MAChF,OAAOoG,EAGT,IAAM6/C,EAAY7yC,OAAOC,KAAKtC,GAAOxJ,QAAO,SAACvH,GAAD,OAAS+Q,EAAM/Q,MACxDH,KAAI,SAACG,GAAD,gBAAYA,EAAZ,YAAmBkR,mBAAmBH,EAAM/Q,QAChDqb,KAAK,KACR,gBAAUjV,GAAV,QAAiB,OAAI6K,OAAJ,UAAcg1C,O,4FApBpBD,E,qZCAAE,EAAe,SAAC9G,GAC3B,IAAKA,EACH,OAAOA,EAET,IAAMjkC,EAAQikC,EAAOj2C,WAAWjJ,MAAM,KAEtC,OADAib,EAAM,GAAKA,EAAM,GAAG0E,QAAQ,wBAAyB,KAC9C1E,EAAME,KAAK,O,4FANP6qC,E,8ZCAPC,EAAe,SAAC/G,EAAQgH,GAAT,IAAcC,EAAd,uDAAyB,EAAzB,OAAgCjH,EAAS,KAAH,IAAI,GAAMgH,IAAM9B,QAAQ+B,IAEtEC,EAAc,SAAClH,GAA6B,IAArBiH,EAAqB,wDACvD,MAAsB,iBAAXjH,EACFA,EAELA,EAAS,KAAH,IAAG,GAAM,GACO,iBAAbiH,GACDjH,EAAOkF,SAAS+B,GAEnBjH,EAGLA,EAAS,KAAH,IAAG,GAAM,GAEf,UADsB,iBAAbiH,EACCF,EAAa/G,EAAQ,EAAGiH,GAE1BF,EAAa/G,EAAQ,GAF7B,MAKAA,EAAS,KAAH,IAAG,GAAM,GAEf,UADsB,iBAAbiH,EACCF,EAAa/G,EAAQ,EAAGiH,GAE1BF,EAAa/G,EAAQ,GAF7B,MAMF,UADsB,iBAAbiH,EACCF,EAAa/G,EAAQ,EAAGiH,GAE1BF,EAAa/G,EAAQ,GAF7B,Q,6FA5BE+G,E,kFAEOG,E,8bCFA9d,EAAwB,SAACz+B,GAAD,OAAOA,EAAEZ,WAAWo9C,OAAO,GAAGC,cAAgBz8C,EAAE5C,MAAM,K,4FAA9EqhC,E,2bCAAie,EAAe,mD,4FAAfA,E,iZCCAC,EAAqB,+D,4FAArBA,E,8ZCDAC,EAAa,kD,4FAAbA,E,6YCAAC,EAAwB,WAInC,IAJmD,IAAfvsD,EAAe,uDAAN,EACzC4F,EAAO,GACL4mD,EAAW,uDAER9lC,EAAI,EAAGA,EAAI1mB,EAAQ0mB,GAAK,EAC/B9gB,GAAQ4mD,EAASN,OAAOx/B,KAAKC,MAAMD,KAAK+/B,SAAWD,EAASxsD,SAG9D,OAAO4F,I,4FARI2mD,E,maCAAG,EAAmB,kBAAMC,KAAKjgC,KAAKC,OAAM,IAAI7qB,MAAO8qD,UAAYlgC,KAAK+/B,WAAWjnC,QAAQ,KAAM,IAAI1Y,MAAM,EAAG,M,4FAA3G4/C,E,mcCAAG,EAAY,kBAAM,O,4FAAlBA,E,0ZCAAC,EAAQ,SAACC,GAAD,OAAW,IAAIjkD,SAAQ,SAACC,GAC3CC,YAAW,WACTD,MACCgkD,Q,4FAHQD,E,kcCIN,SAASE,EAAsBz/C,EAAGC,GACvC,SAAKzL,IAAOo1C,SAAS5pC,KAAOxL,IAAOo1C,SAAS3pC,MACpC0pC,YAAY3pC,EAAGC,I,4FAFTw/C,E,onBCJVC,EAAS,CACb7mD,QAAS,UACT5B,KAAM,OACNF,QAAS,WAKJ,SAAStD,EAAK7B,EAAM+tD,GACzB,IAAMx0C,EAAQu0C,EAAOC,GAErB,OAAIx0C,EACKvZ,EANc,KAMKuZ,EAGrBvZ,EASF,I,IAAM8lB,EAAQ,CACnB1d,OAAQvG,EACRoF,QAAS,SAAqBjH,GAC5B,OAAO6B,EAAK7B,EAAM,YAEpBmF,QAAS,SAAqBnF,GAC5B,OAAO6B,EAAK7B,EAAM,YAEpBqF,KAAM,SAAkBrF,GACtB,OAAO6B,EAAK7B,EAAM,UAITgH,EAAW,CACtBoB,OAAQ,SAAgBpI,EAAM6G,GAC5B,MAAO,CAAEhF,KAAM7B,EAAM6G,YAEvBI,QAAS,SAAuBjH,EAAM6G,GACpC,MAAO,CAAEhF,KAAMA,EAAK7B,EAAM,WAAY6G,YAExC1B,QAAS,SAAuBnF,EAAM6G,GACpC,MAAO,CAAEhF,KAAMA,EAAK7B,EAAM,WAAY6G,YAExCxB,KAAM,SAAoBrF,EAAM6G,GAC9B,MAAO,CAAEhF,KAAMA,EAAK7B,EAAM,QAAS6G,c,6FAhDjCinD,E,4EAMmB,K,+EAETjsD,E,0EAgBHikB,E,2EAaA9e,E,mcCnCb,SAASgnD,EAAUz0C,GACjB,OAAOA,EAGF,SAASsrB,EAAcopB,GAA6B,IAAnBtL,EAAmB,uDAAJ,GAC/CuL,EAAsBD,EAAStL,cAAgBA,EAErD,OAAO,WAAgD,IAArCppC,EAAqC,uDAA7B20C,EAAqB9lD,EAAQ,uCAC7CvG,EAASuG,EAATvG,KAER,IAAKA,EAEH,OADAoW,QAAQnW,MAAM,8CAA+CsG,GAC5CmR,EAGnB,IAAM6yC,EAAU6B,EAAS7lD,EAAOvG,MAEhC,OAAIuqD,EACKvnC,YAAQtL,GAAO,SAAAsrC,GACpBuH,EAAQvH,EAAWz8C,EAAQmR,MAIdA,I,6FAvBZy0C,E,gFAIOnpB,E,irBCHT,SAASspB,EAAgB/L,EAAMgM,GACpC,IAAMC,EACJzrD,IAAOwrD,EAAUE,aAAazrD,OAAO,cACrCD,IAAOwrD,EAAU5P,SAAS37C,OAAO,YAEnC,GAAoB,IAAhBu/C,EAAKvhD,OAAc,MAAO,GAE9B,IAAM0tD,EAA+B9xC,IAAE+xC,QAAQpM,EAAM,CAAC,eAAgB,CAAC,QAAQ/7C,KAAI,SAAAg8C,GAAG,YACjFA,EADiF,CAEpF1D,YAAa0P,EAAW,UACjBzrD,IAAOy/C,EAAI1D,aAAa97C,OAAO,KADd,OAEpBD,IAAOy/C,EAAI1D,aAAa97C,OAAO,iBAE/B4rD,EAAkBhyC,IAAEiyC,QAAQH,EAA8B,eAC1D9mD,EAAO,GAGb,GAA4C,IAAxCmS,OAAOC,KAAK40C,GAAiB5tD,OAC/B,MAAO,GAGT+Y,OAAOC,KAAK40C,GAAiBvwC,SAAQ,SAAA7a,GACnC,IAAMgK,EAAO,CAAErN,KAAMqD,EAAM4kB,UAAW,EAAGC,OAAQ,EAAGH,QAAS,EAAG4mC,MAAO,GACvEF,EAAgBprD,GAAM6a,SAAQ,SAAAzI,GAC5BpI,EAAKoI,EAAGrM,UACU,cAAdqM,EAAGrM,QAAwC,WAAdqM,EAAGrM,QAAqC,YAAdqM,EAAGrM,QAC5DiE,EAAKshD,WAITlnD,EAAKuG,KAAKX,MAKZ,IAAMuhD,EAAgB,GAEhBC,GADUR,EAAcS,IAA2BC,EAAaX,IAC5Cn1C,QAAO,SAACjY,EAAGwF,GAAJ,YAAkBxF,E,sHAAlB,IAAsBwF,EAAM,OAAO,IAqBpE,OAlBAiB,EAAKyW,SAAQ,SAAA8wC,GACXH,EAAUG,EAAIhvD,MAAQgvD,KAGxBp1C,OAAOC,KAAKg1C,GAAW3wC,SAAQ,SAAA7a,GAEE,iBAApBwrD,EAAUxrD,KACnBwrD,EAAUxrD,GAAQ,CAChBrD,KAAMqD,EACN4kB,UAAW,EACXC,OAAQ,EACRH,QAAS,EACT4mC,MAAO,IAGXC,EAAc5gD,KAAK6gD,EAAUxrD,OAGxBurD,EAKT,SAASG,EAAaX,GAKpB,IAJA,IAAME,EAAgBF,EAAhBE,YACE9P,EAAY4P,EAAZ5P,QACFyQ,EAAY,GAEXX,GAAe9P,GACpByQ,EAAUjhD,KAAKpL,IAAO0rD,GAAazrD,OAAO,aAC1CyrD,EAAc1rD,IAAO0rD,GAAahzB,IAAI,EAAG,QAG3C,OAAO2zB,EAOT,SAASH,IAGP,IAFA,IAAMG,EAAY,GAET1nC,EAAI,EAAGA,EAAI,GAAIA,IACtB0nC,EAAUjhD,KAAV,UAAkBuZ,EAAlB,QAEF,OAAO0nC,G,6FAtFOd,E,8EA+DPY,E,2EAiBAD,E,geC9EI1pB,EAAiB,CAC5B8pB,IACAC,IACAC,IACA1N,IACAF,IACAC,M,4FANWrc,E,shBCHAiqB,EAAQ,e,EAAA,G,EAAA,yBAAG,WAAOjnD,GAAP,yGAAeknD,EAAf,+BAAyB5B,IAAzB,kBAEdtlD,IAFc,sDAIpBknD,EAAQ,EAAD,IAJa,uD,+KAAH,uD,4FAARD,E,6iDCIPE,gB,WACJ,2BAAc,sCACZzhC,KAAK0hC,gBAAkB,CACrBC,UAAW,CACTzvD,KAAM,gBACN0vD,YAAa,KAIjB5hC,KAAK6hC,QAAU/wD,sCAAUwI,KAAKwoD,KAE1BhxD,sCAAUwI,KAAKg8B,UACjBtV,KAAK6hC,QAAL,UAAkB/wD,sCAAUwI,KAAKwoD,KAAjC,YAAyChxD,sCAAUwI,KAAKg8B,UAG1DtV,KAAK+hC,OAASC,6CAAMC,OAAO,CACzBtmD,QAAS7K,sCAAUwI,KAAK4oD,QACxBC,QAASniC,KAAK6hC,QAEdO,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAIpBriC,KAAK3mB,IAAM2mB,KAAK3mB,IAAI8B,KAAK6kB,MACzBA,KAAKyC,OAASzC,KAAKyC,OAAOtnB,KAAK6kB,MAC/BA,KAAKsiC,KAAOtiC,KAAKsiC,KAAKnnD,KAAK6kB,MAC3BA,KAAKJ,KAAOI,KAAKJ,KAAKzkB,KAAK6kB,MAC3BA,KAAK4jB,IAAM5jB,KAAK4jB,IAAIzoC,KAAK6kB,MACzBA,KAAKiB,MAAQjB,KAAKiB,MAAM9lB,KAAK6kB,M,+DAG/B,WACEA,KAAK0hC,gBAAgBC,UAAUC,YAA/B,gBAAsDW,iDAAOlpD,IAAI,oB,6BAGnE,WACE2mB,KAAK0hC,gBAAgBC,UAAUC,YAAcW,iDAAOC,OAAO,mB,8BAG7D,WACE,MAAO,CACLJ,QAAS,gBAAF,GACJpiC,KAAK0hC,gBAAgBC,UAAUzvD,KAAO8tB,KAAK0hC,gBAAgBC,UAAUC,gB,iBAK5E,SAAI9iD,EAAM2K,GACR,IAAMC,EAAMg1C,kDAAU5/C,EAAM2K,GAC5B,OAAOuW,KAAK+hC,OAAO1oD,IAAIqQ,EAAKsW,KAAKyiC,sB,oBAGnC,SAAO3jD,EAAM2K,GACX,IAAMC,EAAMg1C,kDAAU5/C,EAAM2K,GAC5B,OAAOuW,KAAK+hC,OAAOt/B,OAAO/Y,EAAKsW,KAAKyiC,sB,kBAGtC,SAAK3jD,EAAM2K,GACT,IAAMC,EAAMg1C,kDAAU5/C,EAAM2K,GAC5B,OAAOuW,KAAK+hC,OAAOO,KAAK54C,EAAKsW,KAAKyiC,sB,kBAGpC,SAAK3jD,EAAM6gB,EAAMlW,GACf,IAAMC,EAAMg1C,kDAAU5/C,EAAM2K,GAC5B,OAAOuW,KAAK+hC,OAAOniC,KAAKlW,EAAKiW,EAAMK,KAAKyiC,sB,iBAG1C,SAAI3jD,EAAM6gB,EAAMlW,GACd,IAAMC,EAAMg1C,kDAAU5/C,EAAM2K,GAC5B,OAAOuW,KAAK+hC,OAAOne,IAAIl6B,EAAKiW,EAAMK,KAAKyiC,sB,mBAGzC,SAAM3jD,EAAM6gB,EAAMlW,GAChB,IAAMC,EAAMg1C,kDAAU5/C,EAAM2K,GAC5B,OAAOuW,KAAK+hC,OAAO9gC,MAAMvX,EAAKiW,EAAMK,KAAKyiC,sB,8IAIhCrpD,WAAa,IAAIqoD,gB,gKAhFxBA,gB,yFAgFOroD,W,+/GC1EAspD,UAAb,mQACE,WACEH,iDAAOC,OAAO,mBAFlB,gCAKE,WACMxiC,KAAKvuB,MAAM6J,SAAW05C,0CAAaS,SACrCz1B,KAAKvuB,MAAMkxD,QAAQziD,KAAK,gBAP9B,oBAWE,WACE,OACE,2DAAC,kDAAD,CACE4Y,MAAM,sBACNrK,UAAWuR,KAAKvuB,MAAM6J,SAAW05C,0CAAaC,SAE9C,2DAAC,2CAAD,CACExmC,UAAWuR,KAAKvuB,MAAM6J,SAAW05C,0CAAaC,QAC9C9hB,OAAQnT,KAAKvuB,MAAM0hC,OACnByvB,OAAQ5iC,KAAKvuB,MAAMqjD,MACnB+N,YAAa7iC,KAAKvuB,MAAMoxD,iBArBlC,sIAA+B10B,6CAAMC,eAAxBs0B,UA2BJ5jD,KAAO,SAGhB4jD,UAAU3qD,UAAY,CACpB4qD,QAAS/kB,8CAAgB,CACvB19B,KAAM09B,6CAAeoM,aACpBA,WACH7W,OAAQyK,+CAAiBoM,WACzB1uC,OAAQsiC,8CAAgB,CAACoX,0CAAaC,QAASD,0CAAaS,QAAST,0CAAaW,KAAM,KAAK3L,WAC7F8K,MAAOlX,6CAAeoM,WACtB6Y,YAAajlB,6CAAeoM,YAGvB,IAAM8Y,gBAAkB,SAACr3C,GAAD,MAAY,CACzC0nB,OAAQ/J,2DAAc3d,GAAOpS,IAAI,UACjCiC,OAAQ8tB,2DAAc3d,GAAOpS,IAAI,YAGtB0pD,mBAAqB,SAAC/pD,GAAD,MAAe,CAC/C87C,MAAO,SAACn7C,GAAD,OAAUX,EAAS2R,qDAAQmqC,MAAMzE,gBAAgB12C,KACxDkpD,YAAa,kBAAM7pD,EAAS2R,qDAAQmqC,MAAMf,aAAa,Q,SAG1CjtB,mDAAQg8B,gBAAiBC,mBAAzBj8B,CAA6C47B,W,2BAA7C,+B,qIAlDFA,U,uFAwCAI,gB,6FAKAC,mB,quIC/CAC,mBAAb,qSACE,WACE,IAAQrrD,EAAcqoB,KAAKvuB,MAAnBkG,UAER,OACE,kEAAKA,UAAS,UAAKA,EAAL,SAAd,sBACE,kEAAKA,UAAS,UAAKA,EAAL,aAAd,sBACE,kEAAKA,UAAU,SAAf,sBACE,kEAAKA,UAAU,qBAAf,sBACE,kEAAKA,UAAU,iBAAiB4lB,IAAK0lC,wEAAS3lC,IAAI,WAAlD,wBAEF,2DAAC,4DAAD,CAAY3lB,UAAS,UAAKA,EAAL,WAAyBwhB,QAAQ,KAAKuxB,UAAU,KAArE,sBACE,2DAAC,0CAAD,CAAkBr3C,GAAI2sB,KAAKvuB,MAAMqnB,MAAjC,0BAECkH,KAAKvuB,MAAM0B,aACZ,kEAAKwE,UAAS,UAAKA,EAAL,iBAAd,sBACGqoB,KAAKvuB,MAAM0B,cAIjB6sB,KAAKvuB,MAAMiG,UAEd,kEAAKC,UAAS,UAAKA,EAAL,cAAd,sBACE,kEAAKA,UAAU,iBAAf,sBACE,kEAAKA,UAAU,iBAAiB4lB,IAAK2lC,4EAAa5lC,IAAI,eAAtD,wBAEF,kEAAK3lB,UAAU,oBAAf,sBACE,kEAAKA,UAAU,iBAAiB4lB,IAAK4lC,wEAAc7lC,IAAI,gBAAvD,4BA3BZ,+IAAwC6Q,6CAAMC,e,2BAmC9C40B,mBAAmBjrD,UAAY,CAC7B+gB,MAAO8kB,+CAAiBoM,WACxBtyC,SAAUkmC,6CAAeoM,WACzB72C,YAAayqC,+CACbjmC,UAAWimC,gDAGbolB,mBAAmB/5B,aAAe,CAChCtxB,UAAW,YACXxE,YAAa,I,oIA5CF6vD,mB,mkJCQAI,cAAb,oHACE,uBAAY3xD,GAAO,kDACjB,mBAAMA,IA6FR4xD,gBAAkB,WAChB,EAAKloB,UAAS,SAAAmoB,GAAS,MAAK,CAC1BC,cAAeD,EAAUC,kBAhGV,EAoGnBC,wBAA0B,SAAAtmC,GACxBA,EAAMU,kBAlGN,EAAKnS,MAAQ,CACXiW,SAAU,GACVC,SAAU,GACV4hC,cAAc,GAGhB,EAAKE,cAAgB,EAAKA,cAActoD,KAAnB,2BATJ,EADrB,uDAaE,WACE,IAAQxD,EAAcqoB,KAAKvuB,MAAnBkG,UACF+rD,EAAa1jC,KAAK2jC,gBAExB,OACE,kEAAKhsD,UAAWA,EAAhB,sBACE,mEAAMqqC,SAAUhiB,KAAKyjC,cAAeG,YAAU,EAACC,aAAa,MAA5D,sBACE,kEAAKlsD,UAAU,wBAAf,sBACE,2DAAC,2DAAD,CACEmsD,WAAS,EACTnsD,UAAS,UAAKA,EAAL,WACT1D,WAAY+rB,KAAK+jC,SAAS,YAC1BpwD,SAAUqsB,KAAKgkC,mBAAmB,YAClC7qC,QAAQ,WACR3lB,MAAO,2DAAC,2CAAD,CAAkBH,GAAG,wBAArB,uBACP4wD,WAAY,CACVtsD,UAAW,oBACXsc,MAAO,CAAEpc,SAAU,OAAQub,WAAY,SAEzC8wC,gBAAiB,CACfjwC,MAAO,CAAEpc,SAAU,OAAQub,WAAY,SAZ3C,uBAgBA,2DAAC,6DAAD,CAAazb,UAAS,UAAKA,EAAL,WAAyBwhB,QAAQ,WAAvD,sBACE,2DAAC,4DAAD,CAAY0mB,QAAQ,8BAApB,kCACA,2DAAC,+DAAD,CACExsC,GAAG,8BACHU,KAAMisB,KAAKvU,MAAM83C,aAAe,OAAS,WACzCjyD,MAAO0uB,KAAKvU,MAAMkW,SAClBhuB,SAAUqsB,KAAKgkC,mBAAmB,YAClCC,WAAY,CACVtsD,UAAW,oBACXsc,MAAO,CAAEpc,SAAU,OAAQub,WAAY,SAEzCie,aACE,2DAAC,gEAAD,CAAgB1B,SAAS,MAAzB,sBACE,kEAAKh4B,UAAU,gBAAf,sBACE,2DAAC,4DAAD,CACEA,UAAU,sCACVwsD,aAAW,6BACX/rC,QAAS4H,KAAKqjC,gBACde,YAAapkC,KAAKwjC,wBAClBa,KAAK,MACLrxC,MAAM,UANR,sBAQGgN,KAAKvU,MAAM83C,aAAe,2DAAC,qEAAD,wBAAiB,2DAAC,yEAAD,2BAKpDe,WAAY,GAzBd,yBA6BHZ,EAAWruC,KAAO,GACjB,kEAAK1d,UAAS,UAAKA,EAAL,YAAd,sBACE,2DAAC,kDAAD,CAAYw7B,OAAQuwB,EAApB,wBAGJ,kEAAK/rD,UAAS,UAAKA,EAAL,kBAAd,sBACE,2DAAC,wDAAD,CACEA,UAAU,eACV0d,KAAK,QACLthB,KAAK,SACLolB,QAAQ,YACRnG,MAAM,UACNtf,SACEssB,KAAKvuB,MAAMgd,WAAqC,KAAxBuR,KAAKvU,MAAMiW,UAA2C,KAAxB1B,KAAKvU,MAAMkW,SAPrE,sBAUE,2DAAC,2CAAD,CAAkBtuB,GAAG,uBAArB,6BApFd,sBAyGE,SAASlB,GACP,IAAM6B,EAAQgsB,KAAKvuB,MAAM0hC,OAAOlgC,MAAK,SAAAsM,GAAI,OAAIA,EAAKlG,IAAI,UAAT,WAAyBlH,MACtE,OAAK6B,EAIEA,EAAMqF,IAAI,YAAc,wBAHtB,KA5Gb,2BAkHE,WACE,OAAO2mB,KAAKvuB,MAAM0hC,OAAOlzB,QACvB,SAAAV,GAAI,MAAyB,cAArBA,EAAKlG,IAAI,SAAgD,cAArBkG,EAAKlG,IAAI,aApH3D,yBAwHE,WACM2mB,KAAKvuB,MAAM0hC,OAAO9d,MACpB2K,KAAKvuB,MAAMoxD,gBA1HjB,2BA8HE,SAAc3lC,GACZA,EAAMU,iBAENoC,KAAKvuB,MAAMmxD,OAAO,CAChBlhC,SAAU1B,KAAKvU,MAAMiW,SACrBC,SAAU3B,KAAKvU,MAAMkW,aAnI3B,gCAuIE,SAAmBzvB,GAAM,WACvB,OAAO,SAAAgrB,GACL,EAAK2lC,cACL,EAAK1nB,SAAL,mBACGjpC,EAAOgrB,EAAMtI,OAAOtjB,WA3I7B,0IAAmC68B,6CAAMC,e,2BAiJzCg1B,cAAcrrD,UAAY,CACxBo7B,OAAQyK,+CAAiBoM,WACzBv7B,UAAWmvB,6CAAeoM,WAC1B6Y,YAAajlB,6CAAeoM,WAC5B4Y,OAAQhlB,6CAAeoM,WACvBryC,UAAWimC,gDAGbwlB,cAAcn6B,aAAe,CAC3BtxB,UAAW,Q,oIA1JAyrD,c,q2GCXAmB,oBAAb,0SACE,WACE,IAAQ5sD,EAAcqoB,KAAKvuB,MAAnBkG,UAER,OACE,kEAAKA,UAAWA,EAAhB,sBACGqoB,KAAKvuB,MAAM0hC,OAAO56B,KAAI,SAACvE,GAAD,OACrB,kEAAK0E,IAAK+lD,kDAAQzqD,EAAMqF,IAAI,YAA5B,sBACGrF,EAAMqF,IAAI,kBARvB,gJAAyC80B,6CAAMC,e,2BAgB/Cm2B,oBAAoBxsD,UAAY,CAC9Bo7B,OAAQyK,+CAAiBoM,WACzBryC,UAAWimC,gDAGb2mB,oBAAoBt7B,aAAe,CACjCtxB,UAAW,e,oIAtBA4sD,oB,u4ICMAC,iBAAb,gUAyMEC,UAAY,WACV,OAAQ,EAAKhzD,MAAM8iD,IAAIl7C,IAAI,WACzB,IAAK,YACH,MAAO,YACT,IAAK,YACH,MAAO,YACT,IAAK,YACH,MAAO,YACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,SACH,MAAO,SACT,IAAK,SACH,MAAO,SACT,QACE,MAAO,KA1Nf,EA8NEqrD,WAAa,WACX,IAAIxyD,EAAO,EAAKT,MAAM8iD,IAAIl7C,IAAI,WACxBsrD,EACHv3B,SAASw3B,eAAe,iBACvBx3B,SAASw3B,eAAe,gBAAgBC,YACrC,IAAWz3B,SAASw3B,eAAe,gBAAgBC,aACxD,IACIC,EAAW,mEAAMntD,UAAU,cAAhB,8BACXotD,EAAgB,GACtB7yD,EAAOA,EAAK0G,MAAM,KAClB,IAAK,IAAI6gB,EAAI,EAAGA,EAAIvnB,EAAKa,OAAQ0mB,IAC3BA,EAAIvnB,EAAKa,OAAS,EACpBgyD,EAAc7kD,KACZ,mEAAMxH,IAAK+gB,EAAX,sBACE,mEAAM9hB,UAAU,OAAhB,sBAAwBzF,EAAKunB,IAD/B,MAKFsrC,EAAc7kD,KACZ,mEAAMxH,IAAK+gB,EAAG9hB,UAAU,OAAxB,sBACGzF,EAAKunB,KAMd,IAEMuyB,GADJ,EAAK0Y,WAAWM,SAAW,EAAKN,WAAWM,OAAS53B,SAASC,cAAc,YACtD43B,WAAW,MAC9BC,EAAUlZ,EAAQmZ,YAAYJ,GAOlC,IALIG,EAAQjsC,MAAQ0rC,GAElBI,EAAc5d,QAAQ2d,GAGjBI,EAAQjsC,MAAQ0rC,GAErBI,EAAcK,QAEdL,EAAcK,QAEdL,EAAc5d,QAAQ2d,GAEtBI,EAAUlZ,EAAQmZ,YAAYJ,GAGhC,OAAOA,GA7QX,4DACE,WAEE,OADqB/kC,KAAKvuB,MAAlB4zD,SAGJ,kEAAK1tD,UAAS,UAAKqoB,KAAKvuB,MAAMkG,UAAhB,YAA6BqoB,KAAKykC,aAAhD,sBACE,kEAAK9sD,UAAU,cAAf,sBAA8BqoB,KAAKvuB,MAAM6zD,aACzC,kEAAK3tD,UAAU,eAAf,sBACE,kEAAKA,UAAU,YAAf,sBACE,2DAAC,iEAAD,CACE+lB,UAAU,eACV5E,MACE,sHACE,qGAAgBkH,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,YAClC2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,aAClB,mGAAc2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,cANzC,sBAWE,kEAAK1B,UAAU,OAAf,sBAAuBqoB,KAAK0kC,gBAGhC,kEAAK/sD,UAAU,aAAf,sBACE,2DAAC,iEAAD,CAAkB+lB,UAAU,eAAe5E,MAAM,wBAAjD,sBACE,kEAAKnhB,UAAU,OAAf,sBACG7C,8CAAOkrB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAAgBtE,OAAO,cAGrDirB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAClB,kEAAK1B,UAAU,SAAf,sBACE,2DAAC,gFAAD,wBACCqoB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAGvB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,SACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,QACJA,IAAI,SACL,kEAAK1B,UAAU,OAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMmyB,uCAAZ,wBAEDjR,KAAKvuB,MAAM8iD,IACTl7C,IAAI,eACJA,IAAI,QACJA,IAAI,SAGZ2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,UACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,SACJA,IAAI,iBACL,kEAAK1B,UAAU,SAAf,sBACE,2DAAC,kEAAD,wBACCqoB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,UACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,SACJA,IAAI,iBAGd2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,SACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,QACJA,IAAI,qBACP2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,QACJA,IAAI,oBACJA,IAAI,aACL,kEAAK1B,UAAU,WAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMugC,uCAAZ,wBAEDrf,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,SACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,QACJA,IAAI,oBACJA,IAAI,aAGf,2DAAC,iEAAD,CAAkBqkB,UAAU,eAAe5E,MAAM,wBAAjD,sBACE,kEAAKnhB,UAAU,OAAf,sBACG7C,8CAAOkrB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBACxBksD,QACAxwD,OAAO,oBAUtB,kEAAK4C,UAAS,UAAKqoB,KAAKvuB,MAAMkG,UAAhB,YAA6BqoB,KAAKykC,aAAhD,sBACE,2DAAC,gDAAD,CAAMzG,GAAE,+BAA0Bh+B,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,SAArD,sBACE,kEAAK1B,UAAU,YAAf,sBACE,2DAAC,iEAAD,CACE+lB,UAAU,eACV5E,MACE,sHACE,qGAAgBkH,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,YAClC2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,aAClB,mGAAc2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,cANzC,sBAWE,kEAAK1B,UAAU,OAAf,sBAAuBqoB,KAAK0kC,eAE9B,2DAAC,iEAAD,CAAkBhnC,UAAU,eAAe5E,MAAM,wBAAjD,sBACE,kEAAKnhB,UAAU,OAAf,sBACG7C,8CAAOkrB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAAgBtE,OAAO,eAIxD,kEAAK4C,UAAU,aAAf,sBACGqoB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAClB,kEAAK1B,UAAU,SAAf,sBACE,2DAAC,gFAAD,wBACCqoB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAGvB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,SACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,QACJA,IAAI,SACL,kEAAK1B,UAAU,OAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMmyB,uCAAZ,wBAEDjR,KAAKvuB,MAAM8iD,IACTl7C,IAAI,eACJA,IAAI,QACJA,IAAI,SAGZ2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,UACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,SACJA,IAAI,iBACL,kEAAK1B,UAAU,SAAf,sBACE,2DAAC,kEAAD,wBACCqoB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,UACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,SACJA,IAAI,iBAGd2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,SACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,QACJA,IAAI,qBACP2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,QACJA,IAAI,oBACJA,IAAI,aACL,kEAAK1B,UAAU,WAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMugC,uCAAZ,wBAEDrf,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAClB2mB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,eAAeA,IAAI,SACtC2mB,KAAKvuB,MAAM8iD,IACRl7C,IAAI,eACJA,IAAI,QACJA,IAAI,oBACJA,IAAI,aAGf,2DAAC,iEAAD,CAAkBqkB,UAAU,eAAe5E,MAAM,wBAAjD,sBACE,kEAAKnhB,UAAU,OAAf,sBACG7C,8CAAOkrB,KAAKvuB,MAAM8iD,IAAIl7C,IAAI,gBAAgBtE,OAAO,sBAhMlE,6IAAsCo5B,6CAAMC,e,2BAiR5Co2B,iBAAiBzsD,UAAY,CAC3BJ,UAAWimC,+CACX2W,IAAK3W,+CAAiBoM,WACtBqb,SAAUznB,6CACV0nB,YAAa1nB,iDAGf4mB,iBAAiBv7B,aAAe,CAC9BtxB,UAAW,WACX0tD,UAAU,EACVC,YAAa,M,oIA3RFd,iB,upHCFAgB,uBAAb,wVAwDEC,aAAe,SAAA7xD,IACR,EAAKnC,MAAM8uD,aAAe3sD,GAAK,EAAKnC,MAAMg0D,cAC7C,EAAKh0D,MAAMg0D,aAAa,CACtBjV,UAAW17C,8CAAOlB,EAAE8xD,aACpBhV,QAAS57C,8CAAOlB,EAAE8xD,gBA5D1B,kEACE,WACE,OAA+B,IAA3B1lC,KAAKvuB,MAAMkI,KAAK5G,OACX,2DAAC,iDAAD,gFAIP,kEAAK4E,UAAWqoB,KAAKvuB,MAAMkG,UAA3B,sBACE,2DAAC,wCAAD,uBACE,2DAAC,wCAAD,CACEgC,KAAMqmB,KAAKvuB,MAAMkI,KACjBgsD,OAAQ,CAAE/8B,IAAK,GAAIg9B,MAAO,EAAG98B,KAAM,EAAG+8B,OAAQ,IAC9CztC,QAAS4H,KAAKylC,aAHhB,sBAKE,yFACE,6EAAgBpyD,GAAG,WAAWyyD,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAtD,sBACE,mEAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,IAAnD,uBACA,mEAAMF,OAAO,OAAOC,UAAU,UAAUC,YAAa,EAArD,yBAGJ,yFACE,6EAAgB/yD,GAAG,cAAcyyD,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAzD,sBACE,mEAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,EAAnD,uBACA,mEAAMF,OAAO,KAAKC,UAAU,UAAUC,YAAa,EAAnD,uBACA,mEAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,EAApD,uBACA,mEAAMF,OAAO,OAAOC,UAAU,UAAUC,YAAa,EAArD,yBAGJ,2DAAC,wCAAD,CACEC,QAAQ,OACRC,UAAU,EACVC,UAAU,EACV3zB,SAAS,mBACT4zB,KAAM,2DAAC,2CAAD,wBALR,uBAOA,2DAAC,wCAAD,CACE7zB,QAAS,2DAAC,2CAAD,CAAe4tB,YAAavgC,KAAKvuB,MAAM8uD,YAAvC,uBACT2F,OAAQ,EACRntC,QAAQ,EACRihC,QAAS,CAAE/gC,MAAO,IAAKC,OAAQ,KAC/ByW,SAAU,CAAEsqB,EAAG,OAAQC,EAAG,GAL5B,uBAOA,2DAAC,wCAAD,CACEnmD,KAAK,WACLsyD,QAAQ,QACRI,OAAO,oBACPC,YAAa,EACbC,YAAa,EACb5M,KAAK,iBANP,4BA1CZ,mJAA4C5rB,6CAAMC,e,SAkEnCo3B,uBAAA,wC,2BAEfA,uBAAuBztD,UAAY,CACjCJ,UAAWimC,+CACXjkC,KAAMikC,8CAAgBoM,YAGxBwb,uBAAuBv8B,aAAe,CACpCtxB,UAAW,kB,qIA1EA6tD,uB,0sHCJAoB,uBAAb,gUACE,SAAsBC,GACpB,OAAIA,EAAUrzD,QAAUwsB,KAAKvuB,MAAM+B,QAFvC,oBASE,WACE,IAAKwsB,KAAKvuB,MAAMq8B,SAAW9N,KAAKvuB,MAAMsH,UAAYinB,KAAKvuB,MAAMsH,QAAQhG,OAAQ,OAAO,KAEpF,IAAMS,EAAQwsB,KAAKvuB,MAAM8uD,YACrBvgC,KAAKvuB,MAAMsH,QAAQ,GAAGA,QAAQ7G,KAC9B4C,8CAAOkrB,KAAKvuB,MAAMsH,QAAQ,GAAGA,QAAQ7G,MAAM6C,OAAO,eAEtD,OACE,kEAAK4C,UAAWqoB,KAAKvuB,MAAMkG,UAAWg4B,SAAU,CAAEsqB,EAAG,OAAQC,EAAG,SAAhE,sBACGl6B,KAAKvuB,MAAMsH,SACV,sHACE,kEAAKpB,UAAU,OAAf,sBAAuBnE,GACvB,kEAAKmE,UAAU,iBAAf,sBACE,kEAAKA,UAAU,WAAf,sBACE,kEAAKA,UAAU,QAAf,sBACE,2DAAC,0CAAD,CAAkBtE,GAAG,sBAArB,wBAEF,kEAAKsE,UAAU,gBAAf,sBAAgCqoB,KAAKvuB,MAAMsH,QAAQ,GAAGA,QAAQohB,YAEhE,kEAAKxiB,UAAU,WAAf,sBACE,kEAAKA,UAAU,QAAf,sBACE,2DAAC,0CAAD,CAAkBtE,GAAG,oBAArB,wBAEF,kEAAKsE,UAAU,cAAf,sBAA8BqoB,KAAKvuB,MAAMsH,QAAQ,GAAGA,QAAQkhB,UAE9D,kEAAKtiB,UAAU,WAAf,sBACE,kEAAKA,UAAU,QAAf,sBACE,2DAAC,0CAAD,CAAkBtE,GAAG,mBAArB,wBAEF,kEAAKsE,UAAU,cAAf,sBAA8BqoB,KAAKvuB,MAAMsH,QAAQ,GAAGA,QAAQqhB,cAtC5E,mJAA4C+T,6CAAM24B,W,SAgDnCF,uBAAA,wC,2BAEfA,uBAAuB7uD,UAAY,CACjCJ,UAAWimC,+CACX7kC,QAAS6kC,8CACT9P,OAAQ8P,6CACRpqC,MAAOoqC,gDAGTgpB,uBAAuB39B,aAAe,CACpCtxB,UAAW,iBACXoB,QAAS,GACT+0B,QAAQ,EACRt6B,MAAO,I,qIA7DIozD,uB,s/GCFAG,wBAAb,8TACE,WACE,OACE,gEAAGC,UAAS,oBAAehnC,KAAKvuB,MAAMwoD,EAA1B,YAA+Bj6B,KAAKvuB,MAAMyoD,EAA1C,KAAZ,sBACE,mEAAMviD,UAAU,QAAQsiD,EAAG,EAAGC,EAAG,EAAG+M,GAAI,GAAIC,WAAW,SAASnN,KAAK,0BAArE,sBAAgG/5B,KAAKvuB,MAAMsH,QAAQzH,UAJ3H,oJAA6C68B,6CAAMC,e,SAUpC24B,wBAAA,wC,2BAEfA,wBAAwBhvD,UAAY,CAClCkiD,EAAGrc,+CACHsc,EAAGtc,+CACH7kC,QAAS6kC,gDAGXmpB,wBAAwB99B,aAAe,CACrCgxB,EAAG,KACHC,EAAG,KACHnhD,QAAS,I,qIArBEguD,wB,w+GCAAI,mBAAb,qSACE,WACE,OACE,kEAAKxvD,UAAWqoB,KAAKvuB,MAAMkG,UAA3B,sBACGqoB,KAAKvuB,MAAM21D,SAJpB,+IAAwCj5B,6CAAMC,e,SAU/B+4B,mBAAA,wC,2BAEfA,mBAAmBpvD,UAAY,CAC7BJ,UAAWimC,+CACXwpB,MAAOxpB,+CAAiBoM,YAG1Bmd,mBAAmBl+B,aAAe,CAChCtxB,UAAW,c,qIAlBAwvD,mB,+5GCAAE,qBAAb,+SACE,WACE,OACE,kEAAK1vD,UAAWqoB,KAAKvuB,MAAMkG,UAA3B,sBACGqoB,KAAKvuB,MAAMqmD,UAJpB,iJAA0C3pB,6CAAMC,e,SAUjCi5B,qBAAA,wC,2BAEfA,qBAAqBtvD,UAAY,CAC/BJ,UAAWimC,+CACXka,OAAQla,+CAAiBoM,YAG3Bqd,qBAAqBp+B,aAAe,CAClCtxB,UAAW,gB,qIAlBA0vD,qB,y6GCAAC,qBAAb,+SACE,WACE,OAAO,kEAAK3vD,UAAWqoB,KAAKvuB,MAAMkG,UAA3B,sBAAuCqoB,KAAKvuB,MAAMkH,QAF7D,iJAA0Cw1B,6CAAMC,e,SAMjCk5B,qBAAA,wC,2BAEfA,qBAAqBvvD,UAAY,CAC/BJ,UAAWimC,+CACXjlC,KAAMilC,6CAAeoM,YAGvBsd,qBAAqBr+B,aAAe,CAClCtxB,UAAW,gB,qIAdA2vD,qB,wtHCGAC,qBAAb,mSACE,WACE,MAA4BvnC,KAAKvuB,MAAzBH,EAAR,EAAQA,MAAOqC,EAAf,EAAeA,SAEf,OACE,sHACE,kEAAKgE,UAAU,cAAf,sBACE,2DAAC,iEAAD,yBAEF,2DAAC,2DAAD,CACEA,UAAU,yBACVy5B,YAAY,SACZ9/B,MAAOA,EACPqC,SAAUA,EACVswD,WAAY,CACVtsD,UAAW,oBANf,0BATR,iJAA0Cy2B,kD,SAuB3Bm5B,qBAAA,wC,2BAEfA,qBAAqBxvD,UAAY,CAC/BpE,SAAUiqC,6CAAeoM,WACzB14C,MAAOssC,+CAAiBoM,Y,qIA3Bbud,qB,wjICKAC,kBAAb,4HACE,2BAAY/1D,GAAO,sDACjB,mBAAMA,IA6DRg2D,aAAe,WACb,GAAI,EAAKh2D,MAAMiC,SACb,OAAO,EAET,EAAKynC,UAAS,SAAAmoB,GAAS,MAAK,CAC1BoE,gBAAiBpE,EAAUoE,oBAnEZ,EAuEnBC,iBAAmB,SAAAzqC,GACb,EAAK0qC,UAAUrc,SAAW,EAAKqc,UAAUrc,QAAQsc,SAAS3qC,EAAMtI,SAIpE,EAAKumB,SAAS,CAAEusB,gBAAgB,KA5Ef,EA+EnBI,gBAAkB,SAAAC,GAChB,EAAKt2D,MAAMsrB,SAASgrC,EAAW,EAAKt2D,MAAMw2B,MAAM8/B,IAChD,EAAK5sB,SAAS,CAAEusB,gBAAgB,KA9EhC,EAAKj8C,MAAQ,CACXi8C,gBAAgB,GAGlB,EAAKE,UAAYz5B,6CAAM65B,YAPN,EADrB,sEAWE,WACMhoC,KAAKvuB,MAAMi2D,gBACb1nC,KAAKmb,SAAS,CAAEusB,gBAAgB,MAbtC,oBAiBE,WAAS,IAEHO,EAFG,OACChgC,EAAUjI,KAAKvuB,MAAfw2B,MAMR,OAHIjI,KAAK4nC,WAAa5nC,KAAK4nC,UAAUrc,SAAWvrB,KAAK4nC,UAAUrc,QAAQsZ,cACrEoD,EAAcjoC,KAAK4nC,UAAUrc,QAAQsZ,aAGrC,sHACG7kC,KAAKvuB,MAAMmjB,OACV,CAAEszC,OAAQloC,KAAKvU,MAAMi8C,eAAgBx2D,IAAK8uB,KAAK4nC,WAC/C,CAAEt1B,OAAQtS,KAAKynC,eAEhBx/B,GACC,2DAAC,yDAAD,CACEvP,KAAMsH,KAAKvU,MAAMi8C,eACjBS,SAAUnoC,KAAK4nC,UAAUrc,QACzB6c,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAThB,sBAYE,2DAAC,mEAAD,CAAmBE,YAAaxoC,KAAK2nC,iBAArC,sBACE,2DAAC,0DAAD,CAAUhwD,UAAU,0BAA0Bsc,MAAO,CAAEgF,MAAOgvC,GAA9D,sBACGhgC,EAAM1vB,KAAI,SAACgH,EAAM9G,GAAP,OACT,2DAAC,0DAAD,CACEd,UAAWC,kDAAW,GAAI,CAAElE,SAAU6L,EAAK7L,WAC3CgF,IAAKD,EACL2f,QAAS,kBAAM,EAAK0vC,gBAAgBrvD,IAHtC,sBAKG8G,EAAK+c,MAAQ,2DAAC,8DAAD,CAAc3kB,UAAU,OAAxB,sBAAgC4H,EAAK+c,MAClD/c,EAAKrN,eApD1B,8IAAuCi8B,6CAAMC,e,SAsF9Bo5B,kBAAA,wC,2BAEfA,kBAAkBzvD,UAAY,CAC5BglB,SAAU6gB,6CACVhpB,OAAQgpB,6CACR3V,MAAO2V,8CACP8pB,eAAgB9pB,8CAGlB4pB,kBAAkBv+B,aAAe,CAC/BlM,SAAU,aACVkL,MAAO,GACPrT,OAAQ,SAACxiB,EAAMuY,GAAP,OACN,2DAAC,wDAAD,CAAQzZ,IAAKkB,EAAKlB,IAAKknB,QAASzN,EAAQ2nB,OAAxC,sBACGlgC,EAAK81D,OAAS,QAAU,aAG7BR,gBAAgB,G,qIAvGLF,kB,2uCCPAiB,EAAsBx3D,sBAAW,WAAuCC,GAAvC,IAAGI,EAAH,EAAGA,MAAOgrB,EAAV,EAAUA,KAAM5oB,EAAhB,EAAgBA,SAAa4xB,EAA7B,cAC5C,yBACEp0B,IAAKA,EACLyG,UAAWC,IAAW,cAAe,CAAElE,WAAUo6B,OAAQx8B,EAAMyB,SAFjE,sBAIIupB,GAAQ,yBAAK3kB,UAAU,OAAf,sBAAuB2kB,GACjC,6BACE3kB,UAAU,QACV5D,KAAK,OACLzC,MAAOA,GACHg0B,EAJN,6BASJmjC,EAAoB1wD,UAAY,CAC9BukB,KAAMshB,IAAU3lC,KAChB3G,MAAOssC,IAAU9f,OACjBpqB,SAAUkqC,IAAUxlC,MAGtBqwD,EAAoBx/B,aAAe,CACjC3M,KAAM,KACNhrB,MAAO,GACPoC,UAAU,G,UAGG+0D,G,6FA3BFA,E,s8ICGAC,0BAAb,4IACE,mCAAYj3D,GAAO,8DACjB,mBAAMA,IAEDga,MAAQ,CACXk9C,SAAS,GAJM,EADrB,mEASE,WAAS,WACP,EAA0C3oC,KAAKvuB,MAAvC8D,EAAR,EAAQA,KAAMqzD,EAAd,EAAcA,aAAiBtjC,EAA/B,sCAEA,OACE,kEAAK3tB,UAAU,wBAAf,sBACE,2DAAC,0DAAD,UACEpC,KAAMA,EACNqzD,aAAcA,EACdD,QAAS3oC,KAAKvU,MAAMk9C,QACpBE,cAAe,gBAAGF,EAAH,EAAGA,QAAH,OAAiB,EAAKxtB,SAAS,CAAEwtB,aAChDt1D,GAAG,cACHy1D,eAAgB,EAChBC,gBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMjqD,KAAMkqD,uCAAZ,wBAGJ53B,YAAY,cACZ63B,eAAgB,kBAAM,GACtB52B,UAAQ,EACR62B,4BAA0B,EAC1BC,cAAc,cAEdC,QACE,kEAAKzxD,UAAU,2aAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMuqD,uCAAgBh0C,KAAM,EAAlC,yBAINi0C,QACE,kEAAK3xD,UAAU,6aAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMyqD,uCAAiBl0C,KAAM,EAAnC,0BAIFiQ,EAhCN,4BAdR,sJAA+C6I,6CAAMC,eAqDrDs6B,0BAA0B3wD,UAAY,CACpCxC,KAAMqoC,+CACNgrB,aAAchrB,6CAAeoM,YAG/B0e,0BAA0Bz/B,aAAe,CACvC1zB,KAAM,M,aAGOmzD,0BAAA,wC,gKA9DFA,0B,qgJCIAc,gBAAb,4TAiHEC,kBAAoB,SAAA9wD,GAAI,OACtB,kEAAKhB,UAAU,sBAAf,sBACE,kEAAKA,UAAU,cAAf,sBAA8BgB,EAAKpD,UAnHzC,2DACE,WAAS,WACP,OACE,kEAAKoC,UAAU,wBAAf,sBACE,2DAAC,kEAAD,CACE+xD,gBAAgB,OAChB5F,WAAW,EACX6F,OAAO,EACPt3B,UAAQ,EACRu3B,gBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM9qD,KAAM+qD,uCAAZ,wBAGJC,gBAAiB,KACjBf,gBAAiB,KACjBr1D,UAAU,EACVy1D,cAAc,aACdY,mBAAmB,EACnBC,UAAU,UACVC,uBAAuB,WACvBC,iBAAkB,EAClBC,eAAgB,KAChBC,iBAAkBt1D,gDAClBu1D,oBAAqB,KACrBC,aAAc,kBAAM,GACpBC,iBAAkB,kBAAM,GACxBtB,eAAgB,kBAAM,GACtBuB,OAAO,EACPC,sBAAsB,EACtBC,cAAe,EACfC,YAAY,YACZvB,QACE,kEAAKzxD,UAAU,2aAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMuqD,uCAAgBh0C,KAAM,EAAlC,yBAINi0C,QACE,kEAAK3xD,UAAU,6aAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMyqD,uCAAiBl0C,KAAM,EAAnC,yBAINu1C,YAAY,iBACZ9B,eAAgB,EAChBjkB,QAAS,kBAAM,GACfgmB,iBAAkB,kBAAM,GACxBC,iBAAkB,kBAAM,GACxBC,YAAY,aACZC,QAAS,CACPC,cAAe,WACfC,uBAAwB,aACxBC,yBAA0B,aAC1BC,WAAY,cACZC,gBAAiB,QACjBC,eAAgB,aAChBC,wBAAyB,aACzBC,0BAA2B,aAC3BC,kBAAmB,aACnBC,SAAU,YACVC,OAAQ,aACRC,eAAgB,sEAChB1C,2BAA4B,6BAC5B2C,QAAS,oBACTC,gBAAiB,4CACjBC,gBAAiB,iDACjBC,uCACE,mJACFC,sCACE,kJACFC,kBAAmB,qBACnBC,oBAAqB,4BACrBC,kBAAmB,uDACnBC,oBAAqB,iBACrBC,mBAAoB,qDACpBC,6BAA8B,yCAC9BC,cAAe,mBACfC,eAAgB,6BAChBC,aAAc,gBACdC,mBAAoB,kCACpBC,gBAAiB,aACjBC,kBAAmB,4BACnBC,2BAA4B,qCAC5BC,iBAAkB,0BAEpBC,SAAS,EACTC,uBAAmBp6D,EACnB42D,kBAAmB,SAAA9wD,GAAI,OAAI,EAAK8wD,kBAAkB9wD,IAClDu0D,gBAAiB,KACjBC,0BAA0B,EAC1B57D,UAAU,EACV67D,yBAAyB,GACzBC,gBAAgB,EAChBC,sBAAsB,EACtBC,OAAO,EACPC,YAAY,YACZC,yBAAyB,aACzBC,iBAAkB,kBAAM,GACxBC,sBAAsB,EACtBC,YAAY,EACZC,cAAe7tC,KAAKvuB,MAAMo8D,cAC1Bnd,QAAS1wB,KAAKvuB,MAAMi/C,QACpBF,UAAWxwB,KAAKvuB,MAAM++C,UACtBsd,aAAc,KACd5E,4BAA0B,EAvG5B,0BAJR,4IAAqC/6B,6CAAMC,e,2BAwH3Co7B,gBAAgBzxD,UAAY,CAC1By4C,UAAW5S,+CAAiBoM,WAC5B0G,QAAS9S,+CAAiBoM,WAC1B6jB,cAAejwB,6CAAeoM,Y,oIA3HnBwf,gB,2sJCcAuE,WAAb,wSAaEC,kBAAoB,SAAA1Z,GAAI,OACtBA,EAAK/7C,KAAI,SAACg8C,EAAK97C,GAAN,OACP,2DAAC,gDAAD,CAAMC,IAAKD,EAAOulD,GAAE,+BAA0BzJ,EAAIl7C,IAAI,SAAtD,sBACE,kEAAK1B,UAAU,iBAAf,sBACE,2DAAC,kEAAD,CAAc+lB,UAAU,eAAe5E,MAAOy7B,EAAIl7C,IAAI,UAAU6lD,cAAhE,sBACE,kEAAKvnD,UAAU,uBAAf,sBAAuC,EAAK8sD,UAAUlQ,EAAIl7C,IAAI,aAEhE,kEAAK1B,UAAU,cAAf,sBACE,2DAAC,kEAAD,CACE+lB,UAAU,eACV5E,MACE,sHACE,qGAAgBy7B,EAAIl7C,IAAI,YACvBk7C,EAAIl7C,IAAI,aAAe,mGAAck7C,EAAIl7C,IAAI,cALpD,sBASE,kEAAK1B,UAAU,YAAf,sBAA4B,EAAK+sD,WAAWnQ,EAAIl7C,IAAI,cAGtD,kEAAK1B,UAAU,aAAf,sBACE,2DAAC,kEAAD,CAAkB+lB,UAAU,eAAe5E,MAAM,wBAAjD,sBACE,kEAAKnhB,UAAU,OAAf,sBACE,2DAAC,mEAAD,wBACC7C,8CAAOy/C,EAAIl7C,IAAI,gBAAgBtE,OAAO,2BAG1Cw/C,EAAIl7C,IAAI,eACP,kEAAK1B,UAAU,SAAf,sBACE,2DAAC,gFAAD,wBACC48C,EAAIl7C,IAAI,eAGZk7C,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,SAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,QACJA,IAAI,SACL,kEAAK1B,UAAU,OAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMmyB,uCAAZ,wBAEDsjB,EACEl7C,IAAI,eACJA,IAAI,QACJA,IAAI,SAGZk7C,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,UAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,SACJA,IAAI,iBACL,kEAAK1B,UAAU,SAAf,sBACE,2DAAC,kEAAD,wBACC48C,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,UAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,SACJA,IAAI,iBAGdk7C,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,SAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,QACJA,IAAI,qBACPk7C,EACGl7C,IAAI,eACJA,IAAI,QACJA,IAAI,oBACJA,IAAI,aACL,kEAAK1B,UAAU,WAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMugC,uCAAZ,wBAEDkV,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,SAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,QACJA,IAAI,oBACJA,IAAI,qBAnG7B,EA4GEorD,UAAY,SAAAnpD,GACV,OAAQA,GACN,IAAK,YACH,OACE,kEAAK3D,UAAU,uBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMmvD,wCAAZ,yBAIR,IAAK,YACH,OACE,kEAAKt2D,UAAU,uBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMovD,uCAAZ,yBAIR,IAAK,YACH,OACE,kEAAKv2D,UAAU,uBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMqvD,uCAAZ,yBAIR,IAAK,UACH,OACE,kEAAKx2D,UAAU,qBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMsvD,wCAAZ,yBAIR,IAAK,UACH,OACE,kEAAKz2D,UAAU,qBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMuvD,wCAAZ,yBAIR,IAAK,SACH,OACE,kEAAK12D,UAAU,oBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMwvD,uCAAZ,yBAIR,IAAK,SACH,OACE,kEAAK32D,UAAU,oBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMyvD,uCAAZ,yBAIR,QACE,MAAO,KAvKf,EA2KE7J,WAAa,SAAA8J,GAGX,IAFA,IAAMzJ,EAAgB,GAChB7yD,EAAOs8D,EAAQ51D,MAAM,KAClB6gB,EAAI,EAAGA,EAAIvnB,EAAKa,OAAQ0mB,IAC3BA,EAAIvnB,EAAKa,OAAS,EACpBgyD,EAAc7kD,KACZ,mEAAMxH,IAAK+gB,EAAX,sBACE,mEAAM9hB,UAAU,OAAhB,sBAAwBzF,EAAKunB,IAD/B,MAKFsrC,EAAc7kD,KACZ,mEAAMxH,IAAK+gB,EAAG9hB,UAAU,OAAxB,sBACGzF,EAAKunB,KAMd,OAAOsrC,GA9LX,sDACE,WACE,MAA6B/kC,KAAKvuB,MAA1B6iD,EAAR,EAAQA,KAAMma,EAAd,EAAcA,WAEd,OAAIna,GAAsB,IAAdA,EAAKj/B,KACXo5C,EACK,uHAEF,2DAAC,kDAAD,4CAEF,sHAAGzuC,KAAKguC,kBAAkB1Z,MAVrC,uIAAgCnmB,6CAAMC,eAkMtC2/B,WAAWh2D,UAAY,CACrBu8C,KAAMvP,0DAAU,CAAC/b,8CAAO3Y,kD,aAGX09C,WAAA,wC,gKAtMFA,W,4oBCxBPz1B,EAAUC,0BAET,SAASC,EAAT,GAAqC,IAAnBlnC,EAAmB,EAAnBA,MAAOoG,EAAY,EAAZA,SAC9B,OAAO,kBAAC4gC,EAAQG,SAAT,CAAkBnnC,MAAOA,GAAQoG,GAQ1C,SAASghC,EAAT,GAAmC,IAAnBpnC,EAAmB,EAAnBA,MAAOoG,EAAY,EAAZA,SAGrB,OAFqBihC,qBAAWL,KAEXhnC,EACZ,KAGFoG,EAZT8gC,EAAOzgC,UAAY,CACjBzG,MAAOo9D,MACPh3D,SAAUO,Q,EAGHygC,E,4BAUTA,EAAK3gC,UAAY,CACfzG,MAAOo9D,MACPh3D,SAAUO,QAGZugC,EAAOE,KAAOA,E,UAECF,G,6FA5BTF,E,yEAEUE,E,wEASPE,E,4lBCHIi2B,EAAQ,SAAC,GAA+D,IAA7DhjC,EAA6D,EAA7DA,QAASj0B,EAAoD,EAApDA,SAAUk3D,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,WAAYl3D,EAAgB,EAAhBA,UACnE,OACE,kBAAC,IAAD,CAAUm3D,cAAY,EAACn3D,UAAWA,EAAlC,sBACE,kBAAC,IAAD,CAAWA,UAAU,cAArB,sBACE,kBAAC,IAAD,uBACGg0B,EAAQpzB,IAAIw2D,EAAWH,EAAcC,MAG1C,kBAAC,IAAD,uBACGn3D,KAMHq3D,EAAa,SAACH,EAAcC,GAAf,OAA8B,SAACG,EAAQv2D,GAAT,OAC/C,kBAAC,IAAD,CACEC,IAAG,wBAAmBD,GACtBw2D,MAAOD,EAAOC,MACdC,QAASF,EAAOE,QAChBC,gBAAeP,GAAeA,EAAaz9C,MAC3CgI,QAAS61C,EAAO71C,QALlB,sBAOG61C,EAAO59C,SACN,kBAAC,IAAD,CACE0c,OAAQ8gC,EAAax9C,UAAY49C,EAAO59C,QACxCg+C,UAAWR,EAAaz9C,MACxBiH,QAASy2C,EAAWG,EAAO59C,QAAgC,QAAvBw9C,EAAaz9C,MAAkB,OAAS,OAH9E,sBAKG69C,EAAOtkB,UAAYskB,EAAOtkB,YAAcskB,EAAOx7D,QAGlDw7D,EAAO59C,UACP49C,EAAOtkB,UAAYskB,EAAOtkB,YAAcskB,EAAOx7D,UAKrDm7D,EAAMU,IAAMC,IACZX,EAAMY,KAAOC,IAEbb,EAAM52D,UAAY,CAChB4zB,QAASiS,IAAU5U,MAAMghB,WACzB4kB,aAAchxB,IAAU/f,MAAM,CAC5B1M,MAAOysB,IAAU9f,OACjB1M,QAASwsB,IAAU9f,SAErB+wC,WAAYjxB,IAAU7f,O,6FA/CX4wC,E,qEAePI,E,skGCnBOU,WAAb,wQACE,WACEzvC,KAAKvuB,MAAMylD,WAFf,oBAKE,WACE,OACE,2DAAC,kDAAD,CACEp+B,MAAM,uBACNrK,WAAS,GAET,0EAXR,uIAAgC0f,6CAAMC,eAAzBqhC,WAgBJ3wD,KAAO,UAGhB2wD,WAAW13D,UAAY,CACrBm/C,OAAQtZ,6CAAeoM,YAGlB,IAAM+Y,mBAAqB,SAAC/pD,GAAD,MAAe,CAC/Ck+C,OAAQ,SAACv9C,GAAD,OAAUX,EAAS2R,qDAAQusC,OAAO7G,gBAAgB12C,O,SAG7CmtB,mDAAQ,KAAMi8B,mBAAdj8B,CAAkC2oC,Y,2BAAlC,+B,qIA3BFA,W,0FAuBA1M,mB,82JCKA2M,WAAb,8GACE,oBAAYj+D,GAAO,+CACjB,mBAAMA,IAkJRk+D,aAAe,SAAAr0D,GACb,IAAQg5C,EAAS,EAAK7iD,MAAd6iD,KAER,GAAe,QAAXh5C,EACF,OAAiC,IAA7Bg5C,EAAKj7C,IAAI,WAAWgc,KACf,2DAAC,kDAAD,8DAIP,sHACGi/B,EACEj7C,IAAI,WACJwG,MAAM,EAAG,IACTtH,KAAI,SAACgH,EAAM9G,GAAP,OACH,2DAAC,kDAAD,CAASC,IAAKD,EAAO87C,IAAKh1C,OAE7B+0C,EAAKj7C,IAAI,eAAiB,IACzB,2DAAC,wDAAD,CAAQ1B,UAAU,oCAChB,2DAAC,gDAAD,CAAMqmD,GAAG,SACP,2DAAC,0CAAD,CAAkB3qD,GAAG,+BAQjC,IAAMu8D,EAAoBtb,EAAKj7C,IAAI,WAAW4G,QAAO,SAAAs0C,GAAG,OAAIA,EAAIl7C,IAAI,YAAciC,KAAQ+Z,KAE1F,OAA0B,IAAtBu6C,EACK,2DAAC,kDAAD,8DAIP,sHACGtb,EACEj7C,IAAI,WACJ4G,QAAO,SAAAs0C,GAAG,OAAIA,EAAIl7C,IAAI,YAAciC,KACpCuE,MAAM,EAAG,IACTtH,KAAI,SAACgH,EAAM9G,GAAP,OACH,2DAAC,kDAAD,CAASC,IAAKD,EAAO87C,IAAKh1C,OAE7BqwD,EAAoB,IACnB,2DAAC,wDAAD,CAAQj4D,UAAU,oCAChB,2DAAC,gDAAD,CAAMqmD,GAAE,uBAAkB1iD,IACxB,2DAAC,0CAAD,CAAkBjI,GAAG,gCA7L/B,EAAKoY,MAAQ,CACXokD,MAAO,CACLrf,UAAW17C,8CAAO27C,KAAKh/C,EAAMy+C,cAAc72C,IAAI,cAC/Cq3C,QAAS57C,8CAAO27C,KAAKh/C,EAAMy+C,cAAc72C,IAAI,cAIjD,EAAKy2D,qBAAuB,EAAKA,qBAAqB30D,KAA1B,2BAVX,EADrB,+DAcE,WACE,IAAM6L,EAAOlS,8CACV27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAAY,cAC9CywC,KAAKh1C,8CAAO27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAAc,cAAe,QAE9E2mB,KAAKvuB,MAAM0+C,QAAQ,CACjBU,YAAa/7C,8CAAO27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,cAActE,OAAO,cAC3E+7C,OAAQ9pC,EAAO,EACfvN,UAAW,aAI2B,gBAAtCumB,KAAKvuB,MAAMs+D,eAAe5yD,SACY,WAAtC6iB,KAAKvuB,MAAMs+D,eAAe5yD,SAE1B6iB,KAAKvuB,MAAMu1B,QAAQ,aA7BzB,oBAiCE,WACE,IAAM0vB,EAAa12B,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,cACjCs9C,EAAS32B,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,UAEnC,GAAIq9C,GAAyB,WAAXC,IAAwB32B,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,YAC5D,OACE,sHACE,2DAAC,uDAAD,CAAQyf,MAAM,cACd,2DAAC,yDAAD,KACE,2DAAC,yDAAD,KACE,2DAAC,yDAAMnB,QAAP,KACE,2DAAC,yEAAD,CAAQ5jB,KAAK,QACX,2DAACyoB,SAAD,gHAYd,IAAMxV,EAAOlS,8CACV27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAAY,cAC9CywC,KAAKh1C,8CAAO27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAAc,cAAe,QAExE22D,EAAcvwC,KAAKwwC,MAAMluD,SAASie,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,eAAgB,KAAO2N,EAAO,IAE1F,OACE,kEAAKrP,UAAWqoB,KAAKvuB,MAAMkG,WACzB,2DAAC,uDAAD,KACE,iEAAIA,UAAU,gBAAd,aACA,2DAAC,kDAAD,CACEk2D,cAAe7tC,KAAK8vC,qBACpBtf,UAAWxwB,KAAKvU,MAAMokD,MAAMrf,UAC5BE,QAAS1wB,KAAKvU,MAAMokD,MAAMnf,WAG9B,2DAAC,4CAAD,MACA,2DAAC,4CAAD,MACA,kEAAK/4C,UAAU,qBACb,kEAAKA,UAAU,kBACZqoB,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,YACnB,2DAAC,kDAAD,KACE,2DAAC,0DAAD,sBAGF,sHACE,kEAAK1B,UAAU,eAAetE,GAAG,gBAC9B2sB,KAAK2vC,aAAa3vC,KAAKvuB,MAAMy+D,sBAMtC,kEAAKv4D,UAAU,gBACb,kEAAKA,UAAU,sBACZqoB,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,YACnB,2DAAC,kDAAD,KACE,2DAAC,0DAAD,mCAGF,sHACE,kEAAK1B,UAAU,mBACb,2DAAC,kDAAD,CACEyvD,MACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMtoD,KAAMqxD,4CAIlB,2DAAC,kDAAD,CAAarY,OAAQkY,IACrB,2DAAC,kDAAD,CACEr3D,KACE,sHACE,2DAAC,0CAAD,CAAkBtF,GAAG,mBADvB,IAEE,2DAAC,0CAAD,CAAkBA,GAAG,sBAK7B,kEAAKsE,UAAU,oBACb,2DAAC,kDAAD,CACEgC,KAAM0mD,4DAAgBrgC,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,WAAW+hB,OAAQ,CAC3DolC,YAAa1rD,8CAAO27C,KAClBzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAC7B,cAEFq3C,QAAS57C,8CAAO27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAAY,gBAEhEknD,YACEzrD,8CACG27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAAc,cAChDtE,OAAO,gBACVD,8CACG27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAAY,cAC9CtE,OAAO,cAEZ0wD,aAAczlC,KAAK8vC,0BAM7B,kEAAKn4D,UAAU,2BACb,2DAAC,qEAAD,YA5Id,kCAyME,SAAqBk4D,GAQnB,GAPA7vC,KAAKmb,SAAS,CACZ00B,MAAO,CACLrf,UAAWqf,EAAMrf,UACjBE,QAASmf,EAAMnf,WAIfmf,EAAMrf,WAAaqf,EAAMnf,QAAS,CACpC1wB,KAAKvuB,MAAMqlD,iBAAiB+Y,GAE5B,IAAMljB,EAAQ73C,8CAAO+6D,EAAMrf,UAAUz7C,OAAO,eACtC47C,EAAM77C,8CAAO+6D,EAAMnf,QAAQ37C,OAAO,eAClCiS,EAAOjF,SAASjN,8CAAO03C,SAASmE,EAAI7G,KAAK6C,IAAQiE,SAAU,IAEjE5wB,KAAKvuB,MAAM0+C,QAAQ,CACjBU,YAAa/7C,8CAAO+6D,EAAMrf,WAAWz7C,OAAO,cAC5C+7C,OAAQ9pC,EAAO,EACfvN,UAAW,gBA3NnB,uIAAgC00B,6CAAMC,eAiOtCshC,WAAW33D,UAAY,CACrBJ,UAAWimC,+CACXsS,cAAetS,+CAAiBoM,WAChC8M,iBAAkBlZ,6CAAeoM,WACjCsK,KAAM1W,+CAAiBoM,WACvBmG,QAASvS,6CAAeoM,YAG1B0lB,WAAWzmC,aAAe,CACxBtxB,UAAW,aAGN,IAAMmrD,gBAAkB,SAAAr3C,GAAK,MAAK,CACvCykC,cAAe1vB,2DAAsB/U,GACrC6oC,KAAMl0B,2DAAa3U,GACnBykD,kBAAmBryB,qDAAqBpyB,GACxCskD,eAAgBtkD,EAAMme,SAASa,eAGpBs4B,mBAAqB,SAAA/pD,GAAQ,MAAK,CAC7Cm3C,QAAS,SAAAx2C,GAAI,OAAIX,EAAS2R,qDAAQwlC,QAAQE,gBAAgB12C,KAC1Dm9C,iBAAkB,SAAAn9C,GAAI,OAAIX,EAAS2R,qDAAQmsC,iBAAiBzG,gBAAgB12C,KAC5EqtB,QAAS,SAAArtB,GAAI,OAAIX,EAAS+Q,yDAAYpQ,O,SAGzBmtB,mDAAQg8B,gBAAiBC,mBAAzBj8B,CAA6C4oC,Y,2BAE5D,SAASlzC,SAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,iEACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,SAGZllB,GAfQ,+B,qIA1PFg4D,W,+EA6OA5M,gB,oFAOAC,mB,uFAQJvmC,S,wtCCxRI6K,EAAS,SAAC,GAAyC,IAAvC3vB,EAAuC,EAAvCA,SAAU04D,EAA6B,EAA7BA,OAAQtnC,EAAqB,EAArBA,KAASr3B,EAAY,OAC9D,OACE,yBAAKkG,UAAWC,IAAW,SAAU,CAAEw4D,SAAQtnC,SAA/C,sBACE,kBAAC,IAAD,KAAsBr3B,EAAtB,yBACCiG,GAAY,yBAAKC,UAAU,cAAf,sBAA8BD,KAKjD2vB,EAAOtvB,UAAY,CACjBL,SAAUO,S,4FAVCovB,E,6dCFAD,EAAkB,SAAC,GAAiB,IAAf1vB,EAAe,EAAfA,SAChC,OACE,yBAAKC,UAAU,SAAf,sBACGD,GAAY,yBAAKC,UAAU,cAAf,sBAA8BD,GAC3C,yBAAKC,UAAU,cAAf,sBACE,kBAAC,IAAD,CAAgBwhB,QAAQ,gBAAxB,2B,4FALKiO,E,8oCCGAipC,EAAQ,SAAC,GAAD,I,MAAGlhB,EAAH,EAAGA,OAAQmhB,EAAX,EAAWA,KAAM54D,EAAjB,EAAiBA,SAAa00C,EAA9B,cACnB,2BAAKz0C,UAAWC,IAAW,S,EAAD,CAAYu3C,U,EAASmhB,E,EAAOA,E,kGAAalkB,EAAnE,wBACG10C,IAIL24D,EAAMt4D,UAAY,CAChBL,SAAUO,OACVk3C,OAAQ/2C,OACRk4D,KAAMt4D,gBAAM,CAAC,SAAU,SAGzBq4D,EAAMpnC,aAAe,CACnBkmB,QAAQ,EACRmhB,KAAM,UAGD,IAAMC,EAAc,SAAC,GAAD,IAAG74D,EAAH,EAAGA,SAAa00C,EAAhB,cACzB,8BAAQz0C,UAAU,gBAAmBy0C,EAArC,wBACG10C,IAIL64D,EAAYx4D,UAAY,CACtBL,SAAUO,QAGL,IAAMu4D,EAAe,SAAC,GAA6B,IAA3B94D,EAA2B,EAA3BA,SAC7B,OADwD,EAAjB6kB,WAGnC,kBAAC,IAAD,CAAU5kB,UAAU,gBAAgBwhB,QAAQ,QAA5C,sBACGzhB,GAKA,0BAAMC,UAAU,gBAAhB,sBAAiCD,IAG1C84D,EAAaz4D,UAAY,CACvBwkB,WAAYnkB,OACZV,SAAUO,QAGZu4D,EAAavnC,aAAe,CAC1B1M,YAAY,GAGP,IAAMk0C,EAAc,SAAC,GAAD,IAAG/4D,EAAH,EAAGA,SAAH,OAAkB,4BAAQC,UAAU,eAAlB,sBAAkCD,IAE/E+4D,EAAY14D,UAAY,CACtBL,SAAUO,QAGL,IAAMy4D,EAAe,SAAC,GAAiB,IAAfh5D,EAAe,EAAfA,SAC7B,OAAO,yBAAKC,UAAU,YAAf,sBAA4BD,IAGrCg5D,EAAa34D,UAAY,CACvBL,SAAUO,QAGL,IAAM04D,EAAgB,SAAC,GAAiB,IAAfj5D,EAAe,EAAfA,SAC9B,OAAO,yBAAKC,UAAU,aAAf,sBAA6BD,IAGtCi5D,EAAc54D,UAAY,CACxBL,SAAUO,QAGZw4D,EAAYh0C,KAAOi0C,EACnBD,EAAYp3C,MAAQs3C,EAEb,I,IAAMC,EAAa,SAAC,GAAD,IAAGl5D,EAAH,EAAGA,SAAa00C,EAAhB,cACxB,0BAAIz0C,UAAU,eAAkBy0C,EAAhC,wBACG10C,IAILk5D,EAAW74D,UAAY,CACrBL,SAAUO,QAGZo4D,EAAM54C,OAAS84C,EACfF,EAAM34C,MAAQk5C,EACdP,EAAM14C,QAAU64C,EAChBH,EAAMj3C,OAASq3C,G,6FAtFFJ,E,4EAiBAE,E,kFAUAC,E,mFAqBAC,E,kFAMAC,E,mFAQAC,E,oFAWAC,E,8eC5EAC,EAAO,SAAC,GAAD,IAAGP,EAAH,EAAGA,KAAMQ,EAAT,EAASA,OAAQp5D,EAAjB,EAAiBA,SAAjB,OAClB,0BACEC,UAAWC,IAAW,YAAa,CAAE04D,OAAM,UAAWQ,IADxD,sBAGGp5D,IAILm5D,EAAK94D,UAAY,CACfL,SAAUO,OACVq4D,KAAMl4D,OACN04D,OAAQ14D,QAGVy4D,EAAK5nC,aAAe,CAClBqnC,MAAM,EACNQ,QAAQ,I,4FAhBGD,E,ieCCAE,EAAU,SAAC,GAAD,IAAGr5D,EAAH,EAAGA,SAAUs5D,EAAb,EAAaA,KAAb,OACrB,6BACEr5D,UAAWC,IAAW,gBAAiB,CACrCo5D,SAFJ,sBAKGt5D,IAILq5D,EAAQh5D,UAAY,CAClBL,SAAUO,OACV+4D,KAAM54D,QAGD,IAAM64D,EAAe,SAAC,GAAD,IAAGv5D,EAAH,EAAGA,SAAUma,EAAb,EAAaA,KAAb,OAC1B,oCACE,wBAAIla,UAAU,gBAAd,sBAA+BD,GAC9Bma,GAAQ,wBAAIla,UAAU,qBAAd,sBAAoCka,KAIjDo/C,EAAal5D,UAAY,CACvBL,SAAUO,OACV4Z,KAAM5Z,QAGD,IAAMi5D,EAAgB,SAAC,GAAD,IAAGx5D,EAAH,EAAGA,SAAH,OAC3B,oCACE,4BAAQC,UAAU,iBAAlB,sBAAoCD,KAIxCw5D,EAAcn5D,UAAY,CACxBL,SAAUO,QAGL,IAAMk5D,EAAc,SAAC,GAAD,IAAGz5D,EAAH,EAAGA,SAAH,OACzB,oCACE,wBAAIC,UAAU,qBAAd,sBAAoCD,KAIxCy5D,EAAYp5D,UAAY,CACtBL,SAAUO,QAGL,I,IAAMm5D,EAAiB,SAAC,GAAD,IAAG15D,EAAH,EAAGA,SAAH,OAC5B,oCACE,0BAAMC,UAAU,kBAAhB,sBAAmCD,KAIvCq5D,EAAQt5C,OAASy5C,EACjBH,EAAQp5C,QAAUy5C,EAClBL,EAAQr5C,MAAQu5C,EAChBF,EAAQM,KAAOF,G,6FAxDFJ,E,kFAeAE,E,uFAYAC,E,wFAUAC,E,sFAUAC,E,qlDC9CAE,EAAsB,SAAC,GAA0B,IAAxB55D,EAAwB,EAAxBA,SAAUyhB,EAAc,EAAdA,QAC9C,IAAgCznB,oBAAS,GAAzC,GAAOy2B,EAAP,KAAiBC,EAAjB,KACMC,EAAU1T,uBACd,SAAAuI,GACMA,EAAMoL,cAAcC,UACjBJ,GACHC,GAAY,GAELD,GACTC,GAAY,GAGdI,EAAStL,KAEX,CAACiL,IAGH,OACE,yBACExwB,UAAWC,IAAW,uBAAD,GACnBuwB,YACChP,EAAUA,IAHf,sBAMGzhB,EAAS,CACRC,UAAWC,IAAW,qBAAD,KAClBuhB,EAAUA,IAEbkP,cAaR,SAASG,EAAStL,GACDA,EAAMoL,cAEdK,SAAS,CACdC,IAAK1L,EAAM2L,OACXC,KAAM5L,EAAM6L,S,EA9CHuoC,E,kEAkCbA,EAAoBv5D,UAAY,CAC9BL,SAAUqmB,OACV5E,QAASnhB,gBAAM,CAAC,MAAO,QAAS,eAGlCs5D,EAAoBroC,aAAe,I,6FAvCtBqoC,E,sHAyCJ9oC,E,okCC5CI+oC,EAAS,SAAC,GAA0B,IAAxB75D,EAAwB,EAAxBA,SAAa00C,EAAW,OAC/C,OACE,2BAAKz0C,UAAU,UAAay0C,EAA5B,wBACG10C,K,4FAHM65D,E,kkCCCAlC,EAAM,SAAC,GAAmC,IAAjC33D,EAAiC,EAAjCA,SAAUS,EAAuB,EAAvBA,QAAYi0C,EAAW,OACrD,OACE,2BAAKz0C,UAAWC,IAAW,MAAO,CAAEO,aAAgBi0C,EAApD,wBACG10C,K,4FAHM23D,E,ylHCUAmC,gBAAb,4TAmBEC,WAAa,SAAAnd,GAAQ,cACXxmB,EAAW,EAAKr8B,MAAhBq8B,OACF4jC,EAAQ,CACZC,UAAW,EACX5xC,UAAW,EACX6xC,UAAW,EACXC,QAAS,EACTC,OAAQ,GAQV,OANAJ,EAAMC,UAAN,UAAkBrd,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,cAAfA,EAAIj5C,iBAAzC,aAAkB,EAAgDvI,OAClE2+D,EAAM3xC,UAAN,UAAkBu0B,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,cAAfA,EAAIj5C,iBAAzC,aAAkB,EAAgDvI,OAClE2+D,EAAME,UAAN,UAAkBtd,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,cAAfA,EAAIj5C,iBAAzC,aAAkB,EAAgDvI,OAClE2+D,EAAMG,QAAN,UAAgBvd,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,YAAfA,EAAIj5C,iBAAvC,aAAgB,EAA8CvI,OAC9D2+D,EAAMI,OAAN,UAAexd,EAAKr0C,QAAO,SAAAs0C,GAAG,MAAmB,WAAfA,EAAIj5C,iBAAtC,aAAe,EAA6CvI,OAG1D,sHACE,2DAAC,2CAAD,CAAW2+D,MAAOA,EAAMC,UAAWr2D,OAAO,YAAYwyB,OAAQA,EAA9D,uBACA,2DAAC,2CAAD,CAAW4jC,MAAOA,EAAM3xC,UAAWzkB,OAAO,YAAYwyB,OAAQA,EAA9D,uBACA,2DAAC,2CAAD,CAAW4jC,MAAOA,EAAME,UAAWt2D,OAAO,YAAYwyB,OAAQA,EAA9D,uBACA,2DAAC,2CAAD,CAAW4jC,MAAOA,EAAMG,QAASv2D,OAAO,UAAUwyB,OAAQA,EAA1D,uBACA,2DAAC,2CAAD,CAAW4jC,MAAOA,EAAMI,OAAQx2D,OAAO,SAASwyB,OAAQA,EAAxD,yBAxCR,2DACE,WACE,MAA4B9N,KAAKvuB,MAAzBkG,EAAR,EAAQA,UAAW28C,EAAnB,EAAmBA,KACnB,OACE,2DAAC,uDAAD,CAAO38C,UAAWA,EAAlB,sBACE,2DAAC,2CAAD,wBACA,kEAAKA,UAAU,wBAAf,sBACG28C,EAAKj7C,IAAI,YACR,2DAAC,iDAAD,uBACE,2DAAC,yDAAD,CAAQ+2D,QAAM,EAAd,uCAGFpwC,KAAKyxC,WAAWnd,EAAKl5B,OAAOuX,aAZxC,4IAAqCxE,6CAAMC,eA8C3CojC,gBAAgBz5D,UAAY,CAC1BJ,UAAWimC,+CACX0W,KAAM1W,+CAAiBoM,YAGzBwnB,gBAAgBvoC,aAAe,CAC7BtxB,UAAW,oBAGN,IAAMmrD,gBAAkB,SAAAr3C,GAAK,MAAK,CACvC6oC,KAAMl0B,0DAAa3U,GACnBqiB,OAAQ+P,oDAAqBpyB,K,SAGhBqb,mDAAQg8B,gBAARh8B,CAAyB0qC,iB,2BAAzB,+B,qIA5DFA,gB,2GAuDA1O,gB,uvBCtDPjwC,EAAeC,aAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,KAES0+C,EAAS,WACpB,IAAMtlB,EAAUulB,YAAYC,KAU5B,OARAz/D,qBAAU,WAGR,OAFAqjD,IAAalJ,QAEN,WACLkJ,IAAajJ,UAEd,IAGD,yBAAKj1C,UAAU,0BAAf,sBACG80C,GACC,kBAAC55B,EAAD,CAAc6K,UAAU,eAAe5E,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,iBAArB,uBAA9C,sBACE,yBAAKsE,UAAU,iBAAf,sBACE,kBAAC,IAAD,2BAKJ80C,GACA,kBAAC55B,EAAD,CAAc6K,UAAU,eAAe5E,MAAO,kBAAC,IAAD,CAAkBzlB,GAAG,qBAArB,uBAA9C,sBACE,yBAAKsE,UAAU,qBAAf,sBACE,kBAAC,IAAD,CAAkBA,UAAU,cAA5B,2B,EAxBCo6D,E,uDACKC,S,6FAZZn/C,E,6GAWOk/C,E,mqICLAG,UAAb,oSAKEC,eAAiB,SAAA72D,GACX,EAAK7J,MAAM2gE,cAAgB92D,EAAO4jD,cACpC,EAAKztD,MAAM4gE,UAAU,OAErB,EAAK5gE,MAAM4gE,UAAU/2D,EAAO4jD,gBATlC,qDACE,WACE,OAAO,sHAAGl/B,KAAKsyC,mBAFnB,2BAaE,WAAgB,WACVh2C,EAAO,KACPhhB,EAAS,GACb,OAAQ0kB,KAAKvuB,MAAM6J,QACjB,IAAK,YACHghB,EACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAMmvD,wCAAZ,wBAGJ3yD,EAAS,YACT,MACF,IAAK,YACHghB,EACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAMovD,uCAAZ,wBAGJ5yD,EAAS,YACT,MACF,IAAK,YACHghB,EACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAMqvD,uCAAZ,wBAGJ7yD,EAAS,YACT,MACF,IAAK,UACHghB,EACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAMsvD,wCAAZ,wBAGJ9yD,EAAS,UACT,MACF,IAAK,SACHghB,EACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAMwvD,uCAAZ,wBAGJhzD,EAAS,SAOb,OAAIghB,EAEA,kEACE3kB,UAAWC,kDAAW,cAAD,OAAe0D,GAAU,CAC5CwyB,OAAQ9N,KAAKvuB,MAAM6J,SAAW0kB,KAAKvuB,MAAMq8B,SAE3CmT,KAAK,eACL7oB,QAAS,kBAAM,EAAK+5C,eAAe72D,IALrC,sBAOE,kEAAK3D,UAAU,SAAf,sBACE,kEAAKA,UAAU,OAAf,sBAAuB2kB,GACvB,kEAAK3kB,UAAU,QAAf,sBACGqoB,KAAKvuB,MAAMigE,MACX1xC,KAAKvuB,MAAM6J,SAAW0kB,KAAKvuB,MAAMq8B,QAChC,2DAAC,kEAAD,CAAcpQ,UAAU,QAAQ5E,MAAM,gBAAtC,sBACE,2DAAC,sEAAD,CAAiBnhB,UAAU,gBAA3B,0BAKR,kEAAKA,UAAU,SAAf,sBAAyBqoB,KAAKvuB,MAAM6J,SAKnC,OAvFX,sIAA+B6yB,6CAAMC,eA2FrC8jC,UAAUn6D,UAAY,CACpBuD,OAAQsiC,+CAAiBoM,WACzB0nB,MAAO9zB,+CAAiBoM,WACxBqoB,UAAWz0B,8CAGN,IAAMklB,gBAAkB,SAAAr3C,GAAK,MAAK,CACvC2mD,YAAav0B,6DAAqBpyB,KAGvBs3C,mBAAqB,SAAA/pD,GAAQ,MAAK,CAC7Cq5D,UAAW,SAAA/2D,GAAM,OAAItC,EAAS2R,uDAAQqrC,gBAAgBuc,cAAcj3D,O,SAGvDwrB,mDAAQg8B,gBAAiBC,mBAAzBj8B,CAA6CorC,W,2BAA7C,+B,qIAzGFA,U,+HAiGApP,gB,qIAIAC,mB,+zJCtGAyP,OAAb,sGACE,gBAAY/gE,GAAO,2CACjB,mBAAMA,IAQRghE,sBAAwBC,sDAAS,SAAAC,GAC3B,EAAKlnD,MAAMmnD,mBACb,EAAKC,iBAAiBF,KAEvB,KAbgB,EAgFnBE,iBAAmB,SAAAF,GACjB,IAAMG,EAAM,CACVC,YAAaJ,EACbl5D,UAAW,EACXu5D,KAAM,EACNniB,YAAa,aACbC,OAAQ,OAKV,EAAKr/C,MAAM4lD,WAAWyb,IA3FL,EA8FnBG,gBAAkB,SAACC,EAAeP,GAChC,GAAsB,aAAlBO,IAAiCP,EACnC,MAAO,CAAErwD,UAAW,GAAIovD,MAAO,GAEjC,GAAI,EAAKjgE,MAAM0hE,iBAAmB,EAAK1hE,MAAM0hE,gBAAgBpgE,OAAS,EAAG,CACvE,IAAMqgE,EAAU,EAAK3hE,MAAM0hE,gBAAgBlzD,QAAO,SAAAiW,GAAC,OAAIA,EAAEhkB,KAAKgU,SAASysD,MAEvE,MAAO,CAAErwD,UAAW8wD,EAAQvzD,MAAM,EAAG,GAAI6xD,MAAO0B,EAAQrgE,QAE1D,MAAO,CAAEuP,UAAW,GAAIovD,MAAO,IAvGd,EA0GnB2B,eAAiB,SAAAz/D,GACf,IAAM++D,EAAe/+D,EAAEghB,OAAOtjB,MAC9B,EAAK6pC,SAAS,CAAEm4B,WAAYX,IAExBA,EAAa5/D,OAAS,GAAK,EAAK0Y,MAAMmnD,kBACxC,EAAKz3B,SAAS,CAAEy3B,mBAAmB,KACF,IAAxBD,EAAa5/D,QAQb4/D,EAAa5/D,OAAS,KAP1B,EAAK0Y,MAAMmnD,kBAKd,EAAKH,sBAAsBE,GAJ3B,EAAKx3B,SAAS,CAAEy3B,mBAAmB,IAAQ,WACzC,EAAKC,iBAAiBF,QAnHX,EAoInBY,YAAc,WACZ,EAAKp4B,SAAS,CACZy3B,mBAAmB,EACnBU,WAAY,MApId,EAAK7nD,MAAQ,CACXmnD,mBAAmB,EACnBU,WAAY,IALG,EADrB,gDAgBE,WACE,MAMItzC,KAAKvuB,MALPkG,EADF,EACEA,UACA67D,EAFF,EAEEA,gBACAzD,EAHF,EAGEA,eACA0D,EAJF,EAIEA,gBACAC,EALF,EAKEA,cAEF,OACE,2DAAC,uDAAD,CACE/7D,UAAS,UAAKA,EAAL,YAAkBqoB,KAAKvU,MAAMmnD,kBAAoB,mBAAqB,GAAtE,cADX,sBAIE,2DAAC,kDAAD,CAAathE,MAAO0uB,KAAKvU,MAAM6nD,WAAY3/D,SAAUqsB,KAAKqzC,eAA1D,uBAECrzC,KAAKvU,MAAM6nD,WAAWvgE,OAAS,GAC9B,kEAAK4E,UAAU,eAAf,sBACE,2DAAC,iEAAD,CAAWygB,QAAS4H,KAAKuzC,YAAzB,wBAGHvzC,KAAKvU,MAAMmnD,mBACV,kEAAKj7D,UAAU,2BAAf,sBACE,2DAAC,4CAAD,CACEg8D,SAAS,OACTC,aAAcJ,EAAgBn6D,IAAI,eAClCs5B,QAAS6gC,EAAgBn6D,IAAI,WAC7BoV,UAAW+kD,EAAgBn6D,IAAI,YAC/Bw6D,iBAAkB,EAClBp3D,QAAS,CACPq3D,WAAY9zC,KAAKvU,MAAM6nD,YAP3B,uBAUA,2DAAC,4CAAD,CACEK,SAAS,YACTC,aACE5zC,KAAKizC,gBAAgBlD,EAAe5yD,QAAS6iB,KAAKvU,MAAM6nD,YAAY5B,MAEtE/+B,QACE3S,KAAKizC,gBAAgBlD,EAAe5yD,QAAS6iB,KAAKvU,MAAM6nD,YAAYhxD,UAEtEmM,UAAsC,aAA3BshD,EAAe5yD,QAC1B02D,iBAAkB,EAClBlB,aAAc3yC,KAAKvU,MAAM6nD,WACzB7oD,gBAAiBgpD,EACjBjpD,cAAekpD,EAZjB,uBAcA,kEAAK/7D,UAAU,gDAAf,sBACE,kEAAKA,UAAU,iBAAf,sBACE,2DAAC,kEAAD,yBAEF,kEAAKA,UAAU,UAAf,sBACE,2DAAC,0CAAD,CAAkBtE,GAAG,qCAArB,wBAEF,kEAAKsE,UAAU,4BAAf,sBACE,2DAAC,0DAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMyqD,uCAAZ,8BAvElB,mIAA4Bp7B,6CAAMC,eA6IlCokC,OAAOz6D,UAAY,CACjBJ,UAAWimC,+CACXyZ,WAAYzZ,6CAAeoM,WAC3BwpB,gBAAiB51B,+CAAiBoM,YAGpCwoB,OAAOvpC,aAAe,CACpBtxB,UAAW,oBAGN,IAAMmrD,gBAAkB,SAAAr3C,GAAK,kBAAK,CACvC+nD,gBAAiBlzC,0DAAqB7U,GACtCskD,eAAgBtkD,EAAMme,SAASa,aAC/B0oC,gBAAe,UAAE1nD,EAAMme,SAASjwB,YAAjB,iBAAE,EAAqBwD,eAAvB,iBAAE,EAA8BxD,YAAhC,iBAAE,EAAoCA,YAAtC,aAAE,EAA0C2I,YAGhDygD,mBAAqB,SAAA/pD,GAAQ,MAAK,CAC7Cq+C,WAAY,SAAA19C,GAAI,OAAIX,EAAS2R,oDAAQ0sC,WAAWhH,gBAAgB12C,KAChE85D,gBAAiB,SAAA95D,GAAI,OAAIX,EAASyR,yDAAgB9Q,KAClD+5D,cAAe,SAAA/5D,GAAI,OAAIX,EAASwR,yDAAc7Q,O,SAGjCmtB,mDAAQg8B,gBAAiBC,mBAAzBj8B,CAA6C0rC,Q,2BAA7C,+B,qIAnKFA,O,4GAuJA1P,gB,qHAMAC,mB,+qIClKAgR,uBAAb,wVA+DEC,uBAAyB,kBACvB,EAAKviE,MAAMkhC,QAAQp6B,KAAI,SAAC4E,EAAS1E,GAAV,OACrB,kEAAKC,IAAKD,EAAOd,UAAU,qBAA3B,sBACE,kEAAKA,UAAU,iBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMm1D,wCAAZ,yBAGJ,kEAAKt8D,UAAU,oBAAf,sBAAoCwF,EAAQjL,WAvEpD,EA2EEgiE,cAAgB,WACd,IAAIxqD,EAAM,QACJ5V,EAAS,GAOf,OALI,EAAKrC,MAAMgL,QAAQq3D,aACrBhgE,EAAOi/D,YAAc,EAAKthE,MAAMgL,QAAQq3D,YAG1CpqD,EAAMg1C,mDAAUh1C,EAAK5V,IAnFzB,kEACE,WAAS,WACP,EAUIksB,KAAKvuB,MATPkG,EADF,EACEA,UACAg8D,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACAnlD,EAJF,EAIEA,UACAolD,EALF,EAKEA,iBACAlhC,EANF,EAMEA,QANF,IAOEggC,oBAPF,MAOiB,GAPjB,EAQEloD,EARF,EAQEA,gBACAD,EATF,EASEA,cAEF,OACE,kEAAK7S,UAAWA,EAAhB,sBACG8W,EACC,kEAAK9W,UAAU,cAAf,sBACE,kEAAKA,UAAU,gBAAf,sBAAgCg8D,GAChC,kEAAKh8D,UAAU,UAAf,sBACE,2DAAC,kEAAD,CAAkB0d,KAAK,OAAvB,yBAIJ,sHACE,kEAAK1d,UAAU,cAAf,sBACE,kEAAKA,UAAU,gBAAf,sBAAgCg8D,GAChC,kEAAKh8D,UAAU,YAAf,2BACA,kEAAKA,UAAU,gBAAf,sBACGi8D,EADH,IACiB,2DAAC,0CAAD,CAAkBvgE,GAAG,oBAArB,wBAEhBugE,EAAeC,GACd,2DAAC,wDAAD,CAAQl8D,UAAU,kCAAlB,sBACgB,SAAbg8D,GACC,2DAAC,gDAAD,CAAM3V,GAAI,kBAAM,EAAKkW,iBAArB,sBACE,2DAAC,0CAAD,CAAkB7gE,GAAG,6BAArB,wBAGU,cAAbsgE,GACC,kEACE1yB,KAAK,eACL7oB,QAAS,WACP3N,EAAgBkoD,GAChBnoD,EAAc,YAJlB,sBAOE,2DAAC,gDAAD,CAAMwzC,GAAG,mBAAT,sBACE,2DAAC,0CAAD,CAAkB3qD,GAAG,6BAArB,2BAOZ,kEAAKsE,UAAU,eAAf,sBACgB,SAAbg8D,GAAuB,2DAAC,4DAAD,CAAYrf,KAAM3hB,EAAS87B,YAAU,EAArC,uBACV,cAAbkF,GAA4B3zC,KAAKg0C,8BAvDhD,mJAA4C7lC,6CAAMC,e,SAwFnC2lC,uBAAA,wC,2BAEfA,uBAAuBh8D,UAAY,CACjCJ,UAAWimC,+CACXjL,QAASiL,kDAAoB,CAACA,8CAAiBA,iDAC/C+1B,SAAU/1B,+CACVg2B,aAAch2B,+CACdnvB,UAAWmvB,6CACXi2B,iBAAkBj2B,gDAGpBm2B,uBAAuB9qC,aAAe,CACpCtxB,UAAW,oBACXg7B,QAAS,GACTghC,SAAU,GACVC,aAAc,EACdnlD,WAAW,EACXolD,iBAAkB,G,qIAzGPE,uB,o4CCFAI,EAAQljE,sBAAW,WAE9BC,GACA,IAFEk/D,EAEF,EAFEA,OAAQp8D,EAEV,EAFUA,MAAOqhB,EAEjB,EAFiBA,KAAM3d,EAEvB,EAFuBA,SAAUvE,EAEjC,EAFiCA,YAAaR,EAE9C,EAF8CA,UAAWwmB,EAEzD,EAFyDA,QAAYizB,EAErE,OACMxzB,EAAa,EAAH,GAASwzB,EAAKxzB,YAAcwzB,EAAKxzB,YAE3Cw7C,EAAShoB,WAAMx5C,QAAU,KAAO,EAiBtC,OAfIO,IACFylB,EAAWyY,aACT,oCACE,kBAAC,IAAD,CAAgB1B,SAAS,MAAzB,sBACE,kBAAC,IAAD,CAAc7W,MAAO3lB,EAArB,sBACE,kBAAC,IAAD,uBACE,0BAAM2E,EAAG6lB,KAAT,0BAIL/E,EAAWyY,eAMhB,kBAAC,IAAD,GACEngC,IAAKA,EACL+D,WAAS,EACT0C,UAAWC,IAAW,cAAe,CAAEw4D,SAAQp8D,UAC/CmlB,QAASA,GAAW,WACpBnlB,MAAOA,GACFrB,GAAa,CAChBA,WAAW,EACXm5B,KAAMsoC,GAEJhoB,EAVN,CAWExzB,WAAYA,EACZvD,KAAMA,EAZR,uBAcG3d,MAKPy8D,EAAMp8D,UAAY,CAChBq4D,OAAQh4D,OACRpE,MAAOoE,S,4FA7CI+7D,E,ujCCPPE,EAAelmC,IAAMl9B,YAAW,SAACQ,EAAOP,GAAR,OAAgB,kBAAC,IAAD,GAAMA,IAAKA,GAASO,EAApB,4BAEzC6iE,EAAS,SAAC,GAA2B,IAAzBtW,EAAyB,EAAzBA,GAAInO,EAAqB,EAArBA,KAASp+C,EAAY,OAC1C8iE,EAAOvW,GAAMnO,EAEnB,OAAI0kB,EACK,kBAAC,IAAD,GAAWvhD,MAAM,WAAcvhB,EAA/B,CAAsCi5C,UAAW2pB,EAAcrW,GAAIuW,EAAnE,wBAGF,kBAAC,IAAD,GAAWvhD,MAAM,WAAcvhB,EAA/B,2B,6FATH4iE,E,uFAEOC,E,ubCJAE,EAAc,SAAC,GAAiB,IAAf98D,EAAe,EAAfA,SAC5B,OAAO,4BAAQC,UAAU,eAAlB,sBAAkCD,IAG3C88D,EAAYz8D,UAAY,CACtBL,SAAUO,QAGL,IAAMy4D,EAAe,SAAC,GAAiB,IAAfh5D,EAAe,EAAfA,SAC7B,OAAO,yBAAKC,UAAU,YAAf,sBAA4BD,IAGrCg5D,EAAa34D,UAAY,CACvBL,SAAUO,QAGL,I,IAAM04D,EAAgB,SAAC,GAAiB,IAAfj5D,EAAe,EAAfA,SAC9B,OAAO,yBAAKC,UAAU,aAAf,sBAA6BD,IAGtCi5D,EAAc54D,UAAY,CACxBL,SAAUO,QAGZu8D,EAAY/3C,KAAOi0C,EACnB8D,EAAYn7C,MAAQs3C,G,6FAzBP6D,E,gGAQA9D,E,iGAQAC,E,giBCVA8D,EAAa,SAAC,GAA+B,IAA7B/7C,EAA6B,EAA7BA,KAAM/N,EAAuB,EAAvBA,QAASpJ,EAAc,EAAdA,QAC1C,OACE,kBAAC,IAAD,CAAOmX,KAAMA,EAAM/N,QAASA,EAA5B,sBACE,kBAAC,IAAD,CACEsJ,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CACEJ,MAAM,UACNwD,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,yBAJN,uBAQA,kBAAC,IAAM3E,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,yBAAK4D,UAAU,UAAf,sBAA0B4J,KAG9B,kBAAC,IAAM6X,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPzN,EAAQuR,SAFZ,kC,4FAxBCu4C,E,0hBCAAC,EAAoB,SAAC,GAA+B,IAA7Bh8C,EAA6B,EAA7BA,KAAM/N,EAAuB,EAAvBA,QAASpJ,EAAc,EAAdA,QACjD,OACE,kBAAC,IAAD,CAAOmX,KAAMA,EAAM/N,QAASA,EAA5B,sBACE,kBAAC,IAAD,CACEsJ,MAAO,CACLgF,MAAO,QACPoD,UAAW,QAHf,sBAME,kBAAC,IAAD,CACEvD,MAAM,UACNwD,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,yBAJN,uBAQA,kBAAC,IAAM3E,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,yBAAK4D,UAAU,UAAf,sBAA0B4J,KAG9B,kBAAC,IAAM6X,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACErE,QAAS,WACPzN,EAAQuR,SAFZ,6BAQF,kBAAC,IAAM9C,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPzN,EAAQo3B,UACRp3B,EAAQuR,SAHZ,kC,4FAjCCw4C,E,+eCRApW,EAAUC,YAAY1J,IAAcO,M,4FAApCkJ,E,ocCAAA,EAAUC,YAAY1J,IAAcO,M,4FAApCkJ,E,keCGA/mB,EAAgB,CAC3Bo9B,IACAC,IACAC,IACAC,IACAC,M,4FALWx9B,E,mmICYAm4B,WAAb,wQACE,WAAoB,WAClB,IAAKnN,iDAAOlpD,IAAI,iBAoBd,OAnBA2mB,KAAKvuB,MAAMkxD,QAAQqS,QAAO,SAACC,EAAa36D,GACvB,SAAXA,EAEA26D,EAAYC,WAAa,EAAKC,iBAC9BF,EAAYjqC,SAAW,EAAKoqC,gBAE5B,EAAKD,gBAAkBF,EAAYC,SACnC,EAAKE,cAAgBH,EAAYjqC,OACjC,EAAKv5B,MAAMkxD,QAAQziD,KAAK,CACtBg1D,SAAUD,EAAYC,SACtBlqC,OAAQiqC,EAAYjqC,UAIxB,EAAKv5B,MAAMkxD,QAAQ0S,GAAG,MAG1Br1C,KAAKvuB,MAAMkxD,QAAQziD,KAAK,eACxB8f,KAAKvuB,MAAM6jE,mBAIb,IAAM5zC,EAAWhkB,KAAKC,MAAM04C,aAAaC,QAAQ,cAAgB,MAEjEt2B,KAAKvuB,MAAM4jD,mBAAmB3zB,KA3BlC,gCA8BE,SAAmB6zC,GAEfv1C,KAAKvuB,MAAM+jE,sBAAwBD,EAAUC,qBAC7Cx1C,KAAKvuB,MAAM+jE,sBAAwBxgB,yDAAaW,MAEhD31B,KAAKvuB,MAAMkxD,QAAQziD,KAAK,YAnC9B,oBAuCE,WACE,OAAI8f,KAAKvuB,MAAM+jE,sBAAwBxgB,yDAAaC,QAEhD,2DAAC,iDAAD,KACE,2DAAC,kEAAD,OAMJ,2DAAC,gDAAD,KACE,2DAAC,gDAAD,CAAOwgB,OAAK,EAAC32D,KAAM42D,uCAAM52D,KAAM4rC,UAAWgrB,yCAC1C,2DAAC,gDAAD,CAAOD,OAAK,EAAC32D,KAAM62D,uCAAO72D,KAAM4rC,UAAWirB,yCAC3C,2DAAC,gDAAD,CAAO72D,KAAK,IAAI4rC,UAAWkrB,2CApDnC,uIAAgCznC,6CAAMC,eA0DtCshC,WAAW33D,UAAY,CACrB4qD,QAAS/kB,8CAAgB,CACvB19B,KAAM09B,6CAAeoM,aACpBA,WACHwrB,oBAAqB53B,8CAAgB,CACnC,GACAoX,yDAAaS,QACbT,yDAAaC,QACbD,yDAAaW,OACZ3L,WACHsrB,iBAAkB13B,6CAAeoM,WACjCqL,mBAAoBzX,6CAAeoM,YAG9B,IAAM8Y,gBAAkB,SAAAr3C,GAAK,MAAK,CACvC+pD,oBAAqBtsC,4DAAsBzd,GAAOpS,IAAI,YAG3C0pD,mBAAqB,SAAA/pD,GAAQ,MAAK,CAC7Cq8C,mBAAoB,SAAAr0B,GAAI,OAAIhoB,EAAS2R,sDAAQ0qC,mBAAmBhF,gBAAgBrvB,KAChFs0C,iBAAkB,kBAAMt8D,EAAS2R,sDAAQ0qC,mBAAmBtB,mB,SAG/C8hB,+DAAI/uC,mDAAQg8B,gBAAiBC,mBAAzBj8B,CAA6C4oC,a,2BAAjD,+B,qIAjFFA,W,qEAwEA5M,gB,0EAIAC,mB,0/HC9EA+S,WAAb,6PACE,WACE,OACE,sHACE,2DAAC,2CAAD,wBACA,kEAAKn+D,UAAU,gBAAf,sBACE,2DAAC,gDAAD,uBACE,2DAAC,gDAAD,CAAOmH,KAAK,aAAZ,sBACE,2DAAC,yCAAD,yBAEF,2DAAC,gDAAD,CAAO22D,OAAK,EAAC32D,KAAK,QAAQ4rC,UAAWqrB,oCAArC,uBACA,2DAAC,gDAAD,CAAON,OAAK,EAAC32D,KAAK,YAAY4rC,UAAWsrB,4CAAzC,uBACA,2DAAC,gDAAD,CAAOP,OAAK,EAAC32D,KAAK,mBAAmB4rC,UAAWurB,wCAAhD,uBACA,2DAAC,gDAAD,CAAOn3D,KAAK,uBAAuB4rC,UAAWwrB,6CAA9C,uBACA,2DAAC,gDAAD,CAAOT,OAAK,EAAC32D,KAAK,mBAAmB4rC,UAAWyrB,wCAAhD,uBACA,2DAAC,gDAAD,CACEV,OAAK,EACL32D,KAAK,kCACL4rC,UAAW0rB,sEAHb,uBAKA,2DAAC,gDAAD,CAAOX,OAAK,EAAC32D,KAAK,iCAAiC4rC,UAAW2rB,qEAA9D,uBACA,2DAAC,gDAAD,CAAOZ,OAAK,EAAC32D,KAAK,iCAAiC4rC,UAAW4rB,sEAA9D,uBACA,2DAAC,gDAAD,CAAOb,OAAK,EAAC32D,KAAK,wBAAwB4rC,UAAW6rB,qDAArD,uBACA,2DAAC,gDAAD,CAAUvY,GAAG,aAAb,4BAvBZ,uIAAgC7vB,6CAAMC,e,2BA+BtC0nC,WAAW/9D,UAAY,G,oIA/BV+9D,W,g4JCcb,SAASU,cAAcj3D,EAAM9G,EAAOgE,EAASg6D,GAC3C,OAAO,2DAAC,qDAAD,CAASpR,UAAQ,EAAC3sD,IAAKD,EAAO87C,IAAKh1C,EAAM9C,QAASA,EAASg6D,WAAYA,EAAvE,uB,IAGH/G,W,8GACJ,oBAAYj+D,GAAO,wCACjB,mBAAMA,IA4ORilE,sBAAwB,WACtB,EAAKv7B,UAAS,SAAAmoB,GAAS,MAAK,CAC1BqT,qBAAsBrT,EAAUqT,yBA/OjB,EAmPnBC,UAAY,SAAC32D,EAAQ3O,GACnB,IAAMmY,EAAQ,IAAIotD,gBAAgB,EAAKplE,MAAMmmC,SAAS5M,QAEjC,WAAjB,QAAO15B,GACIwa,OAAOC,KAAKza,GAEpB8e,SAAQ,SAAA1X,GACNpH,EAAMoH,GAEA+Q,EAAMqtD,IAAN,UAAa72D,EAAb,YAAuBvH,KAAU+Q,EAAMpQ,IAAN,UAAa4G,EAAb,YAAuBvH,MAAWpH,EAAMoH,GAClF+Q,EAAMm9B,IAAN,UAAa3mC,EAAb,YAAuBvH,GAAOpH,EAAMoH,IAEpC+Q,EAAMy2B,OAAN,UAAgBjgC,EAAhB,YAA0BvH,GAAOpH,EAAMoH,IAJvC+Q,EAAMgZ,OAAN,UAAgBxiB,EAAhB,YAA0BvH,OAOpBpH,EAEDmY,EAAMqtD,IAAI72D,IAAWwJ,EAAMpQ,IAAI4G,KAAY3O,EACpDmY,EAAMm9B,IAAI3mC,EAAQ3O,GAElBmY,EAAMy2B,OAAOjgC,EAAQ3O,GAJrBmY,EAAMgZ,OAAOxiB,GAOfwJ,EAAM5H,WAEN,EAAKpQ,MAAMkxD,QAAQziD,KAAK,CAAE8qB,OAAQ,IAAF,OAAMvhB,MA5QrB,EA+QnBstD,kBAAoB,SAAA7oC,GAClB,IAAMzkB,EAAQ,IAAIotD,gBAAgB,EAAKplE,MAAMmmC,SAAS5M,QAElDvhB,EAAMpQ,IAAI,WACZoQ,EAAMgZ,OAAO,UACbhZ,EAAM5H,WAEN,EAAKpQ,MAAMkxD,QAAQziD,KAAK,CAAE8qB,OAAQ,IAAF,OAAMvhB,KACtC,EAAK0xB,SAAS,CAAE7/B,OAAQ,GAAI07D,YAAa9oC,IAAO,WAC9C,EAAK+oC,cAAc,EAAKxrD,WAG1B,EAAK0vB,SAAS,CAAE67B,YAAa9oC,KA3Rd,EA+RnBgpC,qBAAuB,SAACj3D,EAAQ3O,GAC9B,EAAKslE,UAAU32D,EAAQ3O,GAEvB,EAAK6pC,SAAL,mBAEKl7B,EAAS3O,IAEZ,WACE,EAAK2lE,cAAc,EAAKxrD,WAvSX,EA4SnB0rD,qBAAuB,WACrB,MAAgC,EAAK1rD,MAA7BurD,EAAR,EAAQA,YAAa17D,EAArB,EAAqBA,OACfkU,EAAO,EAAK/d,MAAM6iD,KAAKj7C,IAAI,WAEjC,OAAIiC,EACKkU,EAAKvP,QAAO,SAAAV,GAAI,OAAIA,EAAKlG,IAAI,YAAciC,KAGhC,cAAhB07D,EACKxnD,EAAKvP,QAAO,SAAAV,GAAI,MAA2B,cAAvBA,EAAKlG,IAAI,aAGlB,iBAAhB29D,EACKxnD,EAAKvP,QAAO,SAAAV,GAAI,MAA2B,cAAvBA,EAAKlG,IAAI,aAG/BmW,GA5TU,EA+TnBynD,cAAgB,YAQV,IAPJG,EAOI,EAPJA,0BACAC,EAMI,EANJA,gBACA/7D,EAKI,EALJA,OACAg8D,EAII,EAJJA,qBACAC,EAGI,EAHJA,YACAxE,EAEI,EAFJA,YACAlD,EACI,EADJA,MAEA,GAAwB,OAApBA,EAAMrf,WAAwC,OAAlBqf,EAAMnf,QAAtC,CAEA,IAAM/D,EAAQ73C,8CAAO+6D,EAAMrf,UAAUz7C,OAAO,eACtC47C,EAAM77C,8CAAO+6D,EAAMnf,QAAQ37C,OAAO,eAClCiS,EAAOjF,SAASjN,8CAAO03C,SAASmE,EAAI7G,KAAK6C,IAAQiE,SAAU,IAE3D73C,EAAU,CACd83C,YAAagf,EAAMrf,UAAUz7C,OAAO,cACpC+7C,OAAQ9pC,EAAO,EACfvN,UAAW,YAGT29D,IACFr+D,EAAQq+D,0BAA4BA,GAGlCC,IACFt+D,EAAQy+D,qBAAuBH,EAAgBnlE,KAC/C6G,EAAQ0+D,qBAAuBJ,EAAgBp4D,MAG7C3D,IACFvC,EAAQuC,OAASA,GAGfg8D,IACFv+D,EAAQu+D,qBAAuBA,GAG7BvE,IACFh6D,EAAQg6D,YAAcA,GAGpBwE,IACFx+D,EAAQwX,MAAQgnD,GAGlB,EAAK9lE,MAAM0+C,QAAQp3C,GACnB,EAAKoiC,SAAS,CAAEu8B,YAAa3+D,MA9WZ,EAiXnB4+D,oBAAsB,SAAAz6C,GACpB,EAAKie,SAAS,CACZ43B,YAAa71C,EAAMtI,OAAOtjB,SAnXX,EAuXnBsmE,UAAY,SAAA16C,GACQ,UAAdA,EAAMxkB,KAAoB,EAAKjH,MAAM6iD,KAAKj7C,IAAI,cAChD,EAAKu9D,UAAU,cAAe15C,EAAMtI,OAAOtjB,OAC3C,EAAK2lE,cAAc,EAAKxrD,SA1XT,EA8XnBqkD,qBAAuB,SAAAD,GACrB,EAAK10B,SACH,CACE00B,MAAO,CACLrf,UAAWqf,EAAMrf,UACjBE,QAASmf,EAAMnf,WAGnB,WACE,EAAKj/C,MAAMqlD,iBAAiB+Y,GAC5B,EAAKoH,cAAc,EAAKxrD,WArY5B,IAAMhC,EAAQ,IAAIotD,gBAAgB,EAAKplE,MAAMmmC,SAAS5M,QAHrC,OAKjB,EAAKvf,MAAQ,CACXokD,MAAO,CACLrf,UAAW17C,8CAAO27C,KAAKh/C,EAAMy+C,cAAc72C,IAAI,cAC/Cq3C,QAAS57C,8CAAO27C,KAAKh/C,EAAMy+C,cAAc72C,IAAI,aAE/C+9D,0BAA2B3tD,EAAMpQ,IAAI,8BAAgC,GACrEg+D,gBAAiB,CACfp4D,KAAMwK,EAAMpQ,IAAI,yBAA2B,GAC3CnH,KAAMuX,EAAMpQ,IAAI,yBAA2B,IAE7CiC,OAAQmO,EAAMpQ,IAAI,WAAa,GAC/Bi+D,qBAAsB7tD,EAAMpQ,IAAI,yBAA2B,GAC3D05D,YAAatpD,EAAMpQ,IAAI,gBAAkB,GACzCk+D,YAAa9tD,EAAMpQ,IAAI,gBAAkB,GACzC29D,YAAa,MACbL,qBAAqB,EACrBe,YAAa,IArBE,E,+DAyBnB,WACqC,IAA/B13C,KAAKvuB,MAAM4vB,SAAStuB,QACtBitB,KAAKvuB,MAAMomE,iB,oBAIf,WACE,MAQI73C,KAAKvU,MAPP2rD,EADF,EACEA,0BACAC,EAFF,EAEEA,gBACA/7D,EAHF,EAGEA,OACAg8D,EAJF,EAIEA,qBACAC,EALF,EAKEA,YACAP,EANF,EAMEA,YACAL,EAPF,EAOEA,oBAGIjgB,EAAa12B,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,cACjCs9C,EAAS32B,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,UAEnC,OAAIq9C,GAAyB,WAAXC,IAAwB32B,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,YAE1D,sHACE,2DAAC,uDAAD,CAAQyf,MAAM,OAAd,uBACA,2DAAC,yDAAD,uBACE,2DAAC,yDAAD,uBACE,2DAAC,yDAAMnB,QAAP,KACE,2DAAC,yEAAD,CAAQ5jB,KAAK,OAAb,sBACE,2DAACyoB,SAAD,kIAaZ,2DAAC,6DAAD,uBACE,2DAAC,uDAAD,CAAQ1D,MAAM,OAAd,sBACE,2DAAC,kDAAD,CACE+0C,cAAe7tC,KAAK8vC,qBACpBtf,UAAWxwB,KAAKvU,MAAMokD,MAAMrf,UAC5BE,QAAS1wB,KAAKvU,MAAMokD,MAAMnf,QAH5B,wBAMF,2DAAC,yDAAD,uBACE,2DAAC,yDAAD,uBACE,2DAAC,yDAAMj5B,OAAP,KACE,2DAAC,qFAAD,CACEsW,KAAM,CACJ,CAAEv6B,MAAO,WAAYlC,MAAO,OAC5B,CAAEkC,MAAO,eAAgBlC,MAAO,gBAChC,CAAEkC,MAAO,YAAalC,MAAO,cAE/Bw8B,OAAQkpC,EACR5+C,QAAS4H,KAAK+2C,kBAPhB,wBASkB,QAAhBC,GAAyC,iBAAhBA,IACzB,2DAAC,0DAAD,CACE/iD,MAAO,CACL6jD,WAAY,SACZ3kD,WAAY,OACZ+F,OAAQ,OACR6+C,WAAY,KAEd3/C,QAAS4H,KAAK02C,sBAPhB,sBASGC,EAAsB,gBAAkB,qBAI/C,2DAAC,kDAAD,CAAQrlE,MAAO0lE,EAAf,sBACE,2DAAC,kDAAOt+B,KAAR,CAAapnC,MAAM,QACf0uB,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,aACpB,2DAAC,4EAAD,CAAgBi7C,KAAMt0B,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,WAAW+hB,OAAQ9f,OAAQA,EAArE,uBAEDq7D,GACC,2DAAC,yDAAMl/C,OAAP,KACE,kEAAKxD,MAAO,CAAEiF,OAAQ,IAAKD,MAAO,QAAlC,sBACG+G,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,YACnB,2DAAC,kDAAD,uBACE,2DAAC,yDAAD,8CAGF,2DAAC,kDAAD,CACEM,KAAM0mD,2DAAgBrgC,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,WAAW+hB,OAAQ,CAC3DolC,YAAa1rD,8CAAO27C,KAClBzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAC7B,cAEFq3C,QAAS57C,8CAAO27C,KACdzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAC7B,gBAGJknD,YACEzrD,8CACG27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAAc,cAChDtE,OAAO,gBACVD,8CACG27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAAY,cAC9CtE,OAAO,cAEZ0wD,aAAczlC,KAAK8vC,qBAnBrB,0BAyBN6G,GAAuB,wHAE3B,2DAAC,kDAAOj+B,KAAR,CAAapnC,MAAM,iBACf0uB,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,aACpB,2DAAC,4EAAD,CACEi7C,KAAMt0B,KAAKvuB,MAAM6iD,KACdj7C,IAAI,WACJ4G,QAAO,SAAAV,GAAI,MAA2B,cAAvBA,EAAKlG,IAAI,aACxB+hB,OACH9f,OAAQA,EALV,uBAQDq7D,GACC,2DAAC,yDAAMl/C,OAAP,KACE,kEAAKxD,MAAO,CAAEiF,OAAQ,IAAKD,MAAO,QAAlC,sBACG+G,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,YACnB,2DAAC,kDAAD,uBACE,2DAAC,yDAAD,8CAGF,2DAAC,kDAAD,CACEM,KAAM0mD,2DAAgBrgC,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,WAAW+hB,OAAQ,CAC3DolC,YAAa1rD,8CAAO27C,KAClBzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAC7B,cAEFq3C,QAAS57C,8CAAO27C,KACdzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAC7B,gBAGJknD,YACEzrD,8CACG27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAAc,cAChDtE,OAAO,gBACVD,8CACG27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAAY,cAC9CtE,OAAO,cAEZ0wD,aAAczlC,KAAK8vC,qBAnBrB,0BAyBN6G,GAAuB,wHAE3B,2DAAC,kDAAOj+B,KAAR,CAAapnC,MAAM,aACjB,2DAAC,4EAAD,CACEgjD,KAAMt0B,KAAKvuB,MAAM6iD,KACdj7C,IAAI,WACJ4G,QAAO,SAAAV,GAAI,MAA2B,cAAvBA,EAAKlG,IAAI,aACxB+hB,OACH9f,OAAO,YALT,yBASJ,2DAAC,yDAAMqc,QAAP,CAAe4E,YAAY,GACzB,kEAAK5kB,UAAU,2BAAf,sBACE,kEAAKA,UAAU,aAAf,sBACE,2DAAC,kDAAD,CACErG,MAAO0uB,KAAKvU,MAAMsnD,YAClBp/D,SAAUqsB,KAAK23C,oBACfC,UAAW53C,KAAK43C,UAHlB,wBAMF,2DAAC,oDAAD,CACEI,WAAY,CACVZ,4BACAC,kBACA/7D,SACAg8D,uBACAC,eAEF5jE,SAAUqsB,KAAKk3C,qBACfe,cAA+B,cAAhBjB,EACfkB,WAAYlB,EAVd,wBAaDh3C,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,YACnB,2DAAC,kDAAD,uBACE,2DAAC,yDAAD,6CAGF,2DAAC,wEAAD,CAAkB4uB,MAAOjI,KAAKm3C,uBAAwB16D,QAASujB,KAAKvU,MAAMisD,YAA1E,sBACGlB,gBAIP,2DAAC,yDAAMp9C,OAAP,KACE,2DAAC,8DAAD,wBACA,2DAAC,0DAAD,CAAQ4kC,GAAG,YAAX,uC,uIAtOW7vB,6CAAMC,eA8Y/BshC,WAAW33D,UAAY,CACrBm4C,cAAetS,kDAAUvtB,OAAO25B,WAChC8M,iBAAkBlZ,kDAAU7f,KAAKisB,WACjCsK,KAAM1W,kDAAUvtB,OAAO25B,WACvBmG,QAASvS,kDAAU7f,KAAKisB,YAGnB,IAAM8Y,gBAAkB,SAAAr3C,GAAK,MAAK,CACvCykC,cAAe1vB,0DAAsB/U,GACrC6oC,KAAMl0B,0DAAa3U,GACnB4V,SAAU5V,EAAMmrB,aAAatU,MAAMC,MAGxBwgC,mBAAqB,SAAA/pD,GAAQ,MAAK,CAC7Cm3C,QAAS,SAAAx2C,GACPX,EAAS2R,oDAAQwlC,QAAQE,gBAAgB12C,KAE3Cm9C,iBAAkB,SAAAn9C,GAAI,OAAIX,EAAS2R,oDAAQmsC,iBAAiBzG,gBAAgB12C,KAC5Ek+D,aAAc,kBAAM7+D,EAAS4nB,wE,SAGhBkG,mDAAQg8B,gBAAiBC,mBAAzBj8B,CAA6C4oC,Y,2BAE5D,SAASlzC,SAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,iEACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,QARf,sBAWGllB,GAfQ,+B,qIAvaN8+D,c,6EAIH9G,W,0EAqZO5M,gB,+EAMAC,mB,kFAUJvmC,S,wqDCzbH27C,EAAqB,CACzBt+C,IAAiBK,UACjBL,IAAiBQ,UACjBR,IAAiBS,SAGN89C,EAAU,SAAC,GAAiC,IAA/B7jB,EAA+B,EAA/BA,IAAK93C,EAA0B,EAA1BA,QAASg6D,EAAiB,EAAjBA,WACtC,IAAwB/kE,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACM0/C,EAAuC,QAA3B5B,EAAWp9D,IAAI,SAAqB8+D,EAAmBjyD,SAASquC,EAAIl7C,IAAI,WAEpF4iB,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgE,GAAQ,KACP,KAEL,IAAwBjnB,mBAAS,IAAjC,GAAOoJ,EAAP,KAAaw9D,EAAb,KAkDA,OACE,oCACE,kBAAC,IAAD,CAAMta,GAAE,gCAA2BzJ,EAAIl7C,IAAI,SAA3C,sBACE,yBAAK1B,UAAU,WAAf,sBACE,yBAAKA,UAAU,cAAf,sBACE,kBAAC,IAAD,CAAW2D,OAAQi5C,EAAIl7C,IAAI,UAA3B,wBAEF,yBAAK1B,UAAU,eAAf,sBACE,yBAAKA,UAAU,YAAf,sBACE,kBAAC,IAAD,CACE+lB,UAAU,eACV5E,MACE,oCACE,4DAAgBy7B,EAAIl7C,IAAI,YACvBk7C,EAAIl7C,IAAI,aAAe,0DAAck7C,EAAIl7C,IAAI,cALpD,sBASE,yBAAK1B,UAAU,OAAf,sBAlEK,SAAb+sD,IACJ,IAAIxyD,EAAOqiD,EAAIl7C,IAAI,WACbsrD,EACHv3B,SAASw3B,eAAe,iBACvBx3B,SAASw3B,eAAe,gBAAgBC,YACrC,IAAWz3B,SAASw3B,eAAe,gBAAgBC,aACxD,IACIC,EAAW,0BAAMntD,UAAU,cAAhB,8BACXotD,EAAgB,GACtB7yD,EAAOA,EAAK0G,MAAM,KAClB,IAAK,IAAI6gB,EAAI,EAAGA,EAAIvnB,EAAKa,OAAQ0mB,IAC3BA,EAAIvnB,EAAKa,OAAS,EACpBgyD,EAAc7kD,KACZ,0BAAMxH,IAAK+gB,EAAX,sBACE,0BAAM9hB,UAAU,OAAhB,sBAAwBzF,EAAKunB,IAD/B,MAKFsrC,EAAc7kD,KACZ,0BAAMxH,IAAK+gB,EAAG9hB,UAAU,OAAxB,sBACGzF,EAAKunB,KAMd,IACMuyB,GADS0Y,EAAWM,SAAWN,EAAWM,OAAS53B,SAASC,cAAc,YACzD43B,WAAW,MAC9BC,EAAUlZ,EAAQmZ,YAAYJ,GAOlC,IALIG,EAAQjsC,MAAQ0rC,GAElBI,EAAc5d,QAAQ2d,GAGjBI,EAAQjsC,MAAQ0rC,GAErBI,EAAcK,QAEdL,EAAcK,QAEdL,EAAc5d,QAAQ2d,GAEtBI,EAAUlZ,EAAQmZ,YAAYJ,GAGhC,OAAOA,EAoB4BL,MAG3B,yBAAK/sD,UAAU,aAAf,sBACE,kBAAC,IAAD,CAAkB+lB,UAAU,eAAe5E,MAAM,wBAAjD,sBACE,yBAAKnhB,UAAU,wBAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAGygE,IAAT,wBAEDzjE,IAAOy/C,EAAIl7C,IAAI,gBAAgBtE,OAAO,2BAG1Cw/C,EAAIl7C,IAAI,eACP,yBAAK1B,UAAU,0BAAf,sBACE,kBAAC,IAAD,wBACC48C,EAAIl7C,IAAI,eAGZk7C,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,SAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,QACJA,IAAI,SACL,yBAAK1B,UAAU,wBAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAGm5B,IAAT,wBAEDsjB,EACEl7C,IAAI,eACJA,IAAI,QACJA,IAAI,SAGZk7C,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,UAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,SACJA,IAAI,iBACL,yBAAK1B,UAAU,0BAAf,sBACE,kBAAC,IAAD,wBACC48C,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,UAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,SACJA,IAAI,iBAGdk7C,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,SAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,QACJA,IAAI,qBACPk7C,EACGl7C,IAAI,eACJA,IAAI,QACJA,IAAI,oBACJA,IAAI,aACL,yBAAK1B,UAAU,4BAAf,sBACE,kBAAC,IAAD,uBACE,0BAAMG,EAAGunC,IAAT,wBAEDkV,EAAIl7C,IAAI,gBACPk7C,EAAIl7C,IAAI,eAAeA,IAAI,SAC3Bk7C,EACGl7C,IAAI,eACJA,IAAI,QACJA,IAAI,oBACJA,IAAI,eAKlBg/D,GACC,yBAAK1gE,UAAU,cAAf,sBACE,kBAAC,IAAD,CACEqb,MAAM,YACNoF,QAAS,SAAA8E,GACPA,EAAMU,iBACNjF,GAAQ,GACR2/C,EAAQ/jB,EAAIl7C,IAAI,UALpB,mCAePqf,GACC,kBAAC,IAAD,CAAyBA,KAAMA,EAAM/N,QAASsR,EAAcnhB,KAAMA,EAAM2B,QAASA,EAAjF,yB,EA9KK27D,E,+LANPD,E,gGAMOC,E,q7GCFPI,UAAY,CAChBn+C,UAAW4zC,wCACX9zC,UAAW+zC,uCACXh0C,UAAWi0C,uCACX7zC,QAAS+zC,wCACTp0C,QAASm0C,wCACTh0C,OAAQk0C,uCACR/zC,OAAQg0C,wCAGG2D,UAAb,wPACE,WACE,OACE,2DAAC,iEAAD,CAAcx0C,UAAU,eAAe5E,MAAOkH,KAAKvuB,MAAM6J,OAAO4jD,cAAhE,sBACE,kEAAKvnD,UAAU,0BAAf,sBACE,kEAAKA,UAAS,iBAAYqoB,KAAKvuB,MAAM6J,OAAOwG,eAA5C,sBACE,2DAAC,yDAAD,uBACE,mEAAMhK,EAAG0gE,UAAUx4C,KAAKvuB,MAAM6J,QAA9B,6BAPd,sIAA+B6yB,6CAAMC,e,2BAgBrC8jC,UAAUn6D,UAAY,CACpBuD,OAAQsiC,gDAEVs0B,UAAUjpC,aAAe,CACvB3tB,OAAQ,I,qIA9BJk9D,U,wGAUOtG,U,8hDCZAuG,EAAW,CACtB,CAAEjlE,MAAO,UAAWtB,KAAM,UAAW+M,KAAM,QAAS3N,MAAO,CAAEY,KAAM,UAAW+M,KAAM,UACpF,CACEzL,MAAO,QACPtB,KAAM,QACN+M,KAAM,QACN3N,MAAO,CAAEY,KAAM,QAAS+M,KAAM,UAEhC,CAAEzL,MAAO,SAAUtB,KAAM,SAAU+M,KAAM,SAAU3N,MAAO,CAAEY,KAAM,SAAU+M,KAAM,WAClF,CAAEzL,MAAO,aAActB,KAAM,QAAS+M,KAAM,QAAS3N,MAAO,CAAEY,KAAM,QAAS+M,KAAM,UACnF,CACEzL,MAAO,uBACPtB,KAAM,sBACN+M,KAAM,QACN3N,MAAO,CAAEY,KAAM,sBAAuB+M,KAAM,UAE9C,CACEzL,MAAO,aACPtB,KAAM,aACN+M,KAAM,SACN3N,MAAO,CAAEY,KAAM,aAAc+M,KAAM,YAIjCy5D,EAAU,SAAAjnE,GAAS,cACfgL,EAAuEhL,EAAvEgL,QAASu7D,EAA8DvmE,EAA9DumE,WAAYrkE,EAAkDlC,EAAlDkC,SAAUskE,EAAwCxmE,EAAxCwmE,cAAe52C,EAAyB5vB,EAAzB4vB,SAAU62C,EAAezmE,EAAfymE,WAE9Dd,EAKEY,EALFZ,0BACAC,EAIEW,EAJFX,gBACA/7D,EAGE08D,EAHF18D,OACAg8D,EAEEU,EAFFV,qBACAC,EACES,EADFT,YAGIj1C,EAAQ,CACZ,CAAEhxB,MAAO,GAAIkC,MAAO,QADX,SAEN6tB,EAAS9oB,KAAI,SAAAyoB,GAAI,MAAK,CAAExtB,MAAOwtB,EAAK9uB,KAAMZ,MAAO0vB,EAAK9uB,WAErDmwC,EAAY,UAAG/f,EAAMrvB,MAAK,SAAA0lE,GAAC,OAAIA,EAAErnE,OAASqnE,EAAErnE,QAAUimE,YAA1C,QAA0D,GACtEqB,EAAY,CAChB,CAAEtnE,MAAO,CAAEY,KAAM,GAAI+M,KAAM,IAAMzL,MAAO,QAD3B,SAEVilE,EAASlgE,KAAI,SAAAoP,GAAE,MAAK,CAAErW,MAAOqW,EAAGrW,MAAOkC,MAAOmU,EAAGnU,YAEhDqlE,EAAgB,UACpBD,EAAU3lE,MAAK,SAAAijB,GAAC,aAAIA,SAAA,UAAAA,EAAG5kB,aAAH,eAAUY,OAAQgkB,EAAE5kB,MAAMY,QAASmlE,aAAjB,EAAiBA,EAAiBnlE,gBADpD,QAC6D,GAC7EyN,EAAU,CACd,CAAErO,MAAO,GAAIkC,MAAO,QADT,SAERiJ,EAAQ0D,QAAQ5H,KAAI,SAAAoP,GAAE,MAAK,CAAErW,MAAOqW,EAAInU,MAAOmU,QAE9CmxD,EAAc,UAClBn5D,EAAQ1M,MAAK,SAAAiP,GAAE,OAAIA,EAAG5Q,OAAS4Q,EAAG5Q,QAAU8lE,YAD1B,QACwD,GACtEt2D,EAAY,CAChB,CAAExP,MAAO,GAAIkC,MAAO,QADP,SAEViJ,EAAQwE,SAAS1I,KAAI,SAAAoP,GAAE,MAAK,CAAErW,MAAOqW,EAAInU,MAAOmU,QAE/CoxD,EAAU,UAAGj4D,EAAU7N,MAAK,SAAA8N,GAAE,OAAIA,EAAGzP,OAASyP,EAAGzP,QAAUgmE,YAAjD,QAA0E,GACtF3lD,EAAW,CACb,CAAErgB,MAAO,GAAIkC,MAAO,QADV,SAEPiJ,EAAQnB,OAAO/C,KAAI,SAAAoP,GAAE,MAAK,CAAErW,MAAOqW,EAAInU,MAAOmU,QAGhC,iBAAfuwD,IACFvmD,EAAWA,EAAS1R,QAAO,SAAAwC,GAAC,MAAgB,cAAZA,EAAEnR,UAGpC,IAAM0nE,EAAc,UAAGrnD,EAAS1e,MAAK,SAAAwP,GAAC,OAAIA,EAAEnR,OAASmR,EAAEnR,QAAUgK,YAA7C,QAAwD,GAE5E,OACE,yBAAK3D,UAAU,eACb,kBAAC,IAAD,CACEvE,kBAAgB,EAChBC,GAAG,eACHlC,QAASmxB,EACThxB,MAAO+wC,EACP/uC,eAAgB,SAAA6+B,GAAG,OAAIA,EAAI3+B,OAAS,IACpCG,SAAU,SAACC,EAAGL,GACZI,EAAS,eAAeJ,aAAA,EAAAA,EAAQjC,QAAS,KAE3CuC,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,KACMA,EADN,CAEEuhB,KAAK,QACL7hB,MACE,0BAAMmE,UAAU,gCACd,kBAAC,IAAD,MACA,0BAAMA,UAAU,2BAAhB,UAGJwhB,QAAQ,iBAKd,kBAAC,IAAD,CACE/lB,kBAAgB,EAChBC,GAAG,kBACHlC,QAASynE,EACTtnE,MAAOunE,EACPvlE,eAAgB,SAAA6+B,GAAG,OAAIA,EAAI3+B,OAAS,IACpCG,SAAU,SAACC,EAAGL,GACZI,EAAS,mBAAmBJ,aAAA,EAAAA,EAAQjC,QAAS,KAE/CuC,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,KACMA,EADN,CAEEuhB,KAAK,QACL7hB,MACE,0BAAMmE,UAAU,gCACd,kBAAC,IAAD,KACE,0BAAMG,EAAGm5B,OAEX,0BAAMt5B,UAAU,2BAAhB,aAGJwhB,QAAQ,iBAKd,kBAAC,IAAD,CACE/lB,kBAAgB,EAChBC,GAAG,gBACHlC,QAASwO,EACTrO,MAAOwnE,EACPxlE,eAAgB,SAAA6+B,GAAG,OAAIA,EAAI3+B,OAAS,IACpCG,SAAU,SAACC,EAAGL,GACZI,EAAS,6BAA6BJ,aAAA,EAAAA,EAAQjC,QAAS,KAEzDuC,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,KACMA,EADN,CAEEuhB,KAAK,QACL7hB,MACE,0BAAMmE,UAAU,gCACd,kBAAC,IAAD,KACE,0BAAMG,EAAGmhE,QAEX,0BAAMthE,UAAU,2BAAhB,WAGJwhB,QAAQ,iBAKd,kBAAC,IAAD,CACE/lB,kBAAgB,EAChBC,GAAG,kBACHlC,QAAS2P,EACTxP,MAAOynE,EACPzlE,eAAgB,SAAA6+B,GAAG,OAAIA,EAAI3+B,OAAS,IACpCG,SAAU,SAACC,EAAGL,GACZI,EAAS,wBAAwBJ,aAAA,EAAAA,EAAQjC,QAAS,KAEpDuC,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,KACMA,EADN,CAEEuhB,KAAK,QACL7hB,MACE,0BAAMmE,UAAU,gCACd,kBAAC,IAAD,KACE,0BAAMG,EAAGunC,OAEX,0BAAM1nC,UAAU,2BAAhB,aAGJwhB,QAAQ,kBAKZ8+C,GACA,kBAAC,IAAD,CACE7kE,kBAAgB,EAChBC,GAAG,gBACHlC,QAASwgB,EACTrgB,MAAO0nE,EACP1lE,eAAgB,SAAA6+B,GAAG,OAAIA,EAAI3+B,OAAS,IACpCG,SAAU,SAACC,EAAGL,GACZI,EAAS,UAAUJ,aAAA,EAAAA,EAAQjC,QAAS,KAEtC2iB,MAAO,CAAEjB,MAAO,OAChBnf,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,KACMA,EADN,CAEEuhB,KAAK,QACL7hB,MACE,0BAAMmE,UAAU,gCACd,kBAAC,IAAD,KACE,0BAAMG,EAAGohE,OAEX,0BAAMvhE,UAAU,2BAAhB,WAGJwhB,QAAQ,mBAQtBu/C,EAAQ3gE,UAAY,CAClB0E,QAASmhC,IAAUvtB,OAAO25B,WAC1BguB,WAAYp6B,IAAUvtB,OAAO25B,WAC7Br2C,SAAUiqC,IAAU7f,KAAKisB,WACzBiuB,cAAer6B,IAAUxlC,MAGpB,I,IAAM0qD,EAAkB,SAAAr3C,GAAK,MAAK,CACvChP,QAAS08D,YAAsB1tD,GAC/B4V,SAAUiL,YAAmB7gB,EAAMmrB,aAAatU,MAAMC,O,EAGzCuE,YAAQg8B,EAARh8B,CAAyB4xC,GAAzB,O,6FAtNFD,E,oFAwBPC,E,mFAyLO5V,E,8iBC7NAqW,EAAwB/qD,YAAeiS,KAAqB,SAAAu2B,GACvE,IAAMn6C,EAAU,CACd0D,QAAS,GACTtD,SAAU,GACVvB,OAAQ,CAAC,YAAa,YAAa,YAAa,UAAW,SAAU,UAAW,UAChF2F,SAAU,IAsBZ,OAnBA21C,EAAYv9C,IAAI,WAAW+W,SAAQ,SAAAgpD,GACjC,IAAMj5D,EAAUi5D,EAAW//D,IAAI,WACzBwD,EAAWu8D,EAAW//D,IAAI,YAC1B4H,EAAWm4D,EAAWC,MAAM,CAAC,UAAW,aAE1Cl5D,IAAY1D,EAAQ0D,QAAQ+F,SAAS/F,IACvC1D,EAAQ0D,QAAQD,KAAKC,GAGnBtD,IAAaJ,EAAQI,SAASqJ,SAASrJ,IACxB,QAAbA,GACFJ,EAAQI,SAASqD,KAAKrD,GAItBoE,IAAaxE,EAAQwE,SAASiF,SAASjF,IACzCxE,EAAQwE,SAASf,KAAKe,MAGnBxE,M,4FA3BI08D,E,6iBCMAG,EAAkB,SAAC,GAAiB,IAAf5hE,EAAe,EAAfA,SAC1BkgC,EAAW2hC,cACX9vD,EAAQ,IAAIotD,gBAAgBj/B,EAAS5M,QAErChyB,EAAWwgE,cAKXtpB,EAAgB8hB,YAAYxxC,KAqBlC,OAnBA2N,IAAM37B,WAAU,WACd,IAPcmH,EAORqN,EAAOlS,IACV27C,KAAKP,EAAc72C,IAAI,WAAY,cACnCywC,KAAKh1C,IAAO27C,KAAKP,EAAc72C,IAAI,aAAc,cAAe,QATrDM,EAWN,CACNk3C,YAAa/7C,IAAO27C,KAAKP,EAAc72C,IAAI,cAActE,OAAO,cAChE+7C,OAAQ9pC,EAAO,EACfvN,UAAW,WACX29D,0BAA2B3tD,EAAMpQ,IAAI,8BAAgC,GACrEm+D,qBAAsB/tD,EAAMpQ,IAAI,yBAA2B,GAC3Do+D,qBAAsBhuD,EAAMpQ,IAAI,yBAA2B,GAC3DiC,OAAQmO,EAAMpQ,IAAI,WAAa,GAC/Bi+D,qBAAsB7tD,EAAMpQ,IAAI,yBAA2B,GAC3DkX,MAAO9G,EAAMpQ,IAAI,gBAAkB,GACnC05D,YAAatpD,EAAMpQ,IAAI,gBAAkB,IApB3CL,EAAS2R,IAAQwlC,QAAQE,gBAAgB12C,IACzCX,EAAS2R,IAAQysC,eAAe/G,gBAAgB12C,MAqB/C,IAEIjC,G,EA9BI4hE,E,2GACMC,IAGAC,IAKKxH,QAuBxBsH,EAAgBvhE,UAAY,CAC1BL,SAAUkmC,IAAU8wB,IAAI1kB,a,4FAjCbsvB,E,ydCVArkD,EAAW,SAAC3jB,GACvB,OAAOoM,KAAKC,MAAMD,KAAKu5C,UAAU3lD,M,4FADtB2jB,E,2iEC8BPwkD,EAAe,CACnB/lC,KAAM,kBAAC,IAAD,wBACN9f,UAAW,kBAAC,IAAD,wBACX8lD,SAAU,kBAAC,IAAD,wBACVhpC,KAAM,kBAAC,IAAD,wBACNihB,SAAU,kBAAC,IAAD,wBACVz8B,QAAS,kBAAC,IAAD,wBACT/X,QAAS,kBAAC,IAAD,wBACTpJ,KAAM,kBAAC,IAAD,wBACN4lE,UAAW,kBAAC,IAAD,wBACXljD,UAAW,kBAAC,IAAD,wBACXmjD,WAAW,kBAAC,IAAD,yBAGTC,EAAqB,aAEzB,SAASnK,EAAT,GAWG,IAiEwB,IA3EzB3lD,EAUC,EAVDA,YACAM,EASC,EATDA,aACAshB,EAQC,EARDA,QACA9B,EAOC,EAPDA,YACAptB,EAMC,EANDA,QACA+N,EAKC,EALDA,cACAC,EAIC,EAJDA,gBACA0hB,EAGC,EAHDA,eACA4jC,EAEC,EAFDA,eAGA,GADC,EADDxb,IAEA,EAAsC7iD,mBAAS,IAA/C,IAAOooE,EAAP,KAAoBC,EAApB,KAyBA,SAASC,EAAaruC,EAASsuC,GAC7B,OACE,yBAAKvhE,IAAKuhE,EAAV,sBACGtuC,EAAQG,KAAKvzB,KAAI,SAAA+R,GAAM,OACtB,kBAAC,IAAD,CACE5R,IAAK4R,EAAOpY,KACZoY,OAAQA,EACRD,aAAcA,EACdshB,QAASA,EACTuuC,YAAaT,EALf,2BA+CR,SAASU,IACNxiC,OAAOC,SAASC,QAAO,GACvBuiC,eAAejjB,WAAW,gBAI7B,OAjFA3kD,qBAAU,WAER,IADA,IACA,MADoBsZ,OAAOC,KAAKgkD,GAChC,eAA+B,CAA1B,IAAMr3D,EAAG,KACgB,gBAAxBq3D,EAAer3D,IAAkD,WAAxBq3D,EAAer3D,IAC1DqR,EAAYrR,GAIhBmhE,EAAqBnH,KAAS,SAAAphE,GAC5BmZ,EAAgBnZ,KACf,KACCmL,EAAQuuB,QACV+uC,EAAet9D,EAAQuuB,UAExB,IAoED,oCACE,kBAAC,IAAD,CAAQlS,MAAM,oBAAd,uBACA,kBAAC,IAAD,CAAWvF,UAAU,EAAOw+B,QAAS,CAAEre,KAAM,2BAA7C,sBACE,yBAAK/7B,UAAU,sBAAf,sBAAsC,CAAC,QAAD,SAAYkyB,IAAatxB,KArErE,SAA0BqzB,GACxB,OACE,0BAAMlzB,IAAKkzB,EAAX,sBACE,0BAAMj0B,UAAU,aAAhB,sBAA8Bi0B,GADhC,KACqD,SAmEnD,+CACCwuC,eAAe9jB,QAAQ,iBAAmB,+CAAK,kBAAC,IAAD,CAAYriC,MAAO,CAAEjB,MAAO,QAAQ+F,OAAQ,WAAcX,QAAS,SAAAxkB,GAAC,OAAIumE,KAAxE,uBAAuF,0BAAM/hD,QAAS,SAAAxkB,GAAC,OAAIumE,KAAalmD,MAAO,CAACpc,SAAU,OAAOmb,MAAO,UAAU2J,WAAY,SAAS5D,OAAQ,WAAxG,sCAA5F,KAC3C,yBAAKphB,UAAU,mBAAf,sBACE,kBAAC,IAAD,CAAQrG,MAAOmL,EAAQ1I,KAAMJ,SAAU,SAAA0mE,GAAE,OAAI7vD,EAAc6vD,EAAGzlD,OAAOtjB,QAArE,sBACG,CAAC,CAAEyC,KAAM,MAAO+kB,MAAO,QAAvB,SAAmC0Q,MAAcjxB,KAAI,SAAAxE,GAAI,OACxD,kBAAC,IAAD,CAAU2E,IAAK3E,EAAKA,KAAMzC,MAAOyC,EAAKA,KAAtC,sBACGA,EAAK+kB,WAIZ,yBAAKnhB,UAAU,uBAAf,sBACE,kBAAC,IAAD,CAAmBrG,MAAOwoE,EAAanmE,SAzDjD,SAA4BC,GAC1B,IAAM8yC,EAAM9yC,EAAEghB,OAAOtjB,MACrBuoE,EAAmBnzB,GACnBqzB,EAAerzB,IAsDP,yBAnDV,WAEE,IADA,IACA,MADoB56B,OAAOC,KAAKgkD,GAChC,eAA+B,CAA1B,IAAMr3D,EAAG,KACZ,GAA4B,aAAxBq3D,EAAer3D,GACjB,OACE,yBAAKf,UAAU,UAAf,sBACE,kBAAC,IAAD,CAAkB0d,KAAM,GAAxB,uBACA,2DAAe3c,EAAf,iBAMR,OAAO,KAyCF4hE,GACD,yBAAK3iE,UAAU,yCAAf,sBACE,yBAAKA,UAAU,wCAAf,sBACE,yBAAKA,UAAU,UAAf,sBAvCJ0E,MAAMC,QAAQqvB,IAAd,UAA0BA,EAAQ,UAAlC,iBAA0B,EAAYG,YAAtC,OAA0B,EAAkB/4B,OACvC44B,EAAQpzB,IAAIyhE,GAGjBluD,OAAOxD,OAAOynD,GAAgB98D,MAAK,SAAAW,GAAC,MAAU,aAANA,KACnC,KAEA,uBAkCH,yBAAK+D,UAAU,4BAAf,sBACE,kBAAC,IAAD,CAAgBw0B,eAAgBA,EAAgB+tC,YAAaT,EAA7D,2B,EAvHH/J,E,4DA+HTA,EAAW33D,UAAY,CACrBgS,YAAa6zB,IAAU7f,KACvB1T,aAAcuzB,IAAU7f,KACxBvT,cAAeozB,IAAU7f,KACzBtT,gBAAiBmzB,IAAU7f,KAC3B4N,QAASiS,IAAU5U,MACnBa,YAAa+T,IAAU5U,MACvBvsB,QAASmhC,IAAUvtB,OACnB8b,eAAgByR,IAAUvtB,Q,UAGbyW,aACb,SAAArb,GAAK,MAAK,CACRkgB,QAASN,YAAY5f,GACrBoe,YAAaF,YAAele,GAC5BhP,QAASgP,EAAMme,SAASntB,QACxB0vB,eAAgBF,YAAkBxgB,GAClCskD,eAAgBtkD,EAAMme,SAASa,gBAEjC,CAAE1gB,gBAAaM,iBAAcG,kBAAeC,oBAAiBC,eARhDoc,CASb4oC,GATa,O,6FA1JT+J,E,mEAcFI,E,yEAEKnK,E,ujBCjCI6K,EAAqB,WAChC,OACE,oCACE,kBAAC,IAAD,KACE,kBAACC,EAAD,MACA,kBAACC,EAAD,OAEF,kBAACC,EAAD,QAKOF,EAA4B,WACvC,IAAQ9wD,EAAQixD,cAARjxD,IACFkuB,EAAW2hC,cAEXqB,EAAS,CACb,CAAE5c,GAAI,GAAF,OAAKt0C,EAAL,UAAkBlW,MAAO,SAC7B,CAAEwqD,GAAI,GAAF,OAAKt0C,EAAL,WAAmBlW,MAAO,WAGhC,OAAO,kBAAC,IAAD,CAAkBs6B,OAAQ8J,EAASs9B,SAAU0F,OAAQA,K,EATjDJ,E,mEACKG,IACCpB,QAUZ,IAAMkB,EAAoB,WAC/B,IAAM7iC,EAAW2hC,cACT7vD,EAAQixD,cAARjxD,IAER,OAAIkuB,EAASs9B,SAAShvD,SAAS,cACtB,KAGL0xB,EAASs9B,SAAShvD,SAAS,SAE3B,yBAAKvO,UAAU,gBAAgBsc,MAAO,CAAE0xC,OAAQ,eAC9C,kBAAC,IAAD,CAAQ3yC,MAAM,UAAUgrC,GAAE,UAAKt0C,EAAL,qBAA6BghC,UAAWmwB,KAAlE,gBAOFjjC,EAASs9B,SAAShvD,SAAS,UAE3B,yBAAKvO,UAAU,gBAAgBsc,MAAO,CAAE0xC,OAAQ,eAC9C,kBAAC,IAAD,CAAQ3yC,MAAM,UAAUgrC,GAAE,UAAKt0C,EAAL,sBAA8BghC,UAAWmwB,KAAnE,iBAOC,M,EA5BIJ,E,mEACMlB,IACDoB,QA6BX,IAAMD,EAAuB,WAClC,IAAQhxD,EAAQixD,cAARjxD,IAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+rD,OAAK,EAAC32D,KAAI,UAAK4K,IACpB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAO5K,KAAI,UAAK4K,EAAL,YACT,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAO5K,KAAI,UAAK4K,EAAL,WACT,kBAAC,IAAD,S,EAZKgxD,E,4CACKC,Q,UAiBHJ,EAAA,O,6FAzEFA,E,uEAYAC,E,8EAYAC,E,sEA+BAC,E,+mBCnDAI,EAAY,SAAC,GAOpB,IANJz5C,EAMI,EANJA,SACAghB,EAKI,EALJA,aACAw1B,EAII,EAJJA,aACAvpC,EAGI,EAHJA,UACAysC,EAEI,EAFJA,cACAtsD,EACI,EADJA,UAEAjc,qBAAU,WACRqlE,IACyB,IAArBvpC,EAAUv7B,QACZgoE,MAED,IAMH,IAAMC,EAAQL,cAERM,EAAW,SAAAj6C,GACf,gBAAUg6C,EAAMtxD,IAAhB,YAAuBsX,EAAK9uB,OAG9B,OAAIuc,EAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,2BAON,kBAAC,IAAD,CAAMqiD,QAAM,GACV,6BAASn5D,UAAU,wBACjB,kBAAC,IAAD,CAAgBswB,MAAO5G,EAAUphB,OAvBvC,SAA2B+gB,EAAMvX,GAC/B,OAAOuX,EAAK9uB,KAAK4P,cAAcoE,SAASuD,EAAM3H,kBAuBvC,SAAAkf,GAAI,OAAI,kBAAC,IAAD,CAAUhuB,SAAUqvC,EAAcrhB,KAAMA,EAAM6uB,KAAMorB,EAASj6C,SAG1E,6BAASrpB,UAAU,wBACjB,kBAACujE,EAAD,S,EA3CKJ,E,uDAmBGH,QA8BhBG,EAAU/iE,UAAY,CACpBspB,SAAU2H,QACVqZ,aAAchyB,SACdwnD,aAAc95C,QAGT,IAAMm9C,EAAa,WACxB,IAAQp8D,EAAS67D,cAAT77D,KAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO22D,OAAK,EAAC32D,KAAI,UAAKA,EAAL,gBACf,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,eACT,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAO22D,OAAK,EAAC32D,KAAI,UAAKA,IACpB,kBAAC,IAAD,S,EAZKo8D,E,6CACMP,Q,UAiBJ7zC,aACb,SAAArb,GAAK,MAAK,CACR4V,SAAUiL,YAAmB7gB,EAAMmrB,aAAatU,MAAMC,KACtD8f,aAAc52B,EAAMmrB,aAAatU,MAAMtvB,SACvCs7B,UAAW7iB,EAAM2V,OAAOmB,IACxB9T,UAAWhD,EAAMmrB,aAAalqB,MAAM4V,MAAMnpB,YAE5C,SAAAH,GAAQ,MAAK,CACX6+D,aAAc,kBAAM7+D,EAAS4nB,gBAC7Bm6C,cAAe,kBAAM/hE,EAAS6oB,mBATnBiF,CAWbg0C,GAXa,O,6FAzEFA,E,oEAuDAI,E,wmBCnDAC,EAAa,SAAC,GAA4C,IAA1C7sC,EAA0C,EAA1CA,UAAWysC,EAA+B,EAA/BA,cAAetsD,EAAgB,EAAhBA,UACrDjc,qBAAU,WACRuoE,MACC,IAMH,IAAMC,EAAQL,cAERS,EAAY,SAAAl5C,GAChB,gBAAU84C,EAAMtxD,IAAhB,YAAuBwY,EAAMhwB,OAG/B,OAAIuc,EAEA,kBAAC,IAAD,uBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,8CAON,kBAAC,IAAD,CAAMqiD,QAAM,EAAZ,sBACE,6BAASn5D,UAAU,sBAAnB,sBACE,kBAAC,IAAD,CAAgBswB,MAAOqG,EAAWruB,OAvBxC,SAA4BiiB,EAAOzY,GACjC,OAAOyY,EAAMhwB,KAAK4P,cAAcoE,SAASuD,EAAM3H,gBAsB3C,uBACG,SAAAogB,GAAK,OAAI,kBAAC,IAAD,CAAWA,MAAOA,EAAO2tB,KAAMurB,EAAUl5C,GAAzC,2BAGd,6BAASvqB,UAAU,uBAAnB,sBACE,kBAAC0jE,EAAD,2B,EAjCKF,E,uDASGR,QA8BhBQ,EAAWpjE,UAAY,CACrBu2B,UAAWtF,QACX+xC,cAAeh9C,QAGV,IAAMs9C,EAAoB,WAC/B,IAAQv8D,EAAS67D,cAAT77D,KAER,OACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAO22D,OAAK,EAAC32D,KAAI,UAAKA,EAAL,eAAjB,sBACE,kBAAC,IAAD,yBAEF,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,eAAX,sBACE,kBAAC,IAAD,yBAEF,kBAAC,IAAD,CAAO22D,OAAK,EAAC32D,KAAI,UAAKA,GAAtB,sBACE,kBAAC,IAAD,2B,EAZKu8D,E,6CACMV,Q,UAiBJ7zC,aACb,SAAArb,GAAK,MAAK,CACR6iB,UAAWhC,YAAmB7gB,EAAM2V,OAAOmB,IAAItiB,QAAO,SAAAg5C,GAAC,MAAe,SAAXA,EAAE/mD,SAC7Duc,UAAWhD,EAAM2V,OAAOk6C,IAAI/4C,IAAIppB,YAElC,SAAAH,GAAQ,MAAK,CACX+hE,cAAe,kBAAM/hE,EAAS6oB,mBANnBiF,CAQbq0C,GARa,O,6FA9DFA,E,sEA4CAE,E,k2KCpCAE,aAAb,kHACE,sBAAY9pE,GAAO,iDACjB,mBAAMA,IAoGR+pE,YAAc,SAAAt+C,GACZ,EAAKie,SAAS,CAAEsgC,cAAev+C,EAAMoL,iBAtGpB,EAyGnBozC,YAAc,WACZ,EAAKvgC,SAAS,CAAEsgC,cAAe,QA1Gd,EA6GnB3L,qBAAuB,SAAAD,GACjBA,EAAMrf,WAAaqf,EAAMnf,SAC3B,EAAKj/C,MAAMqlD,iBAAiB+Y,IA5G9B,EAAKpkD,MAAQ,CACXgwD,cAAe,KACfE,SAAUhmC,4FAAuBE,OALlB,EADrB,iEAUE,WACE,MAA2C7V,KAAKvuB,MAAxCmqE,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,gBAEvBD,IACAC,MAdJ,oBAiBE,WAAS,WACP,EAII77C,KAAKvuB,MAHPqqE,EADF,EACEA,aACArtD,EAFF,EAEEA,UACcod,EAHhB,EAGEkwC,WAAclwC,MAGR8vC,EAAa37C,KAAKvU,MAAlBkwD,SACF7pB,EAAa52B,iEAAkB8E,KAAKvuB,MAAM0pB,aAChD,OACE,sHACE,2DAAC,uDAAD,CAAQwiB,gBAAc,EAAtB,sBACE,iEAAIhmC,UAAU,eAAd,2CACW,aAAVk0B,GAAkC,YAAVA,EACvB,2DAAC,iDAAD,CACEgiC,cAAe7tC,KAAK8vC,qBACpBtf,UAAW17C,8CAAO27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,cACpDq3C,QAAS57C,8CAAO27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,YAHpD,uBAKE,KAEJ,2DAAC,8FAAD,CAA0By0B,OAAQ6tC,EAAU7T,gBAAiB,SAACkU,GAAD,OAAa,EAAK7gC,SAAS,CAAEwgC,SAAUK,KAApG,wBAEF,2DAAC,yDAAD,CAAMlL,QAAM,EAAZ,sBACGriD,EACC,2DAAC,iDAAD,uBACE,2DAAC,0DAAD,+CAGFktD,IAAahmC,4FAAuBC,OAClC,sHACE,2DAAC,0CAAD,CAAUj8B,KAAMmiE,EAAhB,uBACA,2DAAC,yDAAD,CAAOnkE,UAAU,uBAAjB,sBACE,2DAAC,yDAAM8f,OAAP,KACE,iEAAI9f,UAAU,oBAAd,sBACE,2DAAC,oEAAD,yBAEF,kEAAKA,UAAU,mBAAf,sBACE,2DAAC,2DAAD,CACEskE,UAAW,2DAAC,8DAAD,wBACXtkE,UAAU,aACVukE,gBAAc,cACdC,gBAAc,OACd/jD,QAAS4H,KAAKw7C,YACd9nE,SAAUo+C,EANZ,wCAUA,2DAAC,sDAAD,CACEz+C,GAAG,mBACH+oE,aAAW,EACXjU,SAAUnoC,KAAKvU,MAAMgwD,cACrB/iD,KAAMtD,QAAQ4K,KAAKvU,MAAMgwD,eACzB52B,QAAS7kB,KAAK07C,YALhB,sBAOE,2DAAC,0DAAD,CAAUtjD,QAAS4H,KAAK07C,YAAa9D,UAAW,SAAA16C,GAAK,OAAIA,EAAMC,mBAA/D,sBACE,2DAAC,wEAAD,CAAezpB,SAAUo+C,EAAzB,wBAEF,2DAAC,0DAAD,CAAU15B,QAAS4H,KAAK07C,YAAa9D,UAAW,SAAA16C,GAAK,OAAIA,EAAMC,mBAA/D,sBACE,2DAAC,4EAAD,CAAiBzpB,SAAUo+C,EAA3B,wBAEF,2DAAC,0DAAD,CAAU15B,QAAS4H,KAAK07C,YAAa9D,UAAW,SAAA16C,GAAK,OAAIA,EAAMC,mBAA/D,sBACE,2DAAC,gEAAD,CAAWzpB,SAAUo+C,EAArB,2BAKR,2DAAC,wEAAD,CAAeuqB,WAAYxwC,EAA3B,0BAKNpd,GAAaktD,IAAahmC,4FAAuBE,OACjD,sHACE,2DAAC,0EAAD,CACEl8B,KAAMmiE,EACNQ,iBAAkB,kBAAM,EAAKnhC,SAAS,CAAEwgC,SAAUhmC,4FAAuBC,SAF3E,4BA3Fd,yIAAkCzH,6CAAMC,eAqHxCmtC,aAAaxjE,UAAY,CACvB+jE,aAAc9yC,8CACd6yC,gBAAiB99C,6CACjBtP,UAAWrW,6CACX2jE,WAAY1rD,+CACZ6/B,cAAe7/B,+CACfymC,iBAAkB/4B,8C,aAGL+I,oDACb,SAAArb,GAAK,YAAK,CACRqwD,cAAc,UAAArwD,EAAM5R,SAAS+F,kBAAf,eAA2BX,OAAQ,GACjDwP,UAAWhD,EAAM5R,SAAS6S,MAAMhB,SAASvS,SAAWsS,EAAM5R,SAAS6S,MAAM9S,UAAUT,QACnF4iE,WAAYtwD,EAAM5R,SAAS4R,MAC3BykC,cAAe1vB,2DAAsB/U,GACrC0P,YAAawF,+DAAsBlV,OAErC,SAAAzS,GAAQ,MAAK,CACX6iE,gBAAiB,kBAAM7iE,EAASF,0DAChC8iE,cAAe,kBAAM5iE,EAASkB,0DAC9B48C,iBAAkB,SAAAn9C,GAAI,OAAIX,EAAS2R,qDAAQmsC,iBAAiBzG,gBAAgB12C,QAXjEmtB,CAaby0C,c,2BAba,+B,qIA9HFA,a,yyGCvBAgB,SAAb,mPACE,WACE,IAAQ5iE,EAASqmB,KAAKvuB,MAAdkI,KAER,OACE,iEAAIhC,UAAU,qBAAd,sBACGgC,EAAKpB,KAAI,SAAA0G,GAAI,OACZ,2DAAC,iDAAD,CAAevG,IAAKuG,EAAKpC,SAAUlD,KAAMsF,EAAzC,6BAPV,qIAA8BkvB,6CAAMC,eAcpCmuC,SAASxkE,UAAY,CACnB4B,KAAMqvB,+C,aAGOuzC,S,2BAAA,+B,qIAlBFA,S,koBCEAC,EAAY,SAAC,GAUpB,IATJzoE,EASI,EATJA,KACA4F,EAQI,EARJA,KACA6V,EAOI,EAPJA,KACAhO,EAMI,EANJA,OACA3E,EAKI,EALJA,SACA09C,EAII,EAJJA,aACAvD,EAGI,EAHJA,QACAylB,EAEI,EAFJA,aACAhsD,EACI,EADJA,eAEQzD,EAA2CyvD,EAA3CzvD,cAAeE,EAA4BuvD,EAA5BvvD,eAAgB/T,EAAYsjE,EAAZtjE,QACjCmkD,EAAkBlgD,IAA0Bs/D,yBAAyB7/D,GAC3E,MAAa,YAAT9I,EAEA,yBAAK4D,UAAU,kBAAf,sBACE,kBAAC,IAAD,CACE6J,OAAQA,EACRiN,UAAWzB,EACXwC,KAAMA,EACN+qC,aAAcA,EACdvD,QAASA,EALX,uBAOA,kBAAC,IAAD,CAAer9C,KAAMA,EAAM8U,UAAWvB,EAAtC,wBAKJ,yBAAKvV,UAAU,kBAAf,uBACI2lD,GACA,kBAAC,IAAD,CACE97C,OAAQA,EACRiP,eAAgBA,EAChBhC,UAAWtV,EACXqW,KAAMA,EACN+qC,aAAcA,EACdvD,QAASA,EANX,uBASF,kBAAC,IAAD,CAAer9C,KAAMA,EAAM8U,UAAWtV,EAASmkD,gBAAiBA,EAAiBzgD,SAAUA,EAA3F,yBAKN2/D,EAAUzkE,UAAY,CACpBhE,KAAM6pC,IAAU9f,OAChBnkB,KAAMikC,IAAUvtB,OAChBb,KAAMouB,IAAU5U,MAChBuxB,aAAc3c,IAAUvtB,OACxB2mC,QAASpZ,IAAU7f,KACnBvc,OAAQo8B,IAAU9f,OAClBjhB,SAAU+gC,IAAU9f,S,4FAnDT0+C,E,msICKPG,QAAU,CACdzjD,OAAQ,OACRD,MAAO,OACPhG,gBAAiB,mBACjBwhC,aAAc,MACd9kB,SAAU,WACV7G,KAAM,MACNF,IAAK,QAGDg0C,YAAc,CAClB5pD,MAAO,OACPnb,SAAU,OACVglE,WAAY,OACZC,WAAY,wBACZntC,SAAU,WACV/G,IAAK,QAGDm0C,QAAU,CACd7jD,OAAQ,OACRD,MAAO,OACPhG,gBAAiB,MACjBwhC,aAAc,MACd9kB,SAAU,WACV7G,KAAM,MACNF,IAAK,QAGMo0C,iBAAb,sSACE,WACEh9C,KAAKvuB,MAAM8hD,eACXvzB,KAAKvuB,MAAM+hD,eACXxzB,KAAKvuB,MAAMyiD,gBAJf,oBAOE,WACE,IAAM+oB,EAAiBj9C,KAAKvuB,MAAMyrE,SAAWl9C,KAAKvuB,MAAMyrE,SAASC,kBAAkBF,eAAiB,KAC9FG,EAAkBp9C,KAAKvuB,MAAMyrE,SAAWl9C,KAAKvuB,MAAMyrE,SAASC,kBAAkBC,gBAAkB,KAChGC,EAAgBr9C,KAAKvuB,MAAMyrE,SAAX,UACfl9C,KAAKvuB,MAAMyrE,SAASC,kBAAkBE,cADvB,YACwCr9C,KAAKvuB,MAAMyrE,SAASC,kBAAkBG,eAD9E,YACgGt9C,KAAKvuB,MAAMyrE,SAASC,kBAAkBI,iBACxJ,KAEEC,EAAkBx9C,KAAKvuB,MAAMgsE,UAAYz9C,KAAKvuB,MAAMgsE,UAAUC,iBAAiB,GAAGF,gBAAkB,KACpGG,EAAiB39C,KAAKvuB,MAAMgsE,UAAYz9C,KAAKvuB,MAAMgsE,UAAUC,iBAAiB,GAAGC,eAAiB,KAClGC,EAAgB59C,KAAKvuB,MAAMgsE,UAAYz9C,KAAKvuB,MAAMgsE,UAAUC,iBAAiB,GAAGE,cAAgB,KAEtG,OACE,kEAAKjmE,UAAWqoB,KAAKvuB,MAAMkG,UAA3B,sBACE,kEAAKA,UAAU,iBAAf,sBACE,kEAAKA,UAAU,8BAA8B4lB,IAAK2lC,8EAAa5lC,IAAI,eAAnE,uBACA,2DAACzK,aAAD,CACE6K,UAAU,QACV5E,MACE,sHACE,wFACE,mEAAM7E,MAAO,CAAE4pD,aAAc,OAA7B,6BADF,YAEGC,2CAAI72B,SAEP,wFACE,gGADF,YAEGjnB,KAAKvuB,MAAM0jD,WAGd,wFACA,gGADA,YAC2ByoB,EAAgB,WAAa,WADxD,IACqE,wFADrE,oBAEoBD,EAFpB,IAEoC,wFAFpC,sBAGsBH,EAHtB,IAGuC,0FAhB7C,sBAqBE,kEAAK7lE,UAAU,0BAA0B4lB,IAAK0lC,yEAAS3lC,IAAI,WAA3D,yBAGJ,kEAAK3lB,UAAU,WAAf,sBACE,kEAAKsc,MAAO,CAAE0b,SAAU,WAAYk2B,OAAQ,OAAQD,MAAO,OAA3D,sBACCwX,GACC,kEAAKnpD,MAAO,CAAE2U,IAAK,OAAQ+G,SAAU,YAArC,sBACE,kEAAK1b,MAAO0oD,QAAZ,sBACE,mEAAM1oD,MAAO2oD,YAAb,sBAA0B,gEAAGhoD,OAAO,SAASi7B,KAAK,eAAxB,iCAI9ButB,GACA,kEAAKnpD,MAAO,CAAE2U,IAAK,OAAQ+G,SAAU,YAArC,sBACE,kEAAK1b,MAAO8oD,QAAZ,sBACE,mEAAM9oD,MAAO2oD,YAAb,sBAA0B,gEAAGhoD,OAAO,SAASi7B,KAAK,eAAxB,gCAI/BotB,GACC,kEAAKhpD,MAAO,CAAE2U,IAAK,OAAQ+G,SAAU,YAArC,sBACE,kEAAK1b,MAAO0oD,QAAZ,sBACE,mEAAM1oD,MAAO2oD,YAAb,sBAA0B,gEAAGhoD,OAAO,SAASi7B,KAAK,eAAxB,sCAI9BotB,GACA,kEAAKhpD,MAAO,CAAE2U,IAAK,OAAQ+G,SAAU,YAArC,sBACE,kEAAK1b,MAAO8oD,QAAZ,sBACE,mEAAM9oD,MAAO2oD,YAAb,sBAA0B,gEAAGhoD,OAAO,SAASi7B,KAAK,eAAxB,qCAI/BwtB,GACC,kEAAKppD,MAAO,CAAE2U,IAAK,OAAQ+G,SAAU,YAArC,sBACE,kEAAK1b,MAAO0oD,QAAZ,sBACE,mEAAM1oD,MAAO2oD,YAAb,sBAA0B,gEAAGhoD,OAAO,SAASi7B,KAAK,eAAxB,8BAA6CwtB,GAAiBA,OAI5FA,GACA,kEAAKppD,MAAO,CAAE2U,IAAK,OAAQ+G,SAAU,YAArC,sBACE,kEAAK1b,MAAO8oD,QAAZ,sBACE,mEAAM9oD,MAAO2oD,YAAb,sBAA0B,gEAAGhoD,OAAO,SAASi7B,KAAK,eAAxB,8BAA6CwtB,GAAiBA,OAK9F,2DAAC,2CAAD,yBAEF,kEAAK1lE,UAAU,SAAf,sBACE,2DAAC,2CAAD,wBACA,2DAAC,2CAAD,CAAUqpB,KAAMhB,KAAKvuB,MAAMyjD,YAAY77C,IAAI,QAA3C,2BA/FV,6IAAsC80B,6CAAMC,eAsG5C4uC,iBAAiBjlE,UAAY,CAC3BJ,UAAWimC,+CACXsX,YAAatX,+CAAiBoM,YAGzB,IAAM8Y,gBAAkB,SAAAr3C,GAAK,MAAK,CACvCypC,YAAa/rB,2DAAoB1d,GACjC0pC,UAAW9rB,2DAAkB5d,GAC7BgyD,UAAWn0C,2DAAkB7d,GAC7ByxD,SAAU3zC,2DAAiB9d,KAGhBs3C,mBAAqB,SAAA/pD,GAAQ,MAAK,CAC7Cu6C,aAAc,SAAA55C,GAAI,OAAIX,EAAS2R,qDAAQ4oC,aAAalD,gBAAgB12C,KACpE65C,aAAc,SAAA75C,GAAI,OAAIX,EAAS2R,qDAAQ6oC,aAAanD,gBAAgB12C,KACpEu6C,YAAa,SAAAv6C,GAAI,OAAIX,EAAS2R,qDAAQupC,YAAY7D,gBAAgB12C,OAGpEqjE,iBAAiB/zC,aAAe,CAC9BtxB,UAAW,W,aAGEmvB,mDAAQg8B,gBAAiBC,mBAAzBj8B,CAA6Ck2C,kBAA7C,+BAEf,IAAMnqD,aAAeC,iEAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,0D,gKApKEspD,Q,gGAUAC,Y,oGASAG,Q,gGAUOC,iB,yGA2GAla,gB,wGAOAC,mB,2GAYPlwC,a,kmHC/JOkrD,UAAb,wPACE,WACE,OACE,kEAAKpmE,UAAS,UAAKqoB,KAAKvuB,MAAMkG,UAAhB,qBAAd,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMk/D,wCAAZ,2BALV,sIAA+B7vC,6CAAMC,eAYrC2vC,UAAUhmE,UAAY,CACpBJ,UAAWimC,gDAGbmgC,UAAU90C,aAAe,CACvBtxB,UAAW,a,aAGEomE,UAAA,wC,gKApBFA,U,08HCMAE,WAAb,8GACE,oBAAYxsE,GAAO,+CACjB,mBAAMA,IA4FRk2D,iBAAmB,SAACzqC,EAAO81C,GACrB,EAAKpL,UAAUrc,SAAW,EAAKqc,UAAUrc,QAAQsc,SAAS3qC,EAAMtI,UAIhEo+C,GACF,EAAKvhE,MAAMkxD,QAAQziD,KAAK8yD,GAE1B,EAAK73B,SAAS,CAAE+iC,MAAO,OArGN,EAwGnBC,kBAAoB,SAACjhD,EAAOhrB,GAC1B,EAAKipC,SAAS,CAAE+iC,MAAOhsE,EAAMupE,cAAev+C,EAAMtI,UAzGjC,EA4GnBwpD,mBAAqB,SAAClsE,GAChB,EAAKuZ,MAAMyyD,QAAUhsE,GACvB,EAAKipC,SAAS,CAAE+iC,MAAO,GAAIzC,cAAe,QA9G3B,EAkHnB4C,aAAe,SAACC,EAActL,GAC5B,EAAKvhE,MAAMkxD,QAAQziD,KAAK8yD,GACxB,EAAK73B,SAAS,CAAEojC,UAAWD,EAAcJ,MAAO,MAjHhD,EAAKzyD,MAAQ,CACX8yD,UAAW,EACXL,MAAO,GACPzC,cAAe,MAGjB,EAAK7T,UAAYz5B,6CAAM65B,YATN,EADrB,+DAaE,WACEhoC,KAAKw+C,sBAdT,gCAiBE,WACEx+C,KAAKw+C,sBAlBT,oBAqBE,WAAS,WACP,OACE,kEAAK7mE,UAAWqoB,KAAKvuB,MAAMkG,UAA3B,sBACGomD,0CAAgBxlD,KAAI,SAACgH,EAAM9G,GAC1B,OAAI8G,EAAK0oB,OAAS1oB,EAAK0oB,MAAMl1B,OAAS,EAElC,kEAAK2F,IAAKD,EAAV,sBACE,kEACEwoC,KAAK,eACLvoC,IAAKD,EACLd,UAAS,mBACP,EAAK8T,MAAM8yD,YAAc9lE,GAAS,EAAKgT,MAAMyyD,QAAU3+D,EAAKlM,GAAK,WAAa,GADvE,YAELkM,EAAK0+C,QAAU1+C,EAAK0+C,QAAU,IAClCwgB,aAAc,SAACvhD,GAAD,OAAW,EAAKihD,kBAAkBjhD,EAAO3d,EAAKlM,KAC5DqrE,aAAc,kBAAM,EAAKN,mBAAmB7+D,EAAKlM,KAPnD,sBASE,2DAAC,4DAAD,CAAYsE,UAAU,OAAtB,sBAA8B4H,EAAK+c,MACnC,sFAAI/c,EAAKuZ,QAEX,2DAAC,yDAAD,CACEnhB,UAAU,wBACVwwD,SAAU,EAAK18C,MAAMgwD,cACrB/iD,KAAM,EAAKjN,MAAMyyD,QAAU3+D,EAAKlM,GAChC+0D,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,QAVhB,sBAaE,2DAAC,uDAAD,uBACE,2DAAC,mEAAD,CAAmBE,YAAa,EAAKb,iBAArC,sBACE,2DAAC,0DAAD,CAAUhwD,UAAU,mBAAmBtE,GAAG,iBAA1C,sBACGkM,EAAK0oB,MAAM1vB,KAAI,SAAAomE,GAAO,OACrB,2DAAC,0DAAD,CACEjmE,IAAKimE,EAAQ3gB,GACbrmD,UAAWgnE,EAAQ1gB,QACnBD,GAAI2gB,EAAQ3gB,GACZtT,UAAWmwB,gDACXziD,QAAS,EAAKuvC,iBALhB,sBAOGgX,EAAQ7lD,eAYzB,kEACEmoB,KAAK,eACLvoC,IAAK6G,EAAKy+C,GACVrmD,UAAS,mBAAc,EAAK8T,MAAM8yD,YAAc9lE,EAAQ,SAAW,GAA1D,YACP8G,EAAK0+C,QAAU1+C,EAAK0+C,QAAU,IAEhC7lC,QAAS,kBAAM,EAAKimD,aAAa5lE,EAAO8G,EAAKy+C,KAC7CygB,aAAc,kBAAM,EAAKL,mBAAmB7+D,EAAKlM,KAPnD,sBASE,2DAAC,4DAAD,CAAYsE,UAAU,OAAtB,sBAA8B4H,EAAK+c,MACnC,sFAAI/c,EAAKuZ,cAtFvB,+BAwHE,WAAoB,WACZrgB,EAAQslD,0CAAgBptC,WAC5B,SAAApR,GAAI,OACFA,EAAKy+C,KAAO,EAAKvsD,MAAMmmC,SAASs9B,UAAY,EAAKzjE,MAAMmmC,SAASs9B,SAAS7uD,WAAW9G,EAAKy+C,OAGzFh+B,KAAKvU,MAAM8yD,YAAc9lE,GAC3BunB,KAAKmb,SAAS,CAAEojC,UAAW9lE,MA/HjC,uIAAgC01B,6CAAMC,eAoItC6vC,WAAWlmE,UAAY,CACrBJ,UAAWimC,+CACXhG,SAAUgG,+CAAiBoM,WAC3B2Y,QAAS/kB,8CAAgB,CACvB19B,KAAM09B,6CAAeoM,aACpBA,YAGLi0B,WAAWh1C,aAAe,CACxBtxB,UAAW,c,aAGEinE,wDAAWX,Y,2BAAX,+B,qIAhJFA,W,8lHCRAY,aAAb,uQACE,WACE,OACE,kEAAKlnE,UAAS,UAAKqoB,KAAKvuB,MAAMkG,UAAhB,oBAAd,sBACE,2DAAC,4EAAD,2BAJR,yIAAkCw2B,6CAAMC,eAUxCywC,aAAa9mE,UAAY,CACvBJ,UAAWimC,gDAGbihC,aAAa51C,aAAe,CAC1BtxB,UAAW,gB,aAGEknE,aAAA,wC,gKAlBFA,a,0yICYAC,SAAb,0GACE,kBAAYrtE,GAAO,6CACjB,mBAAMA,IA0ERk2D,iBAAmB,SAACzqC,EAAO81C,GACrB,EAAK+L,cAAcxzB,SAAW,EAAKwzB,cAAcxzB,QAAQsc,SAAS3qC,EAAMtI,UAI/D,SAATo+C,GACFr7B,OAAOjf,KACL,oGACA,UAIJ,EAAKyiB,SAAS,CAAE6jC,WAAW,MAvFV,EA0FnBC,cAAgB,SAAC/hD,GACX,EAAK6hD,cAAcxzB,SAAW,EAAKwzB,cAAcxzB,QAAQsc,SAAS3qC,EAAMtI,UAI5E+iB,OAAOjf,KAAP,kBACaif,OAAOC,SAAS8V,KAD7B,WAEE,UAGF,EAAKvS,SAAS,CAAE6jC,WAAW,MApGV,EAuGnBE,kBAAoB,WAClB,EAAK/jC,UAAS,SAAAmoB,GAAS,MAAK,CAC1B0b,WAAY1b,EAAU0b,eAtGxB,EAAKvzD,MAAQ,CACXuzD,WAAW,GAGb,EAAKD,cAAgB5wC,6CAAM65B,YAPV,EADrB,kDAWE,WAAS,WACP,OACE,sHACE,kEACErwD,UAAU,yBACVzG,IAAK8uB,KAAK++C,cACV3mD,QAAS4H,KAAKk/C,kBACdj+B,KAAK,eAJP,sBAME,2DAACpuB,aAAD,CAAc6K,UAAU,QAAQ5E,MAAOkH,KAAKvuB,MAAMuvB,KAAlD,sBACE,2DAAC,yDAAD,CAAQrpB,UAAU,cAAlB,sBAAiCqoB,KAAKvuB,MAAMuvB,KAAK+O,UAAU,EAAG,GAAGmvB,iBAIrE,2DAAC,yDAAD,CACEvnD,UAAU,2BACVwwD,SAAUnoC,KAAK++C,cAAcxzB,QAC7B7yB,KAAMsH,KAAKvU,MAAMuzD,UACjB5W,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,QAVhB,sBAaE,2DAAC,uDAAD,uBACE,2DAAC,oEAAD,CAAmBE,YAAaxoC,KAAK2nC,iBAArC,sBACE,2DAAC,0DAAD,CACEhwD,UAAU,iBACVwnE,cAAen/C,KAAKvU,MAAMuzD,UAC1B3rE,GAAG,iBAHL,sBAKuB,QAApB2sB,KAAKvuB,MAAMuvB,MACV,2DAAC,0DAAD,CACErpB,UAAU,qBACVygB,QAAS,SAAA8E,GAAK,OAAI,EAAK+hD,cAAc/hD,IAFvC,sBAIE,2DAAC,0CAAD,CAAkB7pB,GAAG,mBAArB,wBAGJ,2DAAC,0DAAD,CACEsE,UAAU,sBACVygB,QAAS,SAAA8E,GAAK,OAAI,EAAKyqC,iBAAiBzqC,EAAO,SAFjD,sBAIE,2DAAC,0CAAD,CAAkB7pB,GAAG,kBAArB,wBAEF,2DAAC,0DAAD,CAAUsE,UAAU,0BAA0BigE,UAAW,SAAA16C,GAAK,OAAIA,EAAMC,mBAAxE,sBACE,2DAAC,8FAAD,CACE6D,KAAMhB,KAAKvuB,MAAMuvB,KACjB6gB,eAAe,OAFjB,wBAKF,2DAAC,0DAAD,CAAUlqC,UAAU,sBAAsBqmD,GAAI2X,8CAAO72D,KAAM4rC,UAAWmwB,gDAAtE,sBACE,2DAAC,0CAAD,CAAkBxnE,GAAG,oBAArB,+BAlElB,qIAA8B86B,6CAAMC,eA+GpC0wC,SAAS/mE,UAAY,CACnBipB,KAAM4c,+CAAiBoM,Y,aAGV40B,wDAAWE,UAAX,+BAEf,IAAMjsD,aAAeC,iEAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,0D,gKA9HSyrD,S,wHAqHPjsD,a,+vDCrHOusD,EAAU,WACrB,QAAwB1tE,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,kBAAMC,GAAQ,IACpBuD,MAAO,WACLvD,GAAQ,GACR0mD,EAAQ,kBAGZ,IAAwB3tE,mBAAS,gBAAjC,GAAO4tE,EAAP,KAAaD,EAAb,KAEA,OACE,oCACE,yBAAK1nE,UAAU,UAAf,sBACE,kBAAC,IAAD,CAASmhB,MAAM,UAAf,sBACE,kBAAC,IAAD,CAA0BV,QAAS6D,EAAavD,KAAhD,yBAGJ,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,EAA5B,sBACY,iBAATqjD,GAA2B,kBAACC,EAAD,CAAcF,QAASA,EAAvB,uBAClB,aAATC,GAAuB,kBAACE,EAAD,2B,EApBnBJ,E,+EA0Bb,IAAMG,EAAe,SAAC,GAAgB,IAAdF,EAAc,EAAdA,QACd10D,EAAYguB,qBAAW2F,KAAvB3zB,QAER,OACE,kBAAC,IAAD,CACEsJ,MAAO,CACLmI,SAAU,QACVC,UAAW,QACX9I,SAAU,QAJd,sBAOE,kBAAC,IAAD,CAAauF,MAAM,UAAUwD,KAAM,kBAAC,IAAD,wBAAnC,uBACA,kBAAC,IAAM3E,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,uBACE,uBAAGvI,MAAO,CAAE0I,WAAY,UAAxB,8IAIA,uBAAG1I,MAAO,CAAEwrD,UAAW,UAAvB,oDAIN,kBAAC,IAAMrmD,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACErE,QAAS,WACPzN,EAAQuR,SAFZ,6BAQF,kBAAC,IAAM9C,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPinD,EAAQ,aAFZ,iC,EAlCJE,E,2BA+CN,I,IAAMC,EAAW,WACf,QAAsC9tE,mBAAS,aAA/C,GAAOguE,EAAP,KAAoBC,EAApB,KACM3mE,EAAWwgE,cAET7uD,EAAYguB,qBAAW2F,KAAvB3zB,QAwBR,OAtBAnY,qBAAU,WACR2X,QAAQgS,IAAI,wBACZyjD,cACG7yC,MAAK,WACJ4yC,EAAe,cAEf9jE,QAAQ0mB,IAAI,CAACvpB,EAAS+Q,YAAY,YAAa/Q,EAAS+Q,YAAY,gBACjEgjB,MAAK,WACJ4yC,EAAe,WACfx1D,QAAQgS,IAAI,4BAEbgkB,OAAM,WACLw/B,EAAe,qBACfx1D,QAAQgS,IAAIi3C,QAAS,2DAG1BjzB,OAAM,WACLw/B,EAAe,UACfx1D,QAAQgS,IAAI,4BAEf,IAGD,kBAAC,IAAD,CACElI,MAAO,CACLmI,SAAU,QACVgX,UAAW,SAHf,sBAME,kBAAC,IAAD,CAAa9W,KAAM,kBAAC,IAAD,wBAA8BxD,MAAM,UAAvD,uBACA,kBAAC,IAAD,CAAQxnB,MAAOouE,EAAf,sBACE,kBAAC,IAAOhnC,KAAR,CAAapnC,MAAM,aACjB,kBAAC,IAAD,uBACE,kBAAC,IAAD,kDAEF,kBAAC,IAAM8nB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAASzN,EAAQuR,MAAzB,kCAIN,kBAAC,IAAOwc,KAAR,CAAapnC,MAAM,cACjB,kBAAC,IAAD,uBACE,kBAAC,IAAD,gDAEF,kBAAC,IAAM8nB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAASzN,EAAQuR,MAAzB,kCAIN,kBAAC,IAAOwc,KAAR,CAAapnC,MAAM,UACjB,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQyC,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,CAAamH,SAAO,GAApB,yBAGJ,kBAAC,IAAMihB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAASzN,EAAQuR,MAAzB,kCAIN,kBAAC,IAAOwc,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQyC,KAAK,UAAb,sBACE,kBAAC,IAAO/C,KAAR,CAAamH,SAAO,GAApB,4BAGJ,kBAAC,IAAMihB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAASzN,EAAQuR,MAAzB,iCAIN,kBAAC,IAAOwc,KAAR,CAAapnC,MAAM,qBACjB,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQyC,KAAK,UAAb,sBACE,kBAAC,IAAO/C,KAAR,CAAamH,SAAO,GAApB,yBACA,kBAAC,IAAOnH,KAAR,CAAamH,SAAO,GAApB,uCAGJ,kBAAC,IAAMihB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAASzN,EAAQuR,MAAzB,oCASd,SAASM,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,QARf,sBAWGllB,G,EAhHD8nE,E,uIAEahG,S,6FA3EN4F,E,sGA0BPG,E,2GA+CAC,E,uGAmGGhjD,E,mxBC1KT,SAASqjD,IACP,OAAO,IAAIhJ,gBAAgB0C,cAAcvuC,Q,EADlC60C,E,mCACoBtG,QAG7B,IAAMuG,EAAa,SAAAruE,GAAK,OAAI,kBAAC,IAAD,KAAUA,EAAV,CAAiBi5C,UAAWq1B,IAA5B,yBAEtB/J,EAAa,WACjB,IAAMvsD,EAAQo2D,IAER/kE,EAAO2O,EAAMpQ,IAAI,cACjBm5B,EAAc/oB,EAAMpQ,IAAI,WACxB2mE,EAAav2D,EAAMpQ,IAAI,cAE7B,OACE,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAa04C,QAAS,CAAEre,KAAM,wBAA0BywB,aAAW,aAAnE,sBACE,kBAAC2b,EAAD,CAAY9hB,GAAG,QAAf,8BACA,kBAACiiB,EAAD,0BAGJ,kBAAC,IAAD,uBACE,kBAAC,IAAD,uBACE,kBAACC,EAAD,CAAaplE,KAAMA,EAAMqC,QAASq1B,EAAlC,sBACE,kBAAC,IAAD,CAAkBwtC,WAA2B,SAAfA,EAA9B,4B,EAlBNhK,E,qCACU6J,M,UAyBD7J,EAEf,SAASkK,EAAT,GAAkD,IAA3BxoE,EAA2B,EAA3BA,SAAUoD,EAAiB,EAAjBA,KAAMqC,EAAW,EAAXA,QAC/BsM,EAAQuoD,YAAYvrC,KACpBztB,EAAWwgE,cAMjB,OAJAhnE,qBAAU,WACRwG,EAASo6C,YAAat4C,EAAMqC,MAC3B,CAACrC,IAEA2O,EAAM3O,OAASA,EAEf,oCACE,kBAAC,IAAM6c,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,0DAOH7kB,EAGT,SAASuoE,IACP,IAAM3kE,EAAS02D,YAAYprC,KACrBvrB,EAAa22D,YAAYrrC,KAE/B,OAAIrrB,IAAWue,IAAiBC,IACvB,yBAAKniB,UAAU,cAAf,iCAGL0D,GAAcA,EAAW8kE,YAEzB,kBAAC,IAAD,CACEziD,UAAU,eACV5E,MACE,oCACE,4DAAgBzd,EAAW8kE,aAC1B9kE,EAAWs2C,UAAY,0DAAct2C,EAAWs2C,WALvD,sBASE,yBAAKh6C,UAAU,cAAf,sBAA8B0D,EAAW8kE,cAKxC,KAjDM,M,EAEND,E,4EACOlO,IACGwH,Q,EAqBVyG,E,kEACQjO,IACIA,S,6FA3DZ6N,E,kEAIHC,E,oEAEA9J,E,oEA4BGkK,E,qEAuBAD,E,shBC5EHG,EAAe,CACnBC,oBAAqB,gCACrBC,MAAO,kBACPC,OAAQ,mBACR1sB,WAAY,uBACZG,WAAY,uBACZC,UAAW,uBAGArpC,EAAiB,CAC5ByqC,mBAAoB,IAAImrB,IAAcJ,EAAaC,qBACnDvrB,MAAO,IAAI0rB,IAAcJ,EAAaE,OACtCppB,OAAQ,IAAIspB,IAAcJ,EAAaG,QACvChtB,aAAc,IAAIitB,IAAcJ,EAAavsB,YAC7CL,aAAc,IAAIgtB,IAAcJ,EAAapsB,YAC7CE,YAAa,IAAIssB,IAAcJ,EAAansB,a,6FAfxCmsB,E,kFASOx1D,E,saCLHyqC,G,0BAqBO+L,G,yiCArBjB,SAAU/L,EAAV,sGAA+Bt8C,EAA/B,EAA+BA,QAC7BK,IAAWqnE,eADb,kBAG2BrnE,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUmnE,aAAa3nE,GAAU,CACpFU,UAAW,aAJjB,cAGUC,EAHV,OAOUyhB,EAAc,CAClBjpB,KAAMwH,EAASC,KAAKA,KAAKgnE,OAAO3/C,MAG9BtnB,EAASC,KAAKA,KAAK2oB,OAAS5oB,EAASC,KAAKA,KAAK2oB,MAAM,KAAI,IACnC5oB,EAASC,KAAKA,KAAK2oB,MADgB,GAC1DnH,EAAY9Y,QAD8C,MAXjE,UAeUuhC,YAAIj5B,IAAQ0qC,mBAAmBvB,gBAAgB34B,IAfzD,2EAiBUyoB,YAAIj5B,IAAQ0qC,mBAAmBtB,gBAjBzC,sDAqBO,SAAUqN,IAAV,gGACCjN,YAAUxpC,IAAQ0qC,mBAAmBjB,mBAAoBiB,GAD1D,6C,6FArBGA,E,wHAqBO+L,E,2cC3BF,CACbwf,KAAM,KACNtnE,KAAM,CACJwoD,KAAM,OACNxsB,QAAS,GACT4sB,QAAS,KACT3oD,UAAW,CACT+mE,MAAO,gBACPI,aAAc,SAAAxuE,GAAI,qBAAYA,IAC9B2uE,aAAc,gBACdC,cAAe,gBACfC,UAAW,kCACXvmE,KAAM,cACN4H,UAAW,WACXye,MAAO,QACP6tB,UAAW,QACXsyB,WAAY,aACZl/C,OAAQ,SACRtoB,SAAU,WACVynE,MAAO,QACPC,KAAM,QACN/mE,UAAW,YACXgnE,mBAAoB,0BACpBzkE,SAAU,SAAAxK,GAAI,iCAAwBA,EAAxB,kBACdwQ,eAAgB,oCAChBd,UAAW,2BACXshB,oBAAqB,aACrBW,4BAA6B,wBAC7B5lB,WAAY,SAAA/L,GAAI,iCAAwBA,EAAxB,mBAChBmM,WAAY,4BACZw1C,WAAY,WACZG,WAAY,wBACZC,UAAW,wBACX9kB,gBAAiB,iBACjB6Q,sBAAuB,oCACvBmD,cAAe,iCACfI,kBAAmB,sBACnBI,0BAA2B,kCAC3BE,0BAA2B,kCAC3Bu9B,0BAA2B,kCAC3BC,4BAA6B,8BAC7BC,wBAAyB,0BAzChB,O,0fCOLxsB,G,0BAoEOuM,G,iFApEjB,SAAUvM,EAAMx6C,GAAhB,sGAEIioD,IAAO3b,IACL,gBACA26B,EAAOznE,KAAP,UAAeQ,EAAOvB,QAAQ2oB,SAA9B,YAA0CpnB,EAAOvB,QAAQ4oB,WAAY9f,SAAS,WAEhFzI,IAAWqnE,eANf,SAOUrnE,IAAWwmB,KAAK9uB,IAAUwI,KAAKC,UAAU+mE,OAPnD,uBAQU18B,YAAIj5B,IAAQmqC,MAAMhB,mBAR5B,uBASUlQ,YAAIj5B,IAAQ0qC,mBAAmBhF,gBAAgB/1C,EAAOvB,QAAQ2oB,WATxE,OAUI20B,aAAaW,QAAQ,WAAYt5C,KAAKu5C,UAAU38C,EAAOvB,QAAQ2oB,WAVnE,qDAYS,KAAOhoB,SAZhB,kCAaYkqC,YACJj5B,IAAQmqC,MAAMf,aAAa,CACzB,CACExyC,QAAS,uDAhBrB,6CAuBwC,MAAhC,KAAO7H,SAASC,KAAK2B,OAvB7B,kCAwBYsoC,YAAIj5B,IAAQmqC,MAAMf,aAAa,KAAOr6C,SAASC,KAAK3F,MAAMqO,UAxBtE,6CA4BwC,MAAhC,KAAO3I,SAASC,KAAK2B,OA5B7B,kCA6BYsoC,YACJj5B,IAAQmqC,MAAMf,aAAa,CACzB,CACExyC,QAAS,KAAO7H,SAAS8nE,eAhCrC,6CAwCwC,MAAhC,KAAO9nE,SAASC,KAAK2B,OAxC7B,kCAyCYsoC,YACJj5B,IAAQmqC,MAAMf,aAAa,CACzB,CACExyC,QAAS,KAAO7H,SAAS8nE,eA5CrC,mFAoDQ,KAAQ9nE,gBApDhB,QAoDQ,EAAkB8nE,WApD1B,kCAqDY59B,YACJj5B,IAAQmqC,MAAMf,aAAa,CACzB,CACExyC,QAAS,KAAO7H,SAAS8nE,eAxDrC,2GAoEO,SAAUngB,IAAV,gGACClN,YAAUxpC,IAAQmqC,MAAMV,mBAAoBU,GAD7C,6C,6FApEGA,E,+EAoEOuM,E,2bC/DPnK,G,0BAOOoK,G,iFAbjB,SAASmgB,IACP,OAEI9pC,OAAOC,SAASrf,QAAhB,eAAgCm9C,IAAM52D,OAG5C,SAAUo4C,IAAV,uFACEb,aAAac,WAAW,YACxB/9C,IAAWsoE,kBACXD,IAHF,SAIQ79B,YAAIj5B,IAAQusC,OAAOpD,mBAJ3B,4CAOO,SAAUwN,IAAV,gGACCnN,YAAUxpC,IAAQusC,OAAO9C,mBAAoB8C,GAD9C,6C,6FAbEuqB,E,qFAMCvqB,E,kFAOOoK,E,+MCnBjBqgB,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,y6HCgBrC7pE,UAAY,SAAH,CAEb+rD,UAAWlmB,kDAAUxlC,KACrBypE,iBAAkBjkC,kDAAUxlC,KAC5Bs1D,iBAAkB9vB,kDAAU7f,KAE5BqsC,iBAAkB0X,8DAAgBC,UAClC5X,eAAgB2X,8DAAgBC,UAEhCvU,YAAa5vB,kDAAU9f,OACvB2vC,yBAA0B7vB,kDAAU9f,OACpCksC,UAAWpsB,kDAAU9f,OACrBmsC,uBAAwBrsB,kDAAU9f,OAClCpqB,SAAUkqC,kDAAUxlC,KACpB7G,SAAUqsC,kDAAUxlC,KACpBg1D,yBAA0BxvB,kDAAU9f,OACpCuvC,eAAgBzvB,kDAAUxlC,KAC1Bk1D,qBAAsB1vB,kDAAUxlC,KAChC2wD,gBAAiBnrB,kDAAUvtB,OAC3Bu5C,gBAAiBhsB,kDAAU3lC,KAC3B6xD,gBAAiBlsB,kDAAUvtB,OAC3Bs5C,MAAO/rB,kDAAUxlC,KACjBm1D,MAAO3vB,kDAAUxlC,KACjB40D,QAASpvB,kDAAUxlC,KAGnB80D,gBAAiBtvB,kDAAU9f,OAC3BitC,YAAantB,kDAAU9f,OACvB4rC,gBAAiB9rB,kDAAU9f,OAC3BosC,iBAAkBtsB,kDAAUka,OAC5B8V,WAAYhwB,kDAAUxlC,KACtBu1D,qBAAsB/vB,kDAAUxlC,KAChCiyD,oBAAqBzsB,kDAAU9f,OAC/BgrC,eAAgBlrB,kDAAUka,OAC1B2S,qBAAsB7sB,kDAAUxlC,KAChC+0D,yBAA0BvvB,kDAAUxlC,KACpCoyD,MAAO5sB,kDAAUxlC,KAGjBwyD,YAAahtB,kDAAU9f,OACvBsrC,QAASxrB,kDAAU3lC,KACnBqxD,QAAS1rB,kDAAU3lC,KACnB6yD,iBAAkBltB,kDAAU7f,KAC5B8sC,iBAAkBjtB,kDAAU7f,KAC5B8mB,QAASjH,kDAAU7f,KAGnBkvC,kBAAmBrvB,kDAAU9f,OAC7B2rC,kBAAmB7rB,kDAAU7f,KAC7B2sC,cAAe9sB,kDAAUka,OACzBiS,kBAAmBnsB,kDAAUxlC,KAC7BkyD,aAAc1sB,kDAAU7f,KACxBkrC,eAAgBrrB,kDAAU7f,KAC1BwsC,iBAAkB3sB,kDAAU7f,KAG5BorC,cAAevrB,kDAAU7f,KACzB4sC,YAAa/sB,kDAAU9f,OACvBktC,QAASgX,iEAENC,mDAAKC,8DAAsB,CAC5B,YACA,UACA,gBACA,eACA,mBAIEj5C,aAAe,CAEnB66B,WAAW,EACX+d,kBAAkB,EAClBzX,iBAAkB,KAClBD,eAAgB,KAGhBqD,YAAazwB,0CACb0wB,yBAA0B,aAC1BzD,UAAWhtB,0CACXitB,uBAAwB,WACxBv2D,UAAU,EACVnC,UAAU,EACV67D,yBAA0B,GAC1BC,gBAAgB,EAChBC,sBAAsB,EACtBvE,gBAAiB,KACjBa,gBAAiB,KACjBE,gBAAiB,KACjBH,OAAO,EACP4D,OAAO,EACPP,SAAS,EAGTE,gBAAiB,KACjBnC,YAAa9tB,0CACbysB,gBAAiBvsB,0CACjB+sB,iBAAkB,EAClB0D,YAAY,EACZD,sBAAsB,EACtBtD,oBAAqB,KACrBvB,eAAgB,EAChB2B,sBAAsB,EACtB0C,0BAA0B,EAC1B3C,OAAO,EAGPI,YAAa1tB,0CACbksB,QAAS,KACTE,QAAS,KACTwB,iBAzCmB,aA0CnBD,iBA1CmB,aA2CnBhmB,QA3CmB,aA8CnBooB,uBAAmBp6D,EACnB42D,kBAAmB,KACnBiB,cAAe,EACfX,mBAAmB,EACnBO,aAAc,kBAAM,GACpBrB,eAAgB,SAAC/H,GAAD,OAAUnB,kDAAsBmB,EAAKpsD,kDACrDy1D,iBAAkB,kBAAM,GAGxBpB,cAAe,kBAAMr0D,8CAAOqtE,aAAaC,eAAe,MACxDzX,YAAa,YACbK,QAASgX,gEAETtU,iBAAkB,SAACn4D,GAAD,OAAUA,IAGxB8sE,uB,8HACJ,gCAAY5wE,GAAO,mDACjB,mBAAMA,GAEN,IAAIq8D,EAAe,KAHF,OAIbr8D,EAAMqyD,UACRgK,EAAe/wB,0CACNtrC,EAAMowE,mBACf/T,EAAe9wB,2CAGjB,EAAKvxB,MAAQ,CACXqiD,gBAGF,EAAKD,cAAgB,EAAKA,cAAc1yD,KAAnB,2BACrB,EAAK0tD,cAAgB,EAAKA,cAAc1tD,KAAnB,2BAfJ,E,gEAkBnB,WACE,IAAQ2yD,EAAiB9tC,KAAKvU,MAAtBqiD,aAKFr8D,EAAQwwE,mDAAKjiD,KAAKvuB,MAAO,CAC7B,YACA,mBACA,mBACA,iBACA,qBAGF,OACE,sEACE,2DAAC,yDAAD,YACMA,EADN,CAEEo8D,cAAe7tC,KAAK6tC,cACpBhF,cAAe7oC,KAAK6oC,cACpBiF,aAAcA,EACdtd,UAAWxwB,KAAKvuB,MAAM++C,UACtBE,QAAS1wB,KAAKvuB,MAAMi/C,c,2BAM5B,SAAcmf,GACZ7vC,KAAKvuB,MAAMo8D,cAAcgC,K,2BAG3B,SAAc/B,GACZ9tC,KAAKmb,SAAS,CAAE2yB,mB,mJApDiB3/B,6CAAM24B,WAwD3Cub,uBAAuBtqE,UAAYA,UACnCsqE,uBAAuBp5C,aAAeA,a,aAEvBo5C,uB,2BAAA,+B,qIA9LTtqE,U,8HAqEAkxB,a,iIA8DAo5C,uB,mrBCjJAjC,EAAe,CACnBkC,SAAU,kBACVC,gBAAiB,yBACjBC,YAAa,sBAGF33D,EAAc,CACzBslC,QAAS,IAAIqwB,IAAcJ,EAAakC,UACxClrB,eAAgB,IAAIopB,IAAcJ,EAAamC,iBAC/ClrB,WAAY,IAAImpB,IAAcJ,EAAaoC,e,6FATvCpC,E,8EAMOv1D,E,kcCNPu1D,EAAe,CACnBqC,iBAAkB,gCAGP33D,EAAiB,CAC5BwsC,gBAAiB,IAAIkpB,IAAcJ,EAAaqC,oB,6FAL5CrC,E,iFAIOt1D,E,wcCJPs1D,EAAe,CACnBsC,sBAAuB,kCAGZ33D,EAAuB,CAClC+rC,iBAAkB,IAAI0pB,IAAcJ,EAAasC,yB,6FAL7CtC,E,wFAIOr1D,E,qdCJPq1D,EAAe,CACnBuC,kBAAmB,iCAGR7kC,EAAsB,CACjCkY,gBAAiB,IAAIwqB,IAAcJ,EAAauC,qB,6FAL5CvC,E,0FAIOtiC,E,8dCHN,SAASE,IACd,OAAO5kC,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUunE,gB,4FADjC9iC,E,kbCDHi0B,EAAkB7jD,aAC7B,SAAA3C,GAAK,OAAIA,EAAMyrB,UACf,SAAAA,GACE,OAAOA,EAAOuV,Y,4FAHLwlB,E,0kDCiBA2Q,EAAc,SAAC,GAAsC,IAApCzpE,EAAoC,EAApCA,QAAS8F,EAA2B,EAA3BA,KAAM4jE,EAAqB,EAArBA,eAC3C,IAA0CnxE,mBAAS,MAAnD,GAAO+pE,EAAP,KAAsBqH,EAAtB,KAEAtwE,qBAAU,WACRqwE,MACC,IAEH,IAKMnH,EAAc,WAClBoH,EAAiB,OAGbC,EAAgB9jE,EAAKkM,QAAO,SAACgF,EAAKxI,GAAN,OAAawI,EAAMxI,EAAGhI,QAAQ5M,SAAQ,GAExE,OACE,kBAAC,IAAD,CAAQzB,MAAO6H,EAAf,sBACE,kBAAC,IAAOu/B,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,uBACE,kBAAC,IAAD,4CAGJ,kBAAC,IAAOonC,KAAR,CAAapnC,OAAO,GAClB,4BAAQ8mB,QAASsjD,EAAaz6B,KAAK,eAAnC,sBACE,yBAAKtpC,UAAU,eAAf,sBACE,kBAAC,IAAD,CACEyvD,MACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMtoD,KAAMm6D,KAAZ,wBAHN,uBAOA,kBAAC,IAAD,CAAanhB,OAAQirB,EAArB,uBACA,kBAAC,IAAD,CAAMprE,UAAU,eAAeqmD,GAAG,mBAAlC,kCAGF,+CACE,kBAAC,IAAD,CACEie,UAAW,kBAAC,IAAD,wBACXtkE,UAAU,aACVukE,gBAAc,cACdC,gBAAc,OACd/jD,QAtCQ,SAAC8E,GACnBA,EAAMC,kBACN2lD,EAAiB5lD,EAAMoL,gBA+Bf,wCASA,kBAAC,IAAD,CACEj1B,GAAG,mBACH+oE,aAAW,EACXjU,SAAUsT,EACV/iD,KAAMtD,QAAQqmD,GACd52B,QAAS62B,EALX,sBAOE,kBAAC,IAAD,CAAUtjD,QAASsjD,EAAa9D,UAAW,SAAA16C,GAAK,OAAIA,EAAMC,mBAA1D,sBACE,kBAAC,IAAD,yBAEF,kBAAC,IAAD,CAAU/E,QAASsjD,EAAa9D,UAAW,SAAA16C,GAAK,OAAIA,EAAMC,mBAA1D,sBACE,kBAAC,IAAD,yBAEF,kBAAC,IAAD,CAAU/E,QAASsjD,EAAa9D,UAAW,SAAA16C,GAAK,OAAIA,EAAMC,mBAA1D,sBACE,kBAAC,IAAD,4BAKR,yBAAKxlB,UAAU,eAAf,sBACGsH,EAAK1G,KAAI,SAAAoP,GAAE,OACV,oCACGA,EAAGhI,QAAQpH,KAAI,SAAAwH,GAAM,OACpB,yBAAKpI,UAAU,cAAf,sBACE,yBAAKA,UAAU,iBAAf,sBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMmH,KAAM4/B,IAAZ,yBAGJ,yBAAK/mC,UAAU,iBAAf,sBACE,0BAAMA,UAAU,OAAhB,sBACE,0BAAMA,UAAU,OAAhB,sBAAwBgQ,EAAGzV,MAC3B,0BAAMyF,UAAU,YAAhB,2BACA,0BAAMA,UAAU,SAAhB,sBAA0BoI,EAAOI,uB,EAlF1CyiE,E,kEA+FN,I,IAAMI,EAAuBl8C,aAClC,SAAArb,GAAS,MACP,MAAO,CACLtS,QAASsS,EAAM5R,SAAS6S,MAAMu2D,aAAa9pE,QAC3C8F,MAAM,UAAAwM,EAAM5R,SAAS+F,kBAAf,eAA2BX,OAAQ,OAG7C,SAAAjG,GAAQ,MAAK,CACX6pE,eAAgB,kBAAM7pE,EAASF,YAAqB,CAAEgB,KAAM,mBAR5BgtB,CAUlC87C,I,6FAzGWA,E,2FA+FAI,E,+bC1GH1uB,G,0BAyBOqgB,G,iFAzBjB,SAAUrgB,EAAK7qC,GAAf,iHAE2BrQ,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUiB,KAAMiP,EAAM1Q,SAF/E,cAEUW,EAFV,gBAKUkqC,YAAIj5B,IAAQwlC,QAAQ2D,gBAAgBp6C,EAASC,OALvD,8DAOQg9C,EAAS,GAGX,MACA,KAAOj9C,UACP,KAAOA,SAASC,MAChB,KAAOD,SAASC,KAAKrB,UACrB,KAAOoB,SAASC,KAAKrB,SAAS,IAC9B,KAAOoB,SAASC,KAAKrB,SAAS,GAAGK,MACjC,KAAOe,SAASC,KAAKrB,SAAS,GAAGK,KAAK0N,WAAW,uBAEjDswC,EAAS,UAlBf,UAqBU/S,YAAIj5B,IAAQwlC,QAAQ4D,aAAa,CAAE4C,YArB7C,qDAyBO,SAAUge,IAAV,gGACCxgB,YAAUxpC,IAAQwlC,QAAQiE,mBAAoBE,GAD/C,6C,6FAzBGA,E,2EAyBOqgB,E,uaC3BP/d,G,0BAYOge,G,iFAZjB,SAAUhe,IAAV,+GAE2Bx9C,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUC,SAAU,CACvEC,UAAW,aAHjB,cAEUC,EAFV,gBAMUkqC,YAAIj5B,IAAQysC,eAAetD,gBAAgBp6C,EAASC,OAN9D,wEAQUiqC,YAAIj5B,IAAQysC,eAAerD,aAAvB,OARd,qDAYO,SAAU6gB,IAAV,gGACCzgB,YAAUxpC,IAAQysC,eAAehD,mBAAoBwC,GADtD,6C,6FAZGA,E,gGAYOge,E,gcCZPvd,G,0BAUOwd,G,iFAVjB,SAAUxd,EAAW5tC,GAArB,+GAE2BrQ,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUiB,KAAMiP,EAAM1Q,SAF/E,cAEUW,EAFV,gBAIUkqC,YAAIj5B,IAAQ0sC,WAAWvD,gBAAgBp6C,EAASC,OAJ1D,wEAMUiqC,YAAIj5B,IAAQ0sC,WAAWtD,aAAnB,OANd,qDAUO,SAAU8gB,IAAV,gGACC1gB,YAAUxpC,IAAQ0sC,WAAWjD,mBAAoBiD,GADlD,6C,6FAVGA,E,+FAUOwd,E,2bCVPvd,G,0BAUOwd,G,iFAVjB,SAAUxd,EAAgB7tC,GAA1B,+GAE2BrQ,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAU6I,UAAWqH,EAAM1Q,SAFpF,cAEUW,EAFV,gBAIUkqC,YAAIj5B,IAAQ2sC,gBAAgBxD,gBAAgBp6C,EAASC,OAJ/D,wEAMUiqC,YAAIj5B,IAAQ2sC,gBAAgBvD,aAAxB,OANd,qDAUO,SAAU+gB,IAAV,gGACC3gB,YAAUxpC,IAAQ2sC,gBAAgBlD,mBAAoBkD,GADvD,6C,6FAVGA,E,8GAUOwd,E,0bCZP5kB,G,0BAIO6kB,G,iFAJjB,SAAU7kB,EAAczzC,GAAxB,gGACQmnC,YAAIj5B,IAAQmsC,iBAAiBhD,gBAAgBr3C,EAAQ1D,UAD7D,4CAIO,SAAUg8D,IAAV,gGACC5gB,YAAUxpC,IAAQmsC,iBAAiB1C,mBAAoBlE,GADxD,6C,6FAJGA,E,wGAIO6kB,E,2kBCQJlgB,EAAe,CAC1BvyB,MAAO,CACLC,IAAK,GACLvvB,SAAU,MAEZ0Z,MAAO,CACL4V,MAAO,CAAEnpB,SAAS,GAClB6nB,KAAM,CAAE7nB,SAAS,EAAO+pE,cAAc,GACtCnoD,WAAY,CAAErnB,UAAU,IAE1ByvE,MAAO,CACLniD,KAAM,GACNoiD,cAAe,GACfroD,WAAY,KAIHsoD,GAAS,OACnBrrD,IAAM7e,QAAQ4P,MAAkB,SAAAiO,GAC/BA,EAAMtK,MAAM4V,MAAMnpB,SAAU,KAFV,IAInB6e,IAAM3gB,QAAQ0R,MAAkB,SAACiO,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACzCie,EAAMsL,MAAMC,IAAM6J,YAAarzB,GAE/Bie,EAAMtK,MAAM4V,MAAMnpB,SAAU,KAPV,IASnB6e,IAAM1d,OAAO0O,MAAe,SAACgO,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACrCie,EAAMsL,MAAMtvB,SAAW+F,KAVL,IAYnBif,IAAM7e,QAAQ8P,MAAa,SAAA+N,GAC1BA,EAAMtK,MAAMsU,KAAK7nB,SAAU,EAC3B6d,EAAMsL,MAAMtvB,SAAW,QAdL,IAgBnBglB,IAAM3gB,QAAQ4R,MAAa,SAAC+N,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACpCie,EAAMtK,MAAMsU,KAAK7nB,SAAU,EAC3B6d,EAAMsL,MAAMtvB,SAAWq5B,YAActzB,MAlBnB,IAoBnBif,IAAM7e,QAAQiQ,MAAmB,SAAA4N,GAChCA,EAAMtK,MAAMsU,KAAKkiD,cAAe,KArBd,IAuBnBlrD,IAAM3gB,QAAQ+R,MAAmB,SAAC4N,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC1Cie,EAAMtK,MAAMsU,KAAKkiD,cAAe,EAChClsD,EAAMsL,MAAMC,IAAM6J,YAAarzB,MAzBb,IA2BnBif,IAAMzgB,KAAK6R,MAAmB,SAAC4N,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACvCie,EAAMtK,MAAMsU,KAAKkiD,cAAe,EAChClsD,EAAMmsD,MAAMniD,KAAKmS,OAASp6B,KA7BR,IA+BnBif,IAAM7e,QAAQ0K,MAAmB,SAAAmT,GAChCA,EAAMtK,MAAMqO,WAAWrnB,UAAW,KAhChB,IAkCnBskB,IAAM3gB,QAAQwM,MAAmB,SAACmT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC1Cie,EAAMtK,MAAMqO,WAAWrnB,UAAW,EAClCsjB,EAAMsL,MAAMtvB,SAAWq5B,YAActzB,MApCnB,IAsCnBif,IAAMzgB,KAAKsM,MAAmB,SAACmT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACvCie,EAAMtK,MAAMqO,WAAWrnB,UAAW,EAClCsjB,EAAMmsD,MAAMpoD,WAAWoY,OAASp6B,KAxCd,IA0CnBif,IAAM7e,QAAQ2K,MAAoB,SAAAkT,GACjCA,EAAMtK,MAAMqO,WAAWrnB,UAAW,KA3ChB,IA6CnBskB,IAAM3gB,QAAQyM,MAAoB,SAACkT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC3Cie,EAAMtK,MAAMqO,WAAWrnB,UAAW,EAClCsjB,EAAMsL,MAAMtvB,SAAWq5B,YAActzB,MA/CnB,IAiDnBif,IAAMzgB,KAAKuM,MAAoB,SAACkT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACxCie,EAAMtK,MAAMqO,WAAWrnB,UAAW,EAClCsjB,EAAMmsD,MAAMpoD,WAAWoY,OAASp6B,KAnDd,IAqDnBif,IAAM1d,OAAO4O,MAAsB,SAAA8N,GAClCA,EAAMtK,MAAMsU,KAAKsiD,iBAAkB,KAtDjB,IAwDnBtrD,IAAM7e,QAAQ+P,MAAsB,SAAA8N,GACnCA,EAAMtK,MAAMsU,KAAKsiD,iBAAkB,KAzDjB,IA2DnBtrD,IAAM3gB,QAAQ6R,MAAsB,SAAC8N,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC7Cie,EAAMtK,MAAMsU,KAAKsiD,iBAAkB,EACnCtsD,EAAMsL,MAAMtvB,SAAWq5B,YAActzB,MA7DnB,IA+DnBif,IAAMzgB,KAAK2R,MAAsB,SAAC8N,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC1Cie,EAAMtK,MAAMsU,KAAKsiD,iBAAkB,EACnCtsD,EAAMmsD,MAAMC,cAAcjwC,OAASp6B,KAjEjB,IAmEnBif,IAAM7e,QAAQgQ,MAA2B,SAAA6N,GACxCA,EAAMtK,MAAMsU,KAAKsiD,iBAAkB,KApEjB,IAsEnBtrD,IAAM3gB,QAAQ8R,MAA2B,SAAC6N,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAClDie,EAAMtK,MAAMsU,KAAKsiD,iBAAkB,EACnCtsD,EAAMsL,MAAMtvB,SAAWq5B,YAActzB,MAxEnB,IA0EnBif,IAAMzgB,KAAK4R,MAA2B,SAAC6N,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC/Cie,EAAMtK,MAAMsU,KAAKsiD,iBAAkB,EACnCtsD,EAAMmsD,MAAMC,cAAcjwC,OAASp6B,KA5EjB,IA8EnBif,IAAM7e,QAAQkQ,MAAe,SAAA2N,GAC5BA,EAAMtK,MAAMsU,KAAKuiD,UAAW,KA/EV,IAiFnBvrD,IAAM3gB,QAAQgS,MAAe,SAAA2N,GAC5BA,EAAMtK,MAAMsU,KAAKuiD,UAAW,KAlFV,IAoFnBvrD,IAAMzgB,KAAK8R,MAAe,SAAC2N,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACnCie,EAAMtK,MAAMsU,KAAKuiD,UAAW,EAC5BvsD,EAAMmsD,MAAMniD,KAAKmS,OAASp6B,KAtFR,G,EA0FPg+B,YAAcssC,EAAWxuB,GAAzB,O,6FA3GFA,E,gFAiBAwuB,E,8jDClBAxuB,EAAe,CAC1BtyB,IAAK,GACL+4C,IAAK,CACH/4C,IAAK,CAAEuf,MAAM,EAAO3oC,SAAS,GAC7BnG,SAAU,CAAE8uC,MAAM,EAAO3oC,SAAS,GAClC4hB,WAAY,CAAE+mB,MAAM,EAAO3oC,SAAS,GACpCqpD,OAAQ,CAAErpD,SAAS,GACnB8oD,OAAQ,CAAE9oD,SAAS,KAIVkqE,GAAS,OACnBrrD,IAAM7e,QAAQuK,MAAmB,SAAAsT,GAChCA,EAAMskD,IAAI/4C,IAAM,CACdppB,SAAS,MAHO,IAMnB6e,IAAM3gB,QAAQqM,MAAmB,SAACsT,EAAD,GAAwB,IAClDtd,EADkD,EAAdX,QAE1Cie,EAAMuL,IAAM7oB,EAASC,KAAKynB,OAC1BpK,EAAMskD,IAAI/4C,IAAM,CACdppB,SAAS,EACTsC,OAAQ/B,EAAS+B,OACjB03B,OAAQz5B,EAASpB,aAZD,IAenB0f,IAAMzgB,KAAKmM,MAAmB,SAACsT,EAAD,GAAwB,IAC/Ctd,EAD+C,EAAdX,QAEvCie,EAAMuL,IAAM7oB,EAASC,KAAKynB,OAC1BpK,EAAMskD,IAAI/4C,IAAM,CACdppB,SAAS,EACTsC,OAAQ/B,EAAS+B,OACjB03B,OAAQz5B,EAASpB,aArBD,IAwBnB0f,IAAM7e,QAAQwK,MAAc,SAAAqT,GAC3BA,EAAMskD,IAAItoE,SAAW,CACnBmG,SAAS,MA1BO,IA6BnB6e,IAAM3gB,QAAQsM,MAAc,SAACqT,EAAD,GAAwB,IAC7Ctd,EAD6C,EAAdX,QAErCie,EAAMhkB,SAAW0G,EAASC,KAAKynB,OAAO,GACtCpK,EAAMskD,IAAItoE,SAAW,CACnBmG,SAAS,EACTsC,OAAQ/B,EAAS+B,OACjB03B,OAAQz5B,EAASpB,aAnCD,IAsCnB0f,IAAMzgB,KAAKoM,MAAc,SAACqT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAClCie,EAAMhkB,SAAW,KACjBgkB,EAAMskD,IAAItoE,SAAW,CACnBmG,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,OAAQp6B,EAAQT,aA3CA,IA8CnB0f,IAAM1d,OAAO4J,MAAwB,SAAC8S,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC9Cie,EAAMhkB,SAAW+F,KA/CC,IAiDnBif,IAAM7e,QAAQ0K,MAAmB,SAAAmT,GAChCA,EAAMskD,IAAIvgD,WAAa,CAAE5hB,SAAS,MAlDhB,IAoDnB6e,IAAM3gB,QAAQwM,MAAmB,SAACmT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC1Cie,EAAMskD,IAAIvgD,WAAa,CACrB5hB,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,YAAQtgC,GAGV,IAAOqvB,EAAP,EAAgBnpB,EAAQY,KAAKynB,OAA7B,MAEApK,EAAMhkB,SAAWkvB,KA7DC,IA+DnBlK,IAAMzgB,KAAKsM,MAAmB,SAACmT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACvCie,EAAMskD,IAAIvgD,WAAa,CACrB5hB,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,OAAQp6B,EAAQT,aAnEA,IAsEnB0f,IAAM7e,QAAQ2K,MAAoB,SAAAkT,GACjCA,EAAMskD,IAAIvgD,WAAa,CAAE5hB,SAAS,MAvEhB,IAyEnB6e,IAAM3gB,QAAQyM,MAAoB,SAACkT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC3Cie,EAAMskD,IAAIvgD,WAAa,CACrB5hB,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,YAAQtgC,GAGV,IAAOqvB,EAAP,EAAgBnpB,EAAQY,KAAKynB,OAA7B,MAEApK,EAAMhkB,SAAWkvB,KAlFC,IAoFnBlK,IAAMzgB,KAAKuM,MAAoB,SAACkT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACxCie,EAAMskD,IAAIvgD,WAAa,CACrB5hB,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,OAAQp6B,EAAQT,aAxFA,IA2FnB0f,IAAM7e,QAAQ6K,MAA2B,SAAAgT,GACxCA,EAAMskD,IAAIkI,YAAc,CAAErqE,SAAS,MA5FjB,IA8FnB6e,IAAM3gB,QAAQ2M,MAA2B,SAACgT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAClDie,EAAMskD,IAAIkI,YAAc,CACtBrqE,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,YAAQtgC,GAGV,IAAOqvB,EAAP,EAAgBnpB,EAAQY,KAAKynB,OAA7B,MAEApK,EAAMhkB,SAAWkvB,KAvGC,IAyGnBlK,IAAMzgB,KAAKyM,MAA2B,SAACgT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC/Cie,EAAMskD,IAAIkI,YAAc,CACtBrqE,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,OAAQp6B,EAAQT,aA7GA,IAiHnB0f,IAAM7e,QAAQ8K,MAA4B,SAAA+S,GACzCA,EAAMskD,IAAImI,gBAAkB,CAAEtqE,SAAS,MAlHrB,IAoHnB6e,IAAM3gB,QAAQ4M,MAA4B,SAAC+S,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACnDie,EAAMskD,IAAImI,gBAAkB,CAC1BtqE,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,YAAQtgC,GAGV,IAAOqvB,EAAP,EAAgBnpB,EAAQY,KAAKynB,OAA7B,MAEApK,EAAMhkB,SAAWkvB,KA7HC,IA+HnBlK,IAAMzgB,KAAK0M,MAA4B,SAAC+S,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAChDie,EAAMskD,IAAImI,gBAAkB,CAC1BtqE,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,OAAQp6B,EAAQT,aAnIA,IAuInB0f,IAAM7e,QAAQ4K,MAAsB,SAAAiT,GACnCA,EAAMskD,IAAIkI,YAAc,CAAErqE,SAAS,MAxIjB,IA0InB6e,IAAM3gB,QAAQ0M,MAAsB,SAACiT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC7Cie,EAAMskD,IAAIkI,YAAc,CACtBrqE,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,YAAQtgC,GAGV,IAAOqvB,EAAP,EAAgBnpB,EAAQY,KAAKynB,OAA7B,MAEApK,EAAMhkB,SAAWkvB,KAnJC,IAqJnBlK,IAAMzgB,KAAKwM,MAAsB,SAACiT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC1Cie,EAAMskD,IAAIkI,YAAc,CACtBrqE,SAAS,EACTsC,OAAQ1C,EAAQ0C,OAChB03B,OAAQp6B,EAAQT,aAzJA,IA4JnB0f,IAAM7e,QAAQgL,MAAgB,SAAA6S,GAC7BA,EAAMskD,IAAIrZ,OAAS,CAAE9oD,SAAS,MA7JZ,IA+JnB6e,IAAM3gB,QAAQ8M,MAAgB,SAAA6S,GAC7BA,EAAMskD,IAAIrZ,OAAS,CAAE9oD,SAAS,MAhKZ,IAkKnB6e,IAAMzgB,KAAK4M,MAAgB,SAAC6S,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACpCie,EAAMskD,IAAIrZ,OAAS,CACjB9oD,SAAS,EACTg6B,OAAQp6B,MArKQ,IAwKnBif,IAAM7e,QAAQyK,MAAgB,SAAAoT,GAC7BA,EAAMskD,IAAI9Y,OAAS,CAAErpD,SAAS,MAzKZ,IA2KnB6e,IAAM3gB,QAAQuM,MAAgB,SAAAoT,GAC7BA,EAAMhkB,SAAW,KACjBgkB,EAAMskD,IAAI9Y,OAAS,CAAErpD,SAAS,MA7KZ,IA+KnB6e,IAAMzgB,KAAKqM,MAAgB,SAACoT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACpCie,EAAMskD,IAAI9Y,OAAS,CAAErpD,SAAS,EAAOg6B,OAAQp6B,MAhL3B,G,EAoLPg+B,YAAcssC,EAAWxuB,GAAzB,O,6FA/LFA,E,gFAWAwuB,E,s0BCMAxuB,EAAe,CAC1BnpC,SAAU,GACVomB,YAAa,GACbplB,MAAO,CACLhB,SAAU,CAAEvS,SAAS,GACrBS,UAAW,CAAET,SAAS,GACtBqT,SAAU,CAAErT,SAAS,GACrB4T,QAAS,CAAEC,eAAe,EAAOE,gBAAgB,GACjDK,QAAS,CAAEpU,SAAS,GACpBi8B,QAAS,CAAEj8B,SAAS,GACpByT,iBAAkB,CAAEzT,SAAS,GAC7BuqE,QAAS,CAAEvqE,SAAS,GACpB8pE,aAAc,CAAE9pE,SAAS,GACzBwqE,oBAAqB,CACnBC,SAAU,CAAEzqE,SAAS,EAAO0qE,aAAa,GACzCC,YAAa,CAAE3qE,SAAS,EAAO0qE,aAAa,GAC5CE,SAAU,CAAE5qE,SAAS,EAAO0qE,aAAa,GACzCG,OAAQ,CAAE7qE,SAAS,GACnB8qE,UAAW,CAAE9qE,SAAS,KAG1BqT,SAAU,GACVO,QAAS,CACPM,cAAe,GACfra,SAAU,MAEZua,QAAS,CACPG,cAAe,KACfF,eAAgB,KAChBH,cAAe,IAEjB02B,SAAU,GACV2/B,QAAS,GACT9pE,UAAW,GACX6R,MAAO,CACL3M,KAAM,GACN+sB,MAAO,YAETo3C,aAAc,GACd/hE,aAAc,GACdG,SAAU,GACVsiE,oBAAqB,CACnBC,SAAU,KACVE,YAAa,KACbC,SAAU,KACVC,OAAQ,KACRC,UAAW,OAIFZ,GAAS,OACnBrrD,IAAM7e,QAAQpD,MAAqB,SAAAihB,GAClCA,EAAMtK,MAAMhB,SAASvS,SAAU,KAFb,IAInB6e,IAAM3gB,QAAQtB,MAAqB,SAACihB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC5Cie,EAAMtL,SAAW8nB,YAAgBz6B,EAAQY,KAAK+R,UAC9CsL,EAAMpX,WAAao0B,YAAwBj7B,EAAQY,KAAK+R,SAAU3S,EAAQa,WAC1Eod,EAAM8a,YAAc/4B,EAAQY,KAAK+R,SAEjCsL,EAAMvL,MAAM3M,KAAO,GACnBkY,EAAMvL,MAAMogB,MAAQ,WAEpB7U,EAAMtK,MAAMhB,SAASvS,SAAU,KAZb,IAcnB6e,IAAM7e,QAAQrC,MAAkB,SAAAkgB,GAC/BA,EAAMtK,MAAM9S,UAAUT,SAAU,KAfd,IAiBnB6e,IAAM3gB,QAAQP,MAAkB,SAACkgB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACzCie,EAAMpd,UAAY26B,YAAax7B,EAAQY,KAAKC,WAC5Cod,EAAMtK,MAAM9S,UAAUT,SAAU,KAnBd,IAqBnB6e,IAAMzgB,KAAKT,MAAkB,SAAAkgB,GAC5BA,EAAMtK,MAAM9S,UAAUT,SAAU,KAtBd,IAwBnBnD,KAAe,SAACghB,EAAD,EAAqBktD,GAAS,IAApBnrE,EAAoB,EAApBA,QACxBie,EAAMvL,MAAN,KAAmBy4D,EAAKz4D,MAAU1S,MAzBhB,IA2BnBif,IAAM7e,QAAQlD,MAAqB,SAAA+gB,GAClCA,EAAMtK,MAAM0oB,QAAQj8B,SAAU,KA5BZ,IA8BnB6e,IAAM3gB,QAAQpB,MAAqB,SAAC+gB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC5Cie,EAAM+sB,SAAWhrC,EAAQY,KAAKiB,YAC9Boc,EAAMtK,MAAM0oB,QAAQj8B,SAAU,KAhCZ,IAkCnB6e,IAAM7e,QAAQjD,MAA2B,SAAA8gB,GACxCA,EAAMtK,MAAME,iBAAiBzT,SAAU,KAnCrB,IAqCnB6e,IAAM3gB,QAAQnB,MAA2B,SAAC8gB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAClDie,EAAMpK,iBAAmB7T,EACzBie,EAAMtK,MAAME,iBAAiBzT,SAAU,KAvCrB,IAyCnB6e,IAAMzgB,KAAKrB,MAA2B,SAAA8gB,GACrCA,EAAMtK,MAAME,iBAAiBzT,SAAU,KA1CrB,IA4CnB6e,IAAM7e,QAAQhD,MAAuB,SAAA6gB,GACpCA,EAAMtK,MAAMg3D,QAAQvqE,SAAU,KA7CZ,IA+CnB6e,IAAM3gB,QAAQlB,MAAuB,SAAC6gB,EAAD,GAAwB,IACpDza,EADoD,EAAdxD,QACtCwD,WACRya,EAAM0sD,QAAQ/pE,KAAOi7B,YAAiBr4B,GACtCya,EAAMtK,MAAMg3D,QAAQvqE,SAAU,KAlDZ,IAoDnB6e,IAAM7e,QAAQ/C,MAAyB,SAAA4gB,GACtCA,EAAMtK,MAAMu2D,aAAa9pE,SAAU,KArDjB,IAuDnB6e,IAAM3gB,QAAQjB,MAAyB,SAAC4gB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAChDie,EAAMtK,MAAMu2D,aAAa9pE,SAAU,EACnC6d,EAAMisD,aAAelqE,KAzDH,IA2DnBif,IAAM7e,QAAQ9C,MAAuB,SAAA2gB,GACpCA,EAAMtK,MAAMK,QAAQC,eAAgB,KA5DlB,IA8DnBgL,IAAMzgB,KAAKlB,MAAuB,SAAA2gB,GACjCA,EAAMtK,MAAMK,QAAQC,eAAgB,KA/DlB,IAiEnBgL,IAAM3gB,QAAQhB,MAAuB,SAAC2gB,EAAD,EAAqBktD,GAAS,IAApBnrE,EAAoB,EAApBA,QAC9Cie,EAAMjK,QAAQM,cAActU,EAAQL,KAApC,KACKwrE,EAAKn3D,QAAQM,cAActU,EAAQL,KADxC,CAEEgW,OAAQ3V,EAAQY,OAElBqd,EAAMtK,MAAMK,QAAQC,eAAgB,KAtElB,IAwEnBgL,IAAM7e,QAAQ5C,MAAwB,SAAAygB,GACrCA,EAAMtK,MAAMK,QAAQG,gBAAiB,KAzEnB,IA2EnB8K,IAAMzgB,KAAKhB,MAAwB,SAAAygB,GAClCA,EAAMtK,MAAMK,QAAQG,gBAAiB,KA5EnB,IA8EnB8K,IAAM3gB,QAAQd,MAAwB,SAACygB,EAAD,EAAqBktD,GAAS,IAApBnrE,EAAoB,EAApBA,QAC/Cie,EAAMtK,MAAMK,QAAQG,gBAAiB,EACrC8J,EAAMjK,QAAQM,cAActU,EAAQL,KAApC,KACKwrE,EAAKn3D,QAAQM,cAActU,EAAQL,KADxC,CAEE2J,QAAStJ,EAAQY,UAlFD,IAqFnBqe,IAAM7e,QAAQlC,MAAsB,SAAA+f,GACnCA,EAAMtK,MAAMK,QAAQo3D,eAAgB,KAtFlB,IAwFnBnsD,IAAMzgB,KAAKN,MAAsB,SAAA+f,GAChCA,EAAMtK,MAAMK,QAAQo3D,eAAgB,KAzFlB,IA2FnBnsD,IAAM3gB,QAAQJ,MAAsB,SAAC+f,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC7Cie,EAAMtK,MAAMK,QAAQo3D,eAAgB,EACpCntD,EAAMjK,QAAQe,YAAc/U,EAAQY,QA7FlB,IA+FnBqe,IAAM7e,QAAQjC,MAA2B,SAAA8f,GACxCA,EAAMtK,MAAMK,QAAQq3D,oBAAqB,KAhGvB,IAkGnBpsD,IAAMzgB,KAAKL,MAA2B,SAAA8f,GACrCA,EAAMtK,MAAMK,QAAQq3D,oBAAqB,KAnGvB,IAqGnBpsD,IAAM3gB,QAAQH,MAA2B,SAAC8f,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAClDie,EAAMtK,MAAMK,QAAQq3D,oBAAqB,EACzCptD,EAAMjK,QAAQiB,iBAAmBjV,EAAQY,QAvGvB,IAyGnBqe,IAAM7e,QAAQhC,MAA2B,SAAA6f,GACxCA,EAAMtK,MAAMK,QAAQs3D,oBAAqB,KA1GvB,IA4GnBrsD,IAAMzgB,KAAKJ,MAA2B,SAAA6f,GACrCA,EAAMtK,MAAMK,QAAQs3D,oBAAqB,KA7GvB,IA+GnBrsD,IAAM3gB,QAAQF,MAA2B,SAAC6f,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAClDie,EAAMtK,MAAMK,QAAQs3D,oBAAqB,EACzCrtD,EAAMjK,QAAQmB,iBAAmBnV,EAAQY,QAjHvB,IAmHnBqe,IAAM3gB,QAAQf,MAAkB,SAAC0gB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACzCie,EAAMjK,QAAQ/Z,SAAW+F,KApHP,IAsHnBif,IAAM7e,QAAQ3C,MAAuB,SAAAwgB,GACpCA,EAAMtK,MAAMa,QAAQpU,SAAU,KAvHZ,IAyHnB6e,IAAMzgB,KAAKf,MAAuB,SAAAwgB,GACjCA,EAAMtK,MAAMa,QAAQpU,SAAU,KA1HZ,IA4HnB6e,IAAM3gB,QAAQb,MAAuB,SAACwgB,EAAD,EAAqBktD,GAAS,IAApBnrE,EAAoB,EAApBA,QAC9Cie,EAAMtK,MAAMa,QAAQpU,SAAU,EAC9B6d,EAAMzJ,QAAQF,cAActU,EAAQL,KAApC,KAAgDwrE,EAAK32D,QAAQF,cAActU,EAAQL,MACnFK,EAAQY,KAAKyW,SAAQ,YAAmB,IAAhBle,EAAgB,EAAhBA,KAAMiN,EAAU,EAAVA,IAC5B6X,EAAMzJ,QAAQF,cAActU,EAAQL,KAAKxG,GAAQiN,QAhIjC,IAmInB6Y,IAAM3gB,QAAQZ,MAAuB,SAACugB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC9Cie,EAAMzJ,QAAQC,eAAiBzU,EAAQsX,OACvC2G,EAAMzJ,QAAQG,cAAgB3U,EAAQwX,SArIpB,IAuInByH,IAAM7e,QAAQzC,MAAiB,SAAAsgB,GAC9BA,EAAMtK,MAAMF,SAASrT,SAAU,KAxIb,IA0InB6e,IAAM3gB,QAAQX,MAAiB,SAACsgB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACxCie,EAAMtK,MAAMF,SAASrT,SAAU,EAE/B6d,EAAMtK,MAAMF,SAAS7P,KAAO5D,EAAQ4D,KACpCqa,EAAMxK,SAAWzT,EAAQY,QA9IP,IAgJnBqe,IAAMzgB,KAAKb,MAAiB,SAAAsgB,GAC3BA,EAAMtK,MAAMF,SAASrT,SAAU,KAjJb,IAmJnB6e,IAAM3gB,QAAQV,MAA0B,SAACqgB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACjDie,EAAM9V,aAAenI,KApJH,IAsJnBif,IAAM3gB,QAAQT,MAAqB,SAACogB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC5Cie,EAAM3V,SAAWtI,KAvJC,IAyJnBif,IAAM3gB,QAAQR,MAAoB,SAACmgB,EAAD,EAAqBktD,GAAS,IAApBnrE,EAAoB,EAApBA,QAC3Cie,EAAM3V,SAAWqzB,YAAkBwvC,EAAK7iE,SAAUtI,GAAS,MA1JzC,IA4JnBif,IAAM7e,QAAQtC,MAAoB,SAACmgB,EAAD,EAAqBktD,GAAS,IAApBnrE,EAAoB,EAApBA,QAC3Cie,EAAM3V,SAAWqzB,YAAkBwvC,EAAK7iE,SAAUtI,GAAS,MA7JzC,IA+JnBif,IAAMzgB,KAAKV,MAAoB,SAACmgB,EAAD,EAAqBktD,GAAS,IAApBnrE,EAAoB,EAApBA,QACxCie,EAAM3V,SAAWqzB,YAAkBwvC,EAAK7iE,SAAUtI,GAAS,MAhKzC,IAkKnBif,IAAM7e,QAAQpC,MAA2B,SAACigB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAClDie,EAAMtK,MAAMi3D,oBAAoB5qE,EAAQ7G,MAAMiH,SAAU,KAnKtC,IAqKnB6e,IAAM3gB,QAAQN,MAA2B,SAACigB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAClDie,EAAMtK,MAAMi3D,oBAAoB5qE,EAAQ7G,MAAMiH,SAAU,EACxD6d,EAAM2sD,oBAAoB5qE,EAAQ7G,MAAQ6G,EAAQY,QAvKhC,IAyKnBqe,IAAMzgB,KAAKR,MAA2B,SAACigB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC/Cie,EAAMtK,MAAMi3D,oBAAoB5qE,EAAQ7G,MAAMiH,SAAU,KA1KtC,IA4KnBnC,KAA6B,SAACggB,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACtCie,EAAMtK,MAAMi3D,oBAAoB5qE,EAAQ7G,MAAM2xE,aAAc,KA7K1C,G,EAiLP9sC,YAAcssC,EAAWxuB,GAAzB,O,6FAnOFA,E,2EAkDAwuB,E,6mBC/DAxuB,EAAe,CAC1BxxB,WAAY,GACZG,WAAY,CACV,CACEtxB,KAAM,GACNyxB,QAAS,EACTokB,SAAU,KACVE,SAAU,EACVC,YAAa,EACbC,YAAa,EACbC,KAAM,GACNC,iBAAkB,GAClBa,sBAAuB,IAG3BzlB,gBAAiB,CACf,CACEvxB,KAAM,GACNyxB,QAAS,EACTokB,SAAU,KACVE,SAAU,EACVC,YAAa,EACbC,YAAa,EACbC,KAAM,GACNC,iBAAkB,GAClBa,sBAAuB,IAG3Bo7B,kBAAmB,GACnBC,eAAgB,GAChB73D,MAAO,CACL+pB,UAAW,CAAEt9B,SAAS,EAAOu9C,YAAY,GACzCiC,QAAS,CAAEx/C,SAAS,GACpBqrE,QAAS,CACPC,cAAc,EACdC,cAAc,EACdC,sBAAsB,GAExBC,YAAa,CACXC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,GAEpBC,mBAAoB,CAClB7rE,SAAS,GAEX8rE,UAAW,CACT9rE,SAAS,GAEX+rE,aAAc,CACZ/rE,SAAS,IAGbgsE,aAAc,GACdC,aAAc,GACdC,qBAAsB,GACtBT,YAAa,CACXU,OAAQ,GACRC,UAAW,GACXC,UAAW,IAEbR,mBAAoB,GACpBC,UAAW,GACXC,aAAc,IAGH7B,GAAS,OACnBrrD,IAAM7e,QAAQyJ,MAA+B,SAAAoU,GAC5CA,EAAMtK,MAAM+pB,UAAUt9B,SAAU,KAFd,IAInB6e,IAAM3gB,QAAQuL,MAA+B,SAACoU,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACtDie,EAAMqM,WAAatqB,EAAQ0sE,cAC3BzuD,EAAMwM,WAAaikB,YAAc1uC,EAAQ0sE,eACzCzuD,EAAMyM,gBAAkBgkB,YAAc1uC,EAAQ0sE,eAC9CzuD,EAAMtK,MAAM+pB,UAAUt9B,SAAU,EAChC6d,EAAMtK,MAAM+pB,UAAUigB,YAAa,KATjB,IAWnB1+B,IAAMzgB,KAAKqL,MAA+B,SAAAoU,GACzCA,EAAMtK,MAAM+pB,UAAUt9B,SAAU,EAChC6d,EAAMtK,MAAM+pB,UAAUigB,YAAa,KAbjB,IAenB3zC,KAAe,SAAAiU,GACdA,EAAMyM,gBAAkB,MAhBN,IAkBnB3gB,KAAa,SAACkU,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACtBie,EAAMyM,gBAAkBgkB,YAAc1uC,MAnBpB,IAqBnBiK,KAAgB,SAACgU,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACzBie,EAAMyM,gBAAkB1qB,KAtBN,IAwBnBif,IAAM7e,QAAQ0J,MAAuC,SAAAmU,GACpDA,EAAMtK,MAAMisC,QAAQx/C,SAAU,KAzBZ,IA2BnB6e,IAAM3gB,QAAQwL,MAAuC,SAACmU,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC9Die,EAAMstD,kBAAoBvrE,aAA1B,EAA0BA,EAAS2sE,sBACnC1uD,EAAMutD,eAAiBp7B,YAAkBpwC,aAAD,EAACA,EAAS2sE,uBAClD1uD,EAAMtK,MAAMisC,QAAQx/C,SAAU,EAC9B6d,EAAMtK,MAAM+pB,UAAUigB,YAAa,KA/BjB,IAiCnB1+B,IAAMzgB,KAAKsL,MAAuC,SAAAmU,GACjDA,EAAMtK,MAAMisC,QAAQx/C,SAAU,EAC9B6d,EAAMtK,MAAM+pB,UAAUigB,YAAa,KAnCjB,IAqCnB1+B,IAAM7e,QAAQ8J,MAAsB,SAAA+T,GACnCA,EAAMtK,MAAM83D,QAAQC,cAAe,KAtCjB,IAwCnBzsD,IAAM3gB,QAAQ4L,MAAsB,SAAC+T,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC7Cie,EAAMmuD,aAAepsE,EACrBie,EAAMtK,MAAM83D,QAAQC,cAAe,KA1CjB,IA4CnBzsD,IAAMzgB,KAAK0L,MAAsB,SAAA+T,GAChCA,EAAMtK,MAAM83D,QAAQC,cAAe,EACnCztD,EAAMmuD,aAAe,MA9CH,IAgDnBntD,IAAM7e,QAAQ+J,MAAsB,SAAA8T,GACnCA,EAAMtK,MAAM83D,QAAQE,cAAe,KAjDjB,IAmDnB1sD,IAAM3gB,QAAQ6L,MAAsB,SAAC8T,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC7Cie,EAAMouD,aAAersE,EACrBie,EAAMtK,MAAM83D,QAAQE,cAAe,KArDjB,IAuDnB1sD,IAAMzgB,KAAK2L,MAAsB,SAAA8T,GAChCA,EAAMtK,MAAM83D,QAAQE,cAAe,EACnC1tD,EAAMouD,aAAe,MAzDH,IA2DnBptD,IAAM7e,QAAQgK,MAAuB,SAAA6T,GACpCA,EAAMtK,MAAM83D,QAAQG,sBAAuB,KA5DzB,IA8DnB3sD,IAAM3gB,QAAQ8L,MAAuB,SAAC6T,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC9Cie,EAAMquD,qBAAuBtsE,EAC7Bie,EAAMtK,MAAM83D,QAAQG,sBAAuB,KAhEzB,IAkEnB3sD,IAAMzgB,KAAK4L,MAAuB,SAAA6T,GACjCA,EAAMtK,MAAM83D,QAAQG,sBAAuB,EAC3C3tD,EAAMquD,qBAAuB,MApEX,IAsEnBrtD,IAAM7e,QAAQiK,MAAgB,SAAA4T,GAC7BA,EAAMtK,MAAM83D,QAAQK,eAAgB,KAvElB,IAyEnB7sD,IAAM3gB,QAAQ+L,MAAgB,SAAC4T,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACvCie,EAAM4tD,YAAYU,OAASvsE,EAC3Bie,EAAMtK,MAAMk4D,YAAYC,eAAgB,KA3EtB,IA6EnB7sD,IAAMzgB,KAAK6L,MAAgB,SAAA4T,GAC1BA,EAAMtK,MAAM83D,QAAQK,eAAgB,EACpC7tD,EAAM4tD,YAAYU,OAAS,MA/ET,IAiFnBttD,IAAM7e,QAAQkK,MAAmB,SAAA2T,GAChCA,EAAMtK,MAAM83D,QAAQM,kBAAmB,KAlFrB,IAoFnB9sD,IAAM3gB,QAAQgM,MAAmB,SAAC2T,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC1Cie,EAAM4tD,YAAYW,UAAYxsE,EAC9Bie,EAAMtK,MAAMk4D,YAAYE,kBAAmB,KAtFzB,IAwFnB9sD,IAAMzgB,KAAK8L,MAAmB,SAAA2T,GAC7BA,EAAMtK,MAAM83D,QAAQM,kBAAmB,EACvC9tD,EAAM4tD,YAAYW,UAAY,MA1FZ,IA4FnBvtD,IAAM7e,QAAQmK,MAAmB,SAAA0T,GAChCA,EAAMtK,MAAM83D,QAAQO,kBAAmB,KA7FrB,IA+FnB/sD,IAAM3gB,QAAQiM,MAAmB,SAAC0T,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC1Cie,EAAM4tD,YAAYY,UAAYzsE,EAC9Bie,EAAMtK,MAAMk4D,YAAYG,kBAAmB,KAjGzB,IAmGnB/sD,IAAMzgB,KAAK+L,MAAmB,SAAA0T,GAC7BA,EAAMtK,MAAM83D,QAAQO,kBAAmB,EACvC/tD,EAAM4tD,YAAYY,UAAY,MArGZ,IAuGnBxtD,IAAM7e,QAAQoK,MAAc,SAAAyT,GAC3BA,EAAMtK,MAAMs4D,mBAAmB7rE,SAAU,KAxGvB,IA0GnB6e,IAAM3gB,QAAQkM,MAAc,SAACyT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACrCie,EAAMguD,mBAAqBjsE,EAC3Bie,EAAMtK,MAAMs4D,mBAAmB7rE,SAAU,KA5GvB,IA8GnB6e,IAAMzgB,KAAKgM,MAAc,SAAAyT,GACxBA,EAAMtK,MAAMs4D,mBAAmB7rE,SAAU,EACzC6d,EAAMguD,mBAAqB,MAhHT,IAkHnBhtD,IAAM7e,QAAQqK,MAAmB,SAAAwT,GAChCA,EAAMtK,MAAMu4D,UAAU9rE,SAAU,KAnHd,IAqHnB6e,IAAM3gB,QAAQmM,MAAmB,SAACwT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC1Cie,EAAMiuD,UAAYlsE,EAClBie,EAAMtK,MAAMu4D,UAAU9rE,SAAU,KAvHd,IAyHnB6e,IAAMzgB,KAAKiM,MAAmB,SAAAwT,GAC7BA,EAAMtK,MAAMu4D,UAAU9rE,SAAU,EAChC6d,EAAMiuD,UAAY,MA3HA,IA6HnBjtD,IAAM7e,QAAQsK,MAAsB,SAAAuT,GACnCA,EAAMtK,MAAMw4D,aAAa/rE,SAAU,KA9HjB,IAgInB6e,IAAM3gB,QAAQoM,MAAsB,SAACuT,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC7Cie,EAAMkuD,aAAensE,EACrBie,EAAMtK,MAAMw4D,aAAa/rE,SAAU,KAlIjB,IAoInB6e,IAAMzgB,KAAKkM,MAAsB,SAAAuT,GAChCA,EAAMtK,MAAMw4D,aAAa/rE,SAAU,EACnC6d,EAAMkuD,aAAe,MAtIH,G,EA0IPnuC,YAAcssC,EAAWxuB,GAAzB,O,6FA5MFA,E,sFAkEAwuB,E,2nBClFAxuB,EAAe,CAC1B9Q,SAAU,GACVG,WAAY,GACZG,eAAgB,GAChBG,iBAAkB,GAClB93B,MAAO,CACLq3B,SAAU,CAAE5qC,SAAS,GACrB+qC,WAAY,CAAE/qC,SAAS,GACvBkrC,eAAgB,CAAElrC,SAAS,GAC3BqrC,iBAAkB,CAAErrC,SAAS,KAIpBkqE,GAAS,OACnBrrD,IAAM7e,QAAQoiB,MAAiB,SAAAvE,GAC9BA,EAAMtK,MAAMq3B,SAAS5qC,SAAU,KAFb,IAInB6e,IAAM3gB,QAAQkkB,MAAiB,SAACvE,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACxCie,EAAM+sB,SAAWhrC,EACjBie,EAAMtK,MAAMq3B,SAAS5qC,SAAU,KANb,IAQnB6e,IAAMzgB,KAAKgkB,MAAiB,SAAAvE,GAC3BA,EAAMtK,MAAMq3B,SAAS5qC,SAAU,KATb,IAYnB6e,IAAM7e,QAAQqiB,MAAoB,SAAAxE,GACjCA,EAAMtK,MAAMw3B,WAAW/qC,SAAU,KAbf,IAenB6e,IAAM3gB,QAAQmkB,MAAoB,SAACxE,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC3Cie,EAAMktB,WAAanrC,EACnBie,EAAMtK,MAAMw3B,WAAW/qC,SAAU,KAjBf,IAmBnB6e,IAAMzgB,KAAKikB,MAAoB,SAAAxE,GAC9BA,EAAMtK,MAAMw3B,WAAW/qC,SAAU,KApBf,IAuBnB6e,IAAM7e,QAAQsiB,MAAwB,SAAAzE,GACrCA,EAAMtK,MAAM23B,eAAelrC,SAAU,KAxBnB,IA0BnB6e,IAAM3gB,QAAQokB,MAAwB,SAACzE,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QAC/Cie,EAAMqtB,eAAiBtrC,EACvBie,EAAMtK,MAAM23B,eAAelrC,SAAU,KA5BnB,IA8BnB6e,IAAMzgB,KAAKkkB,MAAwB,SAAAzE,GAClCA,EAAMtK,MAAM23B,eAAelrC,SAAU,KA/BnB,IAkCnB6e,IAAM7e,QAAQuiB,MAA0B,SAAA1E,GACvCA,EAAMtK,MAAM83B,iBAAiBrrC,SAAU,KAnCrB,IAqCnB6e,IAAM3gB,QAAQqkB,MAA0B,SAAC1E,EAAD,GAAwB,IAAdje,EAAc,EAAdA,QACjDie,EAAMwtB,iBAAmBzrC,EACzBie,EAAMtK,MAAM83B,iBAAiBrrC,SAAU,KAvCrB,IAyCnB6e,IAAMzgB,KAAKmkB,MAA0B,SAAA1E,GACpCA,EAAMtK,MAAM83B,iBAAiBrrC,SAAU,KA1CrB,G,EA8CP49B,YAAcssC,EAAWxuB,GAAzB,O,6FA3DFA,E,qFAaAwuB,E,2gCChBAxuB,EAAe,CAC1Bl7C,KAAM,GACN8wB,aAAc,CACZvV,QAAS,cACTwkD,SAAU,cACVC,UAAW,cACXjpC,KAAM,cACN9c,UAAW,cACXzW,QAAS,cACTsZ,UAAW,cACXk7B,SAAU,cACV59C,KAAM,cACNm2B,MAAO,eAETzb,WAAW,EACXob,YAAa,GACbptB,QAAS,CACP1I,KAAM,MACNi3B,OAAQ,KAIL,SAAS26C,EAAuB5uB,EAAhC,GAA2D,IAAdjtC,EAAc,EAAdA,WAClDitC,EAAUtsB,aAAa3gB,GAAc,WAGhC,SAAS87D,EAAuB7uB,EAAhC,GAAmE,IAAtBjtC,EAAsB,EAAtBA,WAAYrO,EAAU,EAAVA,OAC9Ds7C,EAAUp9C,KAAKmQ,GAAcrO,EAC7Bs7C,EAAUtsB,aAAa3gB,GAAc,UAGhC,SAAS+7D,EAAuB9uB,EAAhC,GAA2D,IAAdjtC,EAAc,EAAdA,WAClDitC,EAAUtsB,aAAa3gB,GAAc,SAGhC,SAASg8D,EAA2B/uB,GACzCA,EAAUtoC,WAAY,EAGjB,SAASs3D,EAA2BhvB,GACzCA,EAAUtoC,WAAY,EAGjB,SAASu3D,EAA2BjvB,GACzCA,EAAUtoC,WAAY,EAGjB,SAASw3D,EAAclvB,EAAvB,EAAqDtrC,GAAO,IAAxBnB,EAAwB,EAAxBA,OAAQ7R,EAAgB,EAAhBA,MACjDs+C,EAAUltB,YAAYyK,OAAO77B,EAAOgT,EAAMoe,YAAY92B,OAAS,GAC/DgkD,EAAUltB,YAAYpxB,GAAS6R,EAAOpY,KAAK0G,MAAM,KAAKse,MAGjD,SAASgvD,EAAsBnvB,GACpCA,EAAUltB,YAAc,GAGnB,SAASs8C,EAAepvB,EAAxB,GAAoD,IAAf7kD,EAAe,EAAfA,KAAMZ,EAAS,EAATA,MAChDylD,EAAUt6C,QAAQvK,GAAQZ,EACb,SAATY,GAA4B,WAATA,IACrB6kD,EAAUltB,YAAc,K,6FA3DfgrB,E,8DAsBG8wB,E,wEAIAC,E,wEAKAC,E,wEAIAC,E,4EAIAC,E,4EAIAC,E,4EAIAC,E,+DAKAC,E,uEAIAC,E,+lBCxDHtxB,EAAe,CAC1BpI,SAAS,GAGJ,SAAS25B,KAET,SAASC,EAAsBtvB,EAA/B,GAAsD,QAAVt7C,EAAU,EAAVA,OACjDs7C,EAAUtK,UAAYhxC,SAAD,UAACA,EAAQ9B,YAAT,iBAAC,EAAcA,YAAf,QAAC,EAAoB8yC,SAGrC,SAAS65B,EAAsBvvB,GACpCA,EAAUtK,SAAU,G,6FAXToI,E,6EAIGuxB,E,sFAEAC,E,sFAIAC,E,8nDCRHzxB,EAAe,CAC1B17C,SAAS,EACTsQ,MAAO,CAAE88D,WAAW,GACpBC,mBAAmB,EACnBnrE,WAAY,CAAEC,OAAQ,gBAGjB,SAASmrE,EAAc1vB,EAAvB,GAAqD,IAAjBj8C,EAAiB,EAAjBA,KAAMqC,EAAW,EAAXA,QAC/C45C,EAAUttC,MAAQ,CAAE88D,WAAW,EAAMzrE,OAAMqC,WAEzC45C,EAAU17C,WADRP,EACqB,CAAEQ,OAAQ,eAEV,CAAEA,OAAQ,UAAW6B,QAASA,GAAW,IAI7D,SAASupE,EAAyB3vB,EAAlC,GAAyD,IACvDrjC,EAAP,EAD8D,EAAVjY,OAC1B9B,KAAKA,KAAKiB,YAApC,MACAm8C,EAAU17C,WAAaqY,EAGlB,SAASizD,EAAyB5vB,EAAlC,GAA0D,IAAX55C,EAAW,EAAXA,QACpD45C,EAAU17C,WAAa,CAAEC,OAAQue,IAAiBC,IAAK3c,WAGlD,SAASypE,EAAmB7vB,EAA5B,GAAuD,IAAd17C,EAAc,EAAdA,WAC9C07C,EAAU17C,WAAaA,G,6FA1BZw5C,E,uEAOG4xB,E,wEASAC,E,mFAKAC,E,mFAIAC,E,mpCC3BH5nE,EAAM,kBAAM,SAAA6nE,GAAI,sB,EAAA,G,EAAA,yBAAI,WAAMvsE,GAAN,iGACvBvG,EAAmCuG,EAAnCvG,KAAM8V,EAA6BvP,EAA7BuP,QAASi9D,EAAoBxsE,EAApBwsE,OAAW16B,EADH,EACY9xC,EADZ,GAEbuP,aAAmBhO,SAClB9H,EAHY,uBAI7B8yE,EAAKvsE,GAJwB,iCAQ/BusE,EAAK,EAAD,CAAG9yE,KAAM,GAAF,OAAKA,EAAL,aAAwBq4C,IARJ,kBAURviC,EAVQ,OAUvBpO,EAVuB,OAWzBqrE,GACFD,EAAK,EAAD,CAAG9yE,QAASq4C,EAAZ,CAAkBzyC,KAAM8B,EAAQqrE,YAEtCD,EAAK,EAAD,CAAG9yE,KAAM,GAAF,OAAKA,EAAL,aAAwBq4C,EAA/B,CAAqC3wC,YAdZ,kDAgB7B0O,QAAQnW,MAAM,wBAAd,MACA6yE,EAAK,EAAD,CAAG9yE,KAAM,GAAF,OAAKA,EAAL,aAAwBq4C,EAA/B,CAAqCp4C,MAAK,QAjBjB,yD,+KAAJ,yD,4FAAhBgL,E,wbCGAs/C,EAAUC,YAAY1J,IAAcO,M,4FAApCkJ,E,sbCDP8hB,EAAe,CACnB2G,kBAAmB,2BACnBC,oBAAqB,8BAGVpvB,EAAsB,CACjCJ,iBAAkB,IAAIgpB,IAAcJ,EAAa2G,mBACjDtvB,mBAAoB,IAAI+oB,IAAcJ,EAAa4G,uB,6FAP/C5G,E,oFAKOxoB,E,i+BCAPqvB,EAAU,SAAC,GAA6C,IAA3Ch/C,EAA2C,EAA3CA,MAAOxrB,EAAoC,EAApCA,QAAS/E,EAA2B,EAA3BA,SAAU++D,EAAiB,EAAjBA,WAG3C,OAFqC,IAAfxuC,EAAM5S,KAGnB,kBAAC6xD,EAAD,wBAIP,yBAAKvvE,UAAU,iBAAf,sBACE,8CACGswB,EAAM1vB,KAAI,SAACgH,EAAM9G,EAAO+W,GAAd,OACT,wBAAI9W,IAAKD,EAAOd,UAAU,YAA1B,sBACGD,EAAS6H,EAAM9G,EAAOgE,EAASg6D,EAAYjnD,UAiBxD,SAAS03D,IACP,OACE,kBAAC,IAAD,uBACE,uGAZND,EAAQlvE,UAAY,CAClBkwB,MAAOymC,MACPh3D,SAAUqmB,QAGZkpD,EAAQh+C,aAAe,CACrBhB,MAAO,IAWF,I,IAAMk/C,EAAmBrgD,aAC9B,SAAArb,GACE,MAAO,CACLgrD,WAAYttC,YAAoB1d,MAHNqb,CAM9BmgD,I,6FA3CIA,E,qFA6BGC,E,oFAQIC,E,u1EC3BAC,EAAgB,SAAC,GAWxB,IAVJ1uD,EAUI,EAVJA,KACA/N,EASI,EATJA,QACAtP,EAQI,EARJA,WACAq2C,EAOI,EAPJA,YACAj2C,EAMI,EANJA,OACAkkC,EAKI,EALJA,UACAyR,EAII,EAJJA,eACAE,EAGI,EAHJA,iBACAH,EAEI,EAFJA,aACAD,EACI,EADJA,gBAEA,IAAsBx/C,mBAAS,YAA/B,GAAOw8B,EAAP,KAAYm5C,EAAZ,KACA,IAA4C31E,mBAAS,IAArD,GAAO41E,EAAP,KAAuBC,EAAvB,KACA,IAA8C71E,mBAAS,IAAvD,GAAO81E,EAAP,KAAwBC,EAAxB,KACMC,EAAiC,kBAAnBt2B,EACd7S,EAAUC,mBA0BhB,OAzBAhsC,qBAAU,WACJk/C,SAAer2C,KAAYs2C,UAC7Bre,YAAYj4B,EAAWs2C,UACpB5kB,MAAK,SAAApzB,GACAA,EAAKA,KAAKA,MAAQA,EAAKA,KAAKA,KAAKguE,WAAahuE,EAAKA,KAAKA,KAAKguE,UAAU,IACzEF,EAAmB9tE,EAAKA,KAAKA,KAAKguE,UAAU,OAG/CxnC,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,gDAAiDnoB,MAG/DqH,GAAcA,EAAW8B,SAC3Bs/B,YAAWphC,EAAW8B,SACnB4vB,MAAK,SAAApzB,GACAA,EAAKA,KAAKA,MAAQA,EAAKA,KAAKA,KAAK2I,WAAa3I,EAAKA,KAAKA,KAAK2I,UAAU,IACzEilE,EAAkB5tE,EAAKA,KAAKA,KAAK2I,UAAU,OAG9C69B,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,gDAAiDnoB,QAGlE,IAGD,kBAAC,IAAD,CAAO0kB,KAAMA,EAAM/N,QAASA,GAC1B,kBAAC,IAAD,CACEsJ,MAAO,CACLmI,SAAU,OACVgX,UAAW,OACX7f,SAAU,OACV8I,UAAW,SAGb,kBAAC,IAAD,CACEvD,MAAM,eACNwD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGJqiB,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,0CAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPzN,EAAQuR,QACRyjB,EAAU,MAHd,WAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,KACE,yFAAkE,IAClE,uBAAGijB,MAAO,CAAEjB,MAAO,UAAW40D,eAAgB,YAAa7uD,OAAQ,YACjE,uBACEkoB,KAAK,eACL7oB,QAAS,WACPunB,EAAU,MAHd,sBAWN,kBAAC,IAAMvmB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPzN,EAAQuR,QACRyjB,EAAU,MAHd,YAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,IACjB,kBAAC,IAAMmmB,OAAP,KACE,kBAAC,IAAD,CAAUqW,OAAQI,EAAK25C,UAAWR,EAAQhsE,WAAYA,KAExD,kBAAC,IAAD,CAAQ/J,MAAO48B,GACb,kBAAC,IAAOwK,KAAR,CAAapnC,MAAM,YACjB,kBAAC,IAAD,CACEquC,UAAWA,EACXtkC,WAAYqsE,EAAcF,EAAkBnsE,EAC5C81C,aAAcA,EACdD,gBAAiBA,EACjB3S,QAASA,EACT6S,eAAgBA,EAChBE,iBAAkBA,EAClBI,YAAaA,KAGjB,kBAAC,IAAOhZ,KAAR,CAAapnC,MAAM,iBACjB,kBAAC,IAAMqmB,QAAP,KACE,kBAAC,IAAD,CAAexa,QAASmqE,Y,EA/H7BF,E,0QAAAA,E,ofCbN,SAASU,EAAT,GAAqD,IAAjCh6C,EAAiC,EAAjCA,OAAQ+5C,EAAyB,EAAzBA,UAC3B95C,EAAO,CAAC,CAAEv6B,MAAO,WAAYlC,MAAO,WAAYw8B,QAAQ,IAM9D,OAP0D,EAAdzyB,YAI1C0yB,EAAK7tB,KAAK,CAAE1M,MAAO,gBAAiBlC,MAAO,kBAGtC,kBAAC,IAAD,CAAew8B,OAAQA,EAAQ1V,QAASyvD,EAAW95C,KAAMA,K,4FAPlD+5C,E,meCAHC,EAAgB,SAAC,GAAgB,IAAd5qE,EAAc,EAAdA,QAC9B,OAAKA,EAIH,kBAAC,IAAD,KACE,kBAAC,IAAQsa,OAAT,KACE,kBAAC,IAAQC,MAAT,KAAgBva,EAAQjL,MACxB,kBAAC,IAAQm/D,KAAT,KAAel0D,EAAQhK,cAExBgK,EAAQF,YAAcE,EAAQF,WAAWlK,OAAS,GACjD,kBAAC,IAAQ4kB,QAAT,KACE,4BACE,2CAEF,6BACGxa,EAAQF,WAAW1E,KAAI,SAAAqqB,GACtB,OACE,kBAAC,IAAM/K,SAAP,CAAgBnf,IAAKkqB,EAAU1wB,MAC7B,4BACG0wB,EAAU1wB,KADb,KACqB0wB,EAAUkN,UAD/B,KAGA,kBAAC,IAAQuhC,KAAT,KAAezuC,EAAUzvB,oBApBhC,kBAAC,IAAD,6D,4FAFE40E,E,21NCsBPC,iB,0HACJ,0BAAYv2E,GAAO,mDAGjB,IAAQ4J,GAFR,mBAAM5J,IAEsBA,MAApB4J,WACF4sE,EAAiB,CACrBC,UAAW7sE,SAAD,UAACA,EAAY4B,kBAAb,QAAC,EAAwBi/B,QACnCA,QAAQ7gC,SAAA,UAAAA,EAAY4B,kBAAZ,eAAwBi/B,SAAU,EAC1C5Z,OAAOjnB,SAAA,UAAAA,EAAY4B,kBAAZ,eAAwBqlB,QAAS,IAPzB,OAUjB,EAAK7W,MAAQ,CACX08D,QAASF,EACTG,WAAY,KACZC,uBAAuB,GAbR,E,qEAiBnB,WAAoB,WAClBjvE,iDAAWC,IAAIvI,uCAAUwI,KAAKC,UAAUsnE,cAAc9zC,MAAK,SAACrzB,GAC1D,EAAKyhC,SAAS,CAAEitC,WAAY1uE,EAASC,KAAKA,UAG5C,MAAyCqmB,KAAKvuB,MAAtC62E,EAAR,EAAQA,oBAAqBthD,EAA7B,EAA6BA,QACxBshD,GACHthD,EAAQ,c,oBAIZ,WAAS,iBACP,EAWIhH,KAAKvuB,MAVPkuC,EADF,EACEA,UACA3Y,EAFF,EAEEA,QACAuhD,EAHF,EAGEA,kBACAltE,EAJF,EAIEA,WACAq2C,EALF,EAKEA,YACAP,EANF,EAMEA,aACAD,EAPF,EAOEA,gBACAE,EARF,EAQEA,eACAE,EATF,EASEA,iBACA/S,EAVF,EAUEA,QAEF,EAAuDve,KAAKvU,MAApD08D,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,sBACvBG,EAAmBJ,EAAatzE,+CAAOszE,EAAWK,aAAa1zE,OAAO,qBAAuB,KAE7FkzE,EAAiB,CACrBC,UAAW7sE,SAAD,UAACA,EAAY4B,kBAAb,QAAC,EAAwBi/B,QACnCA,QAAQ7gC,SAAA,UAAAA,EAAY4B,kBAAZ,eAAwBi/B,SAAU,EAC1C5Z,OAAOjnB,SAAA,UAAAA,EAAY4B,kBAAZ,eAAwBqlB,QAAS,IAGpC8Y,EAA+B,kBAAnBgW,EAEZs3B,EAAmB,SAACC,EAAaC,EAASC,GAC9C,IAAMhQ,EAAmBvjD,qEAAUriB,MAAK,SAAA0iB,GAAQ,OAAIA,EAASrkB,QAAUq3E,KACjEG,EAAetzD,qEAAcviB,MAAK,SAAAc,GAAI,OAAIA,EAAKzC,QAAUs3E,KAEzDG,GAAmBlQ,GAAoBA,EAAiBtjD,OAAOO,KAAK+yD,GACpEG,GAAeF,GAAgBA,EAAavzD,OAAOO,KAAK+yD,GAE9D,OAAQE,GAAmBC,EAAeH,EAAa,IAGnDI,EAAY,WAChB,GAAIv3B,SAAer2C,KAAYnJ,KAAM,CACnC,IAAMg3E,EAAe7tE,EAAWnJ,KAAK0G,MAAM,KAG3C,OAFaswE,EAAaA,EAAan2E,OAAS,GAKlD,OAAOsI,aAAA,EAAAA,EAAYnJ,YAAQW,GAmE7B,OACE,sHACE,2DAAC,sCAAD,CACE8vB,cAAe,GACfvxB,SApEmB,SAAAkX,GACvB,IAAQ6gE,EAA+C7gE,EAA/C6gE,MAAOC,EAAwC9gE,EAAxC8gE,KAAMC,EAAkC/gE,EAAlC+gE,MAAOC,EAA2BhhE,EAA3BghE,MAAOC,EAAoBjhE,EAApBihE,MAAOC,EAAalhE,EAAbkhE,SACpCr2C,EAAS,GAEf,GAAIq2C,EACF,GAAIA,EAAStjE,SAAS,KACpBitB,EAAOq2C,SAAW,+BACb,GAAIA,EAAStjE,SAAS,KAC3BitB,EAAOq2C,SAAW,kCACb,GAAIjB,EAAkBriE,SAASsjE,GACpC,GAAI93B,SAAer2C,KAAYnJ,KAAM,CACnC,IAAMg3E,EAAe7tE,EAAWnJ,KAAK0G,MAAM,KAC9BswE,EAAaA,EAAan2E,OAAS,KAEnCy2E,IACXr2C,EAAOq2C,SAAW,iDAGpBr2C,EAAOq2C,SAAW,2CAexB,OATElhE,EAAO,iBACL,2BAA2BwN,KAAKxN,EAAO,kBACD,MAAtCA,EAAO,gBAAgB9B,QAAQ,KAEjC2sB,EAAO,gBAAkB,0CAG3B,EAAKgI,SAAS,CAAEktC,sBAAgC,MAATe,IAE1B,MAATA,GAA0B,MAAVC,GAA2B,MAAVC,GAA2B,MAAVC,GACpDp2C,EAAOi2C,KAAO,yCACdj2C,EAAOk2C,MAAQ,yCACfl2C,EAAOm2C,MAAQ,yCACfn2C,EAAOo2C,MAAQ,yCACRp2C,IAGJxsB,0EAAc8iE,eAAeN,KAChCh2C,EAAOg2C,MAAQxiE,0EAAc4B,WAAWC,SAGrC7B,0EAAc+iE,aAAaN,KAC9Bj2C,EAAOi2C,KAAOziE,0EAAc4B,WAAWE,OAGpC9B,0EAAcgjE,YAAYN,KAC7Bl2C,EAAOk2C,MAAQ1iE,0EAAc4B,WAAWG,MAGrC/B,0EAAcijE,aAAaN,KAC9Bn2C,EAAOm2C,MAAQ3iE,0EAAc4B,WAAWI,OAGrChC,0EAAckjE,eAAeN,KAChCp2C,EAAOo2C,MAAQ5iE,0EAAc4B,WAAWK,aAGnCuqB,IAQH6O,SAAU,SAAA15B,GACR65B,aAAagmC,EAASxoC,EAAW3Y,EAASkqB,EAAiB71C,EAAY+/B,EAAW9yB,IAEpF45B,SAAU3D,IAET,WACC,OACE,sHACE,2DAAC,wDAAM5mB,QAAP,KACE,2DAAC,sCAAD,KACE,2DAAC,wDAAD,KACE,2DAAC,wDAAQF,OAAT,KACE,2DAAC,wDAAQC,MAAT,iBAEF,2DAAC,wDAAQC,QAAT,KACE,2DAAC,wDAAD,KACG25B,GACC,2DAAC,wDAAD,CAAQ1X,GAAI,GACV,2DAAC,qEAAD,CACE1nC,KAAK,WACLsB,MAAM,WACNL,YAAY,gDACZ3B,cAAe,SAACF,EAAO68C,GACrBA,EAAOC,cACL,UACAs6B,EAAiBp3E,EAAO68C,EAAO7lC,OAAOvU,KAAMo6C,EAAO7lC,OAAOnL,cAMnEm0C,GACC,2DAAC,wDAAD,CAAQ1X,GAAI,GACV,2DAAC,qEAAD,CACE1nC,KAAK,OACLsB,MAAM,OACNL,YAAY,4CACZ3B,cAAe,SAACF,EAAO68C,GACrBA,EAAOC,cACL,UACAs6B,EAAiBv6B,EAAO7lC,OAAOqN,SAAUrkB,EAAO68C,EAAO7lC,OAAOnL,cAMxE,2DAAC,wDAAD,CAAQy8B,GAAI,GACV,2DAAC,qEAAD,CACE1nC,KAAK,UACLsB,MAAM,UACNlC,OAAO6/C,aAAA,EAAAA,EAAch0C,WAAW9B,aAAzB,EAAyBA,EAAY8B,SAC5CzJ,cAAyBb,IAAfwI,EACV9J,UAAQ,QAMlB,2DAAC,wDAAD,KACE,2DAAC,wDAAQkmB,OAAT,KACE,2DAAC,wDAAQC,MAAT,kBAEF,2DAAC,wDAAQC,QAAT,KACE,2DAAC,wDAAD,KACE,2DAAC,sEAAD,CACEzlB,KAAK,WACLsB,MAAM,OACNlC,OAAO6/C,aAAA,EAAAA,EAAcj/C,OAAQ+2E,IAC7B13E,UAAQ,KAGZ,2DAAC,wDAAD,KACE,2DAAC,sEAAD,CACEW,KAAK,kBACLsB,MAAM,cACNlC,OAAO6/C,aAAA,EAAAA,EAAch+C,eAAekI,aAA7B,EAA6BA,EAAYlI,mBAAeN,EAC/DF,WAAS,EACTpB,UAAQ,KAGZ,2DAAC,wDAAQmmB,MAAT,qBAA6B8wD,GAC7B,2DAAC,wDAAD,KACE,2DAAC,wDAAD,CAAQv0D,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,sEAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAcg4B,SAAS9tE,aAAvB,EAAuBA,EAAY8tE,QAASxiE,0EAAcmC,wBAAwB,GACzF3X,QAASwV,0EAAcmC,wBAAwBvQ,KAAI,SAAAhF,GAAM,MAAK,CAC5DjC,MAAOiC,EACPC,MAAOD,MAETJ,YAAawT,0EAAc4B,WAAWC,WAG1C,2DAAC,wDAAD,CAAQyL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,sEAAD,CACE/mB,KAAK,OACLsB,MAAM,OACNlC,OAAO6/C,aAAA,EAAAA,EAAci4B,QAAQ/tE,aAAtB,EAAsBA,EAAY+tE,OAAQ,IACjDj2E,YAAawT,0EAAc4B,WAAWE,QAEvC4/D,GACC,kEAAK1wE,UAAU,sBAAsBgP,0EAAc4B,WAAWM,qBAGlE,2DAAC,wDAAD,CAAQoL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,sEAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAck4B,SAAShuE,aAAvB,EAAuBA,EAAYguE,QAAS,IACnDl2E,YAAawT,0EAAc4B,WAAWG,QAG1C,2DAAC,wDAAD,CAAQuL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,sEAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAcm4B,SAASjuE,aAAvB,EAAuBA,EAAYiuE,QAAS,IACnDn2E,YAAawT,0EAAc4B,WAAWI,SAG1C,2DAAC,wDAAD,CAAQsL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,sEAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAco4B,SAASluE,aAAvB,EAAuBA,EAAYkuE,QAAS,IACnDp2E,YAAawT,0EAAc4B,WAAWK,kBAMhD,2DAAC,0DAAD,CACE8K,UAAUy9B,aAAA,EAAAA,EAAcl0C,cAAc5B,aAA5B,EAA4BA,EAAY4B,YAClDy8B,UAAQ,IAEV,2DAAC,wDAAD,KACE,2DAAC,wDAAQjiB,OAAT,KACE,2DAAC,wDAAQC,MAAT,uBAEF,2DAAC,wDAAQC,QAAT,KACE,2DAAC,kFAAD,CACEzlB,KAAK,gBACL+pC,aAAcgsC,EACd1rC,QAAS,SAAAutC,IACgB,IAAnBA,EAAQ5tC,QAAgB6tC,qDAAQD,EAAQxnD,SAC1C,EAAK6Y,SAAS,CAAEgtC,QAAS,CAAED,SAAS,KAEtC,EAAK/sC,SAAS,CAAEgtC,QAAS,SAAF,CAAID,SAAS,GAAS4B,YAOzD,2DAAC,wDAAM1wD,OAAP,KACE,2DAAC,wDAAMA,OAAOC,MAAd,KACE,2DAAC,mEAAD,CAAcF,QAAQ,aAAtB,iB,6IA5SWgV,6CAAMC,eAwTxB47C,sBAAwBljD,oDACnC,SAAArb,GAAS,kBACP,MAAO,CACL68D,oBAAmB,UAAE78D,EAAMme,gBAAR,iBAAE,EAAgBjwB,YAAlB,aAAE,EAAsBg4C,SAC3C42B,kBAAmBjoC,yDAAiB,UAAC70B,EAAMme,gBAAP,iBAAC,EAAgBjwB,YAAjB,iBAAC,EAAsBg4C,gBAAvB,iBAAC,EAAgCh4C,YAAjC,iBAAC,EAAsCA,YAAvC,aAAC,EAA4CguE,cAGrF,CACE3gD,QAASjd,iDARwB+c,CAUnCkhD,kB,oCAEa7lC,a,mJAAf,WACEgmC,EACAxoC,EACA3Y,EACAkqB,EACA71C,EACA+/B,EACA9yB,GAPF,4BAwCW2hE,EAxCX,gFAwCWA,EAxCX,SAwCoB34E,EAAOoH,GACvB,MAAY,eAARA,OAICpH,GAA0B,kBAAVA,KAIP,SAAVA,IAIiB,WAAjB,QAAOA,KAAsBy4E,qDAAQz4E,OAhCvCgX,EAXFqN,SAWErN,EAVFvU,KACAy1E,EASElhE,EATFkhE,SACAU,EAQE5hE,EARF4hE,gBACA/sE,EAOEmL,EAPFnL,QACAgsE,EAME7gE,EANF6gE,MACAC,EAKE9gE,EALF8gE,KACAC,EAIE/gE,EAJF+gE,MACAC,EAGEhhE,EAHFghE,MACAC,EAEEjhE,EAFFihE,MACGY,EApBP,yBAqBM7hE,EArBN,WAsBQqX,EAAO,CACXxsB,YAAa+2E,EACb/sE,UACAgsE,MAAOA,GAAS,KAChBC,KAAMA,GAAQ,KACdC,MAAOA,GAAS,KAChBC,MAAOA,GAAS,KAChBC,MAAOA,GAAS,MAGdnuC,EACFzb,EAAKqnB,OAASwiC,EAEd7pD,EAAKztB,KAAOs3E,EAnChB,EAsCyBY,gBAAgBD,GAA/BltE,EAtCV,EAsCUA,WAsBJkrE,EAAQD,SAIVvoD,EAAKxiB,QAAU,mCACfwiB,EAAK1iB,WAAa,CAChB/K,KAAMiL,EACNF,WAAYotE,oDAAOptE,EAAYgtE,GAC/B/tC,OAAQisC,EAAQjsC,OAChB5Z,MAAO6lD,EAAQ7lD,QAGjB3C,EAAK1iB,WAAaotE,oDAAOptE,EAAYgtE,GAGnC7uC,EACF7H,4DAAcl4B,EAAWnJ,KAAMytB,GAC5BoN,MAAK,WACJ4S,EAAU,WACVuR,EAAgB,IAChBlqB,EAAQ,eAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,sCAAuCnoB,GACnDk9C,EAAgBvxB,GAChBggB,EAAU,WAGdtM,4DAAa1T,GACVoN,MAAK,WACJ4S,EAAU,WACVuR,EAAgB,IAChBlqB,EAAQ,eAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,sCAAuCnoB,GACnDk9C,EAAgBvxB,GAChBggB,EAAU,WAjGlB,iD,sBAsGA,SAASyqC,gBAAgBE,GAEvB,IAAMhiE,EAASiiE,cAAcD,GAGvB7uE,EAFOqQ,OAAOC,KAAKzD,GAEL6C,QAClB,SAACm7B,EAAW5tC,GACV,GAAIA,EAAI2N,WAAW,aAAc,CAC/B,qBAA4B3N,EAAI6f,QAAQ,YAAa,IAAI3f,MAAM,MAA/D,GAAOH,EAAP,KAAcgtB,EAAd,KAEMtZ,EAAQm6B,EAAUjvB,SAAS5e,GAGjC,MAAmB,UAAfgtB,GAA0C,KAAhBnd,EAAO5P,KAIjCyT,EAEAA,EAAMsZ,GADW,UAAfA,EACF,kBAA8Bnd,EAAO5P,GAArC,SAEoB4P,EAAO5P,GAEL,UAAf+sB,EACT6gB,EAAUjvB,SAASnX,KAAnB,mBAA2BulB,EAA3B,kBAAkDnd,EAAO5P,GAAzD,WAEA4tC,EAAUjvB,SAASnX,KAAnB,mBAA2BulB,EAAand,EAAO5P,MAZxC4tC,EAkBX,GAAI5tC,EAAI2N,WAAW,aAAc,CAC/B,IAAO5N,EAAP,eAAgBC,EAAI6f,QAAQ,cAAe,IAAI3f,MAAM,MAArD,MAIA,OAFA0tC,EAAU5sB,WAAWpR,EAAO,YAAD,OAAa7P,EAAb,YAA+B6P,EAAO5P,GAE1D4tC,EAKT,OAFAA,EAAUrpC,WAAWvE,GAAO4P,EAAO5P,GAE5B4tC,IAET,CAAEjvB,SAAU,GAAIqC,WAAY,GAAIzc,WAAY,KAG9C,MAAO,CACLA,WAAY,SAAF,GACLxB,EAAOwB,WADF,CAERoa,SAAUmzD,gBAAgB/uE,EAAO4b,UACjCqC,WAAYje,EAAOie,cAKzB,SAAS8wD,gBAAgBnzD,GACvB,OAAOA,EAASpX,QAAO,SAAAiW,GAAC,OAAIA,KAAG3d,KAAI,SAAC2d,EAAGzd,GAAJ,mBAAoByd,EAApB,CAAuB9jB,KAAM,CAAEu9B,SAAUl3B,EAAQ,QAGtF,SAAS8xE,cAAcjiE,GAUrB,OATIA,EAAO,kBACLA,EAAO,qBACTA,EAAOpW,KAAP,UAAiBoW,EAAO,qBAAxB,YAAgDA,EAAO,iBAEvDA,EAAOpW,KAAOoW,EAAO,uBAEhBA,EAAO,4BACPA,EAAO,iBAETA,E,qIAhfH0/D,iB,6HAwTOgC,sB,kIAYE7nC,a,yHAsGNioC,gB,4HAwDAI,gB,4HAIAD,c,ohBChgBIp1D,EAAgB,SAAAD,GAC3B,IAAMu1D,EAAS,GAAH,OAAMv1D,EAAQrY,SAASiF,cAAvB,cAA0CoT,EAAQ8L,KAAlD,mBAAiE9L,EAAQ/U,QAAzE,YACV+U,EAAQy4B,MAEF3sC,EAAYkU,EAAZlU,QAER,OAAIA,WAASC,SACX,UAAUwpE,EAAV,YAAoBzpE,EAAQC,UAGvBwpE,I,4FAVIt1D,E,qkBCAE,SAAA8B,GACb,GAAqB,iBAAVA,EAAoB,OAAO,KAEtC,OADAA,EAAQA,EAAMnP,QAEZ,IAAK,aACH,OAAO,EACT,IAAK,cACH,OAAO,EACT,IAAK,SACH,MAAO,GACT,IAAK,SACH,MAAO,GACT,QACE,IACM4W,EADQ,8BACQ6oB,KAAKtwB,GAC3B,GAAI5a,MAAMC,QAAQoiB,GAChB,OAAQA,EAAQ,IACd,IAAK,MACH,OAAOkR,OAAO7tB,SAAS2c,EAAQ,IACjC,IAAK,MAIH,IAEE,OAAOA,EAAQ,GAAGnG,QAAQ,KAAM,IAChC,MAAO3kB,GAEP,OAAO,KAIX,QACE,OAAO,UAEN,GAAI,oBAAoBkiB,KAAKmB,GAElC,OAAOA,EAIb,OAAO,MAzCM,O,gmBCYTyzD,EAAS,SAAC,GAA8C,IAA5CtpD,EAA4C,EAA5CA,OAAQrE,EAAoC,EAApCA,SAAoC,IAA1Buf,sBAA0B,MAAT,GAAS,EA4B5D,OACE,yBAAK3kC,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,WAAf,YAEF,kBAAC,IAAD,CAAMgzE,OAAK,EAACC,gBAAc,GA/BxBvuE,MAAMC,QAAQ8kB,IAAWA,EAAOruB,OAC3BquB,EAAO7oB,KAAI,SAAAgH,GAChB,OACE,kBAAC,IAAD,CACE6Y,QAAS,kBAAM2E,EAASxd,IACxBvM,SAAUuM,EAAKvM,SACf0F,IAAK6G,EAAK5F,KAAKzH,KACf24E,QAAM,GAEN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWx1D,KAAK,QAAQpB,MAAO,CAAEjB,MAAO,yBAE1C,kBAAC,IAAD,CAAc83D,QAASvrE,EAAK5F,KAAKzH,OACjC,kBAAC,IAAD,KACGqN,EAAKw8B,cAAgBO,EAAe/jC,KAAI,SAAA+jB,GAAI,OAAIA,KACjD,kBAAC,IAAD,CAASjH,KAAK,QAAQgvC,KAAK,MAAMrxC,MAAM,WACrC,0BAAMlb,EAAGyH,EAAKvM,SAAWq2D,IAAiBE,YAO/C,Q,EAeImhB,EAAA,O,6FAxCTA,E,upBCEAK,EAAQ,SAAC,GAOT,IANJzoD,EAMI,EANJA,MACAvF,EAKI,EALJA,SACA8e,EAII,EAJJA,mBACAO,EAGI,EAHJA,uBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,eAkDM0uC,EAAqB5uC,EAAyB,QAAU,aACxD6uC,EAAsB5uC,GAAmB/Z,EAAMrvB,MAAK,SAAAsM,GAAI,OAAIA,EAAK0Y,WAEvE,OACE,yBAAKtgB,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,WAAf,UACCszE,GACC,kBAAC,IAAD,CAAQhqC,KAAK,eAAe7oB,QAAS,kBAAMyjB,EAAmBO,KAC3D4uC,IAIP,kBAAC,IAAD,CAAML,OAAK,EAACC,gBAAc,GA7DN,WACtB,GAAIvuE,MAAMC,QAAQgmB,IAAUA,EAAMvvB,OAAQ,CACxC,IAAIm4E,EAAmB,GAMvB,OALK7uC,EAEO/Z,EAAMrvB,MAAK,SAAAsM,GAAI,OAAIA,EAAK0Y,aAClCizD,EAAmB,oCAFnBA,EAAmB,2CAIjBA,EAEA,yBAAKvzE,UAAU,kCACb,kBAAC,IAAD,CAAkB0d,KAAK,UACvB,8BAAO61D,IAIN5oD,EACJriB,QAAO,SAAA+gB,GAAI,OAAIA,EAAK/I,WACpB1f,KAAI,SAAAyoB,GACH,OACE,kBAAC,IAAD,CACE5I,QAAS,kBAAM2E,EAASiE,IACxBhuB,SAAUguB,EAAKhuB,SACf0F,IAAKsoB,EAAKrnB,KAAKzH,KACf24E,QAAM,GAEN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYx1D,KAAK,QAAQpB,MAAO,CAAEjB,MAAO,yBAE3C,kBAAC,IAAD,CAAc83D,QAAS9pD,EAAKrnB,KAAKzH,OACjC,kBAAC,IAAD,CAAyB6/C,QAAS,CAAEre,KAAM,mCACvC1S,EAAKhuB,UAAYspC,EAAe/jC,KAAI,SAAA+jB,GAAI,OAAIA,KAC7C,kBAAC,IAAD,CACE3oB,SAAU,kBAAMopB,EAASiE,IACzBqjC,KAAK,MACLrxC,MAAM,UACNqC,KAAK,QACLR,QAASmM,EAAKhuB,SACd++C,QAAS,CAAEre,KAAM,0BAO/B,OAAO,KAiBFy3C,M,EAMMJ,EAAA,O,6FA5ETA,E,goBCNAK,EAAS,SAAC,GAA2E,IAAzEvwC,EAAyE,EAAzEA,SAAUC,EAA+D,EAA/DA,cAAeC,EAAgD,EAAhDA,cAAehe,EAAiC,EAAjCA,SAAUof,EAAuB,EAAvBA,iBAC5D4V,EAAUn6C,IAAW,sBAAuB,CAAE,wBAAyBukC,IAC7E,OACE,yBAAKxkC,UAAWo6C,GACd,yBAAKp6C,UAAU,2BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,iCAAf,gBAEF,8BACE,kBAAC,IAAD,CAAuBsc,MAAO,CAAEjB,MAAO,wBACvC,0BAAMrb,UAAU,iCAAhB,cAEF,8BACE,kBAAC,IAAD,CAAwBsc,MAAO,CAAEjB,MAAO,wBACxC,0BAAMrb,UAAU,iCAAhB,mBAEF,8BACE,kBAAC,IAAD,CAAkBsc,MAAO,CAAEjB,MAAO,wBAClC,0BAAMrb,UAAU,iCAAhB,oBAGJ,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,oCAAf,WAEF,kBAAC,IAAD,CACEhE,SAAU,kBAAMopB,EAAS,WAAY,WACrCsnC,KAAK,MACLrxC,MAAM,UACNqC,KAAK,QACLR,QAASgmB,EAASG,OAClB+W,QAAS,CAAEre,KAAM,mBACjBhgC,UAAQ,IAEV,kBAAC,IAAD,CACEC,SAAU,kBAAMopB,EAAS,gBAAiB,WAC1CsnC,KAAK,MACLrxC,MAAM,UACNqC,KAAK,QACLR,QAASimB,EAAcE,OACvB+W,QAAS,CAAEre,KAAM,mBACjBhgC,UAAQ,IAEV,kBAAC,IAAD,CACEC,SAAU,kBAAMopB,EAAS,gBAAiB,WAC1CsnC,KAAK,MACLrxC,MAAM,UACNqC,KAAK,QACLR,QAASkmB,EAAcC,OACvB+W,QAAS,CAAEre,KAAM,mBACjBhgC,UAAQ,KAGZ,yBAAKiE,UAAU,2BACb,yBAAKA,UAAU,kCACb,yBAAKA,UAAU,oCAAf,WAEF,kBAAC,IAAD,CACEhE,SAAU,kBAAMopB,EAAS,WAAY,YACrCsnC,KAAK,MACLrxC,MAAM,UACNqC,KAAK,QACLR,QAASgmB,EAASI,QAClB8W,QAAS,CAAEre,KAAM,qBAEnB,kBAAC,IAAD,CACE//B,SAAU,kBAAMopB,EAAS,gBAAiB,YAC1CsnC,KAAK,MACLrxC,MAAM,UACNqC,KAAK,QACLR,QAASimB,EAAcG,QACvB8W,QAAS,CAAEre,KAAM,qBAEnB,kBAAC,IAAD,CACE//B,SAAU,kBAAMopB,EAAS,gBAAiB,YAC1CsnC,KAAK,MACLrxC,MAAM,UACNqC,KAAK,QACLR,QAASkmB,EAAcE,QACvB8W,QAAS,CAAEre,KAAM,wB,EAOZ03C,EAAA,O,6FAtFTA,E,gqBCMAC,EAAWv4D,YAAW,CAC1B4gB,KAAM,CACJ43C,WAAY,2BACZ72B,aAAc,OAEhBjhD,MAAO,CACLykB,QAAS,OACTE,eAAgB,aAChBD,WAAY,SACZ,UAAW,CACT2kD,WAAY,SAVD/pD,CAady4D,KAEGC,EAAmB,SAAC,GAA2D,IAAzDlpD,EAAyD,EAAzDA,MAAOga,EAAkD,EAAlDA,eAAgBpB,EAAkC,EAAlCA,kBAAmBxnC,EAAe,EAAfA,SAC9D+3E,EAAgBnpD,EAAMriB,QAAO,SAAA+gB,GAAI,OAAIA,EAAKhuB,YAsB5C04E,EAAc,MACdC,EAAa,kBAAC,IAAD,MAMjB,OALIF,EAAc14E,SAChB24E,EAAc,OACdC,EAAa,kBAAC,IAAD,OAIb,yBAAKh0E,UAAU,6BACb,6BA7BG8zE,EAAc14E,OAGZ04E,EAAclzE,KAAI,SAAAyoB,GACvB,OACE,kBAACqqD,EAAD,CACEt5B,QAAS,CAAEre,KAAM,0BACjBlgC,MACE,oCACE,8BAAOwtB,EAAKrnB,KAAKzH,MAChBoqC,GAGLtpB,MAAM,UACNsJ,KAAM,kBAAC,IAAD,CAAYjH,KAAK,eAbpB,kBAAC,IAAD,kCA6BP,yBAAK1d,UAAU,kCACb,kBAAC,IAAD,CACEwhB,QAAQ,YACRnG,MAAM,UACNqC,KAAK,QACL+C,QAAS8iB,EACT+gC,UAAW0P,EACXC,QAAS,kBAAC,IAAD,MACT75B,QAAS,CAAEre,KAAM,0BACjBhgC,SAAUA,GAETg4E,M,EAOIF,EAAA,O,6FAlETH,E,qGAeAG,E,wxBCrBAK,EAAS,SAAC,GAAmD,IAAjDvhE,EAAiD,EAAjDA,OAAQD,EAAyC,EAAzCA,aAAcshB,EAA2B,EAA3BA,QAASuuC,EAAkB,EAAlBA,YACzC1gB,EAAM5hD,IAAW,SAAU,CAC/B,eAAgB0S,EAAOohB,WACvB,iBAAoC,YAAlBphB,EAAOA,SAErB0W,EAAO1W,EAAOwhE,WACdC,EAAWzhE,EAAO4f,MAExB,OACE,yBACE+W,KAAK,SACL7jB,SAAS,IACTzlB,UAAW6hD,EACXphC,QAAS,SAAA8E,GACP7S,EAAaC,EAAQqhB,EAAQE,OAE7B,IAAMjX,EAASsI,EAAMoL,cACfkjB,EAAM52B,EAAOo3D,wBACbC,EAASr3D,EAAOs3D,WAAWA,WAEjCnwE,YAAW,WACTkwE,EAAOE,SAAS,CAAErjD,KAAM0iB,EAAIoa,MAAOwmB,SAAU,aAC5C,OAGL,kBAAC,IAAD,CAAc1uD,UAAU,SAAS5E,MAAOxO,EAAOA,QAAU,IACvD,yBAAK3S,UAAU,oBAAoBuiE,EAAY5vD,EAAOA,UAExD,yBAAK3S,UAAU,kBACb,yBAAKA,UAAU,iBACVo0E,GACD,yBAAKjzD,MAAK,mBAAcizD,IACtB,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CAAcruD,UAAU,SAAS5E,MAAOxO,EAAOpY,MAC7C,8BAAOoY,EAAOpY,QAGlB,yBAAKyF,UAAU,eACb,kBAAC,IAAD,MACA,8BAAOqpB,O,EASF6qD,EAAA,O,6FAlDTA,E,wlBCKAQ,EAAiB,SAAC,GAAoC,IAAlClgD,EAAkC,EAAlCA,eAAgB+tC,EAAkB,EAAlBA,YACxC,OAAK/tC,EAKH,yBAAKx0B,UAAU,mBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,8BAA8BuiE,EAAY/tC,EAAe7hB,SACxE,yBAAK3S,UAAU,iCACZw0B,EAAej6B,KAChB,yBAAKyF,UAAU,8BACb,kBAAC,IAAD,MACA,8BAAOw0B,EAAe2/C,eAI5B,yBAAKn0E,UAAU,sBACb,yBAAKA,UAAU,2BAA2Bw0B,EAAeh5B,aAEzD,kBAAC,IAAD,CAAQ7B,MAAO66B,EAAe7hB,QAC5B,kBAAC,IAAOouB,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,OAGF,kBAAC,IAAOonC,KAAR,CAAapnC,MAAM,aACjB,kBAAC,IAAD,CAAkBgZ,OAAQ6hB,KAG5B,kBAAC,IAAOuM,KAAR,CAAapnC,MAAM,YACjB,kBAAC,IAAD,CAAiBgZ,OAAQ6hB,KAG3B,kBAAC,IAAOuM,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAagZ,OAAQ6hB,KAGvB,kBAAC,IAAOuM,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAgBgZ,OAAQ6hB,KAG1B,kBAAC,IAAOuM,KAAR,CAAapnC,MAAM,aACjB,kBAAC,IAAD,CAAkBgZ,OAAQ6hB,KAG5B,kBAAC,IAAOuM,KAAR,CAAapnC,MAAM,YACjB,kBAAC,IAAD,CAAiBgZ,OAAQ6hB,MAG7B,kBAAC,IAAD,CAAe7hB,OAAQ6hB,MA/CpB,M,EAqDIkgD,EAAA,O,6FAvDTA,E,6hBCNAC,EAAmB,SAAC,GAAe,MAAbhiE,EAAa,EAAbA,OACpBiiE,EAA8C,YAA7BjiE,SAAA,UAAAA,EAAQlY,YAAR,eAAcgkB,YAC/Bo2D,EAAW1xD,YAAmBxQ,GAEpC,OACE,oCACE,kBAAC,IAAD,CAAuBsJ,UAAWtJ,IACjCkiE,GAAY,kBAAC,IAAD,CAAwB54D,UAAWtJ,IAC/CmiE,EAAaniE,EAAQkiE,IACpB,kBAAC,IAAD,CAA0BliE,OAAQA,EAAQ5W,SAAU64E,MAM5D,SAASE,EAAaniE,EAAQkiE,GAC5B,OAAOA,GAA6B,aAAjBliE,EAAOiG,M,UAGb+7D,EAAA,O,6FAnBTA,E,uFAeGG,E,k8DCDT,SAASC,EAAU94D,GACjB,IAAMhb,EAAQgb,EAAU1hB,KAAK0G,MAAM,KAC7B+zE,EAAO/zE,EAAM7F,OAAS,EACtB65E,EAAS,CACb16E,KAAM0G,EAAM+zE,GACZE,GAAIj5D,EAAU1hB,MAShB,OANI0G,EAAM7F,OAAS,EACjB65E,EAAOX,OAASrzE,EAAMiH,MAAM,EAAG8sE,GAAM54D,KAAK,KAE1C64D,EAAOX,OAAS,GAGXW,EAGF,I,IAAME,EAAyBhmD,aACpC,SAAArb,GAAK,MAAK,CACRshE,YAAa7gD,YAA8BzgB,MAE7C,CACEub,QAASjd,KALyB+c,CAOpCkmD,GAEF,SAASA,EAAT,GAA4D,MAiBlD1kE,EAjBesL,EAAmC,EAAnCA,UAAWoT,EAAwB,EAAxBA,QAC5BimD,EAAuC,IADa,EAAfF,YACTh6E,OAClC,IAAwBrB,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAGZ,IAA4BjnB,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAAsCjuC,mBAAS,IAA/C,GAAOyB,EAAP,KAAoB+5E,EAApB,KACM3uC,EAAUC,mBACVwH,EAAa0mC,EAAU94D,GA6BvBk+B,EAA6C,YAAhCl+B,SAAA,UAAAA,EAAWxhB,YAAX,eAAiBgkB,YAEpC,OACE,oCACE,kBAAC,IAAD,CACE1iB,SAAUo+C,EACVC,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,WAxBa,IAAAlmB,IAyBA0hB,EAAU1hB,KAxBpC+yC,YAAa/yC,GACV66B,MAAK,SAAApzB,GAEFA,EAAKA,KAAKA,MACVA,EAAKA,KAAKA,KAAK4c,YACf5c,EAAKA,KAAKA,KAAK4c,WAAW,IAC1B5c,EAAKA,KAAKA,KAAK4c,WAAW,GAAGpjB,cAE7B+5E,EAAevzE,EAAKA,KAAKA,KAAK4c,WAAW,GAAGpjB,aAC5CwlB,GAAQ,OAGXwnB,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,oDAAqDnoB,QAOnE,QASA,kBAAC,IAAD,CAAO0kB,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVgX,UAAW,UAGb,kBAAC,IAAD,CACEta,MAAM,iBACNwD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGJqiB,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,4CAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,WAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,kEAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,YAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,IACjB,kBAAC,IAAD,CACEqxB,eA5FNra,EAAS,GAEfA,EAAOpW,KAAO8zC,EAAW9zC,MAAQ,GACjCoW,EAAOsL,UAAYoyB,EAAWimC,OAC9B3jE,EAAOnV,YAAcA,EAEdmV,GAuFK05B,SAAU,SAAA15B,GACR65B,EAAaxC,EAAW3Y,EAAS1e,EAAQ09B,IAE3C9D,SAAU3D,IAET,YAAgB,IAAbj2B,EAAa,EAAbA,OACF,OACE,oCACE,kBAAC,IAAMqP,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,MACA,kBAAC,IAAD,KACGw1D,GACC,kBAAC,IAAD,CAAM/6E,KAAK,OAAOsB,MAAM,OAAOlC,MAAOgX,EAAOpW,KAAMX,UAAQ,KAE3D07E,GACA,kBAAC,IAAD,CACE/6E,KAAK,OACLsB,MAAM,OACNlC,MAAOgX,EAAOpW,KACdX,UAAQ,EACRmC,UAAQ,EACRP,YAAY,0DAIlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQymC,GAAI,IACTqzC,GACC,kBAAC,IAAD,CACE/6E,KAAK,YACLsB,MAAM,mBACNlC,MAAOgX,EAAOsL,aAGhBq5D,GACA,kBAAC,IAAD,CACE/6E,KAAK,YACLsB,MAAM,mBACNlC,MAAOgX,EAAOsL,UACdlgB,UAAQ,EACRP,YAAY,kEAKpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjB,KAAK,cACLsB,MAAM,cACNlC,MAAOgX,EAAOnV,YACdR,WAAS,EACTpB,UAAQ,QAMlB,kBAAC,IAAM6nB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcF,QAAQ,aAAtB,mB,SAeXgpB,E,yFAAf,WAA4BxC,EAAW3Y,EAAS1e,EAAQ09B,GAAxD,wFACQ9zC,EAAOoW,EAAOsL,UAAP,UAAsBtL,EAAOsL,UAA7B,YAA0CtL,EAAOpW,MAASoW,EAAOpW,KACxEytB,EAAO,CACXxsB,YAAamV,EAAOnV,aAOlBjB,IAAS8zC,EAAW6mC,KACtBltD,EAAKqnB,OAAS90C,GAGhBgzC,YAAec,EAAW6mC,GAAIltD,GAC3BoN,MAAK,WACJ4S,EAAU,WACV3Y,EAAQ,gBAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,2CAA4CnoB,GACxD2rC,EAAU,WArBhB,iD,wBA1LSqtC,E,mOA1BAN,E,+FAiBII,E,4GASJE,E,mGA0LM7qC,E,8hDCtNFgrC,EAA2BrmD,aACtC,SAAArb,GAAK,MAAK,CACRshE,YAAa7gD,YAA8BzgB,MAE7C,CACE0mC,QAASpoC,KAL2B+c,CAOtCsmD,GAEF,SAASA,EAAT,GAAqE,IAA1C15E,EAA0C,EAA1CA,SAAU4W,EAAgC,EAAhCA,OAAQ6nC,EAAwB,EAAxBA,QACrCkmB,EAAmC,IAD0B,EAAf0U,YACtBh6E,OAC9B,IAA4BrB,mBAAS,WAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAAwBjuC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgrB,EAAU,WACVhnB,GAAQ,KACP,KAGC5kB,EAAOuW,EAAOA,OACZpY,EAASoY,EAATpY,KAEFq+C,EAAa57B,uBAAY,WAC7ByrB,YAAaluC,EAAM6B,GAAMg5B,MAAK,SAAArzB,GAC5BimC,EAAUjmC,EAAS+B,aAEpB,CAAC1H,EAAM7B,IAEV,OACE,oCACE,kBAAC,IAAD,CAAQwB,SAAUA,EAAUq+C,QAAS,CAAEre,KAAM,iBAAmBtb,QAAS6D,EAAavD,MAAtF,UAGA,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVC,UAAW,QACX9I,SAAU,SAGZ,kBAAC,IAAD,CACEuF,MAAK,iBAAY/kB,GACjBuoB,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAGk5C,UAIf,kBAAC,IAAD,CAAQ1/C,MAAO+mE,GACb,kBAAC,IAAO3/B,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,CAAQA,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,QACX,kBAACyoB,EAAD,6CACwCzoB,EADxC,kFAMJ,kBAAC,IAAMqlB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPm4B,MAJJ,aAYN,kBAAC,IAAO7X,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAACyoB,EAAD,KAAWtqB,EAAX,2BAEF,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbi2B,EAAQp+C,KAHZ,WAWN,kBAAC,IAAO2kC,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAACyoB,EAAD,4DAEF,kBAAC,IAAMpD,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,UAFjB,cAYV,kBAAC,IAAOwc,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAACyoB,EAAD,iDAEF,kBAAC,IAAMpD,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,UAFjB,gBAiBlB,SAASM,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,SAGZllB,G,EA7IE01E,E,mOATID,E,gHASJC,E,uGAgIA5wD,E,20DCvIH6wD,EAAkB,SAAC,GAAe,IAAb/iE,EAAa,EAAbA,OAGzB,OAFiBwQ,YAAmBxQ,GAM7B,kBAACgjE,EAAD,CAAuB5T,SAAUpvD,IAH/B,M,EAMI+iE,EAAA,MAER,I,IAAMC,EAAwBxmD,YAAQ,KAAM,CACjDE,QAASjd,KAD0B+c,CAElCymD,GAEH,SAASA,EAAT,GAA6C,MAArB7T,EAAqB,EAArBA,SAAU1yC,EAAW,EAAXA,QAChC,IAAwBt1B,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAGN4lB,EAAUC,mBAChB,IAA4B9sC,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACM4sC,EAAgD,YAA/B7S,SAAA,UAAAA,EAAUtnE,YAAV,eAAgBgkB,YAEvC,OACE,oCACE,kBAAC,IAAD,CACE1iB,SAAU64E,EACVx6B,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,WACPO,GAAQ,KAJZ,QASA,kBAAC,IAAD,CAAOD,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVgX,UAAW,UAGb,kBAAC,IAAD,CACEta,MAAM,gBACNwD,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAG01E,OAGb7uC,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,2CAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,WAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,gEAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,YAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,IACjB,kBAAC,IAAD,CACEqxB,cAAe,CAAEzwB,KAAMwnE,EAASxnE,KAAMZ,MAAOooE,EAASpoE,OACtD0wC,SAAU,SAAA15B,GACR65B,EAAaxC,EAAW3Y,EAAS1e,IAEnC45B,SAAU3D,IAET,WACC,OACE,oCACE,kBAAC,IAAM5mB,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMvlB,KAAK,OAAOsB,MAAM,OAAOE,UAAQ,EAACpC,MAAOooE,EAASxnE,QAE1D,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,KAAK,QACLsB,MAAM,QACNlC,MAAOooE,EAASpoE,MAChB6B,YAAaumE,EAASvmE,kBAOhC,kBAAC,IAAMimB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcF,QAAQ,aAAtB,mB,SAeXgpB,E,uFAAf,WAA4BxC,EAAW3Y,EAAS1e,GAAhD,sFACQqX,EAAO,CACXruB,MAAOgX,EAAOhX,OAGhBm8E,YAAcnlE,EAAOpW,KAAMytB,GACxBoN,MAAK,WACJ4S,EAAU,WACV3Y,EAAQ,eAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,yCAA0CnoB,GACtD2rC,EAAU,WAZhB,iD,wBA5HS4tC,E,sLAhBHF,E,qFAYOC,E,2FAIJC,E,kFA4HMprC,E,shBC/JR,SAASsrC,EAAcv7E,EAAMytB,GAClC,OAAOvmB,IAAW6nB,MAAX,oBAA8B/uB,GAAQytB,EAAM,CACjDlmB,UAAW,c,4FAFCg0E,E,ipPC4BVpZ,aAAelmC,6CAAMl9B,YAAW,SAACQ,EAAOP,GAAR,OAAgB,2DAAC,gDAAD,UAAMA,IAAKA,GAASO,OAEpEi8E,eAAiB,SAAC,GAAe,MAAbpjE,EAAa,EAAbA,OAClBwnC,EAA0C,YAA7BxnC,SAAA,UAAAA,EAAQlY,YAAR,eAAcgkB,YACjC,iBAAwB1kB,qDAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAKZ,OACE,uHAC6B,KAA1BrO,aAAA,EAAAA,EAAQ+L,gBACP,2DAAC,0DAAD,CACE07B,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,kBAAMO,GAAQ,IACvBjlB,SAAUo+C,GAHZ,YAQDxnC,aAAA,EAAAA,EAAQ+L,gBACP,2DAAC,0DAAD,CACEq0B,UAAW2pB,aACXtiB,QAAS,CAAEre,KAAM,iBACjBsqB,GAAE,4BAAuB1zC,EAAOpY,KAA9B,oBACFwB,SAAUo+C,GAJZ,WASF,2DAAC67B,qBAAD,CAAsBxwE,QAASmN,EAAQwnC,WAAYA,IAClDh3B,0DAAmBxQ,IAAW,2DAAC,kEAAD,CAAkBnN,QAASmN,IAC1D,2DAAC,0DAAD,CAAYoO,KAAMA,EAAM/N,QAASsR,EAAc1a,QAzBnC,qE,cAXZmsE,e,iDAyCSA,eAAA,+BAER,IAAMC,qBAAuB7mD,oDAClC,SAAArb,GAAS,cACP,MAAO,CACL88D,kBAAmBjoC,iDAAiB,UAAC70B,EAAMme,gBAAP,iBAAC,EAAgBjwB,YAAjB,iBAAC,EAAsBg4C,gBAAvB,iBAAC,EAAgCh4C,YAAjC,iBAAC,EAAsCA,YAAvC,aAAC,EAA4CguE,cAGrF,CACE3gD,QAASjd,yCAPuB+c,CASlC8mD,aAEF,SAASA,YAAT,GAA0E,IAAnDzwE,EAAmD,EAAnDA,QAAS20C,EAA0C,EAA1CA,WAAY9qB,EAA8B,EAA9BA,QAASuhD,EAAqB,EAArBA,kBACnD,iBAAwB72E,qDAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,GACRgnB,EAAU,IACVuR,EAAgB,MAGpB,iBAA4Cx/C,qDAAS,GAArD,GAAOm8E,EAAP,KAAuBC,EAAvB,KACMC,EAAoB,CACxBr1D,KAAM,WACJo1D,GAAkB,IAEpB5xD,MAAO,WACL4xD,GAAkB,KAKhBvvC,EAAUC,oDAChB,iBAA4B9sC,oDAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KAEA,iBAA4CjuC,oDAAS,IAArD,GAAuB61E,GAAvB,WACA,iBAAsB71E,oDAAS,YAA/B,GAAOw8B,EAAP,KAAYm5C,EAAZ,KACA,iBAAwC31E,oDAAS,IAAjD,GAAOy/C,EAAP,KAAqBD,EAArB,KAoBA,OACE,sHACE,2DAAC,0DAAD,CACEa,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,WArBTjb,EAAQkZ,cACVsC,GAAQ,GAERm1D,GAAkB,GAGpBrxC,2DAAWt/B,EAAQjL,MAChB66B,MAAK,SAAApzB,GACAA,EAAKA,KAAKA,MAAQA,EAAKA,KAAKA,KAAK2I,WAAa3I,EAAKA,KAAKA,KAAK2I,UAAU,IACzEilE,EAAkB5tE,EAAKA,KAAKA,KAAK2I,UAAU,OAG9C69B,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,gDAAiDnoB,OAW7DN,SAAUo+C,GALZ,gBASA,2DAAC,0DAAD,CAAOp5B,KAAMA,EAAM/N,QAASsR,GAC1B,2DAAC,yDAAD,CACEhI,MAAO,CACLgF,MAAO,OACPC,OAAQ,SAGV,2DAAC,0DAAD,CACEJ,MAAM,eACNwD,KACE,2DAAC,0DAAD,KACE,2DAAC,2EAAD,OAGJqiB,UAAWJ,IAEb,2DAAC,iDAAD,CAAQjtC,MAAOmK,GACb,2DAAC,iDAAOi9B,KAAR,CAAapnC,MAAM,WACjB,2DAAC,wEAAD,CAAQyC,KAAK,WACX,2DAAC,wEAAO/C,KAAR,0CAEF,2DAAC,yDAAMooB,OAAP,KACE,2DAAC,yDAAMA,OAAOC,MAAd,KACE,2DAAC,0DAAD,CACEjB,QAAS,WACP6D,EAAaC,UAFjB,WAUN,2DAAC,iDAAOwc,KAAR,CAAapnC,MAAM,QACjB,2DAAC,wEAAD,CAAQyC,KAAK,QACX,2DAAC,wEAAO/C,KAAR,KACE,kIACA,gEAAGijB,MAAO,CAAEjB,MAAO,UAAW40D,eAAgB,YAAa7uD,OAAQ,YACjE,gEACEkoB,KAAK,eACL7oB,QAAS,WACPunB,EAAU,MAHd,sBAWN,2DAAC,yDAAMvmB,OAAP,KACE,2DAAC,yDAAMA,OAAOC,MAAd,KACE,2DAAC,0DAAD,CACEjB,QAAS,WACP6D,EAAaC,UAFjB,YAUN,2DAAC,iDAAOwc,KAAR,CAAapnC,MAAM,IACjB,2DAAC,yDAAMmmB,OAAP,KACE,2DAACqwD,SAAD,CAAUh6C,OAAQI,EAAK25C,UAAWR,KAEpC,2DAAC,iDAAD,CAAQ/1E,MAAO48B,GACb,2DAAC,iDAAOwK,KAAR,CAAapnC,MAAM,YACjB,2DAAC08E,aAAD,CACE7wE,QAASA,EACTwiC,UAAWA,EACX4oC,kBAAmBA,EACnBvhD,QAASA,EACTmqB,aAAcA,EACdD,gBAAiBA,EACjB3S,QAASA,KAGb,2DAAC,iDAAO7F,KAAR,CAAapnC,MAAM,iBACjB,2DAAC,yDAAMqmB,QAAP,KACE,2DAACowD,cAAD,CAAe5qE,QAASA,WAQtC,2DAAC,0DAAD,CAAYub,KAAMm1D,EAAgBljE,QAASojE,EAAmBxsE,QA7HlD,yEAkIlB,SAASumE,SAAT,GAAyC,IAArBh6C,EAAqB,EAArBA,OAAQ+5C,EAAa,EAAbA,UAM1B,OAAO,2DAAC,qFAAD,CAAe/5C,OAAQA,EAAQ1V,QAASyvD,EAAW95C,KAL7C,CACX,CAAEv6B,MAAO,WAAYlC,MAAO,WAAYw8B,QAAQ,GAChD,CAAEt6B,MAAO,gBAAiBlC,MAAO,oB,cA1J5Bs8E,Y,yRAgKHI,a,kHAOJ,sBAAYv8E,GAAO,iDACjB,mBAAMA,IAPRw2E,eAAiB,CACfC,SAAS,EACThsC,OAAQ,EACR5Z,MAAO,IAMP,EAAK7W,MAAQ,CACX08D,QAAS,EAAKF,eACdG,WAAY,MALG,E,iEASnB,WAAoB,WAClBhvE,iDAAWC,IAAIvI,uCAAUwI,KAAKC,UAAUsnE,cAAc9zC,MAAK,SAACrzB,GAC1D,EAAKyhC,SAAS,CAAEitC,WAAY1uE,EAASC,KAAKA,Y,oBAI9C,WAAS,WACP,EAQIqmB,KAAKvuB,MAPP0L,EADF,EACEA,QACAwiC,EAFF,EAEEA,UACA4oC,EAHF,EAGEA,kBACAvhD,EAJF,EAIEA,QACAmqB,EALF,EAKEA,aACAD,EANF,EAMEA,gBACA3S,EAPF,EAOEA,QAGF,EAAuDve,KAAKvU,MAApD08D,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,sBACvBG,EAAmBJ,EAAatzE,+CAAOszE,EAAWK,aAAa1zE,OAAO,qBAAuB,KAyDnG,OACE,sHACE,2DAAC,sCAAD,CACE4tB,cAAe,CAAExlB,QAASA,EAAQjL,MAClCd,SA3DmB,SAAAkX,GACvB,IAAQ6gE,EAA+C7gE,EAA/C6gE,MAAOC,EAAwC9gE,EAAxC8gE,KAAMC,EAAkC/gE,EAAlC+gE,MAAOC,EAA2BhhE,EAA3BghE,MAAOC,EAAoBjhE,EAApBihE,MAAOC,EAAalhE,EAAbkhE,SACpCr2C,EAAS,GAsBf,OApBIq2C,IACEA,EAAStjE,SAAS,KACpBitB,EAAOq2C,SAAW,0BACTA,EAAStjE,SAAS,KAC3BitB,EAAOq2C,SAAW,6BACTjB,EAAkBriE,SAASsjE,KACpCr2C,EAAOq2C,SAAW,8CAKpBlhE,EAAO,iBACL,2BAA2BwN,KAAKxN,EAAO,kBACD,MAAtCA,EAAO,gBAAgB9B,QAAQ,KAEjC2sB,EAAO,gBAAkB,0CAG3B,EAAKgI,SAAS,CAAEktC,sBAAgC,MAATe,IAE1B,MAATA,GAA0B,MAAVC,GAA2B,MAAVC,GAA2B,MAAVC,GACpDp2C,EAAOi2C,KAAO,yCACdj2C,EAAOk2C,MAAQ,yCACfl2C,EAAOm2C,MAAQ,yCACfn2C,EAAOo2C,MAAQ,yCACRp2C,IAGJxsB,0EAAc8iE,eAAeN,KAChCh2C,EAAOg2C,MAAQxiE,0EAAc4B,WAAWC,SAGrC7B,0EAAc+iE,aAAaN,KAC9Bj2C,EAAOi2C,KAAOziE,0EAAc4B,WAAWE,OAGpC9B,0EAAcgjE,YAAYN,KAC7Bl2C,EAAOk2C,MAAQ1iE,0EAAc4B,WAAWG,MAGrC/B,0EAAcijE,aAAaN,KAC9Bn2C,EAAOm2C,MAAQ3iE,0EAAc4B,WAAWI,OAGrChC,0EAAckjE,eAAeN,KAChCp2C,EAAOo2C,MAAQ5iE,0EAAc4B,WAAWK,aAGnCuqB,IAQH6O,SAAU,SAAA15B,GACR65B,aAAagmC,EAASxoC,EAAW3Y,EAASkqB,EAAiB5oC,IAE7D45B,SAAU3D,IAET,WACC,OACE,sHACE,2DAAC,yDAAM5mB,QAAP,KACE,2DAAC,sCAAD,KACE,2DAAC,yDAAD,KACE,2DAAC,yDAAQF,OAAT,KACE,2DAAC,yDAAQC,MAAT,iBAEF,2DAAC,yDAAQC,QAAT,KACE,2DAAC,yDAAD,KACE,2DAAC,uEAAD,CACEzlB,KAAK,UACLsB,MAAM,UACNL,YAAagK,EAAQhK,YACrB7B,MAAO6L,EAAQjL,KACfwB,UAAQ,OAKhB,2DAAC,yDAAD,KACE,2DAAC,yDAAQ+jB,OAAT,KACE,2DAAC,yDAAQC,MAAT,kBAEF,2DAAC,yDAAQC,QAAT,KACE,2DAAC,yDAAD,KACE,2DAAC,uEAAD,CACEzlB,KAAK,WACLsB,MAAM,OACNlC,OAAO6/C,aAAA,EAAAA,EAAcj/C,YAAQW,EAC7BtB,UAAQ,KAGZ,2DAAC,yDAAD,KACE,2DAAC,uEAAD,CACEW,KAAK,kBACLsB,MAAM,cACNlC,OAAO6/C,aAAA,EAAAA,EAAch+C,mBAAeN,EACpCF,WAAS,EACTpB,UAAQ,KAIZ,2DAAC,yDAAQmmB,MAAT,qBAA6B8wD,GAE7B,2DAAC,yDAAD,KACE,2DAAC,yDAAD,CAAQv0D,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,uEAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAcg4B,QAASxiE,0EAAcmC,wBAAwB,GACpE3V,YAAawT,0EAAc4B,WAAWC,QACtCrX,QAASwV,0EAAcmC,wBAAwBvQ,KAAI,SAAAhF,GAAM,MAAK,CAC5DjC,MAAOiC,EACPC,MAAOD,SAIb,2DAAC,yDAAD,CAAQ0gB,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,uEAAD,CAAM/mB,KAAK,OAAOsB,MAAM,OAAOlC,OAAO6/C,aAAA,EAAAA,EAAci4B,OAAQ,IAAKj2E,YAAawT,0EAAc4B,WAAWE,QACtG4/D,GACC,kEAAK1wE,UAAU,sBAAsBgP,0EAAc4B,WAAWM,qBAGlE,2DAAC,yDAAD,CAAQoL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,uEAAD,CAAM/mB,KAAK,QAAQsB,MAAM,QAAQlC,OAAO6/C,aAAA,EAAAA,EAAck4B,QAAS,IAAKl2E,YAAawT,0EAAc4B,WAAWG,QAE5G,2DAAC,yDAAD,CAAQuL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,uEAAD,CAAM/mB,KAAK,QAAQsB,MAAM,QAAQlC,OAAO6/C,aAAA,EAAAA,EAAcm4B,QAAS,IAAKn2E,YAAawT,0EAAc4B,WAAWI,SAE5G,2DAAC,yDAAD,CAAQsL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,2DAAC,uEAAD,CAAM/mB,KAAK,QAAQsB,MAAM,QAAQlC,OAAO6/C,aAAA,EAAAA,EAAco4B,QAAS,IAAKp2E,YAAawT,0EAAc4B,WAAWK,kBAKlH,2DAAC,2DAAD,CACE8K,UAAUy9B,aAAA,EAAAA,EAAcl0C,aAAcE,EAAQF,WAC9Cy8B,UAAQ,IAEV,2DAAC,yDAAD,KACE,2DAAC,yDAAQjiB,OAAT,KACE,2DAAC,yDAAQC,MAAT,uBAEF,2DAAC,yDAAQC,QAAT,KACE,2DAAC,mFAAD,CACEzlB,KAAK,gBACL+pC,aAAc,EAAKgsC,eACnB1rC,QAAS,SAAAutC,IACgB,IAAnBA,EAAQ5tC,QAAgB6tC,qDAAQD,EAAQxnD,SAC1C,EAAK6Y,SAAS,CAAEgtC,QAAS,CAAED,SAAS,KAEtC,EAAK/sC,SAAS,CAAEgtC,QAAS,SAAF,CAAID,SAAS,GAAS4B,YAOzD,2DAAC,yDAAM1wD,OAAP,KACE,2DAAC,yDAAMA,OAAOC,MAAd,KACE,2DAAC,mEAAD,CAAcF,QAAQ,aAAtB,iB,yIA3MOgV,6CAAMC,e,SAuNlB+T,a,+IAAf,WAA4BgmC,EAASxoC,EAAW3Y,EAASkqB,EAAiB5oC,GAA1E,4BAyBW2hE,EAzBX,gFAyBWA,EAzBX,SAyBoB34E,EAAOoH,GACvB,MAAY,eAARA,OAICpH,GAA0B,kBAAVA,KAIP,SAAVA,IAIiB,WAAjB,QAAOA,KAAsBy4E,qDAAQz4E,OApCzCk4E,EASElhE,EATFkhE,SACAU,EAQE5hE,EARF4hE,gBACA/sE,EAOEmL,EAPFnL,QACAgsE,EAME7gE,EANF6gE,MACAC,EAKE9gE,EALF8gE,KACAC,EAIE/gE,EAJF+gE,MACAC,EAGEhhE,EAHFghE,MACAC,EAEEjhE,EAFFihE,MACGY,EAVP,yBAWM7hE,EAXN,WAYQqX,EAAO,CACXztB,KAAMs3E,EACNr2E,YAAa+2E,EACb/sE,UACAgsE,MAAOA,GAAS,KAChBC,KAAMA,GAAQ,KACdC,MAAOA,GAAS,KAChBC,MAAOA,GAAS,KAChBC,MAAOA,GAAS,MApBpB,EAuByBa,gBAAgBD,GAA/BltE,EAvBV,EAuBUA,WAsBJkrE,EAAQD,SAIVvoD,EAAKxiB,QAAU,mCACfwiB,EAAK1iB,WAAa,CAChB/K,KAAMiL,EACNF,WAAYotE,oDAAOptE,EAAYgtE,GAC/B/tC,OAAQisC,EAAQjsC,OAChB5Z,MAAO6lD,EAAQ7lD,QAGjB3C,EAAK1iB,WAAaotE,oDAAOptE,EAAYgtE,GAGvC52C,4DAAa1T,GACVoN,MAAK,WACJ4S,EAAU,WACVuR,EAAgB,IAChBlqB,EAAQ,eAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,sCAAuCnoB,GACnDk9C,EAAgBvxB,GAChBggB,EAAU,WArEhB,iD,sBAyEA,SAASyqC,gBAAgBE,GAEvB,IAAMhiE,EAASiiE,cAAcD,GAGvB7uE,EAFOqQ,OAAOC,KAAKzD,GAEL6C,QAClB,SAACm7B,EAAW5tC,GACV,GAAIA,EAAI2N,WAAW,aAAc,CAC/B,qBAA4B3N,EAAI6f,QAAQ,YAAa,IAAI3f,MAAM,MAA/D,GAAOH,EAAP,KAAcgtB,EAAd,KAEMtZ,EAAQm6B,EAAUjvB,SAAS5e,GAGjC,MAAmB,UAAfgtB,GAA0C,KAAhBnd,EAAO5P,KAIjCyT,EAEAA,EAAMsZ,GADW,UAAfA,EACF,kBAA8Bnd,EAAO5P,GAArC,SAEoB4P,EAAO5P,GAEL,UAAf+sB,EACT6gB,EAAUjvB,SAASnX,KAAnB,mBAA2BulB,EAA3B,kBAAkDnd,EAAO5P,GAAzD,WAEA4tC,EAAUjvB,SAASnX,KAAnB,mBAA2BulB,EAAand,EAAO5P,MAZxC4tC,EAkBX,GAAI5tC,EAAI2N,WAAW,aAAc,CAC/B,IAAO5N,EAAP,eAAgBC,EAAI6f,QAAQ,cAAe,IAAI3f,MAAM,MAArD,MAIA,OAFA0tC,EAAU5sB,WAAWpR,EAAO,YAAD,OAAa7P,EAAb,YAA+B6P,EAAO5P,GAE1D4tC,EAKT,OAFAA,EAAUrpC,WAAWvE,GAAO4P,EAAO5P,GAE5B4tC,IAET,CAAEjvB,SAAU,GAAIqC,WAAY,GAAIzc,WAAY,KAG9C,MAAO,CACLA,WAAY,SAAF,GACLxB,EAAOwB,WADF,CAERoa,SAAUmzD,gBAAgB/uE,EAAO4b,UACjCqC,WAAYje,EAAOie,cAKzB,SAAS8wD,gBAAgBnzD,GACvB,OAAOA,EAASpX,QAAO,SAAAiW,GAAC,OAAIA,KAAG3d,KAAI,SAAC2d,EAAGzd,GAAJ,mBAAoByd,EAApB,CAAuB9jB,KAAM,CAAEu9B,SAAUl3B,EAAQ,QAGtF,SAAS8xE,cAAcjiE,GAUrB,OATIA,EAAO,kBACLA,EAAO,qBACTA,EAAOpW,KAAP,UAAiBoW,EAAO,qBAAxB,YAAgDA,EAAO,iBAEvDA,EAAOpW,KAAOoW,EAAO,uBAEhBA,EAAO,4BACPA,EAAO,iBAETA,EAGT,IAAMy/D,cAAgB,SAAC,GAAgB,IAAd5qE,EAAc,EAAdA,QACvB,OACE,2DAAC,yDAAD,KACE,2DAAC,yDAAQsa,OAAT,KACE,2DAAC,yDAAQC,MAAT,KAAgBva,EAAQjL,MACxB,2DAAC,yDAAQm/D,KAAT,KAAel0D,EAAQhK,cAExBgK,EAAQF,YAAcE,EAAQF,WAAWlK,OAAS,GACjD,2DAAC,yDAAQ4kB,QAAT,KACE,qEACE,oFAEF,sEACGxa,EAAQF,WAAW1E,KAAI,SAAAqqB,GACtB,OACE,2DAAC,6CAAM/K,SAAP,CAAgBnf,IAAKkqB,EAAU1wB,MAC7B,qEACG0wB,EAAU1wB,KADb,KACqB0wB,EAAUkN,UAD/B,KAGA,2DAAC,yDAAQuhC,KAAT,KAAezuC,EAAUzvB,qB,gKAplBrCkhE,a,8FAEAqZ,e,gGA2COC,qB,sGAWJC,Y,6FAuJA9F,S,0FASHkG,a,8FAuNS7rC,a,8FAyENioC,gB,iGAwDAI,gB,iGAIAD,c,+FAaHxC,c,0pDC/kBOkG,EAAmB,SAAC,GAAgB,IAAd9wE,EAAc,EAAdA,QAC3BnE,EAAWwgE,cACjB,IAAwB9nE,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACA,IAA4BjnB,mBAAS,WAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACMpB,EAAUC,mBACVviB,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgrB,EAAU,WACVhnB,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgE,GAAQ,GAEO,YAAXld,GACFzC,EAAS+Q,YAAY,cAEtB,CAACtO,KAGN,OACE,oCACE,kBAAC,IAAD,CAAQs2C,QAAS,CAAEre,KAAM,iBAAmBtb,QAAS6D,EAAavD,MAAlE,gBAGA,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLgF,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CACEJ,MAAM,eACNwD,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAG01E,OAGbtjE,KAAM/M,EAAQjL,KACdysC,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAe6L,QAASA,EAASwiC,UAAWA,EAAWpB,QAASA,KAElE,kBAAC,IAAO7F,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,0CAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAAS6D,EAAaC,OAA9B,WAIN,kBAAC,IAAOwc,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,gEAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQjB,QAAS6D,EAAaC,OAA9B,iB,EA7DL+xD,E,sKACMzU,S,4FADNyU,E,qlECHN,SAASC,EAAT,GAAwD,IAA/B/wE,EAA+B,EAA/BA,QAASwiC,EAAsB,EAAtBA,UAAWpB,EAAW,EAAXA,QAClD,OACE,kBAAC,IAAD,CACE5b,cAAe,GACfqf,SAAU,SAAA15B,GACR6lE,EAAiB7lE,EAAQnL,EAASwiC,IAEpCuC,SAAU3D,EALZ,uBAOG,WACC,OACE,oCACE,kBAAC,IAAM5mB,QAAP,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,uBACE,kBAAC,IAAQF,OAAT,KACE,kBAAC,IAAQC,MAAT,iBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CACEzlB,KAAK,eACLsB,MAAM,OACNlC,MAAO6L,EAAQjL,KACfX,UAAQ,EAJV,2BAUR,kBAAC,IAAD,uBACE,kBAAC,IAAQomB,QAAT,KACGxa,EAAQixE,MAAM71E,KAAI,SAAC+mE,EAAM7mE,GACxB,OAAO,kBAAC41E,EAAD,CAAM/O,KAAMA,EAAMgP,WAAY71E,EAA9B,8BAOjB,kBAAC,IAAM2gB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcF,QAAQ,YAAtB,oCAUhB,SAASk1D,EAAT,GAAoC,IAApB/O,EAAoB,EAApBA,KACRiP,EAAcC,EAA4BlP,EADd,EAAdgP,YAIpB,OAFkCC,EAAYx7E,OAGrC,KAIP,yBAAK4E,UAAU,OAAf,sBACE,yBAAKA,UAAU,QAAf,+BAA8B2nE,EAAK9rE,OACnC,yBAAKmE,UAAU,cAAf,sBAA8B2nE,EAAKnsE,aACnC,yBAAKwE,UAAU,cAAf,sBACE,yBAAKA,UAAU,OAAf,sBACG42E,EAAYh2E,KAAI,SAACk2E,EAAKh2E,GAAN,OACf,kBAACi2E,EAAD,GAAgBh2E,IAAKD,GAAWg2E,EAAhC,+BAQZ,SAASC,EAAT,GAAqE,IAA3CC,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,UAAWtP,EAAoB,EAApBA,KAAMgP,EAAc,EAAdA,WAC/Cp8E,EAAO,QAAH,OAAWo8E,EAAX,uBAAoCM,GAC9C,OACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CACEj8E,WAAS,EACTrB,MAAOq9E,EAAWE,SAClBr7E,MAAK,qBAAgBm7E,EAAWhqD,QAAUiqD,EAArC,eAAqDtP,EAAK9rE,OAC/DtB,KAAMA,EACNX,UAAQ,EALV,wBAWN,SAASi9E,EAA4BlP,EAAMgP,GACzC,IAAQC,EAAgBjP,EAAhBiP,YAER,OAAKlyE,MAAMC,QAAQiyE,IAAuC,IAAvBA,EAAYx7E,OAIxCw7E,EAAYpjE,QAAO,SAACgF,EAAKs+D,EAAKh2E,GAUnC,OATIg2E,EAAII,UACN1+D,EAAIjQ,KAAK,CACPyuE,WAAYF,EACZG,UAAWn2E,EACX6mE,OACAgP,eAIGn+D,IACN,IAdM,GAiBX,SAASg+D,EAAiB7lE,EAAQnL,EAASwiC,GACzC,IAAQmvC,EAAiCxmE,EAAjCwmE,aAAiBC,EAAzB,EAAyCzmE,EAAzC,GACM0mE,EAAS,GAETZ,EAAQz/D,IAAEo3B,UAAU5oC,EAAQixE,OAKhB7nC,EAAiBwoC,GAEzB3+D,SAAQ,YAAiC,IAA9BkvD,EAA8B,EAA9BA,KAAMqP,EAAwB,EAAxBA,WAAYr9E,EAAY,EAAZA,MAC/BwN,EAAO,IAAH,OAAOwgE,EAAP,yBAA4BqP,EAA5B,cAEVhgE,IAAEi4B,IAAIwnC,EAAOtvE,EAAMxN,MAIrB09E,EAAOZ,MAAQA,EAEXjxE,EAAQjL,OAAS48E,IACnBE,EAAOhoC,OAAS1+B,EAAOwmE,cAGzBpyC,YAAav/B,EAAQjL,KAAM88E,GACxBjiD,MAAK,WACJ4S,EAAU,cAEXQ,OAAM,WACLR,EAAU,WAIhB,SAAS4G,EAAiBhkB,GACxB,IAAM6kB,EAAa,gCAEnB,OAAOt7B,OAAOu7B,QAAQ9kB,GAAKhqB,KAAI,YAAkB,aAAhBG,EAAgB,KAAXpH,EAAW,KACzCg2C,EAAUF,EAAWG,KAAK7uC,GAEhC,MAAO,CACL4mE,KAAMh4B,EAAQ,GACdqnC,WAAYrnC,EAAQ,GACpBh2C,a,6FA1JU48E,E,iGAqDPG,E,wFAuBAK,E,kGAeAF,E,+GAqBAL,E,oGAiCA5nC,E,g2DCrIT,SAAS0oC,EAAkBv+C,EAAMhB,GAC/B,IAAMx9B,EAAOw+B,EAAKja,UAGlB,OAFciZ,EAAWz8B,MAAK,SAAAsM,GAAI,OAAIA,EAAKrN,OAASA,KAKtD,SAASg9E,EAAc5kE,EAAQynB,GAC7B,OAAIznB,EAAO4f,MACF6H,EAAM9+B,MAAK,SAAAkZ,GAAK,OAAIA,EAAMja,OAASoY,EAAO4f,SAG5C5f,EAGT,IAAM6kE,EAAc,SAAC,GAAe,MAAb7kE,EAAa,EAAbA,OACfiiE,EAA8C,YAA7BjiE,SAAA,UAAAA,EAAQlY,YAAR,eAAcgkB,YAC/Bg5D,EAAWt0D,YAAmBxQ,GACpC,OACE,oCACG8kE,GACC,kBAAC,IAAD,CAAQr7E,KAAK,YAAY+gB,cAAY,IAClC,gBAAS4a,EAAT,EAAG/1B,KAAH,OACC,kBAAC,IAAD,CAAQ5F,KAAK,OAAO+gB,cAAY,IAC7B,gBAASid,EAAT,EAAGp4B,KAAH,OACC,kBAAC,IAAD,CACEjG,SAAU64E,EACV77C,KAAMw+C,EAAc5kE,EAAQynB,GAC5Btb,UAAWw4D,EAAkB3kE,EAAQolB,WAOjD,kBAAC2/C,EAAD,CAAmB3+C,KAAMpmB,M,EAKhB6kE,EAAA,MAER,I,IAAME,EAAoBvoD,YAAQ,KAAM,CAC7CE,QAASjd,KADsB+c,CAE9BwoD,GAEH,SAASA,EAAT,GAAqC,MAAjB5+C,EAAiB,EAAjBA,KAAM1J,EAAW,EAAXA,QACxB,IAAwBt1B,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAGN4lB,EAAUC,mBAChB,IAA4B9sC,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACM4sC,EAA4C,YAA3B77C,SAAA,UAAAA,EAAMt+B,YAAN,eAAYgkB,YAEnC,OACE,oCACE,kBAAC,IAAD,CACE1iB,SAAU64E,EACVx6B,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,WACPO,GAAQ,KAJZ,QASA,kBAAC,IAAD,CAAOD,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVgX,UAAW,UAGb,kBAAC,IAAD,CACEta,MAAM,YACNwD,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAGu6C,OAGb1T,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,uCAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,WAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,6DAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,YAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,IACjB,kBAAC,IAAD,CACEqxB,cAAe,CAAEzwB,KAAM,GAAF,OAAKw+B,EAAKx+B,KAAV,UACrB8vC,SAAU,SAAA15B,GACR65B,EAAaxC,EAAW3Y,EAAS0J,EAAKx+B,KAAMoW,IAE9C45B,SAAU3D,IAET,WACC,OACE,oCACE,kBAAC,IAAM5mB,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,uDACuDiZ,EAAKx+B,KAD5D,MAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,KAAK,OACLsB,MAAM,OACNlC,MAAK,UAAKo/B,EAAKx+B,KAAV,SACLiB,YAAau9B,EAAKv9B,kBAM5B,kBAAC,IAAMimB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAqBF,QAAQ,aAA7B,mB,SAeXgpB,E,yFAAf,WAA4BxC,EAAW3Y,EAASuoD,EAAUjnE,GAA1D,sFACQqX,EAAO,CACXztB,KAAMoW,EAAOpW,MAGfkzC,YAASmqC,EAAU5vD,GAChBoN,MAAK,WACJ4S,EAAU,WACV3Y,EAAQ,WAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,+BAAgCnoB,GAC5C2rC,EAAU,WAZhB,iD,wBAzHS2vC,E,sLA9CAL,E,mFAOAC,E,+EAQHC,E,6EA2BOE,E,mFAIJC,E,0EAyHMntC,E,+yBCpLFqtC,EAAiB,SAAC,GAA0B,IAAxBvpC,EAAwB,EAAxBA,OAAQxvB,EAAgB,EAAhBA,UACvC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAQgB,OAAT,MACA,kBAAC,IAAQE,QAAT,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,SACV,gBAASg+B,EAAT,EAAGp4B,KAAH,OACC,kBAAC,IAAD,CAAQ5F,KAAK,SACV,gBAAS89B,EAAT,EAAGl4B,KAAH,OACC,kBAAC,IAAD,CAAQ5F,KAAK,cACV,gBAAS27B,EAAT,EAAG/1B,KAAH,OACC,kBAAC,IAAD,CAAQ5F,KAAK,WACX,kBAAC07E,EAAD,CACEh5D,UAAWA,EACX2K,OAAQ6kB,EAAO7kB,OACfsO,WAAYA,EACZmC,UAAWA,EACXE,MAAOA,iBAczB29C,EAAcvhD,IAAMoK,cAAc,CAAE1G,UAAW,GAAIE,MAAO,GAAIrC,WAAY,KAEhF,SAAS+/C,EAAT,GAAyE,IAAxCruD,EAAwC,EAAxCA,OAAQyQ,EAAgC,EAAhCA,UAAWnC,EAAqB,EAArBA,WAAYqC,EAAS,EAATA,MACxDnI,EAAW93B,mBACf,iBAAO,CACL+/B,YACAnC,aACAqC,WAEF,CAACF,EAAWnC,EAAYqC,IAG1B,OACE,oCACE,kBAAC29C,EAAYj3C,SAAb,CAAsBnnC,MAAOs4B,GAC1BxI,EAAO7oB,KAAI,SAAC2pB,EAAOzpB,GAAR,OACV,kBAACk3E,EAAD,CAAYj3E,IAAKD,EAAOm3E,QAASn3E,EAAOypB,MAAOA,SAOzD,SAASytD,EAAT,GAAwC,IAAlBztD,EAAkB,EAAlBA,MAAO0tD,EAAW,EAAXA,QAC3B,OACE,oCACG1tD,EAAMsjB,UAAUjtC,KAAI,SAACktC,EAAUhtC,GAAX,OACnB,kBAACo3E,EAAD,CACEn3E,IAAG,UAAKk3E,EAAL,YAAgBn3E,GACnBypB,MAAOA,EACPujB,SAAUA,EACVF,SAAU,CAAErjB,MAAO0tD,EAASnqC,SAAUhtC,GACtCi5D,MAAOxvC,EAAMsjB,UAAUzyC,aAOjC,SAAS88E,EAAT,GAA6D,IAApC3tD,EAAoC,EAApCA,MAAOujB,EAA6B,EAA7BA,SAAUF,EAAmB,EAAnBA,SAAUmsB,EAAS,EAATA,MAC9C54C,EAAQoJ,EAAMhwB,KAAN,gBAAsBgwB,EAAMhwB,MAAS,KAC7CgwB,EAAM62B,gBAAkB,IAC1BjgC,EAAQoJ,EAAMhwB,KAAN,gBACKgwB,EAAMhwB,KADX,aACoBqzC,EAASE,SAAW,EADxC,eACgDisB,EADhD,gCAEgBnsB,EAASE,SAAW,EAFpC,eAE4CisB,EAF5C,MAKV,IAAMoe,EACJ5tD,EAAM62B,gBAAkB,GAAK2Y,EAAQ,IAAMnsB,EAASE,UAAYisB,EAAQxvC,EAAM62B,gBAExE//C,EAAa2/B,qBAAWgN,KAAxB3sC,SAER,OACE,6BACE,kBAAC,IAAQ0e,MAAT,KACE,yBACEzD,MAAO,CACLgE,QAAS,OACTC,WAAY,SACZC,eAAgB,kBAGjBW,EACU,IAAV44C,GACC,kBAAC,IAAD,CACE1+C,MAAM,YACNoF,QAAS,WACPpf,EAAS,CACPjF,KAAM,wBACNwxC,eALN,kBAcN,6BACGE,EAASC,OAAOntC,KAAI,SAACpG,EAAOsG,GAAR,OACnB,kBAACs3E,EAAD,CACEr3E,IAAG,UAAK6sC,EAASrjB,MAAd,YAAuBqjB,EAASE,SAAhC,YAA4CtzC,EAAMD,MACrDgwB,MAAOA,EACPujB,SAAUA,EACVF,SAAQ,KAAOA,EAAP,CAAiBpzC,MAAOsG,IAChCtG,MAAOA,QAIb,yBACE8hB,MAAO,CACLgE,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGjB23D,GACC,kBAAC,IAAD,CACE13D,QAAS,WACP,IAAMstB,EAASD,EAASC,OAAOntC,KAAI,SAAApG,GACjC,YACKA,EADL,CAEEmW,OAAQ,CAAC,CAAEm9B,SAAU,EAAGn0C,MAAO,YAG7B0+E,EAAc,EAAH,GACZvqC,EADY,CAEfA,SAAUA,EAASA,SAAW,EAC9BC,WAGF1sC,EAAS,CACPjF,KAAM,qBACNwxC,WACAE,SAAUuqC,MAjBhB,eA6BV,SAASD,EAAT,GAAoC,IAAnB59E,EAAmB,EAAnBA,MAAOozC,EAAY,EAAZA,SACtB,OACE,6BACGpzC,EAAMmW,OAAO/P,KAAI,SAACjH,EAAOmH,GAAR,OAChB,kBAACw3E,EAAD,CACEv3E,IAAG,UAAK6sC,EAASrjB,MAAd,YAAuBqjB,EAASE,SAAhC,YAA4CtzC,EAAMD,KAAlD,YAA0DuG,GAC7DtG,MAAOA,EACPb,MAAOA,EAAMA,MACbi0C,SAAQ,KAAOA,EAAP,CAAiBj0C,MAAOmH,IAChCi5D,MAAOv/D,EAAMmW,OAAOvV,aAO9B,SAASk9E,EAAT,GAAkD,IAAjC99E,EAAiC,EAAjCA,MAAOb,EAA0B,EAA1BA,MAAOi0C,EAAmB,EAAnBA,SAAUmsB,EAAS,EAATA,MACjCwe,EAASv3C,qBAAW+2C,GAEpBS,EAAYh+E,EAAMsrC,eAA2B,IAAVi0B,EACnCoe,EAAS39E,EAAMsrC,eAAiB8H,EAASj0C,MAAQ,IAAMogE,EAErD14D,EAAa2/B,qBAAWgN,KAAxB3sC,SAEFxF,EAAQrB,EAAMsrC,cAAN,UACPtrC,EAAMD,KADC,aACQqzC,EAASj0C,MAAQ,EADzB,eACiCogE,EADjC,KAEVv/D,EAAMD,KAQV,IAN2Bk+E,EAMrBxtD,EAAYiX,YAChB,CACE3nC,MAAkBC,EAAMD,KARDk+E,EAQO7qC,EAPjB,SAAH,OAAY6qC,EAAIluD,MAAhB,qBAAkCkuD,EAAI3qC,SAAtC,kBAAwD2qC,EAAIj+E,MAA5D,kBAA2Ei+E,EAAI9+E,MAA/E,cAA0Fa,EAAMD,OAQ1Gm+E,oBAAqBl+E,EAAMD,KAC3B6wB,YAAa5wB,EAAM4wB,YACnBzxB,QACAw+B,UAAW39B,EAAM29B,UACjB38B,YAAahB,EAAMgB,YACnB8jB,MAAO9kB,EAAM8kB,MACb7kB,KAAMD,EAAMC,MAEd89E,EAAOr+C,UACPq+C,EAAOxgD,WACPwgD,EAAOn+C,OAUT,OALAnP,EAAUG,YAAc5wB,EAAM4wB,YAGTH,EAAUoN,cAA0C,WAA1BpN,EAAU2C,OAAOxxB,KAgB9D,kBAAC,IAAD,CAAK2E,IAAK6sC,EAASj0C,OACjB,kBAAC,IAAD,CAAQoH,IAAKvG,EAAMD,MACjB,kBAAC,IAAD,CAAW8nC,WAAYpX,EAAWpvB,MAAOA,IACzC,yBACEygB,MAAO,CACLgE,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGjB23D,GAAUK,GACT,kBAAC,IAAD,CACEn9D,MAAM,YACNoF,QAAS,WACPpf,EAAS,CACPjF,KAAM,qBACNwxC,eALN,UAYDuqC,GACC,yBACE77D,MAAO,CACLgE,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGlB,kBAAC,IAAD,CACEC,QAAS,WACPpf,EAAS,CACPjF,KAAM,kBACNwxC,eAJN,WA3CR,kBAAC,IAAD,CAAK7sC,IAAK6sC,EAASj0C,OACjB,2BAAIa,EAAMD,KAAV,iBACA,kBAAC,IAAD,CACE8nC,WAAU,KAAOpX,EAAP,CAAkBG,aAAa,EAAOwC,OAAQ,CAAExxB,KAAM,UAChEL,UAAQ,EACRF,MAAOA,K,EA5LRi8E,E,uBAqCAI,E,8BAuGAI,E,8IA7KIT,E,gGA+BPE,E,6FAEGD,E,uGAqBAE,E,4FAgBAE,E,+FAuFAE,E,uFAgBAE,E,2bCtLHK,EAAc,WAClB,OACE,oCACE,kBAAC,IAAD,Q,EAKSA,EAAA,O,6FARTA,E,4fCCAC,EAAmB,SAAC,GAAe,MAAbjmE,EAAa,EAAbA,OACpBiiE,EAA8C,YAA7BjiE,SAAA,UAAAA,EAAQlY,YAAR,eAAcgkB,YAErC,OACE,oCACE,kBAAC,IAAD,CAAoByoB,OAAK,EAACpoB,UAAWnM,EAAQ5W,SAAU64E,M,EAK9CgE,EAAA,O,6FAVTA,E,69FC0BAC,EAAkB,SAAC,GAAe,MAAblmE,EAAa,EAAbA,OACnBwnC,EAA0C,YAA7BxnC,SAAA,UAAAA,EAAQlY,YAAR,eAAcgkB,YAGjC,OAFiB0E,YAAmBxQ,GAOlC,oCACE,kBAACmmE,EAAD,CAAuB9+B,SAAUrnC,EAAQwnC,WAAYA,KALhD,M,EAUI0+B,EAAA,MAER,IAAMC,EAAwB3pD,aACnC,SAAArb,GAAS,cACP,MAAO,CACL88D,kBAAmBjoC,YAAiB,UAAC70B,EAAMme,gBAAP,iBAAC,EAAgBjwB,YAAjB,iBAAC,EAAsBg4C,gBAAvB,iBAAC,EAAgCh4C,YAAjC,iBAAC,EAAsCA,YAAvC,aAAC,EAA4CguE,cAGrF,CACE3gD,QAASjd,KAPwB+c,CASnC4pD,GAEF,SAASA,EAAT,GAA4E,IAApD/+B,EAAoD,EAApDA,SAAUG,EAA0C,EAA1CA,WAAYy2B,EAA8B,EAA9BA,kBAAmBvhD,EAAW,EAAXA,QAC/D,IAAwBt1B,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,GACRgnB,EAAU,IACVuR,EAAgB,MAGd3S,EAAUC,mBAChB,IAA4B9sC,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAA8CjuC,mBAAS,IAAvD,GAAO81E,EAAP,KAAwBC,EAAxB,KACA,IAA4C/1E,mBAAS,IAArD,GAAO41E,EAAP,KAAuBC,EAAvB,KACA,IAAsB71E,mBAAS,YAA/B,GAAOw8B,EAAP,KAAYm5C,EAAZ,KACA,IAAwC31E,mBAAS,IAAjD,GAAOy/C,EAAP,KAAqBD,EAArB,KACOm3B,EAAP,EAAgC32E,mBAAS,IAAzC,MAEAc,qBAAU,WACHmc,IAAEo7D,QAAQvC,IAAqB74D,IAAEo7D,QAAQzC,IAC5C3uD,GAAQ,KAET,CAAC6uD,EAAiBF,IA0BrB,OACE,oCACE,kBAAC,IAAD,CACEv1B,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,WAzBbkb,YAAYqe,EAASz/C,MAClB66B,MAAK,SAAApzB,GACAA,EAAKA,KAAKA,MAAQA,EAAKA,KAAKA,KAAKguE,WAAahuE,EAAKA,KAAKA,KAAKguE,UAAU,IACzEF,EAAmB9tE,EAAKA,KAAKA,KAAKguE,UAAU,OAG/CxnC,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,gDAAiDnoB,MAGjEyoC,YAAWkV,EAASx0C,SACjB4vB,MAAK,SAAApzB,GACAA,EAAKA,KAAKA,MAAQA,EAAKA,KAAKA,KAAK2I,WAAa3I,EAAKA,KAAKA,KAAK2I,UAAU,IACzEilE,EAAkB5tE,EAAKA,KAAKA,KAAK2I,UAAU,OAG9C69B,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,gDAAiDnoB,OAW7DN,SAAUo+C,GALZ,QASA,kBAAC,IAAD,CAAOp5B,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLgF,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CACEJ,MAAM,gBACNwD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGJqiB,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,2CAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,UAFjB,WAUN,kBAAC,IAAOwc,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,KACE,yFACA,uBAAGijB,MAAO,CAAEjB,MAAO,UAAW40D,eAAgB,YAAa7uD,OAAQ,YACjE,uBACEkoB,KAAK,eACL7oB,QAAS,WACPunB,EAAU,MAHd,sBAWN,kBAAC,IAAMvmB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,UAFjB,YAWN,kBAAC,IAAOwc,KAAR,CAAapnC,MAAM,IACjB,kBAAC,IAAMmmB,OAAP,KACE,kBAACqwD,EAAD,CAAUh6C,OAAQI,EAAK25C,UAAWR,KAEpC,kBAAC,IAAD,CAAQ/1E,MAAO48B,GACb,kBAAC,IAAOwK,KAAR,CAAapnC,MAAM,YACjB,kBAAC08E,EAAD,CACE7wE,QAASmqE,EACT31B,SAAU61B,EACV7nC,UAAWA,EACX4oC,kBAAmBA,EACnBvhD,QAASA,EACTmqB,aAAcA,EACdD,gBAAiBA,EACjB3S,QAASA,EACT8pC,sBAAuBA,KAG3B,kBAAC,IAAO3vC,KAAR,CAAapnC,MAAM,iBACjB,kBAAC,IAAMqmB,QAAP,KACE,kBAACowD,EAAD,CAAe5qE,QAASmqE,YAY5C,SAASQ,EAAT,GAAyC,IAArBh6C,EAAqB,EAArBA,OAAQ+5C,EAAa,EAAbA,UAM1B,OAAO,kBAAC,IAAD,CAAe/5C,OAAQA,EAAQ1V,QAASyvD,EAAW95C,KAL7C,CACX,CAAEv6B,MAAO,WAAYlC,MAAO,WAAYw8B,QAAQ,GAChD,CAAEt6B,MAAO,gBAAiBlC,MAAO,oB,EA9J5Bo/E,E,wUAoKT,IAAM1C,EAAe,SAAC,GAShB,UARJr8B,EAQI,EARJA,SACAhS,EAOI,EAPJA,UACA4oC,EAMI,EANJA,kBACAvhD,EAKI,EALJA,QACAmqB,EAII,EAJJA,aACAD,EAGI,EAHJA,gBACA3S,EAEI,EAFJA,QACA8pC,EACI,EADJA,sBAEMJ,EAAiB,CACrBC,UAAWv2B,SAAD,UAACA,EAAU10C,kBAAX,QAAC,EAAsBi/B,QACjCA,QAAQyV,SAAA,UAAAA,EAAU10C,kBAAV,eAAsBi/B,SAAU,EACxC5Z,OAAOqvB,SAAA,UAAAA,EAAU10C,kBAAV,eAAsBqlB,QAAS,IAExC,IAA8B5wB,mBAASu2E,GAAvC,GAAOE,EAAP,KAAgBwI,EAAhB,KAEMzH,EAAev3B,EAASz/C,KAAK0G,MAAM,KACnC1G,EAAOg3E,EAAaA,EAAan2E,OAAS,GAuDhD,OACE,oCACE,kBAAC,IAAD,CACE4vB,cAAe,GACfvxB,SAzDmB,SAAAkX,GACvB,IAAQ6gE,EAA+C7gE,EAA/C6gE,MAAOC,EAAwC9gE,EAAxC8gE,KAAMC,EAAkC/gE,EAAlC+gE,MAAOC,EAA2BhhE,EAA3BghE,MAAOC,EAAoBjhE,EAApBihE,MAAOC,EAAalhE,EAAbkhE,SACpCr2C,EAAS,GAoBf,OAlBIq2C,IACEA,EAAStjE,SAAS,KACpBitB,EAAOq2C,SAAW,0BACTA,EAAStjE,SAAS,KAC3BitB,EAAOq2C,SAAW,6BACTjB,EAAkBriE,SAASsjE,IAAat3E,IAASs3E,IAC1Dr2C,EAAOq2C,SAAW,8CAKpBlhE,EAAO,iBACL,2BAA2BwN,KAAKxN,EAAO,kBACD,MAAtCA,EAAO,gBAAgB9B,QAAQ,KAEjC2sB,EAAO,gBAAkB,0CAGd,MAATi2C,GAA0B,MAAVC,GAA2B,MAAVC,GAA2B,MAAVC,GACpDp2C,EAAOi2C,KAAO,yCACdj2C,EAAOk2C,MAAQ,yCACfl2C,EAAOm2C,MAAQ,yCACfn2C,EAAOo2C,MAAQ,yCACRp2C,IAGJxsB,IAAc8iE,eAAeN,KAChCh2C,EAAOg2C,MAAQxiE,IAAc4B,WAAWC,SAGrC7B,IAAc+iE,aAAaN,KAC9Bj2C,EAAOi2C,KAAOziE,IAAc4B,WAAWE,OAGpC9B,IAAcgjE,YAAYN,KAC7Bl2C,EAAOk2C,MAAQ1iE,IAAc4B,WAAWG,MAGrC/B,IAAcijE,aAAaN,KAC9Bn2C,EAAOm2C,MAAQ3iE,IAAc4B,WAAWI,OAGrChC,IAAckjE,eAAeN,KAChCp2C,EAAOo2C,MAAQ5iE,IAAc4B,WAAWK,aAGnCuqB,IAQH6O,SAAU,SAAA15B,GACR65B,EAAawP,EAAUw2B,EAASxoC,EAAW3Y,EAASkqB,EAAiB5oC,IAEvE45B,SAAU3D,IAET,WACC,OACE,oCACE,kBAAC,IAAM5mB,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,KACE,kBAAC,IAAQC,MAAT,iBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEzlB,KAAK,UACLsB,MAAM,UACNL,YAAaw+C,EAASx+C,YACtB7B,MAAOqgD,EAASx0C,QAChBzJ,UAAQ,OAMhB,kBAAC,IAAD,KACE,kBAAC,IAAQ+jB,OAAT,KACE,kBAAC,IAAQC,MAAT,kBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEzlB,KAAK,WACLsB,MAAM,OACNlC,OAAO6/C,aAAA,EAAAA,EAAcnK,SAAU90C,EAC/BX,UAAQ,KAGZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEW,KAAK,kBACLsB,MAAM,cACNlC,OAAO6/C,aAAA,EAAAA,EAAch+C,cAAew+C,EAASx+C,YAC7CR,WAAS,EACTpB,UAAQ,KAGZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQ0iB,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAcg4B,QAASx3B,EAASw3B,MACvCh2E,YAAawT,IAAc4B,WAAWC,WAG1C,kBAAC,IAAD,CAAQyL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CACE/mB,KAAK,OACLsB,MAAM,OACNlC,OAAO6/C,aAAA,EAAAA,EAAci4B,OAAQz3B,EAASy3B,KACtCj2E,YAAawT,IAAc4B,WAAWE,QAEvC4/D,GACC,yBAAK1wE,UAAU,sBAAsBgP,IAAc4B,WAAWM,qBAGlE,kBAAC,IAAD,CAAQoL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAck4B,QAAS13B,EAAS03B,MACvCl2E,YAAawT,IAAc4B,WAAWG,QAG1C,kBAAC,IAAD,CAAQuL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAcm4B,QAAS33B,EAAS23B,MACvCn2E,YAAawT,IAAc4B,WAAWI,SAG1C,kBAAC,IAAD,CAAQsL,MAAO,CAAEV,SAAU,MAAO0F,MAAO,QACvC,kBAAC,IAAD,CACE/mB,KAAK,QACLsB,MAAM,QACNlC,OAAO6/C,aAAA,EAAAA,EAAco4B,QAAS53B,EAAS43B,MACvCp2E,YAAawT,IAAc4B,WAAWK,kBAOhD,kBAAC,IAAD,CACE8K,UAAUy9B,aAAA,EAAAA,EAAcl0C,aAAc00C,EAAS10C,WAC/Cy8B,UAAQ,IAEV,kBAAC,IAAD,KACE,kBAAC,IAAQjiB,OAAT,KACE,kBAAC,IAAQC,MAAT,uBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,CACEzlB,KAAK,gBACL+pC,aAAcgsC,EACd1rC,QAAS,SAAAutC,IACgB,IAAnBA,EAAQ5tC,QAAgB6tC,kBAAQD,EAAQxnD,SAC1CquD,EAAW,CACTzI,SAAS,IAGbyI,EAAW,EAAD,CACRzI,SAAS,GACN4B,WAQjB,kBAAC,IAAM1wD,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcF,QAAQ,aAAtB,gB,SAWHgpB,E,6FAAf,WAA4BwP,EAAUw2B,EAASxoC,EAAW3Y,EAASkqB,EAAiB5oC,GAApF,4BAyBW2hE,EAzBX,gFAyBWA,EAzBX,SAyBoB34E,EAAOoH,GACvB,MAAY,eAARA,OAICpH,GAA0B,kBAAVA,KAIP,SAAVA,IAIiB,WAAjB,EAAOA,KAAsBy4E,kBAAQz4E,OApCzCk4E,EASElhE,EATFkhE,SACAU,EAQE5hE,EARF4hE,gBACA/sE,EAOEmL,EAPFnL,QACAgsE,EAME7gE,EANF6gE,MACAC,EAKE9gE,EALF8gE,KACAC,EAIE/gE,EAJF+gE,MACAC,EAGEhhE,EAHFghE,MACAC,EAEEjhE,EAFFihE,MACGY,EAVP,EAWM7hE,EAXN,GAYQqX,EAAO,CACXqnB,OAAQwiC,EACRr2E,YAAa+2E,EACb/sE,UACAgsE,MAAOA,GAAS,KAChBC,KAAMA,GAAQ,KACdC,MAAOA,GAAS,KAChBC,MAAOA,GAAS,KAChBC,MAAOA,GAAS,MApBpB,EAuByBa,EAAgBD,GAA/BltE,EAvBV,EAuBUA,WAsBJkrE,EAAQD,SAIVvoD,EAAKxiB,QAAU,mCACfwiB,EAAK1iB,WAAa,CAChB/K,KAAMiL,EACNF,WAAYotE,iBAAOptE,EAAYgtE,GAC/B/tC,OAAQisC,EAAQjsC,OAChB5Z,MAAO6lD,EAAQ7lD,QAGjB3C,EAAK1iB,WAAaotE,iBAAOptE,EAAYgtE,GAGvC12C,YAAcoe,EAASz/C,KAAMytB,GAC1BoN,MAAK,WACJ4S,EAAU,WACVuR,EAAgB,IAChBlqB,EAAQ,eAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,wCAAyCnoB,GACrDk9C,EAAgBvxB,GAChBggB,EAAU,WArEhB,iD,sBAyEA,SAASyqC,EAAgBE,GAEvB,IAAMhiE,EAASiiE,EAAcD,GAGvB7uE,EAFOqQ,OAAOC,KAAKzD,GAEL6C,QAClB,SAACm7B,EAAW5tC,GACV,GAAIA,EAAI2N,WAAW,aAAc,CAC/B,QAA4B3N,EAAI6f,QAAQ,YAAa,IAAI3f,MAAM,MAA/D,GAAOH,EAAP,KAAcgtB,EAAd,KAEMtZ,EAAQm6B,EAAUjvB,SAAS5e,GAGjC,MAAmB,UAAfgtB,GAA0C,KAAhBnd,EAAO5P,KAIjCyT,EAEAA,EAAMsZ,GADW,UAAfA,EACF,kBAA8Bnd,EAAO5P,GAArC,SAEoB4P,EAAO5P,GAEL,UAAf+sB,EACT6gB,EAAUjvB,SAASnX,KAAnB,KAA2BulB,EAA3B,kBAAkDnd,EAAO5P,GAAzD,WAEA4tC,EAAUjvB,SAASnX,KAAnB,KAA2BulB,EAAand,EAAO5P,MAZxC4tC,EAkBX,GAAI5tC,EAAI2N,WAAW,aAAc,CAC/B,IAAO5N,EAAP,EAAgBC,EAAI6f,QAAQ,cAAe,IAAI3f,MAAM,MAArD,MAIA,OAFA0tC,EAAU5sB,WAAWpR,EAAO,YAAD,OAAa7P,EAAb,YAA+B6P,EAAO5P,GAE1D4tC,EAKT,OAFAA,EAAUrpC,WAAWvE,GAAO4P,EAAO5P,GAE5B4tC,IAET,CAAEjvB,SAAU,GAAIqC,WAAY,GAAIzc,WAAY,KAG9C,MAAO,CACLA,WAAY,EAAF,GACLxB,EAAOwB,WADF,CAERoa,SAAUmzD,EAAgB/uE,EAAO4b,UACjCqC,WAAYje,EAAOie,cAKzB,SAAS8wD,EAAgBnzD,GACvB,OAAOA,EAASpX,QAAO,SAAAiW,GAAC,OAAIA,KAAG3d,KAAI,SAAC2d,EAAGzd,GAAJ,YAAoByd,EAApB,CAAuB9jB,KAAM,CAAEu9B,SAAUl3B,EAAQ,QAGtF,SAAS8xE,EAAcjiE,GAUrB,OATIA,EAAO,kBACLA,EAAO,qBACTA,EAAOpW,KAAP,UAAiBoW,EAAO,qBAAxB,YAAgDA,EAAO,iBAEvDA,EAAOpW,KAAOoW,EAAO,uBAEhBA,EAAO,4BACPA,EAAO,iBAETA,E,EAvWH0lE,E,mDA0WN,I,IAAMjG,EAAgB,SAAC,GAAgB,IAAd5qE,EAAc,EAAdA,QACvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAQsa,OAAT,KACE,kBAAC,IAAQC,MAAT,KAAgBva,EAAQjL,MACxB,kBAAC,IAAQm/D,KAAT,KAAel0D,EAAQhK,cAExBgK,EAAQF,YAAcE,EAAQF,WAAWlK,OAAS,GACjD,kBAAC,IAAQ4kB,QAAT,KACE,4BACE,2CAEF,6BACGxa,EAAQF,WAAW1E,KAAI,SAAAqqB,GACtB,OACE,kBAAC,IAAM/K,SAAP,CAAgBnf,IAAKkqB,EAAU1wB,MAC7B,4BACG0wB,EAAU1wB,KADb,KACqB0wB,EAAUkN,UAD/B,KAGA,kBAAC,IAAQuhC,KAAT,KAAezuC,EAAUzvB,sB,6FA7jBrCq9E,E,qFAiBOC,E,2FAWJC,E,kFA2JA5I,E,8EASHkG,E,kFAwNS7rC,E,kFAyENioC,E,qFAwDAI,E,qFAIAD,E,mFAaHxC,E,k7DChjBN,SAAS6I,EAAkBtmE,GACzB,MACmB,aAAjBA,EAAOiG,QACY,SAAlBjG,EAAOA,QACY,YAAlBA,EAAOA,QACW,aAAlBA,EAAOA,QACW,YAAlBA,EAAOA,QAIb,IAAMumE,EAAgB,SAAC,GAAe,IAAbvmE,EAAa,EAAbA,OAEvB,GADyC,SAAlBA,EAAOA,OACV,OACZwmE,EAAgBF,EAAkBtmE,GAClCivC,EAAUjvC,EAAO4f,MACjBqiD,EAA8C,YAA7BjiE,SAAA,UAAAA,EAAQlY,YAAR,eAAcgkB,YAC/Bg5D,EAAWt0D,YAAmBxQ,GAEpC,OACE,oCACG8kE,GACC,kBAAC,IAAD,CAAiB9kE,OAAQA,EAAQivC,QAASA,EAAS7lD,SAAU64E,KAE7DhzB,GAAW,kBAACw3B,EAAD,CAAmBzmE,OAAQA,IACvCivC,GAAW61B,GAAY,kBAAC4B,EAAD,CAAoB1mE,OAAQA,IACnD8kE,GAAY0B,GACX,kBAAC,IAAD,CAAuBxmE,OAAQA,EAAQ5W,SAAU64E,KAKzD,OAAO,M,EAGMsE,EAAA,MAIR,IAAME,EAAoBjqD,YAAQ,KAAM,CAC7CE,QAASjd,KADsB+c,CAE9BmqD,GAEH,SAASA,EAAT,GAAuC,MAAnB3mE,EAAmB,EAAnBA,OAAQ0c,EAAW,EAAXA,QAC1B,IAAwBt1B,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAGZ,IAA4BjnB,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACMmS,EAA0C,YAA7BxnC,SAAA,UAAAA,EAAQlY,YAAR,eAAcgkB,YAC3BmoB,EAAUC,mBAEhB,OACE,oCACE,kBAAC,IAAD,CACE9qC,SAAUo+C,EACVC,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,WACPO,GAAQ,KAJZ,aASA,kBAAC,IAAD,CAAOD,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVgX,UAAW,UAGb,kBAAC,IAAD,CACEta,MAAM,YACNwD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGJqiB,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,uCAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,WAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,6DAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,YAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,IACjB,kBAAC,IAAD,CACEqxB,cAAe,CACbzwB,KAAM,GACN0hB,UAAW,GACXs9D,SAAU5mE,EAASA,EAAOpY,KAAO,GACjCiB,YAAa,IAEf6uC,SAAU,SAAA15B,GACR0pC,EAAgBrS,EAAW3Y,EAAS1e,IAEtC45B,SAAU3D,IAET,YAAgB,IAAbj2B,EAAa,EAAbA,OACF,OACE,oCACE,kBAAC,IAAMqP,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/jB,UAAQ,EACRxB,KAAK,WACLsB,MAAM,WACNlC,MAAOgX,EAAO4oE,YAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMh/E,KAAK,OAAOsB,MAAM,OAAOlC,MAAOgX,EAAOpW,KAAMX,UAAQ,KAE7D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQqoC,GAAI,IACV,kBAAC,IAAD,CACE1nC,KAAK,YACLsB,MAAM,mBACNlC,MAAOgX,EAAOsL,cAIpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1hB,KAAK,cACLsB,MAAM,cACNlC,MAAOgX,EAAOnV,YACdR,WAAS,EACTpB,UAAQ,QAMlB,kBAAC,IAAM6nB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcF,QAAQ,aAAtB,mB,SAeX64B,E,uFAAf,WAA+BrS,EAAW3Y,EAAS1e,GAAnD,wFACQ4hB,EAAQ5hB,EAAOsL,UAAP,UAAsBtL,EAAOsL,UAA7B,YAA0CtL,EAAOpW,MAASoW,EAAOpW,KACzEytB,EAAO,CACXztB,KAAMoW,EAAO4oE,SACbhnD,QACA/2B,YAAamV,EAAOnV,aAGtByhD,YAAUj1B,GACPoN,MAAK,WACJ4S,EAAU,WACV3Y,EAAQ,YAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,mCAAoCnoB,GAChD2rC,EAAU,WAfhB,iD,wBAjJSsxC,E,wFAoKF,I,IAAMD,EAAqBlqD,YAAQ,KAAM,CAC9CE,QAASjd,KADuB+c,CAE/BqqD,GAEH,SAASA,EAAT,GAAwC,MAc9B7oE,EACA8oE,EAfW9mE,EAAmB,EAAnBA,OAAQ0c,EAAW,EAAXA,QAC3B,IAAwBt1B,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAGZ,IAA4BjnB,mBAAS,IAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAAsCjuC,mBAAS,IAA/C,GAAOyB,EAAP,KAAoB+5E,EAApB,KACM3uC,EAAUC,mBA8BVsT,EAA0C,YAA7BxnC,SAAA,UAAAA,EAAQlY,YAAR,eAAcgkB,YAEjC,OACE,oCACE,kBAAC,IAAD,CACE1iB,SAAUo+C,EACVC,QAAS,CAAEre,KAAM,iBACjBtb,QAAS,WAxBS,IAAAlmB,IAyBAoY,EAAOpY,KAxB7BwiD,YAASxiD,GACN66B,MAAK,SAAApzB,GAEFA,EAAKA,KAAKA,MACVA,EAAKA,KAAKA,KAAKswB,SACftwB,EAAKA,KAAKA,KAAKswB,QAAQ,IACvBtwB,EAAKA,KAAKA,KAAKswB,QAAQ,GAAG92B,cAE1B+5E,EAAevzE,EAAKA,KAAKA,KAAKswB,QAAQ,GAAG92B,aACzCwlB,GAAQ,OAGXwnB,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,4CAA6CnoB,QAO3D,cASA,kBAAC,IAAD,CAAO0kB,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVgX,UAAW,UAGb,kBAAC,IAAD,CACEta,MAAM,aACNwD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAGJqiB,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAAC,IAAO/C,KAAR,wCAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,WAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAAC,IAAO/C,KAAR,8DAEF,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,MAHd,YAWN,kBAAC,IAAOjH,KAAR,CAAapnC,MAAM,IACjB,kBAAC,IAAD,CACEqxB,eA9FNra,EAAS,GACT8oE,EAAoB9mE,EAAOpY,KAAK0G,MAAM,KAE5C0P,EAAOpW,KAAOk/E,EAAkBA,EAAkBr+E,OAAS,IAAM,GACjEuV,EAAOsL,UAAYw9D,EAAkBvxE,MAAM,EAAGuxE,EAAkBr+E,OAAS,GAAGghB,KAAK,KACjFzL,EAAO4oE,SAAW5mE,EAASA,EAAO4f,MAAQ,GAC1C5hB,EAAOnV,YAAcA,EAEdmV,GAuFK05B,SAAU,SAAA15B,GACR+oE,EAAiB1xC,EAAW3Y,EAAS1c,EAAOpY,KAAMoW,IAEpD45B,SAAU3D,IAET,YAAgB,IAAbj2B,EAAa,EAAbA,OACF,OACE,oCACE,kBAAC,IAAMqP,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQF,OAAT,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE/jB,UAAQ,EACRxB,KAAK,WACLsB,MAAM,WACNlC,MAAOgX,EAAO4oE,YAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMh/E,KAAK,OAAOsB,MAAM,OAAOlC,MAAOgX,EAAOpW,KAAMX,UAAQ,KAE7D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQqoC,GAAI,IACV,kBAAC,IAAD,CACE1nC,KAAK,YACLsB,MAAM,mBACNlC,MAAOgX,EAAOsL,cAIpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1hB,KAAK,cACLsB,MAAM,cACNlC,MAAOgX,EAAOnV,YACdR,WAAS,EACTpB,UAAQ,QAMlB,kBAAC,IAAM6nB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAcF,QAAQ,aAAtB,mB,SAeXk4D,E,yFAAf,WAAgC1xC,EAAW3Y,EAASsqD,EAAchpE,GAAlE,wFACQpW,EAAOoW,EAAOsL,UAAP,UAAsBtL,EAAOsL,UAA7B,YAA0CtL,EAAOpW,MAASoW,EAAOpW,KACxEytB,EAAO,CACXqnB,OAAQ90C,EACRiB,YAAamV,EAAOnV,aAGtBwhD,YAAW28B,EAAc3xD,GACtBoN,MAAK,WACJ4S,EAAU,WACV3Y,EAAQ,YAETmZ,OAAM,SAAAnsC,GACLmW,QAAQgS,IAAI,mCAAoCnoB,GAChD2rC,EAAU,WAdhB,iD,wBA1KSwxC,E,mOAlNAP,E,qFAUHC,E,iFA4BOE,E,qFAIJE,E,4EAiJMj/B,E,mFAmBFg/B,E,sFAIJG,E,6EA0KME,E,olDCnYFE,EAAwBzqD,YAAQ,KAAM,CACjD0qD,cAAejnE,IACf4nC,QAASpoC,KAF0B+c,CAGlC2qD,GAEH,SAASA,EAAT,GAAoE,IAA5C/9E,EAA4C,EAA5CA,SAAU4W,EAAkC,EAAlCA,OAAQ6nC,EAA0B,EAA1BA,QAASq/B,EAAiB,EAAjBA,cACjD,IAA4B9/E,mBAAS,WAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAAwBjuC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgrB,EAAU,WACVhnB,GAAQ,KACP,KAGC5kB,EAAOuW,EAAOA,OACZpY,EAASoY,EAATpY,KAEFq+C,EAAa57B,uBAAY,WAC7ByrB,YAAaluC,EAAM6B,GAAMg5B,MAAK,SAAArzB,GAC5BimC,EAAUjmC,EAAS+B,aAEpB,CAAC1H,EAAM7B,IAEV,OACE,oCACE,kBAAC,IAAD,CAAQwB,SAAUA,EAAUq+C,QAAS,CAAEre,KAAM,iBAAmBtb,QAAS6D,EAAavD,MAAtF,UAGA,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVC,UAAW,QACX9I,SAAU,SAGZ,kBAAC,IAAD,CACEuF,MAAK,iBAAY/kB,GACjBuoB,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAGk5C,UAIf,kBAAC,IAAD,CAAQ1/C,MAAOmK,GACb,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,QACX,kBAACyoB,EAAD,6CACwCzoB,EADxC,kFAMJ,kBAAC,IAAMqlB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPm4B,MAJJ,aAYN,kBAAC,IAAO7X,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAQyC,KAAK,WACX,kBAACyoB,EAAD,KAAWtqB,EAAX,2BAEF,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,WACV6xC,IACAr/B,EAAQp+C,KALZ,WAaN,kBAAC,IAAO2kC,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAD,CAAQyC,KAAK,QACX,kBAACyoB,EAAD,4DAEF,kBAAC,IAAMpD,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACP6D,EAAaC,QACbyjB,EAAU,aAHd,gBAkBlB,SAASnjB,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,SAGZllB,G,EA3HE+5E,E,mOALIF,E,uGAKJE,E,8FA8GAj1D,E,++CCxHIk1D,EAAkB,SAAC,GAAkC,IAAhCh+E,EAAgC,EAAhCA,SAAU4W,EAAsB,EAAtBA,OAAQivC,EAAc,EAAdA,QAClD,IAAwB7nD,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAEMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WAEjBgE,GAAQ,KACP,KAEL,OACE,oCACE,kBAAC,IAAD,CAAQjlB,SAAUA,EAAUq+C,QAAS,CAAEre,KAAM,iBAAmBtb,QAAS6D,EAAavD,MAAtF,cAGA,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,OACVgX,UAAW,QACX/W,UAAW,UAGb,kBAAC,IAAD,CACEvD,MAAM,aACNwD,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAG01E,SAIf,kBAAC,IAAD,CAAkBljE,OAAQA,EAAQivC,QAASA,Q,EAjCxCm4B,E,+JAAAA,E,ikDCKAC,EAAmB,SAAC,GAAe,IAAbrnE,EAAa,EAAbA,OAC3BsnE,IAAatnE,EAAO4f,MAC1B,EAOI2nD,EAAcvnE,EAAQsnE,GANxBz4E,EADF,EACEA,QACAQ,EAFF,EAEEA,KACAm4E,EAHF,EAGEA,gBACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,mBACAC,EANF,EAMEA,gBAEF,IAAyBvgF,mBAAS,SAAlC,GAAOw8B,EAAP,KAAYgkD,EAAZ,KACQvnE,EAAYguB,qBAAW2F,KAAvB3zB,QAER,OAAIxR,EAEA,kBAAC,IAAD,uBACE,kBAAC,IAAD,yDAKDQ,EAWH,oCACE,kBAAC,IAAM8d,OAAP,KACE,kBAAC,IAAD,CACEqW,OAAQI,EACRH,KAAM,CACJ,CAAEv6B,MAAO,QAASlC,MAAO,SACzB,CAAEkC,MAAO,SAAUlC,MAAO,WAE5B8mB,QAAS85D,EANX,wBASF,kBAACC,EAAD,CACEp3D,WAAYphB,EAAKohB,WAAW9a,QAAO,SAAAiW,GACjC,MAAe,QAAXA,EAAE+qB,OAGS,UAAX/qB,EAAE+qB,OAGM,UAAR/S,GACMhY,EAAEk8D,SAGLl8D,EAAEk8D,cAEXC,QAAS,SAAAz4B,GACPq4B,EAAgBr4B,IAElBm4B,SAAUA,EACVjoE,WAAYQ,EAAOA,OACnBkhB,WAAYomD,GAAYE,EAAkBxnE,EAAO4f,MAAQ5f,EAAOpY,KAChEqnD,QAASq4B,IAAaE,EApBxB,uBAsBA,kBAAC,IAAM14D,OAAP,OACK9O,EAAO4f,OACR,kBAAC,IAAM9Q,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACEzJ,MAAM,UACNsJ,KAAM,kBAAC,IAAD,wBACNgwB,YAAa,kBAAC,IAAD,wBACbz3B,QAASi9D,EACTn+E,SAAU,WACRq+E,GAAoBF,IAEtBt+E,MAAM,yBARR,wBAYJ,kBAAC,IAAM4lB,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQrG,MAAM,UAAUmG,QAAQ,YAAYf,QAASzN,EAAQuR,MAA7D,iCA1DJ,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQnoB,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,CAAamH,SAAO,GAApB,sCAAyDmS,EAAOpY,SAiE1E,SAASigF,EAAT,GAA4F,IAAlEp3D,EAAkE,EAAlEA,WAAYg3D,EAAsD,EAAtDA,SAAUM,EAA4C,EAA5CA,QAASvoE,EAAmC,EAAnCA,WAAY0hB,EAAuB,EAAvBA,WAAY+tB,EAAW,EAAXA,QACzEvhC,EAAQs6D,EAAexoE,EAAYyvC,GAEzC,SAASg5B,EAAWx+E,GAClB,OACE,yBAAK4D,UAAU,cAAce,IAAK3E,EAAlC,sBACGA,GA8CP,OACE,yBAAK4D,UAAU,aAAf,sBACE,yBAAKA,UAAU,SAAf,sBACG46E,EAAW,QACZ,yBAAK56E,UAAU,QAAf,sBAAwBqgB,EAAMzf,IAAIg6E,KAEpC,yBAAK56E,UAAU,OAAf,sBACGojB,EACEpe,MAAK,SAAC2D,EAAGC,GAAJ,iBAAUD,SAAV,UAAUA,EAAG2gC,YAAb,iBAAU,EAASn/B,qBAAnB,aAAU,EAAwByqB,cAAchsB,SAAtC,UAAsCA,EAAG0gC,YAAzC,aAAsC,EAASn/B,kBAC9DvJ,KAlDT,SAAqBi6E,GACnB,OACE,yBAAK76E,UAAU,OAAOe,IAAG,gBAAW6gD,EAAX,iBAA2Bi5B,EAAcvxC,MAAlE,sBACE,yBAAKtpC,UAAU,cAAf,sBACE,kBAAC,IAAD,CAASqb,MAAM,UAAf,sBACE,0BAAMlb,EAAG26E,IAAT,wBAEDD,EAAcvxC,MAEjB,yBAAKtpC,UAAU,QAAf,sBACGqgB,EAAMzf,KAAI,SAAAxE,GACT,IAAM2lD,EAAU84B,EAAcx3D,UAAU9U,SAASnS,GACjD,OACE,yBACE4D,UAAU,eACVe,IAAG,kBAAa6gD,EAAb,iBAA6Bi5B,EAAcvxC,KAA3C,kBAAyDuxC,EAAcJ,SAAvE,iBAAwFr+E,EAAxF,YAAgG2lD,GAFrG,sBAIE,kBAAC,IAAD,CACEhhD,IAAG,gBAAW6gD,EAAX,iBAA2Bi5B,EAAcvxC,KAAzC,kBAAuDuxC,EAAcJ,SAArE,iBAAsFr+E,EAAtF,YAA8F2lD,GACjG3H,QAAS,CAAEre,KAAM,sBACjB7e,QAAS6kC,EACThmD,SAAUq+E,EACVp+E,SAAU,WACR0+E,EAAQ,CACNz4B,UAAW7lD,EACX8lD,aAAcruB,EACdtB,MAAOqvB,EACPtY,KAAMuxC,EAAcvxC,KACpB0Y,UAAW64B,EAAcJ,SAAW,QAAU,OAC9C14B,aAZN,kCAuChB,SAAS44B,EAAexoE,GAA2B,IAAfogB,EAAe,wDAC3Cn2B,EAAO+V,EAAWhI,cAClBiZ,EAAa,GASnB,OARKmP,IACU,cAATn2B,EACFgnB,EAAW7a,KAAK,aACP,CAAC,UAAW,WAAY,OAAQ,WAAWgG,SAASnS,IAC7DgnB,EAAW7a,KAAK,YAGpB6a,EAAW7a,KAAK,OAAQ,SACjB6a,EAGT,SAAS82D,EAAcvnE,EAAQsnE,GAC7B,QAA8ClgF,oBAAUkgF,GAAxD,GAAOE,EAAP,KAAwBE,EAAxB,KACA,IAA8BtgF,oBAAS,GAAvC,GAAOyH,EAAP,KAAgBu5E,EAAhB,KACA,IAAgChhF,oBAAS,GAAzC,GAAOqgF,EAAP,KAAiBY,EAAjB,KACA,IAAwBjhF,mBAAS,MAAjC,GAAOiI,EAAP,KAAai5E,EAAb,KAEApgF,qBAAU,WACR8mD,YACEs4B,GAAYE,EAAkBxnE,EAAO4f,MAAQ5f,EAAOpY,KACpD0/E,IAAaE,GAEZ/kD,MAAK,SAAA0R,GAAQ,UACZm0C,EAAQn0C,SAAD,UAACA,EAAM9kC,YAAP,iBAAC,EAAYA,YAAb,iBAAC,EAAkBiwB,gBAAnB,aAAC,EAA6B,IACrC8oD,GAAW,MAEZvyC,OAAM,WACLyyC,EAAQ,MACRF,GAAW,QAEd,CAACZ,IAEJ,IAAMG,EAAkBt9D,uBACtB,SAAAilC,GACE+4B,GAAY,GACZl5B,YAAcG,GACX7sB,MAAK,SAAA0R,GAAQ,UACZm0C,EAAQn0C,SAAD,UAACA,EAAM9kC,YAAP,iBAAC,EAAYA,YAAb,iBAAC,EAAkBiwB,gBAAnB,aAAC,EAA6B,IACrC+oD,GAAY,MAEbxyC,OAAM,WACLwyC,GAAY,QAGlB,CAACroE,EAAQwnE,IAGX,MAAO,CACL34E,UACAQ,OACAm4E,kBACAC,WACAC,qBACAW,cACAC,UACAX,mB,EAvNSN,E,qNASPE,M,EAkKGA,E,yTA3KIF,E,iHA0FJQ,E,+GAmEAG,E,+GAcAT,E,8sBCrLIgB,EAAmB,SAAC,GAAe,IAAbjY,EAAa,EAAbA,OAC3BhjC,EAAW2hC,cAEjB,OACE,yBAAK5hE,UAAU,qBAAqB0lB,UAAQ,qBAA5C,sBACGu9C,EAAOriE,KAAI,gBAAGylD,EAAH,EAAGA,GAAIxqD,EAAP,EAAOA,MAAP,OACV,yBACEkF,IAAKslD,EACLrmD,UAAWC,IAAW,0BAA2B,CAC/C,cAAeggC,EAASs9B,SAAShvD,SAAS83C,KAH9C,sBAME,kBAAC,IAAD,CAAMtlD,IAAKslD,EAAIA,GAAIA,EAAI3gC,UAAA,qCAAuC2gC,GAA9D,sBACGxqD,S,EAbAq/E,E,2CACMtZ,QAoBnBsZ,EAAiB96E,UAAY,CAC3B6iE,OAAQkY,kBACNj1D,gBAAM,CACJmgC,GAAIlgC,SACJtqB,MAAOyE,WAKb46E,EAAiB5pD,aAAe,CAC9B2xC,OAAQ,K,4FA/BGiY,E,8iBCIAE,EAAa,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,SAAU75E,EAAc,EAAdA,QAC7B85E,EAAaC,cAAbD,SAOR,OANAzgF,qBAAU,WACJygF,GACFD,EAASC,KAEV,CAACA,IAGF,oCACG95E,EACC,kBAAC,IAAD,qBACe,2BAAI85E,IAGnB,kBAAC,IAAD,Q,EAfKF,E,0DACUG,QAoBvBH,EAAWh7E,UAAY,CACrBi7E,SAAUj1D,OACV5kB,QAASf,QAGJ,I,IAAM+6E,EAAsBrsD,aACjC,SAAArb,GAAK,MAAK,CACRtS,QAASsS,EAAMmrB,aAAalqB,MAAMsU,KAAK7nB,YAEzC,SAAAH,GAAQ,MAAK,CAAEg6E,SAAU,SAAA9gF,GAAI,OAAI8G,EAAS8nB,YAAc5uB,QAJvB40B,CAKjCisD,I,6FA/BWA,E,sFA0BAI,E,0lDCXAC,EAAW,SAAC,GAAoE,MAAlEpyD,EAAkE,EAAlEA,KAAMqyD,EAA4D,EAA5DA,eAAgBnQ,EAA4C,EAA5CA,aAAczM,EAA8B,EAA9BA,WAAYt7C,EAAkB,EAAlBA,YACnEm4D,EAAgB,WACpB,OAAI7c,EAAWp9D,IAAI,WAAY2nB,aAA3B,EAA2BA,EAAM9uB,MAC5B,OAGJopB,YAAQH,GAIN,UAHE,aAKX,IAA4BzpB,mBAAS4hF,GAArC,GAAO73E,EAAP,KAAekkC,EAAf,KACA,IAAwBjuC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgrB,EAAU2zC,GACV36D,GAAQ,KACP,KAEC46D,EAA+B,QAApBvyD,aAAA,EAAAA,EAAM3F,YAAkD,KAA5B2F,SAAA,UAAAA,EAAM3F,iBAAN,eAAiBtoB,QACxDygF,EAAa7+D,uBAAY,WAC7B0+D,EAAeryD,GACZ+L,MAAK,WACJ4S,EAAU,WACVhnB,GAAQ,MAETwnB,OAAM,WACLR,EAAU,WACVhnB,GAAQ,GACRxO,QAAQgS,IAAI,mCAEf,CAAC6E,IACEyyD,EAAc,CAAEC,cAAe,QAOrC,OALIH,IACFE,EAAY/2D,UAAY,UAIrBsE,EAKH,oCACE,kBAAC,IAAD,CAAOsvC,KAAK,SAAZ,sBACE,kBAAC,IAAM74C,OAAP,KACE,kBAAC,IAAMC,MAAP,CAAazD,MAAOw/D,GAAczyD,EAAK9uB,OAEzC,kBAAC,IAAMylB,QAAP,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAQD,MAAT,0BACA,kBAAC,IAAD,yBAEF,kBAAC,IAAD,uBACE,kBAAC,IAAQA,MAAT,yBACA,kBAAC,IAAD,0BAGJ,kBAAC,IAAM0B,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACkB,SAAfuE,aAAA,EAAAA,EAAM9uB,OACL,kBAAC,IAAD,CACE8gB,MAAM,YACNtf,SAAUwvE,GAAgBqQ,EAC1Bn7D,QAAS6D,EAAavD,KAHxB,yCAQF,kBAAC,IAAD,wBACA,kBAAC,IAAD,2BAIN,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVC,UAAW,QACX9I,SAAU,QAJd,sBAOE,kBAAC,IAAD,CACEuF,MAAM,kBACNwD,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAGk5C,KAAT,wBAJN,uBAQA,kBAAC,IAAD,CAAQ1/C,MAAOmK,EAAf,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,QACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,4DAGJ,kBAAC,IAAMpD,OAAP,OAEF,kBAAC,IAAOsf,KAAR,CAAapnC,MAAM,aACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,yEAGJ,kBAAC,IAAMpD,OAAP,OAEF,kBAAC,IAAOsf,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,mEAC4CwE,EAAK9uB,KADjD,iFAMJ,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,gBACV6zC,KALJ,gCAaN,kBAAC,IAAO96C,KAAR,CAAapnC,MAAM,gBACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,iDA/FP,sC,EA5CE62D,E,yIAsJN,I,IAAMO,EAAoB7sD,aAC/B,SAAArb,GAAK,MAAK,CACRuV,KAAMvV,EAAMmrB,aAAatU,MAAMtvB,SAC/BkwE,aAAcz3D,EAAMmrB,aAAalqB,MAAMsU,KAAK4yD,SAC5Cnd,WAAYttC,YAAoB1d,GAChC0P,YAAawF,YAAsBlV,OAErC,SAAAzS,GAAQ,MAAK,CACXq6E,eAAgB,SAAAJ,GAAQ,OAAIj6E,EAASwoB,YAAoByxD,QAR5BnsD,CAU/BssD,GAEF,SAAS52D,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,QARf,sBAWGllB,I,6FA/KM07E,E,sFAsJAO,E,+FAYJn3D,E,yfCnLIq3D,EAAa,SAAC,GAAkD,IAAhD7yD,EAAgD,EAAhDA,KAAMjG,EAA0C,EAA1CA,WAAYrnB,EAA8B,EAA9BA,SACvCiX,EAAU,CAAEmpE,MADyD,EAApBA,MAC9BC,OADkD,EAAbA,QAG9D,OACE,yBAAKp8E,UAAU,kBAAf,sBACE,wBAAIA,UAAU,kBAAd,sBACGojB,EAAWxiB,KAAI,SAAA4T,GACd,OACE,wBAAIzT,IAAKyT,EAAMzT,IAAKf,UAAU,kBAA9B,sBACE,kBAACq8E,EAAD,CAAWhzD,KAAMA,EAAM44B,UAAWztC,EAAOxB,QAASA,EAASjX,SAAUA,EAArE,8BASdmgF,EAAW97E,UAAY,CACrBipB,KAAMlD,SACN/C,WAAYiO,QACZt1B,SAAU0E,OACV07E,MAAO/1D,OACPg2D,OAAQh2D,QAGH,IAAMi2D,EAAY,SAAC,GAA2C,IAAzChzD,EAAyC,EAAzCA,KAAM44B,EAAmC,EAAnCA,UAAWlmD,EAAwB,EAAxBA,SAAUiX,EAAc,EAAdA,QAC7CjS,EAAuBkhD,EAAvBlhD,IAAKghD,EAAkBE,EAAlBF,QAAS3lD,EAAS6lD,EAAT7lD,KAOtB,OACE,kBAAC,IAAD,CACEspB,UAAA,oBAAsB3kB,GACtBhF,SAAUA,EACVF,MAAOygF,EAAWv7E,GAClBmc,QAAS6kC,EACT/lD,SAZY,YACA+lD,EAAU/uC,EAAQopE,OAASppE,EAAQmpE,OAE3C9yD,EAAMtoB,EAAK3E,IAIjB,wBAUJigF,EAAUj8E,UAAY,CACpBipB,KAAMlD,SACN87B,UAAW/7B,gBAAM,CACfnlB,IAAKolB,SACL/pB,KAAM+pB,SACN47B,QAASthD,SAEX1E,SAAU0E,OACVuS,QAASkT,gBAAM,CACbi2D,MAAO/1D,OACPg2D,OAAQh2D,UAIL,I,IAAMm2D,EAAsBptD,aACjC,SAAArb,GACE,IAAMuV,EAAOqhB,EAAa52B,GAE1B,MAAO,CACLuV,KAAMA,EAAK9uB,KACXwB,SAAyB,SAAfstB,aAAA,EAAAA,EAAM9uB,OAAkBuZ,EAAMmrB,aAAalqB,MAAMqO,WAAWrnB,SACtEqnB,WAAYo5D,EAAcnzD,EAAKozD,sBAGnC,SAAAp7E,GAAQ,MAAK,CACX86E,MAAO,SAAC9yD,EAAMtoB,EAAK3E,GAAZ,OACLiF,EACE+nB,YAAoB,CAClBC,OACAjtB,OACA2E,UAGNq7E,OAAQ,SAAC/yD,EAAMtoB,EAAK3E,GAAZ,OACNiF,EACEkoB,YAAqB,CACnBF,OACAjtB,OACA2E,aAxByBouB,CA4BjC+sD,GAEF,SAASxxC,EAAa52B,GACpB,OAAOA,EAAMmrB,aAAatU,MAAMtvB,SAGlC,SAASmhF,EAAcx6E,GACrB,IAAKA,EAAM,MAAO,GAElB,IACEqhB,EAEErhB,EAFFqhB,UACU0+B,EACR//C,EADF06E,OAAU36B,QAKZ,OAFa5tC,OAAOC,KAAKiP,GAAWre,OAExBwO,QAAO,SAACqE,EAAM9W,GACxB,IAAMkhD,EAAY,CAChBlhD,MAIA3E,KAAMinB,EAAUtiB,GAAK,IAAM,SAC3BghD,UAAWA,EAAQhhD,GAAK3F,QAK1B,OAFAyc,EAAKtP,KAAK05C,GAEHpqC,IACN,IAGL,SAASykE,EAAWK,GAClB,OAAOA,EAAIr1B,OAAO,GAAGC,cAAgBo1B,EAAIz0E,MAAM,I,6FAxHpCg0E,E,qGA0BAG,E,oGAiCAE,E,8GA8BJ7xC,E,uGAIA8xC,E,wGA0BAF,E,ghEC1GIM,EAAa,SAAC,GAAiE,IAA/DvzD,EAA+D,EAA/DA,KAAMI,EAAyD,EAAzDA,OAAQozD,EAAiD,EAAjDA,iBAAkBC,EAA+B,EAA/BA,yBAC3D,IAA0C/iF,mBAAS,IAAnD,GAAO4pC,EAAP,KAAsBo5C,EAAtB,KACA,IAAwChjF,mBAAS,sBAAjD,GAAOijF,EAAP,KAAqBC,EAArB,KACA,IAA4BljF,mBAAS,WAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAAwBjuC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgrB,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,KACP,KAGC6pC,EAAS7tC,uBAAY,WACzB6/D,EAAiBxzD,EAAM,CAACsa,IACrBvO,MAAK,SAAArzB,GACoB,WAApB,EAAOA,IAA2C,SAAlBA,EAAS3F,MAC3C4rC,EAAU,SACVi1C,EAAgBl7E,EAAS6H,WAEzBo+B,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,OAGXwnB,OAAM,WACLR,EAAU,WACVhnB,GAAQ,GACRxO,QAAQgS,IAAI,0CAEf,CAAC6E,EAAMsa,IAEJu5C,EAAkC,KAAnBzzD,aAAA,EAAAA,EAAQruB,SAA8B,WAAdquB,EAAO,GAC9C0zD,EAAkBD,EACpB,2IADgC,+CAEQ7zD,EAFR,uBAE2Bsa,EAF3B,iFAKpC,OACE,oCACE,yBAAK3jC,UAAU,oBAAf,sBACE,kBAAC,IAAD,CAAqBwhB,QAAQ,YAA7B,uBACG,SAAA47D,GAAM,OACL,4BAAQA,EAAR,wBACG3zD,GACCA,EAAO7oB,KAAI,SAAAy8E,GAAU,OACnB,wBAAIr9E,UAAU,kBAAkBe,IAAKs8E,EAArC,sBACE,kBAAC,IAAD,CACExhF,MAAOwhF,EACPthF,SAAmB,QAATstB,EACVlE,OAAQ,CAAEU,SAAU,kBAAC,IAAD,yBACpBljB,OACE,kBAAC,IAAD,CACE8d,QAAS,SAAAxkB,GACPA,EAAEgqB,iBACFhqB,EAAEupB,kBACFu3D,EAAiBM,GACjB/4D,EAAavD,QALjB,sBAQE,0BAAM5gB,EAAGm9E,IAAT,wBAGJ9hF,YAAashF,EAAyBO,GAhBxC,2BAoBN,wBAAIr9E,UAAU,kBAAkBe,IAAI,qBAApC,sBACE,kBAAC,IAAD,8BAMV,kBAAC,IAAD,CAAOggB,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAAC,IAAD,CACEhI,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CACEJ,MAAM,yBACNwD,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAGk5C,KAAT,wBAJN,uBAQA,kBAAC,IAAD,CAAQ1/C,MAAOmK,EAAf,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,uBAAWs4D,KAGf,kBAAC,IAAM17D,OAAP,KACGy7D,GACC,kBAAC,IAAMz7D,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACEzJ,MAAM,UACNoF,QAAS,WACPunB,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,IALZ,iCAYJ,kBAAC,IAAMS,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,YACV6iB,KALJ,sBAQGqyB,EAAe,WAAa,UAKrC,kBAAC,IAAOn8C,KAAR,CAAapnC,MAAM,YACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,yCAIN,kBAAC,IAAOmc,KAAR,CAAapnC,MAAM,SACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,uBAAW0kB,YAAsByzC,KAGnC,kBAAC,IAAMv7D,OAAP,KACE,kBAAC,IAAD,CACEpG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,IANZ,uC,EA9IL47D,E,mPAmKbA,EAAWx8E,UAAY,CACrBipB,KAAMlD,SACNsD,OAAQ4H,QACRwrD,iBAAkBz2D,QAGb,I,IAAMm3D,EAAsBpuD,aACjC,SAAArb,GAAS,MACDuV,EAAOqhB,EAAa52B,GAEpB0pE,EAAa,UAAGn0D,EAAK3F,iBAAR,aAAG,EAAgBpb,QAAO,SAAAiiB,GAAK,MAAc,SAAVA,KAEtD,MAAO,CACLlB,KAAMA,EAAK9uB,KACXkvB,OAAQ+zD,EACRV,yBAA0B,SAAAviF,GAAI,OAAIm8B,YAAoBn8B,EAAMuZ,EAAM2V,OAAOmB,UAG7E,SAAAvpB,GAAQ,MAAK,CACXw7E,iBAAkB,SAACxzD,EAAMI,GAAP,OAAkBpoB,EAASuoB,YAA0B,CAAEP,OAAMI,gBAbhD0F,CAejCytD,GAEF,SAASlyC,EAAa52B,GACpB,OAAOA,EAAMmrB,aAAatU,MAAMtvB,SAGlC,SAASwpB,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,QARf,sBAWGllB,I,6FA3MM68E,E,qGAyKAW,E,8GAiBJ7yC,E,uGAIA7lB,E,45ECvLI44D,EAAiB,SAAC,GAAmE,IAAjEp0D,EAAiE,EAAjEA,KAAMI,EAA2D,EAA3DA,OAAQi0D,EAAmD,EAAnDA,YAAa3oE,EAAsC,EAAtCA,MAAO+nE,EAA+B,EAA/BA,yBACjE,IAAwB/iF,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACA,IAA0CjnB,oBAAS,GAAnD,GAAO4jF,EAAP,KAAsBC,EAAtB,KAMMC,EAAa,WACjB78D,GAAQ,GACR48D,GAAiB,IAGnB,MAAa,QAATv0D,EACK,KAKP,oCACE,yBAAK5D,SAAU,EAAG6jB,KAAK,SAAStpC,UAAU,mBAAmBygB,QAhB/C,WAChBO,GAAQ,IAeN,sBACE,kBAAC,IAAD,CAAYnlB,MAAM,eAAespB,OAAQ,CAAEU,SAAU,kBAAC,IAAD,yBAArD,wBAEF,kBAAC,IAAD,CACEi4D,kBAAgB,+BAChBC,mBAAiB,qCACjBh9D,KAAMA,EACNmsB,QAAS2wC,EACT1wC,sBAAoB,EALtB,sBAOE,yBACE7wB,MAAO,CACL0b,SAAU,WACV/G,IAAK,MACLE,KAAM,MACNk+B,UAAW,wBACX/tC,MAAO,aACPC,OAAQ,cAPZ,sBAUE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CACE4D,OACE,kBAAC,IAAD,CAAQnlB,UAAU,iBAAiB2lB,IAAI,mBAAvC,sBACE,kBAAC,IAAD,yBAGJxE,MAAM,eACN5O,KAAK,wDACL06B,KAAM,CACJ9rB,MAAO,+BACP5O,KAAM,sCAER26B,QAAS2wC,EACTzpC,YAAaupC,EAbf,uBAgBA,kBAAC,IAAM39D,QAAP,CAAe4E,YAAY,GACzB,kBAACo5D,EAAD,CACE30D,KAAMA,EACNhuB,SAAUouB,EACV1U,MAAOA,EACP8oE,WAAYA,EACZI,MAAO,SAAC3C,EAAUjb,GAChB,OAAOqd,EAAYpC,EAAUjb,IAE/Bud,iBAAkBA,EAClBd,yBAA0BA,EAT5B,6B,EA1DDW,E,wFA6EbA,EAAer9E,UAAY,CACzBipB,KAAMlD,SACNsD,OAAQ4H,QACRqsD,YAAat3D,OACbrR,MAAO2D,UAGF,IAAMwlE,EAA0B/uD,aACrC,SAAArb,GACE,IAAMuV,EAAOqhB,EAAa52B,GAE1B,MAAO,CACLuV,KAAMA,EAAK9uB,KACXkvB,OAAQJ,EAAK3F,UACb3O,MAAOjB,EAAMmrB,aAAalqB,MAAMsU,KAChCyzD,yBAA0B,SAAAviF,GAAI,OAAIm8B,YAAoBn8B,EAAMuZ,EAAM2V,OAAOmB,UAG7E,SAAAvpB,GAAQ,MAAK,CACXq8E,YAAa,SAACr0D,EAAMI,GAAP,OAAkBpoB,EAASmoB,YAAqB,CAAEH,OAAMI,aACrEozD,iBAAkB,SAACxzD,EAAMI,GAAP,OAAkBpoB,EAASuoB,YAA0B,CAAEP,OAAMI,gBAb5C0F,CAiBrCsuD,GAEF,SAAS/yC,EAAa52B,GACpB,OAAOA,EAAMmrB,aAAatU,MAAMtvB,SAGlC,I,IAAM2iF,EAAa,SAAC,GAOd,IANJ30D,EAMI,EANJA,KACAhuB,EAKI,EALJA,SACA4iF,EAII,EAJJA,MACAJ,EAGI,EAHJA,WACAD,EAEI,EAFJA,iBACAd,EACI,EADJA,yBAEA,IAA0B/iF,mBAAS,CACjCsmE,WAAY,GACZ7+D,SAAS,EACT2oC,MAAM,EACNvf,IAAK,GACLuzD,SAAS,IALX,GAAOrqE,EAAP,KAAc0vB,EAAd,KAQMzS,EAAW52B,mBAAQ,WACvB,OAAO2Z,EAAMqqE,QACTrqE,EAAM8W,IACHtiB,QAAO,SAAAg5C,GAAC,MAAe,SAAXA,EAAE/mD,QACdyK,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEpO,KAAK4P,cAAcyqB,cAAchsB,EAAErO,KAAK4P,kBAC5D2J,EAAM8W,IACHtiB,QAAO,SAAAg5C,GAAC,OAAIjmD,IAAaA,EAASkT,SAAS+yC,EAAE/mD,OAAoB,SAAX+mD,EAAE/mD,QACxDyK,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEpO,KAAK4P,cAAcyqB,cAAchsB,EAAErO,KAAK4P,oBAC/D,CAAC2J,EAAM8W,IAAK9W,EAAMqqE,QAAS9iF,IA2B9B,OAzBAR,qBAAU,WACR4G,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUuoB,OAAQ,CAAEroB,UAAW,aAC1DszB,MAAK,SAAArzB,GACJ,IAAMC,EAAOD,EAASC,KAAKA,KAAKynB,OAEhC+Z,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAM5oB,EACZqd,EAAM8qB,MAAO,EACb9qB,EAAM7d,SAAU,WAIrBgnC,OAAM,SAAAnsC,GACLmnC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAM,GACZvL,EAAMhjB,MAAQA,EACdgjB,EAAM8qB,MAAO,EACb9qB,EAAM7d,SAAU,aAIvB,IAECsS,EAAMtS,QACD,kBAAC,IAAD,qCAGLsS,EAAMq2B,OAASr2B,EAAM8W,IAAIxvB,OACpB,8EAGL0Y,EAAMpU,QAEN,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQtD,KAAK,UAAb,sBACE,kBAAC,IAAO/C,KAAR,gDAIJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAD,CACED,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACPo9D,KAJJ,mCAcJ/pE,EAAMlU,KAEN,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQxD,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,KAAckwC,YAAsBz1B,EAAMlU,SAI9C,kBAAC,IAAM6hB,OAAP,KACE,kBAAC,IAAD,CACED,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACPo9D,KAJJ,iCAeN,oCACE,kBAAC,IAAM79D,QAAP,KACE,yBAAKhgB,UAAU,2BAAf,sBACE,kBAAC,IAAD,CACEswB,MAAOS,EACPzoB,OAAQ,SAACV,EAAMkK,GAAP,OAAiBlK,EAAKrN,KAAK4P,cAAcoE,SAASuD,EAAM3H,gBAChEqX,QAAQ,MACR+O,eAAa,EAJf,uBAMG,SAAA/b,GACC,OACE,yBAAKxU,UAAU,YAAYsc,MAAO,CAAEgF,MAAO,SAA3C,sBACE,kBAAC,IAAD,CACEb,QAAS,WACP+iB,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZ,IAAMghD,EAAa,IAAI16B,IAAIlyB,EAAK4sD,YAE5BA,EAAWlB,IAAI3qD,EAAMja,MACvB8lE,EAAWv1C,OAAOtW,EAAMja,MAExB8lE,EAAWxqC,IAAIrhB,EAAMja,MAGvB8kB,EAAMghD,WAAN,EAAuBA,SAG3Bud,GAAiB,IAEnB7hF,WAAU+X,EAAMqqE,SAAU9iF,EAASkT,SAASiG,EAAMja,MAClDc,SAAUyY,EAAMusD,WAAW9xD,SAASiG,EAAMja,MAC1CsB,MAAO2Y,EAAMja,KACb4qB,OAAQ,CAAEU,SAAU,kBAAC,IAAD,yBACpBrqB,YAAashF,EAAyBtoE,EAAMja,MArB9C,6BA6BZ,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACE5H,QAASpJ,EAAMqqE,QACfvnC,QAAS,kBAAMpT,GAAS,SAAA/vB,GAAI,YAAUA,EAAV,CAAgB0qE,SAAU1qE,EAAK0qE,cAC3DtiF,MAAM,yCAHR,wBAMF,kBAAC,IAAM4lB,OAAOC,MAAd,KACE,kBAAC,IAAD,CACE3lB,UAAW+X,EAAMusD,WAAWjlE,OAC5BomB,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACP+iB,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAM7d,SAAU,QAIpBy8E,EAAM50D,EAAMvV,EAAMusD,YACfjrC,MAAK,SAAArzB,GACoB,WAApB,EAAOA,IAA2C,SAAlBA,EAAS3F,KAC3ConC,EACEpkB,YAAQtL,GAAO,SAAAuL,GACbA,EAAMzf,KAAOmC,EAAS6H,YAI1B45B,EACEpkB,YAAQtL,GAAO,SAAAuL,GACbA,EAAM3f,SAAU,SAKvB8oC,OAAM,SAAA41C,GACL56C,EACEpkB,YAAQtL,GAAO,SAAAuL,GACbA,EAAMzf,KAAOw+E,UA9BzB,iC,EA9JJJ,E,oKA0MNA,EAAW59E,UAAY,CACrBipB,KAAMlD,SACN9qB,SAAUg2B,QACV4sD,MAAO73D,OACPy3D,WAAYz3D,S,6FAzTDq3D,E,6GAoFAS,E,sHAmBJxzC,E,2GAIHszC,E,2xDClHOK,EAAkB,SAAC,GAAa,IAAXh1D,EAAW,EAAXA,KAChC,IAAwBtvB,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAIN4lB,EAAUC,mBAEhB,OACE,oCACE,kBAAC,IAAD,CAAQxrB,MAAM,UAAUoF,QAAS6D,EAAavD,MAA9C,gBAGA,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC,IAAD,CACEhI,MAAO,CACLgF,MAAO,QACP1F,SAAU,QACV6f,UAAW,UAGb,kBAAC,IAAD,CACEtW,OACE,kBAAC,IAAD,CAAQnlB,UAAU,iBAAiB2lB,IAAI,qBACrC,kBAAC,IAAD,OAGJxE,MAAM,eACN6lB,UAAWJ,IAEb,kBAAC03C,EAAD,CAAiBj1D,KAAMA,EAAM/E,aAAcA,EAAcsiB,QAASA,Q,EAnC/Dy3C,E,qDA0CbA,EAAgBj+E,UAAY,CAC1BipB,KAAM3Q,UAGD,IAAM6lE,EAA2BpvD,aACtC,SAAArb,GAGE,MAAO,CAAEuV,KAFIqhB,EAAa52B,OAI5B,iBAAO,KAN+Bqb,CAOtCkvD,GAEF,SAAS3zC,EAAa52B,GACpB,OAAOA,EAAMmrB,aAAatU,MAAMtvB,SAG3B,I,IAAMijF,EAAkB,SAAC,GAAoC,IAAlCj1D,EAAkC,EAAlCA,KAAM/E,EAA4B,EAA5BA,aAAcsiB,EAAc,EAAdA,QACpD,IAA0B7sC,mBAAS,CAAEykF,kBAActjF,IAAnD,GAAO4Y,EAAP,KAAc0vB,EAAd,KAEA,GAA2B,YAAvB1vB,EAAM0qE,aACR,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQpiF,KAAK,WACX,kBAAC,IAAO/C,KAAR,gCAGJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAMrD,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAQF,QAAQ,YAAYnG,MAAM,UAAUoF,QAAS6D,EAAaC,OAAlE,WASV,GAA2B,SAAvBzQ,EAAM0qE,aACR,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQpiF,KAAK,QACX,kBAAC,IAAO/C,KAAR,yCAGJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAMrD,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEF,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACP+iB,GAAS,SAAA/vB,GAAI,YAAUA,EAAV,CAAgB+qE,kBAActjF,SAJ/C,YAeV,IAAM8vB,EAAgB,CACpBxvB,YAAa6tB,EAAK7tB,aAGpB,OACE,oCACE,kBAAC,IAAD,CACEgzC,kBAAkB,EAClBxjB,cAAeA,EACfqf,SAAU,SAAC15B,EAAQqC,GACbgE,IAAEynE,QAAQzzD,EAAera,KAC3BqC,EAAQs3B,eAAc,GACtBhmB,EAAaC,SAQf9iB,IAAW6nB,MAAX,UAAoBnwB,IAAUwI,KAAKC,UAAUsnB,MAA7C,YAAsDG,EAAK9uB,MAAQ,CACjEiB,YAAamV,EAAOnV,cAEnB45B,MAAK,WACJoO,GAAS,SAAA/vB,GAAI,YAAUA,EAAV,CAAgB+qE,aAAc,kBAE5Ch2C,OAAM,WACLx1B,EAAQs3B,eAAc,GAEtB9G,GAAS,SAAA/vB,GAAI,YAAUA,EAAV,CAAgB+qE,aAAc,gBAGjDj0C,SAAU3D,IAET,gBAAGviB,EAAH,EAAGA,MAAOF,EAAV,EAAUA,aAAcD,EAAxB,EAAwBA,WAAxB,OACC,oCACE,kBAAC,IAAMlE,QAAP,CAAe4E,YAAU,GACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAc85D,QAASr1D,EAAKs1D,aAAcC,QAASv1D,EAAKw1D,eACxD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOtkF,KAAK,gBACT,YAAqB,IAAlBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,kBAAC,IAAD,KACMD,EADN,CAEE4B,KAAK,OACLC,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,QAAUG,EAAK4B,WAAQnB,EACxCW,MAAM,6BAQpB,kBAAC,IAAM4lB,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,OAEF,kBAAC,IAAMrD,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEF,QAAQ,YACRnG,MAAM,UACNtf,UAAWsoB,GAASF,EACpB1D,QAASyD,GAJX,gB,EAlHHo6D,E,4DAmIbA,EAAgBl+E,UAAY,CAC1BipB,KAAM3Q,SACN4L,aAAc5L,W,6FAhMH2lE,E,+GA8CAE,E,wHASJ7zC,E,4GAII4zC,E,whBCzEAQ,EAAe,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAASE,EAAZ,EAAYA,QAAZ,OAC1B,yBAAK5+E,UAAU,YAAf,sBACG0+E,GAAW,kBAACK,EAAD,CAAanhF,KAAM8gF,EAAnB,uBACXE,GAAW,kBAACI,EAAD,CAAaphF,KAAMghF,EAAnB,yBAIhBE,EAAa1+E,UAAY,CAAEs+E,QAASv4D,SAAQy4D,QAASz4D,UAE9C,IAAM44D,EAAc,SAAC,GAAD,IAAGnhF,EAAH,EAAGA,KAAH,OACzB,yBAAKoC,UAAU,aAAf,sBACE,kBAAC,IAAD,CAASE,SAAS,QAAlB,sBACE,0BAAMC,EAAG8+E,IAAT,wBAEF,+DACA,0BAAMj/E,UAAU,YAAhB,sBAA6Bk/E,EAAUthF,MAI3CmhF,EAAY3+E,UAAY,CAAExC,KAAMuoB,UAEzB,I,IAAM64D,EAAc,SAAC,GAAD,IAAGphF,EAAH,EAAGA,KAAH,OACzB,yBAAKoC,UAAU,aAAf,sBACE,kBAAC,IAAD,CAASE,SAAS,QAAlB,sBACE,0BAAMC,EAAGg/E,IAAT,wBAEF,+DACA,0BAAMn/E,UAAU,YAAhB,sBAA6Bk/E,EAAUthF,MAM3C,SAASshF,EAAUthF,GACjB,OAAOT,IAAOS,GAAMR,OAAO,eAH7B4hF,EAAY5+E,UAAY,CAAExC,KAAMuoB,W,6FA/BnB24D,E,yGASAC,E,wGAYAC,E,wGAYJE,E,o/KCnBIE,aAAe,SAAC,GAAa,IAAX/1D,EAAW,EAAXA,KAC7B,iBAAwBtvB,qDAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAIN4lB,EAAUC,oDAEhB,OACE,sHACE,2DAAC,2DAAD,CAAQxrB,MAAM,UAAUoF,QAAS6D,EAAavD,MAA9C,gBAGA,2DAAC,2DAAD,CAAOA,KAAMA,EAAM/N,QAASsR,GAC1B,2DAAC,yDAAD,CACEhI,MAAO,CACLgF,MAAO,QACP1F,SAAU,QACV6f,UAAW,UAGb,2DAAC,2DAAD,CACEtW,OACE,2DAAC,wDAAD,CAAQnlB,UAAU,iBAAiB2lB,IAAI,oBACrC,2DAAC,mEAAD,OAGJxE,MAAM,sBACN6lB,UAAWJ,IAEb,2DAACy4C,aAAD,CAAch2D,KAAMA,EAAM/E,aAAcA,EAAcsiB,QAASA,Q,cAnC5Dw4C,a,qDA0CbA,aAAah/E,UAAY,CACvBipB,KAAM3Q,gDAGD,IAAM4mE,sBAAwBnwD,oDACnC,SAAArb,GAGE,MAAO,CAAEuV,KAFIqhB,aAAa52B,OAI5B,iBAAO,KAN4Bqb,CAOnCiwD,cAEF,SAAS10C,aAAa52B,GACpB,OAAOA,EAAMmrB,aAAatU,MAAMtvB,SAG3B,IAAMgkF,aAAe,SAAC,GAAoC,IAAlCh2D,EAAkC,EAAlCA,KAAM/E,EAA4B,EAA5BA,aAAcsiB,EAAc,EAAdA,QACjD,iBAA0B7sC,oDAAS,CAAEyH,SAAS,IAA9C,GAAOsS,EAAP,KAAc0vB,EAAd,KA8BA,GA5BA3oC,sDAAU,WACR,IAAM0kF,EAAe,GAAH,OAAMpmF,sCAAUwI,KAAKC,UAAU2nE,KAA/B,yBAAoDlgD,EAAK9uB,KAAzD,0BAGlBkH,+CAAWC,IAFe,oDAEQ0zB,MAAK,SAAAoqD,GACrC,IAAM18C,EAAQ08C,EAAUx9E,KAAKA,KAAK+1B,WAAW,GAE7Ct2B,+CAAWC,IAAI69E,GACZnqD,MAAK,SAAAqqD,GACJj8C,EAAS,CACPhiC,SAAS,EACTsC,OAAQ,UACRwmD,QAAQ,EACRtoD,KAAMy9E,EAASz9E,KAAKA,KAAKo4B,MAAM,GAC/B0I,aAGH0F,OAAM,WACLhF,EAAS,CACPhiC,SAAS,EACTsC,OAAQ,UACRwmD,QAAQ,EACRxnB,kBAIP,IAEChvB,EAAMtS,QACR,OACE,sHACE,2DAAC,kDAAD,KACE,2DAAC,0DAAD,OAEF,2DAAC,yDAAMigB,OAAP,OAKN,GAA2B,YAAvB3N,EAAM0qE,aACR,OACE,sHACE,2DAAC,kDAAD,KACE,2DAAC,2DAAD,CAAQpiF,KAAK,WACX,2DAAC,2DAAO/C,KAAR,oCAGJ,2DAAC,yDAAMooB,OAAP,KACE,2DAAC,yDAAMA,OAAOC,MAAd,KACE,2DAAC,2DAAD,CAAQF,QAAQ,YAAYnG,MAAM,UAAUoF,QAAS6D,EAAaC,OAAlE,WASV,GAA2B,SAAvBzQ,EAAM0qE,aACR,OACE,sHACE,2DAAC,kDAAD,KACE,2DAAC,2DAAD,CAAQpiF,KAAK,QACX,2DAAC,2DAAO/C,KAAR,6CAGJ,2DAAC,yDAAMooB,OAAP,KACE,2DAAC,yDAAMA,OAAOqD,KAAd,KACE,2DAAC,2DAAD,CAAQzJ,MAAM,UAAUoF,QAAS6D,EAAaC,OAA9C,WAIF,2DAAC,yDAAM9C,OAAOC,MAAd,KACE,2DAAC,2DAAD,CACEF,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACP+iB,GAAS,SAAA/vB,GAAI,mBAAUA,EAAV,CAAgB+qE,kBAActjF,SAJ/C,YAeV,GAAqB,YAAjB4Y,EAAMhQ,OAAsB,CAC9B,MAA2B47E,cAAc5rE,EAAMgvB,MAAOhvB,EAAM9R,MAApD+rC,EAAR,EAAQA,OAAQp9B,EAAhB,EAAgBA,OAEhB,OACE,sHACE,2DAAC,sCAAD,CACE69B,kBAAkB,EAClBxjB,cAAera,EACf05B,SAAU,SAACs1C,EAAU3sE,GACfgE,8CAAEynE,QAAQ9tE,EAAQgvE,KACpB3sE,EAAQs3B,eAAc,GACtBhmB,EAAaC,SAGf,IAAMq7D,EAAgB7xC,EAAOv6B,QAAO,SAACrT,EAAGqU,GAEtC,IAAI7a,EAAQgmF,EAASnrE,EAAMja,OAAS,KAcpC,OATIia,EAAMsxB,gBAAkBphC,MAAMC,QAAQhL,KACxCA,EAAQ,CAACA,IAGXwG,EAAEoI,KAAK,CACLhO,KAAMia,EAAM3Y,MACZlC,UAGKwG,IACN,IAMGo/E,EAAe,GAAH,OAAMpmF,sCAAUwI,KAAKC,UAAU2nE,KAA/B,yBAAoDlgD,EAAK9uB,KAAzD,0BAElB,GAAIuZ,EAAMw2C,OAAQ,CAChB,IAAMtiC,EAAO,CACXztB,KAAM,gBAAF,OAAkB8uB,EAAK9uB,KAAvB,0BACJiB,YAAa,wBAAF,OAA0B6tB,EAAK9uB,MAC1CoW,OAAQivE,EACR9gE,UAAWhL,EAAMgvB,MAAMvoC,MAGzBkH,+CAAWwmB,KAAX,UAAmB9uB,sCAAUwI,KAAKC,UAAU2nE,MAAQvhD,GACjDoN,MAAK,WACJoO,GAAS,SAAA/vB,GAAI,mBAAUA,EAAV,CAAgB+qE,aAAc,kBAE5Ch2C,OAAM,WACLx1B,EAAQs3B,eAAc,GAEtB9G,GAAS,SAAA/vB,GAAI,mBAAUA,EAAV,CAAgB+qE,aAAc,oBAG/C/8E,+CAAW6nB,MAAMi2D,EAAc,CAC7B/jF,YAAasY,EAAM9R,KAAKxG,YACxB6zC,OAAQv7B,EAAM9R,KAAKzH,KACnBoW,OAAQivE,IAEPxqD,MAAK,WACJoO,GAAS,SAAA/vB,GAAI,mBAAUA,EAAV,CAAgB+qE,aAAc,kBAE5Ch2C,OAAM,WACLx1B,EAAQs3B,eAAc,GAEtB9G,GAAS,SAAA/vB,GAAI,mBAAUA,EAAV,CAAgB+qE,aAAc,gBAInDj0C,SAAU3D,IAET,gBAAGviB,EAAH,EAAGA,MAAOF,EAAV,EAAUA,aAAcD,EAAxB,EAAwBA,WAAxB,OACC,sHACE,2DAAC,yDAAMlE,QAAP,CAAe4E,YAAU,GACvB,2DAAC,sCAAD,CAAMtI,MAAO,CAAE8jD,WAAY,SACxBryB,EAAOntC,KAAI,SAAA4T,GAAK,OACf,2DAAC,yDAAD,CAAKzT,IAAKyT,EAAMja,MACd,2DAACslF,YAAD,CAAa50D,UAAWzW,UAKhC,2DAAC,yDAAMiN,OAAP,KACE,2DAAC,yDAAMA,OAAOqD,KAAd,KACE,2DAAC,2DAAD,CAAQzJ,MAAM,UAAUoF,QAAS6D,EAAaC,OAA9C,WAIF,2DAAC,yDAAM9C,OAAOC,MAAd,KACE,2DAAC,2DAAD,CACEF,QAAQ,YACRnG,MAAM,UACNtf,UAAWsoB,GAASF,EACpB1D,QAASyD,GAJX,iBAkBlB,SAASw7D,cAAc58C,EAAOvc,GAC5B,IAAQwnB,EAAWjL,EAAXiL,OACF/rC,EAAOukB,GAAYA,EAAS5V,OAElC,OAAOo9B,EAAOv6B,QACZ,SAACssE,EAAMtrE,EAAO1T,GACZ,IAAMuhC,EAAa7tB,EAAMja,KAAKqmB,QAAQ,IAAK,KACrCjnB,EAAQqI,GAAQA,EAAKlB,GAAOnH,MAiBlC,OAfI6a,EAAMsxB,eAAiBphC,MAAMC,QAAQ6P,EAAM7a,OAI7CmmF,EAAKnvE,OAAO0xB,GAAc1oC,EAAQA,EAAM,GAAK,GAE7CmmF,EAAKnvE,OAAO0xB,GAAc1oC,GAAS,GAGrCmmF,EAAK/xC,OAAOxlC,KAAZ,YACKiM,EADL,CAEEja,KAAM8nC,EACNxmC,MAAO2Y,EAAMja,QAGRulF,IAET,CAAEnvE,OAAQ,GAAIo9B,OAAQ,K,cAnObsxC,a,+DAuON,IAAM7lD,UAAY,SAAC,GAA2C,IAAzCvO,EAAyC,EAAzCA,UAepBxxB,EAf6D,EAA9BA,UACX,SAAAE,GACxB,IAAMw1E,EAAS1oD,qCAEXwE,EAAUG,aACZ+jD,EAAOv1E,SAAS,qBAGlB,IACEu1E,EAAOtoD,aAAaltB,GACpB,MAAOsC,GACP,OAAOA,EAAE2N,UAMb,OACE,2DAAC,sCAAD,CAAOrP,KAAM0wB,EAAU1wB,KAAMd,SAAUA,IACpC,YAAqB,IAAlBe,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,2DAAC,2DAAD,YACMD,EADN,CAEE4B,KAAK,OACLC,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,QAAUG,EAAK4B,WAAQnB,EACxCtB,SAAUqxB,EAAUG,YACpBvvB,MAAOovB,EAAUpvB,aAQ7B29B,UAAUp5B,UAAY,CACpB6qB,UAAWvS,+CACXjf,SAAU2sB,8CAGL,IAAM25D,WAAa,SAAC,GAA2C,IAAzC90D,EAAyC,EAAzCA,UAiBrBxxB,EAjB8D,EAA9BA,UACZ,SAAAE,GACxB,IAAIw1E,EAAS1oD,qCAAa/pB,MAAM,8BAE5BuuB,EAAUG,cACZ+jD,EAASA,EAAOv1E,SAAS,sBAG3Bu1E,EAASA,EAAOzyE,MAAM,uCAEtB,IACEyyE,EAAOtoD,aAAaltB,GACpB,MAAOsC,GACP,OAAOA,EAAE2N,UAMb,OACE,2DAAC,sCAAD,CAAOrP,KAAM0wB,EAAU1wB,KAAMd,SAAUA,IACpC,YAAqB,IAAlBe,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,2DAAC,2DAAD,YACMD,EADN,CAEE4B,KAAK,OACLC,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,QAAUG,EAAK4B,WAAQnB,EACxCtB,SAAUqxB,EAAUG,YACpBvvB,MAAOovB,EAAUpvB,aAQ7BkkF,WAAW3/E,UAAY,CACrB6qB,UAAWvS,+CACXjf,SAAU2sB,8CAGL,IAAM45D,iBAAmB,SAAC,GAAkB,IAAhB/0D,EAAgB,EAAhBA,UAsBjC,OACE,2DAAC,sCAAD,CAAO1wB,KAAM0wB,EAAU1wB,KAAMd,SAtBd,SAAAE,GACf,IAAIw1E,EAAS1oD,qCAETwE,EAAUG,cACZ+jD,EAASA,EAAOv1E,SAAS,sBAG3Bu1E,EAASA,EACN8Q,cACAl5D,QAAQ,4EAA6E,CACpFC,oBAAoB,EACpBpd,QAAS,2DAGb,IACEulE,EAAOtoD,aAAaltB,GACpB,MAAOsC,GACP,OAAOA,EAAE2N,YAMR,YAAqB,IAAlBpP,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACT,OACE,2DAAC,2DAAD,YACMD,EADN,CAEE4B,KAAK,OACLC,MAAO5B,EAAK4B,OAAS5B,EAAKH,QAC1BgC,WAAY7B,EAAKH,QAAUG,EAAK4B,WAAQnB,EACxCtB,SAAUqxB,EAAUG,YACpBvvB,MAAOovB,EAAUpvB,aAQ7BmkF,iBAAiB5/E,UAAY,CAC3B6qB,UAAWvS,gDAGb,IAAMwnE,YAAc,CAClB/5D,OAAQqT,UACR,2BAA4BwmD,iBAC5B,4BAA6BD,YAGlBF,YAAb,kQACE,WACE,IAAMM,EAAiB93D,KAAK+3D,eAE5B,OAAO,sHAAGD,GAAkB,2DAACA,EAAmB93D,KAAKvuB,UAJzD,0BAOE,WACE,IACQq+B,EADc9P,KAAKvuB,MAAnBmxB,UACAkN,UAER,OAAO+nD,YAAY/nD,KAXvB,wIAAiC3B,6CAAMC,e,2BAevCopD,YAAYz/E,UAAY,CACtB6qB,UAAWvS,gD,qIAtbA0mE,a,sHA8CAE,sB,+HASJ50C,a,sHAII20C,a,sHAyMJK,c,uHA8BIlmD,U,mHAwCAumD,W,oHA0CAC,iB,0HA4CPE,Y,qHAMOL,Y,+oBC5aAQ,EAAW,SAAC,GAAmB,MAAjBnoC,EAAiB,EAAjBA,KAAM7uB,EAAW,EAAXA,KACvBk0C,EAAaqE,cAAbrE,SACAhjE,EAAc8uB,EAAd9uB,KAAMqrB,EAAQyD,EAARzD,IACRg2D,EAA+B,QAApBvyD,aAAA,EAAAA,EAAM3F,YAAkD,KAA5B2F,SAAA,UAAAA,EAAM3F,iBAAN,eAAiBtoB,QAC9D,OACE,kBAAC,IAAD,CACEirD,GAAInO,EACJl4C,UAAWC,IAAW,YAAa,CAAE5E,SAAUkiE,EAAS+iB,SAAT,WAAsB/lF,MACrEmrB,UAAA,uBAAyBnrB,GAH3B,sBAKE,kBAAC,IAAD,CAAQyF,UAAU,cAAc2lB,IAAKprB,EAAMqrB,IAAKA,EAAhD,sBACGyD,EAAK9uB,KAAK,GAAGgtD,eAEhB,0BAAMvnD,UAAWC,IAAW,YAAa,CAAEsgF,UAAW3E,IAAtD,sBAAoErhF,GACnEqhF,GACC,kBAAC,IAAD,CAAc71D,UAAU,SAAS5E,MAAM,mBAAvC,sBACE,kBAAC,IAAD,CAASnhB,UAAU,mBAAnB,sBACE,kBAAC,IAAD,CAAMmH,KAAMq5E,IAAZ,2B,EAjBCH,E,+CACUze,QAwBvBye,EAASjgF,UAAY,CACnB83C,KAAM/xB,SACNkD,KAAM3Q,W,4FA3BK2nE,E,wdCZAI,EAAqB,kBAChC,kBAAC,IAAD,KACE,kBAAC,IAAM3gE,OAAP,KACE,kBAAC,IAAMC,MAAP,qBAEF,kBAAC,IAAMC,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQD,MAAT,+E,4FAPK0gE,E,w2DCgBPt1D,EAAmB1E,MAAaP,MAAM,CAC1C6D,SAAUtD,MACPi6D,IAAI,EAAG,kBACP9mF,SAAS,wBACZowB,SAAUvD,MAAa7sB,SAAS,wBAChC+mF,gBAAiBl6D,MACd7sB,SAAS,0CACTyG,MAAM,CAAComB,IAAQ,YAAa,MAAO,0BACtCgD,OAAQhD,QAGJm6D,EAAgB,SAAC,GAA6D,IAA3DC,EAA2D,EAA3DA,iBAAkBn3D,EAAyC,EAAzCA,SAAUozD,EAA+B,EAA/BA,yBAC7C9xB,EAAU81B,cACV7gD,EAAW2hC,cAEjB,IAAkC7nE,mBAAS,CAAEowC,MAAM,IAAnD,GAAO42C,EAAP,KAAkBC,EAAlB,KA+CA,GAAID,EAAU52C,KAAM,CAElB,GAAyB,YAArB42C,EAAUj9E,OACZ,OACE,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAMkc,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQxoB,KAAM2kF,EAAUj9E,OAAxB,sBACE,kBAAC,IAAOzK,KAAR,qCAIN,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAD,CAAQ4kC,GAAG,6BAA6BtT,UAAWmwB,IAAnD,uCASV,IAAI8Z,EAAe,4BACnB,GACuB,SAArB+D,EAAUj9E,QACVi9E,EAAU1kF,OACV0kF,EAAU1kF,MAAM,IAChB0kF,EAAU1kF,MAAM,GAAG2E,MACnB+/E,EAAU1kF,MAAM,GAAG2E,KAAKC,MAAM,MAAM7F,OAAS,EAE5C4hF,EADD,EACiB+D,EAAU1kF,MAAM,GAAG2E,KAAKC,MAAM,MAD/C,MAIF,OACE,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAM+e,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQxoB,KAAM2kF,EAAUj9E,OAAxB,sBACE,kBAAC,IAAOzK,KAAR,KAAc2jF,MAIpB,kBAAC,IAAMv7D,OAAP,KACE,kBAAC,IAAD,CACEpG,MAAM,UACNoF,QAAS,WACPugE,EAAa,CAAE72C,MAAM,EAAOrmC,YAAQ5I,KAHxC,kCAcV,OACE,kBAAC,IAAD,CACE8vB,cAAe,CACbjB,SAAU,GACVC,SAAU,GACV22D,gBAAiB,GACjBnlF,YAAa,GACbiuB,OAAQ,IAEV0B,iBAAkBA,EAClB1xB,SAlHqB,SAAAkX,GACvB,IAAM6qB,EAAS,KAGZ,2BAA2Brd,KAAKxN,EAAOoZ,WACvCpZ,EAAOoZ,UAA2C,MAA/BpZ,EAAOoZ,SAASlb,QAAQ,MAE5C2sB,EAAOzR,SAAW,4BAGpB,IAAIk3D,GAAS,EAgCb,OA9BAv3D,EAAS9oB,KAAI,SAAAyoB,GACX,IAAI43D,EAKJ,OAHI53D,EAAK9uB,OAASoW,EAAOoZ,WACvBk3D,GAAS,GAEJ,QAGLA,IACFzlD,EAAOzR,SAAW,wCAGhBpZ,EAAOqZ,WACL,aAAa7L,KAAKxN,EAAOqZ,UAC3BwR,EAAOxR,SAAW,gDACTrZ,EAAOqZ,SAAS5uB,OAAS,EAClCogC,EAAOxR,SAAW,kDACR,QAAQ7L,KAAKxN,EAAOqZ,UAEpB,QAAQ7L,KAAKxN,EAAOqZ,UAEpB,QAAQ7L,KAAKxN,EAAOqZ,UAEpB,4BAA4B7L,KAAKxN,EAAOqZ,YAClDwR,EAAOxR,SACL,+FAHFwR,EAAOxR,SAAW,mEAFlBwR,EAAOxR,SAAW,mEAFlBwR,EAAOxR,SAAW,oEAWfwR,GAyEL6O,SAAQ,e,EAAA,G,EAAA,yBAAE,WAAM15B,GAAN,+GAEekwE,EAAiBlwE,GAFhC,OAIgB,aAFhB7M,EAFA,QAIKA,QACTknD,EAAQziD,KAAK03B,EAASs9B,SAAS38C,QAAQ,aAAcjQ,EAAOoZ,WAGxC,SAAlBjmB,EAAOA,QACTk9E,EAAa,CACX72C,MAAM,EACNrmC,OAAQ,OACRzH,MAAOyH,EAAOnD,WAZZ,gDAgBNqgF,EAAa,CACX72C,MAAM,EACNrmC,OAAQ,OACRzH,MAAK,OAAE,EAAF,yBAAE,KAAOsE,WAnBV,wD,+KAAF,sDAVV,uBAkCG,gBAAGgQ,EAAH,EAAGA,OAAQwT,EAAX,EAAWA,aAAcnZ,EAAzB,EAAyBA,QAAzB,OACC,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMhL,UAAU,uBAAhB,sBACE,kBAAC,IAAM+f,MAAP,iBACA,kBAAC,IAAMC,QAAP,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAQD,MAAT,qBACA,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQ1D,MAAO,CAAEV,SAAU,QAAS27C,QAAS,IAAK2pB,YAAa,QAA/D,sBACE,kBAAC,IAAD,CAAO3mF,KAAK,WAAZ,uBACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,kBAAC,IAAD,GACEb,UAAQ,GACJY,EAFN,CAGEqB,MAAM,WACN49B,YAAY,WACZp9B,QAAS5B,EAAK4B,MACdC,WAAY7B,EAAK4B,MANnB,4BAYN,kBAAC,IAAD,CAAQigB,MAAO,CAAEV,SAAU,SAA3B,sBACE,kBAAC,IAAD,CAAOrhB,KAAK,cAAZ,uBACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,kBAAC,IAAD,KACMD,EADN,CAEEqB,MAAM,oBACN49B,YAAY,oBACZp9B,QAAS5B,EAAK4B,MACdC,WAAY7B,EAAK4B,MALnB,6BAWR,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQigB,MAAO,CAAEV,SAAU,QAAS27C,QAAS,IAAK2pB,YAAa,QAA/D,sBACE,kBAAC,IAAD,CAAO3mF,KAAK,WAAZ,uBACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,kBAAC,IAAD,GACEb,UAAQ,GACJY,EAFN,CAGEqB,MAAM,WACN49B,YAAY,WACZr9B,KAAK,WACLC,QAAS5B,EAAK4B,MACdC,WAAY7B,EAAK4B,MAPnB,4BAYN,kBAAC,IAAD,CAAQigB,MAAO,CAAEV,SAAU,SAA3B,sBACE,kBAAC,IAAD,CAAOrhB,KAAK,kBAAZ,uBACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,kBAAC,IAAD,KACMD,EADN,CAEE0xD,aAAa,MACbtyD,UAAQ,EACRiC,MAAM,mBACN49B,YAAY,oBACZr9B,KAAK,WACLC,QAAS5B,EAAK4B,MACdC,WAAY7B,EAAK4B,MARnB,+BAgBZ,kBAAC,IAAD,CAASg9D,MAAI,EAAb,sBACE,kBAAC,IAAQt5C,MAAT,yBACA,kBAAC,IAAD,CAAYxlB,KAAK,SAAjB,uBACG,SAAAG,GAAO,OACN,kBAAC,IAAD,CACE+uB,OAAQ9Y,EAAO8Y,OACf/uB,QAASA,EACToiF,yBAA0BA,EAH5B,4BAUR,kBAAC,IAAMr7D,OAAP,KACE,yBAAKzhB,UAAU,mBAAf,sBACE,kBAAC,IAAD,CAAQqmD,GAAG,6BAA6BhrC,MAAM,UAA9C,iCAKF,kBAAC,IAAD,CAAQjf,KAAK,SAASolB,QAAQ,YAAYzlB,SAAUooB,IAAiBnZ,EAArE,qC,EA/OR41E,E,sHACYE,IACClf,QAwPnBgf,EAAcxgF,UAAY,CAAEygF,iBAAkBz6D,QAEvC,I,IAAM+6D,EAAoBhyD,aAC/B,SAAArb,GAAK,MAAK,CACR4V,SAAU5V,EAAMmrB,aAAatU,MAAMC,IACnCkyD,yBAA0B,SAAAviF,GAAI,OAAIm8B,YAAoBn8B,EAAMuZ,EAAM2V,OAAOmB,UAE3E,SAAAvpB,GAAQ,MAAK,CACXw/E,iBAAkB,SAAAlwE,GAAM,OAAItP,EAASyoB,YAAgBnZ,QANxBwe,CAQ/ByxD,I,6FA/QIz1D,E,wGAWAy1D,E,qGA4POO,E,gwBC9QAC,EAAgB,SAAC,GAAkD,IAAhD33D,EAAgD,EAAhDA,OAAQ/uB,EAAwC,EAAxCA,QAASoiF,EAA+B,EAA/BA,yBAC/C,OACE,kBAAC,IAAD,CAAqBt7D,QAAQ,YAA7B,uBACG,SAAA47D,GAAM,OACL,4BAAQA,EAAR,wBACG3zD,EAAO7oB,KAAI,SAAAy8E,GAAU,OACpB,wBAAIr9E,UAAU,kBAAkBe,IAAKs8E,EAArC,sBACE,kBAAC,IAAD,CACExhF,MAAOwhF,EACPl4D,OAAQ,CAAEU,SAAU,kBAAC,IAAD,yBACpBljB,OACE,kBAAC,IAAD,CACE8d,QAAS,SAAAxkB,GACPA,EAAEgqB,iBACFhqB,EAAEupB,kBAEF,IAAM67D,EAAW53D,EAAO/Y,QAAQ2sE,IAEd,IAAdgE,GACF3mF,EAAQmwD,OAAOw2B,IARrB,sBAYE,0BAAMlhF,EAAGm9E,IAAT,wBAGJ9hF,YAAashF,EAAyBO,GAnBxC,2BAuBJ,wBAAIr9E,UAAU,kBAAkBe,IAAI,qBAApC,sBACE,kBAAC,IAAD,CACE1F,SAAUouB,EACV/uB,QAASA,EACToiF,yBAA0BA,EAH5B,6BAYZsE,EAAchhF,UAAY,CACxB2pB,SAAU5D,SACVsD,OAAQ4H,QACR32B,QAASge,W,4FA9CE0oE,E,4mDCaAE,EAAkB,SAAC,GAAoD,IAAlDjmF,EAAkD,EAAlDA,SAAUX,EAAwC,EAAxCA,QAASoiF,EAA+B,EAA/BA,yBACnD,IAAwB/iF,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAMM68D,EAAa,WACjB78D,GAAQ,GACR48D,GAAiB,IAGnB,IAA0C7jF,oBAAS,GAAnD,GAAO4jF,EAAP,KAAsBC,EAAtB,KAGA,OACE,oCACE,yBAAKn4D,SAAU,EAAG6jB,KAAK,SAAStpC,UAAU,mBAAmBygB,QAd/C,WAChBO,GAAQ,IAaN,sBACE,kBAAC,IAAD,CACEnlB,MAAM,eACNspB,OAAQ,CACNU,SACE,kBAAC,IAAD,uBACE,0BAAM1lB,EAAGohF,IAAT,yBALR,wBAWF,kBAAC,IAAD,CACEzD,kBAAgB,+BAChBC,mBAAiB,qCACjBh9D,KAAMA,EACNmsB,QAAS2wC,EACT1wC,sBAAoB,EALtB,sBAOE,yBACE7wB,MAAO,CACL0b,SAAU,WACV/G,IAAK,MACLE,KAAM,MACNk+B,UAAW,wBACX/tC,MAAO,aACPC,OAAQ,cAPZ,sBAUE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CACE4D,OACE,kBAAC,IAAD,CAAQnlB,UAAU,iBAAiB2lB,IAAI,mBAAvC,sBACE,kBAAC,IAAD,yBAGJxE,MAAM,eACN5O,KAAK,wDACL06B,KAAM,CACJ9rB,MAAO,+BACP5O,KAAM,sCAER26B,QAAS2wC,EACTzpC,YAAaupC,EAbf,uBAgBA,kBAAC,IAAM39D,QAAP,CAAe4E,YAAY,GACzB,kBAACo5D,EAAD,CACE3iF,SAAUA,EACVX,QAASA,EACTmjF,WAAYA,EACZD,iBAAkBA,EAClBd,yBAA0BA,EAL5B,6B,EAhEDwE,E,wFA+EbA,EAAgBlhF,UAAY,CAC1B/E,SAAUg2B,QACV32B,QAASge,UAGX,I,IAAMslE,EAAa,SAAC,GAMd,IALJ3iF,EAKI,EALJA,SACAX,EAII,EAJJA,QACAmjF,EAGI,EAHJA,WACAD,EAEI,EAFJA,iBACAd,EACI,EADJA,yBAEA,IAA0B/iF,mBAAS,CACjC6wB,IAAK,GACLppB,SAAS,EACTsC,YAAQ5I,EACRivC,MAAM,IAJR,GAAOr2B,EAAP,KAAc0vB,EAAd,KAOMzS,EAAWjd,EAAM8W,IACpBtiB,QAAO,SAAAg5C,GAAC,MAAe,SAAXA,EAAE/mD,QACdyK,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEpO,KAAK4P,cAAcyqB,cAAchsB,EAAErO,KAAK4P,kBA4B5D,OA1BAtP,qBAAU,WACR4G,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUuoB,OAAQ,CAAEroB,UAAW,aAC1DszB,MAAK,SAAArzB,GACJ,IAAMC,EAAOD,EAASC,KAAKA,KAAKynB,OAEhC+Z,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAM5oB,EACZqd,EAAMvb,OAAS/B,EAAS+B,OACxBub,EAAM8qB,MAAO,EACb9qB,EAAM7d,SAAU,WAIrBgnC,OAAM,SAAAnsC,GACLmnC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAM,GACZvL,EAAMvb,OAASzH,EAAMyH,OACrBub,EAAM8qB,MAAO,EACb9qB,EAAM7d,SAAU,aAIvB,IAECsS,EAAMtS,QACD,kBAAC,IAAD,wBAGLsS,EAAMq2B,OAASr2B,EAAM8W,IAAIxvB,OAEzB,oCACE,kBAAC,IAAM4kB,QAAP,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,qCAIJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAD,CAAQD,QAAQ,YAAYnG,MAAM,UAAUoF,QAASo9D,EAArD,iCASN,oCACE,kBAAC,IAAM79D,QAAP,KACE,yBAAKhgB,UAAU,2BAAf,sBACE,kBAAC,IAAD,CACEswB,MAAOS,EACPzoB,OAAQ,SAACV,EAAMkK,GAAP,OAAiBlK,EAAKrN,KAAK4P,cAAcoE,SAASuD,EAAM3H,gBAChEqX,QAAQ,MACR+O,eAAa,EAJf,uBAMG,SAAA/b,GACC,OACE,yBAAKxU,UAAU,YAAYsc,MAAO,CAAEgF,MAAO,SAA3C,sBACE,kBAAC,IAAD,CACEb,QAAS,WACP,IAAM4gE,EAAWhmF,EAASqV,QAAQ8D,EAAMja,OAEtB,IAAd8mF,EACF3mF,EAAQmwD,OAAOw2B,GAEf3mF,EAAQ6N,KAAKiM,EAAMja,MAErBqjF,GAAiB,IAEnBviF,SAAUA,EAASkT,SAASiG,EAAMja,MAClCsB,MAAO2Y,EAAMja,KACb4qB,OAAQ,CAAEU,SAAU,kBAAC,IAAD,yBACpBrqB,YAAashF,EAAyBtoE,EAAMja,MAd9C,6BAsBZ,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAD,CAAQD,QAAQ,YAAYnG,MAAM,UAAUoF,QAASo9D,EAArD,oC,EAtGFG,E,+HA8GNA,EAAW59E,UAAY,CACrB/E,SAAUg2B,QACV32B,QAASge,SACTmlE,WAAYz3D,S,6FArMDk7D,E,oHAoFPtD,E,otBCnGOwD,EAAY,SAAC,GAAoB,IAAlBtpC,EAAkB,EAAlBA,KAAM3tB,EAAY,EAAZA,MACxBgzC,EAAaqE,cAAbrE,SAEAhjE,EAAcgwB,EAAdhwB,KAAMqrB,EAAQ2E,EAAR3E,IACd,OACE,kBAAC,IAAD,CACEygC,GAAInO,EACJl4C,UAAWC,IAAW,aAAc,CAAE5E,SAAUkiE,EAAS+iB,SAAT,WAAsB/lF,MACtEmrB,UAAA,wBAA0BnrB,GAH5B,sBAKE,kBAAC,IAAD,CAAQyF,UAAU,eAAe2lB,IAAKprB,EAAMqrB,IAAKA,EAAjD,sBACG2E,EAAMhwB,KAAK,GAAGgtD,eAEjB,0BAAMvnD,UAAU,aAAhB,sBAA8BzF,K,EAbvBinF,E,+CACU5f,QAiBvB4f,EAAUphF,UAAY,CACpB83C,KAAM/xB,SACNoE,MAAO7R,W,4FApBI8oE,E,kkDCWAC,EAAY,SAAC,GAAqC,IAAnCl3D,EAAmC,EAAnCA,MAAO0xD,EAA4B,EAA5BA,SAAUyF,EAAkB,EAAlBA,YAC3C,IAA4B3nF,mBAAS,WAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAAwBjuC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgrB,EAAU,WACVhnB,GAAQ,KACP,KAGC2gE,EAAc3kE,uBAAY,WAC9B0kE,EAAYn3D,EAAMhwB,MACf66B,MAAK,WACJ4S,EAAU,WACVhnB,GAAQ,GACRgqC,EAAQziD,KAAK,kCAEdigC,OAAM,WACLR,EAAU,WACVhnB,GAAQ,GACRxO,QAAQgS,IAAI,gCAEf,CAAC+F,IAGJ,IAAKA,EACH,OAAO,qCAGT,IAAMygC,EAAU81B,cAEhB,OACE,oCACE,kBAAC,IAAD,CAAOnoB,KAAK,SAAZ,sBACE,kBAAC,IAAM74C,OAAP,KACE,kBAAC,IAAMC,MAAP,KAAcwK,EAAMhwB,OAGtB,kBAAC,IAAMylB,QAAP,CAAe4E,YAAU,GACvB,kBAAC,IAAD,wBACA,kBAAC,IAAD,wBACA,kBAAC,IAAD,yBAEF,kBAAC,IAAMnD,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CAAQzJ,MAAM,YAAYtf,SAAUkgF,EAAUx7D,QAAS6D,EAAavD,KAApE,mCAMN,kBAAC,IAAD,CAAOA,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAAC,IAAD,CACEhI,MAAO,CACLmI,SAAU,QACVC,UAAW,QACX9I,SAAU,QAJd,sBAOE,kBAAC,IAAD,CACEuF,MAAM,eACNwD,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAGk5C,KAAT,wBAJN,uBAQA,kBAAC,IAAD,CAAQ1/C,MAAOmK,EAAf,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,gEACyC0F,EAAMhwB,KAD/C,iFAMJ,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,YACV25C,KALJ,gCAaN,kBAAC,IAAO5gD,KAAR,CAAapnC,MAAM,YACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,8C,EAlGL68D,E,6KAgCKX,QA6ElBW,EAAUrhF,UAAY,CACpBmqB,MAAO7R,SACPujE,SAAUx7E,OACVihF,YAAat7D,QAGR,IAAMw7D,EAAqBzyD,aAChC,SAAArb,GAAK,MAAK,CACRyW,MAAOzW,EAAM2V,OAAOpuB,SACpB4gF,SAAUnoE,EAAM2V,OAAOk6C,IAAI9Y,OAAOrpD,YAEpC,SAAAH,GAAQ,MAAK,CACXqgF,YAAa,SAAAnnF,GAAI,OAAI8G,EAASwpB,YAAiBtwB,QANjB40B,CAQhCsyD,GAEWI,EAAc,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,UAAWtgF,EAAc,EAAdA,QAC/BugF,EAAcxG,cAAdwG,UAOR,OANAlnF,qBAAU,WACJknF,GACFD,EAAUC,KAEX,CAACA,IAGF,oCACGvgF,EACC,kBAAC,IAAD,wCACgB,6CAAIugF,IAGpB,kBAACH,EAAD,0B,EAfKC,E,2DACWtG,QAoBxBsG,EAAYzhF,UAAY,CACtB0hF,UAAW17D,OACX5kB,QAASf,QAGJ,I,IAAMuhF,EAAuB7yD,aAClC,SAAArb,GAAK,MAAK,CACRtS,QAASsS,EAAM2V,OAAOk6C,IAAItoE,SAASmG,YAErC,SAAAH,GAAQ,MAAK,CAAEygF,UAAW,SAAAvnF,GAAI,OAAI8G,EAAS+oB,YAAe7vB,QAJxB40B,CAKlC0yD,GAEF,SAASh9D,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,QARf,sBAWGllB,I,6FA3KM0hF,E,0FAmHAG,E,mGAUAC,E,4FA0BAG,E,qGAOJn9D,E,mgBC1KIq3D,EAAa,SAAC,GAAmD,IAAjD3xD,EAAiD,EAAjDA,MAAOnH,EAA0C,EAA1CA,WAAYrnB,EAA8B,EAA9BA,SACxCiX,EAAU,CAAEmpE,MAD0D,EAApBA,MAC/BC,OADmD,EAAbA,QAG/D,OACE,kBAAC,IAAD,uBACE,kBAAC,IAAQt8D,OAAT,KACE,kBAAC,IAAQC,MAAT,0BACA,kBAAC,IAAQ25C,KAAT,uJAKF,yBAAK15D,UAAU,kBAAf,sBACE,wBAAIA,UAAU,kBAAd,sBACGojB,EAAWxiB,KAAI,SAAA4T,GACd,OACE,wBAAIzT,IAAKyT,EAAMzT,IAAKf,UAAU,kBAA9B,sBACE,kBAACq8E,EAAD,CAAW9xD,MAAOA,EAAO03B,UAAWztC,EAAOxB,QAASA,EAASjX,SAAUA,EAAvE,+BAUhBmgF,EAAW97E,UAAY,CACrBmqB,MAAO7R,SACP0K,WAAYiO,QACZt1B,SAAU0E,OACV07E,MAAO/1D,OACPg2D,OAAQh2D,QAGH,IAAMi2D,EAAY,SAAC,GAA4C,IAA1C9xD,EAA0C,EAA1CA,MAAO03B,EAAmC,EAAnCA,UAAWlmD,EAAwB,EAAxBA,SAAUiX,EAAc,EAAdA,QAC9CjS,EAAuBkhD,EAAvBlhD,IAAKghD,EAAkBE,EAAlBF,QAAS3lD,EAAS6lD,EAAT7lD,KAOtB,OACE,kBAAC,IAAD,CACEspB,UAAA,oBAAsB3kB,GACtBhF,SAAUA,EACVF,MAAOygF,EAAWv7E,GAClBmc,QAAS6kC,EACT/lD,SAZY,YACA+lD,EAAU/uC,EAAQopE,OAASppE,EAAQmpE,OAE3C5xD,EAAMhwB,KAAMwG,EAAK3E,IAIvB,wBAUJigF,EAAUj8E,UAAY,CACpBmqB,MAAO7R,SACPupC,UAAW/7B,gBAAM,CACfnlB,IAAKolB,SACL/pB,KAAM+pB,SACN47B,QAASthD,SAEX1E,SAAU0E,OACVuS,QAASkT,gBAAM,CACbi2D,MAAO/1D,OACPg2D,OAAQh2D,UAIL,I,IAAMm2D,EAAsBptD,aACjC,SAAArb,GACE,IAAMyW,EAAQzW,EAAM2V,OAAOpuB,SAE3B,MAAO,CACLkvB,QACAxuB,SAAU+X,EAAM2V,OAAOk6C,IAAIvgD,WAAW5hB,QACtC4hB,WAAYo5D,EAAcjyD,EAAMkyD,sBAGpC,SAAAp7E,GAAQ,MAAK,CACX86E,MAAO,SAAC5xD,EAAOxpB,EAAK3E,GAAb,OACLiF,EACE+nB,YAAoB,CAClBmB,QACAnuB,OACA2E,UAGNq7E,OAAQ,SAAC7xD,EAAOxpB,EAAK3E,GAAb,OACNiF,EACEkoB,YAAqB,CACnBgB,QACAnuB,OACA2E,aAxByBouB,CA4BjC+sD,GAEF,SAASM,EAAcx6E,GACrB,IACEqhB,EAEErhB,EAFFqhB,UACU0+B,EACR//C,EADF06E,OAAU36B,QAKZ,OAFa5tC,OAAOC,KAAKiP,GAAWre,OAExBwO,QAAO,SAACqE,EAAM9W,GACxB,IAAMkhD,EAAY,CAChBlhD,MAIA3E,KAAMinB,EAAUtiB,GAAK,IAAM,SAC3BghD,UAAWA,EAAQhhD,GAAK3F,QAK1B,OAFAyc,EAAKtP,KAAK05C,GAEHpqC,IACN,IAGL,SAASykE,EAAWK,GAClB,OAAOA,EAAIr1B,OAAO,GAAGC,cAAgBo1B,EAAIz0E,MAAM,I,6FA3HpCg0E,E,uGAmCAG,E,sGAiCAE,E,gHA8BJC,E,0GAwBAF,E,wyDC/GI2F,EAAa,SAAC,GAAoC,IAAlC13D,EAAkC,EAAlCA,MAAO23D,EAA2B,EAA3BA,qBAClC,IAAwCnoF,mBAAS,IAAjD,GAAO2wC,EAAP,KAAqBy3C,EAArB,KACA,IAAwCpoF,mBAAS,sBAAjD,GAAOijF,EAAP,KAAqBC,EAArB,KACA,IAA4BljF,mBAAS,WAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAAwBjuC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgrB,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,KACP,KAGC6pC,EAAS7tC,uBAAY,WACzBklE,EAAqB33D,EAAMhwB,KAAMmwC,GAC9BtV,MAAK,SAAArzB,GACoB,WAApB,EAAOA,IAA6C,SAApBA,EAAS+B,QAC3CkkC,EAAU,SACVi1C,EAAgBl7E,EAASpB,YAEzBqnC,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,OAGXwnB,OAAM,WACLR,EAAU,WACVhnB,GAAQ,GACRxO,QAAQgS,IAAI,0CAEf,CAAC+F,EAAOmgB,IACX,OACE,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAQ5qB,OAAT,KACE,kBAAC,IAAQC,MAAT,6BAEF,+CACE,wBAAI/f,UAAU,YAAd,sBACGuqB,EAAMI,MAAM/pB,KAAI,SAAAyoB,GAAI,OACnB,wBAAIrpB,UAAU,YAAYe,IAAKsoB,EAA/B,sBACE,kBAAC,IAAD,CACExtB,MAAOwtB,EACPlE,OAAQ,CAAEhJ,QAASkN,EAAKi+B,OAAO,IAC/B3kD,OACE,kBAAC,IAAD,CACE8d,QAAS,SAAAxkB,GACPA,EAAEgqB,iBACFhqB,EAAEupB,kBACF28D,EAAgB94D,GAChB/E,EAAavD,QALjB,sBAQE,0BAAM5gB,EAAGm9E,IAAT,wBAZN,2BAkBJ,wBAAIt9E,UAAU,YAAYe,IAAI,qBAA9B,sBACE,kBAAC,IAAD,4BAKR,kBAAC,IAAD,CAAOggB,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAAC,IAAD,CACEhI,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CACEJ,MAAM,yBACNwD,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAGk5C,KAAT,wBAJN,uBAQA,kBAAC,IAAD,CAAQ1/C,MAAOmK,EAAf,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,+DACwC6lB,EADxC,eACkEngB,EAAMhwB,KADxE,iFAMJ,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,YACV6iB,KALJ,gCAaN,kBAAC,IAAO9pB,KAAR,CAAapnC,MAAM,YACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,yCAIN,kBAAC,IAAOmc,KAAR,CAAapnC,MAAM,SACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,uBAAW0kB,YAAsByzC,KAEnC,kBAAC,IAAMv7D,OAAP,KACE,kBAAC,IAAD,CACEpG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,IANZ,uC,EAzHLihE,E,iPA8IbA,EAAW7hF,UAAY,CACrBmqB,MAAO7R,SACPwpE,qBAAsB97D,QAGjB,I,IAAMg8D,EAAsBjzD,aACjC,SAAArb,GAAK,MAAK,CACRyW,MAAOzW,EAAM2V,OAAOpuB,aAEtB,SAAAgG,GAAQ,MAAK,CACX6gF,qBAAsB,SAAC33D,EAAOlB,GAAR,OAAiBhoB,EAASmpB,YAA0B,CAAED,QAAOlB,cALpD8F,CAOjC8yD,GAEF,SAASp9D,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,QARf,sBAWGllB,I,6FAzKMkiF,E,uGAmJAG,E,gHASJv9D,E,+nECtJIw9D,EAAiB,SAAC,GAA+B,IAA7B93D,EAA6B,EAA7BA,MAAO+3D,EAAsB,EAAtBA,gBACtC,IAAwBvoF,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAEMjO,EAAY,WAChBiO,GAAQ,IAGJ68D,EAAa,WACjB78D,GAAQ,GACR48D,GAAiB,IAGbt5D,EAAe,CACnBC,MAAOs5D,EACP98D,KAAMhO,GAGR,IAA0ChZ,oBAAS,GAAnD,GAAO4jF,EAAP,KAAsBC,EAAtB,KAGA,OACE,oCACE,yBAAKn4D,SAAU,EAAG6jB,KAAK,SAAStpC,UAAU,mBAAmBygB,QAAS1N,EAAtE,sBACE,kBAAC,IAAD,CACElX,MAAM,WACNspB,OAAQ,CACNU,SACE,kBAAC,IAAD,uBACE,0BAAM1lB,EAAGoiF,IAAT,yBALR,wBAWF,kBAAC,IAAD,CAAOxhE,KAAMA,EAAM/N,QAASsR,EAA5B,uBACG,gBAAG2oB,EAAH,EAAGA,KAAMj6B,EAAT,EAASA,QAAT,OACC,yBACEsJ,MAAO,CACL0b,SAAU,WACV/G,IAAK,MACLE,KAAM,MACNk+B,UAAW,wBACX/tC,MAAO,aACPC,OAAQ,cAPZ,sBAUE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CACE4D,OACE,kBAAC,IAAD,CAAQnlB,UAAU,iBAAiB2lB,IAAI,mBAAvC,sBACE,kBAAC,IAAD,uBACE,0BAAMxlB,EAAGohF,IAAT,yBAINpgE,MAAM,eACN5O,KAAK,qDACL06B,KAAMA,EACNC,QAASl6B,EAAQuR,MACjB6vB,YAAaupC,EAZf,uBAcA,kBAAC,IAAM39D,QAAP,CAAe4E,YAAY,GACzB,kBAAC49D,EAAD,CACEj4D,MAAOA,EACPszD,WAAYA,EACZI,MAAO,SAAA5d,GACL,OAAOiiB,EAAgB/3D,EAAMhwB,KAAM8lE,IAErCud,iBAAkBA,EANpB,+B,EA9DHyE,E,wFA+EbA,EAAejiF,UAAY,CACzBmqB,MAAO7R,SACP4pE,gBAAiBl8D,QAGZ,I,IAAMq8D,EAA0BtzD,aACrC,SAAArb,GAGE,MAAO,CAAEyW,MAFKzW,EAAM2V,OAAOpuB,aAI7B,SAAAgG,GAAQ,MAAK,CACXihF,gBAAiB,SAAC/3D,EAAOI,GAAR,OAAkBtpB,EAASqpB,YAAqB,CAAEH,QAAOI,eAPvCwE,CASrCkzD,GAEIG,EAAiB,SAAC,GAAmD,IAAjDj4D,EAAiD,EAAjDA,MAAOszD,EAA0C,EAA1CA,WAAYI,EAA8B,EAA9BA,MAAOL,EAAuB,EAAvBA,iBAClD,IAA0B7jF,mBAAS,CACjCsmE,WAAY,GACZqiB,cAAc,EACdC,gBAAgB,EAChBnhF,SAAS,EACTsC,YAAQ5I,EACR0vB,IAAK,GACLuzD,SAAS,IAPX,GAAOrqE,EAAP,KAAc0vB,EAAd,KAUMzS,EAAW52B,mBAAQ,WACvB,OAAO2Z,EAAMqqE,QAAN,EAAoBrqE,EAAM8W,KAAO9W,EAAM8W,IAAItiB,QAAO,SAAA04D,GAAC,OAAKz2C,EAAMI,MAAMpc,SAASyyD,EAAEzmE,WACrF,CAACuZ,EAAM8W,IAAK9W,EAAMqqE,QAAS5zD,IA2B9B,OAzBA1vB,qBAAU,WACR4G,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAUsnB,OAAS,CAAEpnB,UAAW,aAC9DszB,MAAK,YAAwB,IAAfwtD,EAAe,EAArB5gF,KACPwhC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAMg4D,EAAS5gF,KAAK2oB,MAC1BtL,EAAMqjE,cAAe,EACrBrjE,EAAMvb,OAAS8+E,EAAS9+E,OACxBub,EAAM7d,SAAU,WAIrBgnC,OAAM,YAAwB,IAAfq6C,EAAe,EAArB7gF,KACRwhC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAM,GACZvL,EAAMhjB,MAAQwmF,EAASliF,SACvB0e,EAAMqjE,cAAe,EACrBrjE,EAAMvb,OAAS++E,EAAS/+E,OACxBub,EAAM7d,SAAU,aAIvB,IAECsS,EAAMtS,QACD,kBAAC,IAAD,sCAGLsS,EAAM4uE,cAAkB5uE,EAAM8W,IAAIxvB,QAA2B,SAAjB0Y,EAAMhQ,OAyBlDgQ,EAAM4uE,cAAgB5uE,EAAM6uE,gBAAmC,YAAjB7uE,EAAMhQ,OAEpD,oCACE,kBAAC,IAAMkc,QAAP,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,UAAb,sBACE,kBAAC,IAAO/C,KAAR,qDAGJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAD,CACED,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACPo9D,KAJJ,mCAcJ/pE,EAAM4uE,cAAgB5uE,EAAM6uE,gBAAmC,SAAjB7uE,EAAMhQ,OAEpD,oCACE,kBAAC,IAAMkc,QAAP,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,wCAGJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAD,CACED,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACPo9D,KAJJ,iCAeN,oCACE,kBAAC,IAAM79D,QAAP,KACE,yBAAKhgB,UAAU,2BAAf,sBACE,kBAAC,IAAD,CACEswB,MAAOS,EAAS/rB,MAAK,SAAC2D,EAAGC,GAAJ,OACnBD,EAAEpO,KAAK4P,cAAcyqB,cAAchsB,EAAErO,KAAK4P,kBAE5C7B,OAAQ,SAACV,EAAMkK,GAAP,OAAiBlK,EAAKrN,KAAK4P,cAAcoE,SAASuD,EAAM3H,gBAChEqX,QAAQ,MACR+O,eAAa,EANf,uBAQG,SAAA/b,GACC,OACE,yBAAKxU,UAAU,YAAYsc,MAAO,CAAEgF,MAAO,SAA3C,sBACE,kBAAC,IAAD,CACEb,QAAS,WACP+iB,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZ,IAAMghD,EAAa,IAAI16B,IAAIlyB,EAAK4sD,YAE5BA,EAAWlB,IAAI3qD,EAAMja,MACvB8lE,EAAWv1C,OAAOtW,EAAMja,MAExB8lE,EAAWxqC,IAAIrhB,EAAMja,MAGvB8kB,EAAMghD,WAAN,EAAuBA,SAG3Bud,GAAiB,IAEnB7hF,WAAU+X,EAAMqqE,SAAU5zD,EAAMI,MAAMpc,SAASiG,EAAMja,MACrDc,SAAUyY,EAAMusD,WAAW9xD,SAASiG,EAAMja,MAC1CsB,MAAO2Y,EAAMja,KACb4qB,OAAQ,CACNhJ,QAAS3H,EAAMja,KAAK+sD,OAAO,IArB/B,6BA8BZ,kBAAC,IAAM7lC,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACE5H,QAASpJ,EAAMqqE,QACfvnC,QAAS,kBAAMpT,GAAS,SAAA/vB,GAAI,YAAUA,EAAV,CAAgB0qE,SAAU1qE,EAAK0qE,cAC3DtiF,MAAM,4CAHR,wBAMF,kBAAC,IAAM4lB,OAAOC,MAAd,KACE,kBAAC,IAAD,CACE3lB,UAAW+X,EAAMusD,WAAWjlE,OAC5BomB,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACP+iB,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAM7d,SAAU,QAcpBy8E,EAAMnqE,EAAMusD,YAAYjrC,MAAK,SAAArzB,GAC3ByhC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAM7d,SAAU,EAChB6d,EAAMsjE,gBAAiB,EACvBtjE,EAAMvb,OAAS/B,aAAf,EAAeA,EAAU+B,OACzBub,EAAMhjB,MAAQ0F,aAAd,EAAcA,EAAUpB,mBA3BlC,gCA3HJ,oCACE,kBAAC,IAAMqf,QAAP,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,KACGya,EAAMzX,MAAQktC,YAAsBz1B,EAAMzX,OAAS,mCAI1D,kBAAC,IAAMolB,OAAP,KACE,kBAAC,IAAD,CACED,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACPo9D,KAJJ,kC,EAvDJ2E,E,gOAkNNA,EAAepiF,UAAY,CACzBmqB,MAAO7R,SACPulE,MAAO73D,OACPy3D,WAAYz3D,S,6FApTDi8D,E,+GAoFAI,E,wHAWPD,E,uzDCpGOM,EAAY,SAAC,GAAyD,MAAvDv4D,EAAuD,EAAvDA,MAAOw4D,EAAgD,EAAhDA,gBAAiBjG,EAA+B,EAA/BA,yBAClD,IAA0C/iF,mBAAS,IAAnD,GAAO4pC,EAAP,KAAsBo5C,EAAtB,KACA,IAAwChjF,mBAAS,sBAAjD,GAAOijF,EAAP,KAAqBC,EAArB,KACA,IAA4BljF,mBAAS,WAArC,GAAO+J,EAAP,KAAekkC,EAAf,KACA,IAAwBjuC,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgrB,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,KACP,KAGC6pC,EAAS7tC,uBAAY,WACzB+lE,EAAgBx4D,EAAMhwB,KAAM,CAACopC,IAC1BvO,MAAK,SAAArzB,GACoB,WAApB,EAAOA,IAA6C,SAApBA,EAAS+B,QAC3CkkC,EAAU,SACVi1C,EAAgBl7E,EAASpB,YAEzBqnC,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,OAGXwnB,OAAM,WACLR,EAAU,WACVhnB,GAAQ,GACRxO,QAAQgS,IAAI,2CAEf,CAAC+F,EAAOoZ,IAELu5C,EAA4C,KAA7B3yD,SAAA,UAAAA,EAAO7G,iBAAP,eAAkBtoB,SAAwC,YAAxBmvB,aAAA,EAAAA,EAAO7G,UAAU,IAClEy5D,EAAkBD,EACpB,2IADgC,gDAES3yD,EAAMhwB,KAFf,uBAEkCopC,EAFlC,sFAKpC,OACE,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAQ7jB,OAAT,KACE,kBAAC,IAAQC,MAAT,0BAEF,+CACE,wBAAI/f,UAAU,YAAd,sBACGuqB,EAAM7G,UACJpb,QAAO,SAAAg5C,GAAC,MAAU,SAANA,KACZt8C,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEwB,cAAcyqB,cAAchsB,EAAEuB,kBAC/CvJ,KAAI,SAAAoiF,GAAQ,OACX,wBAAIhjF,UAAU,YAAYe,IAAKiiF,EAA/B,sBACE,kBAAC,IAAD,CACEnnF,MAAOmnF,EACP79D,OAAQ,CACNU,SACE,kBAAC,IAAD,uBACE,0BAAM1lB,EAAGohF,IAAT,yBAIN5+E,OACE,kBAAC,IAAD,CACE8d,QAAS,SAAAxkB,GACPA,EAAEgqB,iBACFhqB,EAAEupB,kBACFu3D,EAAiBiG,GACjB1+D,EAAavD,QALjB,sBAQE,0BAAM5gB,EAAGm9E,IAAT,wBAGJ9hF,YAAashF,EAAyBkG,GArBxC,2BAyBN,wBAAIhjF,UAAU,YAAYe,IAAI,gBAA9B,sBACE,kBAAC,IAAD,4BAKR,kBAAC,IAAD,CAAOggB,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAAC,IAAD,CACEhI,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CACEJ,MAAM,0BACNwD,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAGk5C,KAAT,wBAJN,uBAQA,kBAAC,IAAD,CAAQ1/C,MAAOmK,EAAf,sBACE,kBAAC,IAAOi9B,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,uBAAWs4D,KAGf,kBAAC,IAAM17D,OAAP,KACGy7D,GACC,kBAAC,IAAMz7D,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACEzJ,MAAM,UACNoF,QAAS,WACPunB,EAAU,WACVhnB,GAAQ,IAJZ,iCAWJ,kBAAC,IAAMS,OAAOC,MAAd,KACE,kBAAC,IAAD,CACErG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,YACV6iB,KALJ,sBAQGqyB,EAAe,WAAa,UAKrC,kBAAC,IAAOn8C,KAAR,CAAapnC,MAAM,YACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,yCAIN,kBAAC,IAAOmc,KAAR,CAAapnC,MAAM,SACjB,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAACyoB,EAAD,uBAAW0kB,YAAsByzC,KAEnC,kBAAC,IAAMv7D,OAAP,KACE,kBAAC,IAAD,CACEpG,MAAM,UACNmG,QAAQ,YACRf,QAAS,WACPunB,EAAU,WACVi1C,EAAgB,sBAChBj8D,GAAQ,IANZ,uC,EApJL8hE,E,mPAyKbA,EAAU1iF,UAAY,CACpBmqB,MAAO7R,SACPqqE,gBAAiB38D,QAGZ,I,IAAM68D,EAAqB9zD,aAChC,SAAArb,GAAK,MAAK,CACRyW,MAAOzW,EAAM2V,OAAOpuB,SACpByhF,yBAA0B,SAAAviF,GAAI,OAAIm8B,YAAoBn8B,EAAMuZ,EAAM2V,OAAOmB,UAE3E,SAAAvpB,GAAQ,MAAK,CACX0hF,gBAAiB,SAACx4D,EAAOd,GAAR,OAAmBpoB,EAASopB,YAAqB,CAAEF,QAAOd,gBAN7C0F,CAQhC2zD,GAEF,SAASj+D,EAAT,GAAgC,IAAZ9kB,EAAY,EAAZA,SAClB,OACE,wBACEuc,MAAO,CACLb,WAAY,YACZsJ,UAAW,SACXC,WAAY,OACZ9kB,SAAU,OACVsb,WAAY,OACZD,cAAe,SACf0J,UAAW,QARf,sBAWGllB,I,6FArMM+iF,E,qGA8KAG,E,8GAUJp+D,E,ooECnLIq+D,EAAgB,SAAC,GAAqD,IAAnD34D,EAAmD,EAAnDA,MAAO44D,EAA4C,EAA5CA,YAAarG,EAA+B,EAA/BA,yBAClD,IAAwB/iF,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAEMjO,EAAY,WAChBiO,GAAQ,IAQJsD,EAAe,CACnBC,MANiB,WACjBvD,GAAQ,GACR48D,GAAiB,IAKjB78D,KAAMhO,GAGR,IAA0ChZ,oBAAS,GAAnD,GAAO4jF,EAAP,KAAsBC,EAAtB,KAEA,OACE,oCACE,yBAAKn4D,SAAU,EAAG6jB,KAAK,SAAStpC,UAAU,mBAAmBygB,QAAS1N,EAAtE,sBACE,kBAAC,IAAD,CACElX,MAAM,eACNspB,OAAQ,CACNU,SACE,kBAAC,IAAD,uBACE,0BAAM1lB,EAAGoiF,IAAT,yBALR,wBAWF,kBAAC,IAAD,CAAOxhE,KAAMA,EAAM/N,QAASsR,EAA5B,uBACG,gBAAG2oB,EAAH,EAAGA,KAAMj6B,EAAT,EAASA,QAAT,OACC,yBACEsJ,MAAO,CACL0b,SAAU,WACV/G,IAAK,MACLE,KAAM,MACNk+B,UAAW,wBACX/tC,MAAO,aACPC,OAAQ,cAPZ,sBAUE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CACE4D,OACE,kBAAC,IAAD,CAAQnlB,UAAU,iBAAiB2lB,IAAI,mBAAvC,sBACE,kBAAC,IAAD,uBACE,0BAAMxlB,EAAGohF,IAAT,yBAINpgE,MAAM,eACN5O,KAAK,0DACL06B,KAAMA,EACNC,QAASl6B,EAAQuR,MACjB6vB,YAAaupC,EAZf,uBAcA,kBAAC,IAAM39D,QAAP,CAAe4E,YAAY,GACzB,kBAACw+D,EAAD,CACE74D,MAAOA,EACP44D,YAAaA,EACbtF,WAAY7qE,EAAQuR,MACpBq5D,iBAAkBA,EAClBd,yBAA0BA,EAL5B,+B,EA7DHoG,E,wFA6EbA,EAAc9iF,UAAY,CACxBmqB,MAAO7R,SACPyqE,YAAa/8D,QAGR,I,IAAMi9D,EAAyBl0D,aACpC,SAAArb,GAGE,MAAO,CACLyW,MAHYzW,EAAM2V,OAAOpuB,SAIzByhF,yBAA0B,SAAAviF,GAAI,OAAIm8B,YAAoBn8B,EAAMuZ,EAAM2V,OAAOmB,UAG7E,SAAAvpB,GAAQ,MAAK,CACX8hF,YAAa,SAAA54D,GAAK,OAAIlpB,EAASE,IAASoB,OAAO4J,IAAsBge,QAVnC4E,CAYpC+zD,GAEIE,EAAiB,SAAC,GAMlB,IALJ74D,EAKI,EALJA,MACAszD,EAII,EAJJA,WACAsF,EAGI,EAHJA,YACAvF,EAEI,EAFJA,iBACAd,EACI,EADJA,yBAEA,IAA0B/iF,mBAAS,CACjCsmE,WAAY,GACZijB,eAAe,EACfC,oBAAoB,EACpB/hF,SAAS,EACTsC,YAAQ5I,EACR0vB,IAAK,GACLuzD,SAAS,IAPX,GAAOrqE,EAAP,KAAc0vB,EAAd,KAUMzS,EAAW52B,mBAAQ,WACvB,OAAO2Z,EAAMqqE,QACTrqE,EAAM8W,IACHtiB,QAAO,SAAAg5C,GAAC,MAAe,SAAXA,EAAE/mD,QACdyK,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEpO,KAAK4P,cAAcyqB,cAAchsB,EAAErO,KAAK4P,kBAC5D2J,EAAM8W,IACHtiB,QAAO,SAAAg5C,GAAC,OAAK/2B,EAAM7G,UAAUnV,SAAS+yC,EAAE/mD,OAAoB,SAAX+mD,EAAE/mD,QACnDyK,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEpO,KAAK4P,cAAcyqB,cAAchsB,EAAErO,KAAK4P,oBAC/D,CAAC2J,EAAM8W,IAAK9W,EAAMqqE,QAAS5zD,IAuC9B,GAzBA1vB,qBAAU,WACR4G,IAAWC,IAAX,UAAkBvI,IAAUwI,KAAKC,UAAUuoB,QAAU,CAAEroB,UAAW,aAC/DszB,MAAK,YAAwB,IAAfwtD,EAAe,EAArB5gF,KACPwhC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAMg4D,EAAS5gF,KAAKynB,OAC1BpK,EAAMikE,eAAgB,EACtBjkE,EAAMvb,OAAS8+E,EAAS9+E,OACxBub,EAAM7d,SAAU,WAIrBgnC,OAAM,YAAwB,IAAfq6C,EAAe,EAArB7gF,KACRwhC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAM,GACZvL,EAAMhjB,MAAQwmF,EAASliF,SACvB0e,EAAMikE,eAAgB,EACtBjkE,EAAMvb,OAAS++E,EAAS/+E,OACxBub,EAAM7d,SAAU,aAIvB,IAECsS,EAAMtS,QACR,OAAO,kBAAC,IAAD,qCAGT,GACEsS,EAAMwvE,iBACJxvE,EAAM8W,IAAIxvB,QAA4B,SAAjB0Y,EAAMhQ,SAAsBgQ,EAAM0vE,eAEzD,OACE,oCACE,kBAAC,IAAMxjE,QAAP,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,0CAGJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAD,CACED,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACPo9D,KAJJ,iCAcR,GAAI/pE,EAAMwvE,eAAiBxvE,EAAMyvE,oBAAuC,YAAjBzvE,EAAMhQ,OAC3D,OACE,oCACE,kBAAC,IAAMkc,QAAP,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,UAAb,sBACE,kBAAC,IAAO/C,KAAR,6CAGJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAD,CACED,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACPo9D,KAJJ,mCAcR,GAAI/pE,EAAMwvE,eAAiBxvE,EAAMyvE,oBAAuC,SAAjBzvE,EAAMhQ,OAAmB,CAC9E,IAAIk5E,EAAe,iCAEnB,GACElpE,EAAMzX,OACNyX,EAAMzX,MAAM,IACZyX,EAAMzX,MAAM,GAAG2E,MACf8S,EAAMzX,MAAM,GAAG2E,KAAKC,MAAM,MAAM7F,OAAS,EAExC4hF,EADD,EACiBlpE,EAAMzX,MAAM,GAAG2E,KAAKC,MAAM,MAD3C,MAIF,OACE,oCACE,kBAAC,IAAM+e,QAAP,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,KAAc2jF,KAGlB,kBAAC,IAAMv7D,OAAP,KACE,kBAAC,IAAD,CACED,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACPo9D,KAJJ,iCAcR,OACE,oCACE,kBAAC,IAAM79D,QAAP,KACE,yBAAKhgB,UAAU,2BAAf,sBACE,kBAAC,IAAD,CACEswB,MAAOS,EACPzoB,OAAQ,SAACV,EAAMkK,GAAP,OAAiBlK,EAAKrN,KAAK4P,cAAcoE,SAASuD,EAAM3H,gBAChEqX,QAAQ,MACR+O,eAAa,EAJf,uBAMG,SAAA/b,GACC,OACE,yBAAKxU,UAAU,YAAYsc,MAAO,CAAEgF,MAAO,SAA3C,sBACE,kBAAC,IAAD,CACEb,QAAS,WACP+iB,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZ,IAAMghD,EAAa,IAAI16B,IAAIlyB,EAAK4sD,YAE5BA,EAAWlB,IAAI3qD,EAAMja,MACvB8lE,EAAWv1C,OAAOtW,EAAMja,MAExB8lE,EAAWxqC,IAAIrhB,EAAMja,MAGvB8kB,EAAMghD,WAAN,EAAuBA,SAG3Bud,GAAiB,IAEnB7hF,UA1JCxB,EA0JoBia,EAAMja,KAzJvCgwB,EAAMhwB,OAASA,KAIfuZ,EAAMqqE,SACD5zD,EAAM7G,UAAUnV,SAAShU,IAqJlBc,SAAUyY,EAAMusD,WAAW9xD,SAASiG,EAAMja,MAC1CsB,MAAO2Y,EAAMja,KACb4qB,OAAQ,CACNU,SACE,kBAAC,IAAD,uBACE,0BAAM1lB,EAAGohF,IAAT,yBAIN/lF,YAAashF,EAAyBtoE,EAAMja,MA3B9C,wBAzIG,IAAAA,OA4Kf,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACE5H,QAASpJ,EAAMqqE,QACfvnC,QAAS,kBAAMpT,GAAS,SAAA/vB,GAAI,YAAUA,EAAV,CAAgB0qE,SAAU1qE,EAAK0qE,cAC3DtiF,MAAM,mDAHR,wBAMF,kBAAC,IAAM4lB,OAAOC,MAAd,KACE,kBAAC,IAAD,CACE3lB,UAAW+X,EAAMusD,WAAWjlE,OAC5BomB,QAAQ,YACRnG,MAAM,UACNoF,QAAS,WACP+iB,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAM7d,SAAU,QAIpBC,IAAW6nB,MAAX,UAAoBnwB,IAAUwI,KAAKC,UAAUuoB,OAA7C,YAAuDI,EAAMhwB,KAA7D,UAA2E,CACzEkvB,OAAQ3V,EAAMusD,aAEbjrC,MAAK,YAAwB,IAAfwtD,EAAe,EAArB5gF,KACPwhC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAM7d,SAAU,EAChB6d,EAAMkkE,oBAAqB,EAC3BlkE,EAAMvb,OAAS8+E,EAAS9+E,OACxBub,EAAMmkE,eAAgB,QAI1BL,EAAYP,EAAS5gF,KAAKynB,OAAO,OAElC+e,OAAM,SAAAnsC,GACLmnC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GAAS,QACrBA,EAAM7d,SAAU,EAChB6d,EAAMkkE,oBAAqB,EAC3BlkE,EAAMvb,OAAS,OACfub,EAAMhjB,MAAQA,SAAd,UAAcA,EAAO0F,gBAArB,iBAAc,EAAiBC,YAA/B,aAAc,EAAuBrB,SACrC0e,EAAMmkE,eAAgB,YAjClC,iC,EAhNJJ,E,qOA+PNA,EAAehjF,UAAY,CACzBmqB,MAAO7R,SACPyqE,YAAa/8D,OACby3D,WAAYz3D,S,6FAlWD88D,E,6GAkFAG,E,sHAcPD,E,g4DCtGAj4D,EAAmB1E,MAAaP,MAAM,CAC1CoE,UAAW7D,MACRi6D,IAAI,EAAG,kBACP9mF,SAAS,0BACZ6vB,OAAQhD,QAGJg9D,EAAiB,SAAC,GAA+D,IAA7DC,EAA6D,EAA7DA,kBAAmB/sD,EAA0C,EAA1CA,UAAWmmD,EAA+B,EAA/BA,yBAChD9xB,EAAU81B,cACV7gD,EAAW2hC,cAEjB,IAAkC7nE,mBAAS,CAAEowC,MAAM,IAAnD,GAAO42C,EAAP,KAAkBC,EAAlB,KA8BA,GAAID,EAAU52C,KAAM,CAKlB,IAAI6yC,EAAe,6BAEnB,GACuB,SAArB+D,EAAUj9E,QACVi9E,EAAU1kF,OACV0kF,EAAU1kF,MAAM,IAChB0kF,EAAU1kF,MAAM,GAAG2E,MACnB+/E,EAAU1kF,MAAM,GAAG2E,KAAKC,MAAM,MAAM7F,OAAS,EAE5C4hF,EADD,EACiB+D,EAAU1kF,MAAM,GAAG2E,KAAKC,MAAM,MAD/C,MAIF,OACE,oCACE,kBAAC,IAAD,uBACE,kBAAC,IAAM+e,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQxoB,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,KAAc2jF,MAKpB,kBAAC,IAAMv7D,OAAP,KACE,kBAAC,IAAD,CACEpG,MAAM,UACNoF,QAAS,WACPugE,EAAa,CAAE72C,MAAM,EAAOrmC,YAAQ5I,EAAWmB,WAAOnB,KAH1D,kCAcV,OACE,kBAAC,IAAD,CACE8vB,cAAe,CACbV,UAAW,GACX9uB,YAAa,GACbiuB,OAAQ,IAEV0B,iBAAkBA,EAClB1xB,SA/EqB,SAAAkX,GACvB,IAAM6qB,EAAS,KAGZ,2BAA2Brd,KAAKxN,EAAO2Z,YACvC3Z,EAAO2Z,WAA6C,MAAhC3Z,EAAO2Z,UAAUzb,QAAQ,MAE9C2sB,EAAOlR,UAAY,4BAGrB,IAAI22D,GAAS,EAeb,OAbAtqD,EAAU/1B,KAAI,SAAA2pB,GACZ,IAAI02D,EAKJ,OAHI12D,EAAMhwB,OAASoW,EAAO2Z,YACxB22D,GAAS,GAEJ,QAGLA,IACFzlD,EAAOlR,UAAY,yCAGdkR,GAuDL6O,SAAQ,e,EAAA,G,EAAA,yBAAE,WAAM15B,GAAN,+GAEe+yE,EAAkB/yE,GAFjC,OAIgB,aAFhB7M,EAFA,QAIKA,QACTknD,EAAQziD,KAAK03B,EAASs9B,SAAS38C,QAAQ,aAAcjQ,EAAO2Z,YAGxC,SAAlBxmB,EAAOA,QACTk9E,EAAa,CACX72C,MAAM,EACNrmC,OAAQ,OACRzH,MAAOyH,EAAOnD,WAZZ,gDAgBNqgF,EAAa,CACX72C,MAAM,EACNrmC,OAAQ,OACRzH,MAAK,OAAE,EAAF,yBAAE,KAAOsE,WAnBV,wD,+KAAF,sDARV,uBAgCG,gBAAGgQ,EAAH,EAAGA,OAAQwT,EAAX,EAAWA,aAAcnZ,EAAzB,EAAyBA,QAASkZ,EAAlC,EAAkCA,WAAlC,OACC,kBAAC,IAAD,uBACE,kBAAC,IAAMnE,MAAP,kBACA,kBAAC,IAAMC,QAAP,KACE,kBAAC,IAAD,CAAMhgB,UAAU,wBAAhB,sBACE,kBAAC,IAAD,uBACE,kBAAC,IAAQ+f,MAAT,sBACA,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQzD,MAAO,CAAEV,SAAU,QAAS27C,QAAS,IAAK2pB,YAAa,QAA/D,sBACE,kBAAC,IAAD,CAAO3mF,KAAK,YAAZ,uBACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,kBAAC,IAAD,GACEb,UAAQ,GACJY,EAFN,CAGEqB,MAAM,aACN49B,YAAY,aACZp9B,QAAS5B,EAAK4B,MACdC,WAAY7B,EAAK4B,MANnB,4BAWN,kBAAC,IAAD,CAAQigB,MAAO,CAAEV,SAAU,SAA3B,sBACE,kBAAC,IAAD,CAAOrhB,KAAK,cAAZ,uBACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,kBAAC,IAAD,KACMD,EADN,CAEEqB,MAAM,oBACN49B,YAAY,oBACZp9B,QAAS5B,EAAK4B,MACdC,WAAY7B,EAAK4B,MALnB,8BAYV,kBAAC,IAAD,CAASg9D,MAAI,EAAb,sBACE,kBAAC,IAAQt5C,MAAT,yBACA,kBAAC,IAAD,CAAYxlB,KAAK,SAAjB,uBACG,SAAAG,GAAO,OACN,kBAAC,IAAD,CACE2lE,WAAY1vD,EAAO8Y,OACnB/uB,QAASA,EACToiF,yBAA0BA,EAH5B,6BAWV,kBAAC,IAAMr7D,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CAAQuhC,GAAG,8BAA8BhrC,MAAM,UAA/C,iCAKF,kBAAC,IAAMoG,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEtlB,KAAK,SACLqkB,QAASyD,EACT1C,QAAQ,YACRzlB,SAAUooB,IAAiBnZ,EAJ7B,qC,EA1KRy4E,E,sHACY3C,IACClf,QAwLnB6hB,EAAerjF,UAAY,CAAEsjF,kBAAmBt9D,QAEzC,I,IAAMu9D,EAAqBx0D,aAChC,SAAArb,GAAK,MAAK,CACR6iB,UAAW7iB,EAAM2V,OAAOmB,IAAItiB,QAAO,SAAAg5C,GAAC,MAAe,SAAXA,EAAE/mD,QAC1CuiF,yBAA0B,SAAAviF,GAAI,OAAIm8B,YAAoBn8B,EAAMuZ,EAAM2V,OAAOmB,UAE3E,SAAAvpB,GAAQ,MAAK,CACXqiF,kBAAmB,SAAA/yE,GAAM,OAAItP,EAASgpB,YAAiB1Z,QANzBwe,CAQhCs0D,I,6FA3MIt4D,E,2GAOAs4D,E,yGA4LOE,E,owBC3MAb,EAAY,SAAC,GAAsD,IAApDziB,EAAoD,EAApDA,WAAY3lE,EAAwC,EAAxCA,QAASoiF,EAA+B,EAA/BA,yBAC/C,OACE,kBAAC,IAAD,CAAqBt7D,QAAQ,YAA7B,uBACG,SAAA47D,GAAM,OACL,4BAAQA,EAAR,wBACG/c,EAAWz/D,KAAI,SAAAy8E,GAAU,OACxB,wBAAIr9E,UAAU,YAAYe,IAAKs8E,EAA/B,sBACE,kBAAC,IAAD,CACExhF,MAAOwhF,EACPl4D,OAAQ,CAAEU,SAAU,kBAAC,IAAD,yBACpBljB,OACE,kBAAC,IAAD,CACE8d,QAAS,SAAAxkB,GACPA,EAAEgqB,iBACFhqB,EAAEupB,kBAEF,IAAM67D,EAAWhhB,EAAW3vD,QAAQ2sE,IAElB,IAAdgE,GACF3mF,EAAQmwD,OAAOw2B,IARrB,sBAYE,0BAAMlhF,EAAGm9E,IAAT,wBAGJ9hF,YAAashF,EAAyBO,GAnBxC,2BAuBJ,wBAAIr9E,UAAU,YAAYe,IAAI,sBAA9B,sBACE,kBAAC,IAAD,CACE1F,SAAUglE,EACV3lE,QAASA,EACToiF,yBAA0BA,EAH5B,6BAYZgG,EAAU1iF,UAAY,CACpB2pB,SAAU5D,SACVk6C,WAAYhvC,QACZ32B,QAASge,W,4FA9CEoqE,E,6lDCYAxB,EAAkB,SAAC,GAAoD,IAAlDjmF,EAAkD,EAAlDA,SAAUX,EAAwC,EAAxCA,QAASoiF,EAA+B,EAA/BA,yBACnD,IAAwB/iF,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KAEMjO,EAAY,WAChBiO,GAAQ,IAOJsD,EAAe,CACnBvD,KAAMhO,EACNwR,MANiB,WACjBvD,GAAQ,KASV,OACE,oCACE,yBAAKyE,SAAU,EAAG6jB,KAAK,SAAStpC,UAAU,sBAAsBygB,QAAS1N,EAAzE,sBACE,kBAAC,IAAD,CACElX,MAAM,eACNspB,OAAQ,CACNU,SACE,kBAAC,IAAD,uBACE,0BAAM1lB,EAAGohF,IAAT,yBALR,wBAWF,kBAAC,IAAD,CAAOxgE,KAAMA,EAAM/N,QAASsR,EAA5B,uBACG,gBAAG2oB,EAAH,EAAGA,KAAMj6B,EAAT,EAASA,QAAT,OACC,yBACEsJ,MAAO,CACL0b,SAAU,WACV/G,IAAK,MACLE,KAAM,MACNk+B,UAAW,wBACX/tC,MAAO,aACPC,OAAQ,cAPZ,sBAUE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CACE4D,OACE,kBAAC,IAAD,CAAQnlB,UAAU,iBAAiB2lB,IAAI,mBAAvC,sBACE,kBAAC,IAAD,yBAGJxE,MAAM,eACN5O,KAAK,wDACL06B,KAAMA,EACNC,QAASl6B,EAAQuR,MATnB,uBAWA,kBAAC,IAAMvE,QAAP,CAAe4E,YAAY,GACzB,kBAACo5D,EAAD,CACE3iF,SAAUA,EACVX,QAASA,EACTmjF,WAAY7qE,EAAQuR,MACpBu4D,yBAA0BA,EAJ5B,+B,EAxDHwE,E,oCAuEbA,EAAgBlhF,UAAY,CAC1B/E,SAAUg2B,QACV32B,QAASge,UAGX,I,IAAMslE,EAAa,SAAC,GAAgE,IAA9D3iF,EAA8D,EAA9DA,SAAUX,EAAoD,EAApDA,QAASmjF,EAA2C,EAA3CA,WAAYf,EAA+B,EAA/BA,yBACnD,IAA0B/iF,mBAAS,CACjC6wB,IAAK,GACLppB,SAAS,EACTsC,YAAQ5I,EACRivC,MAAM,IAJR,GAAOr2B,EAAP,KAAc0vB,EAAd,KAOMzS,EAAWjd,EAAM8W,IACpBtiB,QAAO,SAAAg5C,GAAC,MAAe,SAAXA,EAAE/mD,QACdyK,MAAK,SAAC2D,EAAGC,GAAJ,OAAUD,EAAEpO,KAAK4P,cAAcyqB,cAAchsB,EAAErO,KAAK4P,kBA4B5D,OA1BAtP,qBAAU,WACR4G,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAUuoB,OAAQ,CAAEroB,UAAW,aAC1DszB,MAAK,SAAArzB,GACJ,IAAMC,EAAOD,EAASC,KAAKA,KAAKynB,OAEhC+Z,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAM5oB,EACZqd,EAAMvb,OAAS/B,EAAS+B,OACxBub,EAAM8qB,MAAO,EACb9qB,EAAM7d,SAAU,WAIrBgnC,OAAM,SAAAnsC,GACLmnC,GAAS,SAAA/vB,GAAI,OACX2L,YAAQ3L,GAAM,SAAA4L,GACZA,EAAMuL,IAAM,GACZvL,EAAMvb,OAASzH,EAAMyH,OACrBub,EAAM8qB,MAAO,EACb9qB,EAAM7d,SAAU,aAIvB,IAECsS,EAAMtS,QACD,kBAAC,IAAD,wBAGLsS,EAAMq2B,OAASr2B,EAAM8W,IAAIxvB,OAEzB,oCACE,kBAAC,IAAM4kB,QAAP,KACE,kBAAC,IAAD,CAAQ5jB,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,qCAGJ,kBAAC,IAAMooB,OAAP,KACE,kBAAC,IAAD,CAAQD,QAAQ,YAAYnG,MAAM,UAAUoF,QAASo9D,EAArD,iCASN,oCACE,kBAAC,IAAM79D,QAAP,KACE,yBAAKhgB,UAAU,2BAAf,sBACE,kBAAC,IAAD,CACEswB,MAAOS,EACPzoB,OAAQ,SAACV,EAAMkK,GAAP,OAAiBlK,EAAKrN,KAAK4P,cAAcoE,SAASuD,EAAM3H,gBAChEqX,QAAQ,MACR+O,eAAa,EAJf,uBAMG,SAAA/b,GACC,OACE,yBAAKxU,UAAU,YAAYsc,MAAO,CAAEmI,SAAU,QAAS7I,SAAU,SAAjE,sBACE,kBAAC,IAAD,CACE6E,QAAS,WACP,IAAM4gE,EAAWhmF,EAASqV,QAAQ8D,EAAMja,OAEtB,IAAd8mF,EACF3mF,EAAQmwD,OAAOw2B,GAEf3mF,EAAQ6N,KAAKiM,EAAMja,OAGvBc,SAAUA,EAASkT,SAASiG,EAAMja,MAClCsB,MAAO2Y,EAAMja,KACb4qB,OAAQ,CAAEU,SAAU,kBAAC,IAAD,yBACpBrqB,YAAashF,EAAyBtoE,EAAMja,MAb9C,6BAqBZ,kBAAC,IAAMknB,OAAP,KACE,kBAAC,IAAD,CAAQD,QAAQ,YAAYnG,MAAM,UAAUoF,QAASo9D,EAArD,oC,EA9FFG,E,+HAsGNA,EAAW59E,UAAY,CACrB/E,SAAUg2B,QACV32B,QAASge,SACTmlE,WAAYz3D,S,6FArLDk7D,E,sHA4EPtD,E,qfCjGO4F,EAAsB,kBACjC,kBAAC,IAAD,KACE,kBAAC,IAAM9jE,OAAP,KACE,kBAAC,IAAMC,MAAP,sBAEF,kBAAC,IAAMC,QAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAQD,MAAT,8E,4FAPK6jE,E,k9ICYAC,KAAb,kGACE,cAAY/pF,GAAO,yCACjB,mBAAMA,IAwDRgqF,eAAiB,WACf,EAAKtgD,UAAS,SAAAmoB,GAAS,MAAK,CAC1Bo4B,YAAap4B,EAAUo4B,gBA3DR,EA+DnBC,QAAU,SAAA78E,GACR,EAAKrN,MAAMmqF,YAAY,CAAE98E,OAAM+sB,MAAO,gBACtC,EAAKsP,SAAS,CAAEugD,YAAY,KA/D5B,EAAKjwE,MAAQ,CACXiwE,YAAY,EACZG,cAAc,GAJC,EADrB,8CAiBE,WAAS,WACP,EAGI77D,KAAKvuB,MAFPkI,EADF,EACEA,KACcmF,EAFhB,EAEEi9D,WAAcj9D,KAER48E,EAAe17D,KAAKvU,MAApBiwE,WAER,OACE,iEAAI/jF,UAAU,YAAd,sBACE,2FACE,kEACEspC,KAAK,eACL5jB,UAAA,iBAAmB1jB,EAAKkD,SAAxB,SACAub,QAAS,kBAAM,EAAKujE,QAAQhiF,EAAKmF,OAHnC,sBAKE,kEAAKnH,UAAU,OAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMmyB,uCAAZ,yBAGJ,kEACEt5B,UAAS,gBAAWmH,EAAKuH,WAAW1M,EAAKmF,MAAQ,SAAW,IAC5Dga,MAAOnf,EAAKkD,SAFd,sBAIGlD,EAAKkD,WAGV,kEACEokC,KAAK,eACL5jB,UAAA,iBAAmB1jB,EAAKkD,SAAxB,SACAlF,UAAS,iBAAYmH,EAAKuH,WAAW1M,EAAKmF,MAAQ,SAAW,IAC7DsZ,QAAS4H,KAAKy7D,eAJhB,sBAMGC,EAAa,2DAAC,iEAAD,wBAAiB,2DAAC,8DAAD,0BAGnC,iEAAI/jF,UAAU,eAAd,sBAA8B+jF,GAAc,2DAAC,sDAAD,CAAY/7E,QAAShG,EAAKgG,QAA1B,2BArDpD,iKASE,SAAgClO,EAAOga,GACrC,OAAIha,EAAMsqE,WAAWj9D,OAASrN,EAAMkI,KAAKmF,MAAS2M,EAAMowE,aAIjD,KAHE,CAAEH,YAAY,EAAMG,cAAc,OAX/C,MAA0B1tD,6CAAMC,eAsEhCotD,KAAKzjF,UAAY,CACf4B,KAAM0W,+CACNurE,YAAa79D,6CACbg+C,WAAY1rD,gDAGP,IAAMyrE,cAAgBh1D,oDAC3B,SAAArb,GAAK,MAAK,CACRswD,WAAYtwD,EAAM5R,SAAS4R,UAE7B,SAAAzS,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,qDAAiBC,QAL1BysB,CAO3B00D,M,gKAnFWA,K,sFA4EAM,c,olGCvFAC,WAAb,6PACE,WAGE,OAFoB/7D,KAAKvuB,MAAjBkO,QAEOpH,KAAI,SAAAwH,GAAM,OAAI,2DAAC,yDAAD,CAAiBrH,IAAKqH,EAAOI,QAASxG,KAAMoG,SAJ7E,uIAAgCouB,6CAAMC,eAQtC2tD,WAAWhkF,UAAY,CACrB4H,QAASqpB,+C,aAGI+yD,WAAA,wC,gKAZFA,W,sgJCYAC,OAAb,sGACE,gBAAYvqF,GAAO,2CACjB,mBAAMA,IAyDRwqF,SAAW,SAACn9E,EAAMysC,GAChB,IAAM2wC,EAAa3wC,EAAQ3yC,MAAM,MAC3BujF,EAAar9E,EAAKlG,MAAM,MAE9B,OAAIsjF,EAAW,KAAOC,EAAW,IAAMD,EAAW,KAAOC,EAAW,GAC3D,SAGF,IAlEU,EAqEnBV,eAAiB,WACf,EAAKtgD,UAAS,SAAAmoB,GAAS,MAAK,CAC1Bo4B,YAAap4B,EAAUo4B,gBAvER,EA2EnBC,QAAU,SAAA78E,GACR,EAAKrN,MAAMmqF,YAAY,CAAE98E,OAAM+sB,MAAO,kBACtC,EAAKsP,SAAS,CAAEugD,YAAY,KA3E5B,EAAKjwE,MAAQ,CACXiwE,YAAY,EACZG,cAAc,GAJC,EADrB,gDAiBE,WAAS,WACP,EAGI77D,KAAKvuB,MAFPkI,EADF,EACEA,KACcmF,EAFhB,EAEEi9D,WAAcj9D,KAER48E,EAAe17D,KAAKvU,MAApBiwE,WAER,OACE,iEAAI/jF,UAAU,cAAd,sBACE,qEAAQA,UAAWqoB,KAAKi8D,SAASn9E,EAAMnF,EAAKmF,MAA5C,sBACE,kEACEmiC,KAAK,eACL5jB,UAAA,iBAAmB1jB,EAAKwG,QAAxB,WACAiY,QAAS,kBAAM,EAAKujE,QAAQhiF,EAAKmF,OAHnC,sBAKE,kEAAKnH,UAAU,OAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAM4/B,uCAAZ,yBAGJ,kEAAK/mC,UAAU,QAAf,sBACE,2DAAC,mDAAD,CAAc+lB,UAAU,MAAM5E,MAAOnf,EAAKwG,QAA1C,sBACE,yFAAO/C,2DAA0Bg/E,iBAAiBziF,EAAKzH,OAASyH,EAAKwG,YAI3E,kEACExI,UAAU,SACVspC,KAAK,eACL5jB,UAAA,iBAAmB1jB,EAAKwG,QAAxB,WACAiY,QAAS4H,KAAKy7D,eAJhB,sBAMGC,EAAa,2DAAC,sEAAD,wBAAsB,2DAAC,wEAAD,0BAGxC,iEAAI/jF,UAAU,iBAAd,sBACG+jF,GAAc,2DAAC,0DAAD,CAAc56E,UAAWnH,EAAKmH,UAA9B,2BArDzB,iKASE,SAAgCrP,EAAOga,GACrC,OAAIha,EAAMsqE,WAAWj9D,OAASrN,EAAMkI,KAAKmF,MAAS2M,EAAMowE,aAIjD,KAHE,CAAEH,YAAY,EAAMG,cAAc,OAX/C,QAA4B1tD,6CAAMC,eAkFlC4tD,OAAOjkF,UAAY,CACjB4B,KAAM0W,+CACN0rD,WAAY1rD,+CACZurE,YAAa79D,8CAGR,IAAMs+D,gBAAkBv1D,oDAC7B,SAAArb,GAAK,MAAK,CACRswD,WAAYtwD,EAAM5R,SAAS4R,UAE7B,SAAAzS,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,qDAAiBC,QALxBysB,CAO7Bk1D,Q,gKA/FWA,O,kHAwFAK,gB,snGCpGAC,aAAb,uQACE,WACE,IAAQx7E,EAAckf,KAAKvuB,MAAnBqP,UAER,OAAKA,EAEEA,EAAUvI,KAAI,SAAA0I,GAAQ,OAAI,2DAAC,6DAAD,CAAmBvI,IAAKuI,EAAS/O,KAAMyH,KAAMsH,OAFvD,OAJ3B,yIAAkCktB,6CAAMC,eAUxCkuD,aAAavkF,UAAY,CACvB+I,UAAWkoB,+C,aAGEszD,aAAA,wC,gKAdFA,a,20HCOAC,SAAb,0GACE,kBAAY9qF,GAAO,6CACjB,mBAAMA,IA4CRgqF,eAAiB,WACf,EAAKtgD,UAAS,SAAAmoB,GAAS,MAAK,CAC1Bo4B,YAAap4B,EAAUo4B,gBA/CR,EAmDnBC,QAAU,SAAA78E,GACR,EAAKrN,MAAMmqF,YAAY,CAAE98E,OAAM+sB,MAAO,cAlDtC,EAAKpgB,MAAQ,CACXiwE,YAAY,GAHG,EADrB,kDAgBE,WAAS,WACP,EAGI17D,KAAKvuB,MAFPkI,EADF,EACEA,KACcmF,EAFhB,EAEEi9D,WAAcj9D,KAGV5M,EAAOyH,EAAKqH,QAAQC,SAE1B,OACE,iEAAItJ,UAAU,gBAAd,sBACE,qEAAQA,UAAS,UAAKgC,EAAKmF,OAASA,EAAO,SAAW,IAAtD,sBACE,kEACEmiC,KAAK,eACL5jB,UAAA,iBAAmBnrB,EAAnB,aACAkmB,QAAS,kBAAM,EAAKujE,QAAQhiF,EAAKmF,OAHnC,sBAKE,kEAAKnH,UAAU,OAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMmH,KAAMugC,uCAAZ,yBAGJ,kEAAK1nC,UAAU,QAAQmhB,MAAO5mB,EAA9B,sBACGA,QAtCf,iKAQE,SAAgCT,GAC9B,OAAIA,EAAMsqE,WAAWj9D,OAASrN,EAAMkI,KAAKmF,KAChC,CAAE48E,YAAY,GAGhB,SAbX,UAA8BvtD,6CAAMC,eAyDpCmuD,SAASxkF,UAAY,CACnB4B,KAAM0W,+CACNurE,YAAa79D,6CACbg+C,WAAY1rD,gDAGP,IAAMmsE,kBAAoB11D,oDAC/B,SAAArb,GAAK,MAAK,CACRswD,WAAYtwD,EAAM5R,SAAS4R,UAE7B,SAAAzS,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,qDAAiBC,QALtBysB,CAO/By1D,U,gKAtEWA,S,0HA+DAC,kB,wwHChEAC,iBAAb,gUASEC,kBAAoB,SAAA59E,GAClB,IAAM69E,EAAQ79E,EACXlG,MAAM,EAAKnH,MAAMmrF,WACjB38E,QAAO,SAAArM,GAAC,OAAIA,KACZuX,QACC,SAACyvD,EAAQzuD,EAAO1T,EAAO+W,GACrB,IAAMqtE,EAAWrtE,EAAK3P,MAAM,EAAGpH,GAC/BokF,EAAS38E,KAAKiM,GACd,IAEM2wE,EAAQ,CAAEtpF,MAAO2Y,EAAO2wE,MAFZD,EAAS9oE,KAAK,EAAKtiB,MAAMmrF,YAK3C,OAFAhiB,EAAO16D,KAAK48E,GAELliB,IAET,CAAC,CAAEpnE,MAAO,OAAQspF,MAAO,MAG7B,OACE,2DAAC,6DAAD,CAAaF,UAAW,2DAAC,uEAAD,CAAkB/kF,SAAS,QAA3B,uBAAuCssD,aAAW,aAA1E,sBACGw4B,EAAMpkF,KAAI,SAAAg8D,GACT,OACE,kEACEl3C,UAAA,sBAAwBk3C,EAAK/gE,OAC7BmE,UAAU,OACVspC,KAAK,eACLvoC,IAAK67D,EAAKuoB,MACV1kE,QAAS,kBAAM,EAAK2kE,WAAWxoB,EAAKuoB,QALtC,sBAOGvoB,EAAK/gE,YAtCpB,EA8CEupF,WAAa,SAAAC,GACPA,IAAiB,EAAKvrF,MAAMsqE,WAAWj9D,OAI3C,EAAKrN,MAAMmqF,YAAY,CAAE98E,KAAMk+E,IAE/B,EAAKC,eAAeD,KArDxB,EAwDEC,eAAiB,SAAAD,GAGf,OAFqBA,EAAapkF,MAAM,EAAKnH,MAAMmrF,WAAW38E,QAAO,SAAArM,GAAC,OAAIA,KAErDb,QACnB,KAAK,EACH,EAAKtB,MAAMmqF,YAAY,CAAE/vD,MAAO,aAChC,MACF,KAAK,EACH,EAAKp6B,MAAMmqF,YAAY,CAAE/vD,MAAO,gBAChC,MACF,KAAK,EACH,EAAKp6B,MAAMmqF,YAAY,CAAE/vD,MAAO,oBAnExC,4DACE,WACE,IACgB/sB,EACZkhB,KAAKvuB,MADPsqE,WAAcj9D,KAGhB,OAAOkhB,KAAK08D,kBAAkB59E,KANlC,6IAAsCqvB,6CAAMC,eA2E5CquD,iBAAiB1kF,UAAY,CAC3BgkE,WAAY1rD,+CACZurE,YAAa79D,6CACb6+D,UAAW9+D,gDAGb2+D,iBAAiBxzD,aAAe,CAC9B2zD,UAAW,MAGN,IAAMM,0BAA4Bp2D,oDACvC,SAAArb,GAAK,MAAK,CACRswD,WAAYtwD,EAAM5R,SAAS4R,UAE7B,SAAAzS,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,qDAAiBC,QALdysB,CAOvC21D,kB,gKA5FWA,iB,2GAqFAS,0B,6yHCnFAC,cAAb,oTAOEC,WAAa,SAAA/gB,GACX,OAAQA,GACN,IAAK,WACH,OAAO,2DAAC,2DAAD,MACT,IAAK,cACH,OAAO,2DAAC,iEAAD,MACT,IAAK,gBACH,OAAO,2DAAC,qEAAD,MACT,IAAK,WACH,OAAO,2DAAC,6DAAD,MACT,IAAK,UACH,OAAO,2DAAC,2DAAD,MACT,IAAK,UACH,OAAO,2DAAC,2DAAD,MACT,IAAK,UACH,OAAO,2DAAC,2DAAD,MACT,IAAK,WACH,OAAO,2DAAC,6DAAD,MACT,IAAK,SACH,OAAO,2DAAC,8EAAD,MACT,QACE,OAAO,yHA5Bf,yDACE,WACE,IAAQA,EAAer8C,KAAKvuB,MAApB4qE,WAER,OAAOr8C,KAAKo9D,WAAW/gB,KAJ3B,0IAAmCluC,6CAAMC,eAiCzC+uD,cAAcplF,UAAY,CACxBskE,WAAYv+C,gD,aAGCq/D,cAAA,wC,gKArCFA,c,y4HCEAE,QAAb,4RAsCE1B,QAAU,SAAA78E,GACR,EAAKrN,MAAMmqF,YAAY,CAAE98E,OAAM+sB,MAAO,iBAvC1C,mDACE,WAAS,WACP,EAA4D7L,KAAKvuB,MAAzD8wB,EAAR,EAAQA,IAAK+6D,EAAb,EAAaA,mBAAoBC,EAAjC,EAAiCA,uBAEjC,OACE,2DAAC,wDAAM5lE,QAAP,KACE,2DAAC,oEAAD,KACG4K,EAAIhqB,KAAI,SAAA0G,GAAI,OACX,2DAAC,iEAAD,CACEvG,IAAKuG,EAAK/M,KACVoqB,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMmyB,0CAGhB31B,OAAsB,UAAd2D,EAAK/M,KAAmBorF,EAAmBr+E,GAAQ,GAC3D6hC,WAAYy8C,EAAuBt+E,GACnClL,KAAK,OACLP,MAAOyL,EAAK/M,KACZkmB,QAAS,kBAAM,EAAKujE,QAAQ18E,EAAKH,OACjC3N,QAAS,CACP,CACEmrB,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMqxD,0CAGhB38D,MAAO,WACP4kB,QAAS,kBAAM,EAAK3mB,MAAMmqF,YAAY,CAAE98E,KAAMG,EAAKH,KAAM+sB,MAAO,yBA5BlF,oIAA6BsC,6CAAMC,eA2CnCivD,QAAQtlF,UAAY,CAClBwqB,IAAKyG,8CACL4yD,YAAa79D,8CAGR,IAAMy/D,iBAAmB12D,oDAC9B,SAAArb,GAAK,cAAK,CACR8W,KAAK,UAAA9W,EAAM5R,gBAAN,mBAAgB+F,kBAAhB,eAA4BX,OAAQ,GACzCw+E,QAAShyE,EAAM5R,SAAS6R,SACxB4xE,mBAAoB,SAAAr+E,GAAI,OAAImT,wDAAcnT,EAAMwM,EAAM5R,SAASwH,WAC/Dk8E,uBAAwB,SAAAt+E,GAAI,OAAIqT,wDAAkBrT,EAAMwM,EAAM5R,SAASwH,eAEzE,SAAArI,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,qDAAiBC,QARvBysB,CAU9Bu2D,S,gKA1DWA,Q,0FAgDAG,iB,83ICzCPE,YAAc,SAACC,EAAgBx9E,GACnC,OAAIw9E,EAEA,2DAAC,mDAAD,CAAcjgE,UAAU,aAAa5E,MAAO3Y,GAC1C,uEAAO/C,2DAA0Bg/E,iBAAiBuB,KAKjD,uEAAOx9E,IAGHy9E,WAAb,wSAmDEjC,QAAU,SAAA78E,GACR,EAAKrN,MAAMmqF,YAAY,CAAE98E,OAAM+sB,MAAO,mBApD1C,EAuDEgyD,cAAgB,SAAA99E,GACd,IAAM5O,EAAU,CACd,CACEmrB,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMqxD,0CAGhB38D,MAAO,WACP4kB,QAAS,kBAAM,EAAK3mB,MAAMmqF,YAAY,CAAE98E,KAAMiB,EAAOjB,KAAM+sB,MAAO,gBAatE,OATI9rB,EAAOe,UAAU/N,OAAS,GAC5B5B,EAAQ+O,KAAK,CACXoc,KAAM,2DAAC,kEAAD,MACN9oB,MAAO,EAAK/B,MAAMqsF,sBAAsB/9E,GAAQvM,MAChDE,SAAU,EAAKjC,MAAMqsF,sBAAsB/9E,GAAQ5G,QACnDif,QAAS,kBAAM,EAAK2lE,iBAAiBh+E,MAIlC5O,GA7EX,EAgFE4sF,iBAAmB,SAAAh+E,GACZ,EAAKtO,MAAMqsF,sBAAsB/9E,GAAQ5G,SAC5C,EAAK1H,MAAMusF,uBAAuBj+E,IAlFxC,sDACE,WAAS,WACP,EAOIigB,KAAKvuB,MANP8wB,EADF,EACEA,IACA0gD,EAFF,EAEEA,aACAgb,EAHF,EAGEA,qBACA9iE,EAJF,EAIEA,YACA+iE,EALF,EAKEA,yBACA7/C,EANF,EAMEA,eAEI1+B,EAAU4iB,EACVuvB,EAAa52B,iEAAkBC,GAErC,OACE,2DAAC,wDAAMxD,QAAP,KACE,2DAAC,oEAAD,KACGhY,EAAQpH,KAAI,SAACwH,EAAQtH,GAAT,aACX,2DAAC,kEAAD,CACEC,IAAG,UAAKqH,EAAO7N,KAAZ,YAAoBuG,GACvBioC,SAAU,2DAAC,yDAAD,CAAgB3gC,OAAQA,EAAQrM,SAAUo+C,EAAYzT,eAAgBA,EAAgB8/C,aAAcp+E,EAAOe,UAAU/N,OAAS,IACxIuI,OAAQyE,EAAOe,UAAU/N,OAAS,EAAIkrF,EAAqBl+E,GAAU,GACrE+gC,WAAYo9C,EAAyBn+E,GACrChM,KAAK,SACLuoB,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAM4/B,0CAGhBlrC,MAAOkqF,YAAY39E,EAAO7N,KAAM6N,EAAOI,SACvCiY,QAAS,kBAAM,EAAKujE,QAAQ57E,EAAOjB,OACnC3N,QAAS,EAAK0sF,cAAc99E,GAC5B6gC,gBAAiB,CACf,CACEtkB,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMs/E,2CAGhB5qF,MAAO,WACP2tC,UAAU,EACVC,YACE,UAAA6hC,EAAahwE,MAAK,SAAAiP,GAAE,OAAIA,EAAG/B,UAAYJ,EAAOI,kBAA9C,eAAwDC,aAASvN,aAzCrF,uIAAgCs7B,6CAAMC,eAuFtCwvD,WAAW7lF,UAAY,CACrB6jF,YAAa79D,8CAGR,IAAMsgE,oBAAsBv3D,oDACjC,SAAArb,GAAS,MACP,EAGIA,EAAM5R,SAFR+F,EADF,EACEA,WACSd,EAFX,EAEE2M,MAAS3M,KAGLG,EAAOW,EAAWX,KAAKhM,MAAK,SAAAkZ,GAAK,OAAIA,EAAMtP,WAAaiC,KAE9D,MAAO,CACLyjB,KAAKtjB,aAAA,EAAAA,EAAMU,UAAW,GACtB89E,QAAShyE,EAAM5R,SAAS6R,SACxBqwD,WAAYtwD,EAAM5R,SAAS4R,MAC3Bw3D,cAAc,UAAAx3D,EAAM5R,SAASopE,oBAAf,eAA6BtjE,UAAW,GACtDwb,YAAawF,+DAAsBlV,GACnCwyE,qBAAsB,SAAAl+E,GAAM,OAAIyS,yDAAgBzS,EAAQ0L,EAAM5R,SAASwH,WACvE68E,yBAA0B,SAAAn+E,GAAM,OAAI0S,yDAAoB1S,EAAQ0L,EAAM5R,SAASwH,WAC/Ey8E,sBAAuB,SAAA/9E,GAAM,OAC3B4S,yDAAuB5S,EAAQ0L,EAAM5R,SAASwH,SAAU,eAG9D,SAAArI,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,sDAAiBC,KACnD2jF,uBAAwB,SAAAj+E,GAAM,OAAI/G,EAASyI,sDAA4B1B,KACvEs+B,eAAgB,kBAAMrlC,EAASF,6DAxBAguB,CA0BjC82D,Y,gKAjIIF,Y,oGAYOE,W,mGA2FAS,oB,2mDC7GAC,EAAiB,SAAC,GAAuD,IAArDv+E,EAAqD,EAArDA,OAAQrM,EAA6C,EAA7CA,SAAU2qC,EAAmC,EAAnCA,eAAgB8/C,EAAmB,EAAnBA,aACjE,IAAwBzsF,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACA,IAAgDjnB,oBAAS,GAAzD,GAAO6sF,EAAP,KAAyBC,EAAzB,KACA,IAA0D9sF,oBAAS,GAAnE,GAAO+sF,EAAP,KAA8BC,EAA9B,KAEMziE,EAAe,CACnBvD,KAAM,WACJC,GAAQ,IAEVuD,MAAO,WACLvD,GAAQ,KAINgmE,EAA2B,CAC/BjmE,KAAM,WACJ8lE,GAAoB,IAEtBtiE,MAAO,WACLsiE,GAAoB,IAEtBz8C,QAAS,WACPjT,YAAc/uB,EAAO7N,MAAM66B,MAAK,SAAC5tB,GACZ,YAAfA,EAAI1D,OACN4iC,IAEAugD,EAA8BlmE,YAMhCkmE,EAAgC,CACpClmE,KAAM,WACJgmE,GAAyB,IAE3BxiE,MAAO,WACLwiE,GAAyB,KAI7B,OAAIhrF,EAEA,kBAAC,IAAD,CAASugB,MAAO,CAAEjB,MAAO,wBACvB,kBAAC,IAAD,CAAMlU,KAAMi0C,QAMhB,oCACE,kBAAC,IAAD,CAAY36B,QAAS6D,EAAavD,MAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM5Z,KAAMi0C,UAGdorC,GACA,kBAAC,IAAD,CAAY/lE,QAASumE,EAAyBjmE,MAC5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM5Z,KAAMk0C,QAKlB,kBAAC,IAAD,CAAOt6B,KAAMA,EAAM/N,QAASsR,GAC1B,kBAAC4iE,EAAD,CAAqB9+E,OAAQA,KAG/B,kBAAC,IAAD,CAAmB2Y,KAAM6lE,EAAkB5zE,QAASg0E,EAA0Bp9E,QAAQ,4CACtF,kBAAC,IAAD,CAAYmX,KAAM+lE,EAAuB9zE,QAASi0E,EAA+Br9E,QAAQ,sE,EArElF+8E,E,kKA0EN,IAAMQ,EAAa,SAAC,GAA+B,IAA7B/+E,EAA6B,EAA7BA,OAAQs+B,EAAqB,EAArBA,eACnC,IAA0B3sC,mBAAS,CAAEyH,SAAS,EAAMS,UAAW,KAA/D,GAAO6R,EAAP,KAAc0vB,EAAd,KACMoD,EAAUC,mBAoBhB,OAnBAhsC,qBAAU,WAERgnC,cAAiBzM,MAAK,SAAA0R,GACA,YAAhBA,EAAKhjC,OACP0/B,EAAS,CACPhiC,SAAS,EACTsC,OAAQ,UACR7B,UAAW6kC,EAAK7kC,WAAa,KAG/BuhC,EAAS,CACPhiC,SAAS,EACTsC,OAAQ,OACR7B,UAAW,UAIhB,IAGD,kBAAC,IAAD,CACEqa,MAAO,CACLgF,MAAO,OACPC,OAAQ,SAGV,kBAAC,IAAD,CACEoD,KACE,kBAAC,IAAD,KACE,0BAAMxkB,EAAG4mC,OAGb5lB,MAAM,cACN5O,KAAK,yCACLy0B,UAAWJ,IAEb,kBAAC,IAAD,CAAQjtC,MAAOma,EAAMtS,SACnB,kBAAC,IAAOu/B,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,QAGJ,kBAAC,IAAOonC,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,CACEyO,OAAQA,EACRnG,UAAW6R,EAAM7R,UACjBglC,iBAAkBP,EAClByO,SAAO,EACPvO,QAASA,Q,EAnDRugD,E,+FA2DN,I,IAAMD,EAAsB/3D,YAAQ,MAAM,SAAA9tB,GAAQ,MAAK,CAC5DqlC,eAAgB,kBAAMrlC,EAASF,mBADEguB,CAE/Bg4D,I,6FAvISR,E,4FA0EAQ,E,wFA2DAD,E,qgLCrHAE,aAAb,gTAwCEpD,QAAU,SAAA78E,GACR,EAAKrN,MAAMmqF,YAAY,CAAE98E,OAAM+sB,MAAO,cAzC1C,EA4CEmzD,gBAAkB,SAAAj+E,GACX,EAAKtP,MAAMqsF,sBAAsB/8E,GAAI5H,SACxC,EAAK1H,MAAMwtF,sBAAsBl+E,IA9CvC,EAkDE88E,cAAgB,SAAA58E,GACd,IAAOpE,EAAP,eAAmBoE,EAASnC,KAAKlG,MAAM,MAAvC,MACMzH,EAAU,CACd,CACEmrB,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMqxD,0CAGhB38D,MAAO,WACP4kB,QAAS,kBAAM,EAAK3mB,MAAMmqF,YAAY,CAAE98E,KAAMmC,EAASnC,KAAM+sB,MAAO,eAEtE,CACEvP,KAAM,2DAAC,kEAAD,MACN9oB,MAAO,EAAK/B,MAAMqsF,sBAAsB78E,GAAUzN,MAClDE,SAAU,EAAKjC,MAAMqsF,sBAAsB78E,GAAU9H,QACrDif,QAAS,kBAAM,EAAK4mE,gBAAgB/9E,MA+DxC,OA3DI7D,2DAA0BqxB,kBAAkB5xB,IAC9C1L,EAAQmjC,OAAO,EAAG,EAAG,CACnBhY,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMogF,0CAGhB1rF,MAAO,WACP4kB,QAAS,kBAAM,EAAK3mB,MAAMmqF,YAAY,CAAE98E,KAAMmC,EAASnC,KAAM+sB,MAAO,gBAIpEzuB,2DAA0BsxB,iBAAiB7xB,IAC7C1L,EAAQmjC,OAAO,EAAG,EAAG,CACnBhY,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMqgF,2CAGhB3rF,MAAO,UACP4kB,QAAS,kBAAM,EAAK3mB,MAAMmqF,YAAY,CAAE98E,KAAMmC,EAASnC,KAAM+sB,MAAO,eAIpEzuB,2DAA0BuxB,iBAAiB9xB,IAC7C1L,EAAQmjC,OAAO,EAAG,EAAG,CACjBhY,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMsgF,0CAGhB5rF,MAAO,UACP4kB,QAAS,kBAAM,EAAK3mB,MAAMmqF,YAAY,CAAE98E,KAAMmC,EAASnC,KAAM+sB,MAAO,eAKtE9uB,uEAAqByxB,kBAAkB3xB,KACzC1L,EAAQmjC,OAAO,EAAG,EAAG,CACnBhY,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMugF,0CAGhB7rF,MAAO,qBACP4kB,QAAS,kBAAM,EAAK3mB,MAAMmqF,YAAY,CAAE98E,KAAMmC,EAASnC,KAAM+sB,MAAO,cAGtE16B,EAAQmjC,OAAOnjC,EAAQ4B,OAAS,EAAG,EAAG,CACpCupB,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMwgF,2CAGhB9rF,MAAO,oBACP4kB,QAAS,kBAAM,EAAK3mB,MAAMmqF,YAAY,CAAE98E,KAAMmC,EAASnC,KAAM+sB,MAAO,gBAIjE16B,GAjIX,wDACE,WAAS,WACP,EAOI6uB,KAAKvuB,MANPqP,EADF,EACEA,UACAy+E,EAFF,EAEEA,iBACAC,EAHF,EAGEA,iBACAC,EAJF,EAIEA,qBACAtkE,EALF,EAKEA,YACAkjB,EANF,EAMEA,eAEIyT,EAAa52B,iEAAkBC,GAErC,OACE,sHACE,2DAAC,wDAAMxD,QAAP,KACE,2DAAC,oEAAD,KACG7W,EAAUvI,KAAI,SAAA0I,GAAQ,OACrB,2DAAC,kEAAD,CACEvI,IAAKuI,EAAS/O,KACd2uC,WAAY0+C,EAAiBt+E,GAC7By/B,SAAU,2DAAC,2DAAD,CAAkBz/B,SAAUA,EAAUvN,SAAUo+C,EAAYzT,eAAgBA,IACtF/iC,OAAQkkF,EAAiBv+E,GACzB6/B,WAAY2+C,EAAqBx+E,GACjClN,KAAK,WACLuoB,KACE,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMxd,KAAMugC,0CAGhB7rC,MAAOyN,EAASD,QAAQC,SACxBmX,QAAS,kBAAM,EAAKujE,QAAQ16E,EAASnC,OACrC3N,QAAS,EAAK0sF,cAAc58E,aA/B5C,yIAAkCktB,6CAAMC,eAqIxC2wD,aAAahnF,UAAY,CACvB6jF,YAAa79D,8CAGR,IAAM2hE,sBAAwB54D,oDACnC,SAAArb,GACE,MAGIA,EAAM5R,SAFR+F,EADF,EACEA,WAIF,iBALA,EAEE6L,MAAS3M,KAGsBlG,MAAM,MAAvC,GAAOiE,EAAP,KAAiBsD,EAAjB,KACMJ,EAASkM,yDAAoB,CAAEpP,WAAUsD,WAAWP,GACpD6R,EAAUhG,EAAM5R,SAASqH,aACzByQ,EAAWlG,EAAM5R,SAASwH,SAEhC,MAAO,CACLP,UAAYf,GAAUA,EAAOe,WAAc,GAC3Cqa,YAAawF,+DAAsBlV,GACnC8zE,iBAAkB,SAAAt+E,GAAQ,OAAIuQ,yDAAUvQ,EAAUwQ,IAClD+tE,iBAAkB,SAAAv+E,GAAQ,OAAIyQ,yDAAYzQ,EAAU0Q,IACpD8tE,qBAAsB,SAAAx+E,GAAQ,OAAI2Q,yDAAgB3Q,EAAU0Q,IAC5DmsE,sBAAuB,SAAA78E,GAAQ,OAC7B0R,yDAAuB1R,EAAUwK,EAAM5R,SAASwH,SAAU,WAGhE,SAAArI,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,sDAAiBC,KACnD4kF,sBAAuB,SAAAl+E,GAAE,OAAI/H,EAASgJ,sDAAqBjB,KAC3Ds9B,eAAgB,kBAAMrlC,EAASF,6DAzBEguB,CA2BnCi4D,c,gKApKWA,a,yGAyIAW,sB,u1KCvJAC,SAAb,gSA8EE9X,UAAY,SAAA+X,GACV,EAAKnuF,MAAMmqF,YAAY,CAAE/vD,MAAO+zD,KA/EpC,+DACE,WACE5/D,KAAK6/D,gBAFT,gCAKE,SAAmBtqB,GAEfv1C,KAAKvuB,MAAMsqE,WAAWj9D,OAASy2D,EAAUwG,WAAWj9D,MACpDkhB,KAAKvuB,MAAMy+C,gBAAkBqlB,EAAUrlB,eAEvClwB,KAAK6/D,gBAVX,oBAcE,WACE,MAGI7/D,KAAKvuB,MAFP6iD,EADF,EACEA,KADF,IAEEynB,WAAcj9D,EAFhB,EAEgBA,KAAM+sB,EAFtB,EAEsBA,MAEhBi0D,EAAYhhF,EAAKlG,MAAM,MAAMqH,QAAO,SAAArM,GAAC,OAAIA,KAAGb,OAC3C8J,EAAP,eAAmBiC,EAAKlG,MAAM,MAA9B,MACA,OACE,sHACE,2DAAC,wDAAM6e,OAAP,KACiB,IAAdqoE,GACC,2DAAC,wEAAD,CAAehyD,OAAQjC,EAAOzT,QAAS4H,KAAK6nD,UAAWhrE,SAAUA,EAAjE,wBAGJ,2DAAC,wDAAM8a,QAAP,KACG28B,EAAKj7C,IAAI,YACR,2DAAC,iDAAD,uBACE,2DAAC,yDAAD,wCAGF,sHACGi7C,EAAKj7C,IAAI,eAAiB,EACzB,sHACE,kEAAK1B,UAAU,YAAf,sBACE,kEAAKA,UAAU,kBAAf,sBACE,2DAAC,iDAAD,CACEgC,KAAM0mD,2DAAgBrgC,KAAKvuB,MAAM6iD,KAAKj7C,IAAI,WAAW+hB,OAAQ,CAC3DolC,YAAa1rD,8CAAO27C,KAClBzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAC7B,cAEFq3C,QAAS57C,8CAAO27C,KACdzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAC7B,gBAGJknD,YACEzrD,8CACG27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAAc,cAChDtE,OAAO,gBACVD,8CACG27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAAY,cAC9CtE,OAAO,cAEZ0wD,aAAczlC,KAAKvuB,MAAMqlD,iBAnB3B,wBAsBF,kEAAKn/C,UAAU,iBAAf,sBACE,2DAAC,wDAAD,uBACE,2DAAC,6DAAD,CAAY28C,KAAMA,EAAKj7C,IAAI,WAA3B,2BAMR,2DAAC,iDAAD,iDArEhB,yBAkFE,WACE,IAGM0mF,EADF//D,KAAKvuB,MADPsqE,WAAcj9D,KAEUlG,MAAM,MAAMqH,QAAO,SAAArM,GAAC,OAAIA,KAE5CoT,EAAOlS,8CACV27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,WAAY,cAC9CywC,KAAKh1C,8CAAO27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,aAAc,cAAe,QAC9E2mB,KAAKvuB,MAAM0+C,QAAQ,CACjBU,YAAa/7C,8CAAO27C,KAAKzwB,KAAKvuB,MAAMy+C,cAAc72C,IAAI,cAActE,OAAO,cAC3E+7C,OAAQ9pC,EAAO,EACfvN,UAAW,WACXumF,gBAAiBD,EAAa,GAC9B3oB,0BAA2B2oB,EAAa,GACxCzoB,qBAAsByoB,EAAa,OAjGzC,qIAA8B5xD,6CAAMC,eAsGpCuxD,SAAS5nF,UAAY,CACnBgkE,WAAY1rD,+CACZ6/B,cAAe7/B,+CACfikC,KAAMjkC,+CACN8/B,QAASpyB,6CACT69D,YAAa79D,8CAGR,IAAMkiE,kBAAoBn5D,oDAC/B,SAAArb,GAAK,MAAK,CACRswD,WAAYtwD,EAAM5R,SAAS4R,MAC3BykC,cAAe1vB,0DAAsB/U,GACrC6oC,KAAMl0B,0DAAa3U,OAErB,SAAAzS,GAAQ,MAAK,CACXm3C,QAAS,SAAAx2C,GAAI,OAAIX,EAAS2R,oDAAQwlC,QAAQE,gBAAgB12C,KAC1DiiF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,sDAAiBC,KACnDy8C,iBAAkB,SAAAn9C,GAAI,OAAIX,EAAS2R,oDAAQmsC,iBAAiBzG,gBAAgB12C,QAT/CmtB,CAW/B64D,U,gKAzHWA,S,6FA8GAM,kB,s2JCrHAC,QAAb,4RAkBErY,UAAY,SAAA+X,GACV,EAAKnuF,MAAMmqF,YAAY,CAAE/vD,MAAO+zD,KAnBpC,mDACE,WACE,MAEI5/D,KAAKvuB,MADPsqE,WAAclwC,EADhB,EACgBA,MAEThvB,EAAP,eAHA,EACuBiC,KAEClG,MAAM,MAA9B,MACA,OACE,sHACE,2DAAC,wDAAM6e,OAAP,KACE,2DAAC,uEAAD,CAAeqW,OAAQjC,EAAOzT,QAAS4H,KAAK6nD,UAAWhrE,SAAUA,EAAjE,wBAEF,2DAAC,wDAAM8a,QAAP,KACE,2DAAC,8CAAD,4BAZV,oIAA6BwW,6CAAMC,eAuBnC8xD,QAAQnoF,UAAY,CAClBgkE,WAAY1rD,+CACZurE,YAAa79D,8CAGR,IAAMoiE,iBAAmBr5D,oDAC9B,SAAArb,GAAK,MAAK,CACRswD,WAAYtwD,EAAM5R,SAAS4R,MAC3BtP,SAAUgS,wDAAY1C,GACtBgD,UAAWhD,EAAM5R,SAAS6S,MAAM0oB,QAAQj8B,YAE1C,SAAAH,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,qDAAiBC,QAPvBysB,CAS9Bo5D,S,gKArCWA,Q,0FA4BAC,iB,0+ICzBAC,OAAb,yHACE,gBAAY3uF,GAAO,2CACjB,mBAAMA,IAmCR42B,QAAU,SAAAnL,GACJA,EAAMoL,cAAcC,UACjB,EAAK9c,MAAM0c,UACd,EAAKgT,SAAS,CAAEhT,UAAU,IAEnB,EAAK1c,MAAM0c,UACpB,EAAKgT,SAAS,CAAEhT,UAAU,IAG5BK,SAAStL,IA1CT,EAAKzR,MAAQ,CACX0c,UAAU,GAJK,EADrB,0HASE,6GACQnI,KAAKvuB,MAAM4uF,iBAAiBrgE,KAAKvuB,MAAM0K,UAD/C,gDATF,kFAaE,WAAS,WACCgsB,EAAanI,KAAKvU,MAAlB0c,SACR,EAA6CnI,KAAKvuB,MAA1Cgd,EAAR,EAAQA,UAAWlS,EAAnB,EAAmBA,WAAY+jF,EAA/B,EAA+BA,UAC/B,OAAO7xE,EACL,2DAAC,iDAAD,uBACE,2DAAC,yDAAD,kDAGF,kEACE9W,UAAWC,kDAAW,uBAAwB,CAC5CuwB,aAFJ,sBAKE,kEAAKxwB,UAAU,YAAY0wB,QAAS,SAAAnL,GAAK,OAAI,EAAKmL,QAAQnL,IAA1D,sBACG3gB,GAAcuP,OAAOC,KAAKxP,EAAW44B,UAAUpiC,OAAS,GACvD,2DAAC,yFAAD,CAAewtF,gBAAiBhkF,EAAW44B,SAA3C,uBAEF,2DAAC,wFAAD,CAAeqrD,UAAWjkF,EAAY+jF,UAAWA,EAAjD,uBACA,2DAAC,0FAAD,CAAgBE,UAAWjkF,EAAY+jF,UAAWA,EAAlD,2BA/BV,mIAA4BnyD,6CAAMC,eAkDlCgyD,OAAOroF,UAAY,CACjBsoF,iBAAkBtiE,6CAClBtP,UAAWrW,6CACXmE,WAAY8T,gDAGP,IAAMowE,gBAAkB35D,oDAAQ,SAACrb,GACtC,IAAMlP,EAAakP,EAAM5R,SAAS6pE,QAAQ/pE,KAC1C,MAAO,CACL8U,UAAWhD,EAAM5R,SAAS6S,MAAMg3D,QAAQvqE,QACxCgD,SAAUgS,wDAAY1C,GACtBlP,iBAED,SAAAvD,GAAQ,MAAK,CACdqnF,iBAAkB,SAAAlkF,GAAQ,OAAInD,EAASkD,qDAAsBC,QARhC2qB,CAS3Bs5D,Q,2BAEJ,SAAS53D,SAAStL,GACDA,EAAMoL,cAEdK,SAAS,CACdC,IAAK1L,EAAM2L,OACXC,KAAM5L,EAAM6L,S,qIAxEHq3D,O,+FAwDAK,gB,wGAWJj4D,S,o1HCrEIk4D,cAAb,oHACE,uBAAYjvF,GAAO,kDACjB,mBAAMA,IAkERkvF,mBAAqB,WAAM,MACjBH,EAAc,EAAK/uF,MAAnB+uF,UAER,OADiB10E,OAAOu7B,QAAP,UAAem5C,aAAf,EAAeA,EAAWzrD,YAA1B,QAAkC,IACnCx8B,KAAI,SAAA0N,GAClB,OACE,kEAAKvN,IAAKuN,EAAQ,GAAItO,UAAU,UAAhC,sBACE,kEAAKA,UAAU,eAAf,sBAA+BsO,EAAQ,GAAGovB,QAC1C,kEAAK19B,UAAU,QAAf,sBAAwBsO,EAAQ,SA1ErB,EAgFnB26E,wBAA0B,WACxB,MAAiC,EAAKnvF,MAA9B+uF,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UACbO,EAAqB,GACvBL,EAAUzrD,MAAQyrD,GAAaA,EAAUzrD,OAClBjpB,OAAOu7B,QAAQm5C,EAAUzrD,MAEjCx8B,KAAI,SAAA0N,GAKnB,OAJA46E,EAAmB56E,EAAQ,IAAM,GACjC46E,EAAmB56E,EAAQ,IAAI7F,MAAQ,CAAC2B,SAASkE,EAAQ,GAAGovB,OAAQ,KACpEwrD,EAAmB56E,EAAQ,IAAI7F,MAAM,GAAK,EAEnC,QAGgB0L,OAAOu7B,QAAQi5C,EAAUvrD,MAEjCx8B,KAAI,SAAA0N,GASnB,OARIA,EAAQ,KAAM46E,IAGhBA,EAAmB56E,EAAQ,IAAM,GACjC46E,EAAmB56E,EAAQ,IAAI7F,MAAQ,CAAC,IAHxCygF,EAAmB56E,EAAQ,IAAI7F,MAAM,GAAK2B,SAASkE,EAAQ,GAAGovB,OAAQ,IAOjE,SAKX,OADiBvpB,OAAOu7B,QAAQw5C,GAChBtoF,KAAI,SAAA0N,GAClB,OACE,2DAAC4M,aAAD,CACEna,IAAKuN,EAAQ,GACbyX,UAAU,MACV5E,MACE,sHACE,kEAAKnhB,UAAU,MAAf,sBACE,kEAAKA,UAAU,OAAf,sBACG7C,8CAAO0rF,EAAU3vC,aAAa97C,OAAO,2BAExC,kEAAK4C,UAAU,QAAf,sBAAwBkpF,EAAmB56E,EAAQ,IAAI7F,MAAM,KAE/D,kEAAKzI,UAAU,MAAf,sBACE,kEAAKA,UAAU,OAAf,sBACG7C,8CAAOwrF,EAAUzvC,aAAa97C,OAAO,2BAExC,kEAAK4C,UAAU,QAAf,sBAAwBkpF,EAAmB56E,EAAQ,IAAI7F,MAAM,MAfrE,sBAoBE,kEAAKzI,UAAU,UAAf,sBACG,EAAKmpF,gBACJD,EAAmB56E,EAAQ,IAAI7F,MAAM,GACrCygF,EAAmB56E,EAAQ,IAAI7F,MAAM,IAEvC,kEAAKzI,UAAU,QAAf,sBAAwBsO,EAAQ,UAzIvB,EAgJnB66E,gBAAkB,SAACC,EAAMC,GACvB,IAAIC,EAAY,kEAAKtpF,UAAU,cAAf,sBAA8BopF,EAAOC,GAQrD,OANID,IAASC,EACXC,EAAY,kEAAKtpF,UAAU,cAAf,2BACHqpF,EAAOD,IAChBE,EAAY,kEAAKtpF,UAAU,eAAf,sBAA+BqpF,EAAOD,IAG7CE,GAtJP,EAAKx1E,MAAQ,CACXiwE,YAAY,EACZwF,gBAAgB,GAGlB,EAAKC,QAAUhzD,6CAAM65B,YARJ,EADrB,kEAYE,WAEIhoC,KAAKmhE,QAAQ51C,SACbvrB,KAAKmhE,QAAQ51C,QAAQI,aAAe3rB,KAAKmhE,QAAQ51C,QAAQ61C,cAEzDphE,KAAKmb,SAAS,CAAE+lD,gBAAgB,MAjBtC,gCAsBE,WAEIlhE,KAAKmhE,QAAQ51C,SACbvrB,KAAKmhE,QAAQ51C,QAAQI,aAAe3rB,KAAKmhE,QAAQ51C,QAAQ61C,eACxDphE,KAAKvU,MAAMy1E,gBAEZlhE,KAAKmb,SAAS,CAAE+lD,gBAAgB,MA5BtC,oBAgCE,WAAS,WACP,EAAiClhE,KAAKvuB,MAA9B+uF,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UACnB,EAAuCtgE,KAAKvU,MAApCiwE,EAAR,EAAQA,WAAYwF,EAApB,EAAoBA,eAEpB,OAAKV,EAEH,kEAAK7oF,UAAU,2BAAf,sBACE,2FACE,mHAGA2oF,GACA,kEAAKpvF,IAAK8uB,KAAKmhE,QAASxpF,UAAWC,kDAAW,qBAAsB,CAAE2qB,IAAKm5D,IAA3E,sBACG17D,KAAK2gE,sBAGTL,GACC,kEAAKpvF,IAAK8uB,KAAKmhE,QAASxpF,UAAWC,kDAAW,qBAAsB,CAAE2qB,IAAKm5D,IAA3E,sBACG17D,KAAK4gE,2BAGTM,IAAmBxF,GAClB,kEAAK/jF,UAAU,gBAAf,sBACE,2DAAC,wDAAD,CACEA,UAAU,eACVygB,QAAS,kBAAM,EAAK+iB,SAAS,CAAEugD,YAAY,KAC3Cr+D,UAAQ,WAHV,oCAnBe,yHApC3B,0IAAmC8Q,6CAAMC,eA8JzCsyD,cAAc3oF,UAAY,CACxByoF,UAAWnwE,+CACXiwE,UAAWjwE,gD,aAGEqwE,cAAA,wCAET7tE,aAAeC,iEAAW,iBAAO,CACrCC,QAAS,CACPkF,QAAS,OACTopE,cAAe,SACfruE,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACV8kB,WAAY,SACZD,UAAW,SACXvJ,WAAY,OACZC,WAAY,YAEZ,SAAU,CACR6E,QAAS,OAET,WAAY,CACVqpE,YAAa,OACbzkB,WAAY,OACZlgD,WAAY,YAnBC7J,CAuBjBO,0D,gKA5LSqtE,c,6HAqKP7tE,a,orHCzKO0uE,eAAb,sHACE,wBAAY9vF,GAAO,mDACjB,mBAAMA,IAmERkvF,mBAAqB,WAAM,MACjBH,EAAc,EAAK/uF,MAAnB+uF,UAGR,OAFiB10E,OAAOu7B,QAAP,UAAem5C,aAAf,EAAeA,EAAWtrD,cAA1B,QAAoC,IAErC38B,KAAI,SAAA0N,GAClB,OACE,kEAAKvN,IAAKuN,EAAQ,GAAItO,UAAU,UAAhC,sBACGsO,EAAQ,QA3EE,EAiFnB26E,wBAA0B,WACxB,MAAiC,EAAKnvF,MAA9B+uF,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UAOnB,OANiBx0E,OAAOC,KAAKu0E,EAAUprD,QAEHj1B,QAAO,SAAAgG,GACzC,YAAqCpT,IAA9B2tF,EAAUtrD,OAAOjvB,MAGA1N,KAAI,SAAA0N,GAC5B,OACE,kEAAKvN,IAAKuN,EAAStO,UAAU,UAA7B,sBACGsO,OAzFP,EAAKwF,MAAQ,CACXiwE,YAAY,EACZwF,gBAAgB,GAGlB,EAAKC,QAAUhzD,6CAAM65B,YARJ,EADrB,mEAYE,WAEIhoC,KAAKmhE,QAAQ51C,SACbvrB,KAAKmhE,QAAQ51C,QAAQI,aAAe3rB,KAAKmhE,QAAQ51C,QAAQ61C,cAEzDphE,KAAKmb,SAAS,CAAE+lD,gBAAgB,MAjBtC,gCAsBE,WAEIlhE,KAAKmhE,QAAQ51C,SACbvrB,KAAKmhE,QAAQ51C,QAAQI,aAAe3rB,KAAKmhE,QAAQ51C,QAAQ61C,eACxDphE,KAAKvU,MAAMy1E,gBAEZlhE,KAAKmb,SAAS,CAAE+lD,gBAAgB,MA5BtC,oBAgCE,WAAS,WACP,EAAiClhE,KAAKvuB,MAA9B+uF,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UACnB,EAAuCtgE,KAAKvU,MAApCiwE,EAAR,EAAQA,WAAYwF,EAApB,EAAoBA,eAEpB,OAAKV,EAGH,kEAAK7oF,UAAU,4BAAf,sBACE,2FACE,4GAGA2oF,GACA,kEAAKpvF,IAAK8uB,KAAKmhE,QAASxpF,UAAWC,kDAAW,qBAAsB,CAAE2qB,IAAKm5D,IAA3E,sBACG17D,KAAK2gE,sBAGTL,GACC,kEAAKpvF,IAAK8uB,KAAKmhE,QAASxpF,UAAWC,kDAAW,qBAAsB,CAAE2qB,IAAKm5D,IAA3E,sBACG17D,KAAK4gE,2BAGTM,IAAmBxF,GAClB,kEAAK/jF,UAAU,gBAAf,sBACE,2DAAC,wDAAD,CACEA,UAAU,eACVygB,QAAS,kBAAM,EAAK+iB,SAAS,CAAEugD,YAAY,KAC3Cr+D,UAAQ,WAHV,oCApBe,yHApC3B,2IAAoC8Q,6CAAMC,eAoG1CmzD,eAAexpF,UAAY,CACzByoF,UAAWnwE,+CACXiwE,UAAWjwE,gD,aAGEkxE,eAAA,wC,gKAzGFA,e,w5HCEP51D,QAAU,CACd,CAAEn4B,MAAO,eAAgB4d,QAAS,QAClC,CAAE5d,MAAO,WACT,CAAEA,MAAO,SAAU4d,QAAS,UAC5B,CAAE5d,MAAO,eACT,CAAEA,MAAO,cACT,CAAEA,MAAO,SAAU4d,QAAS,WAGxBowE,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,kDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,uEAAO5mB,IAC7C,mEAAMyF,UAAU,iCAAiCzF,IAIhD,mEAAMyF,UAAU,wBAAwBzF,IAG3CuvF,YAAc,SAACtuC,EAAK16C,GAAN,OAClB,2DAAC,kDAAM42D,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAIne,KAAT,YAAiBv8B,GAASd,UAAU,uBACtD,2DAAC,kDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIne,QAE7B,2DAAC,kDAAMu6B,KAAP,KACE,mEAAM53D,UAAU,wBAAwBw7C,EAAI7d,UAE9C,2DAAC,kDAAMi6B,KAAP,KACE,mEAAM53D,UAAU,wBAAwBw7C,EAAIre,kBAE9C,2DAAC,kDAAMy6B,KAAP,KACE,mEAAM53D,UAAU,wBACb7C,8CAAOq+C,EAAIzd,kBAAkB/yB,UAAY7N,8CAAOq+C,EAAIzd,kBAAkB3gC,OAAO,wBAA0B,KAG5G,2DAAC,kDAAMw6D,KAAP,KACE,mEAAM53D,UAAU,wBACb7C,8CAAOq+C,EAAI3d,iBAAiB7yB,UAAY7N,8CAAOq+C,EAAI3d,iBAAiBzgC,OAAO,wBAA0B,KAG1G,2DAAC,kDAAMw6D,KAAP,KACE,mEAAM53D,UAAU,wBACd,kEAAKA,UAAU,oBACW,SAAvBw7C,EAAIwuC,eACH,kEAAKhqF,UAAU,oBACb,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMmH,KAAM8iF,0CAFhB,aAOA,kEAAKjqF,UAAU,sBACb,2DAAC,yDAAD,KACE,2DAAC,kDAAD,CAAMmH,KAAM+iF,0CAFhB,oBAaNC,cAAgB,SAAC,GAAoC,IAAlCvB,EAAkC,EAAlCA,gBAAiBwB,EAAiB,EAAjBA,WACxC,OAAO,2DAAC,kDAAUA,EAAaxB,EAAgBhoF,KAAI,SAAC46C,EAAK16C,GAAN,OAAgBgpF,YAAYtuC,EAAK16C,QAGzEupF,cAAb,oHACE,uBAAYvwF,GAAO,kDACjB,mBAAMA,IAoBRo9D,WAAa,SAACz9C,EAASD,GAAV,OAAoB,WAC/B,EAAKgqB,SAAS,CAAEyzB,aAAc,CAAEx9C,UAASD,aAtBxB,EAyBnB8wE,oBAAsB,SAAC1B,GACrB,IAAQ3xB,EAAiB,EAAKnjD,MAAtBmjD,aACFl2D,EAAMk2D,EAAax9C,QACnB8wE,EAAyC,QAAvBtzB,EAAaz9C,MAAkB,GAAK,EAC5D,OAAQzY,GACN,IAAK,OACH,OAAO,EAAKypF,WAAW5B,EAAiB2B,GAE1C,IAAK,SACH,OAAO,EAAKE,aAAa7B,EAAiB2B,GAE5C,IAAK,SACH,OAAO,EAAKG,aAAa9B,EAAiB2B,GAE5C,QACE,OAAO3B,IAxCM,EA4CnB4B,WAAa,SAAC5B,EAAiBpvE,GAC7B,OAAQovE,GAAmB,IAAI1gF,QAAQlD,MAAK,SAACitC,EAAIC,GAC/C,OAAQD,EAAG5U,KAAKzI,cAAcsd,EAAG7U,MAAS7jB,MA9C3B,EAkDnBixE,aAAe,SAAC7B,EAAiBpvE,GAC/B,OAAQovE,GAAmB,IAAI1gF,QAAQlD,MAAK,SAACitC,EAAIC,GAC/C,OAAQD,EAAG9U,gBAAkB+U,EAAG/U,iBAAmB3jB,MApDpC,EAwDnBkxE,aAAe,SAAC9B,EAAiBpvE,GAC/B,OAAQovE,GAAmB,IAAI1gF,QAAQlD,MAAK,SAACitC,EAAIC,GAG/C,QAFyC,SAAtBD,EAAG+3C,eAA4B,GAAK,IACb,SAAtB93C,EAAG83C,eAA4B,GAAK,IACpBxwE,MA1DtC,EAAK1F,MAAQ,CACXmjD,aAAc,CAAEx9C,QAAS,OAAQD,MAAO,QAHzB,EADrB,uDAQE,WACE,IAAQovE,EAAoBvgE,KAAKvuB,MAAzB8uF,gBACA3xB,EAAiB5uC,KAAKvU,MAAtBmjD,aACFmzB,EAAa,CAAEp2D,gBAASijC,eAAcC,WAAY7uC,KAAK6uC,YACvDyzB,EAAStiE,KAAKiiE,oBAAoB1B,GAExC,OACE,2DAACuB,cAAD,CACEvB,gBAAiB+B,EACjBP,WAAYA,MAjBpB,0IAAmC5zD,6CAAMC,e,2BAkEzC4zD,cAAcjqF,UAAY,CACxBwoF,gBAAiB3iD,kDAAU5U,O,qIAxIvB2C,Q,uHASA61D,gB,+HAWAC,Y,2HA6CAK,c,6HAIOE,c,6lDC/DPO,EAAU,SAAC,GAYX,QAXJxmB,WAAclwC,EAWV,EAXUA,MAAO/sB,EAWjB,EAXiBA,KACrB+oE,EAUI,EAVJA,UACA1rE,EASI,EATJA,SACAqmF,EAQI,EARJA,iBACAC,EAOI,EAPJA,kBACAC,EAMI,EANJA,cACAC,EAKI,EALJA,eACApoC,EAII,EAJJA,aACAqoC,EAGI,EAHJA,eACAnmB,EAEI,EAFJA,aACApvD,EACI,EADJA,cAEM7L,EAAS1C,EAAKlG,MAAM,MAAM,GACzBiE,EAAP,EAAmBiC,EAAKlG,MAAM,MAA9B,MACMiqF,EAAUhmF,IAAauH,IAASI,MAYtC,OAVAhS,qBAAU,WACH6a,GAAkBw1E,IACrBL,EAAiB,CAAErmF,aACnBsmF,EAAkB,CAChBloC,eACAp+C,gBAGH,CAACA,IAGF,oCACE,kBAAC,IAAMsb,OAAP,KACE,kBAAC,IAAD,CAAeqW,OAAQjC,EAAOzT,QAASyvD,EAAWhrE,SAAUA,KAE9D,kBAAC,IAAM8a,QAAP,KACGkrE,EACC,kBAAC,IAAD,MAEA,kBAAC,IAAD,CACEpmB,aAAcA,EACd1oE,KAAM83B,EACNlyB,KAAMgpF,EACNnzE,KAAMkzE,EACNnoC,aAAcA,EACdvD,QAAS4rC,EACTphF,OAAQA,O,EA3Cd+gF,E,eAmDNA,EAAQxqF,UAAY,CAClBgkE,WAAYn+B,IAAUvtB,OACtBqyE,cAAe9kD,IAAU5U,MACzB25D,eAAgB/kD,IAAUvtB,OAC1BosD,aAAc7+B,IAAUvtB,OACxBlU,SAAUyhC,IAAU9f,OACpB+pD,UAAWjqC,IAAU7f,KACrB6kE,eAAgBhlD,IAAU7f,KAC1Bw8B,aAAc3c,IAAU9f,OACxB0kE,iBAAkB5kD,IAAU7f,MAGvB,I,IAAM+kE,EAAmBh8D,aAC9B,SAAArb,GAAK,MAAK,CACRswD,WAAYtwD,EAAM5R,SAAS4R,MAC3Bi3E,cAAel0E,YAAoB/C,GACnC8uC,aAAc9uC,EAAM5R,SAASkT,QAAQ/Z,SACrCypE,aAAchxD,EAAM5R,SAAS6S,MAAMK,QACnCM,cAAeiB,YAAgB7C,GAC/Bk3E,eAAgBpzE,YAAsB9D,GACtCtP,SAAUgS,YAAY1C,OAExB,SAAAzS,GAAQ,MAAK,CACX6uE,UAAW,SAAAh8C,GAAK,OAAI7yB,EAASoB,YAAiB,CAAEyxB,YAChD+2D,eAAgB,SAAA9jF,GAAI,OAAI9F,EAASkF,YAAoBY,KACrD2jF,kBAAmB,SAAAhmF,GAAO,OAAIzD,EAASgF,YAAwBvB,KAC/D+lF,iBAAkB,SAAA/lF,GAAO,OAAIzD,EAASoF,YAAuB3B,QAdjCqqB,CAgB9By7D,I,6FA/EIA,E,6EA+DOO,E,6mICjEPtB,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,iDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,wBAAhB,sBAAyCzF,IAIxC,mEAAMyF,UAAU,eAAhB,sBAAgCzF,IAGnC6wF,cAAgB,CACpB,CAAEvvF,MAAO,iBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,MACT,CAAEA,MAAO,YACT,CAAEA,MAAO,wBACT,CAAEA,MAAO,yBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,wBACT,CAAEA,MAAO,2BACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,oBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,qBACT,CAAEA,MAAO,cAGLwvF,iBAAmB,CAAEr3D,QAASo3D,cAAen0B,aAAc,CAAEx9C,QAAS,eAAgBD,MAAO,QAAU09C,WAAY,cAEnHo0B,kBAAoB,SAAC9vC,EAAK16C,GAAN,OACxB,2DAAC,iDAAM42D,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAI+vC,cAAT,YAA0BzqF,GAASd,UAAU,eAC/D,2DAAC,iDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI+vC,cAA3B,wBAEF,2DAAC,iDAAM3zB,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIgwC,cAA3B,wBAEF,2DAAC,iDAAM5zB,KAAP,KAAapc,EAAIiwC,MACjB,2DAAC,iDAAM7zB,KAAP,KAAalwC,kFAAiB8zB,EAAIkwC,WAClC,2DAAC,iDAAM9zB,KAAP,KAAalwC,kFAAiB8zB,EAAImwC,0BAClC,2DAAC,iDAAM/zB,KAAP,KAAalwC,kFAAiB8zB,EAAIowC,2BAClC,2DAAC,iDAAMh0B,KAAP,KAAalwC,kFAAiB8zB,EAAIqwC,mBAClC,2DAAC,iDAAMj0B,KAAP,KAAalwC,kFAAiB8zB,EAAIswC,oBAClC,2DAAC,iDAAMl0B,KAAP,KAAapc,EAAIuwC,mBACjB,2DAAC,iDAAMn0B,KAAP,KAAapc,EAAIwwC,sBACjB,2DAAC,iDAAMp0B,KAAP,KAAapc,EAAIywC,cACjB,2DAAC,iDAAMr0B,KAAP,KAAapc,EAAI0wC,eACjB,2DAAC,iDAAMt0B,KAAP,KAAalwC,kFAAiB8zB,EAAI2wC,YAClC,2DAAC,iDAAMv0B,KAAP,KAAa5R,qFAAmBxK,EAAI4wC,qBACpC,2DAAC,iDAAMx0B,KAAP,KAAapc,EAAI6wC,aAIfC,mBAAqB,CACzB,CAAEzwF,MAAO,QACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,QACT,CAAEA,MAAO,YACT,CAAEA,MAAO,SACT,CAAEA,MAAO,cACT,CAAEA,MAAO,QACT,CAAEA,MAAO,cAGL0wF,sBAAwB,CAAEv4D,QAASs4D,mBAAoBr1B,aAAc,CAAEx9C,QAAS,eAAgBD,MAAO,QAAU09C,WAAY,cAE7Hs1B,uBAAyB,SAAChxC,EAAK16C,GAAN,OAC7B,2DAAC,iDAAM42D,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAIjhD,KAAT,YAAiBuG,GAASd,UAAU,eACtD,2DAAC,iDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIjhD,KAA3B,wBAEF,2DAAC,iDAAMq9D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIgwC,cAA3B,wBAEF,2DAAC,iDAAM5zB,KAAP,KAAapc,EAAIixC,eACjB,2DAAC,iDAAM70B,KAAP,KAAapc,EAAIkxC,SACjB,2DAAC,iDAAM90B,KAAP,KAAapc,EAAImxC,QACjB,2DAAC,iDAAM/0B,KAAP,KAAapc,EAAI99B,MACjB,2DAAC,iDAAMk6C,KAAP,KAAapc,EAAIoxC,UACjB,2DAAC,iDAAMh1B,KAAP,KAAapc,EAAI1nC,OACjB,2DAAC,iDAAM8jD,KAAP,KAAapc,EAAIqxC,YACjB,2DAAC,iDAAMj1B,KAAP,KAAapc,EAAIp/C,MACjB,2DAAC,iDAAMw7D,KAAP,KAAapc,EAAI6wC,aAIfS,eAAiB,CACrB,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WAGxCC,gBAAkB,SAACv4E,GACvB,IAAQpT,EAAYoT,EAAZpT,QACR,IAAKA,EAAQhG,OACX,MAAO,GAET,MAAyBgG,EAAQ,GAAGA,QAA5BvF,EAAR,EAAQA,MAAOlC,EAAf,EAAeA,MACf,OACE,mEAAMqG,UAAU,oBAAhB,sBAAqCnE,EAArC,KAA8CmqD,qFAAmBrsD,GAAjE,QAIEqzF,a,gTAoFJC,wBAA0B,SAACC,GACzB,IAAMC,EAAkBD,EAAY/0E,OACjC7P,QAAO,SAACV,GAAD,MAA6B,QAAnBA,EAAKykF,aACtBzrF,KAAI,SAACgH,GAAD,OAAUA,EAAKwkF,sBACnB54E,QAAO,SAAC45E,EAAKxlF,GAEZ,OADAwlF,IAAQxlF,IAEP,GAEL,OAAOslF,EAAY/0E,OAChB7P,QAAO,SAACV,GAAD,MAA6B,SAAnBA,EAAKykF,aACtBzrF,KAAI,SAACgH,GACJ,MAAO,CACL/L,MAAO+L,EAAK2jF,cACZ5xF,MAAOiO,EAAKwkF,uBAEbp6E,OAAO,CAAC,CACTnW,MAAO,WACPlC,MAAOwzF,M,mEArGb,WACE,MAA0C9kE,KAAKvuB,MAAvC0K,EAAR,EAAQA,SAAU6oF,EAAlB,EAAkBA,oBAElBA,EAAoB,CAAE7oF,WAAUgB,QAAS,yDAA0DoB,WAAYtH,gDAC/G8E,YAAW,WACTipF,EAAoB,CAAE7oF,WAAUgB,QAAS,0DAA2DoB,WAAYrH,kDAC/G,KACH6E,YAAW,WACTipF,EAAoB,CAAE7oF,WAAUgB,QAAS,2DAA4DoB,WAAYpH,kDAChH,O,oBAGL,WACE,MAAsC6oB,KAAKvuB,MAAnCozF,EAAR,EAAQA,YAAapoB,EAArB,EAAqBA,aACfwoB,EAAcxoB,EAAa0H,eAAiB1H,EAAa2H,oBAAsB3H,EAAa4H,mBAC5F6gB,EAAkBL,EAAY90E,aAAe80E,EAAY90E,YAAYhd,OAAS8xF,EAAY90E,YAAY,GAAK,KAC3Go1E,EAAqBN,EAAY70E,aAAe60E,EAAY70E,YAAYjd,OACxEqyF,EAAgBP,EAAY/0E,QAAU+0E,EAAY/0E,OAAO/c,OACzDsyF,IAAeH,GAAmBE,GAAiBD,EACrDG,EAAiB,GAErB,OAAIL,EAEA,2DAAC,iDAAD,uBACE,2DAAC,yDAAD,2CAKDI,GAQDD,IACFE,EAAiBtlE,KAAK4kE,wBAAwBC,IAI9C,kEAAKltF,UAAU,0BAAf,sBACGutF,EACC,kEAAKvtF,UAAU,qBAAf,sBACE,kEAAKA,UAAU,2BAAf,wCACA,kEAAKA,UAAU,2BAAf,sBAA2CutF,EAAgBK,eAC3D,kEAAK5tF,UAAU,2BAAf,4CACA,kEAAKA,UAAU,2BAAf,sBAA2CutF,EAAgBM,oBAE3D,GACHL,EACC,wFACE,iEAAIxtF,UAAU,oBAAd,sCACA,2DAAC,iDAAD,YAAWusF,sBAAX,CAAkCvsF,UAAU,QAA5C,uBACGktF,EAAY70E,YAAYzX,KAAI,SAACwI,EAAItI,GAAL,OAAe0rF,uBAAuBpjF,EAAItI,QAGzE,GACH2sF,EACC,sHACE,iEAAIztF,UAAU,oBAAd,iCACA,2DAAC,iDAAD,YAAWqrF,iBAAX,CAA6BrrF,UAAU,QAAvC,uBACGktF,EAAY/0E,OAAOvX,KAAI,SAACwI,EAAItI,GAAL,OAAewqF,kBAAkBliF,EAAItI,OAE9D6sF,EAAevyF,QACd,2DAAC,wCAAD,CAAqBmmB,OAAQ,IAA7B,sBACE,2DAAC,wCAAD,uBACE,2DAAC,wCAAD,CAAKvf,KAAM2rF,EAAgBj/B,QAAQ,QAAQo/B,GAAG,MAAMC,GAAG,MAAMC,YAAa,EAAGC,YAAa,IAA1F,sBACGN,EAAe/sF,KAAI,SAAC4T,EAAO1T,GAAR,OAClB,2DAAC,wCAAD,CAAMC,IAAG,eAAUD,GAASshD,KAAM0qC,eAAehsF,GAAjD,2BAGJ,2DAAC,wCAAD,CAASk6B,QAAS+xD,gBAAlB,0BAKN,KA/CJ,2DAAC,iDAAD,uD,yIAhCmBv2D,6CAAMC,eA2GjCu2D,aAAa5sF,UAAY,CACvB0kE,aAAc7+B,kDAAUvtB,OACxBlU,SAAUyhC,kDAAU9f,OACpBknE,oBAAqBpnD,kDAAU7f,MAG1B,IAAM8nE,sBAAwB/+D,oDACnC,SAAArb,GAAK,MAAK,CACRgxD,aAAchxD,EAAM5R,SAAS6S,MAAMK,QACnC5Q,SAAUgS,wDAAY1C,GACtBo5E,YAAah1E,wDAAuBpE,OAEtC,SAAAzS,GAAQ,MAAK,CACXgsF,oBAAqB,SAAAvoF,GAAO,OAAIzD,EAASsF,qDAA0B7B,QAPlCqqB,CASnC69D,c,gKAtOInD,gB,6GAWAuB,c,2GAkBAC,iB,8GAEAC,kB,+GAwBAgB,mB,gHAcAC,sB,mHAEAC,uB,oHAoBAM,e,4GAMAC,gB,6GAWAC,a,0GAiHOkB,sB,ikDC5NPC,EAAU,SAAC,GAYX,QAXJ/pB,WAAclwC,EAWV,EAXUA,MAAO/sB,EAWjB,EAXiBA,KACrB+oE,EAUI,EAVJA,UACA1rE,EASI,EATJA,SACA4pF,EAQI,EARJA,WACAC,EAOI,EAPJA,YACAv1E,EAMI,EANJA,eACAw1E,EAKI,EALJA,cACA1rC,EAII,EAJJA,aACA2rC,EAGI,EAHJA,eACAzpB,EAEI,EAFJA,aACApvD,EACI,EADJA,cAEM7L,EAAS1C,EAAKlG,MAAM,MAAM,GACzBiE,EAAP,EAAmBiC,EAAKlG,MAAM,MAA9B,MAUA,OATApG,qBAAU,WACH6a,GACH04E,EAAW,CACT5pF,WACAU,eAGH,CAACV,IAGF,oCACE,kBAAC,IAAMsb,OAAP,KACE,kBAAC,IAAD,CAAeqW,OAAQjC,EAAOzT,QAASyvD,EAAWhrE,SAAUA,KAE9D,kBAAC,IAAM8a,QAAP,KACE,kBAAC,IAAD,CACE8kD,aAAcA,EACd1oE,KAAM83B,EACNpb,eAAgBA,EAChB9W,KAAMssF,EACNz2E,KAAMw2E,EACNzrC,aAAcA,EACdvD,QAASkvC,EACT1kF,OAAQA,EACR3E,SAAUA,O,EAvCdipF,E,eA8CNA,EAAQ/tF,UAAY,CAClBgkE,WAAYn+B,IAAUvtB,OACtB21E,YAAapoD,IAAU5U,MACvBi9D,cAAeroD,IAAUvtB,OACzBosD,aAAc7+B,IAAUvtB,OACxBlU,SAAUyhC,IAAU9f,OACpB+pD,UAAWjqC,IAAU7f,KACrBmoE,eAAgBtoD,IAAU7f,KAC1Bw8B,aAAc3c,IAAUvtB,OACxB01E,WAAYnoD,IAAU7f,MAGjB,I,IAAMooE,EAAmBr/D,aAC9B,SAAArb,GACE,IACO5O,EAAP,EAD4B4O,EAAM5R,SAA1B4R,MAAS3M,KACOlG,MAAM,MAA9B,MAEA,MAAO,CACLmjE,WAAYtwD,EAAM5R,SAAS4R,MAC3Bu6E,YAAa/1E,YAAqBxE,GAClC8uC,aAAc,CACZhqC,MAAO9E,EAAM5R,SAAS0T,QAAQG,cAC9B2C,OAAQ5E,EAAM5R,SAAS0T,QAAQC,gBAEjCivD,aAAchxD,EAAM5R,SAAS6S,MAAMa,QACnC04E,cAAej1E,YAAwBvF,EAAO5O,GAC9C4T,eAAgBD,YAAkB/E,GAClCtP,SAAUgS,YAAY1C,GACtB4B,cAAegC,YAAgB5D,OAGnC,SAAAzS,GAAQ,MAAK,CACX6uE,UAAW,SAAAh8C,GAAK,OAAI7yB,EAASoB,YAAiB,CAAEyxB,YAChDq6D,eAAgB,SAAA71E,GAAM,OAAIrX,EAAS0G,YAAuB2Q,KAC1D01E,WAAY,SAAAtpF,GAAO,OAAIzD,EAASwG,YAAsB/C,QAtB1BqqB,CAwB9Bg/D,I,6FAlFIA,E,6EA0DOK,E,inKCtDAC,SAAb,gSAgDEC,gBAAkB,WAChB,MAGI,EAAK50F,MAFP0K,EADF,EACEA,SAGKU,EAAP,eAJA,EAEEk/D,WAAcj9D,KAEQlG,MAAM,MAA9B,MAEA,EAAKnH,MAAM8a,YAAY,CACrBpQ,WACAU,WACApD,UAAW,cA1DjB,+DACE,WACEumB,KAAKqmE,oBAFT,oBAKE,WACE,MASIrmE,KAAKvuB,MARPo6B,EADF,EACEA,MACArf,EAFF,EAEEA,SACAiC,EAHF,EAGEA,UACAo5D,EAJF,EAIEA,UACA1rE,EALF,EAKEA,SACAmqF,EANF,EAMEA,kBACAC,EAPF,EAOEA,mBAIK1pF,EAAP,eAXA,EAQEk/D,WAAcj9D,KAGQlG,MAAM,MAA9B,MAEA,OACE,sHACE,2DAAC,wDAAM6e,OAAP,KACE,2DAAC,uEAAD,CAAeqW,OAAQjC,EAAOzT,QAASyvD,EAAWhrE,SAAUA,EAA5D,wBAEF,2DAAC,wDAAM8a,QAAP,KACG9a,IAAauH,2DAASI,OACrB,2DAAC,2DAAD,CAAqBiK,UAAWA,EAAWjC,SAAUA,EAArD,uBAED3P,IAAauH,2DAASI,OACrB,2DAAC,2DAAD,CACEiK,UAAWA,EACXjC,SAAUA,EACVvN,KAAM9C,EACNqqF,gBAAiBxmE,KAAKqmE,gBACtBC,kBAAmBA,EACnBC,mBAAoBA,EANtB,wBAUJ,2DAAC,wDAAMntE,OAAP,KACE,2DAAC,0DAAD,CAAQzhB,UAAU,6BAA6BygB,QAAS4H,KAAKqmE,gBAA7D,sBACE,2DAAC,0CAAD,CAAkBhzF,GAAG,kBAArB,4BAzCZ,qIAA8B86B,6CAAMC,eA+DpCg4D,SAASruF,UAAY,CACnB8zB,MAAO+R,kDAAU9f,OAAOksB,WACxBv7B,UAAWmvB,kDAAUxlC,KACrB+D,SAAUyhC,kDAAU9f,OAAOksB,WAC3B69B,UAAWjqC,kDAAU7f,MAGhB,IAAM0oE,kBAAoB3/D,oDAC/B,SAAArb,GAAK,MAAK,CACRe,SAAUyE,wDAAkBxF,GAC5BogB,MAAOpgB,EAAM5R,SAAS4R,MAAMogB,MAC5Bpd,UAAWhD,EAAM5R,SAAS6S,MAAMF,SAASrT,QACzCgD,SAAUgS,wDAAY1C,GACtBswD,WAAYtwD,EAAM5R,SAAS4R,UAE7B,SAAAzS,GAAQ,MAAK,CACX6uE,UAAW,SAAAxtE,GAAQ,OAAIrB,EAASoB,qDAAiB,CAAEyxB,MAAOxxB,MAC1DkS,YAAa,SAAA9P,GAAO,OAAIzD,EAAS4E,qDAAuBnB,KACxD6pF,kBAAmB,kBAAMttF,EAAS8E,yDAClCyoF,mBAAoB,kBAAMvtF,EAAS+E,4DAZN+oB,CAc/Bs/D,U,gKApFWA,S,6FAsEAK,kB,gpHCnFP96D,QAAU,CACd,CAAEn4B,MAAO,YACT,CAAEA,MAAO,YACT,CAAEA,MAAO,UACT,CAAEA,MAAO,WACT,CAAEA,MAAO,OACT,CAAEA,MAAO,aAAc4d,QAAS,cAChC,CAAE5d,MAAO,WACT,CAAEA,MAAO,SAILguF,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,kDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,wBAAhB,sBAAyCzF,IAIxC,mEAAMyF,UAAU,eAAhB,sBAAgCzF,IAGnCuvF,YAAc,SAACtuC,EAAK16C,GAAN,OAClB,2DAAC,kDAAM42D,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAIrL,IAAT,YAAgBrvC,GAASd,UAAU,eACrD,2DAAC,kDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI,WAA3B,wBAEF,2DAAC,kDAAMoc,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIuzC,SAA3B,wBAEF,2DAAC,kDAAMn3B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIviC,OAA3B,wBAEF,2DAAC,kDAAM2+C,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIwzC,QAA3B,wBAEF,2DAAC,kDAAMp3B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIyzC,IAA3B,wBAEF,2DAAC,kDAAMr3B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI0zC,WAA3B,wBAEF,2DAAC,kDAAMt3B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI2zC,QAA3B,wBAEF,2DAAC,kDAAMv3B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI4zC,KAA3B,0BAYAjF,cAAgB,SAAC,GAAuD,IAArDrzE,EAAqD,EAArDA,UAAWjC,EAA0C,EAA1CA,SAAUw6E,EAAgC,EAAhCA,cAAejF,EAAiB,EAAjBA,WAC3D,OAAItzE,EAEA,2DAAC,kDAAD,uBACE,2DAAC,kEAAD,yBAIkB,IAApBjC,EAASzZ,OACJ,2DAAC,kDAAD,uBAASi0F,GAEX,2DAAC,kDAAD,YAAWjF,EAAX,wBAAwBv1E,EAASjU,IAAIkpF,eAGjCwF,oBAAb,gIACE,6BAAYx1F,GAAO,wDACjB,mBAAMA,IA4BRo9D,WAAa,SAACz9C,EAASD,GAAV,OAAoB,WAC/B,EAAKgqB,SAAS,CAAEyzB,aAAc,CAAEx9C,UAASD,aA9BxB,EAiCnB+1E,aAAe,SAACzpF,GACd,IAAQmxD,EAAiB,EAAKnjD,MAAtBmjD,aACR,OAAQnxD,GAAgB,IAAIoC,QAAQlD,MAAK,SAACitC,EAAIC,GAC5C,IAAMq4C,EAAyC,QAAvBtzB,EAAaz9C,MAAkB,GAAK,EAC5D,OAAQy4B,EAAGi9C,WAAah9C,EAAGg9C,YAAc3E,MAnC3C,EAAKz2E,MAAQ,CACXmjD,aAAc,CAAEx9C,QAAS,aAAcD,MAAO,QAH/B,EADrB,6DAQE,WACE,MAGI6O,KAAKvuB,MAFP+a,EADF,EACEA,SACAiC,EAFF,EAEEA,UAGMmgD,EAAiB5uC,KAAKvU,MAAtBmjD,aACFmzB,EAAa,CAAEp2D,gBAASijC,eAAcC,WAAY7uC,KAAK6uC,YACvDs4B,EAAiBnnE,KAAKknE,aAAa16E,GAEzC,OACE,sHACE,2DAACs1E,cAAD,CACErzE,UAAWA,EACXjC,SAAU26E,EACVpF,WAAYA,EACZiF,cAAc,wBAJhB,0BApBR,gJAAyC74D,6CAAMC,e,2BA2C/C64D,oBAAoBlvF,UAAY,CAC9B0W,UAAWmvB,kDAAUxlC,KACrBoU,SAAUoxB,kDAAU5U,O,qIAtHhB2C,Q,8GAYA61D,gB,sHAWAC,Y,kHAoCAK,c,oHAcOmF,oB,8xJClEPt7D,QAAU,CACd,CAAEn4B,MAAO,OAAQ4d,QAAS,QAC1B,CAAE5d,MAAO,QACT,CAAEA,MAAO,UACT,CAAEA,MAAO,cACT,CAAEA,MAAO,aACT,CAAEA,MAAO,OACT,CAAEA,MAAO,WACT,CAAEA,MAAO,OACT,CAAEA,MAAO,cACT,CAAEA,MAAO,iBAGLguF,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,kDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,wBAAhB,sBAAyCzF,IAIxC,mEAAMyF,UAAU,eAAhB,sBAAgCzF,IAGnCuvF,YAAc,SAACtuC,EAAK16C,EAAO2uF,GAAb,OAClB,2DAAC,kDAAM/3B,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAIrL,IAAT,YAAgBrvC,GAASd,UAAU,eACrD,2DAAC,kDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIk0C,KAA3B,wBAEF,2DAAC,kDAAM93B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIm0C,KAA3B,wBAEF,2DAAC,kDAAM/3B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI73C,OAA3B,wBAEF,2DAAC,kDAAMi0D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIo0C,SAA3B,wBAEF,2DAAC,kDAAMh4B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIq0C,SAA3B,wBAEF,2DAAC,kDAAMj4B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIs0C,IAA3B,wBAEF,2DAAC,kDAAMl4B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIu0C,OAA3B,wBAEF,2DAAC,kDAAMn4B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIw0C,IAA3B,wBAEF,2DAAC,kDAAMp4B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIy0C,WAA3B,wBAEF,2DAAC,kDAAMr4B,KAAP,KACE,kEAAK53D,UAAU,YAAf,uBACIw7C,EAAIq0C,UAAY,IAAI1/E,OAAO/U,OAAS,GAAKgP,SAASoxC,EAAIk0C,KAAM,KAAO,IACnE,2DAAC,yDAAD,CAASjvE,QAAS,kBAAMgvE,EAAYj0C,EAAIk0C,OAAxC,sBACE,2DAAC,kDAAD,CAAMvoF,KAAMk0C,uCAAZ,4BAQN8uC,cAAgB,SAAC,GAAoF,IAAlFrzE,EAAkF,EAAlFA,UAAWjC,EAAuE,EAAvEA,SAAUw6E,EAA6D,EAA7DA,cAAejF,EAA8C,EAA9CA,WAAY8F,EAAkC,EAAlCA,4BACvE,OAAIp5E,EAEA,2DAAC,kDAAD,uBACE,2DAAC,kEAAD,yBAIkB,IAApBjC,EAASzZ,OACJ,2DAAC,kDAAD,uBAASi0F,GAEX,2DAAC,kDAAD,YAAWjF,EAAX,wBAAwBv1E,EAASjU,KAAI,SAAC46C,EAAK16C,GAAN,OAAgBgpF,YAAYtuC,EAAK16C,GAAO,SAACqvF,GAAD,OAAeD,EAA4BC,WAGpHC,mBAAb,8HACE,4BAAYt2F,GAAO,uDACjB,mBAAMA,IA+DRo9D,WAAa,SAACz9C,EAASD,GAAV,OAAoB,WAC/B,EAAKgqB,SAAS,CAAEyzB,aAAc,CAAEx9C,UAASD,aAjExB,EAoEnB+1E,aAAe,SAACzpF,GACd,IAAQmxD,EAAiB,EAAKnjD,MAAtBmjD,aACR,OAAQnxD,GAAgB,IAAIoC,QAAQlD,MAAK,SAACitC,EAAIC,GAC5C,IAAMq4C,EAAyC,QAAvBtzB,EAAaz9C,MAAkB,GAAK,EAC5D,OAAQy4B,EAAGy9C,KAAOx9C,EAAGw9C,MAAQnF,MAxEd,EA4EnBkF,YA5EmB,4DA4EL,WAAOU,GAAP,mGACJ7oF,EAAS,EAAKxN,MAAdwN,KACFlG,EAAU,CACdkE,WAAY,CACV+qF,WAAYF,EACZ1rF,OAAQ6C,EACR/B,QAAS,OACT/E,SAAS,GAEXgF,QAAS,uCACTG,UAAW,MAVD,SAaiB5C,8DAAe3B,GAbhC,YAaN4B,EAbM,QAcOC,YAAY7H,OAdnB,uBAeJ8H,EAAiBF,EAAeC,YAAY,GAAGE,KAf3C,kBAgBH2D,8DAAuB5D,IAhBpB,gCAkBLgB,QAAQC,QAAQ,OAlBX,gDA5EK,sDAEjB,EAAK2P,MAAQ,CACXmjD,aAAc,CAAEx9C,QAAS,OAAQD,MAAO,OACxC82E,6BAA6B,EAC7BC,gBAAiB,MAGnB,EAAKC,+BAAiC,CACpCzvE,KAAM,SAACovE,GACL,EAAK3sD,SAAS,CAAE8sD,6BAA6B,EAAMC,gBAAiBJ,KAEtE5rE,MAAO,WACL,EAAKif,SAAS,CAAE8sD,6BAA6B,EAAOC,gBAAiB,QAEvEnmD,QAAS,WACP,IAAQmmD,EAAoB,EAAKz8E,MAAzBy8E,gBACR,EAAKz2F,MAAM60F,oBACX,EAAKc,YAAYc,GAAiBn7D,MAAK,SAACtxB,GAClCA,EACF,EAAKhK,MAAM+0F,mBAEX,EAAK/0F,MAAM80F,qBACX,EAAK6B,6BAA6B1vE,aAM1C,EAAK0vE,6BAA+B,CAClC1vE,KAAM,WACJ,EAAKyiB,SAAS,CAAEktD,sBAAsB,KAExCnsE,MAAO,WACL,EAAKif,SAAS,CAAEktD,sBAAsB,MAlCzB,EADrB,4DAwCE,WAAS,WACP,EAGIroE,KAAKvuB,MAFP+a,EADF,EACEA,SACAiC,EAFF,EAEEA,UAGF,EAA4EuR,KAAKvU,MAAzEmjD,EAAR,EAAQA,aAAcq5B,EAAtB,EAAsBA,4BAA6BI,EAAnD,EAAmDA,qBAC7CtG,EAAa,CAAEp2D,gBAASijC,eAAcC,WAAY7uC,KAAK6uC,YACvDs4B,EAAiBnnE,KAAKknE,aAAa16E,GAEzC,OACE,sHACE,2DAACs1E,cAAD,CACErzE,UAAWA,EACXjC,SAAU26E,EACVpF,WAAYA,EACZ8F,4BAA6B,SAACC,GAAD,OAAe,EAAKK,+BAA+BzvE,KAAKovE,IACrFd,cAAc,wBALhB,uBAOA,2DAAC,2DAAD,CAAmBtuE,KAAMuvE,EAA6Bt9E,QAASqV,KAAKmoE,+BAAgC5mF,QAAQ,8CAA5G,uBACA,2DAAC,2DAAD,CAAYmX,KAAM2vE,EAAsB19E,QAASqV,KAAKooE,6BAA8B7mF,QAAQ,sEAA5F,0BA5DR,+IAAwC4sB,6CAAMC,e,2BAmG9C25D,mBAAmBhwF,UAAY,CAC7B0W,UAAWmvB,kDAAUxlC,KACrBoU,SAAUoxB,kDAAU5U,MACpB/pB,KAAM2+B,kDAAU9f,OAChB0oE,gBAAiB5oD,kDAAU7f,KAC3BuoE,kBAAmB1oD,kDAAU7f,KAC7BwoE,mBAAoB3oD,kDAAU7f,M,qIAxL1B4N,Q,6GAaA61D,gB,qHAWAC,Y,iHAyCAK,c,mHAcOiG,mB,sqLC1EAO,iBAAb,gUAmDEC,wBAA0B,WAAM,MAC9B,EAGI,EAAK92F,MAFOqN,EADhB,EACEi9D,WAAcj9D,KACd3C,EAFF,EAEEA,SAEKU,EAAP,eAAmBiC,EAAKlG,MAAM,MAA9B,MAEMG,EAAU,CACdkE,YAAU,GACRC,QAAS,QADD,kBAFSH,sDAAqBC,oBAAoBH,GAI1CV,GAFR,6BAGC,GAHD,GAKVgB,QAASJ,sDAAqByrF,YAAY3rF,GAC1CS,UAAW,MAGb,EAAK7L,MAAMkb,oBAAoB5T,IApEnC,EAuEE0vF,iBAAmB,SAACC,GAClB,OAAQA,GAAqB,IAAInwF,KAAI,SAAC46C,GACpC,IAAM7zB,EAAaG,KAAKwwC,MAAM9c,EAAIw1C,aAAe,KAC3CC,EAAUnpE,KAAKwwC,MAAO3wC,EAAa,IAAO6zB,EAAI01C,SAC9CC,EAASrpE,KAAKwwC,MAAO3wC,EAAa,IAAO6zB,EAAI41C,QACnD,MAAO,CACLC,MAAO71C,EAAI81C,OACXC,eAAgB5pE,EAChBA,WAAYA,EAAaspE,EAAUE,EACnCF,UACAE,SACAK,WAAYh2C,EAAI01C,QAChBO,UAAWj2C,EAAI41C,YAnFvB,uEACE,WACE/oE,KAAKuoE,4BAFT,oBAKE,WACE,MAKIvoE,KAAKvuB,MALT,IACEsqE,WAAclwC,EADhB,EACgBA,MAAO/sB,EADvB,EACuBA,KACrB8N,EAFF,EAEEA,iBACA6B,EAHF,EAGEA,UACAo5D,EAJF,EAIEA,UAGKhrE,EAAP,eAAmBiC,EAAKlG,MAAM,MAA9B,MACMywF,EAAuBtsF,sDAAqBusF,iBAAiBzsF,GAAYmjB,KAAKyoE,iBAAiB77E,GAAoB,KAEzH,OACE,sHACE,2DAAC,wDAAM6K,OAAP,KACE,2DAAC,uEAAD,CAAeqW,OAAQjC,EAAOzT,QAASyvD,EAAWhrE,SAAUA,EAA5D,wBAEF,2DAAC,wDAAM8a,QAAP,KACG9a,IAAauH,2DAASC,QACrB,2DAAC,0DAAD,CAAmBuI,iBAAkBA,EAAkB6B,UAAWA,EAAlE,uBAED5R,IAAauH,2DAASE,UACrB,2DAAC,4DAAD,CAAqBsI,iBAAkBA,EAAkB6B,UAAWA,EAApE,uBAED5R,IAAauH,2DAASG,OACrB,2DAAC,yDAAD,CAAkBqI,iBAAkBA,EAAkB6B,UAAWA,EAAjE,uBAED5R,IAAauH,2DAASI,OACrB,2DAAC,yDAAD,CAAkBoI,iBAAkBA,EAAkB6B,UAAWA,EAAjE,uBAED1R,sDAAqBusF,iBAAiBzsF,IACrC,kEAAKlF,UAAU,kBAAf,sBACG0xF,EAAqBt2F,OAAS,GAC7B,2DAAC,wDAAD,CAAkB4G,KAAM0vF,EAAxB,yBAKR,2DAAC,wDAAMjwE,OAAP,KACE,2DAAC,2DAAD,CAAQzhB,UAAU,6BAA6BygB,QAAS4H,KAAKuoE,wBAA7D,sBACE,2DAAC,0CAAD,CAAkBl1F,GAAG,kBAArB,4BA5CZ,6IAAsC86B,6CAAMC,eAyF5Ck6D,iBAAiBvwF,UAAY,CAC3B0W,UAAWmvB,kDAAUxlC,KACrBuU,oBAAqBixB,kDAAU7f,KAC/Bg+C,WAAYn+B,kDAAUvtB,OACtBzD,iBAAkBgxB,kDAAU5U,OAGvB,IAAMugE,0BAA4BziE,oDACvC,SAAArb,GAAK,MAAK,CACRmB,iBAAkB0E,wDAAuB7F,GACzCgD,UAAWhD,EAAM5R,SAAS6S,MAAME,iBAAiBzT,QACjD4iE,WAAYtwD,EAAM5R,SAAS4R,MAC3BtP,SAAUgS,wDAAY1C,OAExB,SAAAzS,GAAQ,MAAK,CACX6uE,UAAW,SAAAxtE,GAAQ,OAAIrB,EAASoB,qDAAiB,CAAEyxB,MAAOxxB,MAC1DsS,oBAAqB,SAAAlQ,GAAO,OAAIzD,EAASyB,qDAA0BgC,QAT9BqqB,CAWvCwhE,kB,gKA3GWA,iB,qHAgGAiB,0B,ihDC7GPC,EAAwB,SAAC,GAAsB,IAApBvvC,EAAoB,EAApBA,EAAGC,EAAiB,EAAjBA,EAAGnhD,EAAc,EAAdA,QACrC,OACE,uBAAGiuD,UAAS,oBAAe/M,EAAf,YAAoBC,EAApB,KAAZ,sBACE,0BAAMviD,UAAU,QAAQsiD,EAAG,EAAGC,EAAG,EAAG+M,GAAI,GAAIC,WAAW,MAAMnN,KAAK,OAAOiN,UAAU,cAAnF,sBAAkGjuD,EAAQzH,SAK1Gm4F,EAAe,SAAC,GAAgB,IAAd1wF,EAAc,EAAdA,QACtB,OACE,wBAAIpB,UAAU,4BAAd,uBAEKoB,GAAW,IAAIR,KAAI,SAAC4T,EAAO1T,GAAR,OAClB,wBAAId,UAAU,cAAce,IAAG,eAAUD,GAAzC,sBACE,0BAAMd,UAAU,OAAOsc,MAAO,CAAEhB,gBAAiB9G,EAAM6G,OAAvD,uBACA,0BAAMrb,UAAU,QAAQsc,MAAO,CAAEjB,MAAO7G,EAAM6G,OAA9C,sBAAwD7G,EAAM7a,aAQpEo4F,EAAqB,SAAC/vF,GAC1B,IAAKA,IAASA,EAAKZ,UAAYY,EAAKZ,QAAQhG,OAC1C,MAAO,GAGT,IACA,EADA,EAA0B4G,EAAKZ,QAA/B,MAC0FA,QAAlFiwF,EAAR,EAAQA,MAAOE,EAAf,EAAeA,eAAgBC,EAA/B,EAA+BA,WAAYP,EAA3C,EAA2CA,QAASQ,EAApD,EAAoDA,UAAWN,EAA/D,EAA+DA,OAC/D,OACE,yBAAKnxF,UAAU,6BAAf,sBACE,yBAAKA,UAAU,MAAf,sBAAqB,4BAAQA,UAAU,QAAlB,kCAA2C,0BAAMA,UAAU,QAAhB,sBAAyBqxF,IACzF,yBAAKrxF,UAAU,MAAf,sBAAqB,4BAAQA,UAAU,QAAlB,wCAAiD,0BAAMA,UAAU,QAAhB,sBAAyB0nB,YAAiB6pE,KAChH,yBAAKvxF,UAAU,MAAf,sBAAqB,4BAAQA,UAAU,QAAlB,+BAAwC,0BAAMA,UAAU,QAAhB,sBAAyBwxF,EAAzB,MAAwC9pE,YAAiBupE,GAAzD,MAC7D,yBAAKjxF,UAAU,MAAf,sBAAqB,4BAAQA,UAAU,QAAlB,+BAAwC,0BAAMA,UAAU,QAAhB,sBAAyByxF,EAAzB,KAAsCA,EAAY,EAAZ,WAAoB/pE,YAAiBypE,GAArC,KAAkD,OAK9Ia,EAAmB,SAAC,GAAa,IAAXhwF,EAAW,EAAXA,KACjC,OACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAUA,KAAMA,EAAMgsD,OAAQ,CAAE/8B,IAAK,GAAIg9B,MAAO,GAAI98B,KAAM,GAAI+8B,OAAQ,KAAO+jC,QAAS,GAAtF,sBACE,kBAAC,IAAD,CAAeC,gBAAgB,MAAMxhC,UAAU,EAA/C,uBACA,kBAAC,IAAD,CAAQ11B,QAAS82D,EAAcx6B,MAAM,QAAQ66B,cAAc,MAAMzwD,OAAO,WAAWpgB,MAAO,IAA1F,uBACA,kBAAC,IAAD,CAAS0Z,QAAS+2D,EAAoB3wE,OAAQ,CAAEghC,KAAM,WAAtD,uBAEA,kBAAC,IAAD,CAAOsM,QAAQ,QAAQE,SAAS,QAAQ3zB,SAAU,EAAG4zB,KAAMgjC,EAA3D,uBACA,kBAAC,IAAD,CAAOnjC,QAAQ,iBAAiB0jC,OAAQ,CAAC,OAAQ,QAASC,cAAe,SAAAxjC,GAAI,OAAInnC,YAAiBmnC,IAAlG,uBAEA,kBAAC,IAAD,CAAKH,QAAQ,UAAU4jC,QAAQ,SAAS/3F,KAAK,SAAS6nD,KAAK,UAA3D,uBACA,kBAAC,IAAD,CAAKsM,QAAQ,SAAS4jC,QAAQ,SAAS/3F,KAAK,SAAS6nD,KAAK,UAA1D,uBACA,kBAAC,IAAD,CAAKsM,QAAQ,aAAa4jC,QAAQ,SAAS/3F,KAAK,eAAe6nD,KAAK,UAApE,2B,6FArDFyvC,E,oHAQAC,E,2GAeAC,E,iHAiBOC,E,8nIClCPh+D,QAAU,CACd,CAAEn4B,MAAO,cACT,CAAEA,MAAO,UACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,YACT,CAAEA,MAAO,UACT,CAAEA,MAAO,cACT,CAAEA,MAAO,eAAgB4d,QAAS,gBAClC,CAAE5d,MAAO,oBACT,CAAEA,MAAO,UACT,CAAEA,MAAO,WAGLguF,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,kDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,0BAAhB,sBAA2CzF,IAI1C,mEAAMyF,UAAU,iBAAhB,sBAAkCzF,IAGrCuvF,YAAc,SAACtuC,EAAK16C,GAAN,OAClB,2DAAC,kDAAM42D,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAIrL,IAAT,YAAgBrvC,GAASd,UAAU,iBACrD,2DAAC,kDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI+2C,QAA3B,wBAEF,2DAAC,kDAAM36B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI81C,OAA3B,wBAEF,2DAAC,kDAAM15B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIg3C,aAA3B,wBAEF,2DAAC,kDAAM56B,KAAP,KACE,2DAAC,kDAAD,CAAc7xC,UAAU,MAAM5E,MAAM,oBAApC,sBACE,2DAAC,yDAAD,CAASnhB,UAAU,YAAYygB,QAAS,WAAQoU,iFAAoB2mB,EAAIi3C,WAAxE,sBACE,2DAAC,kDAAD,CAAMtrF,KAAMurF,uCAAZ,yBAGJ,2DAAC7I,gBAAD,CAAiBtvF,KAAMihD,EAAIi3C,SAA3B,wBAEF,2DAAC,kDAAM76B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIm3C,OAA3B,wBAEF,2DAAC,kDAAM/6B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIo3C,WAA3B,wBAEF,2DAAC,kDAAMh7B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMmtB,kFAAiBI,KAAKwwC,MAAMluD,SAASoxC,EAAIw1C,aAAc,IAAM,MAApF,wBAEF,2DAAC,kDAAMp5B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMmtB,kFAAiBI,KAAKwwC,MAAMluD,SAASoxC,EAAIq3C,iBAAkB,MAAlF,wBAEF,2DAAC,kDAAMj7B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI01C,QAA3B,wBAEF,2DAAC,kDAAMt5B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI41C,OAA3B,0BAKAjH,cAAgB,SAAC,GAA4D,IAA1DrzE,EAA0D,EAA1DA,UAAWg8E,EAA+C,EAA/CA,cAAezD,EAAgC,EAAhCA,cAAejF,EAAiB,EAAjBA,WAChE,OAAItzE,EAEA,2DAAC,kDAAD,uBACE,2DAAC,kEAAD,yBAIuB,IAAzBg8E,EAAc13F,OACT,2DAAC,kDAAD,uBAASi0F,GAEX,2DAAC,kDAAD,YAAWjF,EAAX,wBAAwB0I,EAAclyF,IAAIkpF,eAGtCiJ,kBAAb,4HACE,2BAAYj5F,GAAO,sDACjB,mBAAMA,IA4BRo9D,WAAa,SAACz9C,EAASD,GAAV,OAAoB,WAC/B,EAAKgqB,SAAS,CAAEyzB,aAAc,CAAEx9C,UAASD,aA9BxB,EAiCnBw5E,kBAAoB,SAACjC,GACnB,IAAQ95B,EAAiB,EAAKnjD,MAAtBmjD,aACR,OAAQ85B,GAAqB,IAAI7oF,QAAQlD,MAAK,SAACitC,EAAIC,GACjD,IAAMq4C,EAAyC,QAAvBtzB,EAAaz9C,MAAkB,GAAK,EAC5D,OAAQy4B,EAAG++C,aAAe9+C,EAAG8+C,cAAgBzG,MAnC/C,EAAKz2E,MAAQ,CACXmjD,aAAc,CAAEx9C,QAAS,eAAgBD,MAAO,SAHjC,EADrB,2DAQE,WACE,MAGI6O,KAAKvuB,MAFPmb,EADF,EACEA,iBACA6B,EAFF,EAEEA,UAGMmgD,EAAiB5uC,KAAKvU,MAAtBmjD,aACFmzB,EAAa,CAAEp2D,gBAASijC,eAAcC,WAAY7uC,KAAK6uC,YACvD+7B,EAAmB5qE,KAAK2qE,kBAAkB/9E,GAEhD,OACE,sHACE,2DAACk1E,cAAD,CACErzE,UAAWA,EACXg8E,cAAeG,EACf7I,WAAYA,EACZiF,cAAc,0BAJhB,0BApBR,8IAAuC74D,6CAAMC,e,2BA2C7Cs8D,kBAAkB3yF,UAAY,CAC5B0W,UAAWmvB,kDAAUxlC,KACrBwU,iBAAkBgxB,kDAAU5U,O,qIA3HxB2C,Q,oHAaA61D,gB,4HAWAC,Y,wHAwCAK,c,0HAcO4I,kB,4rIC9EP/+D,QAAU,CACd,CAAEn4B,MAAO,WACT,CAAEA,MAAO,YACT,CAAEA,MAAO,SACT,CAAEA,MAAO,cACT,CAAEA,MAAO,eAAgB4d,QAAS,gBAG9BowE,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,kDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,0BAAhB,sBAA2CzF,IAI1C,mEAAMyF,UAAU,iBAAhB,sBAAkCzF,IAGrCuvF,YAAc,SAACtuC,EAAK16C,GAAN,OAClB,2DAAC,kDAAM42D,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAI03C,QAAT,YAAoBpyF,GAASd,UAAU,iBACzD,2DAAC,kDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI23C,OAA3B,wBAEF,2DAAC,kDAAMv7B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI03C,QAA3B,wBAEF,2DAAC,kDAAMt7B,KAAP,KACE,2DAAC,kDAAD,CAAc7xC,UAAU,MAAM5E,MAAM,oBAApC,sBACE,2DAAC,yDAAD,CAASnhB,UAAU,YAAYygB,QAAS,WAAQoU,iFAAoB2mB,EAAI1pC,QAAxE,sBACE,2DAAC,kDAAD,CAAM3K,KAAMurF,uCAAZ,yBAGJ,2DAAC7I,gBAAD,CAAiBtvF,KAAMihD,EAAI1pC,MAA3B,wBAEF,2DAAC,kDAAM8lD,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI43C,MAA3B,wBAEF,2DAAC,kDAAMx7B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMmtB,kFAAiBtd,SAASoxC,EAAI63C,YAAa,KAAlE,0BAKAlJ,cAAgB,SAAC,GAA4D,IAA1DrzE,EAA0D,EAA1DA,UAAWg8E,EAA+C,EAA/CA,cAAezD,EAAgC,EAAhCA,cAAejF,EAAiB,EAAjBA,WAChE,OAAItzE,EAEA,2DAAC,kDAAD,uBACE,2DAAC,kEAAD,yBAIuB,IAAzBg8E,EAAc13F,OACT,2DAAC,kDAAD,uBAASi0F,GAEX,2DAAC,kDAAD,YAAWjF,EAAX,wBAAwB0I,EAAclyF,IAAIkpF,eAGtCwJ,oBAAb,gIACE,6BAAYx5F,GAAO,wDACjB,mBAAMA,IA4BRo9D,WAAa,SAACz9C,EAASD,GAAV,OAAoB,WAC/B,EAAKgqB,SAAS,CAAEyzB,aAAc,CAAEx9C,UAASD,aA9BxB,EAiCnBw5E,kBAAoB,SAACjC,GACnB,IAAQ95B,EAAiB,EAAKnjD,MAAtBmjD,aACR,OAAQ85B,GAAqB,IAAI7oF,QAAQlD,MAAK,SAACitC,EAAIC,GACjD,IAAMq4C,EAAyC,QAAvBtzB,EAAaz9C,MAAkB,GAAK,EAC5D,OAAQy4B,EAAGohD,YAAcnhD,EAAGmhD,aAAe9I,MAnC7C,EAAKz2E,MAAQ,CACXmjD,aAAc,CAAEx9C,QAAS,cAAeD,MAAO,SAHhC,EADrB,6DAQE,WACE,MAGI6O,KAAKvuB,MAFPmb,EADF,EACEA,iBACA6B,EAFF,EAEEA,UAGMmgD,EAAiB5uC,KAAKvU,MAAtBmjD,aACFmzB,EAAa,CAAEp2D,gBAASijC,eAAcC,WAAY7uC,KAAK6uC,YACvD+7B,EAAmB5qE,KAAK2qE,kBAAkB/9E,GAEhD,OACE,sHACE,2DAACk1E,cAAD,CACErzE,UAAWA,EACXg8E,cAAeG,EACf7I,WAAYA,EACZiF,cAAc,0BAJhB,0BApBR,gJAAyC74D,6CAAMC,e,2BA2C/C68D,oBAAoBlzF,UAAY,CAC9B0W,UAAWmvB,kDAAUxlC,KACrBwU,iBAAkBgxB,kDAAU5U,O,qIAvGxB2C,Q,sHAQA61D,gB,8HAWAC,Y,0HAyBAK,c,4HAcOmJ,oB,6rIC1DPt/D,QAAU,CACd,CAAEn4B,MAAO,cACT,CAAEA,MAAO,QACT,CAAEA,MAAO,YACT,CAAEA,MAAO,eAAgB4d,QAAS,QAClC,CAAE5d,MAAO,UAGLguF,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,kDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,0BAAhB,sBAA2CzF,IAI1C,mEAAMyF,UAAU,iBAAhB,sBAAkCzF,IAGrCuvF,YAAc,SAACtuC,EAAK16C,GAAN,OAClB,2DAAC,kDAAM42D,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAI+3C,WAAT,YAAuBzyF,GAASd,UAAU,iBAC5D,2DAAC,kDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI+3C,WAA3B,wBAEF,2DAAC,kDAAM37B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIg4C,KAA3B,wBAEF,2DAAC,kDAAM57B,KAAP,KACE,2DAAC,kDAAD,CAAc7xC,UAAU,MAAM5E,MAAM,oBAApC,sBACE,2DAAC,yDAAD,CAASnhB,UAAU,YAAYygB,QAAS,WAAQoU,iFAAoB2mB,EAAIi4C,WAAxE,sBACE,2DAAC,kDAAD,CAAMtsF,KAAMurF,uCAAZ,yBAGJ,2DAAC7I,gBAAD,CAAiBtvF,KAAMihD,EAAIi4C,SAA3B,wBAEF,2DAAC,kDAAM77B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMmtB,kFAAiBI,KAAKwwC,MAAMluD,SAASoxC,EAAIk4C,KAAM,IAAM,MAA5E,wBAEF,2DAAC,kDAAM97B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIm4C,MAA3B,0BAKAxJ,cAAgB,SAAC,GAA4D,IAA1DrzE,EAA0D,EAA1DA,UAAWg8E,EAA+C,EAA/CA,cAAezD,EAAgC,EAAhCA,cAAejF,EAAiB,EAAjBA,WAChE,OAAItzE,EAEA,2DAAC,kDAAD,uBACE,2DAAC,kEAAD,yBAIuB,IAAzBg8E,EAAc13F,OACT,2DAAC,kDAAD,uBAASi0F,GAEX,2DAAC,kDAAD,YAAWjF,EAAX,wBAAwB0I,EAAclyF,IAAIkpF,eAGtC8J,iBAAb,0HACE,0BAAY95F,GAAO,qDACjB,mBAAMA,IA4BRo9D,WAAa,SAACz9C,EAASD,GAAV,OAAoB,WAC/B,EAAKgqB,SAAS,CAAEyzB,aAAc,CAAEx9C,UAASD,aA9BxB,EAiCnBw5E,kBAAoB,SAACjC,GACnB,IAAQ95B,EAAiB,EAAKnjD,MAAtBmjD,aACR,OAAQ85B,GAAqB,IAAI7oF,QAAQlD,MAAK,SAACitC,EAAIC,GACjD,IAAMq4C,EAAyC,QAAvBtzB,EAAaz9C,MAAkB,GAAK,EAC5D,OAAQy4B,EAAGyhD,KAAOxhD,EAAGwhD,MAAQnJ,MAnC/B,EAAKz2E,MAAQ,CACXmjD,aAAc,CAAEx9C,QAAS,OAAQD,MAAO,SAHzB,EADrB,0DAQE,WACE,MAGI6O,KAAKvuB,MAFPmb,EADF,EACEA,iBACA6B,EAFF,EAEEA,UAGMmgD,EAAiB5uC,KAAKvU,MAAtBmjD,aACFmzB,EAAa,CAAEp2D,gBAASijC,eAAcC,WAAY7uC,KAAK6uC,YACvD+7B,EAAmB5qE,KAAK2qE,kBAAkB/9E,GAEhD,OACE,sHACE,2DAACk1E,cAAD,CACErzE,UAAWA,EACXg8E,cAAeG,EACf7I,WAAYA,EACZiF,cAAc,0BAJhB,0BApBR,6IAAsC74D,6CAAMC,e,2BA2C5Cm9D,iBAAiBxzF,UAAY,CAC3B0W,UAAWmvB,kDAAUxlC,KACrBwU,iBAAkBgxB,kDAAU5U,O,qIAvGxB2C,Q,mHAQA61D,gB,2HAWAC,Y,uHAyBAK,c,yHAcOyJ,iB,urIC1DP5/D,QAAU,CACd,CAAEn4B,MAAO,iBACT,CAAEA,MAAO,YACT,CAAEA,MAAO,cACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,mBAAoB4d,QAAS,kBACtC,CAAE5d,MAAO,oBACT,CAAEA,MAAO,iBACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,mBAGLguF,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,kDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,0BAAhB,sBAA2CzF,IAI1C,mEAAMyF,UAAU,iBAAhB,sBAAkCzF,IAGrCuvF,YAAc,SAACtuC,EAAK16C,GAAN,OAClB,2DAAC,kDAAM42D,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAI+vC,cAAT,YAA0BzqF,GAASd,UAAU,iBAC/D,2DAAC,kDAAM43D,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI+vC,cAA3B,wBAEF,2DAAC,kDAAM3zB,KAAP,KACE,2DAAC,kDAAD,CAAc7xC,UAAU,MAAM5E,MAAM,oBAApC,sBACE,2DAAC,yDAAD,CAASnhB,UAAU,YAAYygB,QAAS,WAAQoU,iFAAoB2mB,EAAIq4C,YAAxE,sBACE,2DAAC,kDAAD,CAAM1sF,KAAMurF,uCAAZ,yBAGJ,2DAAC7I,gBAAD,CAAiBtvF,KAAMihD,EAAIq4C,UAA3B,wBAEF,2DAAC,kDAAMj8B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIs4C,eAA3B,wBAEF,2DAAC,kDAAMl8B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMmtB,kFAAiBI,KAAKwwC,MAAoD,IAA9CluD,SAASoxC,EAAI,0BAA2B,MAA3F,wBAEF,2DAAC,kDAAMoc,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMmtB,kFAAiBtd,SAASoxC,EAAI,gCAAiC,KAAtF,wBAEF,2DAAC,kDAAMoc,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMmtB,kFAAiBtd,SAASoxC,EAAIu4C,eAAgB,KAArE,wBAEF,2DAAC,kDAAMn8B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMmtB,kFAAiBtd,SAASoxC,EAAIw4C,eAAgB,KAArE,wBAEF,2DAAC,kDAAMp8B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAIy4C,cAA3B,wBAEF,2DAAC,kDAAMr8B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI04C,eAA3B,wBAEF,2DAAC,kDAAMt8B,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI24C,eAA3B,0BAKAhK,cAAgB,SAAC,GAA4D,IAA1DrzE,EAA0D,EAA1DA,UAAWg8E,EAA+C,EAA/CA,cAAezD,EAAgC,EAAhCA,cAAejF,EAAiB,EAAjBA,WAChE,OAAItzE,EAEA,2DAAC,kDAAD,uBACE,2DAAC,kEAAD,yBAIuB,IAAzBg8E,EAAc13F,OACT,2DAAC,kDAAD,uBAASi0F,GAEX,2DAAC,kDAAD,YAAWjF,EAAX,wBAAwB0I,EAAclyF,IAAIkpF,eAGtCsK,iBAAb,0HACE,0BAAYt6F,GAAO,qDACjB,mBAAMA,IA4BRo9D,WAAa,SAACz9C,EAASD,GAAV,OAAoB,WAC/B,EAAKgqB,SAAS,CAAEyzB,aAAc,CAAEx9C,UAASD,aA9BxB,EAiCnBw5E,kBAAoB,SAACjC,GACnB,IAAQ95B,EAAiB,EAAKnjD,MAAtBmjD,aACR,OAAQ85B,GAAqB,IAAI7oF,QAAQlD,MAAK,SAACitC,EAAIC,GACjD,IAAMq4C,EAAyC,QAAvBtzB,EAAaz9C,MAAkB,GAAK,EAC5D,OAAQy4B,EAAG8hD,eAAiB7hD,EAAG6hD,gBAAkBxJ,MAnCnD,EAAKz2E,MAAQ,CACXmjD,aAAc,CAAEx9C,QAAS,iBAAkBD,MAAO,SAHnC,EADrB,0DAQE,WACE,MAGI6O,KAAKvuB,MAFPmb,EADF,EACEA,iBACA6B,EAFF,EAEEA,UAGMmgD,EAAiB5uC,KAAKvU,MAAtBmjD,aACFmzB,EAAa,CAAEp2D,gBAASijC,eAAcC,WAAY7uC,KAAK6uC,YACvD+7B,EAAmB5qE,KAAK2qE,kBAAkB/9E,GAEhD,OACE,sHACE,2DAACk1E,cAAD,CACErzE,UAAWA,EACXg8E,cAAeG,EACf7I,WAAYA,EACZiF,cAAc,0BAJhB,0BApBR,6IAAsC74D,6CAAMC,e,2BA2C5C29D,iBAAiBh0F,UAAY,CAC3B0W,UAAWmvB,kDAAUxlC,KACrBwU,iBAAkBgxB,kDAAU5U,O,qIA3HxB2C,Q,mHAaA61D,gB,2HAWAC,Y,uHAwCAK,c,yHAcOiK,iB,inBC/EAC,EAA2B,SAAC,GAAgC,IAA9Bl+D,EAA8B,EAA9BA,OAAQg6B,EAAsB,EAAtBA,gBACjD,OACE,yBAAKnwD,UAAU,mBAAf,sBACE,kBAAC,IAAD,CAAc+lB,UAAU,SAAS5E,MAAM,aAAvC,sBACE,yBACEnhB,UAAWC,IAAW,SAAU,CAC9Bk2B,OAAQA,IAAW6H,IAAuBE,QAE5Czd,QAAS,kBAAM0vC,EAAgBnyB,IAAuBE,QACtDoL,KAAK,eALP,sBAOE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMniC,KAAM+7C,KAAZ,0BAIN,kBAAC,IAAD,CAAcn9B,UAAU,SAAS5E,MAAM,aAAvC,sBACE,yBACEnhB,UAAWC,IAAW,SAAU,CAC9Bk2B,OAAQA,IAAW6H,IAAuBC,QAE5Cxd,QAAS,kBAAM0vC,EAAgBnyB,IAAuBC,QACtDqL,KAAK,eALP,sBAOE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMniC,KAAMmtF,KAAZ,6B,4FAzBCD,E,qnMCoBPE,wBAA0B,SAAC,GAAa,IAAXh6F,EAAW,EAAXA,KACjC,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,kDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,yBAAhB,sBAA0CzF,IAIzC,mEAAMyF,UAAU,gBAAhB,sBAAiCzF,IAGpCy5B,QAAU,CACd,CAAEn4B,MAAO,YACT,CAAEA,MAAO,UACT,CAAEA,MAAO,OAAQy7D,MAAO,UACxB,CAAEz7D,MAAO,OAAQy7D,MAAO,UACxB,CAAEz7D,MAAO,gBAAiBy7D,MAAO,UACjC,CAAEz7D,MAAO,kBAAmBy7D,MAAO,UACnC,CAAEz7D,MAAO,WAAYy7D,MAAO,UAC5B,CAAEz7D,MAAO,UAAWy7D,MAAO,UAC3B,CAAEz7D,MAAO,UAAWy7D,MAAO,UAC3B,CAAEz7D,MAAO,UAAWy7D,MAAO,UAC3B,CAAEz7D,MAAO,UAAWy7D,MAAO,WAGvBwyB,YAAc,SAACxgF,EAAUxI,EAAO0zF,EAAWC,EAAiB5M,EAAkBvB,EAAsBH,EAAuBuO,GAA7G,OAClB,2DAAC,kDAAMh9B,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKuI,EAAS/O,KAAd,YAAsBuG,GAASd,UAAU,iBAC3D,2DAAC,kDAAM43D,KAAP,CAAYL,QAAQ,YAClB,2DAAC,0DAAD,CACEv7D,SAAU,SAACupB,GAAD,OAAWkvE,EAAgBnrF,EAAUic,EAAMtI,OAAOC,UAC5DA,QAASs3E,EACT92E,KAAK,QACLrC,MAAM,UACN++B,QAAS,CAAEre,KAAM,mBALnB,wBAQF,2DAAC,kDAAM67B,KAAP,CAAYL,QAAQ,OAAOv3D,UAAU,aACnC,2DAACu0F,wBAAD,CAAyBh6F,KAAMkL,2DAA0Bg/E,iBAAiBn7E,EAAS/O,MAAnF,wBAEF,2DAAC,kDAAMq9D,KAAP,CAAY53D,UAAU,gBACnBsJ,EAASd,SAEZ,2DAAC,kDAAMovD,KAAP,KACE,kEAAK53D,UAAU,gBAAf,sBAAgCsJ,EAAS0sC,OAE3C,2DAAC,kDAAM4hB,KAAP,CAAY53D,UAAU,aACpB,kEAAKA,UAAU,gBAAf,sBAAgCsJ,EAAS+f,OAE3C,2DAAC,kDAAMuuC,KAAP,CAAY53D,UAAU,eACpB,kEAAKA,UAAU,gBAAf,uBACImmF,EAAsB78E,GAAU9H,SAChC,2DAAC,yDAAD,CAAamC,OAAQ2iF,EAAqBh9E,GAA1C,uBAED68E,EAAsB78E,GAAU9H,SAC/B,2DAAC,2DAAD,CAAQkc,KAAK,OAAb,yBAIN,2DAAC,kDAAMk6C,KAAP,CAAY53D,UAAU,eACpB,kEAAKA,UAAU,gBAAf,uBACImmF,EAAsB78E,GAAU9H,SAChC,2DAAC,yDAAD,CAAamC,OAAQkkF,EAAiBv+E,GAAtC,uBAED68E,EAAsB78E,GAAU9H,SAC/B,2DAAC,2DAAD,CAAQkc,KAAK,OAAb,yBAIN,2DAAC,kDAAMk6C,KAAP,KACE,kEAAK53D,UAAS,oBAAgByF,2DAA0BkvF,kBAAkBrrF,EAASpE,UAA8B,GAAlB,iBAA/F,sBACE,2DAAC,yDAAD,CAASub,QAAS,kBAAMi0E,EAAkB,CAAEvtF,KAAMmC,EAASnC,KAAM+sB,MAAO,cAAxE,sBACE,2DAAC,kDAAD,CAAM/sB,KAAMqxD,uCAAZ,0BAIN,2DAAC,kDAAMZ,KAAP,KACE,kEAAK53D,UAAS,oBAAgByF,2DAA0BqxB,kBAAkBxtB,EAASpE,UAA8B,GAAlB,iBAA/F,sBACE,2DAAC,yDAAD,CAASub,QAAS,kBAAMi0E,EAAkB,CAAEvtF,KAAMmC,EAASnC,KAAM+sB,MAAO,cAAxE,sBACE,2DAAC,kDAAD,CAAM/sB,KAAMogF,uCAAZ,0BAIN,2DAAC,kDAAM3vB,KAAP,KACE,kEAAK53D,UAAS,oBAAgByF,2DAA0BmvF,gBAAgBtrF,EAASpE,UAA8B,GAAlB,iBAA7F,sBACE,2DAAC,yDAAD,CAASub,QAAS,kBAAMi0E,EAAkB,CAAEvtF,KAAMmC,EAASnC,KAAM+sB,MAAO,YAAxE,sBACE,2DAAC,kDAAD,CAAM/sB,KAAMugF,uCAAZ,0BAIN,2DAAC,kDAAM9vB,KAAP,KACE,kEAAK53D,UAAS,oBAAgByF,2DAA0BsxB,iBAAiBztB,EAASpE,UAA8B,GAAlB,iBAA9F,sBACE,2DAAC,yDAAD,CAASub,QAAS,kBAAMi0E,EAAkB,CAAEvtF,KAAMmC,EAASnC,KAAM+sB,MAAO,aAAxE,sBACE,2DAAC,kDAAD,CAAM/sB,KAAMqgF,wCAAZ,0BAIN,2DAAC,kDAAM5vB,KAAP,KACE,kEAAK53D,UAAS,oBAAgByF,2DAA0BuxB,iBAAiB1tB,EAASpE,UAA8B,GAAlB,iBAA9F,sBACE,2DAAC,yDAAD,CAASub,QAAS,kBAAMi0E,EAAkB,CAAEvtF,KAAMmC,EAASnC,KAAM+sB,MAAO,aAAxE,sBACE,2DAAC,kDAAD,CAAM/sB,KAAMsgF,uCAAZ,0BAILhiF,2DAA0BovF,0BAA0BvrF,EAASpE,WAC5D,2DAAC,kDAAM0yD,KAAP,KACE,kEAAK53D,UAAU,YAAf,sBACE,2DAAC,yDAAD,CAASygB,QAAS,kBAAMi0E,EAAkB,CAAEvtF,KAAMmC,EAASnC,KAAM+sB,MAAO,aAAxE,sBACE,2DAAC,kDAAD,CAAM/sB,KAAMwgF,wCAAZ,4BAQNmN,uBAAyB,SAACC,EAAc56C,GAC5C,OACE,2DAAC,2DAAD,CACE34B,QAAQ,YACRnG,MAAM,UACNqC,KAAK,QACL+C,QAASs0E,EACTzwB,UAAW,2DAAC,mEAAD,wBACXlqB,QAAS,CAAEre,KAAM,yBACjBhgC,SAAUo+C,EAPZ,0CAcE66C,iBAAmB,SAACD,GACxB,OACE,2DAAC,2DAAD,CACEvzE,QAAQ,YACRnG,MAAM,UACNqC,KAAK,QACL08B,QAAS,CAAEre,KAAM,yBACjBtb,QAASs0E,EALX,yCAYEE,mBAAqB,SAACF,GAC1B,OACE,2DAAC,2DAAD,CACEvzE,QAAQ,YACRnG,MAAM,UACNqC,KAAK,QACL08B,QAAS,CAAEre,KAAM,yBACjBtb,QAASs0E,EALX,2CAYEG,iBAAmB,SAACH,GACxB,OACE,2DAAC,2DAAD,CACEvzE,QAAQ,YACRnG,MAAM,UACNqC,KAAK,QACL08B,QAAS,CAAEre,KAAM,eACjBtb,QAASs0E,EALX,0CAYEI,oBAAsB,SAACJ,EAAc56C,GACzC,OACE,2DAAC,2DAAD,CACE34B,QAAQ,YACRnG,MAAM,UACNqC,KAAK,QACL08B,QAAS,CAAEre,KAAM,0BACjBtb,QAASs0E,EACTh5F,SAAUo+C,EANZ,wCAaEi7C,sBAAwB,SAACL,EAAc56C,GAC3C,OACE,2DAAC,2DAAD,CACE34B,QAAQ,YACRnG,MAAM,UACNqC,KAAK,QACL08B,QAAS,CAAEre,KAAM,uBACjBtb,QAASs0E,EACTh5F,SAAUo+C,EANZ,0CAaEk7C,oB,gIAKJ,6BAAYv7F,GAAO,iDACjB,mBAAMA,IALR68B,UAAY,GAIO,EAFnB2+D,aAAe,GAEI,EA8EnBC,iCAAmC,SAACC,GAClC,OAAO,WACL,OACE,2DAAC,0DAAD,CACE93E,KAAK,QACLrC,MAAM,UACNrf,SAAU,SAACupB,GAAD,OAAW,EAAKkwE,6BAA6BlwE,EAAOiwE,IAC9Dt4E,QAAS,EAAKw4E,2BAA2BF,EAActwF,UACvDk1C,QAAS,CAAEre,KAAM,mBALnB,yBAjFa,EA4FnB04D,gBAAkB,SAACnrF,EAAUkrF,GAC3B,IAAQmB,EAAgB,EAAK7hF,MAArB6hF,YACFC,EAAUD,EAAY38E,WAAU,SAAC5P,GAAD,OAAQA,EAAG7O,OAAS+O,EAAS/O,QAE/Di6F,IAA0B,IAAboB,EACfD,EAAYptF,KAAKe,IACK,IAAbssF,GACTD,EAAYh5D,OAAOi5D,EAAS,GAG9B,EAAKpyD,SAAS,CAAEmyD,gBAChB,EAAKE,eAvGY,EA0GnBJ,6BAA+B,SAAClwE,EAAOiwE,GACrC,IAAMM,GAAgB,EAAKJ,2BAA2BF,EAActwF,UAC5DywF,EAAgB,EAAK7hF,MAArB6hF,YACFI,EAAoB,EAAKC,mBAAmBL,EAAaH,EAActwF,UAEzE4wF,EACH,EAAKtyD,SAAS,CAAEmyD,YAAa,GAAF,0BAAMI,GAAN,mBAA4BP,EAAcrsF,cAEpE,EAAKq6B,SAAS,CAAEmyD,YAAa,mBAAII,KAEnC,EAAKF,eApHY,EAuHnBG,mBAAqB,SAACC,EAAK/wF,GACzB,OAAO+wF,EAAI3tF,QAAO,SAACc,GAAD,OAAQA,EAAGlE,WAAaA,MAxHzB,EA2HnBwwF,2BAA6B,SAACxwF,GAC5B,IAAMgxF,EAAgB,EAAKZ,aAAahtF,QAAO,SAACc,GAAD,OAAQA,EAAGlE,WAAaA,KACjEixF,GAAsB,EAAKriF,MAAM6hF,aAAe,IAAIrtF,QAAO,SAACc,GAAD,OAAQA,EAAGlE,WAAaA,KACzF,OAAOgxF,EAAc96F,SAAW+6F,EAAmB/6F,QA9HlC,EAiInBg7F,gBAAkB,WAChB,IAAQT,EAAgB,EAAK7hF,MAArB6hF,YACArO,EAA0B,EAAKxtF,MAA/BwtF,uBACPqO,GAAe,IAAIl9E,SAAQ,SAAArP,GAAE,OAAIk+E,EAAsBl+E,OApIvC,EAuInBitF,aAAe,SAACjtF,GAEd,OADwB,EAAK0K,MAArB6hF,YACWW,MAAK,SAACj7F,GAAD,OAAcA,EAASd,OAAS6O,EAAG7O,SAzI1C,EA4InBg8F,mBAAqB,WACnB,IAAQZ,EAAgB,EAAK7hF,MAArB6hF,YACR,QAASA,GAAsC,IAAvBA,EAAYv6F,QA9InB,EAiJnBo7F,iBAAmB,WACjB,IAAQb,EAAgB,EAAK7hF,MAArB6hF,YACR,OAAO,EAAKY,qBAAuBZ,EAAY,GAAK,MAjJpD,EAAK7hF,MAAQ,CACX6hF,YAAa,IAGf,IAAQ3zF,EAAS,EAAKlI,MAAdkI,KANS,OAOjB,EAAK20B,UACH30B,EAAKsG,QAAO,SAAAktF,GAAa,OAAIA,EAAcrsF,WAAaqsF,EAAcrsF,UAAU/N,UAC3E4J,MAAK,SAACyxF,EAAQC,GACb,OAAOjxF,2DAA0BkxF,aAAaD,EAAOxxF,UAAYO,2DAA0BkxF,aAAaF,EAAOvxF,aAGvH,EAAKowF,aAAe,EAAK3+D,UAAUnjB,QAAO,SAACgF,EAAKg9E,GAE9C,OADAh9E,EAAMA,EAAIxG,OAAOwjF,EAAcrsF,aAE9B,IAhBc,E,6DAmBnB,WAAS,WACP,EAOIkf,KAAKvuB,MANP6qE,EADF,EACEA,iBACAkjB,EAFF,EAEEA,iBACAvB,EAHF,EAGEA,qBACAH,EAJF,EAIEA,sBACAz/C,EALF,EAKEA,eACAu9C,EANF,EAMEA,YAEM0R,EAAgBttE,KAAKvU,MAArB6hF,YACFjB,EAAoB,SAACkC,GACzB3S,EAAY2S,GACZjyB,KAGF,OACE,2DAAC,yDAAD,uBACE,2DAAC,yDAAM7kD,OAAP,KACE,kEAAK9f,UAAU,6BAAf,sBACE,kEAAKA,UAAU,gCAAf,sBACG80F,uBAAuBzsE,KAAK+tE,iBAAkBT,EAAYv6F,QAC3D,2DAAC,wEAAD,CAAemrC,QAASyuD,iBAAxB,uBACA,2DAAC,4EAAD,CAAiBzuD,QAAS0uD,mBAA1B,uBACA,2DAAC,gEAAD,CAAW1uD,QAAS2uD,iBAApB,uBACA,2DAAC,sEAAD,CACE5rF,SAAU+e,KAAKmuE,mBACfz6F,UAAWssB,KAAKkuE,qBAChB37C,cAAeu6C,oBACft6C,gBAAiBu6C,sBACjB1uD,eAAgBA,EALlB,0BAUN,2DAAC,yDAAM1mB,QAAP,KACE,kEAAKhgB,UAAU,gCAAf,sBACGqoB,KAAKsO,UAAU/1B,KAAI,SAAA40F,GAClB,IAAMqB,EAAgB9wF,KAAKC,MAAMD,KAAKu5C,UAAUtrB,UAChD6iE,EAAcrnD,QAAQ,CAAEuD,UAAW,EAAKwiD,iCAAiCC,GAAgBj+B,QAAS,aAC9F9xD,2DAA0BovF,0BAA0BW,EAActwF,WACpE2xF,EAActuF,KAAK,CAAE1M,MAAO,oBAAqBy7D,MAAO,WAE1D,IAAM8yB,EAAa,CAAEp2D,QAAS6iE,GAC9B,OACE,sHACE,iEAAI72F,UAAU,kBAAd,sBAAiCw1F,EAActwF,UAC/C,2DAAC,kDAAD,YAAWklF,EAAX,CAAuBpqF,UAAU,QAAjC,wBACIw1F,EAAcrsF,WAAa,IAAIvI,KAAI,SAACwI,EAAItI,GAAL,OACnCgpF,YAAY1gF,EAAItI,EAAO,EAAKu1F,aAAajtF,GAAK,EAAKqrF,gBAAiB5M,EAAkBvB,EAAsBH,EAAuBuO,gB,gJAxEvHl+D,6CAAMC,eA4JxC4+D,oBAAoBj1F,UAAY,CAC9B4B,KAAMqvB,8CACNszC,iBAAkBv+C,8CAGb,IAAM0wE,6BAA+B3nE,oDAC1C,SAAArb,GACE,IAAMkG,EAAWlG,EAAM5R,SAASwH,SAEhC,MAAO,CACLsQ,WACAssE,qBAAsB,SAAAl+E,GAAM,OAAIyS,wDAAgBzS,EAAQ4R,IACxD6tE,iBAAkB,SAAAv+E,GAAQ,OAAIyQ,wDAAYzQ,EAAU0Q,IACpD8tE,qBAAsB,SAAAx+E,GAAQ,OAAI2Q,wDAAgB3Q,EAAU0Q,IAC5DmsE,sBAAuB,SAAA78E,GAAQ,OAAI0R,wDAAuB1R,EAAUwK,EAAM5R,SAASwH,SAAU,WAGjG,SAAArI,GAAQ,MAAK,CACX4iF,YAAa,SAAAvhF,GAAQ,OAAIrB,EAASoB,sDAAiBC,KACnD4kF,sBAAuB,SAAAl+E,GAAE,OAAI/H,EAASgJ,sDAAqBjB,KAC3Ds9B,eAAgB,kBAAMrlC,EAASF,6DAfSguB,CAiB1CkmE,qB,gKA7XId,wB,wHAWAvgE,Q,wGAcA81D,Y,4GA0FAgL,uB,uHAgBAE,iB,iHAcAC,mB,mHAcAC,iB,iHAcAC,oB,oHAeAC,sB,sHAeAC,oB,oHAiKOyB,6B,ksBCxYN,SAAS7uB,IACd,OAAOxmE,IAAWwmB,KAAK,a,4FADTggD,E,+jJCFhB+B,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,i+CCoB9B8sB,EAAU,SAAC,GAA+B,IAA7BrzF,EAA6B,EAA7BA,WAAY2kE,EAAiB,EAAjBA,WACpC,IAAsBtuE,mBAAS,WAA/B,GAAOw8B,EAAP,KAAYm5C,EAAZ,KAUA,OARA70E,qBAAU,WAGR,OAFA4rD,IAAiBzR,QAEV,WACLyR,IAAiBxR,UAElB,CAACvxC,EAAWC,SAEVD,GAAoC,gBAAtBA,EAAWC,OAa5B,oCACE,kBAAC,IAAMmc,OAAP,KACE,kBAACqwD,EAAD,CAAUzsE,WAAYA,EAAYyyB,OAAQI,EAAK25C,UAAWR,EAA1D,uBACA,kBAAC,IAAD,yBAEF,kBAAC,IAAD,CAAQ/1E,MAAO48B,EAAf,sBACE,kBAAC,IAAOwK,KAAR,CAAapnC,MAAM,WACjB,kBAAC,IAAD,CAAS0uE,WAAYA,EAArB,wBAEF,kBAAC,IAAOtnC,KAAR,CAAapnC,MAAM,UACjB,kBAAC,IAAD,2BArBJ,oCACE,kBAAC,IAAMqmB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,uBACE,kBAAC,IAAD,kD,EAhBCmyE,E,6DAyCE5nE,aAAQ,SAAArb,GACrB,MAAO,CACLpQ,WAAYsrB,YAAclb,MAE3B,GAJYqb,CAIR4nE,GAEP,SAAS5mB,EAAT,GAAqD,IAAjCh6C,EAAiC,EAAjCA,OAAQ+5C,EAAyB,EAAzBA,UAAWxsE,EAAc,EAAdA,WAE/B0yB,EAAO,CAAC,CAAEv6B,MAAO,cAAelC,MAAO,UAAWw8B,QAAQ,IAKhE,OANmBtT,IAAetU,SAAS7K,EAAWC,SAGpDyyB,EAAK7tB,KAAK,CAAE1M,MAAO,SAAUlC,MAAO,WAG/B,kBAAC,IAAD,CAAew8B,OAAQA,EAAQ1V,QAASyvD,EAAW95C,KAAMA,EAAzD,uBAbM,O,6FAzCF2gE,E,8DA+CJ5mB,E,6sFC7BH6mB,EAAU,SAAC,GAA2C,UAAzCC,EAAyC,EAAzCA,WAAYvzF,EAA6B,EAA7BA,WAAY2kE,EAAiB,EAAjBA,WACnCrd,EAAU81B,cAEhB,IAAgC/mF,mBAAS+oB,IAAuBvU,SAAS7K,EAAWC,SAApF,GAAOo+B,EAAP,KAAiBm1D,EAAjB,KAEM5mB,EAAiB,CACrBC,UAAW7sE,SAAD,UAACA,EAAY4B,kBAAb,QAAC,EAAwBi/B,QACnCA,QAAQ7gC,SAAA,UAAAA,EAAY4B,kBAAZ,eAAwBi/B,SAAU,EAC1C5Z,OAAOjnB,SAAA,UAAAA,EAAY4B,kBAAZ,eAAwBqlB,QAAS,IAG1C,IAA8B5wB,mBAASu2E,GAAvC,GAAOE,EAAP,KAAgBwI,EAAhB,KAEA,EAA0Cme,EAAgBzzF,GAAlDsnB,EAAR,EAAQA,cAAeosE,EAAvB,EAAuBA,eAEjBrmB,EAAmB,SAACC,EAAaC,EAASC,GAC9C,IAAMhQ,EAAmBvjD,IAAUriB,MAAK,SAAA0iB,GAAQ,OAAIA,EAASrkB,QAAUq3E,KACjEG,EAAetzD,IAAcviB,MAAK,SAAAc,GAAI,OAAIA,EAAKzC,QAAUs3E,KAEzDG,GAAmBlQ,GAAoBA,EAAiBtjD,OAAOO,KAAK+yD,GACpEG,GAAeF,GAAgBA,EAAavzD,OAAOO,KAAK+yD,GAE9D,OAAQE,GAAmBC,EAAeH,EAAa,IAGnDmmB,EAAYt1D,EAAWk1D,EAAavzF,EAAWywE,WAC/CmjB,EAAYv1D,EACd5kC,MACGE,MACAD,OAAO,cACVD,IAAOuG,EAAWw1C,aAAa97C,OAAO,cACpCm6F,EAAYx1D,EACd5kC,MACGE,MACAD,OAAO,SACVD,IAAOuG,EAAWw1C,aAAa97C,OAAO,SAE1C,IAAwBrD,oBAAS,GAAjC,GAAOgnB,EAAP,KAAaC,EAAb,KACMsD,EAAe,CACnBvD,KAAM/D,uBAAY,WAChBgE,GAAQ,KACP,IACHuD,MAAOvH,uBAAY,WACjBgE,GAAQ,KACP,KA0BL,OACE,oCACE,kBAAC,IAAD,CACEgK,cAAeA,EACfvxB,SA3BmB,SAAAkX,GACvB,IAAM6qB,EAAS,GACP0d,EAA6BvoC,EAA7BuoC,YAAas+C,EAAgB7mF,EAAhB6mF,YAkBrB,OAhBKr6F,IAAO+7C,GAAaluC,YACvBwwB,EAAO0d,YAAc,uBAGlB,sCAAsC/6B,KAAKq5E,KAC9Ch8D,EAAOg8D,YAAc,wBAIrB7mF,EAAO,iBACL,2BAA2BwN,KAAKxN,EAAO,kBACD,MAAtCA,EAAO,gBAAgB9B,QAAQ,KAEjC2sB,EAAO,gBAAkB,0CAGpBA,GAQH6O,SAAQ,e,EAAA,G,EAAA,yBAAE,WAAO15B,EAAQqC,GAAf,gFACRA,EAAQs3B,eAAc,GACtBmtD,EAAkB9mF,EAAQ6/D,GAASp7C,MAAK,YAA6B,IAA1BtxB,EAA0B,EAA1BA,OAAQb,EAAkB,EAAlBA,YACjD,GAAe,YAAXa,EAAsB,CACxB,IAAQX,EAASF,EAAY,GAArBE,KAER6nD,EAAQziD,KAAR,+BAAqCpF,QANjC,+C,+KAAF,wDAHV,uBAcG,WACC,OACE,oCACE,kBAAC,IAAM6c,QAAP,CAAe4E,YAAU,GACvB,kBAAC,IAAD,uBACE,kBAAC,IAAD,uBACE,kBAAC,IAAQ9E,OAAT,KACE,kBAAC,IAAQC,MAAT,iBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQiiB,GAAI,EAAZ,sBACE,kBAAC,IAAD,CACE1nC,KAAK,WACLsB,MAAM,WACNL,YAAY,gDACZ3B,cAAe,SAACF,EAAO68C,GACrBA,EAAOC,cACL,UACAs6B,EAAiBp3E,EAAO68C,EAAO7lC,OAAOvU,KAAMo6C,EAAO7lC,OAAOnL,WAG9DzJ,SAAUq7F,EAAep5E,WAAa+jB,GAAYsmC,EAVpD,wBAaF,kBAAC,IAAD,CAAQpmC,GAAI,EAAZ,sBACE,kBAAC,IAAD,CACE1nC,KAAK,OACLsB,MAAM,OACNL,YAAY,4CACZ3B,cAAe,SAACF,EAAO68C,GACrBA,EAAOC,cACL,UACAs6B,EAAiBv6B,EAAO7lC,OAAOqN,SAAUrkB,EAAO68C,EAAO7lC,OAAOnL,WAGlEzJ,SAAUq7F,EAAeh7F,OAAS2lC,GAAYsmC,EAVhD,wBAaF,kBAAC,IAAD,CAAQpmC,GAAI,EAAZ,sBACE,kBAAC,IAAD,CACE1nC,KAAK,UACLsB,MAAM,UACNlC,MAAO+J,EAAW8B,QAClB5L,UAAQ,EACRmC,SAAUq7F,EAAe5xF,UAAYu8B,GAAYsmC,EALnD,yBASJ,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQpmC,GAAI,EAAZ,sBACE,kBAAC,IAAD,CACE1nC,KAAK,cACLsB,MAAM,OACNE,UAAWgmC,EACXpoC,MAAO29F,EAJT,wBAOF,kBAAC,IAAD,CAAQr1D,GAAI,EAAZ,sBACE,kBAAC,IAAD,CACE1nC,KAAK,cACLsB,MAAM,wBACNE,UAAWgmC,EACXpoC,MAAO49F,EAJT,wBAOF,kBAAC,IAAD,CAAQt1D,GAAI,EAAZ,sBACE,kBAAC,IAAD,CAAM1nC,KAAK,WAAWsB,MAAM,OAAOjC,UAAQ,EAACmC,UAAQ,EAACpC,MAAO09F,EAA5D,2BAKR,kBAAC,IAAD,CAAmBt7E,SAAUrY,EAAW4B,WAAYy8B,SAAUA,EAA9D,uBACA,kBAAC,IAAD,uBACE,kBAAC,IAAQjiB,OAAT,KACE,kBAAC,IAAQC,MAAT,uBAEF,kBAAC,IAAQC,QAAT,KACE,kBAAC,IAAD,CAAKoiB,QAAS,EAAd,sBACE,kBAAC,IAAD,CAAQH,GAAI,GAAZ,sBACE,kBAAC,IAAD,CACE1nC,KAAK,gBACLwG,IAAK2C,EAAWP,KAChBpH,UAAWgmC,EACXuC,aAAcgsC,EACd1rC,QAAS,SAAAutC,IACgB,IAAnBA,EAAQ5tC,QAAgB6tC,kBAAQD,EAAQxnD,SAC1CquD,EAAW,CACTzI,SAAS,IAGbyI,EAAW,EAAD,CACRzI,SAAS,GACN4B,KAbT,6BAuBZ,kBAAC,IAAM1wD,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,uBAAGozB,KAAK,cAAR,sBACA,kBAAC,IAAD,kCAEuB,YAAtBx0C,EAAWC,QACV,kBAAC,IAAD,CACE0X,MAAM,YACNoF,QAAS,WACPO,GAAQ,IAHZ,iCAUJ,kBAAC,IAAMS,OAAOC,MAAd,KACE,kBAACg2E,EAAD,CACE/zF,OAAQD,EAAWC,OACnBo+B,SAAUA,EACVm1D,YAAaA,EACb1mB,QAASA,EACT9sE,WAAYA,EALd,6BAaXqd,GACC,kBAAC,IAAD,CAAyBA,KAAMA,EAAM/N,QAASsR,EAAcnhB,KAAMO,EAAWP,KAA7E,yB,EA5NF6zF,E,iPACYlW,Q,UAiOH3xD,aAAQ,SAAArb,GACrB,MAAO,CACLmjF,WAAYnuE,YAAmBhV,GAC/BpQ,WAAYsrB,YAAclb,MAE3B,GALYqb,CAKR6nE,GAGP,SAASU,EAAT,GAA2E,EAAtD/zF,OAAsD,IAA9Co+B,EAA8C,EAA9CA,SAAUm1D,EAAoC,EAApCA,YAAa1mB,EAAuB,EAAvBA,QAAS9sE,EAAc,EAAdA,WAG3D,OACE,kBAAC,IAAD,CAAQ/J,MAAOooC,EAAf,sBACE,kBAAC,IAAOhB,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,uBAAe62E,EAAQD,QAAU,UAAY,QAE/C,kBAAC,IAAOxvC,KAAR,CAAapnC,OAAO,GAClB,yBAAK2iB,MAAO,CAAEgE,QAAS,OAAQC,WAAY,SAAUC,eAAgB,YAArE,sBACE,kBAAC,IAAD,CAAU9c,WAAYA,EAAtB,uBACA,kBAAC,IAAD,CAAQ+c,QAVK,kBAAMy2E,GAAY,IAU/B,iCAOV,SAASO,EAAkB9mF,EAAQ6/D,GACjC,IACEhrE,EAOEmL,EAPFnL,QAGA0zC,GAIEvoC,EANFqN,SAMErN,EALFvU,KAKEuU,EAJFuoC,aACAs+C,EAGE7mF,EAHF6mF,YAIIG,GADFhnF,EAFFinF,SAGe,IAEjB,EAAiCnlB,EAXjC,EAQI9hE,EARJ,IAWQrL,EAAR,EAAQA,WAAR,EAAoBoa,SAEpB,SAAS4yD,EAAS34E,EAAOoH,GACvB,MAAY,eAARA,OAICpH,GAA0B,kBAAVA,KAIP,SAAVA,IAIiB,WAAjB,EAAOA,KAAsBy4E,kBAAQz4E,MAO3C,GAAIu/C,EAAa,CACf,IAAM2+C,EAAa16F,IAAO+7C,EAAa,cAEjC4+C,EAAaN,EAAcr6F,IAAOq6F,EAAa,SAAWr6F,MAC1D0rD,EAAc1rD,MACjBE,MACA4xC,IAAI,SAAU,GACd7xC,OAAO,uBAEJQ,EAAOi6F,EAAWz6F,OAAO,cACzBqS,EAAOqoF,EAAW16F,OAAO,SACzB26F,EAAW56F,IAAOS,EAAO,IAAM6R,EAAM,oBAAoBrS,OAAO,uBAKhE6R,EAHW9R,IAAO03C,SACtB13C,IAAO46F,EAAU,oBAAoB5lD,KAAKh1C,IAAO0rD,EAAa,sBAEvCmvC,YAGvBL,EAAShyF,UADPsJ,EAAU,EACS8oF,EAEA,KAyBzB,OArBIvnB,EAAQD,SAIVonB,EAASnyF,QAAU,mCAEnBmyF,EAASryF,WAAa,CACpB/K,KAAMiL,EACNF,WAAYotE,iBAAOptE,EAAYgtE,GAC/B2lB,KAAMN,EAAShyF,UACf4+B,OAAQisC,EAAQjsC,OAChB5Z,MAAO6lD,EAAQ7lD,OAGjBgtE,EAAShyF,UAAY,OAErBgyF,EAASnyF,QAAUA,EAEnBmyF,EAASryF,WAAaotE,iBAAOptE,EAAYgtE,IAGpCvvE,YAAe40F,GAGxB,SAASR,EAAgBzzF,GAiBvB,MAAO,CAAEsnB,cAhBM,CACbhN,SAAU,GACV5hB,KAAM,GACNoJ,QAAS9B,EAAW8B,QACpBF,WAAY,EAAF,GAAO5B,EAAW4B,aAYE8xF,eAVT,EAAH,GACd1zF,EAAWC,SAAWue,IAAiBC,KAAO,CAChDnE,UAAU,EACV5hB,MAAM,EACNoJ,SAAS,EACT6jB,MAAM,EACN/jB,YAAY,KAOlB,SAASmtE,EAAgBE,GAEvB,IAAMhiE,EAASiiE,EAAcD,GAEvB7uE,EADOqQ,OAAOC,KAAKzD,GACL6C,QAClB,SAACm7B,EAAW5tC,GACV,GAAIA,EAAI2N,WAAW,aAAc,CAC/B,QAA4B3N,EAAI6f,QAAQ,YAAa,IAAI3f,MAAM,MAA/D,GAAOH,EAAP,KAAcgtB,EAAd,KAEMtZ,EAAQm6B,EAAUjvB,SAAS5e,GAGjC,MAAmB,UAAfgtB,GAA0C,KAAhBnd,EAAO5P,KAIjCyT,EAEAA,EAAMsZ,GADW,UAAfA,EACF,kBAA8Bnd,EAAO5P,GAArC,SAEoB4P,EAAO5P,GAEL,UAAf+sB,EACT6gB,EAAUjvB,SAASnX,KAAnB,KAA2BulB,EAA3B,kBAAkDnd,EAAO5P,GAAzD,WAEA4tC,EAAUjvB,SAASnX,KAAnB,KAA2BulB,EAAand,EAAO5P,MAZxC4tC,EAkBX,GAAI5tC,EAAI2N,WAAW,aAAc,CAC/B,IAAO5N,EAAP,EAAgBC,EAAI6f,QAAQ,cAAe,IAAI3f,MAAM,MAArD,MAIA,OAFA0tC,EAAU5sB,WAAWpR,EAAO,YAAD,OAAa7P,EAAb,YAA+B6P,EAAO5P,GAE1D4tC,EAKT,OAFAA,EAAUrpC,WAAWvE,GAAO4P,EAAO5P,GAE5B4tC,IAET,CAAEjvB,SAAU,GAAIqC,WAAY,GAAIzc,WAAY,KAG9C,MAAO,CACLA,WAAY,EAAF,GACLxB,EAAOwB,WADF,CAERoa,SAAUmzD,EAAgB/uE,EAAO4b,UACjCqC,WAAYje,EAAOie,cAKzB,SAAS8wD,EAAgBnzD,GACvB,OAAOA,EAASpX,QAAO,SAAAiW,GAAC,OAAI,KAAM3d,KAAI,SAAC2d,EAAGzd,GAAJ,YAAoByd,EAApB,CAAuB9jB,KAAM,CAAEu9B,SAAUl3B,EAAQ,QAGzF,SAAS8xE,EAAcjiE,GAkBrB,OAjBIA,EAAO,iBACLA,EAAO,qBACTA,EAAOpW,KAAP,UAAiBoW,EAAO,qBAAxB,YAAgDA,EAAO,iBAEvDA,EAAOpW,KAAOoW,EAAO,uBAEhBA,EAAO,4BACPA,EAAO,iBACLA,EAAO,oBACZA,EAAO,qBACTA,EAAOqL,OAAP,UAAmBrL,EAAO,qBAA1B,YAAkDA,EAAO,mBAEzDA,EAAOqL,OAASrL,EAAO,yBAElBA,EAAO,4BACPA,EAAO,mBAETA,EA9MM,O,6FAlOTqmF,E,8DA0OGU,E,gEAkBAD,E,wEAmFAN,E,sEAoBA1kB,E,sEAuDAI,E,sEAIAD,E,ilDCrbT,SAASslB,IAA0B,IAAjBx0F,EAAiB,uDAAJ,GAC7B,MAAO,CACL,CACE1B,KAAM,CACJhB,KAAM,4BAGV,CACEgB,KAAM,CACJhB,KAAM,WAAF,OAAa0C,EAAWC,OAAxB,QAGR,CACE3B,KAAM,CACJhB,KAAM,YAAF,OAAc0C,EAAW8B,QAAzB,QAGR,CACExD,KAAM,CACJhB,KAAM,eAAF,OAAiB0C,EAAWP,KAA5B,SAMZ,SAASy3B,EAAcl3B,EAAYqD,EAAQ8zB,EAAavW,GACvCwW,YAAYp3B,EAAYqD,EAAQ8zB,IAE7CvW,EAAavD,OAIV,I,IAAMo3E,EAAY,WAAM,cACvBz0F,EAAa22D,YAAYrrC,KAE/B,IAA8BwH,IAAMz8B,UAAS,GAA7C,GAAOyH,EAAP,KAAgBu5E,EAAhB,KACA,IAA4BvkD,IAAMz8B,SAASm+F,EAASx0F,IAApD,GAAOqD,EAAP,KAAeqxF,EAAf,KACA,IAA4D5hE,IAAMz8B,UAAS,GAA3E,GAAOqhC,EAAP,KAA+BC,EAA/B,KACM/W,EAAe,CACnBvD,KAAM,WACJsa,GAA0B,IAE5B9W,MAAO,WACL8W,GAA0B,KAwB9B,GAnBA7E,IAAM37B,WAAU,WACd+I,YAAsBF,EAAWP,MAC9BiyB,MAAK,YAAc,IACZrZ,EADY,EAAX/Z,KACeA,KAAK+B,QAEvBgY,GAAYA,EAAS3gB,OACvBg9F,EAAUr8E,GAEVq8E,EAAUF,EAASx0F,IAGrBq3E,GAAW,MAEZvyC,OAAM,WACL4vD,EAAUF,EAASx0F,IACnBq3E,GAAW,QAEd,IAECv5E,EACF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,OAKN,IAAM62F,EAAa30F,EAAWC,SAAWue,IAAiBO,OAAS,OAAS,SAEtE61E,EAAavxF,SAAH,UAAGA,EAAS,UAAZ,iBAAG,EAAa/E,YAAhB,iBAAG,EAAmBhB,YAAtB,iBAAG,EAAyBqiE,aAA5B,iBAAG,SACjB,qGADc,aAAG,EAEf,GAIJ,OAFA7wD,QAAQgS,IAAI8zE,GAGV,oCACE,kBAAC,IAAMt4E,QAAP,CAAe4E,YAAU,GACvB,kBAAC,IAAD,CACExoB,KAAMi8F,EACNtxF,OAAQA,EACRwxF,aAAc70F,EAAW4B,WAAWC,QACpCi2B,OAAQ93B,EAAW83B,OACnB88D,WAAYA,KAGhB,kBAAC,IAAM72E,OAAP,KACE,kBAAC,IAAMA,OAAOqD,KAAd,KACE,kBAAC,IAAD,CACEzJ,MAAM,UACNoF,QAAS,kBAAMma,EAAcl3B,EAAYqD,EAAQrD,EAAW8B,QAAS8e,KAFvE,iBAMA,kBAAC,IAAD,CAAQjJ,MAAM,UAAUoF,QAAS,kBAAMuU,YAAgBjuB,EAAQrD,KAA/D,uBAKJ,kBAAC,IAAD,CAAYqd,KAAMqa,EAAwBpoB,QAASsR,EAAc1a,QA7D1C,0I,EAdhBuuF,E,4NACQ99B,S,6FAjCZ69B,E,+EAyBAt9D,E,oFAOIu9D,E,k8CCzCAzxC,EAAa,SAAC,GAAuD,IAE5E8xC,EAFuBzxF,EAAqD,EAArDA,OAAQ3K,EAA6C,EAA7CA,KAAMm8F,EAAuC,EAAvCA,aAAc/8D,EAAyB,EAAzBA,OAAQ88D,EAAiB,EAAjBA,WAI/D,GAAqB,SAAjBC,EAAyB,CAC3B,IAASE,EAAT,GAAwB1xF,EAAO,GAAG/E,KAAKhB,MAAQ,IAAIC,MAAM,MAAzD,MACA,IACEu3F,EAAezyF,KAAKC,MAAMyyF,GAC1B,MAAOp8F,GACPm8F,EAAe,MAInB,OAAIF,EAEA,yBAAKt4F,UAAU,OAAf,sBACE,yDACA,+DAAmBs4F,GACnB,kBAAC,IAAD,CAAQjyC,GAAE,+BAA0BiyC,GAAcj9E,MAAM,UAAxD,qDAOO,SAATjf,EAEA,oCACE,uBAAG4D,UAAU,iBAAb,0DACA,yBAAKA,UAAU,aAAf,sBACE,gDACE,+CAAMw7B,EAAOpf,KAAK,SAGrBrV,GAAUA,EAAO3L,OAAS,GACzB,oCACE,uBAAG4E,UAAU,WAAb,iCACA,yBAAKA,UAAU,OAAf,sBACE,gDACE,+CAAM+G,EAAOnG,KAAI,SAAA46C,GAAG,OAAIA,EAAIx5C,KAAKhB,QAAMob,KAAK,SAO/Co8E,EAEP,yBAAKx4F,UAAU,OAAf,sBACE,kBAAC,IAAD,CACE4lB,IAAK4yE,EACLE,iBAAiB,EACjBC,mBAAmB,EACnBC,kBAAkB,EAJpB,wBAUF,yBAAK54F,UAAU,OAAf,sBACE,gDACE,+CAAM+G,EAAOnG,KAAI,SAAA46C,GAAG,OAAIA,EAAIx5C,KAAKhB,QAAMob,KAAK,S,4FA7DzCsqC,E,6pBCqBA6T,EAAY,WACvB,IAAMthD,EAASohD,YAAYprC,KAG3B,OAFelM,IAAoBxU,SAAS0K,GAGnC,KAIP,yBAAKjZ,UAAU,eAAesc,MAAO,CAAEq3D,WAAYklB,EAAgB5/E,IAAnE,sBACE,kBAAC,IAAD,CAAS/Y,SAAS,UAAUmb,MAAM,UAAlC,sBACE,0BAAMlb,EAAG24F,EAAe7/E,GAAxB,wBAEF,0BAAMjZ,UAAU,oBAAhB,sBAAqCiZ,K,EAb9BshD,E,yCACIF,QAiBjB,I,IAAMy+B,EAAiBnvD,aAAI,OAEtBznB,IAAiBQ,UAAY4zC,MAFP,IAGtBp0C,IAAiBM,UAAY+zC,KAHP,IAItBr0C,IAAiBS,QAAU+zC,MAJL,IAKtBx0C,IAAiBK,UAAYi0C,KALP,IAMtBt0C,IAAiBU,OAASg0C,KANJ,IAOtB10C,IAAiBO,OAASk0C,KAPJ,IAQtBz0C,IAAiBI,QAAUm0C,MARL,GAUzB,IACA,SAAA9yD,GAAM,OAAIA,KAGNk1F,EAAkBlvD,YACtB,CACE/pC,KAAM,UACNm5F,QAAS,UACTr5F,QAAS,WAEX,WACA,SAAAiE,GACE,OAAIqf,IAASzU,SAAS5K,GACb,OAGLsf,IAAS1U,SAAS5K,GACb,UAGLuf,IAAS3U,SAAS5K,GACb,eADT,M,6FAhDS42D,E,sFAkBPu+B,E,2FAcAD,E,k3CC1CN,SAASG,EAAT,GAGG,IAFDliF,EAEC,EAFDA,UACAioC,EACC,EADDA,WAEA,IAA0ChlD,mBAAS,YAAnD,GAAOk/F,EAAP,KAAsBC,EAAtB,KACA,IAA4Cn/F,mBAAS,MAArD,GAAOonE,EAAP,KAAuBg4B,EAAvB,KAUA,OACE,oCACE,kBAAC,IAAD,CAAQh4E,MAAM,mCAAd,uBACIrK,IAAcioC,GACd,yBAAK/+C,UAAU,2BAAf,sBACqB,aAAlBi5F,GAAgC,kBAAC,IAAD,wBACjC,kBAAC,IAAD,CAAkB9oC,gBAd5B,WACEgpC,EAAkB,OAaV,uBACA,yBAAKn5F,UAAU,YAAf,uBACA,kBAAC,IAAD,CAAiBm2B,OAAQ8iE,EAAe9oC,gBAZlD,SAAyB/zD,GACvB88F,EAAiB98F,IAWT,yBAIN,kBAAC,IAAD,CAAM+8D,QAAM,EAAZ,sBACE,kBAAC,IAAD,CAAQx/D,MAAOmd,EAAf,sBACE,kBAAC,IAAOiqB,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,uBACE,kBAAC,IAAD,2DAGJ,kBAAC,IAAOonC,KAAR,CAAapnC,OAAO,GAClB,kBAAC,IAAD,CAAQA,MAAOolD,EAAf,sBACE,kBAAC,IAAOhe,KAAR,CAAapnC,OAAK,GAChB,kBAAC,IAAD,CAAQyC,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,0FAKJ,kBAAC,IAAO0nC,KAAR,CAAapnC,OAAO,GAClB,yBAAKqG,UAAU,oBAAf,sBACE,yBAAKA,UAAU,SAAf,sBACE,kBAAC,IAAD,CAAiCmhE,eAAgBA,EAAjD,wBAEF,yBAAKnhE,UAAU,SAAf,sBACE,kBAAC,IAAD,CAA6BmhE,eAAgBA,EAAgBi4B,gBAAiB,SAAChtE,GAAD,OAAc+sE,EAAkB/sE,IAA9G,wBAEF,yBAAKpsB,UAAU,SAAf,sBACE,kBAAC,IAAD,CAA2BmhE,eAAgBA,EAA3C,wBAEF,yBAAKnhE,UAAU,SAAf,sBACE,kBAAC,IAAD,CAA+BmhE,eAAgBA,EAA/C,gC,kMAvDX63B,E,gHAmEF,I,IAAMv6B,EAA8BtvC,aACzC,SAAArb,GACE,MAAO,CACLgD,UACEhD,EAAM6X,mBAAmB5W,MAAM+pB,UAAUt9B,SACzCsS,EAAM6X,mBAAmB5W,MAAMisC,QAAQx/C,QACzCu9C,WAAYjrC,EAAM6X,mBAAmB5W,MAAM+pB,UAAUigB,WACrD1jD,SAAUyY,EAAM6X,mBAAmBG,gBAAgB1wB,OACnDswB,WAAY5X,EAAM6X,mBAAmBD,WACrCihD,kBAAmB74D,EAAM6X,mBAAmBghD,kBAC5CC,eAAgB94D,EAAM6X,mBAAmBihD,kBAVJz9C,CAazC6pE,I,6FAhFOA,E,2FAmEIv6B,E,khBC1EA46B,EAAmB,SAAC,GAAgC,IAA9BljE,EAA8B,EAA9BA,OAAQg6B,EAAsB,EAAtBA,gBACzC,OACE,yBAAKnwD,UAAU,oBAAoBygB,QAAS,kBAAM0vC,KAAmB7mB,KAAK,eAA1E,sBACGnT,GAAU,yBAAKn2B,UAAU,YAAf,uBACX,kBAAC,IAAD,CAAc+lB,UAAU,SAAS5E,MAAM,UAAvC,sBACE,kBAAC,IAAD,CAASnhB,UAAU,eAAnB,sBACE,kBAAC,IAAD,CAAMmH,KAAMmyF,IAAZ,4B,4FANGD,E,ijBCCAE,EAAkB,SAAC,GAAgC,IAA9BpjE,EAA8B,EAA9BA,OAAQg6B,EAAsB,EAAtBA,gBACxC,OACE,yBAAKnwD,UAAU,mBAAf,sBACE,kBAAC,IAAD,CAAc+lB,UAAU,SAAS5E,MAAM,kBAAvC,sBACE,yBACEnhB,UAAWC,IAAW,SAAU,CAC9Bk2B,OAAmB,YAAXA,IAEV1V,QAAS,kBAAM0vC,EAAgB,YAC/B7mB,KAAK,eALP,sBAOE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMniC,KAAMoyB,IAAZ,0BAIN,kBAAC,IAAD,CAAcxT,UAAU,SAAS5E,MAAM,mBAAvC,sBACE,yBACEnhB,UAAWC,IAAW,SAAU,CAC9Bk2B,OAAmB,aAAXA,IAEV1V,QAAS,kBAAM0vC,EAAgB,aAC/B7mB,KAAK,eALP,sBAOE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAMniC,KAAM4/B,IAAZ,6B,4FAzBCwyD,E,6fCJb,SAASC,EAAT,GAAwE,IAA7CxxF,EAA6C,EAA7CA,QAAS3M,EAAoC,EAApCA,SAAUo+F,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,UACzD,OAAI1xF,IAAY3M,EAEZ,kBAAC,IAAD,CAAQihB,MAAO,CAAEjB,MAAO,WAAaoF,QAAS,kBAAMg5E,MAApD,gBAMF,kBAAC,IAAD,CAAQn9E,MAAO,CAAEjB,MAAO,WAAaoF,QAAS,kBAAMi5E,MAApD,cAMG,I,IAAMC,EAA2BxqE,aACtC,SAAArb,GACE,MAAO,CACL9L,QAAS8L,EAAM6X,mBAAmBE,WAAWzwB,OAC7CC,SAAUyY,EAAM6X,mBAAmBG,gBAAgB1wB,WAGvD,SAAAiG,GAAQ,MAAK,CACXo4F,YAAa,kBAAMp4F,EAASmqB,gBAC5BkuE,UAAW,kBAAMr4F,EAASoqB,mBATU0D,CAWtCqqE,I,6FA1BOA,E,gHAeIG,E,inICHPC,mB,4TACJr1D,OAAS,CACPxO,OAAQ,SAACxQ,GACP,IAAQvR,EAAUuR,EAAVvR,MACR,GAAIA,EAAM5Y,OAAQ,CAChB,IAAMy+F,EAAS7lF,EAAM,GACf8lF,EAAe,EAAKC,YAAYC,MAAMhmF,MAAM1Y,MAAK,SAACgF,GAAD,OAAUA,EAAK5E,KAAOm+F,KAC7E,GAAIC,GAAgBA,EAAaG,aAAc,CAC7C,MAA8C,EAAKngG,MAA3Cs/F,EAAR,EAAQA,gBAAiBc,EAAzB,EAAyBA,iBACzBd,EAAgBU,EAAap+F,IAC7Bw+F,EAAiBJ,EAAap+F,Q,EA6EtCy+F,SAAW,SAACnmF,GACV,OAAQA,GAAS,IACd1L,QAAO,SAAChI,EAAMQ,EAAOs5F,GACpB,OAAOA,EAAIphF,WAAU,SAAAqhF,GAAC,OAAKA,EAAE3+F,KAAO4E,EAAK5E,QAASoF,KAEnDF,KAAI,SAACN,GACJ,IAAM25F,EAA8B,WAAf35F,EAAK6gB,MAC1B,mBACK7gB,EADL,CAEE25F,eACA94E,MAAO7gB,EAAKzE,MACZslC,gBAAiB7gC,EAAKod,KAAO8jB,wDAC7BnmB,MAAO4+E,EAAe74D,wDAAoBE,wDAC1Cpb,MAAO+zE,EAAe54D,wDAAoBE,8D,EAKlD+4D,SAAW,SAAC14D,EAAO24D,GACjB,IAAMC,EAAcD,EAAY35F,KAAI,SAACN,GACnC,MAAO,CAAE6B,KAAM8+B,wDAAcolB,GAAI/lD,EAAK5E,GAAI4lB,MAAO,EAAGm5E,OAAQ,CAAEp0C,GAAI,CAAEkqB,SAAS,QAE/E,OAAO3uC,EAAMhhC,KAAI,SAAC8rD,GAChB,MAAO,CAAEvqD,KAAMuqD,EAAKvqD,KAAMkkD,GAAIqG,EAAKrG,GAAI/kC,MAAO,EAAGm5E,OAAQ,CAAEp0C,GAAI,CAAEkqB,SAAS,QACzEv+D,OAAOwoF,I,yEA/FZ,WACE,MAA6CnyE,KAAKvuB,MAA1C4gG,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,gBACzBD,IACAC,M,8CAGF,SAAiCC,GAC/B,GAAIA,EAASz5B,iBAAmB94C,KAAKvuB,MAAMqnE,eAAgB,CACzD,MAA6C94C,KAAKvuB,MAA1C4gG,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,gBACzBv2F,YAAW,WACTs2F,EAAgBE,EAASz5B,gBACzBw5B,EAAgBC,EAASz5B,sB,oBAK/B,WACE,MAAmE94C,KAAKvuB,MAAhEka,EAAR,EAAQA,MAAO4tB,EAAf,EAAeA,MAAOu/B,EAAtB,EAAsBA,eAAgB05B,EAAtC,EAAsCA,cAAe/jF,EAArD,EAAqDA,UAC/CgkF,EAAgBzyE,KAAK8xE,SAASnmF,GAC9BumF,EAAcO,EAAcxyF,QAAO,SAAChI,GAAD,OAAUA,EAAK25F,gBAWxD,GAVIa,EAAc1/F,SAAW+lE,GAC3B25B,EAActrD,QAAQtO,yDAExB7Y,KAAK0xE,YAAc,CACjBC,MAAO,CACLhmF,MAAO8mF,EACPl5D,MAAOvZ,KAAKiyE,SAAS14D,EAAO24D,KAI5BzjF,EACF,OACE,sHACE,kEAAK9W,UAAU,iEAAf,sBACE,2DAAC,iDAAD,uBACE,2DAAC,yDAAD,qDAOV,IAAM+6F,EAAUD,EAAc1/F,QAAUwmC,EAAMxmC,OAC9C,OACE,kEAAK4E,UAAU,iEAAf,sBACG+6F,EACC,sHACE,2DAAC,uDAAD,CACEf,MAAO3xE,KAAK0xE,YAAYC,MACxBxgG,QAASioC,wDACT8C,OAAQlc,KAAKkc,OAHf,uBAKC48B,GAAkB05B,GACjB,kEAAK76F,UAAU,2BAAf,sBACI,kEAAKA,UAAU,qBAAf,uCAAmD66F,EAAcG,qBACjE,kEAAKh7F,UAAU,qBAAf,kCAA8C66F,EAAcI,sBAC5D,kEAAKj7F,UAAU,qBAAf,yCAAqD66F,EAAcK,sBACnE,kEAAKl7F,UAAU,qBAAf,wCAAoD66F,EAAcM,qBAClE,kEAAKn7F,UAAU,qBAAf,kCAA8C66F,EAAcO,8BAKpE,2DAAC,iDAAD,uD,+IA/EuB3kE,kDAmHpB4kE,4BAA8BlsE,oDACzC,SAAArb,GACE,MAAO,CACLgD,UACEhD,EAAM6X,mBAAmB5W,MAAM83D,QAAQC,cACvCh5D,EAAM6X,mBAAmB5W,MAAM83D,QAAQE,aACzC/4D,MAAOF,EAAM6X,mBAAmB6hD,aAChC5rC,MAAO9tB,EAAM6X,mBAAmB8hD,aAChCotB,cAAe/mF,EAAM6X,mBAAmB+hD,yBAG5C,SAAArsE,GAAQ,MAAK,CACXq5F,gBAAiB,SAACtuE,GAAD,OAAc/qB,EAAS8qB,qDAAsBC,KAC9DuuE,gBAAiB,SAACvuE,GAAD,OAAc/qB,EAASgrB,qDAAsBD,KAC9D8tE,iBAAkB,SAAC9tE,GAAD,OAAc/qB,EAASirB,qDAAuBF,QAdzB+C,CAgBzCyqE,oB,gKAnIIA,mB,sIAmHOyB,4B,6mICvHPC,UAAY,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,MAAO1/F,EAAmB,EAAnBA,MAAOlC,EAAY,EAAZA,MACjC,OACE,kEAAKqG,UAAWC,kDAAW,uBAAwBs7F,GAAnD,sBACE,kEAAKv7F,UAAU,mBAAf,sBAAmCnE,GACnC,kEAAKmE,UAAU,mBAAf,sBAAmCrG,KAKnC6hG,uB,4UAqDJC,YAAc,SAACrvD,GACb,OAAQA,GAAY,IAAIxrC,KAAI,SAAC68B,GAC3B,IAAMi+D,EAAgBh7D,4DAA2BplC,MAAK,SAACqgG,GAAD,OAAYl+D,EAAQm+D,eAAiBD,EAAOv/F,QAClG,mBACKqhC,EADL,CAEEljC,KAAMkjC,EAAQqN,aACdjvC,MAAO4hC,EAAQm+D,aACfvgF,MAAOqgF,EAAgBA,EAAcrgF,MAAQmlB,4DAC7CpQ,eAAgBsrE,EAAgBA,EAActrE,eAAiBqQ,kE,6EA5DrE,WACE,MAAgDpY,KAAKvuB,MAA7C+hG,EAAR,EAAQA,sBAAuBC,EAA/B,EAA+BA,aAC/BD,IACAC,M,8CAGF,SAAiClB,GAC/B,GAAIA,EAASz5B,iBAAmB94C,KAAKvuB,MAAMqnE,eAAgB,CACzD,MAAgD94C,KAAKvuB,MAA7C+hG,EAAR,EAAQA,sBAAuBC,EAA/B,EAA+BA,aAC/B13F,YAAW,WACTy3F,EAAsBjB,EAASz5B,gBAC/B26B,EAAalB,EAASz5B,sB,oBAK5B,WACE,MAA0C94C,KAAKvuB,MAAvCuzE,EAAR,EAAQA,mBAAoBC,EAA5B,EAA4BA,UACtByuB,EAAe1zE,KAAKozE,YAAYpuB,GAChC2uB,EAAoB,IAAIC,KAAKC,aAAa,QAAS,CACvD5/E,MAAO,WACP6/E,SAAU,MACV13C,sBAAuB,IAGzB,OACE,kEAAKzkD,UAAU,qEAAf,sBACE,2DAACs7F,UAAD,CAAWC,MAAM,aAAa1/F,MAAM,aAAalC,MAAOs+B,OAAOmkE,SAAS9uB,EAAUrgD,WAAa+uE,EAAkB5+F,OAAOkwE,EAAUrgD,WAAa,IAA/I,uBACA,2DAACquE,UAAD,CAAWC,MAAM,eAAe1/F,MAAM,eAAelC,MAAOs+B,OAAOmkE,SAAS9uB,EAAUngD,aAAe6uE,EAAkB5+F,OAAOkwE,EAAUngD,aAAe,IAAvJ,uBACA,2DAACmuE,UAAD,CAAWC,MAAM,eAAe1/F,MAAM,eAAelC,MAAOs+B,OAAOmkE,SAAS9uB,EAAUjgD,aAAe2uE,EAAkB5+F,OAAOkwE,EAAUjgD,aAAe,IAAvJ,uBACA,2DAACiuE,UAAD,CAAWC,MAAM,uBAAuB1/F,MAAM,uBAAuBlC,MAAOs+B,OAAOmkE,SAAS9uB,EAAU//C,qBAAuB+/C,EAAU//C,oBAAsB,IAA7J,uBAEA,2DAAC,wCAAD,CAAqBhM,OAAQ,IAA7B,sBACE,2DAAC,wCAAD,uBACE,2DAAC,wCAAD,CAAKvf,KAAM+5F,EAAcrtC,QAAQ,QAAQo/B,GAAG,MAAMC,GAAG,MAAMC,YAAa,GAAIC,YAAa,IAAKoO,aAAW,EAAzG,sBACGN,EAAan7F,KAAI,SAAC4T,EAAO1T,GAAR,OAChB,2DAAC,wCAAD,CAAMC,IAAG,eAAUD,GAASshD,KAAM5tC,EAAM6G,MAAxC,2BAGJ,2DAAC,wCAAD,CAAS2f,QAASgK,0DAAlB,yBAIJ,kEAAKhlC,UAAU,yBAAf,sBACE,2DAAC,yDAAD,uBACE,2DAAC,+EAAD,CAAaxG,QAASuiG,EAAtB,4B,mJA9CyBtlE,kDAmExB6lE,gCAAkCntE,oDAC7C,SAAArb,GACE,MAAO,CACLgD,UAAWhD,EAAM6X,mBAAmB5W,MAAMs4D,mBAAmB7rE,SACxDsS,EAAM6X,mBAAmB5W,MAAMu4D,UAAU9rE,QAC9C6rE,mBAAoBv5D,EAAM6X,mBAAmB0hD,mBAC7CC,UAAWx5D,EAAM6X,mBAAmB2hD,cAGxC,SAAAjsE,GAAQ,MAAK,CACXw6F,sBAAuB,SAACzvE,GAAD,OAAc/qB,EAASqrB,qDAAeN,KAC7D0vE,aAAc,SAAC1vE,GAAD,OAAc/qB,EAASsrB,qDAAcP,QAXR+C,CAa7CqsE,wB,gKAzFIF,U,sIASAE,uB,mJAmEOc,gC,uoBClFAC,EAAa,SAAC,GAAe,IAAb3gG,EAAa,EAAbA,OAC3B,OACE,yBAAKoE,UAAWC,IAAW,SAAU,CAAE,aAAcrE,EAAO4gG,YAA5D,sBACE,yBAAKx8F,UAAU,QAAQsc,MAAO,CAAEhB,gBAAiB1f,EAAOyf,OAAxD,uBACA,yBAAKrb,UAAU,QAAf,sBAAwBpE,EAAOC,OAC9BD,EAAO4gG,WACN,kBAAC,IAAD,CAAcz2E,UAAU,cAAc5E,MAAM,0BAA5C,sBACE,kBAAC,IAAD,CAASnhB,UAAU,aAAnB,sBACE,kBAAC,IAAD,CAAMmH,KAAMs1F,IAAZ,4B,4FARCF,E,mgICaPG,qB,oUA2GJC,MAAQ,SAACC,GACP,OAAQA,GAAU,IAAIh8F,KAAI,SAACi8F,GACzB,IAAMC,GAA8C,IAAhCD,EAAGtiG,KAAKmW,QAAQ,WACpC,mBACKmsF,EADL,CAEEC,cACAjhG,MAAOghG,EAAGtiG,KACV8gB,MAAOyhF,EAAcjtE,0DAA2BF,0DAChDS,eAAgB0sE,EAAchtE,0DAA6BF,gE,EAKjEmtE,aAAe,SAACC,GACd,OAAQA,GAAiB,IAAIp8F,KAAI,SAACgtE,GAChC,IAAMqvB,GAAgF,KAAjErvB,EAAUrzE,MAAQqzE,EAAUsvB,kBAAkBxsF,QAAQ,MAC3E,mBACKk9D,EADL,CAEEqvB,cACAphG,MAAO+xE,EAAUrzE,KACjB8gB,MAAO4hF,EAAcltE,0DAAsBE,0DAC3CG,eAAgB6sE,EAAcjtE,0DAAwBE,gE,EAK5DitE,qBAAuB,SAACH,GACtB,OAAQA,GAAiB,IAAIp8F,KAAI,SAACgtE,GAChC,IAAMqvB,GAAgF,KAAjErvB,EAAUsvB,kBAAoBtvB,EAAUrzE,MAAMmW,QAAQ,MAC3E,mBACKk9D,EADL,CAEEqvB,cACA1iG,KAAMqzE,EAAUsvB,kBAAoBtvB,EAAUrzE,KAC9CZ,MAAOi0E,EAAU7T,OAAS6T,EAAUj0E,MACpCkC,MAAO+xE,EAAUsvB,kBAAoBtvB,EAAUrzE,KAC/C8gB,MAAO4hF,EAAcltE,0DAAsBE,0DAC3CG,eAAgB6sE,EAAcjtE,0DAAwBE,gE,EAK5DktE,aAAe,SAACC,GACd,OAAQA,GAAiB,IAAIz8F,KAAI,SAACwI,EAAItI,GACpC,mBACKsI,EADL,CAEE7O,KAAM6O,EAAGk0F,iBACT3jG,MAAOyP,EAAGm0F,IACVliF,MAAO8U,0DAAyBrvB,GAAOua,MACvC+U,eAAgBD,0DAAyBrvB,GAAOsvB,eAChDv0B,MAAOuN,EAAGo0F,uB,2EA3JhB,WACE,MAAkDn1E,KAAKvuB,MAA/C2jG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,aACjCF,IACAC,IACAC,M,8CAGF,SAAiC/C,GAC/B,GAAIA,EAASz5B,iBAAmB94C,KAAKvuB,MAAMqnE,eAAgB,CACzD,MAAkD94C,KAAKvuB,MAA/C2jG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,aACjCv5F,YAAW,WACTq5F,EAAU7C,EAASz5B,gBACnBu8B,EAAa9C,EAASz5B,gBACtBw8B,EAAa/C,EAASz5B,sB,oBAK5B,WACE,MAAiD94C,KAAKvuB,MAA9Cgd,EAAR,EAAQA,UAAWqqD,EAAnB,EAAmBA,eAAgBy8B,EAAnC,EAAmCA,UAEnC,GAAI9mF,EACF,OACE,sHACE,kEAAK9W,UAAU,mEAAf,sBACE,2DAAC,iDAAD,uBACE,2DAAC,0DAAD,6CAOV,IAAM69F,EAAiBx1E,KAAKs0E,MAAMiB,aAAX,EAAWA,EAAWjwB,QACvCmwB,EAAyB38B,EAAiB94C,KAAK80E,qBAAqBS,aAA1B,EAA0BA,EAAWhwB,WAAavlD,KAAK00E,aAAaa,aAAlB,EAAkBA,EAAWhwB,WACzHmwB,EAAyB11E,KAAK+0E,aAAaQ,aAAlB,EAAkBA,EAAW/vB,WACtDktB,EAAU6C,IAAcC,EAAeziG,QAAU0iG,EAAuB1iG,QAAUwiG,EAAU/vB,UAAUzyE,QAE5G,OACE,kEAAK4E,UAAU,mEAAf,sBACG+6F,EACC,kEAAK/6F,UAAU,mBAAf,sBACE,kEAAKA,UAAU,QAAf,sBACE,kEAAKA,UAAU,cAAf,0CACA,kEAAKA,UAAU,yBAAf,sBACE,2DAAC,wDAAD,uBACE,2DAAC,+EAAD,CAAaxG,QAASqkG,EAAtB,yBAGJ,2DAAC,wCAAD,CAAqBt8E,OAAQ,IAA7B,sBACE,2DAAC,wCAAD,uBACE,2DAAC,wCAAD,CAAKvf,KAAM67F,EAAgBnvC,QAAQ,QAAQo/B,GAAG,MAAMC,GAAG,MAAMC,YAAa,GAAIC,YAAa,GAAIoO,aAAW,EAA1G,sBACGwB,EAAej9F,KAAI,SAAC4T,EAAO1T,GAAR,OAClB,2DAAC,wCAAD,CAAMC,IAAG,eAAUyT,EAAMja,KAAhB,YAAwBuG,GAASshD,KAAM5tC,EAAM6G,MAAtD,2BAGJ,2DAAC,wCAAD,CAAS2f,QAASgK,0DAAlB,0BAIN,kEAAKhlC,UAAU,QAAf,sBACE,kEAAKA,UAAU,cAAf,oCACA,kEAAKA,UAAU,yBAAf,sBACE,2DAAC,wDAAD,uBACE,2DAAC,+EAAD,CAAaxG,QAASskG,EAAtB,yBAGJ,2DAAC,wCAAD,CAAqBv8E,OAAQ,IAA7B,sBACE,2DAAC,wCAAD,uBACE,2DAAC,wCAAD,CAAKvf,KAAM87F,EAAwBpvC,QAAQ,QAAQo/B,GAAG,MAAMC,GAAG,MAAMC,YAAa,GAAIC,YAAa,GAAIoO,aAAW,EAAlH,sBACGyB,EAAuBl9F,KAAI,SAAC4T,EAAO1T,GAAR,OAC1B,2DAAC,wCAAD,CAAMC,IAAG,eAAUyT,EAAM0oF,iBAAhB,YAAoCp8F,GAASshD,KAAM5tC,EAAM6G,MAAlE,2BAGJ,2DAAC,wCAAD,CAAS2f,QAASgK,0DAAlB,0BAIN,kEAAKhlC,UAAU,QAAf,sBACE,kEAAKA,UAAU,cAAf,oCACA,kEAAKA,UAAU,yBAAf,sBACE,2DAAC,wDAAD,uBACE,2DAAC,+EAAD,CAAaxG,QAASukG,EAAtB,yBAGJ,2DAAC,wCAAD,CAAqBx8E,OAAQ,IAA7B,sBACE,2DAAC,wCAAD,uBACE,2DAAC,wCAAD,CAAKvf,KAAM+7F,EAAwBrvC,QAAQ,QAAQo/B,GAAG,MAAMC,GAAG,MAAMC,YAAa,GAAIC,YAAa,GAAIoO,aAAW,EAAlH,sBACG0B,EAAuBn9F,KAAI,SAAC4T,EAAO1T,GAAR,OAC1B,2DAAC,wCAAD,CAAMC,IAAG,eAAUD,GAASshD,KAAM5tC,EAAM6G,MAAxC,2BAGJ,2DAAC,wCAAD,CAAS2f,QAASgK,0DAAlB,2BAMR,2DAAC,iDAAD,+C,iJAnGyBvO,kDAkKtBunE,8BAAgC7uE,oDAC3C,SAAArb,GACE,MAAO,CACLgD,UACEhD,EAAM6X,mBAAmB5W,MAAM83D,QAAQC,cACvCh5D,EAAM6X,mBAAmB5W,MAAM83D,QAAQE,aACzC6wB,UAAW9pF,EAAM6X,mBAAmBshD,gBAGxC,SAAA5rE,GAAQ,MAAK,CACXo8F,UAAW,SAACrxE,GAAD,OAAc/qB,EAASkrB,qDAAgBH,KAClDsxE,aAAc,SAACtxE,GAAD,OAAc/qB,EAASmrB,qDAAmBJ,KACxDuxE,aAAc,SAACvxE,GAAD,OAAc/qB,EAASorB,qDAAmBL,QAZf+C,CAc3CutE,sB,gKAhLIA,qB,4IAkKOsB,8B,+wHC3KPC,iB,oTAuDJpM,sBAAwB,YAAuB,IAApBvvC,EAAoB,EAApBA,EAAGC,EAAiB,EAAjBA,EAAGnhD,EAAc,EAAdA,QACzBs6F,EAAgBh7D,oFAA2BplC,MAAK,SAACqgG,GAAD,OAAYA,EAAOv/F,OAASgF,EAAQzH,SAC1F,OACE,gEAAG01D,UAAS,oBAAe/M,EAAf,YAAoBC,EAApB,KAAZ,sBACE,mEAAMviD,UAAU,eAAesiD,EAAG,EAAGC,EAAG,EAAG+M,GAAI,GAAIC,WAAW,SAASnN,MAAMs5C,aAAA,EAAAA,EAAergF,QAAS,OAArG,sBACGja,EAAQzH,S,EAMjBukG,QAAU,SAACC,GACT,IAAMC,GAAeD,GAAe,IACjC3qF,QAAO,SAACgF,EAAKilB,GACZ,GAAIjlB,EAAIilB,EAAQsN,YAAa,CAC3B,IAAM6zC,EAAU,SAAH,GAAQpmE,EAAIilB,EAAQsN,aACjC6zC,EAAQyf,WAAa5gE,EAAQ4gE,UAC7Bzf,EAAQ0f,UAAY7gE,EAAQ6gE,SAC5B1f,EAAQ1zC,cAAgBzN,EAAQyN,aAChC1yB,EAAIilB,EAAQsN,YAAc6zC,OAE1BpmE,EAAIilB,EAAQsN,YAActN,EAE5B,OAAOjlB,IACN,IAEL,OAAOrE,OAAOxD,OAAOytF,GAClBx9F,KAAI,SAAC68B,GACJ,IAAMi+D,EAAgBh7D,oFAA2BplC,MAAK,SAACqgG,GAAD,OAAYl+D,EAAQm+D,eAAiBD,EAAOv/F,QAClG,MAAO,CACL7B,KAAMkjC,EAAQqN,aACdjvC,MAAO4hC,EAAQm+D,aACf2C,SAAU9gE,EAAQyN,aAClBszD,KAAM/gE,EAAQ6gE,SACdG,MAAOhhE,EAAQ4gE,UACfhjF,MAAOqgF,EAAgBA,EAAcrgF,MAAQmlB,oFAC7CpQ,eAAgBsrE,EAAgBA,EAActrE,eAAiBqQ,yF,uEA1FvE,YAEEi+D,EAD4Br2E,KAAKvuB,MAAzB4kG,qB,8CAIV,SAAiC9D,GAC/B,GAAIA,EAASz5B,iBAAmB94C,KAAKvuB,MAAMqnE,eAAgB,CACzD,IAAQu9B,EAAoBr2E,KAAKvuB,MAAzB4kG,gBACRt6F,YAAW,kBAAMs6F,EAAgB9D,EAASz5B,sB,oBAI9C,WACE,MAAyC94C,KAAKvuB,MAAtCyzE,EAAR,EAAQA,aAAcpM,EAAtB,EAAsBA,eAChBw9B,EAAYt2E,KAAK61E,QAAQ3wB,GAC/B,OACE,kEAAKvtE,UAAU,+DAAf,sBACE,kEAAKA,UAAU,cAAf,uCACA,2DAAC,wCAAD,CAAqBuhB,OAAQ,IAA7B,sBACE,2DAAC,wCAAD,CAAUvf,KAAM28F,EAAW1M,OAAQ,EAAGjkC,OAAQ,CAAE78B,KAAM,IAAtD,sBACE,2DAAC,wCAAD,CAAe+gE,gBAAgB,MAAMxhC,UAAU,EAA/C,uBACA,2DAAC,wCAAD,CAAOhC,QAAQ,QAAQC,UAAU,EAAOC,UAAU,EAAOC,KAAMxmC,KAAKwpE,sBAApE,uBACA,2DAAC,wCAAD,CACEvwE,MAAO,GACPqtC,UAAU,EACViwC,eAAe,EACfxiG,KAAK,SACLg2F,OAAQ,CAAC,EAAGjxB,EAAiB,EAAI,WACjCrS,OAAO,wBACPjzD,MAAO,CAAElC,MAAO,2BAA4BklG,OAAQ,GAAI7mE,SAAU,QAPpE,uBASA,2DAAC,wCAAD,CAAK02B,QAAQ,WAAWtM,KAAK,UAA7B,sBACGu8C,EAAU/9F,KAAI,SAAC4T,EAAO1T,GACrB,OAAO,2DAAC,wCAAD,CAAMC,IAAG,UAAKyT,EAAMja,KAAX,YAAmBuG,GAASshD,KAAK,UAA1C,2BAGX,2DAAC,wCAAD,CAAKsM,QAAQ,OAAOtM,KAAK,UAAzB,sBACGu8C,EAAU/9F,KAAI,SAAC4T,EAAO1T,GACrB,OAAO,2DAAC,wCAAD,CAAMC,IAAG,UAAKyT,EAAMja,KAAX,YAAmBuG,GAASshD,KAAK,UAA1C,2BAGX,2DAAC,wCAAD,CAAKsM,QAAQ,QAAQtM,KAAK,UAA1B,sBACGu8C,EAAU/9F,KAAI,SAAC4T,EAAO1T,GACrB,OAAO,2DAAC,wCAAD,CAAMC,IAAG,UAAKyT,EAAMja,KAAX,YAAmBuG,GAASshD,KAAK,UAA1C,2BAGX,2DAAC,wCAAD,CAASpnB,QAASgK,0DAAc5jB,QAAQ,EAAxC,uBACA,2DAAC,wCAAD,6B,6IAhDmBqV,kDAiGlBqoE,0BAA4B3vE,oDACvC,SAAArb,GACE,MAAO,CACLgD,UAAWhD,EAAM6X,mBAAmB5W,MAAMw4D,aAAa/rE,QACvD+rE,aAAcz5D,EAAM6X,mBAAmB4hD,iBAG3C,SAAAlsE,GAAQ,MAAK,CACXq9F,gBAAiB,SAACtyE,GAAD,OAAc/qB,EAASosB,qDAAsBrB,QARzB+C,CAUvC8uE,kB,gKA3GIA,iB,gIAiGOa,0B,6mDCnGApgC,EAAoB,WAC/B,QAAkC3kE,mBAAS,GAA3C,GAAO6sE,EAAP,KAAkBF,EAAlB,KAMA,OACE,oCACE,kBAAC,IAAD,CAAQvlD,MAAM,kCACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAMrB,OAAP,KACE,kBAAC,IAAD,CAAYqW,OAAQywC,EAAWzW,gBAVzC,SAAyBwW,GACvBD,EAAaC,OAWP,kBAAC,IAAM3mD,QAAP,KACE,kBAAC,IAAD,CAAQrmB,MAAOitE,GACb,kBAAC,IAAO7lC,KAAR,CAAapnC,MAAO,GAClB,kBAAC,IAAD,OAEF,kBAAC,IAAOonC,KAAR,CAAapnC,MAAO,GAClB,kBAAC,IAAD,OAEF,kBAAC,IAAOonC,KAAR,CAAapnC,MAAO,GAClB,kBAAC,IAAD,OAEF,kBAAC,IAAOonC,KAAR,CAAapnC,MAAO,GAClB,kBAAC,IAAD,OAEF,kBAAC,IAAOonC,KAAR,CAAapnC,MAAO,GAClB,kBAAC,IAAD,a,EA9BH+kE,E,uIAAAA,E,6eCNP18D,EAAO,CACX,CAAEnG,MAAO,4CACT,CAAEA,MAAO,8BACT,CAAEA,MAAO,4CACT,CAAEA,MAAO,2CACT,CAAEA,MAAO,yBAGEyqE,EAAa,SAAC,GAAgC,IAA9BnwC,EAA8B,EAA9BA,OAAQg6B,EAAsB,EAAtBA,gBACnC,OACE,yBAAKnwD,UAAU,qBAAf,sBACGgC,EAAKpB,KAAI,SAACm+F,EAAMj+F,GAAP,OACR,yBACEd,UAAWC,IAAW,WAAY,CAAEk2B,OAAQA,IAAWr1B,IACvDC,IAAKD,EACL2f,QAAS,kBAAM0vC,EAAgBrvD,IAC/BwoC,KAAK,eACL5jB,UAAA,mBAAqB5kB,GALvB,sBAOGi+F,EAAKljG,a,6FAnBVmG,E,0FAQOskE,E,spLCsBPzrC,YAAc,wCAEPmkE,SAAb,6HACE,kBAAYllG,GAAO,6CACjB,mBAAMA,IASRmlG,YAAS/jG,EAVU,EAgNnBgkG,UAAY,WACV,MAAsC,EAAKprF,MAAMpQ,WAAzCP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,OAAQu1C,EAAtB,EAAsBA,YAET,OAAT/1C,GACkB,iBAAXQ,GACgB,iBAAhBu1C,IAwBX,EAAK+lD,OAAS76F,WAAW,EAAK+6F,eAAeh8F,GAAO,OA7OnC,EAgPnBg8F,eAAiB,SAAAh8F,GAAI,kDAAI,2GACjBO,EAAe,EAAKoQ,MAApBpQ,aAEaA,EAAWP,OAASA,EAHhB,0EAME1B,gDAAWC,IAAX,UAAkBvI,uCAAUwI,KAAKC,UAAUiB,KAA3C,YAAmDM,IANrD,aAMfpB,EANe,QASVC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAXZ,oBAeO,eAF1BS,EAAa3B,EAASC,KAAKA,KAAKiB,YAAY,IAE7BU,QAAgD,WAAtBD,EAAWC,OAfjC,kCAgBWlC,gDAAWC,IAAX,UACvBvI,uCAAUwI,KAAKC,UAAUiB,KADF,YACUM,EADV,YAE1B,CAAErB,UAAW,aAlBE,SAgBXs9F,EAhBW,QAqBDp9F,KAAKA,MACnBo9F,EAAcp9F,KAAKA,KAAK+B,SACxBq7F,EAAcp9F,KAAKA,KAAK+B,QAAQ3I,OAAS,GAEzC,EAAKooC,SAAS,CAAEz8B,OAAQq4F,EAAcp9F,KAAKA,KAAK+B,QAASL,eAEzD27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,IAEd,EAAKsoC,SAAS,CAAE9/B,eAChB27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,GAhCC,wBAmCjB,EAAKsoC,SAAS,CAAE9/B,eAAc,kBAAM,EAAKw7F,eAnCxB,0DAuCrB1sF,QAAQgS,IAAI,2BAAZ,MAvCqB,2DAhPN,EA2RnB86E,YAAc,SAAApkE,GACZ,IAAK,EAAKpnB,MAAMpQ,WAAY,OAAO,KAEnC,IAAMsP,EAAU,CACd+N,KAAM,WACJ,EAAKyiB,SAAS,CAAE+7D,YAAY,KAE9Bh7E,MAAO,WACL,EAAKif,SAAS,CAAE+7D,YAAY,MAIhC,OACE,2DAAC,oEAAD,CACEx+E,KAAM,EAAKjN,MAAMyrF,WACjBvsF,QAASA,EACTjM,OAAQ,EAAK+M,MAAM/M,OACnBrD,WAAY,EAAKoQ,MAAMpQ,WACvBw3B,aAAcA,EACdL,YAAaA,YACbl6B,SAAU,CAAC,mBAAoB,mBAAoB,yBAPrD,wBArSF,EAAKmT,MAAQ,CACXpQ,gBAAYxI,EACZqkG,YAAY,EACZx4F,YAAQ7L,GANO,EADrB,4HAaE,6GACmEmtB,KAAKvuB,MAA9Du1B,EADV,EACUA,QAAS+oC,EADnB,EACmBA,eAAgBonC,EADnC,EACmCA,mBAAoBh6F,EADvD,EACuDA,QAEpB,gBAA7B4yD,EAAet5C,WAA4D,WAA7Bs5C,EAAet5C,WAC/DuQ,EAAQ,aAGkB,gBAAxB+oC,EAAeh8D,MAAkD,WAAxBg8D,EAAeh8D,MAC1DizB,EAAQ,QAGqB,gBAA3B+oC,EAAe76C,SAAwD,WAA3B66C,EAAe76C,SAC7D8R,EAAQ,WAGkB,gBAAxB+oC,EAAer/B,MAAkD,WAAxBq/B,EAAer/B,MAC1D1J,EAAQ,QAGL7pB,GACHg6F,EAAmB,CAAEjlG,KAAM,WAAYiL,QAASq1B,cApBpD,gDAbF,gGAqCE,WAEEwkE,aAAah3E,KAAK42E,QAClB52E,KAAK42E,YAAS/jG,IAxClB,oBA2CE,WAAS,WACDi/C,EAAa52B,kEAAkB8E,KAAKvuB,MAAM0pB,aAChD,EAOI6E,KAAKvuB,MANPs+D,EADF,EACEA,eACAl+B,EAFF,EAEEA,UACAnC,EAHF,EAGEA,WACA0nE,EAJF,EAIEA,iBACAj6F,EALF,EAKEA,QACAk6F,EANF,EAMEA,yBAEEp6F,EAAa,KAEXq6F,EAAiD,aAA7BvnC,EAAet5C,UACnC8gF,EAA2C,aAAxBxnC,EAAeh8D,KAClCyjG,EAA6C,aAA3BznC,EAAe76C,QACjCuiF,EAAuC,aAAxB1nC,EAAer/B,KAOpC,OALIvzB,IACFF,EAAaE,EAAQF,WAAW1E,KAAI,SAAA2d,GAAC,OAAIwhF,kEAAmBxhF,EAAG2b,EAAWnC,MAC1EzyB,EAAa0R,8CAAE+rB,OAAOz9B,EAAY,aAIjCE,GACAi6F,GACAG,GACAD,GACAE,GACAC,EAKIL,GACLE,GACAC,GACAC,GACAC,EACA,2DAAC,kDAAD,uBACE,2DAAC,0DAAD,kCAAiBjlE,YAAjB,iBAGF,sHACE,2DAAC,sCAAD,CACE7P,cAAeD,+DAAiBzlB,GAChC+kC,SAAQ,4DAAE,WAAM15B,GAAN,wGAEAvP,EAAU,CACdoE,QAASq1B,YACTv1B,WAAY+lB,+DAAiB1a,GAC7BhL,UAAW,MALP,SAQiBlE,gDAAWwmB,KAAK9uB,uCAAUwI,KAAKC,UAAUiB,KAAMzB,GARhE,OAQAW,EARA,OASN29F,EAAyB,CAAEnlG,KAAM,aAG/BwH,EAASC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAE/B,EAAKugC,SACH,CACE9/B,WAAY3B,EAASC,KAAKA,KAAKiB,YAAY,GAC3Cs8F,YAAY,EACZx4F,YAAQ7L,IAEV,WACE,EAAKgkG,eAvBL,gDA4BN1sF,QAAQgS,IAAI,qDAAZ,MA5BM,yDAAF,sDAFV,uBAkCG,YAA6B,IAA1BH,EAA0B,EAA1BA,MAAOF,EAAmB,EAAnBA,aACT,OACE,2DAAC,sCAAD,CAAMnkB,UAAU,gBAAhB,sBACE,2DAAC,yDAAMggB,QAAP,KACE,kEAAKhgB,UAAU,OAAf,sBACE,8FACA,yHAEF,2DAAC,6DAAD,CAAaA,UAAU,mBAAmBwhB,QAAQ,WAAlD,sBACE,2DAAC,4DAAD,CAAY0mB,QAAQ,6BAApB,iCACA,2DAAC,+DAAD,CACExsC,GAAG,6BACHU,KAAK,OACLs+B,UAAQ,EACR3+B,UAAQ,EACRpC,MAAOkhC,YACP8xB,WAAY,GACZzrC,eACE,2DAAC,gEAAD,CAAgB8W,SAAS,QAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMm1D,yCAAZ,yBAIN5iC,aACE,2DAACxe,aAAD,CAAc6K,UAAU,aAAa5E,MAAO3b,EAAQhK,YAApD,sBACE,2DAAC,gEAAD,CAAgBw8B,SAAS,MAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMwyB,wCAAZ,0BAlBV,wBAyBF,kEAAK35B,UAAU,OAAf,sBACE,yGACA,mOAMF,kEAAKA,UAAU,wBAAf,sBACGsF,EAAW1E,KAAI,SAAAqqB,GACd,OACE,kEAAKlqB,IAAKkqB,EAAU1wB,KAAMyF,UAAU,aAApC,sBACG,EAAKggG,YAAY/0E,EAAWkvB,SAOvC,2DAAC,yDAAM14B,OAAP,KACE,2DAAC,yDAAD,CACEzhB,UAAU,aACVjE,UAAW,EAAK+X,MAAMpQ,WACtBgiB,UAAQ,cACRjF,QAAS,kBAAM,EAAK+iB,SAAS,CAAE+7D,YAAY,KAJ7C,qCAQA,2DAAC,yDAAD,CACEv/F,UAAU,aACV5D,KAAK,SACLL,UAAWsoB,GAASF,EACpB3C,QAAQ,YACRkE,UAAQ,SALV,qCAcT2C,KAAKi3E,YAAY,CAChBn+E,MAAO,wCACPwD,KACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAM84F,yCAAZ,2BAhID,2DAAC,kDAAD,yDAAoCplE,YAApC,cAzEb,yBAqTE,SAAY5P,EAAWlvB,GACrB,MAA4B,WAAxBkvB,EAAUkN,UACL,2DAAC,8DAAD,CAAOlN,UAAWA,EAAWlvB,SAAUA,EAAvC,uBAIP,2DAAC,sEAAD,CACEkvB,UAAWA,EACXs0E,YAAU,EACVrlE,UAAW7R,KAAKvuB,MAAMogC,UACtBC,YAAa9R,KAAKvuB,MAAMqgC,YACxBpC,WAAY1P,KAAKvuB,MAAMi+B,WACvBqC,MAAO/R,KAAKvuB,MAAMsgC,MAClBr+B,SAAUA,EAPZ,yBA3TN,qIAA8By6B,6CAAMC,eAwUvBypE,kBAAoB/wE,oDAC/B,SAAArb,GAAK,0CAAK,CACRikB,YAAY,UAAAjkB,EAAMme,SAASjwB,YAAf,mBAAqB8c,iBAArB,mBAAgC9c,YAAhC,mBAAsCA,YAAtC,eAA4C+1B,aAAc,GACtEmC,WAAW,UAAApmB,EAAMme,SAASjwB,YAAf,mBAAqB5F,YAArB,mBAA2B4F,YAA3B,mBAAiCA,YAAjC,eAAuCylC,aAAc,GAChEtN,aAAa,UAAArmB,EAAMme,SAASjwB,YAAf,mBAAqBub,eAArB,mBAA8Bvb,YAA9B,mBAAoCA,YAApC,eAA0C+R,WAAY,GACnEqmB,OAAO,UAAAtmB,EAAMme,SAASjwB,YAAf,mBAAqB+2B,YAArB,mBAA2B/2B,YAA3B,mBAAiCA,YAAjC,eAAuCo4B,QAAS,GACvD5W,YAAawF,gEAAsBlV,GACnCskD,eAAgBtkD,EAAMme,SAASa,aAC/BttB,QAASsO,EAAM5R,SAAS8pE,oBAAoBC,SAC5CwzB,iBAAkB3rF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBC,SAASzqE,YAEtE,SAAAH,GAAQ,MAAK,CACXm+F,mBAAoB,SAAAx9F,GAAI,OAAIX,EAASmJ,8DAAwBxI,KAC7D09F,yBAA0B,SAAA19F,GAAI,OAAIX,EAASuJ,8DAA8B5I,KACzEqtB,QAAS,SAAArtB,GAAI,OAAIX,EAAS+Q,yDAAYpQ,QAdTmtB,CAgB/B6vE,UAEI9jF,aAAeC,kEAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,2D,gKArWEmf,Y,qGAEOmkE,S,kGAwUAkB,kB,2GAkBPhlF,a,geC/XS,SAAAoE,GACb,GAAqB,iBAAVA,EAAoB,OAAO,KACtCA,EAAQA,EAAMnP,OACd,IACM4W,EADQ,8BACQ6oB,KAAKtwB,GAE3B,OAAQA,GACN,IAAK,aACH,OAAO,EACT,IAAK,cACH,OAAO,EACT,IAAK,SACH,MAAO,GACT,IAAK,SACH,MAAO,GACT,QACE,GAAI5a,MAAMC,QAAQoiB,GAChB,OAAQA,EAAQ,IACd,IAAK,MACH,OAAO3c,SAAS2c,EAAQ,GAAI,IAC9B,IAAK,MAGH,IAEE,OAAOA,EAAQ,GAAGnG,QAAQ,KAAM,IAChC,MAAO3kB,GAEP,OAAO,KAEX,QACE,OAAO,UAEN,GAAI,oBAAoBkiB,KAAKmB,GAElC,OAAOA,EAGb,OAAO,MAtCM,O,k0LCgCTub,YAAc,wCAEPslE,SAAb,6HACE,kBAAYrmG,GAAO,6CACjB,mBAAMA,IASRmlG,YAAS/jG,EAVU,EAuOnBgkG,UAAY,WACV,MAAsC,EAAKprF,MAAMpQ,WAAzCP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,OAAQu1C,EAAtB,EAAsBA,YAET,OAAT/1C,GACkB,iBAAXQ,GACgB,iBAAhBu1C,IAwBX,EAAK+lD,OAAS76F,WAAW,EAAK+6F,eAAeh8F,GAAO,OApQnC,EAuQnBg8F,eAAiB,SAAAh8F,GAAI,kDAAI,2GACjBO,EAAe,EAAKoQ,MAApBpQ,aAEaA,EAAWP,OAASA,EAHhB,0EAME1B,gDAAWC,IAAX,UAAkBvI,uCAAUwI,KAAKC,UAAUiB,KAA3C,YAAmDM,IANrD,aAMfpB,EANe,QASVC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAXZ,oBAeO,eAF1BS,EAAa3B,EAASC,KAAKA,KAAKiB,YAAY,IAE7BU,QAAgD,WAAtBD,EAAWC,OAfjC,kCAgBWlC,gDAAWC,IAAX,UACvBvI,uCAAUwI,KAAKC,UAAUiB,KADF,YACUM,EADV,YAE1B,CAAErB,UAAW,aAlBE,SAgBXs9F,EAhBW,QAqBDp9F,KAAKA,MACnBo9F,EAAcp9F,KAAKA,KAAK+B,SACxBq7F,EAAcp9F,KAAKA,KAAK+B,QAAQ3I,OAAS,GAEzC,EAAKooC,SAAS,CAAEz8B,OAAQq4F,EAAcp9F,KAAKA,KAAK+B,QAASL,eAEzD27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,IAEd,EAAKsoC,SAAS,CAAE9/B,eAChB27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,GAhCC,wBAmCjB,EAAKsoC,SAAS,CAAE9/B,eAAc,kBAAM,EAAKw7F,eAnCxB,0DAuCrB1sF,QAAQgS,IAAI,2BAAZ,MAvCqB,2DAvQN,EAkTnB86E,YAAc,SAAApkE,GACZ,IAAK,EAAKpnB,MAAMpQ,WAAY,OAAO,KAEnC,IAAMsP,EAAU,CACd+N,KAAM,WACJ,EAAKyiB,SAAS,CAAE+7D,YAAY,KAE9Bh7E,MAAO,WACL,EAAKif,SAAS,CAAE+7D,YAAY,MAIhC,OACE,2DAAC,oEAAD,CACEx+E,KAAM,EAAKjN,MAAMyrF,WACjBvsF,QAASA,EACTjM,OAAQ,EAAK+M,MAAM/M,OACnBrD,WAAY,EAAKoQ,MAAMpQ,WACvBw3B,aAAcA,EACdL,YAAaA,YACbl6B,SAAU,CAAC,mBAAoB,mBAAoB,yBAPrD,wBA5TF,EAAKmT,MAAQ,CACXpQ,gBAAYxI,EACZqkG,YAAY,EACZx4F,YAAQ7L,GANO,EADrB,4HAaE,iHAQMmtB,KAAKvuB,MANPu1B,EAFJ,EAEIA,QACA+oC,EAHJ,EAGIA,eACAonC,EAJJ,EAIIA,mBACAh6F,EALJ,EAKIA,QACA46F,EANJ,EAMIA,oBACAC,EAPJ,EAOIA,uBAGED,GAAuBC,IACQ,gBAA7BjoC,EAAet5C,WAA4D,WAA7Bs5C,EAAet5C,WAC/DuQ,EAAQ,aAGkB,gBAAxB+oC,EAAeh8D,MAAkD,WAAxBg8D,EAAeh8D,MAC1DizB,EAAQ,QAGqB,gBAA3B+oC,EAAe76C,SAAwD,WAA3B66C,EAAe76C,SAC7D8R,EAAQ,WAGkB,gBAAxB+oC,EAAer/B,MAAkD,WAAxBq/B,EAAer/B,MAC1D1J,EAAQ,QAGL7pB,GACHg6F,EAAmB,CAAEjlG,KAAM,WAAYiL,QAASq1B,eA5BtD,gDAbF,gGA8CE,WAEEwkE,aAAah3E,KAAK42E,QAClB52E,KAAK42E,YAAS/jG,IAjDlB,oBAoDE,WAAS,WACDi/C,EAAa52B,kEAAkB8E,KAAKvuB,MAAM0pB,aAChD,EASI6E,KAAKvuB,MARPs+D,EADF,EACEA,eACAl+B,EAFF,EAEEA,UACAnC,EAHF,EAGEA,WACA0nE,EAJF,EAIEA,iBACAj6F,EALF,EAKEA,QACA46F,EANF,EAMEA,oBACAC,EAPF,EAOEA,uBACAX,EARF,EAQEA,yBAEEp6F,EAAa,KAEjB,IAAK86F,IAAwBC,EAC3B,OACE,2DAAC,kDAAD,uBACE,2DAAC,yEAAD,CAAQjkG,KAAK,OAAb,sBACE,gEAAG4D,UAAU,YAAb,4HAQR,IAAM2/F,EAAiD,aAA7BvnC,EAAet5C,UACnC8gF,EAA2C,aAAxBxnC,EAAeh8D,KAClCyjG,EAA6C,aAA3BznC,EAAe76C,QACjCuiF,EAAuC,aAAxB1nC,EAAer/B,KAOpC,OALIvzB,IACFF,EAAaE,EAAQF,WAAW1E,KAAI,SAAA2d,GAAC,OAAIwhF,kEAAmBxhF,EAAG2b,EAAWnC,MAC1EzyB,EAAa0R,8CAAE+rB,OAAOz9B,EAAY,aAIjCE,GACAi6F,GACAG,GACAD,GACAE,GACAC,EAKIL,GACLE,GACAC,GACAC,GACAC,EACA,2DAAC,kDAAD,uBACE,2DAAC,0DAAD,kCAAiBjlE,YAAjB,iBAGF,sHACE,2DAAC,sCAAD,CACE7P,cAAeD,+DAAiBzlB,GAChC+kC,SAAQ,4DAAE,WAAM15B,GAAN,wGAEAvP,EAAU,CACdoE,QAASq1B,YACTv1B,WAAY+lB,+DAAiB1a,GAC7BhL,UAAW,MALP,SAQiBlE,gDAAWwmB,KAAK9uB,uCAAUwI,KAAKC,UAAUiB,KAAMzB,GARhE,OAQAW,EARA,OASN29F,EAAyB,CAAEnlG,KAAM,aAE/BwH,EAASC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAE/B,EAAKugC,SACH,CACE9/B,WAAY3B,EAASC,KAAKA,KAAKiB,YAAY,GAC3Cs8F,YAAY,EACZx4F,YAAQ7L,IAEV,WACE,EAAKgkG,eAtBL,gDA2BN1sF,QAAQgS,IAAI,qDAAZ,MA3BM,yDAAF,sDAFV,uBAiCG,YAAqC,IAAlCH,EAAkC,EAAlCA,MAAOF,EAA2B,EAA3BA,aAAcxT,EAAa,EAAbA,OACvB,OACE,2DAAC,sCAAD,CAAM3Q,UAAU,gBAAhB,sBACE,2DAAC,yDAAMggB,QAAP,KACE,kEAAKhgB,UAAU,OAAf,sBACE,8FACA,kIAEF,2DAAC,6DAAD,CAAaA,UAAU,mBAAmBwhB,QAAQ,WAAlD,sBACE,2DAAC,4DAAD,CAAY0mB,QAAQ,6BAApB,iCACA,2DAAC,+DAAD,CACExsC,GAAG,6BACHU,KAAK,OACLs+B,UAAQ,EACR3+B,UAAQ,EACRpC,MAAOkhC,YACP8xB,WAAY,GACZzrC,eACE,2DAAC,gEAAD,CAAgB8W,SAAS,QAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMm1D,yCAAZ,yBAIN5iC,aACE,2DAACxe,aAAD,CAAc6K,UAAU,aAAa5E,MAAO3b,EAAQhK,YAApD,sBACE,2DAAC,gEAAD,CAAgBw8B,SAAS,MAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMwyB,wCAAZ,0BAlBV,wBAyBF,kEAAK35B,UAAU,OAAf,sBACE,yGACA,qPAOF,kEAAKA,UAAU,wBAAf,sBACGsF,EAAW1E,KAAI,SAAAqqB,GACd,OACE,kEAAKlqB,IAAKkqB,EAAU1wB,KAAMyF,UAAU,aAApC,sBACG,EAAKggG,YAAY/0E,EAAWkvB,EAAYxpC,SAOnD,2DAAC,yDAAM8Q,OAAP,KACE,2DAAC,yDAAD,CACEzhB,UAAU,aACVjE,UAAW,EAAK+X,MAAMpQ,WACtBgiB,UAAQ,cACRjF,QAAS,kBAAM,EAAK+iB,SAAS,CAAE+7D,YAAY,KAJ7C,qCAQA,2DAAC,yDAAD,CACEv/F,UAAU,aACV5D,KAAK,SACLL,UAAWsoB,GAASF,EACpB3C,QAAQ,YACRkE,UAAQ,SALV,qCAcT2C,KAAKi3E,YAAY,CAChBn+E,MAAO,wCACPwD,KACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAMm5F,wCAAZ,2BAhID,2DAAC,kDAAD,yDAAoCzlE,YAApC,cAhGb,yBA4UE,SAAY5P,EAAWlvB,EAAU89B,GAC/B,MAA4B,WAAxB5O,EAAUkN,UACL,2DAAC,8DAAD,CAAOlN,UAAWA,EAAWlvB,SAAUA,EAAvC,uBAIP,2DAAC,sEAAD,CACEkvB,UAAWA,EACXiP,UAAW7R,KAAKvuB,MAAMogC,UACtBC,YAAa9R,KAAKvuB,MAAMqgC,YACxBC,MAAO/R,KAAKvuB,MAAMsgC,MAClBrC,WAAY1P,KAAKvuB,MAAMi+B,WACvBh8B,SAAUA,EACVs+B,kBAAmBR,EAPrB,yBAlVN,qIAA8BrD,6CAAMC,eA+VvB8pE,kBAAoBpxE,oDAC/B,SAAArb,GAAK,0CAAK,CACRikB,YAAY,UAAAjkB,EAAMme,SAASjwB,YAAf,mBAAqB8c,iBAArB,mBAAgC9c,YAAhC,mBAAsCA,YAAtC,eAA4C+1B,aAAc,GACtEmC,WAAW,UAAApmB,EAAMme,SAASjwB,YAAf,mBAAqB5F,YAArB,mBAA2B4F,YAA3B,mBAAiCA,YAAjC,eAAuCylC,aAAc,GAChEtN,aAAa,UAAArmB,EAAMme,SAASjwB,YAAf,mBAAqBub,eAArB,mBAA8Bvb,YAA9B,mBAAoCA,YAApC,eAA0C+R,WAAY,GACnEqmB,OAAO,UAAAtmB,EAAMme,SAASjwB,YAAf,mBAAqB+2B,YAArB,mBAA2B/2B,YAA3B,mBAAiCA,YAAjC,eAAuCo4B,QAAS,GACvD5W,YAAawF,gEAAsBlV,GACnCskD,eAAgBtkD,EAAMme,SAASa,aAC/BttB,QAASsO,EAAM5R,SAAS8pE,oBAAoBI,SAC5CqzB,iBAAkB3rF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBI,SAAS5qE,QACpE4+F,oBAAqBtsF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBC,SAASC,YACvEm0B,uBAAwBvsF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBG,YAAYD,gBAE/E,SAAA7qE,GAAQ,MAAK,CACXm+F,mBAAoB,SAAAx9F,GAAI,OAAIX,EAASmJ,8DAAwBxI,KAC7D09F,yBAA0B,SAAA19F,GAAI,OAAIX,EAASuJ,8DAA8B5I,KACzEqtB,QAAS,SAAArtB,GAAI,OAAIX,EAAS+Q,yDAAYpQ,QAhBTmtB,CAkB/BgxE,UAEIjlF,aAAeC,kEAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,2D,gKA9XEmf,Y,qGAEOslE,S,kGA+VAI,kB,2GAoBPrlF,a,isLClXA2f,YAAc,6CAEP2lE,OAAb,yHACE,gBAAY1mG,GAAO,2CACjB,mBAAMA,IASRmlG,YAAS/jG,EAVU,EAuLnBgkG,UAAY,WACV,MAAsC,EAAKprF,MAAMpQ,WAAzCP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,OAAQu1C,EAAtB,EAAsBA,YAET,OAAT/1C,GACkB,iBAAXQ,GACgB,iBAAhBu1C,IAwBX,EAAK+lD,OAAS76F,WAAW,EAAK+6F,eAAeh8F,GAAO,OApNnC,EAuNnBg8F,eAAiB,SAAAh8F,GAAI,kDAAI,2GACjBO,EAAe,EAAKoQ,MAApBpQ,aAEaA,EAAWP,OAASA,EAHhB,0EAME1B,gDAAWC,IAAX,UAAkBvI,uCAAUwI,KAAKC,UAAUiB,KAA3C,YAAmDM,IANrD,aAMfpB,EANe,QASVC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAXZ,oBAeO,eAF1BS,EAAa3B,EAASC,KAAKA,KAAKiB,YAAY,IAE7BU,QAAgD,WAAtBD,EAAWC,OAfjC,kCAgBWlC,gDAAWC,IAAX,UACvBvI,uCAAUwI,KAAKC,UAAUiB,KADF,YACUM,EADV,YAE1B,CAAErB,UAAW,aAlBE,SAgBXs9F,EAhBW,QAqBDp9F,KAAKA,MACnBo9F,EAAcp9F,KAAKA,KAAK+B,SACxBq7F,EAAcp9F,KAAKA,KAAK+B,QAAQ3I,OAAS,GAEzC,EAAKooC,SAAS,CAAEz8B,OAAQq4F,EAAcp9F,KAAKA,KAAK+B,QAASL,eAEzD27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,IAEd,EAAKsoC,SAAS,CAAE9/B,eAChB27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,GAhCC,wBAmCjB,EAAKsoC,SAAS,CAAE9/B,eAAc,kBAAM,EAAKw7F,eAnCxB,0DAuCrB1sF,QAAQgS,IAAI,2BAAZ,MAvCqB,2DAvNN,EAkQnB86E,YAAc,SAAApkE,GACZ,IAAK,EAAKpnB,MAAMpQ,WAAY,OAAO,KAEnC,IAAMsP,EAAU,CACd+N,KAAM,WACJ,EAAKyiB,SAAS,CAAE+7D,YAAY,KAE9Bh7E,MAAO,WACL,EAAKif,SAAS,CAAE+7D,YAAY,MAIhC,OACE,2DAAC,oEAAD,CACEx+E,KAAM,EAAKjN,MAAMyrF,WACjBvsF,QAASA,EACTjM,OAAQ,EAAK+M,MAAM/M,OACnBrD,WAAY,EAAKoQ,MAAMpQ,WACvBw3B,aAAcA,EACdL,YAAaA,YACbl6B,SAAU,CAAC,mBAAoB,mBAAoB,yBAPrD,wBA5QF,EAAKmT,MAAQ,CACXpQ,gBAAYxI,EACZqkG,YAAY,EACZx4F,YAAQ7L,GANO,EADrB,0HAaE,6GACmEmtB,KAAKvuB,MAA9Du1B,EADV,EACUA,QAAS+oC,EADnB,EACmBA,eAAgBonC,EADnC,EACmCA,mBAAoBh6F,EADvD,EACuDA,QAEpB,gBAA7B4yD,EAAet5C,WAA4D,WAA7Bs5C,EAAet5C,WAC/DuQ,EAAQ,aAGkB,gBAAxB+oC,EAAeh8D,MAAkD,WAAxBg8D,EAAeh8D,MAC1DizB,EAAQ,QAGqB,gBAA3B+oC,EAAe76C,SAAwD,WAA3B66C,EAAe76C,SAC7D8R,EAAQ,WAGL7pB,GACHg6F,EAAmB,CAAEjlG,KAAM,SAAUiL,QAASq1B,cAhBlD,gDAbF,gGAiCE,WAEEwkE,aAAah3E,KAAK42E,QAClB52E,KAAK42E,YAAS/jG,IApClB,oBAuCE,WAAS,WACDi/C,EAAa52B,kEAAkB8E,KAAKvuB,MAAM0pB,aAChD,EAA6E6E,KAAKvuB,MAA1Es+D,EAAR,EAAQA,eAAgBl+B,EAAxB,EAAwBA,UAAWnC,EAAnC,EAAmCA,WAAY0nE,EAA/C,EAA+CA,iBAAkBj6F,EAAjE,EAAiEA,QAC7DF,EAAa,KAEXq6F,EAAiD,aAA7BvnC,EAAet5C,UACnC8gF,EAA2C,aAAxBxnC,EAAeh8D,KAClCyjG,EAA6C,aAA3BznC,EAAe76C,QAOvC,OALI/X,IACFF,EAAaE,EAAQF,WAAW1E,KAAI,SAAA2d,GAAC,OAAIwhF,kEAAmBxhF,EAAG2b,EAAWnC,MAC1EzyB,EAAa0R,8CAAE+rB,OAAOz9B,EAAY,aAIjCE,GACAi6F,GACAG,GACAD,GACAE,EAIIJ,GAAoBE,GAAqBC,GAAoBC,EAClE,2DAAC,kDAAD,uBACE,2DAAC,0DAAD,kCAAiBhlE,YAAjB,iBAGF,sHACE,2DAAC,sCAAD,CACE7P,cAAeD,+DAAiBzlB,GAChC+kC,SAAQ,4DAAE,WAAM15B,GAAN,wGAEAvP,EAAU,CACdoE,QAASq1B,YACTv1B,WAAY+lB,+DAAiB1a,GAC7BhL,UAAW,MALP,SAQiBlE,gDAAWwmB,KAAK9uB,uCAAUwI,KAAKC,UAAUiB,KAAMzB,GARhE,QAQAW,EARA,QAUKC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAE/B,EAAKugC,SACH,CACE9/B,WAAY3B,EAASC,KAAKA,KAAKiB,YAAY,GAC3Cs8F,YAAY,EACZx4F,YAAQ7L,IAEV,WACE,EAAKgkG,eArBL,gDA0BN1sF,QAAQgS,IAAI,mDAAZ,MA1BM,yDAAF,sDAFV,uBAgCG,YAA6B,IAA1BH,EAA0B,EAA1BA,MAAOF,EAAmB,EAAnBA,aACT,OACE,2DAAC,sCAAD,CAAMnkB,UAAU,cAAhB,sBACE,2DAAC,yDAAMggB,QAAP,KACE,kEAAKhgB,UAAU,OAAf,sBACE,8FACA,mHAEF,2DAAC,6DAAD,CAAaA,UAAU,mBAAmBwhB,QAAQ,WAAlD,sBACE,2DAAC,4DAAD,CAAY0mB,QAAQ,6BAApB,iCACA,2DAAC,+DAAD,CACExsC,GAAG,6BACHU,KAAK,OACLs+B,UAAQ,EACR3+B,UAAQ,EACRpC,MAAOkhC,YACP8xB,WAAY,GACZzrC,eACE,2DAAC,gEAAD,CAAgB8W,SAAS,QAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMm1D,yCAAZ,yBAIN5iC,aACE,2DAACxe,aAAD,CAAc6K,UAAU,aAAa5E,MAAO3b,EAAQhK,YAApD,sBACE,2DAAC,gEAAD,CAAgBw8B,SAAS,MAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMwyB,wCAAZ,0BAlBV,wBAyBF,kEAAK35B,UAAU,OAAf,sBACE,yGACA,4JAEF,kEAAKA,UAAU,wBAAf,sBACGsF,EAAW1E,KAAI,SAAAqqB,GACd,OACE,kEAAKlqB,IAAKkqB,EAAU1wB,KAAMyF,UAAU,aAApC,sBACG,EAAKggG,YAAY/0E,EAAWkvB,SAMvC,2DAAC,yDAAM14B,OAAP,KACE,2DAAC,yDAAD,CACEzhB,UAAU,aACVjE,UAAW,EAAK+X,MAAMpQ,WACtBgiB,UAAQ,cACRjF,QAAS,kBAAM,EAAK+iB,SAAS,CAAE+7D,YAAY,KAJ7C,qCAQA,2DAAC,yDAAD,CACEv/F,UAAU,aACV5D,KAAK,SACLL,UAAWsoB,GAASF,EACpB3C,QAAQ,YACRkE,UAAQ,SALV,qCAcT2C,KAAKi3E,YAAY,CAChBn+E,MAAO,sCACPwD,KACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAMs5F,wCAAZ,2BApHD,2DAAC,kDAAD,yDAAoC5lE,YAApC,cA5Db,yBA4RE,SAAY5P,EAAWlvB,GACrB,MAA4B,WAAxBkvB,EAAUkN,UACL,2DAAC,8DAAD,CAAOlN,UAAWA,EAAWlvB,SAAUA,EAAvC,uBAIP,2DAAC,sEAAD,CACEkvB,UAAWA,EACXs0E,YAAU,EACVrlE,UAAW7R,KAAKvuB,MAAMogC,UACtBC,YAAa9R,KAAKvuB,MAAMqgC,YACxBp+B,SAAUA,EALZ,yBAlSN,mIAA4By6B,6CAAMC,eA6SrBiqE,gBAAkBvxE,oDAC7B,SAAArb,GAAK,kCAAK,CACRikB,YAAY,UAAAjkB,EAAMme,SAASjwB,YAAf,mBAAqB8c,iBAArB,mBAAgC9c,YAAhC,mBAAsCA,YAAtC,eAA4C+1B,aAAc,GACtEmC,WAAW,UAAApmB,EAAMme,SAASjwB,YAAf,mBAAqB5F,YAArB,mBAA2B4F,YAA3B,mBAAiCA,YAAjC,eAAuCylC,aAAc,GAChEtN,aAAa,UAAArmB,EAAMme,SAASjwB,YAAf,mBAAqBub,eAArB,mBAA8Bvb,YAA9B,mBAAoCA,YAApC,eAA0C+R,WAAY,GACnEyP,YAAawF,gEAAsBlV,GACnCskD,eAAgBtkD,EAAMme,SAASa,aAC/BttB,QAASsO,EAAM5R,SAAS8pE,oBAAoBK,OAC5CozB,iBAAkB3rF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBK,OAAO7qE,YAEpE,SAAAH,GAAQ,MAAK,CACXm+F,mBAAoB,SAAAx9F,GAAI,OAAIX,EAASmJ,8DAAwBxI,KAC7DqtB,QAAS,SAAArtB,GAAI,OAAIX,EAAS+Q,yDAAYpQ,QAZXmtB,CAc7BqxE,QAEItlF,aAAeC,kEAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,2D,gKAxUEmf,Y,iGAEO2lE,O,4FA6SAE,gB,qGAgBPxlF,a,ojMC/TA2f,YAAc,yCAEP8lE,UAAb,+HACE,mBAAY7mG,GAAO,8CACjB,mBAAMA,IAcRmlG,YAAS/jG,EAfU,EAyOnBgkG,UAAY,WACV,MAAsC,EAAKprF,MAAMpQ,WAAzCP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,OAAQu1C,EAAtB,EAAsBA,YAET,OAAT/1C,GACkB,iBAAXQ,GACgB,iBAAhBu1C,IAwBX,EAAK+lD,OAAS76F,WAAW,EAAK+6F,eAAeh8F,GAAO,OAtQnC,EAyQnBg8F,eAAiB,SAAAh8F,GAAI,kDAAI,6GACjBO,EAAe,EAAKoQ,MAApBpQ,aAEaA,EAAWP,OAASA,EAHhB,0EAME1B,gDAAWC,IAAX,UAAkBvI,uCAAUwI,KAAKC,UAAUiB,KAA3C,YAAmDM,IANrD,aAMfpB,EANe,QASVC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAXZ,oBAeO,eAF1BS,EAAa3B,EAASC,KAAKA,KAAKiB,YAAY,IAE7BU,QAAgD,WAAtBD,EAAWC,OAfjC,kCAgBWlC,gDAAWC,IAAX,UACvBvI,uCAAUwI,KAAKC,UAAUiB,KADF,YACUM,EADV,YAE1B,CAAErB,UAAW,aAlBE,cAgBXs9F,EAhBW,QAqBDp9F,KAAKA,MACnBo9F,EAAcp9F,KAAKA,KAAK+B,SACxBq7F,EAAcp9F,KAAKA,KAAK+B,QAAQ3I,OAAS,GAvB1B,wBA0BfikG,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,EA3BC,oBA8BPuG,gDAAWC,IACf,wBACA2pB,+DAAiB,CACfu1E,SAAU,EAAK9sF,MAAM+lB,WAAWf,iBAChCD,WAAY,EAAK/kB,MAAM+lB,WAAWhB,cAlCzB,QAsCPgoE,EAAoC,cAAtBn9F,EAAWC,OAE/B,EAAK6/B,SAAS,CACZz8B,OAAQq4F,EAAcp9F,KAAKA,KAAK+B,QAChCL,aACA67F,YAAasB,EACbC,iBAAkBD,EAClBE,iBAAiB,EACjBC,oBAAqBH,IA9CV,mDAiDbruF,QAAQgS,IAAI,uDAAZ,MACA,EAAKgf,SAAS,CAAE+7D,YAAY,IAC5B,EAAK/7D,SAAS,CAAEs9D,kBAAkB,IAClC,EAAKt9D,SAAS,CAAEu9D,iBAAiB,IApDpB,gCAuDf,EAAKv9D,SAAS,CAAE9/B,eAChB27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,EAzDC,gCA4DjB,EAAKsoC,SAAS,CAAE9/B,eAAc,kBAAM,EAAKw7F,eA5DxB,0DAgErB1sF,QAAQgS,IAAI,2BAAZ,MAhEqB,mEAzQN,EA6UnB86E,YAAc,SAAApkE,GACZ,IAAK,EAAKpnB,MAAMpQ,WAAY,OAAO,KAEnC,IAAMsP,EAAU,CACd+N,KAAM,WACJ,EAAKyiB,SAAS,CAAE+7D,YAAY,KAE9Bh7E,MAAO,WACL,EAAKif,SAAS,CAAE+7D,YAAY,MAIhC,OACE,2DAAC,oEAAD,CACEx+E,KAAM,EAAKjN,MAAMyrF,WACjBvsF,QAASA,EACT5W,KAAK,YACL2K,OAAQ,EAAK+M,MAAM/M,OACnB8zB,YAAaA,YACbn3B,WAAY,EAAKoQ,MAAMpQ,WACvBw3B,aAAcA,EACdv6B,SAAU,CAAC,mBAAoB,mBAAoB,sBARrD,wBA1Ve,EAuWnBsgG,4BAA8B,WAC5B,IAAK,EAAKntF,MAAMpQ,WAAY,OAAO,KAEnC,IAAMsP,EAAU,CACd+N,KAAM,WACJ,EAAKyiB,SAAS,CAAEs9D,kBAAkB,KAEpCv8E,MAAO,WACL,EAAKif,SAAS,CAAEs9D,kBAAkB,MAItC,OACE,2DAAC,sFAAD,CAAc//E,KAAM,EAAKjN,MAAMgtF,iBAAkB9tF,QAASA,EAASpJ,QAAQ,oCAA3E,wBApXe,EAwXnBs3F,2BAA6B,WAC3B,IAAK,EAAKptF,MAAMpQ,WAAY,OAAO,KAEnC,IAAMsP,EAAU,CACd+N,KAAM,WACJ,EAAKyiB,SAAS,CAAEu9D,iBAAiB,KAEnCx8E,MAAO,WACL,EAAKif,SAAS,CAAEu9D,iBAAiB,MAIrC,OACE,2DAAC,4DAAD,CAAYhgF,KAAM,EAAKjN,MAAMitF,gBAAiB/tF,QAASA,EAASpJ,QAAQ,2DAAxE,wBArYe,EAyYnBu3F,UAAY,WAEVnhE,OAAOC,SAASiY,KAAhB,+CAA+DjmC,mBADlD,kFAvYb,EAAK6B,MAAQ,CACXpQ,gBAAYxI,EACZqkG,YAAY,EACZx4F,YAAQ7L,EACR4lG,kBAAkB,EAClBC,iBAAiB,EACjBlnE,WAAY,GACZmnE,oBAAoB,EACpBI,iBAAiB,GAXF,EADrB,6HAkBE,6GACuF/4E,KAAKvuB,MAAlFu1B,EADV,EACUA,QAAS+oC,EADnB,EACmBA,eAAgBonC,EADnC,EACmCA,mBAAoBh6F,EADvD,EACuDA,QADvD,EACgE67F,qBAG3B,gBAA7BjpC,EAAet5C,WAA4D,WAA7Bs5C,EAAet5C,WAC/DuQ,EAAQ,aAGkB,gBAAxB+oC,EAAeh8D,MAAkD,WAAxBg8D,EAAeh8D,MAC1DizB,EAAQ,QAGqB,gBAA3B+oC,EAAe76C,SAAwD,WAA3B66C,EAAe76C,SAC7D8R,EAAQ,WAGL7pB,GACHg6F,EAAmB,CAAEjlG,KAAM,YAAaiL,QAASq1B,eAjBvD,gDAlBF,gGAwCE,WAEEwkE,aAAah3E,KAAK42E,QAClB52E,KAAK42E,YAAS/jG,IA3ClB,oBA8CE,WAAS,WACDi/C,EAAa52B,kEAAkB8E,KAAKvuB,MAAM0pB,aAChD,EAOI6E,KAAKvuB,MANPs+D,EADF,EACEA,eACAl+B,EAFF,EAEEA,UACAnC,EAHF,EAGEA,WACA0nE,EAJF,EAIEA,iBACAj6F,EALF,EAKEA,QACA67F,EANF,EAMEA,mBAEE/7F,EAAa,KAEjB,IAAK+7F,EACH,OACE,2DAAC,kDAAD,uBACE,2DAAC,yEAAD,CAAQjlG,KAAK,OAAb,sBACE,gEAAG4D,UAAU,YAAb,4FAQR,IAAM2/F,EAAiD,aAA7BvnC,EAAet5C,UACnC8gF,EAA2C,aAAxBxnC,EAAeh8D,KAClCyjG,EAA6C,aAA3BznC,EAAe76C,QAOvC,OALI/X,IACFF,EAAaE,EAAQF,WAAW1E,KAAI,SAAA2d,GAAC,OAAIwhF,kEAAmBxhF,EAAG2b,EAAWnC,MAC1EzyB,EAAa0R,8CAAE+rB,OAAOz9B,EAAY,aAIjCE,GACAi6F,GACAG,GACAD,GACAE,EAKIJ,GAAoBE,GAAqBC,GAAoBC,EAClE,2DAAC,kDAAD,uBACE,2DAAC,0DAAD,kCAAiBhlE,YAAjB,iBAGF,sHACE,2DAAC,sCAAD,CACE7P,cAAeD,+DAAiBzlB,GAChC+kC,SAAQ,4DAAE,WAAM15B,GAAN,wGAEAvP,EAAU,CACdoE,QAASq1B,YACTv1B,WAAY+lB,+DAAiB1a,GAC7BhL,UAAW,MALP,SAQiBlE,gDAAWwmB,KAAK9uB,uCAAUwI,KAAKC,UAAUiB,KAAMzB,GARhE,QAQAW,EARA,QAWKC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAE/B,EAAKugC,SACH,CACE9/B,WAAY3B,EAASC,KAAKA,KAAKiB,YAAY,GAC3Cs8F,YAAY,EACZx4F,YAAQ7L,EACR2+B,WAAYxO,+DAAiB1a,GAC7BqwF,oBAAoB,EACpBI,iBAAiB,IAEnB,WACE,EAAKlC,eAzBL,gDA8BN1sF,QAAQgS,IAAI,qDAAZ,MA9BM,yDAAF,sDAFV,uBAoCG,YAA6B,IAA1BH,EAA0B,EAA1BA,MAAOF,EAAmB,EAAnBA,aACT,OACE,2DAAC,sCAAD,CAAMnkB,UAAU,iBAAhB,sBACE,2DAAC,yDAAMggB,QAAP,KACE,kEAAKhgB,UAAU,OAAf,sBACE,8FACA,iIAEF,2DAAC,6DAAD,CAAaA,UAAU,mBAAmBwhB,QAAQ,WAAlD,sBACE,2DAAC,4DAAD,CAAY0mB,QAAQ,6BAApB,iCACA,2DAAC,+DAAD,CACExsC,GAAG,6BACHU,KAAK,OACLs+B,UAAQ,EACR3+B,UAAQ,EACRpC,MAAOkhC,YACP8xB,WAAY,GACZzrC,eACE,2DAAC,gEAAD,CAAgB8W,SAAS,QAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMm1D,yCAAZ,yBAIN5iC,aACE,2DAACxe,aAAD,CAAc6K,UAAU,aAAa5E,MAAO3b,EAAQhK,YAApD,sBACE,2DAAC,gEAAD,CAAgBw8B,SAAS,MAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMwyB,wCAAZ,0BAlBV,wBAyBF,kEAAK35B,UAAU,OAAf,sBACE,yGACA,sIAGF,kEAAKA,UAAU,wBAAf,sBACGsF,EAAW1E,KAAI,SAAAqqB,GACd,OACE,kEAAKlqB,IAAKkqB,EAAU1wB,KAAMyF,UAAU,aAApC,sBACG,EAAKggG,YAAY/0E,EAAWkvB,SAOvC,2DAAC,yDAAM14B,OAAP,KACE,2DAAC,yDAAMA,OAAOqD,KAAd,KACE,2DAAC,yDAAD,CACE9kB,UAAU,aACVjE,SAAU,EAAK+X,MAAMktF,mBACrBt7E,UAAQ,eACRjF,QAAS,WACP2nB,4DAAa,EAAKt0B,MAAM+lB,YACxB,EAAK2J,SAAS,CAAE49D,iBAAiB,KANrC,kCAWA,2DAAC,yDAAD,CACEphG,UAAU,aACVjE,SAAU,EAAK+X,MAAMstF,gBACrB17E,UAAQ,YACRjF,QAAS,kBAAM,EAAK0gF,aAJtB,gCASF,2DAAC,yDAAM1/E,OAAOC,MAAd,KACE,2DAAC,yDAAD,CACE1hB,UAAU,aACV5D,KAAK,SACLL,UAAWsoB,GAASF,EACpB3C,QAAQ,YACRkE,UAAQ,SALV,sCAeX2C,KAAKi3E,YAAY,CAChBn+E,MAAO,qBACPwD,KACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAMm6F,wCAAZ,0BAILj5E,KAAK44E,8BACL54E,KAAK64E,8BA/ID,2DAAC,kDAAD,yDAAoCrmE,YAApC,cAtFb,yBA+YE,SAAY5P,EAAWlvB,GACrB,MAA4B,WAAxBkvB,EAAUkN,UACL,2DAAC,8DAAD,CAAOlN,UAAWA,EAAWlvB,SAAUA,EAAvC,uBAIP,2DAAC,sEAAD,CACEkvB,UAAWA,EACXs0E,YAAU,EACVrlE,UAAW7R,KAAKvuB,MAAMogC,UACtBC,YAAa9R,KAAKvuB,MAAMqgC,YACxBp+B,SAAUA,EALZ,yBArZN,sIAA+By6B,6CAAMC,eAgaxB8qE,mBAAqBpyE,oDAChC,SAAArb,GAAK,kCAAK,CACRikB,YAAY,UAAAjkB,EAAMme,SAASjwB,YAAf,mBAAqB8c,iBAArB,mBAAgC9c,YAAhC,mBAAsCA,YAAtC,eAA4C+1B,aAAc,GACtEmC,WAAW,UAAApmB,EAAMme,SAASjwB,YAAf,mBAAqB5F,YAArB,mBAA2B4F,YAA3B,mBAAiCA,YAAjC,eAAuCylC,aAAc,GAChEtN,aAAa,UAAArmB,EAAMme,SAASjwB,YAAf,mBAAqBub,eAArB,mBAA8Bvb,YAA9B,mBAAoCA,YAApC,eAA0C+R,WAAY,GACnEyP,YAAawF,gEAAsBlV,GACnCskD,eAAgBtkD,EAAMme,SAASa,aAC/BttB,QAASsO,EAAM5R,SAAS8pE,oBAAoBM,UAC5CmzB,iBAAkB3rF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBM,UAAU9qE,QACrE6/F,mBAAoBvtF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBI,SAASF,gBAExE,SAAA7qE,GAAQ,MAAK,CACXm+F,mBAAoB,SAAAx9F,GAAI,OAAIX,EAASmJ,8DAAwBxI,KAC7DqtB,QAAS,SAAArtB,GAAI,OAAIX,EAAS+Q,yDAAYpQ,QAbRmtB,CAehCwxE,WAEIzlF,aAAeC,kEAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,2D,gKA5bEmf,Y,uGAEO8lE,U,qGAgaAY,mB,8GAiBPrmF,a,olBC7cOsmF,EAAe,SAAC,GAA+B,IAA7BzgF,EAA6B,EAA7BA,KAAM/N,EAAuB,EAAvBA,QAASpJ,EAAc,EAAdA,QAC5C,OACE,kBAAC,IAAD,CAAOmX,KAAMA,EAAM/N,QAASA,EAA5B,sBACE,kBAAC,IAAD,CACEsJ,MAAO,CACLgF,MAAO,OACPC,OAAQ,QAHZ,sBAME,kBAAC,IAAD,CACEJ,MAAM,UACNwD,KACE,kBAAC,IAAD,CAAS3kB,UAAU,cAAnB,sBACE,kBAAC,IAAD,yBAJN,uBAQA,kBAAC,IAAMggB,QAAP,CAAe4E,YAAY,GACzB,kBAAC,IAAD,CAAQxoB,KAAK,UAAb,sBACE,kBAAC,IAAO/C,KAAR,KAAcuQ,KAGlB,kBAAC,IAAM6X,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CACEjB,QAAS,WACPzN,EAAQuR,SAFZ,kC,4FAxBCi9E,E,ylBCNAp5D,EAAY,e,EAAA,G,EAAA,yBAAG,WAAMt2B,GAAN,yGACpB2vF,EAAc,CAClBb,SAAU9uF,EAAMgnB,iBAChBD,WAAY/mB,EAAM+mB,YAHM,kBAODp3B,IAAWC,IAAIvI,IAAUwI,KAAKC,UAAU4nE,mBAAoBi4B,GAP3D,OAOlB1/F,EAPkB,OAQlBkmC,EAAWlmC,EAAS0oD,QAAQ,uBAAuBxpD,MAAM,aAAa,IAAM,sBAC5Ey2C,EAAW,CAAC31C,EAASC,MACrB21C,EAAO,IAAIC,KAAKF,EAAU,CAAEt7C,KAAM,6BAClCy7C,GAAW7X,OAAO8X,IAAM9X,OAAO8X,IAAM9X,OAAO+X,WAAWC,gBAAgBL,IACvEM,EAAWxiB,SAASC,cAAc,MAC/BpZ,MAAMgE,QAAU,OACzB23B,EAASC,KAAOL,EAChBI,EAASE,aAAa,WAAYlQ,GAElCxS,SAASzN,KAAK2N,YAAYsiB,GAC1BA,EAASG,QAET3iB,SAASzN,KAAKiO,YAAYgiB,GAC1BjY,OAAO8X,IAAIO,gBAAgBR,GArBH,kDAuBxBrlC,QAAQgS,IAAI,qBAAZ,MAvBwB,yD,+KAAH,uD,4FAAZ4jB,E,46LC+BPs5D,aAAe,sDACfC,oBAAsB,CAC1B,sDACA,mDACA,oDACA,yDAGWC,YAAb,mIACE,qBAAY9nG,GAAO,gDACjB,mBAAMA,IASRmlG,YAAS/jG,EAVU,EA+NnBgkG,UAAY,WACV,MAAsC,EAAKprF,MAAMpQ,WAAzCP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,OAAQu1C,EAAtB,EAAsBA,YAET,OAAT/1C,GACkB,iBAAXQ,GACgB,iBAAhBu1C,IAEX,EAAK+lD,OAAS76F,WAAW,EAAK+6F,eAAeh8F,GAAO,OAtOnC,EAyOnBg8F,eAAiB,SAAAh8F,GAAI,kDAAI,2GACjBO,EAAe,EAAKoQ,MAApBpQ,aAEaA,EAAWP,OAASA,EAHhB,0EAME1B,gDAAWC,IAAX,UAAkBvI,uCAAUwI,KAAKC,UAAUiB,KAA3C,YAAmDM,IANrD,aAMfpB,EANe,QASVC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAXZ,oBAeO,eAF1BS,EAAa3B,EAASC,KAAKA,KAAKiB,YAAY,IAE7BU,QAAgD,WAAtBD,EAAWC,OAfjC,kCAgBWlC,gDAAWC,IAAX,UACvBvI,uCAAUwI,KAAKC,UAAUiB,KADF,YACUM,EADV,YAE1B,CAAErB,UAAW,aAlBE,SAgBXs9F,EAhBW,QAqBDp9F,KAAKA,MACnBo9F,EAAcp9F,KAAKA,KAAK+B,SACxBq7F,EAAcp9F,KAAKA,KAAK+B,QAAQ3I,OAAS,GAEzC,EAAKooC,SAAS,CAAEz8B,OAAQq4F,EAAcp9F,KAAKA,KAAK+B,QAASL,eAEzD27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,IAEd,EAAKsoC,SAAS,CAAE9/B,eAChB27F,aAAa,EAAKJ,QAClB,EAAKA,YAAS/jG,GAhCC,wBAmCjB,EAAKsoC,SAAS,CAAE9/B,eAAc,kBAAM,EAAKw7F,eAnCxB,0DAuCrB1sF,QAAQgS,IAAI,2BAAZ,MAvCqB,2DAzON,EAoRnB86E,YAAc,SAAApkE,GACZ,IAAK,EAAKpnB,MAAMpQ,WAAY,OAAO,KAEnC,IAAMsP,EAAU,CACd+N,KAAM,WACJ,EAAKyiB,SAAS,CAAE+7D,YAAY,KAE9Bh7E,MAAO,WACL,EAAKif,SAAS,CAAE+7D,YAAY,MAIhC,OACE,2DAAC,oEAAD,CACEx+E,KAAM,EAAKjN,MAAMyrF,WACjBvsF,QAASA,EACTjM,OAAQ,EAAK+M,MAAM/M,OACnBrD,WAAY,EAAKoQ,MAAMpQ,WACvBw3B,aAAcA,EACdL,YAAa6mE,aACb/gG,SAAU,CAAC,mBAAoB,mBAAoB,yBAPrD,wBA9RF,EAAKmT,MAAQ,CACXpQ,gBAAYxI,EACZqkG,YAAY,EACZx4F,YAAQ7L,GANO,EADrB,+HAaE,6GACwFmtB,KAAKvuB,MAAnFu1B,EADV,EACUA,QAAS+oC,EADnB,EACmBA,eAAgBonC,EADnC,EACmCA,mBAAoBh6F,EADvD,EACuDA,QADvD,EACgE46F,sBAG3B,gBAA7BhoC,EAAet5C,WAA4D,WAA7Bs5C,EAAet5C,WAC/DuQ,EAAQ,aAGkB,gBAAxB+oC,EAAeh8D,MAAkD,WAAxBg8D,EAAeh8D,MAC1DizB,EAAQ,QAGqB,gBAA3B+oC,EAAe76C,SAAwD,WAA3B66C,EAAe76C,SAC7D8R,EAAQ,WAGkB,gBAAxB+oC,EAAer/B,MAAkD,WAAxBq/B,EAAer/B,MAC1D1J,EAAQ,QAGL7pB,GACHg6F,EAAmB,CAAEjlG,KAAM,cAAeiL,QAASk8F,gBArBzD,gDAbF,gGAuCE,WAEErC,aAAah3E,KAAK42E,QAClB52E,KAAK42E,YAAS/jG,IA1ClB,oBA6CE,WAAS,WACDi/C,EAAa52B,kEAAkB8E,KAAKvuB,MAAM0pB,aAChD,EAQI6E,KAAKvuB,MAPPs+D,EADF,EACEA,eACAl+B,EAFF,EAEEA,UACAnC,EAHF,EAGEA,WACA0nE,EAJF,EAIEA,iBACAj6F,EALF,EAKEA,QACAk6F,EANF,EAMEA,yBAIF,IAVA,EAOEU,oBAIA,OACE,2DAAC,kDAAD,uBACE,2DAAC,4DAAD,CAAQhkG,KAAK,OAAb,sBACE,gEAAG4D,UAAU,YAAb,gGAQR,IAAIsF,EAAa,KACXq6F,EAAiD,aAA7BvnC,EAAet5C,UACnC8gF,EAA2C,aAAxBxnC,EAAeh8D,KAClCyjG,EAA6C,aAA3BznC,EAAe76C,QACjCuiF,EAAuC,aAAxB1nC,EAAer/B,KAOpC,OALIvzB,IACFF,EAAaE,EAAQF,WAAW1E,KAAI,SAAA2d,GAAC,OAAIwhF,kEAAmBxhF,EAAG2b,EAAWnC,MAC1EzyB,EAAa0R,8CAAE+rB,OAAOz9B,EAAY,aAIjCE,GACAi6F,GACAG,GACAD,GACAE,GACAC,EAKIL,GACLE,GACAC,GACAC,GACAC,EACA,2DAAC,kDAAD,uBACE,2DAAC,0DAAD,kCAAiB4B,aAAjB,iBAGF,sHACE,2DAAC,sCAAD,CACE12E,cAAeD,+DAAiBzlB,GAChC+kC,SAAQ,4DAAE,WAAM15B,GAAN,wGAEAvP,EAAU,CACdoE,QAASk8F,aACTp8F,WAAY+lB,+DAAiB1a,GAC7BhL,UAAW,MALP,SAQiBlE,gDAAWwmB,KAAK9uB,uCAAUwI,KAAKC,UAAUiB,KAAMzB,GARhE,OAQAW,EARA,OASN29F,EAAyB,CAAEnlG,KAAM,gBAG/BwH,EAASC,KAAKA,MACdD,EAASC,KAAKA,KAAKiB,aACnBlB,EAASC,KAAKA,KAAKiB,YAAY,IAE/B,EAAKugC,SACH,CACE9/B,WAAY3B,EAASC,KAAKA,KAAKiB,YAAY,GAC3Cs8F,YAAY,EACZx4F,YAAQ7L,IAEV,WACE,EAAKgkG,eAvBL,gDA4BN1sF,QAAQgS,IAAI,yDAAZ,MA5BM,yDAAF,sDAFV,uBAkCG,YAA6B,IAA1BH,EAA0B,EAA1BA,MAAOF,EAAmB,EAAnBA,aACT,OACE,2DAAC,sCAAD,CAAMnkB,UAAU,oBAAhB,sBACE,2DAAC,yDAAMggB,QAAP,KACE,kEAAKhgB,UAAU,OAAf,sBACE,8FACA,kHAEF,2DAAC,6DAAD,CAAaA,UAAU,mBAAmBwhB,QAAQ,WAAlD,sBACE,2DAAC,4DAAD,CAAY0mB,QAAQ,6BAApB,iCACA,2DAAC,+DAAD,CACExsC,GAAG,6BACHU,KAAK,OACLs+B,UAAQ,EACR3+B,UAAQ,EACRpC,MAAO+nG,aACP/0C,WAAY,GACZzrC,eACE,2DAAC,gEAAD,CAAgB8W,SAAS,QAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMm1D,yCAAZ,yBAIN5iC,aACE,2DAACxe,aAAD,CAAc6K,UAAU,aAAa5E,MAAO3b,EAAQhK,YAApD,sBACE,2DAAC,gEAAD,CAAgBw8B,SAAS,MAAzB,sBACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAM7wB,KAAMwyB,wCAAZ,0BAlBV,wBAyBF,kEAAK35B,UAAU,OAAf,sBACE,yGACA,mOAMF,kEAAKA,UAAU,wBAAf,sBACGsF,EAAW1E,KAAI,SAAAqqB,GACd,OACE,kEAAKlqB,IAAKkqB,EAAU1wB,KAAMyF,UAAU,aAApC,sBACG,EAAKggG,YAAY/0E,EAAWkvB,SAOvC,2DAAC,yDAAM14B,OAAP,KACE,2DAAC,yDAAD,CACEzhB,UAAU,aACVjE,UAAW,EAAK+X,MAAMpQ,WACtBgiB,UAAQ,cACRjF,QAAS,kBAAM,EAAK+iB,SAAS,CAAE+7D,YAAY,KAJ7C,qCAQA,2DAAC,yDAAD,CACEv/F,UAAU,aACV5D,KAAK,SACLL,UAAWsoB,GAASF,EACpB3C,QAAQ,YACRkE,UAAQ,SALV,qCAcT2C,KAAKi3E,YAAY,CAChBn+E,MAAO,0BACPwD,KACE,2DAAC,yDAAD,uBACE,2DAAC,kDAAD,CAAMxd,KAAM84F,yCAAZ,2BAhID,2DAAC,kDAAD,yDAAoCyB,aAApC,eAxFb,yBA8SE,SAAYz2E,EAAWlvB,GACrB,GAA4B,WAAxBkvB,EAAUkN,UACZ,OAAO,2DAAC,8DAAD,CAAOlN,UAAWA,EAAWlvB,SAAUA,EAAvC,uBAGT,GAAI4lG,oBAAoBpzF,SAAS0c,EAAUkN,WAAY,CACrD,IAAM0pE,EAAkB3/D,6FAAUjX,EAAW5C,KAAKvuB,MAAMogC,UAAW7R,KAAKvuB,MAAMi+B,WAAY1P,KAAKvuB,MAAMsgC,OACrG,OAAO,2DAAC,mEAAD,CAAWiI,WAAYw/D,EAAvB,uBAGT,OACE,2DAAC,sEAAD,CACE52E,UAAWA,EACXs0E,YAAU,EACVrlE,UAAW7R,KAAKvuB,MAAMogC,UACtBC,YAAa9R,KAAKvuB,MAAMqgC,YACxBpC,WAAY1P,KAAKvuB,MAAMi+B,WACvBqC,MAAO/R,KAAKvuB,MAAMsgC,MAClBr+B,SAAUA,EAPZ,yBAzTN,wIAAiCy6B,6CAAMC,eAsU1BqrE,qBAAuB3yE,oDAClC,SAAArb,GAAK,0CAAK,CACRikB,YAAY,UAAAjkB,EAAMme,SAASjwB,YAAf,mBAAqB8c,iBAArB,mBAAgC9c,YAAhC,mBAAsCA,YAAtC,eAA4C+1B,aAAc,GACtEmC,WAAW,UAAApmB,EAAMme,SAASjwB,YAAf,mBAAqB5F,YAArB,mBAA2B4F,YAA3B,mBAAiCA,YAAjC,eAAuCylC,aAAc,GAChEtN,aAAa,UAAArmB,EAAMme,SAASjwB,YAAf,mBAAqBub,eAArB,mBAA8Bvb,YAA9B,mBAAoCA,YAApC,eAA0C+R,WAAY,GACnEqmB,OAAO,UAAAtmB,EAAMme,SAASjwB,YAAf,mBAAqB+2B,YAArB,mBAA2B/2B,YAA3B,mBAAiCA,YAAjC,eAAuCo4B,QAAS,GACvD5W,YAAawF,gEAAsBlV,GACnCskD,eAAgBtkD,EAAMme,SAASa,aAC/BttB,QAASsO,EAAM5R,SAAS8pE,oBAAoBG,YAC5CszB,iBAAkB3rF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBG,YAAY3qE,QACvE4+F,oBAAqBtsF,EAAM5R,SAAS6S,MAAMi3D,oBAAoBC,SAASC,gBAEzE,SAAA7qE,GAAQ,MAAK,CACXm+F,mBAAoB,SAAAx9F,GAAI,OAAIX,EAASmJ,8DAAwBxI,KAC7D09F,yBAA0B,SAAA19F,GAAI,OAAIX,EAASuJ,8DAA8B5I,KACzEqtB,QAAS,SAAArtB,GAAI,OAAIX,EAAS+Q,yDAAYpQ,QAfNmtB,CAiBlCyyE,aAEI1mF,aAAeC,kEAAW,iBAAO,CACrCC,QAAS,CACPC,MAAO,OACPC,gBAAiB,UACjBC,cAAe,QACfrb,SAAU,OACVsb,WAAY,OACZC,WAAY,gBAPKN,CASjBO,2D,gKA1WEgmF,a,4GACAC,oB,mHAOOC,Y,2GAsUAE,qB,oHAmBP5mF,a,mnGC9XOyjD,kBAAb,gSACE,WACE,OACE,sHACE,2DAAC,sDAAD,CAAQx9C,MAAM,oCACd,2DAAC,wDAAD,KACE,2DAAC,wDAAD,KACE,2DAAC,wDAAMnB,QAAP,KACE,2DAAC,yFAAD,YARd,8IAAuCwW,6CAAMC,e,+JAAhCkoC,kB,+nICQP3qC,QAAU,CACd,CAAEn4B,MAAO,UACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,QACT,CAAEA,MAAO,QACT,CAAEA,MAAO,YACT,CAAEA,MAAO,aACT,CAAEA,MAAO,KAGLguF,gBAAkB,SAAC,GAAa,IAAXtvF,EAAW,EAAXA,KACzB,OAAIA,GAAQA,EAAKa,OAAS,GAEtB,2DAAC,iDAAD,CAAc2qB,UAAU,SAAS5E,MAAO,yFAAO5mB,GAA/C,sBACE,mEAAMyF,UAAU,wBAAhB,sBAAyCzF,IAIxC,mEAAMyF,UAAU,eAAhB,sBAAgCzF,IAGnCuvF,YAAc,SAACtuC,EAAK16C,EAAOihG,GAAb,OAClB,2DAAC,iDAAMrqC,IAAP,CAAWqyB,OAAK,EAAChpF,IAAG,UAAKy6C,EAAI3Q,WAAT,YAAuB/pC,GAASd,UAAU,iBAC5D,2DAAC,iDAAM43D,KAAP,KACE,mEAAM53D,UAAU,qBAAhB,sBAAsCw7C,EAAIwmD,YAE5C,2DAAC,iDAAMpqC,KAAP,KACE,2DAACiyB,gBAAD,CAAiBtvF,KAAMihD,EAAI1Q,aAA3B,wBAEF,2DAAC,iDAAM8sB,KAAP,KACE,mEAAM53D,UAAU,qBAAhB,sBAAsCw7C,EAAIymD,iBAE5C,2DAAC,iDAAMrqC,KAAP,KACE,mEAAM53D,UAAU,qBAAhB,sBAAsCw7C,EAAI0mD,eAE5C,2DAAC,iDAAMtqC,KAAP,KACE,mEAAM53D,UAAU,qBAAhB,sBAAsCw7C,EAAI2mD,eAE5C,2DAAC,iDAAMvqC,KAAP,KACE,mEAAM53D,UAAU,qBAAhB,sBAAsCw7C,EAAI4mD,oBAE5C,2DAAC,iDAAMxqC,KAAP,KACE,mEAAM53D,UAAU,qBAAhB,sBAAsCw7C,EAAI6mD,qBAE5C,2DAAC,iDAAMzqC,KAAP,KACE,mEAAM53D,UAAU,kCAAhB,sBACE,2DAAC,iDAAD,CAAc+lB,UAAU,MAAM5E,MAAM,kBAApC,sBACE,2DAAC,yDAAD,CAASV,QAAS,kBAAMshF,EAAuBvmD,IAA/C,sBACE,2DAAC,kDAAD,CAAMr0C,KAAMm7F,wCAAZ,6BAQNnY,cAAgB,SAAC,GAA+E,IAA7ErzE,EAA6E,EAA7EA,UAAWs1B,EAAkE,EAAlEA,SAAUijD,EAAwD,EAAxDA,cAAejF,EAAyC,EAAzCA,WAAY2X,EAA6B,EAA7BA,uBACvE,OAAIjrF,EAEA,2DAAC,iDAAD,uBACE,2DAAC,kEAAD,yBAIkB,IAApBs1B,EAAShxC,OACJ,2DAAC,iDAAD,uBAASi0F,GAEX,2DAAC,iDAAD,YAAWjF,EAAX,wBAAwBh+C,EAASxrC,KAAI,SAAC46C,EAAK16C,GAAN,OAAgBgpF,YAAYtuC,EAAK16C,EAAOihG,QAGhFQ,uB,sIACJ,gCAAYzoG,GAAO,2DACjB,mBAAMA,IAwCRo9D,WAAa,SAACz9C,EAASD,GAAV,OAAoB,WAC/B,EAAKgqB,SAAS,CAAEyzB,aAAc,CAAEx9C,UAASD,aAxCzC,EAAK1F,MAAQ,CACXmjD,aAAc,CAAEx9C,QAAS,eAAgBD,MAAO,QAChDgpF,0BAA0B,EAC1BC,mBAAoB,MALL,E,2EASnB,WACEp6E,KAAKvuB,MAAM4oG,gB,oBAGb,WAAS,WACP,EAAoCr6E,KAAKvuB,MAAjCiiG,EAAR,EAAQA,aAAcjlF,EAAtB,EAAsBA,UACtB,EAAuEuR,KAAKvU,MAApEmjD,EAAR,EAAQA,aAAcurC,EAAtB,EAAsBA,yBAA0BC,EAAhD,EAAgDA,mBAC1CrY,EAAa,CAAEp2D,gBAASijC,eAAcC,WAAY7uC,KAAK6uC,YACvDyrC,EAA4B,CAChC5hF,KAAM,SAAC6hF,GACL,EAAKp/D,SAAS,CAAEg/D,0BAA0B,EAAMC,mBAAoBG,KAEtEr+E,MAAO,WACL,EAAKif,SAAS,CAAEg/D,0BAA0B,EAAOC,mBAAoB,SAIzE,OACE,sHACE,2DAACtY,cAAD,CACErzE,UAAWA,EACXs1B,SAAU2vD,EACV3R,WAAYA,EACZ2X,uBAAwBY,EAA0B5hF,KAClDsuE,cAAc,4BALhB,uBAQA,2DAAC,wEAAD,CAAoB/qE,aAAcq+E,EAA2B5hF,KAAMyhF,EAA0BC,mBAAoBA,EAAjH,0B,mJArC6BjsE,6CAAMC,eA+C9BosE,gCAAkC1zE,oDAC7C,SAAArb,GAAK,MAAK,CACRgD,UAAWu1B,wDAAgBv4B,GAC3BioF,aAAc5vD,wDAAgBr4B,OAEhC,SAAAzS,GAAQ,MAAK,CACXqhG,YAAa,kBAAMrhG,EAASkqC,4DANepc,CAQ7CozE,wB,gKA9HIvuE,Q,kIAWA61D,gB,0IAWAC,Y,sIAmCAK,c,wIAcAoY,uB,iJA+COM,gC,irBChHAC,EAAqB,SAAC,GAA+C,IAA7Cx+E,EAA6C,EAA7CA,aAAcvD,EAA+B,EAA/BA,KAAM0hF,EAAyB,EAAzBA,mBACvD,OACE,oCACE,kBAAC,IAAD,CAAO1hF,KAAMA,EAAM/N,QAASsR,EAA5B,sBACE,kBAACy+E,EAAD,CAAwBllB,WAAYv5D,EAAaC,MAAOk+E,mBAAoBA,EAA5E,0BAMFO,EAAgB,SAAC,GASf,IAPJjH,EAOI,EAPJA,aACAlvD,EAMI,EANJA,iBACAo2D,EAKI,EALJA,oBACAC,EAII,EAJJA,wBACAT,EAGI,EAHJA,mBACA5kB,EAEI,EAFJA,WACAslB,EACI,EADJA,gBAEIv8D,EAAUC,mBACV7b,EAAgB,CACpBqgB,UAAWo3D,EAAmBp3D,WAAa,GAC3CR,WAAY43D,EAAmB53D,YAAc,GAC7CG,OAAQy3D,EAAmBR,gBAAkB,GAC7CmB,KAAMX,EAAmBP,cAAgB,GACzC9lG,KAAMqmG,EAAmBN,cAAgB,GACzC72D,SAAUm3D,EAAmBJ,oBAAsB,IAuB/CgB,GAAkBtH,GAAgB,IAAIn7F,KAAI,SAAC68B,GAC/C,MAAO,CACL5hC,MAAO4hC,EAAQqN,aACfnxC,MAAO8jC,EAAQoN,WACf9uC,SAAU0hC,EAAQ4kE,oBAAsB,MAItCiB,GAA2Bz2D,GAAoB,IAAIjsC,KAAI,SAAC2iG,GAC5D,MAAO,CACL1nG,MAAO,GAAF,OAAK0nG,EAAWvB,UAAhB,aAA8BuB,EAAWC,WAAzC,KACL7pG,MAAO4pG,EAAWl4D,cAQtB,OAJAxwC,qBAAU,WACRooG,MACC,IAGD,kBAAC,IAAD,CACE3mF,MAAO,CACLgF,MAAO,QACPma,UAAW,QACX/W,UAAW,SAJf,sBAOE,kBAAC,IAAD,CACEC,KACE,kBAAC,IAAD,uBACE,0BAAMxkB,EAAGwnF,KAAT,wBAGJxmE,MAAM,kBACN5O,KAAK,iDACLy0B,UAAWJ,EARb,uBAUA,kBAAC,IAAD,CACE5b,cAAeA,EACfvxB,SA3DmB,SAACkX,GACxB,IAAM6qB,EAAS,GACf,GAAI7qB,EAAOk6B,WAAY,CACrB,IAAM44D,EAAkB1H,EAAazgG,MAAK,SAACmiC,GAAD,OAAaA,EAAQoN,aAAel6B,EAAOk6B,cACrF,GAAI44D,EAAiB,CACnB,IAAMC,EAAYD,EAAgBpB,oBAAsB,EAClD9D,EAAWkF,EAAgBrB,mBAAqB,EAEjDzxF,EAAO26B,SAED36B,EAAO26B,SAAW,GAAKxjB,KAAK67E,IAAIhzF,EAAO26B,UAAYizD,EAC5D/iE,EAAO8P,SAAP,wBAAmCizD,EAAnC,gDACS5tF,EAAO26B,SAAW,GAAK36B,EAAO26B,SAAWo4D,IAClDloE,EAAO8P,SAAP,wBAAmCo4D,EAAnC,wBAJAloE,EAAO8P,SAAW,gDAQxB,OAAO9P,GA2CH6O,SAAU,SAAC15B,GACT,IAAMo7B,GAAuB02D,EAAmBp3D,UAChD63D,EAAwBn3D,EAAqBp7B,GAAQykB,MAAK,WACxD+tE,IACAtlB,QAGJtzC,SAAU3D,EAVZ,uBAYG,WACC,OACE,oCACE,kBAAC,IAAM5mB,QAAP,KACE,kBAAC,IAAD,CAAMhgB,UAAU,sBAAhB,sBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQiiC,GAAI,GAAZ,sBACE,kBAAC,IAAD,CACE7lC,KAAK,OACL7B,KAAK,YACLsB,MAAM,SACNrC,QAAS8pG,EACT3pG,MAAOqxB,EAAcqgB,UACrBzxC,UAAQ,EANV,yBAUJ,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQqoC,GAAI,GAAZ,sBACE,kBAAC,IAAD,CACE7lC,KAAK,OACL7B,KAAK,aACLsB,MAAM,UACNrC,QAAS6pG,EACT1pG,MAAOqxB,EAAc6f,WACrB9uC,UAAQ,EACRnC,UAAQ,EAPV,yBAWJ,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQqoC,GAAG,IAAX,sBACE,kBAAC,IAAD,CACE7lC,KAAK,OACL7B,KAAK,OACLsB,MAAM,OACNlC,MAAOqxB,EAAco4E,KACrBrnG,UAAQ,EALV,wBAQF,kBAAC,IAAD,CAAQkmC,GAAG,IAAX,sBACE,kBAAC,IAAD,CACE7lC,KAAK,OACL7B,KAAK,OACLsB,MAAM,OACNlC,MAAOqxB,EAAc5uB,KACrBL,UAAQ,EACRnC,UAAQ,EANV,yBAUJ,kBAAC,IAAD,uBACE,kBAAC,IAAD,CAAQqoC,GAAG,IAAX,sBACE,kBAAC,IAAD,CACE7lC,KAAK,OACL7B,KAAK,SACLsB,MAAM,SACNlC,MAAOqxB,EAAcggB,OACrBjvC,UAAQ,EALV,wBAQF,kBAAC,IAAD,CAAQkmC,GAAG,IAAX,sBACE,kBAAC,IAAD,CACE7lC,KAAK,OACL7B,KAAK,WACLsB,MAAM,WACNlC,MAAOqxB,EAAcsgB,SACrB1xC,UAAQ,EALV,2BAWR,kBAAC,IAAM6nB,OAAP,KACE,kBAAC,IAAMA,OAAOC,MAAd,KACE,kBAAC,IAAD,CAAqBF,QAAQ,YAAYyC,cAAY,EAArD,wC,EApKZ++E,E,gCAiLC,I,IAAMD,EAAyB5zE,aACpC,SAAArb,GAAK,MAAK,CACRioF,aAAc5vD,YAAgBr4B,GAC9B+4B,iBAAkBD,YAAwB94B,OAE5C,SAAAzS,GAAQ,MAAK,CACX4hG,oBAAqB,kBAAM5hG,EAASsqC,gBACpCu3D,wBAAyB,SAACn3D,EAAqB3qC,GAAtB,OAAkCC,EAASyqC,YAA6BC,EAAqB3qC,KACtH+hG,gBAAiB,kBAAM9hG,EAASkqC,mBAREpc,CAUpC6zE,I,6FArMWF,E,0HAUPE,E,qHAiLOD,E,0jDChMAnkC,EAAY,WACvB,QAAoE7kE,mBAAS,MAA7E,GAAO6pG,EAAP,KAAmCC,EAAnC,KACA,IAAgE9pG,mBAAS,IAAzE,GAAO+pG,EAAP,KAAiCC,EAAjC,KACA,IAAgFhqG,oBAAS,GAAzF,GAAOiqG,EAAP,KAAyCC,EAAzC,KACMC,GAAyBN,aAAA,EAAAA,EAA4BrpG,OAAQ,iBAEnE,IAA4DR,mBAAS,MAArE,GAAOoqG,EAAP,KAA+BC,EAA/B,KACA,IAAwDrqG,mBAAS,IAAjE,GAAOsqG,EAAP,KAA6BC,EAA7B,KACA,IAA4EvqG,oBAAS,GAArF,GAAOwqG,EAAP,KAAuCC,EAAvC,KACMC,GAAqBN,aAAA,EAAAA,EAAwB5pG,OAAQ,iBAkC3D,OACE,oCACE,kBAAC,IAAD,CAAQ4mB,MAAM,kCAAd,uBACA,kBAAC,IAAD,uBACE,kBAAC,IAAD,uBACE,kBAAC,IAAMrB,OAAP,KACE,0BAAM9f,UAAU,kBAAhB,6gBAUF,kBAAC,IAAMggB,QAAP,KACE,yBAAKhgB,UAAU,oBAAf,sBACE,yBAAKA,UAAU,SAAf,sBACE,wBAAIA,UAAU,eAAd,qDACA,uBAAGA,UAAU,cAAb,6HAEsB,+CAAM,+CAF5B,sXAUA,kBAAC,IAAD,CAAQrG,MAAOmqG,EAAf,sBACE,kBAAC,IAAO/iE,KAAR,CAAapnC,MAAM,IACjB,yBAAKqG,UAAU,oBAAf,sBACE,2BAAOkoC,QAAQ,sBAAsBloC,UAAU,cAA/C,oCAEE,2BACE5D,KAAK,OACLV,GAAG,sBACHnB,KAAK,MACL4tC,OAAO,OACPnsC,SAAU,SAACupB,GACTs+E,EAA8Bt+E,EAAMtI,OAAOjF,MAAM,IACjDisF,GAAqC1+E,EAAMtI,OAAOjF,MAAM,KAP5D,wBAWF,kBAAC,IAAD,CAAkB+N,UAAU,SAAS5E,MAAO+iF,EAA5C,sBACE,0BAAMlkG,UAAU,YAAhB,sBAA6BkkG,IAE/B,kBAAC,IAAD,CAAQlkG,UAAU,kBAAkBjE,SAAUioG,EAAkCvjF,QA/EnE,WAC/B,GAAKmjF,EAAL,CAKAG,EAA4B,WAC5B,IAAM/hG,EAAO,IAAIsmC,SACjBtmC,EAAKumC,OAAO,MAAOq7D,GAEnBniG,IAAWwmB,KAAK9uB,IAAUwI,KAAKC,UAAU8nE,4BAA6B1nE,GACnEozB,MAAK,kBAAM2uE,EAA4B,OACvCv7D,OAAM,kBAAMu7D,EAA4B,YAVzCA,EAA4B,UA6EZ,uDAKJ,kBAAC,IAAOhjE,KAAR,CAAapnC,MAAM,WACjB,yBAAKqG,UAAU,oBAAf,sBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,+CAIN,kBAAC,IAAO+gC,KAAR,CAAapnC,MAAM,SACjB,yBAAKqG,UAAU,0BAAf,sBACE,kBAAC,IAAD,CAAQ5D,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,sDAEF,kBAAC,IAAD,CAAQonB,QAAS,kBAAMsjF,EAA4B,KAAnD,kCAKR,yBAAK/jG,UAAU,SAAf,sBACE,wBAAIA,UAAU,eAAd,8CACA,uBAAGA,UAAU,cAAb,oGACkF,+CAAM,+CADxF,sRAMA,kBAAC,IAAD,CAAQA,UAAU,wBAAwBygB,QAAS,kBAAM2nB,YAAa,sBAAtE,qDAIA,kBAAC,IAAD,CAAQzuC,MAAO0qG,EAAf,sBACE,kBAAC,IAAOtjE,KAAR,CAAapnC,MAAM,IACjB,yBAAKqG,UAAU,oBAAf,sBACE,2BAAOkoC,QAAQ,kBAAkBloC,UAAU,cAA3C,oCAEE,2BACE5D,KAAK,OACLV,GAAG,kBACHnB,KAAK,MACL4tC,OAAO,OACPnsC,SAAU,SAACupB,GACT6+E,EAA0B7+E,EAAMtI,OAAOjF,MAAM,IAC7CwsF,GAAmCj/E,EAAMtI,OAAOjF,MAAM,KAP1D,wBAWF,kBAAC,IAAD,CAAkB+N,UAAU,SAAS5E,MAAOsjF,EAA5C,sBACE,0BAAMzkG,UAAU,YAAhB,sBAA6BykG,IAE/B,kBAAC,IAAD,CAAQzkG,UAAU,kBAAkBjE,SAAUwoG,EAAgC9jF,QArHrE,WAC3B,GAAK0jF,EAAL,CAKAG,EAAwB,WACxB,IAAMtiG,EAAO,IAAIsmC,SACjBtmC,EAAKumC,OAAO,MAAO47D,GAEnB1iG,IAAWwmB,KAAK9uB,IAAUwI,KAAKC,UAAU+nE,wBAAyB3nE,GAC/DozB,MAAK,kBAAMkvE,EAAwB,OACnC97D,OAAM,kBAAM87D,EAAwB,YAVrCA,EAAwB,UAmHR,mDAKJ,kBAAC,IAAOvjE,KAAR,CAAapnC,MAAM,WACjB,yBAAKqG,UAAU,oBAAf,sBACE,kBAAC,IAAD,uBACE,kBAAC,IAAD,+CAIN,kBAAC,IAAO+gC,KAAR,CAAapnC,MAAM,SACjB,yBAAKqG,UAAU,0BAAf,sBACE,kBAAC,IAAD,CAAQ5D,KAAK,OAAb,sBACE,kBAAC,IAAO/C,KAAR,sDAEF,kBAAC,IAAD,CAAQonB,QAAS,kBAAM6jF,EAAwB,KAA/C,wC,EAlKT1lC,E,qiBAAAA,E,qbCZA8lC,EAAe,CAC1BzpF,S,4FADWypF,E,upBCGAzpF,EAAK,EAAH,GACV6jB,EACA6lE,EACA57E,EACA67E,I,4FAJQ3pF,E,q8DCWP4pF,EAAYC,YAAajlE,KAEzBklE,EACJ,kBAAC,IAAD,CAAcC,OAAQ7rG,IAAU8vE,KAAMtoE,SAAU+jG,IAAavrG,IAAU8vE,OACrE,kBAAC,IAAD,CAAUppC,MAAOA,KACf,kBAAC,IAAD,CAAar+B,QAAS,KAAMqjG,UAAWA,GACrC,kBAAC,IAAD,CAAeI,SAAyD,UACtE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOlyD,UAAWmyD,IAAK/9F,KAAK,WAQxCg+F,iBAAOJ,EAAUtvE,SAASw3B,eAAe,U,6FAhBnC43C,E,6CAEAE,E,uXClBN,IAAInkG,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,WAAY,IACZ,cAAe,IACf,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASwkG,EAAeC,GACvB,IAAI3pG,EAAK4pG,EAAsBD,GAC/B,OAAOE,EAAoB7pG,GAE5B,SAAS4pG,EAAsBD,GAC9B,IAAIE,EAAoBhqG,EAAEqF,EAAKykG,GAAM,CACpC,IAAIppG,EAAI,IAAIgiD,MAAM,uBAAyBonD,EAAM,KAEjD,MADAppG,EAAEupG,KAAO,mBACHvpG,EAEP,OAAO2E,EAAIykG,GAEZD,EAAehxF,KAAO,WACrB,OAAOD,OAAOC,KAAKxT,IAEpBwkG,EAAejhG,QAAUmhG,EACzBt7B,EAAOC,QAAUm7B,EACjBA,EAAe1pG,GAAK,M,gpGCtRZW,EACAopG,E,iFADAppG,EAAQmW,QAAQnW,MAAMmH,KAAKgP,SAC3BizF,EAAU,oBAEhBjzF,QAAQnW,MAAQ,SAACuN,GACf,GAAuB,iBAAZA,IAAqD,IAA7BA,EAAQypB,OAAOoyE,GAAlD,CADoC,2BAATnhG,EAAS,iCAATA,EAAS,kBAKpCjI,EAAK,WAAL,GAAMuN,GAAN,OAAkBtF,O,cCrBtB0lE,EAAOC,QAAU,iD,cCAjBD,EAAOC,QAAU,iD","file":"js/app.871e453c18d667104fe5.js","sourcesContent":["import defaultConstants from './constants';\n\nexport const CONSTANTS = defaultConstants;\n","import React, { forwardRef, useMemo, useEffect, useState } from 'react';\n\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\n\nimport { useField, useFormikContext } from 'formik';\n\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport check from './field-level-validations';\n\nexport const Text = forwardRef(function Text(\n  { options, validate, defaultValue = '', value, required, reactToChange, ...props },\n  ref\n) {\n  const [shouldValidate, setShouldValidate] = useState(false);\n  const validation = useMemo(() => {\n    if (!shouldValidate) {\n      return null;\n    }\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required, shouldValidate]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  const formikCtx = useFormikContext();\n\n  useEffect(() => {\n    // used to allow the \"\" (empty string) value\n    if (value === undefined || value === null) {\n      helpers.setValue(defaultValue);\n    } else {\n      helpers.setValue(value);\n    }\n    helpers.setTouched(false);\n    setShouldValidate(true);\n  }, [value]);\n\n  useEffect(() => {\n    /**\n     * accepts a reaction function, ideally called when setValue is called.\n     * It should be used to update other known field names in reaction to this one changing.\n     */\n    reactToChange && reactToChange(value, formikCtx);\n  }, [value]);\n\n  useEffect(() => {\n    /** Unmount cleanup ? */\n    return () => {\n      if (!props.multiline || !props.isPopup) {\n        helpers.setValue(undefined);\n        // helpers.setTouched(false);\n        helpers.setError(undefined);\n      }\n    };\n  }, []);\n\n  if (field.value === undefined) {\n    return <ParameterLoader>Mounting Field</ParameterLoader>;\n  }\n\n  if (options && options.length) {\n    const selected = options.find(o => o.value === field.value) ?? null;\n    const description = options.find(o => o.value === field.value)?.description || undefined;\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        value={selected}\n        getOptionLabel={option => option.label || field.value}\n        getOptionDisabled={option => option.disabled}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n\n          /**\n            only on Select option changes for now. Can be modified for generic text,\n            but should be done when needed.\n            onChange from '...field' can be decorated.\n           */\n          reactToChange && reactToChange(option.value, formikCtx);\n        }}\n        disabled={props.disabled}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              description={description}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n\nexport function Email(props) {\n  const validations = useMemo(() => check.merge(check.email, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"email\" />;\n}\n\nexport function PhoneNumber(props) {\n  const validations = useMemo(() => check.merge(check.phone, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} />;\n}\n/* TODO: fix Integer required validation checks. Investigate how Yup returns the validateSync for this particular instance */\nexport function Integer({ validate, ...props }) {\n  const validations = useMemo(() => check.merge(props.required ?? check.required_not_null), [\n    props.required,\n    validate\n  ]); // validate is given by the parameter normalizer.\n  // it should be a list of check keys. TODO: map to validation functions to merge\n\n  return <Text {...props} validate={validations} type=\"number\" />;\n}\n\nexport function Password(props) {\n  return <Text {...props} type=\"password\" />;\n}\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: true },\n  { label: 'False', value: false }\n];\n\nexport const BooleanSelect = forwardRef(function Boolean({ options, ...props }, ref) {\n  return <Text type=\"text\" value defaultValue {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nexport const Date = forwardRef(function Date(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value ? moment(field.value).format('MM/DD/YYYY') : moment().utc();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date?.format('MM/DD/YYYY') || ' ')}\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Time = forwardRef(function Time(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value\n    ? moment(field.value, 'HH:mm')\n    : moment()\n        .utc()\n        .format('HH:mm');\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardTimePicker\n          ampm={false}\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"HH:mm\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => {\n            helpers.setValue(date?.format('HH:mm') || ' ');\n          }}\n          mask=\"__:__\"\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Select = forwardRef(function Select(\n  { options, validate, defaultValue, value, required, isNamespace, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue || '');\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  /**\n   * This should be moved to it's own thing.\n   * For now, it satisfies... :(((\n   */\n  if (options && options.length) {\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        getOptionSelected={option => option.value === field.value}\n        getOptionLabel={option => option.label || value || ''}\n        value={value}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              desription={undefined}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n","export const LOAD_ALL_ACCOUNTS = 'LOAD_ALL_ACCOUNTS';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const LOAD_ALL_LICENSES = 'LOAD_ALL_LICENSES';\nexport const LOAD_TOP_SQL_STATEMENTS = 'LOAD_TOP_SQL_STATEMENTS';\nexport const LICENSE_FULL_REPORT = 'LICENSE_FULL_REPORT';\nexport const PROVIDE_SERVERS_USAGE = 'PROVIDE_SERVERS_USAGE';\nexport const LOAD_STORAGE_POINTS = 'LOAD_STORAGE_POINTS';\nexport const SET_STORAGE_NS = 'SET_STORAGE_NS';\nexport const LOAD_STORAGE_DETAILS = 'LOAD_STORAGE_DETAILS';\nexport const LOAD_OBJECT_DETAILS = 'LOAD_OBJECT_DETAILS';\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT';\nexport const LOAD_SESSIONS = 'LOAD_SESSIONS';\nexport const PROVIDE_DB_LAST_BACKUP = 'PROVIDE_DB_LAST_BACKUP';\nexport const PROVIDE_DB_STATUS = 'PROVIDE_DB_STATUS';\nexport const UPDATE_DB_STATUS = 'UPDATE_DB_STATUS';\nexport const LOAD_PROTOCOLS = 'LOAD_PROTOCOLS';\nexport const LOAD_COLLECTION_PROCESS = 'LOAD_COLLECTION_PROCESS';\nexport const EXECUTE_COLLECTION_PROCESS = 'EXECUTE_COLLECTION_PROCESS';\nexport const LOAD_MSSQL_DISK_IO = 'LOAD_MSSQL_DISK_IO';\nexport const LOAD_MSSQL_STORAGE_USED = 'LOAD_MSSQL_STORAGE_USED';\nexport const LOAD_MSSQL_FILE_STORAGE = 'LOAD_MSSQL_FILE_STORAGE';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { mdiCheckDecagram, mdiAlertDecagram } from '@mdi/js';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { node, oneOf, bool } from 'prop-types';\n\nimport './Result.local.scss';\n\nconst icons_map = {\n  success: mdiCheckDecagram,\n  fail: mdiAlertDecagram\n};\n\nexport const Result = ({ children, type }) => {\n  return (\n    <div\n      className={classnames('result-display', {\n        [type]: type\n      })}\n    >\n      <div className=\"result-icon\">\n        <SvgIcon fontSize=\"inherit\">\n          <path d={icons_map[type] || mdiAlertDecagram} />\n        </SvgIcon>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  type: oneOf(['success', 'fail']),\n  children: node\n};\n\nexport const ResultText = ({ children, compact }) => (\n  <h2 className={classnames('result-text', { compact })}>{children}</h2>\n);\n\nResultText.propTypes = {\n  compact: bool,\n  children: node\n};\n\nexport const ResultMessages = ({ messages = [] }) => (\n  <div className=\"result-messages\">\n    {messages.map((msg, index) => (\n      <div className=\"message-entry\" key={index}>\n        <p>{msg?.text?.split?.('\\n')?.[0]}</p>\n      </div>\n    ))}\n  </div>\n);\n\nResultText.propTypes = {\n  children: node\n};\n\nResult.Text = ResultText;\nResult.Messages = ResultMessages;\n","import moment from 'moment';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  fetchInvocation,\n  fetchInvocationOutput,\n  invocationOutputPoller,\n  parseInvocationResult,\n  postInvocation\n} from '../../../shared/api/invocation';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport function loadAllAccountsThunk(payload) {\n  return async (dispatch, getState) => {\n    dispatch(creators.loading(LOAD_ALL_ACCOUNTS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n        page_size: 2147483645\n      });\n\n      response.data.protocols = getState().explorer.protocols;\n\n      dispatch(creators.success(LOAD_ALL_ACCOUNTS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_ACCOUNTS, error));\n      return;\n    }\n\n    if (payload?.from === 'dashboard') {\n      dispatch(provideServersUsageThunk());\n    } else {\n      dispatch(provideDBLastBackupThunks());\n      dispatch(provideDBStatusThunks());\n    }\n  };\n}\n\nexport function loadProtocolsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_PROTOCOLS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n      dispatch(creators.success(LOAD_PROTOCOLS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_PROTOCOLS, error));\n    }\n  };\n}\n\nexport function changeStateThunk(newState) {\n  return dispatch => {\n    dispatch(creators.action(CHANGE_STATE, newState));\n\n    return 'done';\n  };\n}\n\nexport function loadAllLicensesThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_LICENSES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n      dispatch(creators.success(LOAD_ALL_LICENSES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_LICENSES, error));\n    }\n  };\n}\n\nexport function loadTopSQLStatementsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, null));\n    dispatch(creators.loading(LOAD_TOP_SQL_STATEMENTS));\n\n    try {\n      const creationResult = await postInvocation(payload);\n\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const result = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, result));\n      } else {\n        dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, error));\n    }\n  };\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n\nexport function getLicenseReportThunk(fullPath) {\n  return async dispatch => {\n    dispatch(creators.loading(LICENSE_FULL_REPORT));\n    try {\n      const response = await RestClient.get('license_data', { dbconn: fullPath });\n      if (!Array.isArray(response.data)) {\n        response.data = [];\n      }\n      dispatch(creators.success(LICENSE_FULL_REPORT, { reportData: response.data }));\n    } catch (error) {\n      dispatch(creators.fail(LICENSE_FULL_REPORT, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.SESSIONS(filters.fullPath), {\n        page_size: filters.page_size\n      });\n      dispatch(creators.success(LOAD_SESSIONS, { data: response.data, sort: filters.sort }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    const { fullPath, protocol } = filters;\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: SystemExplorerFeatureUtil.getSessionsEndpoint(protocol),\n      timestamp: null\n    };\n\n    try {\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const resultTxt = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        const statementsJson = (resultTxt || '').split('\\n')[1];\n        const sessionsData = statementsJson ? JSON.parse(statementsJson) : [];\n        dispatch(creators.success(LOAD_SESSIONS, { data: sessionsData, sort: filters.sort }));\n      } else {\n        dispatch(creators.fail(LOAD_SESSIONS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n  };\n}\n\nexport function sessionsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadSessionsByProcess(protocol)) {\n    return loadSessionsByProcessThunk(filters);\n  }\n  return loadSessionsThunk(filters);\n}\n\nexport function enableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n  };\n}\n\nexport function disableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.fail(LOAD_SESSIONS));\n  };\n}\n\nexport function loadStorageDetailsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_DETAILS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_DF(filters.fullPath));\n      const data =\n        response.data && response.data.length\n          ? { data: response.data, key: filters.fullPath }\n          : { data: [], key: filters.fullPath };\n      dispatch(creators.success(LOAD_STORAGE_DETAILS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_DETAILS, error));\n    }\n  };\n}\n\nexport function setStorageItemThunk(ns) {\n  return creators.success(SET_STORAGE_NS, ns);\n}\n\nexport function loadStoragePointsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_POINTS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_TS, {\n        dbconn: filters.fullPath\n      });\n      const data = { data: response.data, key: filters.fullPath } || {\n        data: {},\n        key: filters.fullPath\n      };\n      dispatch(creators.success(LOAD_STORAGE_POINTS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_POINTS, error));\n    }\n  };\n}\n\nexport function loadMssqlStorageDataThunk(filters) {\n  return async dispatch => {\n    const { fullPath, process, storageKey } = filters;\n    dispatch(creators.loading(storageKey));\n\n    try {\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process,\n        timestamp: null\n      };\n\n      let resultJson = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        resultJson = parseInvocationResult(output);\n      }\n      dispatch(creators.success(storageKey, { data: resultJson, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(storageKey, error));\n    }\n  };\n}\n\nexport function loadObjectsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n    const objectApis = [\n      { name: 'triggers', path: '/object_trigger' },\n      { name: 'tables', path: '/object_table' },\n      { name: 'indexes', path: '/object_index' },\n      { name: 'procedures', path: '/object_procedure' },\n      { name: 'packages', path: '/object_package' },\n      { name: 'packageBodies', path: '/object_package_body' }\n    ];\n    try {\n      let allData = await Promise.allSettled(\n        objectApis.map(api =>\n          RestClient.get(`/system/explorer${api.path}`, {\n            dbms: filters.fullPath,\n            page_size: 2147483645\n          })\n        )\n      );\n      allData = objectApis.map((api, index) => {\n        return {\n          res: allData[index]?.value?.data,\n          name: api.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function loadObjectsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n\n    try {\n      const { fullPath, protocol } = filters;\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process: SystemExplorerFeatureUtil.getObjectsEndpoint(protocol),\n        timestamp: null\n      };\n\n      let objectsJSON = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        objectsJSON = parseInvocationResult(output);\n      }\n\n      const allData = objectsJSON.map((item) => {\n        return {\n          res: item,\n          name: item.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function objectsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return loadObjectsByProcessThunk(filters);\n  }\n  return loadObjectsThunk(filters);\n}\n\nexport function setSelectedObjectThunk(selected) {\n  return creators.success(SET_SELECTED_OBJECT, selected);\n}\n\nexport function provideServersUsageThunk() {\n  return async function serversUsage(dispatch, getState) {\n    let servers = [];\n\n    if (getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE')) {\n      servers = getState()\n        .explorer.structured.dbms.find(d => d.protocol === 'ORACLE')\n        .servers.slice();\n    }\n\n    const usageResult = { servers: [] };\n\n    const allResults = await Promise.allSettled(\n      servers.map(server => {\n        return loadUsagePerDb(server);\n      })\n    );\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        usageResult.servers.push({\n          dbms: result.value.dbms,\n          address: result.value.server,\n          usage: result.value.usage || 0\n        });\n\n        return null;\n      });\n\n    usageResult.highLoadCount = usageResult.servers.filter(server => server.usage >= 75).length;\n    usageResult.servers.sort((a, b) => parseFloat(b.usage) - parseFloat(a.usage));\n\n    dispatch(creators.success(PROVIDE_SERVERS_USAGE, usageResult));\n\n    return usageResult;\n  };\n}\n\nexport function provideDBLastBackupThunks() {\n  return async function getDBLastBackup(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases.filter(db => db.special.database === 'mysql')];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [\n        ...databases,\n        ...Pgsql.databases.filter(db => db.special.database === 'postgres')\n      ];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases.filter(db => db.special.database === 'master')];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbLastBackup = [];\n\n    const allResults = await Promise.allSettled(databases.map((db) => loadDBLastBackup(db, servers)));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbLastBackup.push({\n          name: result.value.name,\n          backup: result.value.backup\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_LAST_BACKUP, dbLastBackup));\n\n    return dbLastBackup;\n  };\n}\n\nexport function provideDBStatusThunks() {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [...databases, ...Pgsql.databases];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(\n      databases.map((db) => loadDBStatus(db, servers))\n    );\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          message: result.value.message,\n          dbName: result.value.dbName\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshServerDbsStatusThunk(server) {\n  return async function refreshDbStatus(dispatch, getState) {\n    const { databases } = server;\n\n    async function retrieveDBStatus(database) {\n      dispatch(\n        creators.loading(UPDATE_DB_STATUS, [\n          {\n            name: database.name,\n            server: database.address,\n            dbms: database.protocol,\n            dbName: database?.special?.database,\n            status:\n              getState().explorer.dbStatus.find(db => db.name === database.name)?.status ||\n              'not-connected'\n          }\n        ])\n      );\n\n      const dbms = database.name;\n      const shell = server.name;\n      try {\n        const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, { dbms, shell });\n\n        let status = response.data.status?.toString().toLowerCase() || 'error';\n        // there is a case where API simply returns only 64, for not it will be treated as down\n        if (parseInt(response.data, 10) === 64) {\n          status = 'down';\n        }\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          message: response?.data?.message,\n          status\n        };\n      } catch (error) {\n        dispatch(\n          creators.fail(UPDATE_DB_STATUS, [\n            {\n              name: database.name,\n              server: database.address,\n              dbms: database.protocol,\n              dbName: database?.special?.database,\n              status: 'error',\n              error\n            }\n          ])\n        );\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          status: 'error',\n          error\n        };\n      }\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(retrieveDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          dbName: result.value.dbName,\n          message: result.value.message\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshDBStatusThunk(db) {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n\n    const selectedDBMS = structured.dbms.find(r => r.protocol === db.protocol);\n\n    const dbms = db.name;\n    const shell = selectedDBMS\n      ? selectedDBMS.servers.find(sv => sv.address === db.address)?.name\n      : undefined;\n\n    dispatch(\n      creators.loading(UPDATE_DB_STATUS, [\n        {\n          name: db.name,\n          server: db.address,\n          dbms: db.protocol,\n          status: getState().explorer.dbStatus.find(d => d.name === db.name)?.status\n        }\n      ])\n    );\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n        dbms,\n        shell\n      });\n\n      let status = response.data.status?.toString().toLowerCase() || 'error';\n      // there is a case where API simply returns only 64, for not it will be treated as down\n      if (parseInt(response.data, 10) === 64) {\n        status = 'down';\n      }\n\n      const dbStatus = [\n        {\n          name: dbms,\n          server: db.address,\n          dbms: db.protocol,\n          status\n        }\n      ];\n      dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n      return dbStatus;\n    } catch (error) {\n      dispatch(\n        creators.fail(UPDATE_DB_STATUS, [\n          {\n            name: db.name,\n            server: db.address,\n            dbms: db.protocol,\n            status: 'error',\n            error\n          }\n        ])\n      );\n    }\n  };\n}\n\nexport function loadProcessDetailsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_COLLECTION_PROCESS, { name: payload.name }));\n\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${payload.process}`\n      );\n\n      const details = {\n        name: payload.name,\n        data: response?.data?.data?.processes[0] || {}\n      };\n\n      dispatch(creators.success(LOAD_COLLECTION_PROCESS, details));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_COLLECTION_PROCESS, { name: payload.name, error }));\n    }\n  };\n}\n\nexport function executeCollectionProcessThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.action(EXECUTE_COLLECTION_PROCESS, { name: payload.name }));\n\n    return 'done';\n  };\n}\n\nasync function loadUsagePerDb(server) {\n  const database = server.databases[0];\n  const response = await RestClient.get(`/system/explorer/${database.name}/cpu_load_server`);\n\n  const usage = parseFloat(response.data.HOST_CPU);\n\n  return {\n    dbms: database.protocol,\n    server: database.address,\n    usage\n  };\n}\n\nasync function loadDBLastBackup(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_LAST_BACKUP, {\n    dbms,\n    shell\n  });\n\n  return {\n    name: database.name,\n    backup: moment(response.data.backup).isValid()\n      ? moment(response.data.backup).format('MMM DD YYYY')\n      : null\n  };\n}\n\nasync function loadDBStatus(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n      dbms,\n      shell\n    });\n\n    let status = response.data.status?.toString().toLowerCase() || 'error';\n    // there is a case where API simply returns only 64, for not it will be treated as down\n    if (parseInt(response.data, 10) === 64) {\n      status = 'down';\n    }\n\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: response?.data?.message,\n      dbName: database?.special?.database,\n      status\n    };\n  } catch (error) {\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: database?.data?.message,\n      dbName: database?.special?.database,\n      status: 'error'\n    };\n  }\n}\n","export const PROVIDE_EXECUTIVE_DASHBOARD = 'PROVIDE_EXECUTIVE_DASHBOARD';\nexport const PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD = 'PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD';\n\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const TOGGLE_SERVER = 'TOGGLE_SERVER';\n\nexport const LOAD_NETWORK_NODES = 'LOAD_NETWORK_NODES';\nexport const LOAD_NETWORK_EDGES = 'LOAD_NETWORK_EDGES';\nexport const LOAD_SERVER_DETAILS = 'LOAD_SERVER_DETAILS';\n\nexport const LOAD_OS_TYPE = 'LOAD_OS_TYPE';\nexport const LOAD_DB_EDITION = 'LOAD_DB_EDITION';\nexport const LOAD_DB_VERSION = 'LOAD_DB_VERSION';\n\nexport const LOAD_USAGE = 'LOAD_USAGE';\nexport const LOAD_USAGE_STAT = 'LOAD_USAGE_STAT';\n\nexport const LOAD_LICENSE_DELTA = 'LOAD_LICENSE_DELTA';\n","export const LOAD_ALL_GROUPS = 'LOAD_ALL_GROUPS';\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GRANT_PRIVILEGE = 'GRANT_GROUP_PRIVILEGE';\nexport const REVOKE_PRIVILEGE = 'REVOKE_GROUP_PRIVILEGE';\nexport const ADD_USERS_TO_GROUP = 'ADD_USERS_TO_GROUP';\nexport const REMOVE_USERS_FROM_GROUP = 'REMOVE_USERS_FROM_GROUP';\nexport const ADD_GROUPS_TO_GROUP = 'ADD_GROUPS_TO_GROUP';\nexport const REMOVE_GROUPS_FROM_GROUP = 'REMOVE_GROUPS_FROM_GROUP';\nexport const PATCH_SELECTED_GROUP = 'PATCH_SELECTED_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n","export const DbmsType = {\n  ORACLE: 'ORACLE',\n  POSTGRES: 'PGSQL',\n  MYSQL: 'MYSQL',\n  MSSQL: 'MSSQL',\n  OTHER: 'OTHER',\n};\n\nexport const DbmsFeature = {\n  WORKLOAD: 'WORKLOAD',\n  SESSIONS: 'SESSIONS',\n  TOP_SQL: 'TOP_SQL',\n  OBJECTS: 'OBJECTS',\n  STORAGE: 'STORAGE',\n  LICENSE_REPORTING: 'LICENSE_REPORTING',\n};\n\nconst FEATURE_BY_TYPE_MAP = {\n  [DbmsType.ORACLE]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL, DbmsFeature.LICENSE_REPORTING],\n  [DbmsType.MYSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.POSTGRES]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.MSSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL],\n  [DbmsType.OTHER]: [DbmsFeature.WORKLOAD],\n};\n\nconst LOAD_SESSIONS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_OBJECTS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_STORAGE_BY_PROCESS = [DbmsType.MSSQL];\nconst OBJECTS_SIDEBAR_DISABLED = [DbmsType.MSSQL];\n\nconst SESSIONS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.sessions.sp_who'\n};\n\nconst OBJECTS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.database.all_objects'\n};\n\nconst ACCOUNT_ENTITY_PREFIX = 'mas0000.';\nconst ACCOUNT_ENTITY_NAME_TOKEN = '.account.';\n\nconst DBMS_LIST_ORDER = {\n  [DbmsType.ORACLE]: 50,\n  [DbmsType.MSSQL]: 40,\n  [DbmsType.MYSQL]: 30,\n  [DbmsType.POSTGRES]: 20,\n  [DbmsType.OTHER]: 10,\n};\n\nconst OBJECTS_DATA_MAPPERS = {\n  [DbmsType.MSSQL]: (item) => {\n    return {\n      OBJECT_NAME: item.name,\n      CREATED: item.create_date,\n      OBJECT_ID: item.object_id,\n      LAST_DDL_TIME: item.modify_date,\n    };\n  },\n};\n\nexport class SystemExplorerFeatureUtil {\n  static isFeatureAllowed(dbmsType, feature) {\n    if (!dbmsType || !feature || !FEATURE_BY_TYPE_MAP[dbmsType]) {\n      return false;\n    }\n    return FEATURE_BY_TYPE_MAP[dbmsType].includes(feature);\n  }\n\n  static isWorkloadAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.WORKLOAD);\n  }\n\n  static isSessionsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.SESSIONS);\n  }\n\n  static isTopSqlAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.TOP_SQL);\n  }\n\n  static isObjectsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.OBJECTS);\n  }\n\n  static isObjectsSidebarDisabled(dbmsType) {\n    return OBJECTS_SIDEBAR_DISABLED.includes(dbmsType);\n  }\n\n  static isStorageAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.STORAGE);\n  }\n\n  static isLicenseReportingAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.LICENSE_REPORTING);\n  }\n\n  static splitAccountName(fullName) {\n    fullName = fullName || '';\n    if (!fullName.startsWith(ACCOUNT_ENTITY_PREFIX)) {\n      return '';\n    }\n    const startIdx = fullName.lastIndexOf(ACCOUNT_ENTITY_NAME_TOKEN);\n    if (startIdx === -1) {\n      return '';\n    }\n    return fullName.substr(startIdx + ACCOUNT_ENTITY_NAME_TOKEN.length);\n  }\n\n  static shouldLoadSessionsByProcess(dbmsType) {\n    return LOAD_SESSIONS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadObjectsByProcess(dbmsType) {\n    return LOAD_OBJECTS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadStorageByProcess(dbmsType) {\n    return LOAD_STORAGE_BY_PROCESS.includes(dbmsType);\n  }\n\n  static getSessionsEndpoint(dbmsType) {\n    return SESSIONS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsEndpoint(dbmsType) {\n    return OBJECTS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsDataMapper(dbmsType) {\n    return OBJECTS_DATA_MAPPERS[dbmsType];\n  }\n\n  static getListOrder(dbmsType) {\n    return DBMS_LIST_ORDER[dbmsType] || 0;\n  }\n}\n","const MONTH_LIST = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\nconst WEEKDAYS_LIST = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nconst MAX_MINUTES_VALUE = 59;\nconst MAX_HOUR_VALUE = 23;\nconst MAX_DAY_VALUE = 31;\nconst MAX_MONTH_VALUE = 12;\nconst MAX_WEEKDAY_VALUE = 7;\n\nexport class CronValidator {\n  // public methods\n  static isValidMinutes(minutes) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(minutes), MAX_MINUTES_VALUE);\n  }\n\n  static isValidHours(hours) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(hours), MAX_HOUR_VALUE);\n  }\n\n  static isValidDays(days) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(days), MAX_DAY_VALUE);\n  }\n\n  static isValidMonth(month) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(month), MAX_MONTH_VALUE, false)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(month), MONTH_LIST);\n  }\n\n  static isValidWeekDay(weekDay) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(weekDay), MAX_WEEKDAY_VALUE)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(weekDay), WEEKDAYS_LIST);\n  }\n\n  static FORMAT_MSG = {\n    MINUTES: 'Minute value is required',\n    HOURS: 'Hour values must be between 0 and 23 and can contain special symbols: , - *',\n    DAYS: 'Day values must be between 0 and 31 and can contain special symbols: , - *',\n    MONTH: 'Month values must be between 1 and 12, or JAN-DEC, and can contain special symbols: , - *',\n    DAY_OF_WEEK: 'Day-of-Week values must be between 0 and 7, or SUN-SAT, and can contain special symbols: , - *',\n    EVERY_HOUR_WARNING: 'You have selected a process to run every hour. This may not be advisable for processes that consume significant storage resources, like backup processes.'\n  };\n\n  static ALLOWED_MINUTES_OPTIONS = ['0', '10', '20', '30', '40', '50'];\n\n  // private methods\n  static isValidNumberValue(time, maxVal, zeroAllowed = true) {\n    if (time === '*' || (zeroAllowed && time === '0')) {\n      return true;\n    }\n\n    if (time.includes(',')) {\n      return time.split(',').every((part) => {\n        return CronValidator.isValidNumberPart(part, maxVal, zeroAllowed);\n      });\n    }\n\n    return CronValidator.isValidNumberPart(time, maxVal, zeroAllowed);\n  }\n\n  static isValidNumberPart(time, maxVal, zeroAllowed = true) {\n    if (time.includes('/')) {\n      return false;\n    }\n    // Uncomment if we should allow a `/` symbol for Cron schedule\n    /*\n    if (time.includes('/')) {\n      const stepParts = time.split('/');\n      if (stepParts.length !== 2) {\n        return false;\n      }\n\n      const stepPartsValid = CronValidator.isValidNumberPart(stepParts[0], maxVal, zeroAllowed)\n        && CronValidator.isValidNumberPart(stepParts[1], maxVal, zeroAllowed);\n\n      return stepPartsValid || (stepParts[0] === '*' && CronValidator.isValidNumberPart([stepParts[1]], maxVal, zeroAllowed));\n    }\n    */\n\n    if (time.includes('-')) {\n      const rangeNumbersArr = time.split('-').map((el) => parseInt(el, 10));\n      return CronValidator.isValidNumberRange(rangeNumbersArr, maxVal) && rangeNumbersArr.length === 2 && rangeNumbersArr[0] <= rangeNumbersArr[1];\n    }\n\n    const timeNumber = parseInt(time, 10);\n    if (zeroAllowed) {\n      return timeNumber >= 0 && timeNumber <= maxVal;\n    }\n    return timeNumber > 0 && timeNumber <= maxVal;\n  }\n\n  static cleanValue(value) {\n    return (value || '').trim().toLowerCase();\n  }\n\n  static isValidNumberRange(dataArray, maxVal, zeroAllowed = true) {\n    return dataArray.every((element) => {\n      if (zeroAllowed) {\n        return element >= 0 && element <= maxVal;\n      }\n      return element > 0 && element <= maxVal;\n    });\n  }\n\n  static isValidAlternativeValue(value, allowedValues) {\n    if (value.includes(',')) {\n      return value.split(',').every((part) => {\n        return CronValidator.isValidAlternativePart(part, allowedValues);\n      });\n    }\n\n    return CronValidator.isValidAlternativePart(value, allowedValues);\n  }\n\n  static isValidAlternativePart(value, allowedValues) {\n    if (value.includes('/')) {\n      return false;\n      /*\n      const stepValues = value.split('/');\n      return CronValidator.isValidAlternativeRange(stepValues, allowedValues);\n      */\n    }\n\n    if (value.includes('-')) {\n      const rangeValues = value.split('-');\n      return CronValidator.isValidAlternativeRange(rangeValues, allowedValues) && rangeValues.length === 2\n        && allowedValues.indexOf(rangeValues[0]) <= allowedValues.indexOf(rangeValues[1]);\n    }\n\n    return CronValidator.isValidAlternativeRange([value], allowedValues);\n  }\n\n  static isValidAlternativeRange(values, allowedValues) {\n    return values.every((value) => {\n      return allowedValues.includes(CronValidator.cleanValue(value));\n    });\n  }\n}\n","export const LOAD_ALL_USERS = 'LOAD_ALL_USERS';\nexport const SELECT_USER = 'SELECT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const REVOKE_PRIVILEGE = 'REVOKE_PRIVILEGE';\nexport const GRANT_PRIVILEGE = 'GRANT_PRIVILEGE';\n\nexport const ADD_USER_TO_GROUPS = 'ADD_USER_TO_GROUPS';\nexport const REMOVE_USER_FROM_GROUPS = 'REMOVE_USER_FROM_GROUPS';\nexport const DEACTIVATE_USER = 'DEACTIVATE_USER';\nexport const CREATE_USER = 'CREATE_USER';\n","import { RestClient } from 'shared/lib/rest';\nimport { ENTITY_TYPES_FETCH } from './selectors';\n\nexport function fetchEntities() {\n  return function thunk(dispatch) {\n    const promises = ENTITY_TYPES_FETCH.map(({ type, query }) => {\n      let url = `${type}`;\n      if (query) {\n        url = url.concat(`/${encodeURIComponent(query)}`);\n      }\n      const promise = RestClient.get(url, { page_size: 2147483645 });\n      dispatch({\n        type: 'FETCH_ENTITIES',\n        promise,\n        entityType: type\n      });\n      return promise;\n    });\n\n    dispatch({\n      type: 'FETCH_ENTITIES_ALL',\n      promise: promises\n    });\n  };\n}\n\nexport function fetchEntity(eType) {\n  const definition = ENTITY_TYPES_FETCH.find(desc => eType === desc.type);\n\n  if (!definition) {\n    return function notFound() {\n      console.warn('[fetchEntity] invalid entity type:', eType); // eslint-disable-line\n    };\n  }\n\n  return function thunk(dispatch) {\n    const promise = RestClient.get(\n      `${definition.type}${definition.query ? `/${definition.query}` : ''}?page_size=2147483645`\n    );\n\n    dispatch({\n      type: 'FETCH_ENTITIES',\n      promise,\n      entityType: definition.type\n    });\n\n    return promise;\n  };\n}\n\nexport function selectEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'SELECT_ENTITY'\n  };\n}\n\nexport function clearSelectedEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'CLEAR_SELECTED_ENTITY'\n  };\n}\n\nexport function setFilterType(value) {\n  return {\n    name: 'type',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function setFilterSearch(value) {\n  return {\n    name: 'search',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function openModal(name) {\n  return {\n    type: 'OPEN_ENTITIES_MODAL',\n    name\n  };\n}\n","import { sessionActions } from './session.action';\n\nexport const actions = {\n  ...sessionActions,\n};\n","import { jobsActions } from './jobs.action';\nimport { processActions } from './process.action';\nimport { globalFiltersActions } from './global-filters.action';\n\nexport const actions = {\n  ...jobsActions,\n  ...processActions,\n  ...globalFiltersActions,\n};\n","// function Node(payload) {\n//   const data = payload;\n//   const edges = [];\n\n//   return {\n//     getEdges() {\n//       return edges;\n//     },\n//     getData() {\n//       return data;\n//     },\n//     addEdge(edge) {\n//       edges.push(edge);\n//       return edges;\n//     }\n//   };\n// }\n\nimport _ from 'lodash';\nimport { createSelector } from 'reselect';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nfunction pipe(...fns) {\n  return arg => fns.reduce((prev, fn) => fn(prev), arg);\n}\n\nfunction filterBy(selector, equalityFn, value) {\n  return data => {\n    if (value) {\n      return data.filter(el => equalityFn(selector(el), value));\n    }\n\n    return data;\n  };\n}\n\nexport function retrieveFilteredAccounts(protocol, server) {\n  return state => {\n    const { accounts } = state.explorer;\n\n    const filterByProtocol = filterBy(\n      el => (el.nodes[0] ? el.nodes[0].protocol : ''),\n      (stateValue, currentValue) => stateValue === currentValue,\n      protocol\n    );\n\n    const filterByServer = filterBy(\n      el => Object.keys(el.servers),\n      (servers, currentServer) => servers.includes(currentServer),\n      server\n    );\n\n    return pipe(filterByProtocol, filterByServer)(accounts);\n  };\n}\n\nexport function retrieveServerEntry({ protocol, address }, structure) {\n  const dbms = structure.dbms.find(entry => entry.protocol === protocol);\n  return dbms && dbms.servers.find(server => server.address === address);\n}\n\nexport function retrieveDatabaseEntry({ database, protocol, address }, structure) {\n  const server = retrieveServerEntry({ protocol, address }, structure);\n\n  return server.databases.find(db => db.special.database === database);\n}\n\nconst getStatePath = state => state.explorer.state.path;\nconst getStructured = state => state.explorer.structured.dbms;\nconst getSessions = state => state.explorer.sessions;\nconst getSessionsFlags = state => state.explorer.flags.sessions;\nconst getTopSqlStatements = state => state.explorer.topSqlStatements;\nconst getTopSqlStatementsFlags = state => state.explorer.flags.topSqlStatements;\nconst getStoragePointsLoadingFlag = state => state.explorer.flags.storage.loadingPoints;\nconst getStorageDetailsLoadingFlag = state => state.explorer.flags.storage.loadingDetails;\nconst getSelectedStorage = state => state.explorer.storage.selected;\nconst getStoredEntries = state => state.explorer.storage.storedEntries;\nconst getSelectedObject = state => state.explorer.objects.selectedObject;\nconst getSelectedOwner = state => state.explorer.objects.selectedOwner;\nconst getObjectsEntries = state => state.explorer.objects.storedEntries;\nconst getObjectsLoadingFlag = state => state.explorer.flags.objects.loading;\nconst getMssqlDiskIO = state => state.explorer.storage.mssqlDiskIO;\nconst getMssqlStorageUsed = state => state.explorer.storage.mssqlStorageUsed;\nconst getMssqlFileStorage = state => state.explorer.storage.mssqlFileStorage;\n\nexport const getFullPath = createSelector([getStatePath, getStructured], (fullPath, dbms) => {\n  const pathArr = fullPath.split('--');\n  return dbms\n    .find(({ path }) => path === pathArr[0])\n    ?.servers.find(({ address }) => address === pathArr[1])\n    ?.databases.find(({ special }) => special.database === pathArr[2])?.name;\n});\n\nexport const haveStorageData = createSelector(\n  [getFullPath, getStoredEntries],\n  (fullPath, storedEntries) => {\n    const selectedStorage = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedStorage).length > 0;\n  }\n);\n\nexport const getFormattedStorage = createSelector(\n  [getFullPath, getStoredEntries, getStoragePointsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    const points = storedEntries[fullPath]?.points;\n    if (isLoading || !_.isArray(points)) {\n      return [];\n    }\n    const factor = 1024;\n    return points.map(point => {\n      let usage = (point.Used_MB / point.Total_MB) * 100;\n      if (usage < 0) {\n        usage = 0;\n      }\n      return {\n        ns: point.Tablespace,\n        freePerc: point['Pct._Free'],\n        freeGB: point.Free_MB / factor,\n        totalGB: point.Total_MB / factor,\n        usedGB: point.Used_MB / factor,\n        usage\n      };\n    });\n  }\n);\n\nexport const haveObjectsData = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const selectedObjects = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedObjects).length > 0;\n  }\n);\n\nexport const getStorageDetailsData = createSelector(\n  [\n    getFullPath,\n    getStoredEntries,\n    getFormattedStorage,\n    getStorageDetailsLoadingFlag,\n    getSelectedStorage\n  ],\n  (fullPath, storedEntries, list, isLoading, selectedNS) => {\n    const details = storedEntries[fullPath]?.details;\n    if (isLoading || !_.isArray(details)) {\n      return {\n        tablespace: {},\n        files: []\n      };\n    }\n    return {\n      tablespace: list.find(({ ns }) => ns === selectedNS),\n      files: details.filter(({ TABLESPACE_NAME }) => TABLESPACE_NAME === selectedNS)\n    };\n  }\n);\n\nexport const getMssqlStorageDetails = createSelector(\n  [\n    getMssqlDiskIO,\n    getMssqlStorageUsed,\n    getMssqlFileStorage,\n  ],\n  (diskIO, storageUsed, fileStorage) => {\n    return { diskIO, storageUsed, fileStorage };\n  }\n);\n\nexport const getStructuredObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n\n    const objects = storedEntries[fullPath] || {};\n    const tree = Object.keys(objects).reduce((acc, key) => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          if (acc[object.OWNER] && !acc[object.OWNER].includes(key)) {\n            acc[object.OWNER].push(key);\n          } else {\n            acc[object.OWNER] = [key];\n          }\n        });\n      return acc;\n    }, []);\n    return Object.keys(tree).map(key => ({ owner: key, objects: tree[key] }));\n  }\n);\n\nexport const getInvalidObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const invalidObjects = [];\n    const objects = storedEntries[fullPath] || {};\n    Object.keys(objects).forEach(key => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          const included = invalidObjects.findIndex(\n            ({ owner, object: name }) => owner === object?.OWNER && name === key\n          );\n          if (object && object.STATUS !== 'VALID' && included === -1) {\n            invalidObjects.push({ owner: object.OWNER, object: key });\n          }\n        });\n    });\n    return invalidObjects;\n  }\n);\n\nexport const getSelectedObjectData = createSelector(\n  [getSelectedObject, getSelectedOwner, getFullPath, getObjectsEntries],\n  (object, owner, fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!object || !owner || !_.isObject(objects) || !_.isArray(objects[object])) {\n      return [];\n    }\n    return objects[object].filter(({ OWNER }) => OWNER === owner);\n  }\n);\n\nexport const getObjectsDataByProcess = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!_.isObject(objects)) {\n      return [];\n    }\n    return Object.values(objects);\n  }\n);\n\nexport function objectsSelectorResolver(state, protocol) {\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return getObjectsDataByProcess(state);\n  }\n  return getSelectedObjectData(state);\n}\n\nexport const getSortedSessions = createSelector(\n  [getSessions, getSessionsFlags],\n  (sessions, { loading, sort }) => {\n    if (loading || !_.isArray(sessions)) {\n      return [];\n    }\n    if (sort === undefined) {\n      return sessions;\n    }\n    let sortFunction;\n    // Backend doesn't support sorting at this time. Consider moving sort to backend though\n    if (sort.order === 'asc') {\n      sortFunction = (a, b) => {\n        return new Date(a[sort.sortKey]).getTime() - new Date(b[sort.sortKey]).getTime();\n      };\n    } else {\n      sortFunction = (a, b) => {\n        return new Date(b[sort.sortKey]).getTime() - new Date(a[sort.sortKey]).getTime();\n      };\n    }\n    return sessions.slice().sort(sortFunction);\n  }\n);\n\nexport const selectTopSqlStatements = createSelector(\n  [getTopSqlStatements, getTopSqlStatementsFlags],\n  (statementsTxt, { loading }) => {\n    if (loading || !statementsTxt) {\n      return [];\n    }\n\n    const statementsJson = (statementsTxt || '').split('\\n')[1];\n    return statementsJson ? JSON.parse(statementsJson) : [];\n  }\n);\n\nexport const getBackup = (database, backups) => {\n  const backup = backups.find(db => db.name === database.name)?.backup;\n\n  return backup;\n};\n\nexport const getDBStatus = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n\n  return status;\n};\n\nexport const getDBStatusInfo = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n  const info = statuses.find(db => db.name === database.name)?.message;\n\n  return dbMessage(status, info);\n};\n\nexport const STATUS_TYPES = {\n  down: 'down',\n  up: 'up',\n  error: 'error',\n  notConnected: 'not-connected',\n  notFound: 'not found',\n};\n\nexport const getDBMSStatus = (dbms, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n\n  const allStatuses = {};\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n\nexport const getDBMSStatusInfo = (dbms, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const dbmsStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': []\n  };\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      dbmsStatus[entry.status] && dbmsStatus[entry.status].push({\n        server: entry.server,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (dbmsStatus.down.length > 0) {\n    if (dbmsStatus.down.length === 1) {\n      message += `${dbmsStatus.down[0].server} has a database down. `;\n    } else {\n      message += `The following servers: ${dbmsStatus.down.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database down. `;\n    }\n  }\n\n  if (dbmsStatus.error.length > 0) {\n    if (dbmsStatus.error.length === 1) {\n      message += `${dbmsStatus.error[0].server} has a database with error. `;\n    } else {\n      message += `\\n The following servers: ${dbmsStatus.error.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database with error. `;\n    }\n  }\n\n  if (dbmsStatus['not-connected'].length > 0) {\n    if (dbmsStatus['not-connected'].length === 1) {\n      message += `${dbmsStatus['not-connected'][0].server} server has a database which status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases from servers: (${dbmsStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    dbmsStatus.down.length === 0 &&\n    dbmsStatus.error.length === 0 &&\n    dbmsStatus['not-connected'].length === 0 &&\n    dbmsStatus.up.length > 0\n  ) {\n    message = 'All servers are up.';\n  }\n\n  return message;\n};\n\nexport const getServerStatus = (server, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n  const allStatuses = {};\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.notFound]) return 'not found';\n\n  return 'not-connected';\n};\n\nexport const getServerStatusInfo = (server, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const serverStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': [],\n  };\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      serverStatus[entry.status] && serverStatus[entry.status].push({\n        dbName: entry.dbName,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (serverStatus.down.length > 0) {\n    if (serverStatus.down.length === 1) {\n      message += `${serverStatus.down[0].dbName} database is down. `;\n    } else {\n      message += `The following databases: ${serverStatus.down.map(sv => sv.dbName)} are down. `;\n    }\n  }\n\n  if (serverStatus.error.length > 0) {\n    if (serverStatus.error.length === 1) {\n      message += `${serverStatus.error[0].dbName} database has errors. `;\n    } else {\n      message += `Errors reported in databases: (${serverStatus.error.map(sv => sv.dbName)}). `;\n    }\n  }\n\n  if (serverStatus['not-connected'].length > 0) {\n    if (serverStatus['not-connected'].length === 1) {\n      message += `${serverStatus['not-connected'][0].dbName} database status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases: (${serverStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    serverStatus.down.length === 0 &&\n    serverStatus.error.length === 0 &&\n    serverStatus['not-connected'].length === 0 &&\n    serverStatus.up.length > 0\n  ) {\n    message = 'All databases are up.';\n  }\n\n  return message;\n};\n\nexport const getEntityPendingStatus = (entity, statuses, type) => {\n  const pathArray = entity.path.split('--');\n  const dbms = pathArray[0];\n  if (statuses.length === 0) return { label: `Loading ${type} status...`, loading: true };\n\n  if (type === 'server') {\n    return statuses\n      .filter(en => en.dbms === dbms && en.server === entity.address)\n      .find(e => e.loading)\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh dbs status', loading: false };\n  }\n\n  if (type === 'db') {\n    return statuses.find(db => db.name === entity.name)?.loading\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh db status', loading: false };\n  }\n\n  return { label: 'Refresh', type: false };\n};\n\nexport const dbMessage = (status, message) => {\n  if (!message) {\n    if (status === 'up') {\n      return 'Instance is up.';\n    }\n\n    if (status === 'error') {\n      return 'An unknown error has occurred on this instance.';\n    }\n\n    if (status === 'down') {\n      return 'Instance is down.';\n    }\n\n    if (status === 'not-connected' || status === 'not found') {\n      return 'Please refresh in order to get the instance status.';\n    }\n  }\n\n  return message;\n};\n","import Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LimitlessTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n    maxWidth: 'none'\n  }\n}))(Tooltip);\n","import React, { useState, useCallback, useMemo, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { useFormikContext } from 'formik';\nimport _ from 'lodash';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { mdiArrowExpand } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Modal } from 'shared/components/overlays';\nimport { ParameterLoader } from 'shared/components/loaders';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Ensure } from 'core/components/Ensure/Ensure';\nimport { Checkbox } from '../../controls/Checkbox/Checkbox';\nimport { Text } from './Generic';\nimport { formatAccount } from './formatters';\nimport check from './field-level-validations';\nimport { ADDITIONAL_ACCOUNT_FILTERS } from './filters';\nimport { deepCopy } from 'shared/lib/deep-copy';\n\nexport const RSAKey = props => {\n  return <Text multiline {...props} />;\n};\n\nexport const FQName = ({ recieved, ...props }) => {\n  const { values } = useFormikContext();\n\n  const fqname = recieved?.fqname || recieved?.name || null;\n  let name = values[`fqname--${props?.name}`];\n  let namespace = values['fqname--namespace'];\n\n  // use the value received from the invocation\n  if (fqname && name === undefined) {\n    const parts = fqname.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  // use the value that was manually typed\n  if (name !== undefined && name.slice(-1) !== '.') {\n    const parts = name.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '30px' }}\n        value={name}\n        description=\"The relative or fully-qualified name of the process to be created.\"\n        required\n        name={`fqname--${props?.name}`}\n        label=\"name\"\n        disabled={props.disabled}\n      />\n      <NamespaceSelect\n        name=\"fqname--namespace\"\n        label=\"Parent namespace\"\n        description=\"namespace (leave blank for relative name)\"\n        value={namespace}\n        disabled={props.disabled}\n        type=\"fqname\"\n      />\n    </>\n  );\n};\n\nexport function QualifiedName(props) {\n  const validations = useMemo(() => check.merge(check.masName, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"text\" />;\n}\n\n/**\n * TODO:\n * These should be retireved through a connection\n * Platforms are protocols associated for accounts\n * For now they can be hardcoded\n */\nexport const AccountSelect = ({ protocols = [], ...props }) => {\n  const { values } = useFormikContext();\n  const [showUrls, setShowUrls] = useState(false);\n  const boxName = `${props.name}-show-urls`;\n\n  const showToggle = useCallback(e => {\n    setShowUrls(e.target.checked);\n  }, []);\n\n  return (\n    <Ensure type=\"account\" inlineLoader>\n      {({ data: accounts }) => {\n        let list = accounts;\n\n        if (protocols && protocols.length) {\n          if (ADDITIONAL_ACCOUNT_FILTERS[props.name]) {\n            const additionalFilters = ADDITIONAL_ACCOUNT_FILTERS[props.name];\n            list = additionalFilters.reduce((acc, filterFn) => {\n              acc = filterFn(deepCopy(acc), values);\n              return acc;\n            }, accounts);\n          }\n\n          list = list.filter(account => protocols.includes(account.protocol));\n        }\n\n        const options = list.map(account => ({\n          label: showUrls ? formatAccount(account) : account.name,\n          value: account.name\n        }));\n\n        /**\n          TODO: filter by protocol\n         */\n        if (protocols.length) {\n          accounts.filter(Boolean);\n        }\n\n        return (\n          <FormGroup>\n            <Text {...props} options={options} />\n            <Checkbox\n              size=\"small\"\n              id={boxName}\n              name={boxName}\n              onChange={showToggle}\n              disabled={props.disabled}\n              label=\"Show Account URLs\"\n            />\n          </FormGroup>\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const PLATFORMS = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'MariaDB', value: 'MariaDB', tester: /mariadb\\./ },\n  { label: 'MySQL', value: 'MySQL', tester: /mysql\\./ },\n  { label: 'Oracle', value: 'Oracle', tester: /oracle\\./ },\n  { label: 'PostgreSQL', value: 'PostgreSQL', tester: /pgsql\\./ },\n  {\n    label: 'Microsoft SQL Server',\n    value: 'Microsoft SQL Server',\n    tester: /microsoft\\.sqlserver\\./\n  },\n  { label: 'Oracle RDS', value: 'Oracle RDS', tester: /.rds\\.oracle\\./ }\n];\n\nexport const PROCESS_TYPES = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'Backup', value: 'backup', tester: /\\.backup\\./ },\n  { label: 'Config', value: 'config', tester: /\\.config\\./ },\n  { label: 'Import', value: 'import', tester: /\\.import\\./ },\n  { label: 'Monitor', value: 'monitor', tester: /\\.monitor\\./ },\n  { label: 'Oda', value: 'oda', tester: /\\.oda\\./ },\n  { label: 'Patch', value: 'patch', tester: /\\.patch\\./ },\n  { label: 'Patching', value: 'patching', tester: /\\.patching\\./ },\n  { label: 'RDS', value: 'rds', tester: /\\.rds\\./ },\n  { label: 'Run', value: 'run', tester: /\\.run\\./ },\n  { label: 'Security', value: 'security', tester: /\\.security\\./ },\n  { label: 'Util', value: 'util', tester: /\\.util\\./ },\n];\n\nexport const PlatformSelect = props => {\n  const { values } = useFormikContext();\n\n  let platformValue = values?.platform ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availablePlatforms = PLATFORMS.slice(1).reverse();\n    platformValue =\n      availablePlatforms.find(platform => platform.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={platformValue} name=\"platform\" {...props} options={PLATFORMS} />;\n};\n\nexport const ProcessTypeSelect = props => {\n  const { values } = useFormikContext();\n\n  let typeValue = values?.type ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availableTypes = PROCESS_TYPES.slice(1).reverse();\n    typeValue =\n      availableTypes.find(type => type.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={typeValue} name=\"type\" {...props} options={PROCESS_TYPES} />;\n};\n\nexport const ProcessSelect = props => {\n  const { values } = useFormikContext();\n  const platformValue = values?.platform ?? '';\n  const typeValue = values?.type ?? '';\n\n  let platform = PLATFORMS[0];\n  let type = PROCESS_TYPES[0];\n\n  if (platformValue) {\n    platform = PLATFORMS.find(p => p.value === platformValue);\n  }\n\n  if (typeValue) {\n    type = PROCESS_TYPES.find(p => p.value === typeValue);\n  }\n\n  return (\n    <Ensure type=\"namespace\" inlineLoader>\n      <Ensure type=\"process\" inlineLoader>\n        {({ data }) => {\n          let processes = data;\n\n          if (platform && platform.value !== 'all') {\n            processes = processes.filter(process => platform.tester.test(process.name));\n          }\n\n          if (type && type.value !== 'all') {\n            processes = processes.filter(process => type.tester.test(process.name));\n          }\n\n          /** TODO, CHECK */\n          processes = processes.filter(process => {\n            if (processes.meta && process.meta.appearance) {\n              return process.meta.appearance !== 'Hidden';\n            }\n\n            return true;\n          });\n\n          // display only processes that have the is_executable === true\n          // the others need to be compiled first\n          const OPTIONS = processes\n            .filter(p => p.is_executable)\n            .map(item => ({\n              value: item.name,\n              label: item.name,\n              description: item.description,\n              disabled: item.meta && item.meta.appearance === 'Greyed'\n            }));\n\n          return <Text type=\"text\" defaultValue=\"\" name=\"process\" {...props} options={OPTIONS} />;\n        }}\n      </Ensure>\n    </Ensure>\n  );\n};\n\nexport const NamespaceSelect = ({ value, ...props }) => {\n  const { values } = useFormikContext();\n  const defaultValue = values.namespace || '';\n  let customVal = value;\n\n  return (\n    <Ensure type=\"namespace\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading namespaces...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load namespaces.</ParameterLoader>;\n        }\n\n        let namespaces = data;\n\n        namespaces = namespaces.filter(namespace => {\n          if (namespace.meta && namespace.meta.appearance) {\n            return namespace.meta.appearance !== 'Hidden';\n          }\n\n          return true;\n        });\n\n        const OPTIONS = namespaces.map(item => ({\n          value: item.name,\n          label: item.name,\n          disabled: item.meta && item.meta.appearance === 'Greyed'\n        }));\n\n        if (props?.type === 'fqname') {\n          customVal = OPTIONS.find(o => o.value === value)?.value || '';\n        }\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            name=\"namespace\"\n            value={customVal}\n            {...props}\n            options={OPTIONS}\n            required\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const FormPrototypeSelect = props => {\n  return (\n    <Ensure type=\"prototype\" inlineLoader>\n      {({ data: prototypes }) => {\n        const list = prototypes || [];\n\n        const options = list.map(prototype => ({\n          label: prototype.name,\n          value: prototype.name\n        }));\n\n        return <Text fullWidth {...props} description=\"\" options={options} />;\n      }}\n    </Ensure>\n  );\n};\n\nexport const ModeSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.mode || '';\n\n  return (\n    <Ensure type=\"type\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading type...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load types.</ParameterLoader>;\n        }\n\n        const modes = data.filter(type => type.name === 'mas0300.sys.account.privilege_mode')[0];\n\n        if (modes.meta && modes.meta.appearance === 'Hidden') {\n          return null;\n        }\n\n        const OPTIONS =\n          modes.enumerations &&\n          modes.enumerations.map(item => ({\n            value: item.label,\n            label: item.label,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            disabled={modes.meta && modes.meta.appearance === 'Greyed'}\n            name=\"process\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nfunction variadicListReducer(list, action) {\n  switch (action.type) {\n    case 'add_new_parameter':\n      return produce(list, draft => {\n        draft.push({ name: '', type: '', deflt: undefined, description: null, value: '' });\n      });\n\n    case 'remove_parameter':\n      return produce(list, draft => {\n        draft.pop();\n      });\n\n    default:\n      return list;\n  }\n}\n\nfunction useVariadicList(recieved) {\n  const [list, dispatch] = useReducer(variadicListReducer, recieved?.replvars || []);\n\n  return { list, dispatch };\n}\n\nexport const Variadic = ({ recieved, disabled }) => {\n  const { values } = useFormikContext();\n  const displayDeftlDesc = selectedProcess !== 'vendita.oracle.rdbms.cli.sqlplus.execute';\n\n  const { list, dispatch } = useVariadicList(recieved);\n\n  const selectedProcess = values.process;\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvars</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Ensure type=\"type\">\n          {({ data: datatypes }) => {\n            const options = datatypes\n              .filter(dataType => {\n                if (\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.script' ||\n                  selectedProcess === 'mas0300.os.svc.db.data.sql.query_import' ||\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.execute' ||\n                  selectedProcess === 'dbatools.oracle.run.import_sqlplus_query'\n                ) {\n                  return dataType.name === 'string' || dataType.name === 'integer';\n                }\n                return true;\n              })\n              .map(dataType => {\n                return {\n                  label: dataType.name,\n                  value: dataType.name\n                };\n              });\n\n            return (\n              <>\n                <div>\n                  {list.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <VariadicInstance\n                        data={item}\n                        index={index}\n                        defltDesc={displayDeftlDesc}\n                        types={options}\n                        disabled={disabled}\n                      />\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  }}\n                >\n                  {list.length > 0 && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        dispatch({ type: 'remove_parameter' });\n                      }}\n                      disabled={disabled}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                  <Button\n                    onClick={() => {\n                      dispatch({ type: 'add_new_parameter' });\n                    }}\n                    disabled={disabled}\n                  >\n                    Add\n                  </Button>\n                </div>\n              </>\n            );\n          }}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nfunction VariadicInstance({ data = {}, index, defltDesc, types, disabled }) {\n  const name_base = `replvar--${index}`;\n\n  let parsedDeflt = data.deflt;\n\n  if (data.deflt) {\n    parsedDeflt = data.deflt.replace(\"str('\\\"'\", '').replace(\"'\\\"')\", '');\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Name\"\n        type=\"text\"\n        name={`${name_base}--name`}\n        value={data.name}\n        disabled={disabled}\n        validate={check.merge(check.firstCharLetter, check.masName)}\n        required\n      />\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Type\"\n        type=\"text\"\n        name={`${name_base}--type`}\n        options={types}\n        value={data.type}\n        disabled={disabled}\n        required\n      />\n      {defltDesc && (\n        <>\n          <Text\n            style={{ marginBottom: '15px' }}\n            label=\"Deflt\"\n            type=\"text\"\n            name={`${name_base}--deflt`}\n            value={parsedDeflt}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n          <Text\n            style={{ marginBottom: '30px' }}\n            label=\"Description\"\n            type=\"text\"\n            name={`${name_base}--description`}\n            value={data.description}\n            defaultValue={null}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n        </>\n      )}\n      {!defltDesc && (\n        <Text\n          style={{ marginBottom: '15px' }}\n          label=\"Value\"\n          type=\"text\"\n          name={`${name_base}--value`}\n          value={data.value}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n}\n\nexport const Multiline = props => {\n  const [open, setOpen] = useState(false);\n  const { values } = useFormikContext();\n  const value = values[props.name];\n\n  return (\n    <>\n      <Text\n        InputProps={{\n          startAdornment: (\n            <InputAdornment>\n              <LightTooltip title=\"Expand\">\n                <SvgIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    setOpen(true);\n                  }}\n                >\n                  <path d={mdiArrowExpand} />\n                </SvgIcon>\n              </LightTooltip>\n            </InputAdornment>\n          )\n        }}\n        value={value}\n        isPopup={open}\n        multiline\n        {...props}\n      />\n      <Modal open={open}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <Paper.Content>\n            <Text value={value} multiline isPopup={open} variant=\"standard\" {...props} />\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={() => setOpen(false)}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const Replvalues = ({ recieved, disabled, ...props }) => {\n  const { values } = useFormikContext();\n  const keys = Object.keys(values);\n  const replvars = keys.filter(key => key.startsWith('replvar'));\n  const valuesNr = replvars.length / 4;\n  const replvaluesParams = [];\n\n  if (valuesNr > 0) {\n    for (let i = 0; i < valuesNr; i++) {\n      const type =\n        values[`replvar--${i}--type`] === 'integer' ? 'number' : values[`replvar--${i}--type`];\n      const label = values[`replvar--${i}--name`];\n      const name = `replvalue--${i}`;\n      const value =\n        recieved?.replvalues && recieved.replvalues[values[`replvar--${i}--name`]]\n          ? recieved.replvalues[values[`replvar--${i}--name`]]\n          : values[`replvalue--${i}`];\n      replvaluesParams.push({ type, label, name, value });\n    }\n  }\n\n  if (replvaluesParams.length > 0) {\n    return (\n      <>\n        <Section>\n          <Section.Header>\n            <Section.Title>replvalues</Section.Title>\n          </Section.Header>\n        </Section>\n        {replvaluesParams.map((repl, index) => {\n          return (\n            <Text\n              key={index}\n              style={{ marginBottom: '15px' }}\n              label={repl.label}\n              type={repl.type}\n              name={repl.name}\n              value={repl.value}\n              disabled={disabled}\n              description={props.description}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvalues</Section.Title>\n      </Section.Header>\n    </Section>\n  );\n};\n\nexport const Uuid = props => {\n  return <Text validate={check.uuid} {...props} />;\n};\n","export const InvocationStatus = {\n  NEW: '__NEW__',\n  ALL: '__ALL__',\n  NOT_FETCHED: 'NOT_FETCHED',\n  ABORTED: 'ABORTED',\n  SCHEDULED: 'SCHEDULED',\n  SUCCEEDED: 'SUCCEEDED',\n  FAILED: 'FAILED',\n  EXECUTING: 'EXECUTING',\n  DELAYED: 'DELAYED',\n  KILLED: 'KILLED'\n};\n\nexport const AllowOutputFor = [\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED,\n  InvocationStatus.FAILED,\n  InvocationStatus.SUCCEEDED,\n  InvocationStatus.EXECUTING\n];\n\nexport const AllowGeneralEditingFor = [InvocationStatus.NEW];\n\nexport const CannotShowStatusFor = [\n  InvocationStatus.NEW,\n  InvocationStatus.ALL,\n  InvocationStatus.NOT_FETCHED\n];\n\nexport const FAILURES = [\n  InvocationStatus.FAILED,\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED\n];\n\nexport const SUCESSES = [InvocationStatus.SUCCEEDED];\n\nexport const WARNINGS = [InvocationStatus.DELAYED, InvocationStatus.SCHEDULED];\n","export function hasWritePrivileges(entity) {\n  return entity?.privileges?.effective?.includes?.('write');\n}\n\nexport function hasOnlyReadPrivilege(entity) {\n  if (entity?.privileges?.effective?.length === 1 && entity?.privileges?.effective[0] === 'read') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isOnlySelectGroup(details) {\n  if (!details) return false;\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (\n    (userDetails.member_of.length === 1 && userDetails.member_of[0] === 'select') ||\n    (userDetails.member_of.length === 2 &&\n      userDetails.member_of.includes('select') &&\n      userDetails.member_of.includes('user'))\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isAdmin(details) {\n  if (!details) return false;\n\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (userDetails.member_of.includes('admin')) {\n    return true;\n  }\n\n  return false;\n}\n","export const LOAD_LICENSES = 'LOAD_LICENSES';\nexport const LOAD_DB_LICENSES = 'LOAD_DB_LICENSES';\nexport const LOAD_LICENSE_TARGETS = 'LOAD_LICENSE_TARGETS';\nexport const LOAD_AVAILABLE_SERVERS = 'LOAD_AVAILABLE_SERVERS';\n","import React, { useState } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nexport const SubmitButton = ({ children = 'Submit', confirmation, ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating, dirty } = useFormikContext();\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        disabled={!dirty || isSubmitting || isValidating}\n        onClick={() => {\n          console.log('submitting', values); // eslint-disable-line\n          if (confirmation) {\n            setOpen(true);\n          } else {\n            submitForm();\n          }\n        }}\n        {...props}\n      >\n        {children}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '350px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n          <Paper.Content scrollable={false}>\n            <Result type=\"fail\">\n              <BodyText>Are you sure you want to save?</BodyText>\n            </Result>\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                No\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                  submitForm();\n                }}\n              >\n                Yes\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { bool, func, node, shape, object, string } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './AvatarCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nexport const AvatarCard = ({\n  label,\n  avatar = {},\n  selected,\n  data,\n  onSelect,\n  action,\n  description,\n  ...props\n}) => {\n  const focusable = {\n    ...(onSelect && {\n      onFocus: useCallback(\n        event => {\n          event.stopPropagation();\n          onSelect(data);\n        },\n        [onSelect, data]\n      ),\n      tabIndex: props.disabled ? -1 : 0\n    })\n  };\n\n  return (\n    <div\n      {...focusable}\n      className={classnames('avatar-card', { selected })}\n      data-qa={`avatar-card-of-${label}`}\n      {...props}\n    >\n      <Avatar className=\"card-avatar\" alt={label} src={avatar.src}>\n        {avatar.initial || avatar.fallback}\n      </Avatar>\n      <span className=\"card-label\">{label}</span>\n      <div className=\"right-slot\">\n        {action && (\n          <span onClick={containEvent} className=\"action-slot\">\n            {action}\n          </span>\n        )}\n        {typeof description === 'string' && (\n          <LightTooltip placement=\"right\" title={description}>\n            <SvgIcon>\n              <Icon path={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction containEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nAvatarCard.propTypes = {\n  label: node,\n  selected: bool,\n  disabled: bool,\n  avatar: shape({\n    src: string,\n    fallback: node\n  }),\n  data: object,\n  onSelect: func,\n  action: node\n};\n","import * as Yup from 'yup';\n\nexport const mergeValidations = (...callbacks) => value => {\n  let error;\n\n  callbacks.forEach(provided => {\n    if (provided && typeof provided === 'function') {\n      error = provided(value);\n    }\n  });\n\n  return error;\n};\n\nexport const checkRequired = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkRequiredNotNullable = async value => {\n  try {\n    await Yup.string()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkEmail = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .email('Invalid email format.')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkPhoneNumber = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUnsignedInt = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[-]!$/, {\n        excludeEmptyString: true,\n        message: 'The parameter must be unsigned.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkName = value => {\n  if (!/^(?:[a-z_][a-z0-9_\\\\.]*)$/i.test(value) || (value && value.substr(-1) === '.')) {\n    return 'A valid MAS relative name is required.';\n  }\n};\n\nexport const checkFirstLetter = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[a-zA-Z].*/, {\n        excludeEmptyString: true,\n        message: 'First character must be a letter'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUuid = value => {\n  if (value) {\n    if (!/^[a-fA-F0-9-]+$/.test(value)) {\n      return 'Only hexadecimal values (0-9, a-f, A-F) and hyphens (\"-\") are allowed';\n    }\n    const copy = value.replace(/-/g, '');\n    if (copy.length !== 32) {\n      return 'A string of 32 hexadecimal with hyphens (\"-\") is required (ex: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)';\n    }\n  }\n};\n\nexport const noop = () => {};\n\nexport default {\n  merge: mergeValidations,\n  required: checkRequired,\n  required_not_null: checkRequiredNotNullable,\n  email: checkEmail,\n  phone: checkPhoneNumber,\n  unsigned_int: checkUnsignedInt,\n  unsigned_float: noop,\n  signed_float: noop,\n  masName: checkName,\n  firstCharLetter: checkFirstLetter,\n  uuid: checkUuid\n};\n","const DAY = 86400000;\nconst HOUR = 3600000;\nconst MINUTE = 60000;\nconst SECOND = 1000;\n\nexport const formatTimePeriod = (timeMillis) => {\n  let millisLeft = timeMillis;\n  const days = millisLeft / DAY;\n  millisLeft %= DAY;\n  const hours = millisLeft / HOUR;\n  millisLeft %= HOUR;\n  const minutes = millisLeft / MINUTE;\n  millisLeft %= MINUTE;\n  const seconds = millisLeft / SECOND;\n  millisLeft %= SECOND;\n\n  return [\n    days >= 1 ? `${Math.floor(days)}d` : null,\n    hours >= 1 ? `${Math.floor(hours)}h` : null,\n    minutes >= 1 ? `${Math.floor(minutes)}m` : null,\n    seconds >= 1 ? `${Math.floor(seconds)}s` : null,\n    millisLeft >= 1 ? `${Math.floor(millisLeft)}ms` : null\n  ].filter(Boolean).join(' ');\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function postInvocation(body) {\n  try {\n    const { data } = await RestClient.post('/invocation', body);\n\n    return { result: data.result, invocations: data.data.invocations };\n  } catch (e) {\n    return { result: 'fail', invocations: [], messages: e.messages };\n  }\n}\n\nexport function requestInvocation(uuid) {\n  return RestClient.get(`/invocation/${uuid}`);\n}\n\nexport async function fetchInvocation(uuid) {\n  try {\n    const response = await RestClient.get(`/invocation/${uuid}`);\n\n    return {\n      result: 'success',\n      invocation: response.data.data.invocations[0]\n    };\n  } catch (e) {\n    console.log(e); // eslint-disable-line\n    return { result: 'fail' };\n  }\n}\n\nexport async function fetchInvocationOutput(uuid) {\n  return RestClient.get(`/invocation/${uuid}/display`, {\n    page_size: 2147483645\n  });\n}\n\nexport async function invocationOutputPoller(uuid) {\n  let statusChecksCount = 0;\n  let pollerFinished = false;\n  let succeeded = false;\n\n  while (statusChecksCount < 10 && !pollerFinished) {\n    const invocationStatus = await sleep(fetchInvocation.bind(this, uuid)); // eslint-disable-line\n    statusChecksCount++;\n    succeeded = invocationStatus.invocation.status === 'SUCCEEDED';\n    pollerFinished = succeeded || invocationStatus.invocation.status === 'FAILED';\n  }\n\n  return succeeded ? fetchInvocationOutput(uuid) : Promise.resolve(null);\n}\n\nexport function parseInvocationResult(invocationOutput) {\n  const resultText = invocationOutput && invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n  const resultJsonString = (resultText || '').split('\\n')[1];\n  return resultJsonString ? JSON.parse(resultJsonString) : [];\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.shared;\n\nexport const jobsSelector = createSelector(localState, state => state.get('jobs'));\n\nexport const connectionsSelector = createSelector(localState, state => state.get('connections'));\n\nexport const jobsSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('jobs')\n); // eslint-disable-line\n\nexport const processesSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('processes')\n); // eslint-disable-line\n\nexport const globalFiltersSelector = createSelector(localState, state =>\n  state.get('globalFilters')\n); // eslint-disable-line\n","import { createSelector } from 'reselect';\n\n//\nexport const getCurrentUserName = createSelector(\n  state => state.session,\n  session => {\n    /** ImmutableJs object :( */\n    return session.get('currentUser').get('name');\n  }\n);\n\nexport const getCurrentUserDetails = createSelector(\n  state => state.session,\n  session => {\n    return session.get('currentUser').get('details');\n  }\n);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nexport function loadAllUsersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_USERS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_USERS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadUserThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USER, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USER, error));\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(GRANT_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(REVOKE_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function addUserToGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/grant`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, allUsers.data));\n\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function removeUserFromGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function deactivateUserThunk(user) {\n  return async dispatch => {\n    dispatch(creators.loading(DEACTIVATE_USER, user));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}/revoke`, {\n        groups: user.member_of\n      });\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(DEACTIVATE_USER, allUsers.data));\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DEACTIVATE_USER, error));\n\n      return error.data;\n    }\n  };\n}\n\nexport function createUserThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.username,\n      password: values.password,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_USER, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, refreshed.data));\n\n      dispatch(creators.success(CREATE_USER));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_USER, error));\n      return error?.response?.data;\n    }\n  };\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport function loadAllGroupsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_GROUPS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_GROUPS, error.data));\n\n      return error.data;\n    }\n  };\n}\n\nexport function loadGroupThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_GROUP, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${name}`);\n      dispatch(creators.success(LOAD_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_GROUP, error.data));\n    }\n  };\n}\n\nexport function createGroupThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.groupname,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_GROUP, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, refreshed.data));\n\n      dispatch(creators.success(CREATE_GROUP));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_GROUP, error));\n      return error?.response?.data;\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(GRANT_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(REVOKE_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function removeUsersFromGroupThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_USERS_FROM_GROUP, params));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`, {\n        groups: [params.group]\n      });\n\n      const group = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(REMOVE_USERS_FROM_GROUP, group.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_USERS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeSubGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_GROUPS_FROM_GROUP, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(REMOVE_GROUPS_FROM_GROUP, response.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_GROUPS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function addUsersToGroupThunk(params) {\n  return async dispatch => {\n    const { group, users } = params;\n\n    dispatch(creators.loading(ADD_USERS_TO_GROUP, params));\n\n    try {\n      await Promise.all(\n        users.map(async user => {\n          return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant`, {\n            groups: [group]\n          });\n        })\n      );\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(ADD_USERS_TO_GROUP, response.data));\n\n      return response.data;\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USERS_TO_GROUP, errorMsg));\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeGroupThunk(group) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_GROUP, group));\n\n    try {\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}`);\n      dispatch(creators.success(DELETE_GROUP));\n\n      dispatch(loadAllGroupsThunk());\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DELETE_GROUP, error));\n\n      return error.data;\n    }\n  };\n}\n","import * as Yup from 'yup';\n\nexport function getInitialValues(parameters) {\n  const initialValues = {};\n\n  parameters.map(parameter => {\n    initialValues[parameter.name] = parameter.deflt !== null ? parameter.deflt : '';\n    return null;\n  });\n\n  return initialValues;\n}\n\nexport function getValidationSchema(parameters) {\n  const validationSchema = {};\n\n  parameters.map(parameter => {\n    validationSchema[parameter.name] = Yup.string();\n\n    if (parameter.is_required) {\n      validationSchema[parameter.name].required('A value is required');\n    }\n\n    return null;\n  });\n}\n\nexport function formatParameters(values) {\n  const parameters = {};\n\n  Object.keys(values).map(value => {\n    if (typeof values[value] === 'string') {\n      if (values[value].length > 0 || values[value].trim()) {\n        parameters[value] = values[value];\n      }\n    } else if (typeof values[value] === 'object') {\n      if (values[value].name && (values[value].name.length > 0 || values[value].name.trim())) {\n        parameters[value] = values[value].name;\n      }\n    }\n\n    return null;\n  });\n\n  return parameters;\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  DESELECT_ALL,\n  LOAD_DB_EDITION,\n  LOAD_DB_VERSION,\n  LOAD_LICENSE_DELTA,\n  LOAD_NETWORK_EDGES,\n  LOAD_NETWORK_NODES,\n  LOAD_OS_TYPE,\n  LOAD_SERVER_DETAILS,\n  LOAD_USAGE,\n  LOAD_USAGE_STAT,\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\n\nexport function loadExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function deselectAllThunk() {\n  return dispatch => {\n    dispatch(creators.action(DESELECT_ALL));\n\n    return 'done';\n  };\n}\n\nexport function selectAllThunk() {\n  return function selectAll(dispatch, getState) {\n    const { rawEntries } = getState().executiveDashboard;\n\n    dispatch(creators.action(SELECT_ALL, rawEntries));\n\n    return 'done';\n  };\n}\n\nexport function toggleServerThunk(server) {\n  return function toggleServer(dispatch, getState) {\n    const { allServers } = getState().executiveDashboard;\n    let { selectedServers } = getState().executiveDashboard;\n\n    const svIndex = allServers.findIndex(sv => sv.name === server.name);\n\n    if (selectedServers.find(sv => sv.name === server.name)) {\n      selectedServers = selectedServers.filter(sv => sv.name !== server.name);\n    } else {\n      selectedServers = [...selectedServers, allServers[svIndex]];\n    }\n\n    selectedServers.sort((a, b) => a.nrCores - b.nrCores);\n\n    dispatch(creators.action(TOGGLE_SERVER, selectedServers));\n    return 'done';\n  };\n}\n\nexport function loadVirtualExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.VIRTUAL_EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function loadNetworkNodesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_NETWORK_NODES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/network/nodes`;\n      if (serverId) {\n        url = `${url}/dd?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_NETWORK_NODES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_NETWORK_NODES, error));\n    }\n  };\n}\n\nexport function loadNetworkEdgesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_NETWORK_EDGES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/network/edges`;\n      if (serverId) {\n        url = `${url}/dd?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_NETWORK_EDGES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_NETWORK_EDGES, error));\n    }\n  };\n}\n\nexport function loadServerDetailsThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SERVER_DETAILS));\n\n    try {\n      const response = await RestClient.get(`/dbpollster/dd_server?s_id=${serverId}`);\n      dispatch(creators.success(LOAD_SERVER_DETAILS, response.data.data[0]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SERVER_DETAILS, error));\n    }\n  };\n}\n\nexport function loadOSTypeThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OS_TYPE));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/os_type`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_os_type?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_OS_TYPE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OS_TYPE, error));\n    }\n  };\n}\n\nexport function loadDBEditionThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_EDITION));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/db_edition`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_db_edition?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_DB_EDITION, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_EDITION, error));\n    }\n  };\n}\n\nexport function loadDBVersionThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_VERSION));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/db_version`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_db_version?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_DB_VERSION, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_VERSION, error));\n    }\n  };\n}\n\nexport function loadUsageThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USAGE));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/usage`);\n      dispatch(creators.success(LOAD_USAGE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USAGE, error));\n    }\n  };\n}\n\nexport function loadUsageStat(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USAGE_STAT));\n\n    const serverPrefix = serverId ? 'dd_' : '';\n    const serverSuffix = serverId ? `?s_id=${serverId}` : '';\n    try {\n      const usageStatResponse = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/${serverPrefix}license_usage_stat${serverSuffix}`);\n      const data = (usageStatResponse.data.data || []).reduce((obj, item) => {\n        return Object.assign(obj, item);\n      }, {});\n      const payload = {\n        totalRisk: data.total_risk,\n        licenseCost: data.license_cost,\n        supportCost: data.support_cost,\n        unallocatedLicenses: data.unallocated_licenses,\n      };\n\n      dispatch(creators.success(LOAD_USAGE_STAT, payload));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USAGE_STAT, error));\n    }\n  };\n}\n\nexport function loadLicenseDeltaThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSE_DELTA));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/license_delta`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_license_delta?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_LICENSE_DELTA, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSE_DELTA, error));\n    }\n  };\n}\n","import React from 'react';\n\nimport { Text, Email, Integer, Password, PhoneNumber, BooleanSelect } from '../editors/Generic';\nimport {\n  ProcessSelect,\n  AccountSelect,\n  RSAKey,\n  FQName,\n  Variadic,\n  Multiline,\n  Replvalues,\n  Uuid\n} from '../editors/Custom';\n\nfunction extractParameter({ parameter, recieved, ...others }) {\n  const { type, ...additional } = parameter.editor;\n\n  return {\n    key: parameter.name,\n    label: parameter.label || parameter.name,\n    name: parameter.field_name || parameter.name,\n    required: parameter.is_required,\n    defaultValue: parameter.deflt || parameter.value,\n    description: parameter.description,\n    ...additional,\n    ...others\n  };\n}\n\nexport const TextParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Text {...passable} />;\n};\n\nexport const PasswordParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Password {...passable} />;\n};\n\nexport const PhoneNumberParameter = props => {\n  const passable = extractParameter(props);\n\n  return <PhoneNumber {...passable} />;\n};\n\nexport const BooleanParameter = props => {\n  const passable = extractParameter(props);\n\n  return <BooleanSelect {...passable} />;\n};\n\nexport const IntegerParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Integer {...passable} />;\n};\n\nexport const EmailParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Email {...passable} />;\n};\n\nexport const ProcessParameter = props => {\n  const passable = extractParameter(props);\n\n  return <ProcessSelect {...passable} />;\n};\n\nexport const AccountParameter = props => {\n  const passable = extractParameter(props);\n\n  return <AccountSelect protocols={[]} {...passable} />;\n};\n\nexport const VariadicParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Variadic recieved={props.recieved} {...passable} />;\n};\n\nexport const ReplvaluesParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Replvalues recieved={props.recieved} {...passable} />;\n};\n\nexport const FQNameParameter = props => {\n  const passable = extractParameter(props);\n\n  return <FQName recieved={props.recieved} {...passable} />;\n};\n\nexport const RSAKeyParameter = props => {\n  const passable = extractParameter(props);\n\n  return <RSAKey {...passable} />;\n};\n\nexport const MultilineParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Multiline {...passable} />;\n};\n\nexport const UuidParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Uuid {...passable} />;\n};\n","import { createSelector } from 'reselect';\n\nexport const getQuery = createSelector(\n  state => state.invocation_viewer.query,\n  query => query\n);\n\nexport const getInvocation = createSelector(\n  state => state.invocation_viewer.invocation,\n  invocation => invocation\n);\n\nexport const getInvocationStatus = createSelector(getInvocation, invocation => invocation.status);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../../entities/actions';\nimport { entitySelectors } from '../../../entities/selectors';\n\nimport { Loader, ParameterLoader } from 'shared/components/loaders';\nimport { Center } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nexport const Ensure = connect(\n  (state, { type }) => {\n    const selector = entitySelectors[type];\n\n    return selector(state);\n  },\n  {\n    request: fetchEntity\n  }\n)(Ensurer);\n\nfunction Ensurer({ children, fresh, pipe = false, type, inlineLoader, data, status, request }) {\n  useEffect(() => {\n    if (status === 'fetching') return;\n    if (status === 'fetching') return;\n\n    if (status === 'fetched' && !fresh) return;\n\n    request(type);\n  }, []);\n\n  if (!status || status === 'not-fetched') {\n    return null;\n  }\n\n  if (status === 'fetching' && !pipe) {\n    const Loading = inlineLoader ? ParameterLoader : Loader;\n\n    return (\n      <Center>\n        <Loading>Loading {type}...</Loading>\n      </Center>\n    );\n  }\n\n  if (status === 'failed' && !pipe) {\n    return (\n      <Result type=\"fail\">\n        <Result.Text>Could not fetch {type} data!</Result.Text>\n      </Result>\n    );\n  }\n\n  if (typeof children === 'function') {\n    return <>{children({ status, data, request: () => request(type) })}</>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Ensure;\n","export const LINUX_OS_PRIMARY_COLOR = '#55c667';\nexport const LINUX_OS_SECONDARY_COLOR = '#3c8b48';\nexport const WINDOWS_OS_PRIMARY_COLOR = '#fde725';\nexport const WINDOWS_OS_SECONDARY_COLOR = '#a98d35';\n\nexport const SE_DB_PRIMARY_COLOR = '#55c667';\nexport const SE_DB_SECONDARY_COLOR = '#3c8b48';\nexport const EE_DB_PRIMARY_COLOR = '#fde725';\nexport const EE_DB_SECONDARY_COLOR = '#a98d35';\n\nexport const DB_VERSION_COLOR_PALETTE = [\n  {\n    color: '#55c667',\n    secondaryColor: '#3c8b48'\n  }, {\n    color: '#fde725',\n    secondaryColor: '#a98d35'\n  },\n  {\n    color: '#404788',\n    secondaryColor: '#3c416f'\n  }, {\n    color: '#238a8d',\n    secondaryColor: '#287072'\n  }, {\n    color: '#404788',\n    secondaryColor: '#3c416f'\n  }, {\n    color: '#238a8d',\n    secondaryColor: '#287072'\n  }, {\n    color: '#fdc300',\n    secondaryColor: '#cda10d'\n  }, {\n    color: '#fd3725',\n    secondaryColor: '#cd291a'\n  }, {\n    color: '#d525fd',\n    secondaryColor: '#b91edc'\n  }, {\n    color: '#25a7fd',\n    secondaryColor: '#2085c7'\n  }\n];\n","import React, { useState, useCallback } from 'react';\n\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { array, func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SearchableList.local.scss';\n\nexport const SearchableList = ({ items, children, filter, variant, visibleScroll }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const [query, setQuery] = useState('');\n  const filtered = items.filter(item => filter(item, query));\n\n  return (\n    <>\n      <div className=\"search-input-slot\">\n        <SimpleSearchInput\n          data-qa=\"users-search-input\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <div\n        className={classnames('searchable-list-slot', {\n          visibleScroll,\n          scrolled,\n          [variant]: variant\n        })}\n      >\n        <ul\n          className={classnames('list', {\n            [variant]: variant\n          })}\n          onWheel={onWheel}\n        >\n          {filtered.map((item, index, list) => (\n            <li key={index} className=\"list-item\">\n              {children(item, index, list)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nSearchableList.propTypes = {\n  items: array,\n  children: func,\n  filter: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nSearchableList.defaultProps = {\n  items: [],\n  filter: (item, query) => item === query\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.session;\n\nexport const authorizationSelector = createSelector(localState, state =>\n  state.get('authorization')\n);\n\nexport const currentUserSelector = createSelector(localState, state => state.get('currentUser'));\n\nexport const loginSelector = createSelector(localState, state => state.get('login'));\n\nexport const beVersionSelector = createSelector(localState, state => state.get('beVersion'));\nexport const beLicenceSelector = createSelector(localState, state => state.get('beLicence'));\nexport const beHealthSelector = createSelector(localState, state => state.get('beHealth'));\n","import { createSelector } from 'reselect';\n\nexport const ENTITY_TYPES = [\n  {\n    type: 'account',\n    title: 'CONNECTION',\n    dataEnclosure: 'accounts',\n    query: '*'\n  },\n  {\n    type: 'constant',\n    title: 'CONSTANT',\n    dataEnclosure: 'constants',\n    query: '*'\n  },\n  {\n    type: 'exception',\n    title: 'EXCEPTION',\n    dataEnclosure: 'exceptions',\n    query: '*'\n  },\n  {\n    type: 'form',\n    title: 'FORM',\n    dataEnclosure: 'forms',\n    query: '*'\n  },\n  {\n    type: 'namespace',\n    title: 'NAMESPACE',\n    query: '*',\n    dataEnclosure: 'namespaces'\n  },\n  {\n    type: 'process',\n    query: '*',\n    title: 'PROCESS',\n    dataEnclosure: 'processes'\n  },\n  {\n    type: 'prototype',\n    query: '*',\n    title: 'PROTOTYPE',\n    dataEnclosure: 'prototypes'\n  },\n  {\n    type: 'schedule',\n    title: 'SCHEDULE',\n    dataEnclosure: 'schedules',\n    query: '*'\n  },\n  {\n    type: 'type',\n    query: '*',\n    title: 'TYPE',\n    dataEnclosure: 'data_types'\n  }\n];\n\nexport const ENTITY_TYPES_FETCH = ENTITY_TYPES.concat({\n  type: 'alias'\n});\n\nconst ROOT_ENTITY = {\n  name: 'root',\n  entity: 'root',\n  description: 'Main container for all of the entities within MAS.'\n};\n\nexport const getBreadcrumbs = state => state.entities.breadcrumbs;\n\nfunction collectData(data, { type, dataEnclosure }, namespacesWithMeta) {\n  let collection = data[type]?.data?.data?.[dataEnclosure];\n\n  if (collection) {\n    const aliases = data.alias?.data?.data.aliases\n      .filter(item => item.alias_type === type)\n      .map(item => {\n        const { entity, alias, alias_type, ...props } = item;\n\n        /**\n         * Merging properties that the alias does not have,\n         * with properties the entity it aliases, has.\n         * Will avoid having to reconcile this at the usage level.\n         * And keep aliases viewable here.\n         */\n        const aliasedEntity = data[type]?.data?.data[dataEnclosure].find(e => e.name === alias);\n\n        return { ...(aliasedEntity && aliasedEntity), alias, ...props, entity: alias_type };\n      });\n\n    if (aliases) {\n      /** Concat the aliases for this collection with the collection itself */\n      collection = data[type]?.data?.data[dataEnclosure].concat(aliases);\n    }\n\n    /* filter out colllection items where appearance meta is hidden */\n\n    /** FIXME:\n     *  what about aliases ? If their aliasing root entity would have meta apearance hidden, should it as well ?\n     *  */\n    if (Array.isArray(namespacesWithMeta)) {\n      collection = collection.reduce((acc, dataItem) => {\n        const ownNamespace = namespacesWithMeta.find(ns => dataItem.name.startsWith(ns.name));\n\n        if (ownNamespace) {\n          if (ownNamespace?.meta?.appearance === 'Hidden') {\n            return acc;\n          }\n\n          return acc.concat([\n            {\n              ...dataItem,\n              meta: {\n                ...dataItem.meta,\n                ...ownNamespace.meta\n              }\n            }\n          ]);\n        }\n\n        return acc.concat(dataItem);\n      }, []);\n    }\n  }\n\n  return collection;\n}\n\nexport const entitySelectors = ENTITY_TYPES.reduce((selectors, def) => {\n  selectors[def.type] = createSelector(\n    state => state.entities.data,\n    state => state.entities.fetch_status,\n    state => namespaceWithMetaSelector(state),\n    (data, status, namespacesWithMeta) => {\n      return {\n        data: collectData(data, def, namespacesWithMeta),\n        status: status?.[def.type]\n      };\n    }\n  );\n\n  return selectors;\n}, {});\n\nexport const namespaceWithMetaSelector = createSelector(\n  state => state.entities.data,\n  data => {\n    const dataNamespaces = data.namespace?.data?.data?.namespaces;\n    if (Array.isArray(dataNamespaces)) {\n      return dataNamespaces.filter(\n        item => item.meta && item.meta.appearance && item.meta.appearance !== 'Normal'\n      );\n    }\n    return [];\n  }\n);\n\nexport const getFilteredEntities = createSelector(\n  state => state.entities.data,\n  state => state.entities.filters,\n  state => namespaceWithMetaSelector(state),\n  (data, filters, namespacesWithMeta) => {\n    const types =\n      filters.type === 'all'\n        ? ENTITY_TYPES\n        : ENTITY_TYPES.filter(type => type.type === filters.type || type.type === 'namespace');\n    return types\n      .reduce((accumulator, type) => {\n        return accumulator.concat(collectData(data, type, namespacesWithMeta));\n      }, [])\n      .filter(Boolean);\n  }\n);\n\nexport const getEntitiesAsHashMap = createSelector(\n  getFilteredEntities,\n  state => state.entities.filters,\n  (entities, filters) => {\n    let filteredEntities = entities;\n    if (filters.type !== 'all' && filters.type !== 'namespace') {\n      filteredEntities = entities.filter(item => item.entity !== 'namespace');\n    }\n    if (filters.search) {\n      filteredEntities = filteredEntities.filter(item => {\n        if (filters.type !== 'all' && filters.type !== 'namespace') {\n          const domainArray = item.name.split('.');\n          const shortName = domainArray[domainArray.length - 1];\n          return shortName.includes(filters.search);\n        }\n        return item.name.includes(filters.search);\n      });\n    }\n    return filteredEntities.reduce((accumulator, entity) => {\n      const paths = entity.name.includes('.') ? entity.name.split('.') : [];\n      paths.forEach((path, index) => {\n        const key = paths.slice(0, index).join('.');\n        if (!accumulator[key]) {\n          const findEntity = entities.find(item => item.name === key);\n          accumulator[key] = findEntity || {\n            name: key,\n            notPersisted: true\n          };\n        }\n      });\n      accumulator[entity.name] = entity;\n\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const getEntities = createSelector(\n  getBreadcrumbs,\n  getEntitiesAsHashMap,\n  (breadcrumbs, entitiesMap) => {\n    const entities = Object.values(entitiesMap);\n    const roots = Object.keys(entitiesMap)\n      .filter((entityName, index, names) => {\n        return (\n          !entityName.includes('.') &&\n          (names.find(name => name.startsWith(`${entityName}.`)) ||\n            entitiesMap[entityName].entity === 'namespace')\n        );\n      })\n      .map(key => ({\n        ...entitiesMap[key],\n        isSelected: breadcrumbs.includes(entitiesMap[key].name)\n      }));\n    const columns = breadcrumbs.map((breadcrumb, index) => {\n      return {\n        level: index,\n        path: index === 0 ? '.' : breadcrumbs.slice(0, index).join('.'),\n        rows: []\n      };\n    });\n    columns.push({\n      level: breadcrumbs.length,\n      path: `${breadcrumbs.join('.')}.`,\n      rows: []\n    });\n\n    return entities.reduce((accumulator, entity) => {\n      const path = entity.name.split('.');\n      if (accumulator.length < path.length) {\n        return accumulator;\n      }\n      const bucket = accumulator[path.length - 1];\n      if (!bucket) {\n        return accumulator;\n      }\n      if (bucket.path === '.') {\n        bucket.rows = roots;\n        return accumulator;\n      }\n\n      if (!entity.name.startsWith(bucket.path)) {\n        return accumulator;\n      }\n      const name = entity.name.replace(bucket.path, '').replace('.', '');\n      const entityLevel = entity.name.split('.').length - 1;\n      bucket.rows.push({\n        ...entity,\n        name,\n        isSelected: breadcrumbs[entityLevel] ? breadcrumbs[entityLevel] === name : false\n      });\n\n      return accumulator;\n    }, columns);\n  }\n);\n\nexport const getSelectedEntity = createSelector(\n  getEntitiesAsHashMap,\n  getBreadcrumbs,\n  (entities, breadcrumbs) => {\n    const path = breadcrumbs.join('.');\n    const entity = entities[path];\n    return entity?.notPersisted ? ROOT_ENTITY : entity;\n  }\n);\n\nexport const namespaceChildrenListSelector = createSelector(\n  getSelectedEntity,\n  getEntitiesAsHashMap,\n  (selectedEntity, entities) => {\n    const list = Object.keys(entities);\n    const namespace = `${selectedEntity.name}.`;\n\n    return list.filter(name => name.startsWith(namespace) && name !== namespace);\n  }\n);\n","export function mapUsersData(payload) {\n  return payload.data.users;\n}\n\nexport function mapLoadedUser(payload) {\n  return payload.data.users[0]; // the first returned user is the one in question\n}\n\nexport function mapSortInsensitive(payload) {\n  return payload.slice().sort(function sortInsensitive(a, b) {\n    return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n  });\n}\n","import { getOutputText } from './getOutputText';\n\nexport const copyTextToClipboard = (textToCopy) => {\n  makeCopyToClipboard(textToCopy);\n};\n\nexport const copyToClipboard = (output, invocation) => {\n  const text = getOutputText(output, invocation);\n  makeCopyToClipboard(text);\n};\n\nfunction makeCopyToClipboard(text) {\n  navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\n    if (result.state === 'granted' || result.state === 'prompt') {\n      /* write to the clipboard */\n      navigator.clipboard.writeText(text).then(\n        () => {\n          /* successful */\n          console.log('[copyTextToClipboard] Copied:', text); // eslint-disable-line\n        },\n        () => {\n          /* write failed */\n          console.warn('[copyTextToClipboard] --- unable to write to clipboard!'); // eslint-disable-line\n        }\n      );\n    } else {\n      legacyMethod(text);\n    }\n  }, legacyMethod.bind(this, text));\n}\n\nfunction legacyMethod(text) {\n  const textArea = document.createElement('textarea');\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.classList.add('copyToClipboardInput');\n  textArea.focus();\n  textArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textArea);\n  console.log('[copyTextToClipboard-legacy] Copied:', text); // eslint-disable-line\n}\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, tabs } = this.props;\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={tabs.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func,\n  tabs: array\n};\n\nNavigationTab.defaultProps = {\n  tabs: []\n};\n\nexport default NavigationTab;\n","export const getGroupDescription = (name, allGroups) => {\n  const groupDetails = allGroups.find(group => group.name === name);\n\n  return groupDetails?.description || '';\n};\n","import React from 'react';\nimport { func, string } from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './NavigationTab.local.scss';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, protocol } = this.props;\n\n    const data = [\n      { label: 'Workload', value: 'workload' },\n      TopSqlStatementsUtil.isAllowedProtocol(protocol) ? { label: 'Top SQL statements', value: 'topsql' } : false,\n      SystemExplorerFeatureUtil.isSessionsAllowed(protocol) ? { label: 'Sessions', value: 'sessions' } : false,\n      SystemExplorerFeatureUtil.isObjectsAllowed(protocol) ? { label: 'Objects', value: 'objects' } : false,\n      SystemExplorerFeatureUtil.isStorageAllowed(protocol) ? { label: 'Storage', value: 'storage' } : false\n    ].filter(Boolean);\n\n    if (protocol === 'ORACLE') {\n      data.push({ label: 'License reporting', value: 'license' });\n    }\n\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={data.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {data.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func\n};\n\nexport default NavigationTab;\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function postAccount(body) {\n  try {\n    const { data } = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function patchAccount(name, body) {\n  try {\n    const { data } = await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function deleteAccount(name) {\n  try {\n    const { data } = await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`);\n    return { result: data.result, messages: data.messages };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport function getConnection(name) {\n  return RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchConnection(name, body) {\n  return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postFile(file) {\n  return RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_ACCOUNTS, file);\n}\n","import { DbmsType } from '../../SystemExplorerFeatureUtil';\n\nconst ALLOWED_DBMS = [DbmsType.ORACLE, DbmsType.POSTGRES, DbmsType.MYSQL, DbmsType.MSSQL];\nconst ALLOWED_FOR_CHARTS = [DbmsType.ORACLE];\n\nconst PROCESS_ENDPOINT_MAP = {\n    [DbmsType.ORACLE]: 'vendita.oracle.rdbms.util.monitor.session.performance.topsql',\n    [DbmsType.POSTGRES]: 'vendita.pgsql.rdbms.session.topsql_postgres',\n    [DbmsType.MYSQL]: 'vendita.mysql.rdbms.session.topsql_mysql',\n    [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.tuning.top50longrunningsql',\n};\n\nconst DBMS_PROPERTY_NAME_MAP = {\n    [DbmsType.ORACLE]: 'dbms',\n    [DbmsType.POSTGRES]: 'dbms',\n    [DbmsType.MYSQL]: 'dbms',\n    [DbmsType.MSSQL]: 'dbconn',\n};\n\nexport class TopSqlStatementsUtil {\n  static isAllowedProtocol(dbms) {\n    return ALLOWED_DBMS.includes(dbms);\n  }\n\n  static isChartSupported(dbms) {\n    return ALLOWED_FOR_CHARTS.includes(dbms);\n  }\n\n  static getEndpoint(dbms) {\n    return PROCESS_ENDPOINT_MAP[dbms] || '';\n  }\n\n  static getDbmsPropertyName(dbms) {\n    return DBMS_PROPERTY_NAME_MAP[dbms] || '';\n  }\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiSourceRepository,\n  mdiFolderHome,\n  mdiLanConnect,\n  mdiHexagonMultipleOutline,\n  mdiCubeOutline\n} from '@mdi/js';\n\nimport extractDefault from './extractDefault';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'float',\n  'integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter',\n  'string',\n  'unsigned_float',\n  'unsigned_integer'\n];\n\nexport default (parameter, dataTypes, prototypes) => {\n  parameter = { ...parameter };\n  parameter.position = parameter.meta.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    parameter.is_supported = false;\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.value = 'TEXT';\n  }\n\n  parameter.label = getLabel(parameter.name);\n  parameter.icon = getIcon(parameter.name);\n\n  return parameter;\n};\n\nconst getLabel = name => {\n  return labels[name] || name;\n};\n\nconst getIcon = name => {\n  return icons[name] || null;\n};\n\nconst labels = {\n  target_working_dir: 'Working directory',\n  target_shell: 'Target server SSH',\n  repo_shell: 'Repo server SSH',\n  repo_working_dir: 'Repo directory',\n  form: 'Database form',\n  dbms: 'Target DBMS',\n  vsphere_account: 'vSphere account',\n  vcenterservername: 'vCenter server name',\n  partitioning_methods: 'Virtualization Partitioning Technologies'\n};\n\nconst icons = {\n  target_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  target_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiSourceRepository} />\n    </SvgIcon>\n  ),\n  dbms: (\n    <SvgIcon>\n      <Icon path={mdiHexagonMultipleOutline} />\n    </SvgIcon>\n  ),\n  form: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  vsphere_account: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  ),\n  vcenterservername: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  )\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Field } from 'formik';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiLanConnect } from '@mdi/js';\n\nimport './TextField.local.scss';\n\nexport const TextField = ({ parameter, disabled }) => {\n  const validate = value => {\n    if (parameter.is_required) {\n      if (!value) {\n        return 'This Field is Required';\n      }\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <MUITextField\n            className={disabled ? 'disabled' : ''}\n            {...field}\n            variant=\"outlined\"\n            type=\"text\"\n            fullWidth\n            disabled={disabled}\n            error={meta.error && meta.touched}\n            helperText={meta.touched && meta.error ? meta.error : undefined}\n            label={parameter.label}\n            placeholder={parameter.label}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {parameter.icon ? (\n                    parameter.icon\n                  ) : (\n                    <SvgIcon>\n                      <Icon path={mdiLanConnect} />\n                    </SvgIcon>\n                  )}\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <LightTooltip placement=\"bottom-end\" title={parameter.description}>\n                  <InputAdornment position=\"end\">\n                    <SvgIcon>\n                      <Icon path={mdiHelpCircleOutline} />\n                    </SvgIcon>\n                  </InputAdornment>\n                </LightTooltip>\n              )\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Field } from 'formik';\nimport { array, object } from 'prop-types';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { mdiLanConnect } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport { Dropdown } from 'shared/components';\n\nimport './DropdownField.local.scss';\n\nfunction filterDbmsByShell(options, formValues) {\n  options = options || [];\n  if (!formValues || !formValues.target_shell) {\n    return options;\n  }\n\n  const shellAccount = formValues.target_shell;\n  return options.filter(dbmsAccount => dbmsAccount.address === shellAccount.address);\n}\n\nconst ADDITIONAL_OPTIONS_FILTERS = {\n  dbms: filterDbmsByShell,\n};\n\nexport const DropdownField = ({\n  parameter,\n  datatypes,\n  rawAccounts,\n  forms,\n  prototypes,\n  disabled,\n  currentFormValues\n}) => {\n  const dataType = datatypes.find(datatype => datatype.name === parameter.data_type);\n  let protocols = null;\n\n  if (dataType) {\n    if (\n      dataType.name.startsWith('mas0000.sys.account.conn.') ||\n      dataType.name === 'mas0000.sys.account.vsphere'\n    ) {\n      if (Array.isArray(dataType.protocol) && dataType.protocol.length > 0) {\n        protocols = [];\n        dataType.protocol.forEach(protocol => {\n          if (protocol === 'DBMS') {\n            // This is quick and dirty until we have a configuration-driven solution\n            // in the UI.\n            protocols = [...protocols, 'MSSQL', 'MYSQL', 'ORACLE', 'PGSQL'];\n          } else {\n            protocols.push(protocol);\n          }\n        });\n\n        if (currentFormValues && ADDITIONAL_OPTIONS_FILTERS[parameter.name]) {\n          const additionalFilter = ADDITIONAL_OPTIONS_FILTERS[parameter.name];\n          rawAccounts = additionalFilter(rawAccounts, currentFormValues);\n        }\n\n        const options = rawAccounts\n          .map(account => ({ name: account.name, value: account }))\n          .filter(option => protocols === null || protocols.includes(option.value.protocol));\n\n        const validate = value => {\n          if (parameter.is_required) {\n            if (!value) {\n              return 'This Field is Required';\n            }\n          }\n        };\n\n        return (\n          <Field name={parameter.name} validate={validate}>\n            {({ field, meta }) => {\n              return (\n                <Dropdown\n                  onSelect={(index, opt) => {\n                    field.onChange({ target: { name: parameter.name, value: opt.value } });\n                  }}\n                  disabled={disabled}\n                  target={(meta2, actions) => (\n                    <MUITextField\n                      className={disabled ? 'disabled' : ''}\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      variant=\"outlined\"\n                      fullWidth\n                      label={parameter.label}\n                      placeholder={parameter.label}\n                      {...field}\n                      value={field.value ? field.value.name : ''}\n                      onChange={() => {}}\n                      onClick={actions.toggle}\n                      ref={meta2.ref}\n                      error={meta.error && meta.touched}\n                      helperText={meta.touched && meta.error ? meta.error : undefined}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {parameter.icon ? (\n                              parameter.icon\n                            ) : (\n                              <SvgIcon>\n                                <Icon path={mdiLanConnect} />\n                              </SvgIcon>\n                            )}\n                          </InputAdornment>\n                        ),\n\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <ArrowDropDownIcon />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                  )}\n                  items={options}\n                />\n              );\n            }}\n          </Field>\n        );\n      }\n    }\n  } else {\n    const prototype = prototypes.find(p => p.name === parameter.data_type);\n\n    if (prototype) {\n      const options = forms\n        .filter(form => form.prototype === prototype.name)\n        .map(form => ({ name: form.name, value: form.name }));\n\n      const validate = value => {\n        if (parameter.is_required) {\n          if (!value) {\n            return 'This Field is Required';\n          }\n        }\n      };\n\n      return (\n        <Field name={parameter.name} validate={validate}>\n          {({ field, meta }) => {\n            return (\n              <Dropdown\n                onSelect={(index, opt) => {\n                  field.onChange({ target: { name: parameter.name, value: opt.value } });\n                }}\n                disabled={disabled}\n                target={(meta2, actions) => (\n                  <MUITextField\n                    className={disabled ? 'disabled' : ''}\n                    type=\"text\"\n                    readOnly\n                    disabled\n                    variant=\"outlined\"\n                    fullWidth\n                    label={parameter.label}\n                    placeholder={parameter.label}\n                    {...field}\n                    value={field.value ? field.value : ''}\n                    onChange={() => {}}\n                    onClick={actions.toggle}\n                    ref={meta2.ref}\n                    error={meta.error && meta.touched}\n                    helperText={meta.touched && meta.error ? meta.error : undefined}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          {parameter.icon ? (\n                            parameter.icon\n                          ) : (\n                            <SvgIcon>\n                              <Icon path={mdiLanConnect} />\n                            </SvgIcon>\n                          )}\n                        </InputAdornment>\n                      ),\n\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <ArrowDropDownIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                )}\n                items={options}\n              />\n            );\n          }}\n        </Field>\n      );\n    }\n  }\n\n  return <div>Currently not supported input</div>;\n};\n\nDropdownField.propTypes = {\n  parameter: object,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  prototypes: array\n};\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport { ListOutput } from '../ListOutput/ListOutput';\nimport { sendToEmail } from '../../utils/sendToEmail';\nimport { copyToClipboard } from '../../utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './OutputModal.local.scss';\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const OutputModal = ({\n  open,\n  actions,\n  output,\n  invocation,\n  modalDetails,\n  processName,\n  messages\n}) => {\n  let content;\n\n  const [message, setMessage] = useState(messages[0]);\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  let interval;\n\n  useEffect(() => {\n    if (messages && messages.length > 1) {\n      if (!open) {\n        clearInterval(interval);\n      } else {\n        let index = 1;\n        interval = setInterval(() => {\n          setMessage(messages[index]);\n          if (index + 1 < messages.length) {\n            index += 1;\n          }\n        }, 4000);\n\n        return () => clearInterval(interval);\n      }\n    }\n  }, [open]);\n\n  if (!output && invocation.status !== 'SUCCEEDED' && invocation.status !== 'FAILED') {\n    content = (\n      <>\n        <Center>\n          <Loader>{message}</Loader>\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (invocation.status === 'FAILED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput type=\"fail\" output={output} errors={invocation.errors} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'SUCCEEDED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput output={output} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n        <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '75vh',\n          minHeight: '75vh',\n          width: '75vh',\n          height: '75vh'\n        }}\n      >\n        <ModalHeader\n          title={modalDetails.title}\n          desc={invocation.status === 'FAILED' ? 'An error orccured!' : 'Output'}\n          avatar={\n            <Avatar\n              className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n            >\n              {modalDetails.icon}\n            </Avatar>\n          }\n        />\n        {content}\n      </Paper>\n    </Modal>\n  );\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postSchedule(body) {\n  return RestClient.post('schedule', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function getSchedule(name) {\n  return RestClient.get(`schedule/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchSchedule(name, body) {\n  return RestClient.patch(`schedule/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","export function mapAccountsTree(data) {\n  // data is split into 3 levels,\n  // first level is defined by `protocol`\n  // we find root nodes by matching protocols.\n  const roots = data.reduce(splitIntoRootsByProtocol, []);\n  roots.forEach(root => {\n    // define the servers map\n    // all server and database objects for this protocol\n    root.servers = root.nodes.reduce(splitIntoRootsByAddress, {});\n    const servers = Object.keys(root.servers);\n    servers.forEach(name => {\n      const server = root.servers[name];\n      server.databases = server.nodes.reduce(splitIntoRootsByDatabase, {});\n    });\n  });\n  return roots;\n}\nexport function splitIntoRootsByProtocol(acc, item) {\n  const protocolBlacklist = ['SSH'];\n  const { protocol } = item;\n  if (protocolBlacklist.includes(protocol)) {\n    return acc;\n  }\n  if (!(item.special && item.special.database)) {\n    return acc;\n  }\n  const root = acc.find(r => r.name === protocol);\n  if (root) {\n    root.nodes = [...root.nodes, item];\n  } else {\n    acc.push({\n      name: item.protocol,\n      path: item.protocol,\n      type: 'dbms',\n      nodes: [item],\n      servers: []\n    });\n  }\n  return acc;\n}\nfunction splitIntoRootsByAddress(serversMap, item) {\n  const { address } = item;\n  const existingEntry = serversMap[address];\n  if (existingEntry) {\n    existingEntry.nodes = [...existingEntry.nodes, item];\n  } else {\n    serversMap[address] = {\n      name: item.address,\n      path: `${item.protocol}--${item.address}`,\n      type: 'server',\n      nodes: [item]\n    };\n  }\n  return serversMap;\n}\nfunction splitIntoRootsByDatabase(databaseMap, item) {\n  const {\n    special: { database: name }\n  } = item;\n  databaseMap[name] = {\n    name,\n    path: `${item.protocol}--${item.address}--${name}`,\n    node: item\n  };\n  return databaseMap;\n}\n\n/**\n *\n * @param {*} content // /account call data\n *\n * This will resturcture the list of accounts into a list of dbms entries with servers and databases.\n */\n\nexport function mapAccountsNewStructure(content, protocols) {\n  const accounts = { raw: content };\n\n  let protocolsArr = protocols.map(p => p.name);\n\n  if (protocolsArr.length === 0) {\n    protocolsArr = ['CREDENTIAL', 'ILOM', 'SSH'];\n  }\n\n  accounts.databases = content.filter(account => account.special.database);\n  accounts.dbms = [];\n\n  /* eslint-disable */\n  accounts.databases.forEach(function resolver(entry) {\n    /**\n     * Add a path def to the database entry\n     * path descriptions are made here, to mimic somewhat the old mapping.\n     * Keep other properties.\n     */\n    const database = {\n      ...entry,\n      path: `${entry.protocol}--${entry.address}--${entry.special.database}`\n    };\n\n    let dbms = accounts.dbms.find(dbms => dbms.name === database.protocol);\n\n    const dbServer = accounts.raw.find(\n      account => protocolsArr.includes(account.protocol) && account.address === database.address\n    );\n\n    let server;\n\n    // a server entry exists\n    if (dbServer) {\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        ...dbServer,\n        databases: [database]\n      };\n    } else {\n      // db does not have an associated server connection so create a 'placeholder' for server\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        address: database.address,\n        databases: [database]\n      };\n    }\n\n    if (!dbms) {\n      /**\n       * Add a new dbms entry\n       *\n       * path descriptions are made here, to mimic somewhat the old mapping.\n       */\n      accounts.dbms.push({\n        name: database.protocol,\n        protocol: database.protocol,\n        path: database.protocol,\n        databases: [database],\n        servers: [server]\n      });\n\n      return;\n    }\n\n    /**\n     * DBMS exists. Update it\n     */\n    dbms.databases.push(database);\n\n    // find server entr\n    let dbmsServerEntry = dbms.servers.find(sv => sv.address === database.address);\n\n    if (!dbmsServerEntry) {\n      dbms.servers.push({ ...server, databases: [database] });\n    } else {\n      if (dbmsServerEntry.databases) {\n        dbmsServerEntry.databases.push(database);\n      } else {\n        dbmsServerEntry.databases = [database];\n      }\n    }\n  }, accounts);\n\n  // find all existing servers\n  const allServers = content.filter(entry => protocolsArr.includes(entry.protocol));\n\n  // check if servers have a database\n  // if they don't add them in a DBMS called \"OTHER\".\n  // will be removed from there as soon as they get a database\n  allServers.forEach(server => {\n    const exists = accounts.databases.find(db => db.address === server.address);\n\n    if (!exists) {\n      const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n\n      if (otherIndex > -1) {\n        accounts.dbms[otherIndex].servers.push({\n          path: `OTHER--${server.address}`,\n          ...server,\n          databases: []\n        });\n      } else {\n        accounts.dbms.push({\n          name: 'OTHER',\n          path: 'OTHER',\n          protocol: 'OTHER',\n          servers: [{ path: `OTHER--${server.address}`, ...server, databases: [] }]\n        });\n      }\n    }\n  });\n\n  const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n  if (otherIndex > -1 && accounts.dbms[otherIndex].servers.length === 0) {\n    accounts.dbms.splice(otherIndex, 1);\n  }\n  return accounts;\n}\n\nexport function mapProtocols(protocols) {\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return allowedProtocols;\n}\n\nexport function mapUpdateDBStatus(existingDb, databases, isLoading) {\n  let statuses = [...existingDb];\n\n  databases.forEach(function(db) {\n    const index = existingDb.findIndex(d => d.name === db.name);\n    if (index > -1) {\n      statuses[index] = { ...db, loading: isLoading };\n    } else {\n      statuses = [...statuses, { ...db, loading: isLoading }];\n    }\n  });\n\n  return statuses;\n}\n\nexport function mapLicenseReport(reportData) {\n  const result = (reportData || []).reduce((acc, currentItem) => {\n    if (currentItem.DETECTED_USAGES > 0) {\n      acc.USED[currentItem.NAME] = _mapUsedLicense(currentItem);\n    } else {\n      acc.UNUSED[currentItem.NAME] = currentItem;\n    }\n    acc.FEATURES.push(currentItem);\n    return acc;\n  }, { UNUSED: {}, USED: {}, FEATURES: [] });\n  console.log(result);\n  return result;\n}\n\nfunction _mapUsedLicense(license) {\n  return {\n    USAGES: license.DETECTED_USAGES,\n    VERSION: license.VERSION,\n    LAST_USE: license.LAST_USAGE_DATE,\n    FIRST_USE: license.FIRST_USAGE_DATE\n  }\n}\n","export const SystemExplorerViewMode = {\n  TILES: 'TILES',\n  TABLE: 'TABLE',\n};\n","/**\n * This file will be updated with any new module (adding the module reducer)\n */\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { sessionEffects, sessionReducer } from 'session';\nimport { dashboardReducer } from 'dashboard';\nimport { sharedEffects, sharedReducer } from 'shared/store/';\nimport { createReducer } from 'shared/lib/redux-utils';\n\nimport usersManagerReducer from 'users-manager/store/reducers';\nimport groupsReducer from 'users-manager/groups/store/reducer';\nimport explorerReducer from 'explorer/store/reducers';\nimport executiveDashboardReducer from 'executive-dashboard/store/reducers';\nimport licenseAllocationReducer from 'license-allocation/store/reducers';\nimport * as entities from 'entities/reducer';\nimport * as daemon from 'dashboard/store/reducers/daemon';\n\nimport * as invocations from 'job-process/store/reducer';\n\nimport { api } from './middlewares';\nimport { reducer as core } from './reducers';\n\nconst saga = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n  whitelist: ['entities']\n  /*\n  //Well I just whitelist entities,\n  since it's the one that has all expensive network requests\n  */\n};\n\nexport const configStore = () => {\n  const appReducer = persistReducer(persistConfig, combineReducers({\n    core,\n    session: sessionReducer,\n    dashboard: dashboardReducer,\n    shared: sharedReducer,\n    usersManager: usersManagerReducer,\n    groups: groupsReducer,\n    entities: createReducer(entities),\n    explorer: explorerReducer,\n    invocation_viewer: createReducer(invocations),\n    executiveDashboard: executiveDashboardReducer,\n    daemon: createReducer(daemon),\n    licenseAllocation: licenseAllocationReducer,\n  }));\n\n  const reducer = (state, action) => {\n    // clear redux store on logout action\n    if (action.type === '[session] LOGOUT__SUCCESS') {\n      const { routing } = state;\n      state = { routing };\n      window.location.reload();\n    }\n    return appReducer(state, action);\n  };\n\n  const effects = [...sessionEffects, ...sharedEffects];\n\n  const store = createStore(reducer, composeWithDevTools(applyMiddleware(saga, thunk, api)));\n\n  effects.forEach(effect => {\n    saga.run(effect);\n  });\n\n  return store;\n};\n\nexport default configStore();\n","export const LICENSABLE_FEATURE_DEFAULT_COLOR = '#176BA0';\nexport const LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR = '#E8F9F5';\n\nexport const LICENSABLE_FEATURES_COLORS = [\n  {\n    color: '#176BA0',\n    secondaryColor: '#E8F9F5',\n    type: 'DCO'\n  },\n  {\n    color: '#1AC9E6',\n    secondaryColor: '#e8fafc',\n    type: 'AC'\n  },\n  {\n    color: '#6DF0D2',\n    secondaryColor: '#f0fdfb',\n    type: 'AS'\n  },\n  {\n    color: '#7D3AC1',\n    secondaryColor: '#f2ebf9',\n    type: 'DV'\n  },\n  {\n    color: '#EA7369',\n    secondaryColor: '#fbedf7',\n    type: 'MT'\n  },\n  {\n    color: '#1DE4BD',\n    secondaryColor: '#e8fcf8',\n    type: 'DD'\n  },\n  {\n    color: '#EF7E32',\n    secondaryColor: '#fdf2eb',\n    type: 'DT'\n  },\n  {\n    color: '#F0A58F',\n    secondaryColor: '#fdf6f4',\n    type: 'SE2'\n  },\n  {\n    color: '#C02323',\n    secondaryColor: '#f9e9e9',\n    type: 'P'\n  },\n  {\n    color: '#DB4CB2',\n    secondaryColor: '#fbedf7',\n    type: 'IMD'\n  },\n  {\n    color: '#4c6bdb',\n    secondaryColor: '#a8d1f1',\n    type: 'EE'\n  },\n  {\n    color: '#399137',\n    secondaryColor: '#a6eaa5',\n    type: 'RAT'\n  },\n  {\n    color: '#e846f3',\n    secondaryColor: '#e68bee',\n    type: 'DDM'\n  },\n  {\n    color: '#f31414',\n    secondaryColor: '#f85959',\n    type: 'LS'\n  },\n  {\n    color: '#0872fd',\n    secondaryColor: '#589dfa',\n    type: 'AA'\n  },\n  {\n    color: '#217303',\n    secondaryColor: '#3f722c',\n    type: 'SP'\n  }\n];\n","import React, { createContext, useContext } from 'react';\n\nconst Context = createContext();\n\nexport default function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nSwitch.Case = Case;\n","export const ROOT_NODE_ID = 1;\nexport const ROOT_NODE = { id: ROOT_NODE_ID, label: 'MAS', title: 'MAS server', color: '#2f80ed', shape: 'circle', widthConstraint: 100 };\nexport const SERVER_NODE_COLOR = '#219653';\nexport const SERVER_NODE_SHAPE = 'circle';\nexport const DB_NODE_COLOR = '#f2c94c';\nexport const DB_NODE_SHAPE = 'circle';\nexport const NODE_SIZE_MULTIPLIER = 10;\nexport const BASE_NETWORK_GRAPH_OPTIONS = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: '#000000'\n  },\n  height: '500px'\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchProtocols() {\n  try {\n    const { data } = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n    return { result: data.result, protocols: data.data.protocols };\n  } catch (e) {\n    return { result: 'fail', protocols: [] };\n  }\n}\n","import React from 'react';\nimport { Switch } from 'shared/components';\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { useFormikContext } from 'formik';\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { chunk } from 'lodash';\n\n/** accepts recived parameters for invocations that are already scheduled */\nexport const ProcessParameters = ({ recieved = {}, editable }) => {\n  const { values } = useFormikContext();\n\n  /**\n   * Returns a parameter list from a given list of parameters, and a Process name\n   * This could be turned into a connected component that can take the processes from entities for itself.\n   * */\n  function selectParametersForProcess(processName, processes) {\n    const process = processes.find(item => item.name === processName);\n\n    if (process) {\n      return process.parameters.map(p => ({ ...p, value: recieved[p.name], disabled: !editable }));\n    }\n    return [];\n  }\n\n  function currentValue(allValues, parameter) {\n    if (allValues[parameter.name] !== undefined) {\n      return allValues[parameter.name];\n    }\n\n    if (allValues?.parameters && allValues?.parameters[parameter.name] !== undefined) {\n      return allValues?.parameters[parameter.name];\n    }\n\n    return undefined;\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Parameters</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Switch value={!!values.process}>\n          <Switch.Case value={false}>\n            <Column xs={12}>\n              <p>Select a process to edit parameters</p>\n            </Column>\n          </Switch.Case>\n          <Switch.Case value>\n            <Ensure type=\"form\">\n              {({ data: forms }) => (\n                <Ensure type=\"type\">\n                  {({ data: datatypes }) => (\n                    <Ensure type=\"prototype\">\n                      {({ data: prototypes }) => (\n                        <Ensure type=\"process\">\n                          {({ data }) => {\n                            const parameters = selectParametersForProcess(values.process, data);\n\n                            const normalized = parameters.map(parameter => {\n                              return normalize(parameter, datatypes, prototypes, forms);\n                            });\n\n                            /*  << +- 1 of '/' to toggle\n                            const notSupported = false;\n                            /* /\n\n                            // In old app, if at least one normalized parameter exists that is not supported,\n                            // the whole process is disregarded.\n\n                            const notSupported = normalized.some(p => !p.is_supported);\n                            // */\n\n                            const filtered = normalized\n                              .filter(p => p.editor.type !== 'hidden')\n                              .sort((a, b) => a.position - b.position); // sort parameters based on the meta.position\n\n                            // if (notSupported || filtered.length === 0) {\n                            if (filtered.length === 0) {\n                              return (\n                                <Row>\n                                  <Column>\n                                    <p>\n                                      This process contains unsuported parameters with no defaults,\n                                      and cannot be run from the web interface.\n                                    </p>\n                                  </Column>\n                                </Row>\n                              );\n                            }\n\n                            const chunks = chunk(filtered, 2);\n\n                            return chunks.map((params, index) => (\n                              <Row key={index} spacing={3}>\n                                {params.map(parameter => (\n                                  <Column key={parameter.name} xs={6}>\n                                    <Parameter\n                                      normalized={parameter}\n                                      value={currentValue(values, parameter)}\n                                      disabled={!editable}\n                                      recieved={recieved}\n                                    />\n                                  </Column>\n                                ))}\n                              </Row>\n                            ));\n                          }}\n                        </Ensure>\n                      )}\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          </Switch.Case>\n        </Switch>\n      </Section.Content>\n    </Section>\n  );\n};\n","import extractDefault from './extractDefault';\n\nimport { sortBy } from 'lodash';\n\nimport check from '../editors/field-level-validations';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'string',\n  'integer',\n  'float',\n  'uuid',\n  'unsigned_float',\n  'unsigned_integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter'\n];\n\nexport function space_begone(name) {\n  return name.replace(/\\s/g, '___');\n}\n\nexport function space_summon(name) {\n  return name.replace(/___/g, ' ');\n}\n\nexport default function normalize(param, dataTypes, prototypes, forms) {\n  const parameter = { ...param };\n\n  defaults(parameter, dataTypes, prototypes, forms);\n\n  parameter.editor = defineEditor(parameter, dataTypes, prototypes, forms);\n\n  parameter.field_name = space_begone(parameter.name);\n\n  maybeDisabled(parameter);\n\n  return parameter;\n}\n\nfunction maybeDisabled(parameter) {\n  const { appearance } = parameter.meta;\n\n  if (appearance === 'Grayed' && parameter.editor) {\n    parameter.editor.disabled = true;\n  }\n}\n\nfunction defaults(parameter, dataTypes, prototypes) {\n  parameter.position = parameter.meta?.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n\n  // hardcode stuff for replvalues params\n  if (parameter.data_type === 'optional_dict' && parameter.name === 'replvalues') {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n  } else if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    /**\n     * TODO: this was done to help exclude parameters like, any\n     * Or other stuff that cannot be parsed correctly\n     *\n     * Will remove them for now.\n     * Any types mostly are multiline input data, so we'll default them to that.\n     */\n    parameter.is_supported = false;\n\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          /**\n           * Allow support for all types of parameters, defaulting to a Text multiline.\n           */\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n\n          parameter.editor = {\n            type: 'string',\n            multiline: true,\n            deflt: ''\n          };\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.deflt = 'TEXT';\n  }\n\n  // hardcode default value for oformat parameter to \"TEXT\"\n  // was decided to be done on the UI because for the BE alot of processess had to be manually changed\n  // and at the moment we are pressed on time\n  if (parameter.name === 'oformat') {\n    parameter.deflt = parameter.value ? parameter.value : 'TEXT';\n  }\n}\n\nfunction parseProtocols(protocols) {\n  if (!protocols) {\n    return [];\n  }\n\n  if (!Array.isArray(protocols)) {\n    return [protocols];\n  }\n\n  return protocols.reduce((bucket, protocol) => {\n    // quick and dirty (as he said)\n    if (protocol === 'DBMS') {\n      bucket.push('MSSQL', 'MYSQL', 'ORACLE', 'PGSQL');\n    } else {\n      bucket.push(protocol);\n    }\n\n    return bucket;\n  }, []);\n}\n\nfunction defineEditor(parameter, dataTypes, prototypes, forms) {\n  if (!parameter.is_supported) {\n    return { type: 'hidden', disabled: true, value: '' };\n    // return { type: 'text', disabled: true, value: '' };\n  }\n\n  const { meta } = parameter;\n  const { editor: metaEditor, appearance } = meta;\n\n  if (appearance === 'Hidden') {\n    return { type: 'hidden' };\n  }\n\n  if (metaEditor === 'Hidden') {\n    return { type: 'text', disabled: true };\n  }\n\n  const prototype = prototypes.find(proto => proto.name === parameter.data_type);\n\n  if (prototype) {\n    const options = forms\n      .filter(form => form.prototype === prototype.name)\n      .map(form => ({ label: form.name, value: form.name }));\n    return {\n      type: 'select',\n      options\n    };\n  }\n\n  const dataType = dataTypes.find(type => type.name === parameter.data_type);\n\n  if (!dataType) {\n    return { type: 'text', disabled: true, readOnly: true };\n  }\n\n  if (dataType.enumerations !== null && dataType.enumerations.length > 0) {\n    const enumerations = sortBy(dataType.enumerations, 'weight');\n    const options = enumerations.map(({ label }) => ({ label, value: label }));\n\n    return { type: 'select', options };\n  }\n\n  if (\n    dataType.name.startsWith('mas0000.sys.account.conn.') ||\n    dataType.name === 'mas0000.sys.account.vsphere'\n  ) {\n    return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n  }\n\n  switch (dataType.name) {\n    case 'ename':\n      switch (metaEditor) {\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'fqname' };\n      }\n    case 'string':\n      switch (metaEditor) {\n        case 'password':\n          return { type: 'password' };\n        case 'fqname':\n        case 'ename':\n          return { type: 'fqname' };\n        case 'multiline':\n          // return { type: 'text', multiline: true };\n          return { type: 'multiline' };\n        case 'key':\n          return { type: 'rsa', multiline: true };\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'text' };\n      }\n    case 'boolean':\n      return { type: 'boolean' };\n    case 'integer':\n      return { type: 'number' };\n    case 'float':\n      return { type: 'number', validate: [check.signed_float] };\n    case 'uuid':\n      return { type: 'uuid' };\n    case 'unsigned_float':\n      return { type: 'number', validate: [check.unsigned_float] };\n    case 'unsigned_integer':\n      return { type: 'number', validate: [check.unsigned_int] };\n    case 'mas0000.os.exec.system_user':\n      return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n    case 'mas0000.sys.email_address':\n      return { type: 'email' };\n    case 'mas0000.sys.phone_number':\n      return { type: 'phone' };\n    case 'mas0000.sys.process.process':\n      return { type: 'process' };\n    case 'mas0000.sys.process.variadic_parameter':\n      return { type: 'variadic_parameter' /** needsSelectedProcessName */ };\n    case 'optional_dict':\n      // hardcord for replvalues\n      if (parameter.name === 'replvalues') {\n        return { type: 'replvalues' };\n      }\n      return { type: 'text', multiline: true };\n    default:\n      return { type: 'text', multiline: true };\n  }\n\n  // return { type: 'hidden' };\n}\n","import React from 'react';\nimport Groups from '../../components/notification-groups/notification-groups';\nimport Users from '../../components/notification-users/notification-users';\nimport Events from '../../components/notification-events/notification-events';\nimport NotificationList from '../../components/notification-list/notification-list';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport { Button } from 'shared/components/controls';\n\nimport classnames from 'classnames';\n\nimport './notifications.scss';\nimport { RestClient } from 'shared/lib/rest';\n\nexport class Notifications extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { recievedData } = props;\n\n    const startFullLog = [1, 3, 5, 7];\n    const completionFullLog = [2, 3, 6, 7];\n    const abnormalFullLog = [4, 6, 7];\n\n    this.state = {\n      groupsData: [],\n      usersData: [],\n      jobStart: {\n        notice: false,\n        fullLog: startFullLog.includes(recievedData.events)\n      },\n      jobCompletion: {\n        notice: false,\n        fullLog: completionFullLog.includes(recievedData.events)\n      },\n      abnormalEvent: {\n        notice: false,\n        fullLog: abnormalFullLog.includes(recievedData.events)\n      },\n      isEditing: false\n    };\n  }\n\n  async componentDidMount() {\n    const { recievedData = { users: [] } } = this.props;\n\n    RestClient.get('/group', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.groups) {\n        this.setState({\n          groupsData: res.data.data.groups.map(item => {\n            return { data: item, selected: false, displayIcons: false };\n          })\n        });\n      }\n    });\n    RestClient.get('/user', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.users) {\n        this.setState({\n          usersData: res.data.data.users.map(item => {\n            return {\n              data: item,\n              selected: recievedData.users.includes(item.name),\n              display: false\n            };\n          })\n        });\n      }\n    });\n  }\n\n  render() {\n    const { usersData, groupsData, jobStart, jobCompletion, abnormalEvent, isEditing } = this.state;\n    const selectedGroup = this.getSelectedGroup();\n    const areUsersSelected = usersData.find(item => item.selected);\n    const isClearActionAvailable = this.checkIfAllUsersSelectedCurrentGroup();\n    return (\n      <div\n        className={classnames('monitor-and-notifications', {\n          disabled: this.props.disabled\n        })}\n      >\n        {isEditing ? (\n          <div className=\"notifications-editor\">\n            <Groups onSelect={this.onSelectGroup} groups={groupsData} />\n            <Users\n              onSelect={this.onSelectUser}\n              onSelectUserAction={this.onSelectUserAction}\n              isClearActionAvailable={isClearActionAvailable}\n              users={usersData}\n              isGroupSelected={!!selectedGroup}\n              eventTypeIcons={this.getEventTypeIcons()}\n            />\n            <div className=\"right-side-container\">\n              <Events\n                jobStart={jobStart}\n                jobCompletion={jobCompletion}\n                abnormalEvent={abnormalEvent}\n                onSelect={this.onSelectEventType}\n                areUsersSelected={areUsersSelected}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  this.props.onApply(mappedState(this.state));\n                  this.toggleApplyButton();\n                }}\n              >\n                Apply\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <NotificationList\n            users={usersData}\n            eventTypeIcons={this.getEventTypeIcons()}\n            toggleApplyButton={this.toggleApplyButton}\n            disabled={this.props.disabled}\n          />\n        )}\n      </div>\n    );\n  }\n\n  getEventTypeIcons = () => {\n    const { jobStart, jobCompletion, abnormalEvent } = this.state;\n    const icons = [];\n    if (jobStart.notice || jobStart.fullLog) {\n      icons.push(<PlayCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (jobCompletion.notice || jobCompletion.fullLog) {\n      icons.push(<CheckCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (abnormalEvent.notice || abnormalEvent.fullLog) {\n      icons.push(<ErrorOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    return icons;\n  };\n\n  toggleApplyButton = () => {\n    this.setState(state => ({ isEditing: !state.isEditing }));\n  };\n\n  checkIfAllUsersSelectedCurrentGroup = () => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      return this.state.usersData\n        .filter(item => selectedGroup.data.users.indexOf(item.data.name) !== -1)\n        .every(item => item.selected);\n    }\n  };\n\n  onSelectGroup = group => {\n    this.setState(state => ({\n      groupsData: state.groupsData.map(item => ({\n        ...item,\n        selected: group.data.name === item.data.name\n      })),\n      usersData: state.usersData.map(item => ({\n        ...item,\n        display: group.data.users.indexOf(item.data.name) !== -1\n      }))\n    }));\n  };\n\n  onSelectUser = user => {\n    /* eslint-disable react/no-access-state-in-setstate */\n    const usersData = this.state.usersData.map(item => {\n      if (item.data.name === user.data.name) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    this.setState({ usersData, groupsData: this.setFlagGroupsIfContainSelectedUser(usersData) });\n  };\n\n  onSelectUserAction = shouldClear => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      const usersData = this.state.usersData.map(item => {\n        if (selectedGroup.data.users.indexOf(item.data.name) !== -1) {\n          return { ...item, selected: !shouldClear };\n        }\n        return item;\n      });\n      this.setState({\n        usersData,\n        groupsData: this.setFlagGroupsIfContainSelectedUser(usersData)\n      });\n    }\n  };\n\n  setFlagGroupsIfContainSelectedUser = usersData => {\n    return this.state.groupsData.map(group => ({\n      ...group,\n      displayIcons: !!usersData.find(user => {\n        return user.selected && user.data.member_of.indexOf(group.data.name) !== -1;\n      })\n    }));\n  };\n\n  onSelectEventType = (type, key) => {\n    this.setState(state => ({ [type]: { ...state[type], [key]: !state[type][key] } }));\n  };\n\n  getSelectedGroup() {\n    return this.state.groupsData.find(item => item.selected);\n  }\n}\n\nexport default Notifications;\n\n/**\n * State mapper for backend request.\n *\n * events is a composite number,\n *\n * notice unsuported for now\n * groups are redundant now that the ui preselects all users in a group.\n */\n/* eslint-disable no-unused-vars */\nfunction mappedState({ groupsData, usersData, jobStart, jobCompletion, abnormalEvent }) {\n  const users = usersData.filter(user => user.selected).map(user => user.data.name);\n\n  let events = 0;\n\n  if (jobStart.fullLog) {\n    events += 1;\n  }\n\n  if (jobCompletion.fullLog) {\n    events += 2;\n  }\n\n  if (abnormalEvent.fullLog) {\n    events += 4;\n  }\n\n  return { users, events };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getProcess(name) {\n  return RestClient.get(`/process/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchProcess(name, body) {\n  return RestClient.patch(`/process/${name}`, body);\n}\n","import React from 'react';\nimport { LightTooltip } from '../../../shared/components';\nimport './ChartTooltip.local.scss';\n\nexport const ChartTooltip = (data) => {\n  if (!data || !data.payload || data.payload.length < 3) {\n    return '';\n  }\n\n  const assignedValue = data.payload[0].value;\n  const usedValue = data.payload[1].value;\n  const ownedValue = data.payload[2].value;\n  return (\n    <div className=\"exec-dashboard-chart-tooltip\">\n      <LightTooltip placement=\"bottom-end\" title=\"Hello, World\">\n        <div className=\"exec-dashboard-chart-tooltip-content\">\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Assigned</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{assignedValue}</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Used</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{usedValue}</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Owned</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{ownedValue}</div>\n          </div>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","export const DISPLAY_FORMAT = 'L';\nexport const ISO_FORMAT = 'YYYY-MM-DD';\nexport const ISO_MONTH_FORMAT = 'YYYY-MM'; // TODO delete this line of dead code on next breaking change\n\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const VERTICAL_ORIENTATION = 'vertical';\nexport const VERTICAL_SCROLLABLE = 'verticalScrollable';\n\nexport const NAV_POSITION_BOTTOM = 'navPositionBottom';\nexport const NAV_POSITION_TOP = 'navPositionTop';\n\nexport const ICON_BEFORE_POSITION = 'before';\nexport const ICON_AFTER_POSITION = 'after';\n\nexport const INFO_POSITION_TOP = 'top';\nexport const INFO_POSITION_BOTTOM = 'bottom';\nexport const INFO_POSITION_BEFORE = 'before';\nexport const INFO_POSITION_AFTER = 'after';\n\nexport const ANCHOR_LEFT = 'left';\nexport const ANCHOR_RIGHT = 'right';\n\nexport const OPEN_DOWN = 'down';\nexport const OPEN_UP = 'up';\n\nexport const DAY_SIZE = 39;\nexport const BLOCKED_MODIFIER = 'blocked';\nexport const WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nexport const FANG_WIDTH_PX = 20;\nexport const FANG_HEIGHT_PX = 10;\nexport const DEFAULT_VERTICAL_SPACING = 22;\n\nexport const MODIFIER_KEY_NAMES = new Set(['Shift', 'Control', 'Alt', 'Meta']);\n","import React from 'react';\n\nimport { WantParameter } from './wishes';\n\nexport function RepeatableParameter({ normalized, ...others }) {\n  return <WantParameter parameter={normalized} {...others} />;\n}\n\nexport const Parameter = ({ normalized, ...others }) => {\n  if (normalized.is_repeatable) {\n    return <RepeatableParameter {...others} normalized={normalized} />;\n  }\n\n  return <WantParameter {...others} parameter={normalized} />;\n};\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './simple-search-input.local.scss';\n\nexport const SimpleSearchInput = ({ value, onChange, ...props }) => {\n  return (\n    <div className=\"search-input\">\n      <i className=\"search-icon-slot\">\n        <SearchIcon fontSize=\"default\" />\n      </i>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"search-input-control\"\n        placeholder=\"Search\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nSimpleSearchInput.propTypes = {\n  value: string,\n  onChange: func\n};\n\nexport default SimpleSearchInput;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport './Header.local.scss';\n\nexport const Header = ({ title, children, stretchContent }) => (\n  <header className={`header ${stretchContent ? 'stretched-content' : ''}`}>\n    { title && <h1 className=\"header-title\">{title}</h1>}\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.dashboard;\n\nexport const filterStatusSelector = createSelector(localState, state => state.get('filterStatus'));\n","import { filterStatusActions } from './filter-status.action';\n\nimport { checkDaemon } from 'shared/api/daemon';\n\nexport const actions = {\n  ...filterStatusActions\n};\n\n/** TODO: The Above actions should be expanded to the new structure at some point */\n\nexport function checkDeamonStatus() {\n  return function daemon_thunk(dispatch) {\n    dispatch({\n      type: 'DAEMON_STATUS',\n      promise: checkDaemon()\n    });\n  };\n}\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDns } from '@mdi/js';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport './AddServerCard.local.scss';\n\nexport const AddServerCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Server\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewServerContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewServer = ({ server = { protocol: 'SSH' }, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const { actions } = useContext(ModalContext);\n  const formRef = useRef();\n\n  useEffect(() => {\n    fetchProtocols().then(resp => {\n      setState({\n        loading: false,\n        result: resp.result,\n        protocols: resp.protocols || []\n      });\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Add New Server\"\n        desc=\"Input the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading protocols list</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <ServerForm\n                server={server}\n                handleSubmission={reloadAccounts}\n                protocols={state.protocols}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Paper.Content>\n                <Result>\n                  <Result.Text>Could not load protocols list.</Result.Text>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button color=\"primary\" onClick={actions.close}>\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewServerContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewServer);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDatabase } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Paper, Center } from 'shared/components/layout';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport './AddDatabaseCard.local.scss';\n\nexport const AddDatabaseCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Database\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewDatabaseContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewDatabase = ({ account, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Add New Database\"\n        desc=\"Input the database connection information\"\n        formikRef={formRef}\n      />\n\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading Required Protocols and Privilege Modes</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <DatabaseForm\n                protocols={state.protocols}\n                modes={state.modes}\n                account={account}\n                handleSubmission={reloadAccounts}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Center>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load required protocols or privilege modes list.\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewDatabaseContainer = connect(\n  state => () => {\n    const path = state.explorer.state.path.split('--');\n    return {\n      account: {\n        protocol: path[0],\n        address: path[1]\n      }\n    };\n  },\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewDatabase);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { postFile } from 'shared/api/accounts';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { downloadFile } from 'shared/lib/download-file/download-file';\nimport { CONSTANTS } from '../../../config';\n\nimport './ImportCSV.local.scss';\n\nexport const ImportCSV = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Import from CSV\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <ImportCSVContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const ImportCSVFile = ({ reloadAccounts }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState('');\n  const fileName = selectedFile?.name || 'No file chosen';\n\n  const onChangeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadFile = () => {\n    if (!selectedFile) {\n      setResult('error');\n\n      return;\n    }\n    setResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedFile);\n\n    postFile(data)\n      .then(() => {\n        setResult('');\n        reloadAccounts();\n      })\n      .catch(() => {\n        // at the current BE version, even though the call is a success\n        // a \"false\" error is returned, so the reload account call should be made\n        setResult('');\n        reloadAccounts();\n      });\n  };\n\n  return (\n    <Paper\n      style={{\n        width: '50vw',\n        height: '50vh'\n      }}\n    >\n      <ModalHeader icon={<PostAddIcon />} title=\"Import CSV\" />\n      <Switch value={result}>\n        <Switch.Case value=\"\">\n          <div className=\"container\">\n            <label htmlFor=\"file-upload\" className=\"csv-file-upload\">\n              Choose file\n              <input type=\"file\" id=\"file-upload\" name=\"csv\" accept=\".csv\" onChange={onChangeHandler} />\n            </label>\n            <LimitlessTooltip placement=\"bottom\" title={fileName}>\n              <span className=\"file-name\">{fileName}</span>\n            </LimitlessTooltip>\n          </div>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => downloadFile(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_CSV_TEMPLATE)}>\n                Download template\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button onClick={uploadFile}>Upload</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"loading\">\n          <Center>\n            <Loader>Uploading file...</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value=\"error\">\n          <Result type=\"fail\">\n            <Result.Text>You forgot to select a file</Result.Text>\n          </Result>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => setResult('')}>Back</Button>\n            </Paper.Footer.Left>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const ImportCSVContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(ImportCSVFile);\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function deleteEntity(name, type) {\n  try {\n    const { data } = await RestClient.delete(`/${type}/${name}`);\n\n    return { result: data.result };\n  } catch (e) {\n    return { result: 'fail' };\n  }\n}\n\nexport function deleteInvocation(uuid) {\n  return RestClient.delete(`/invocation/${uuid}`);\n}\n","export function mapScheduledNames(allScheduled = []) {\n  const names = allScheduled.reduce((acc, entry) => {\n    const nameArr = entry.name.split('.');\n    const name = nameArr[nameArr.length - 1];\n    acc.push(name);\n    return acc;\n  }, []);\n\n  return names;\n}\n","import React from 'react';\nimport { bool, node, string, array, func } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiContentSave } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport './ActionCard.local.scss';\n\nexport class ActionCard extends React.PureComponent {\n  render() {\n    const {\n      settings,\n      status,\n      icon,\n      label,\n      addOnly,\n      options,\n      onClick,\n      readOnlyOptions,\n      lastBackup,\n      type = '',\n      statusInfo = ''\n    } = this.props;\n\n    return (\n      <div className={classnames('action-card', { addable: addOnly })}>\n        <header>\n          {lastBackup && (\n            <div className=\"last-backup\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiContentSave} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{lastBackup}</span>\n            </div>\n          )}\n          {settings && <div className=\"settings\">{settings}</div>}\n        </header>\n        <div className=\"main-icon\" onClick={onClick} role=\"presentation\">\n          {status && (\n            <LightTooltip placement=\"bottom\" title={capitalizeFirstLetter(statusInfo)}>\n              <div className={`status ${status} ${type}`} />\n            </LightTooltip>\n          )}\n          {icon}\n        </div>\n        <div className=\"main-label\">{label}</div>\n        {options &&\n          options.map((option, index) => (\n            <div\n              className={classnames('option', { disabled: option.disabled })}\n              key={`${option.label}-${index}`}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n            </div>\n          ))}\n        {readOnlyOptions &&\n          readOnlyOptions.map(option => (\n            <div\n              className=\"option presentation\"\n              key={option.label}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              {option.fillable && option.percentage && (\n                <div className=\"filled\" style={{ width: `${option.percentage}%` }} />\n              )}\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n              {option.percentage && <div className=\"end-icon\">{option.percentage}%</div>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nActionCard.propTypes = {\n  settings: node,\n  icon: node,\n  label: string,\n  addOnly: bool,\n  options: array,\n  onClick: func,\n  status: string,\n  readOnlyOptions: array\n};\n\nexport default ActionCard;\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './CardsLayout.local.scss';\n\nexport class CardsLayout extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"container\">{children}</div>;\n  }\n}\n\nCardsLayout.propTypes = {\n  children: node\n};\n\nexport default CardsLayout;\n","import React from 'react';\n\nexport function want(map, Unresolved = () => null, keygen = key => key) {\n  function settler(props) {\n    const key = keygen(props);\n    return map[key] ?? Unresolved;\n  }\n\n  return settler;\n}\n\nexport function wantComponent(settler) {\n  function Picker(props) {\n    const Picked = settler(props);\n\n    return <Picked {...props} />;\n  }\n\n  return Picker;\n}\n","import React, { useRef, useState } from 'react';\nimport { string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, Form, Formik } from 'formik';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, Input } from 'shared/components/controls';\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Center } from 'shared/components';\nimport './ChangePassword.local.scss';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const ChangePassword = ({ user, useLinkTrigger }) => {\n  const [open, setOpen] = useState(false);\n  /**\n   * Backend call result\n   */\n  const [result, setResult] = useState({ done: false, error: undefined });\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult({ done: false, error: undefined });\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const parseError = error => {\n    if (\n      error?.response?.data?.messages &&\n      error.response.data.messages.length > 0 &&\n      error.response.data.messages[0]?.text\n    ) {\n      return error.response.data.messages[0]?.text.split('\\n')[0];\n    }\n\n    return 'Password Change Failed!';\n  };\n\n  return (\n    <>\n      {!useLinkTrigger && (\n        <Button color=\"primary\" onClick={modalActions.open}>\n          Change Password\n        </Button>\n      )}\n      {useLinkTrigger && (\n        <a role=\"presentation\" onClick={modalActions.open}>\n          Change Password\n        </a>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '600px',\n            height: '450px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-password\">\n                <GroupIcon />\n              </Avatar>\n            }\n            title=\"Change Password\"\n            formikRef={formRef}\n          />\n          {result.done ? (\n            <>\n              <Center>\n                <Result type={result.error ? 'fail' : 'success'}>\n                  <Result.Text>{result.error ? result.error : 'Password Changed!'}</Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </>\n          ) : (\n            <Formik\n              initialValues={{\n                password: '',\n                confirm: ''\n              }}\n              validate={values => {\n                const errors = {};\n\n                if (!values.password) {\n                  errors.password = 'Field is required';\n                }\n\n                if (!values.confirm) {\n                  errors.confirm = 'Please reenter your new password';\n                }\n\n                if (values.password !== values.confirm) {\n                  errors.confirm = 'Passwords do not match';\n                }\n\n                if (values.password) {\n                  if (/[$\\\\/\":;']/.test(values.password)) {\n                    errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n                  } else if (values.password.length < 8) {\n                    errors.password = 'Password must contain at least eight characters';\n                  } else if (!/[a-z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a lower case letter (ex: a, b, etc.)';\n                  } else if (!/[A-Z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a upper case letter (ex: A, B, etc.)';\n                  } else if (!/[0-9]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n                  } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n                  }\n                }\n\n                return errors;\n              }}\n              onSubmit={async (values, actions) => {\n                actions.setSubmitting(true);\n\n                try {\n                  await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`, {\n                    password: values.password\n                  });\n\n                  actions.setSubmitting(false);\n                  setResult({ done: true });\n                } catch (e) {\n                  actions.setSubmitting(false);\n                  setResult({ done: true, error: parseError(e) });\n                }\n              }}\n              innerRef={formRef}\n            >\n              {({ dirty, isSubmitting, isValid, handleSubmit }) => (\n                <>\n                  <Paper.Content scrollable>\n                    <Form className=\"password-form\">\n                      <Row>\n                        <Field name=\"password\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                required\n                                label=\"Password\"\n                                placeholder=\"New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                      <Row>\n                        <Field name=\"confirm\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                required\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                label=\"Confirm Password\"\n                                placeholder=\"Confirm New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                    </Form>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        disabled={!dirty || !isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </>\n              )}\n            </Formik>\n          )}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nChangePassword.propTypes = {\n  user: string\n};\n\nexport const ChangePasswordContainer = connect(state => {\n  const user = selectedUser(state);\n\n  return { user: user.name };\n})(ChangePassword);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import React from 'react';\n\nimport { OptionItem } from '../OptionItem/OptionItem';\n\nexport const OptionsList = ({ options }) => {\n  return options.map(option => <OptionItem key={option.name} option={option} />);\n};\n","import { creators } from 'shared/lib/redux-utils';\nimport { LOAD_AVAILABLE_SERVERS, LOAD_DB_LICENSES, LOAD_LICENSE_TARGETS, LOAD_LICENSES } from '../actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nconst licensesInfoMock = {\n  license_id: 1,\n  product_name: 'Oracle ADV',\n  product_id: 1,\n  metric: 1,\n  lic_total: 5,\n  lic_assigned: 3,\n  lic_avail: 2,\n};\n\nconst licenseTargetsMock = {\n  server_id: 1,\n  server: 'Oracle Base',\n  database: 'ORA112SE',\n  quantity: 5,\n};\n\nexport function loadLicenseAllocationThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSES));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO);\n      dispatch(creators.success(LOAD_LICENSES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSES, error));\n    }\n  };\n}\n\nexport function loadDbLicensesThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_LICENSES));\n    try {\n      // const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO, { db });\n      // const licenseData = JSON.parse(response.data.data);\n      dispatch(creators.success(LOAD_DB_LICENSES, [licensesInfoMock]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_LICENSES, error));\n    }\n  };\n}\n\nexport function loadLicenseTargetsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSE_TARGETS));\n    try {\n      // const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO, { db });\n      // const licenseData = JSON.parse(response.data.data);\n      dispatch(creators.success(LOAD_LICENSE_TARGETS, [licenseTargetsMock]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSE_TARGETS, error));\n    }\n  };\n}\n\nexport function loadAvailableServersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_AVAILABLE_SERVERS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.AVAILABLE_SERVERS);\n      const availableServersData = response.data.data;\n      dispatch(creators.success(LOAD_AVAILABLE_SERVERS, availableServersData));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_AVAILABLE_SERVERS, error));\n    }\n  };\n}\n\nexport function updateLicenseAssignmentThunk(isInitialAssignment, payload) {\n  return async () => {\n    try {\n      if (isInitialAssignment) {\n        await RestClient.post(CONSTANTS.BASE.ENDPOINTS.SUBMIT_LICENSE_ASSIGNMENT, payload);\n      } else {\n        await RestClient.put(CONSTANTS.BASE.ENDPOINTS.UPDATE_LICENSE_ASSIGNMENT, payload);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(error);\n    }\n  };\n}\n","import { createSelector } from 'reselect';\n\nexport const getLicensesData = createSelector(\n  [(state) => state.licenseAllocation.licenses],\n  (licenses) => licenses\n);\n\nexport const licensesLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.licenses.loading],\n  (isLoading) => isLoading\n);\n\nexport const getDbLicensesData = createSelector(\n  [(state) => state.licenseAllocation.dbLicenses],\n  (licenses) => licenses\n);\n\nexport const dbLicensesLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.dbLicenses.loading],\n  (isLoading) => isLoading\n);\n\nexport const getLicenseTargetsData = createSelector(\n  [(state) => state.licenseAllocation.licenseTargets],\n  (licenses) => licenses\n);\n\nexport const licenseTargetsLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.licenseTargets.loading],\n  (isLoading) => isLoading\n);\n\nexport const getAvailableServersData = createSelector(\n  [(state) => state.licenseAllocation.availableServers],\n  (licenses) => licenses\n);\n\nexport const availableServersLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.availableServers.loading],\n  (isLoading) => isLoading\n);\n","import React, { createContext } from 'react';\nimport uuid from 'uuid';\nimport MUIModal from '@material-ui/core/Modal';\nimport { bool, string, oneOfType, node, func, shape } from 'prop-types';\n\nimport './Modal.local.scss';\n\nimport { ModalHeader } from '../ModalHeader/ModalHeader';\n\nexport const ModalContext = createContext({});\n\nexport const Modal = ({ open, actions, id: providedId, children }) => {\n  const id = providedId || uuid();\n  const aria = {\n    'aria-labelledby': `${id}-modal-title`,\n    'aria-describedby': `${id}-modal-description`\n  };\n\n  return (\n    <ModalContext.Provider value={{ aria, actions }}>\n      <MUIModal {...aria} open={open} onClose={actions?.close} disableBackdropClick>\n        <div className=\"overlay\">\n          {typeof children === 'function' ? children({ id, aria, open, actions }) : children}\n        </div>\n      </MUIModal>\n    </ModalContext.Provider>\n  );\n};\n\nModal.propTypes = {\n  actions: shape({\n    open: func,\n    close: func\n  }),\n  children: oneOfType([node, func]),\n  open: bool,\n  id: string\n};\n\nModal.ModalHeader = ModalHeader;\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getNamespace(name) {\n  return RestClient.get(`/namespace/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchNamespace(name, body) {\n  return RestClient.patch(`/namespace/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postNamespace(body) {\n  return RestClient.post('/namespace', body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postForm(name, body) {\n  return RestClient.post(`/form/${name}/clone`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function createForm(body) {\n  return RestClient.post('/form', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function updateForm(name, body) {\n  return RestClient.patch(`/form/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useReducer, createContext } from 'react';\n\nimport _ from 'lodash';\n\nimport { produce } from 'immer';\n\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { QualifiedName, FormPrototypeSelect } from 'shared/components/form/editors/Custom';\n\nimport { space_summon } from 'shared/components/form/parameters/normalizeParameter';\n\nimport { FormParameters } from './FormParameters';\n\nimport { groupForm, ungroupForm } from './utils';\n\nimport { createForm, updateForm } from 'shared/api/form';\n\nconst groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_GROUP_INSTANCE': {\n      return produce(state, draft => {\n        draft.groups[action.pointers.group].instances.push(action.instance);\n      });\n    }\n\n    case 'REMOVE_GROUP_INSTANCE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances.splice(pointers.instance, 1);\n      });\n    }\n    case 'ADD_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        const field =\n          draft.groups[pointers.group].instances[pointers.instance].fields[pointers.field];\n\n        field.values.push({ instance: field.values.length, value: null });\n      });\n    }\n    case 'REMOVE_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances[pointers.instance].fields[\n          pointers.field\n        ].values.splice(action.index, 1);\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const PackedContext = createContext({ groups: [] });\n\nexport function FormEditor({ isNew, form, prototype, setResult, formRef }) {\n  const initialPacked = groupForm(prototype, _.cloneDeep(form));\n  /** Prepare initial relative name */\n  const split_name = form?.name?.split?.('.') || [''];\n\n  initialPacked.name = _.last(split_name);\n\n  const [packed, dispatch] = useReducer(groupsReducer, initialPacked);\n\n  const contextValue = { packed, dispatch };\n\n  return (\n    <PackedContext.Provider value={contextValue}>\n      <Formik\n        initialValues={{}}\n        validateOnChange={false}\n        onSubmit={(values, actions) =>\n          handleSubmit({\n            form,\n            packed,\n            isNew,\n            prototype,\n            values,\n            actions,\n            setResult\n          })}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Form details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <QualifiedName name=\"form_name\" label=\"Name\" value={packed.name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"description\"\n                          label=\"Description\"\n                          value={packed.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column>\n                          <FormPrototypeSelect\n                            value={prototype?.name}\n                            disabled\n                            label=\"Form\"\n                            name=\"prototype\"\n                          />\n                        </Column>\n                      </Row>\n                      <FormParameters packed={packed} prototype={prototype} />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </PackedContext.Provider>\n  );\n}\n\nasync function handleSubmit({\n  prototype,\n  packed,\n  values,\n  setResult,\n  isNew,\n  form\n}) {\n  const { form_name, description, prototype: protoName, ...fields } = values;\n\n  const extracted = extractFieldInfo(fields);\n\n  const exclusions = [null, 'None', ''];\n\n  const filteredExtractions = extracted.filter(entry => !exclusions.includes(entry.val));\n\n  const packedCopy = _.cloneDeep(packed);\n\n  /**\n   * Update name and description\n   */\n\n  /**\n   * extract and remap field values.\n   */\n  filteredExtractions.forEach(entry => {\n    const path = `groups[${entry.group}].instances[${entry.instance}].fields[${entry.field}].values[${entry.index}].value`;\n\n    _.set(packedCopy, path, entry.value);\n  });\n\n  /**\n   * unpack and prepare for sending\n   */\n  const unpacked = ungroupForm(packedCopy);\n\n  /**\n   * Very Important!\n   * Please read.\n   * Another cleanup process is needed.\n   * So there cannot be values for repeatable parameters where there is an empty array.\n   * It requires for some DAMNED reason, to have at least one null value.\n   */\n  unpacked.values = unpacked.values.map(value => {\n    if (Array.isArray(value.value)) {\n      /** for some reason, it's not removed from the first iteration for values. */\n      const filtered = { ...value, value: value.value.filter(v => !!v) };\n\n      if (filtered.value.length === 0) {\n        filtered.value = [null];\n      }\n\n      return filtered;\n    }\n\n    return value;\n  });\n\n  const name = form_name;\n\n  unpacked.name = name;\n\n  if (!isNew) {\n    const rename = [..._.initial(form.name.split('.')), form_name].join('.');\n    if (rename !== form.name) {\n      unpacked.rename = rename;\n      delete unpacked.name;\n    }\n  }\n\n  unpacked.description = description;\n  unpacked.prototype = protoName;\n  unpacked.version = prototype.version;\n\n  const request = isNew ? createForm : updateForm;\n\n  const request_args = [unpacked];\n\n  if (!isNew) {\n    // prepend name to request arguments.\n    request_args.unshift(form.name);\n  }\n\n  try {\n    await request(...request_args);\n    setResult('success');\n  } catch (e) {\n    setResult('fail');\n  }\n}\n\n// /** berry important :) */\nfunction extractFieldInfo(all) {\n  const key_struct = /^group-(\\d+)-instance-(\\d+)-field-(\\d+)-value-(\\d+)---(\\w+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      name: space_summon(matched[5]),\n      index: matched[4],\n      field: matched[3],\n      instance: matched[2],\n      lower: matched[1],\n      group: matched[1],\n      value\n    };\n  });\n}\n","import moment from 'moment';\n\nexport function mapAllServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const entryInfo = {\n      name: entry.srvname,\n      model: entry.model,\n      version: entry.version,\n      sid: entry.sid,\n      collDate: entry.collDate,\n      nrCores: entry.Ncore,\n      totalDBs: 1,\n      eelic_count: entry.eelic_count,\n      selic_count: entry.selic_count,\n      sids: [entry],\n      installedOptions: {\n        aa_count: entry.aa_count ? 1 : 0,\n        ac_count: entry.ac_count ? 1 : 0,\n        as_count: entry.as_count ? 1 : 0,\n        dv_count: entry.dv_count ? 1 : 0,\n        mt_count: entry.mt_count ? 1 : 0,\n        adg_count: entry.adg_count ? 1 : 0,\n        rac_count: entry.rac_count ? 1 : 0,\n        olap_count: entry.olap_count ? 1 : 0,\n        part_count: entry.part_count ? 1 : 0,\n        in_mem_db_count: entry.in_mem_db_count ? 1 : 0,\n        rac_one_node_count: entry.rac_one_node_count ? 1 : 0,\n        real_app_test_count: entry.real_app_test_count ? 1 : 0\n      }\n    };\n\n    const totalInstalledOptions = Object.values(entryInfo.installedOptions).reduce((a, b) => a + b);\n    entryInfo.sids = [{ ...entry, totalInstalledOptions }];\n    entryInfo.totalInstalledOptions = totalInstalledOptions;\n\n    acc.push(entryInfo);\n    return acc;\n  }, []);\n\n  return groupServers(serversInfo).sort((a, b) => a.nrCores - b.nrCores);\n}\n\nexport function mapVirtualServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const index = acc.findIndex(sv => sv.vcenterservername === entry.vcenterservername);\n\n    if (index > -1) {\n      if (\n        entry.vmname !== null ||\n        entry.vmguesthostname !== null ||\n        entry.vmguestos !== null ||\n        entry.vmipaddress !== null\n      ) {\n        acc[index].hosts_nr += 1;\n      }\n    } else {\n      acc.push({\n        vcenterservername: entry.vcenterservername,\n        cpu: entry.cpu,\n        cpucores: entry.cpucores,\n        hosts_nr:\n          entry.vmname !== null ||\n          entry.vmguesthostname !== null ||\n          entry.vmguestos !== null ||\n          entry.vmipaddress !== null\n            ? 1\n            : 0\n      });\n    }\n    return acc;\n  }, []);\n\n  return serversInfo;\n}\n\nfunction groupServers(servers) {\n  return Object.values(servers.reduce((acc, entry) => {\n    if (!acc[entry.name]) {\n      acc[entry.name] = entry;\n    } else {\n      const allSids = [...acc[entry.name].sids, ...entry.sids]\n        .sort((o1, o2) => -moment(o1.collDate).diff(moment(o2.collDate)));\n\n      acc[entry.name] = entry;\n      acc[entry.name].sids = allSids;\n      acc[entry.name].collDate = allSids[0].collDate;\n    }\n    return acc;\n  }, {}));\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './center.local.scss';\n\nexport class CenterComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport default CenterComponent;\n\nCenterComponent.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nCenterComponent.defaultProps = {\n  className: 'center-container'\n};\n","import moment from 'moment';\n\nexport function isBeforeDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n\n  const aYear = a.year();\n  const aMonth = a.month();\n\n  const bYear = b.year();\n  const bMonth = b.month();\n\n  const isSameYear = aYear === bYear;\n  const isSameMonth = aMonth === bMonth;\n\n  if (isSameYear && isSameMonth) return a.date() < b.date();\n  if (isSameYear) return aMonth < bMonth;\n  return aYear < bYear;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { string, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Overflow.scss';\n\nexport const Overflow = ({ className, component, children, variant }) => {\n  const nodeRef = useRef(null);\n  const [scrollableX, setScrollableX] = useState(false);\n  const [scrollableY, setScrollableY] = useState(false);\n  const [scrolledX, setScrolledX] = useState(false);\n  const [scrolledY, setScrolledY] = useState(false);\n\n  const Tag = component || 'div';\n\n  const onScroll = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolledY) {\n          setScrolledY(true);\n        }\n      } else if (scrolledY) {\n        setScrolledY(false);\n      }\n\n      if (event.currentTarget.scrollLeft) {\n        if (!scrolledX) {\n          setScrolledX(true);\n        }\n      } else if (scrolledX) {\n        setScrolledX(false);\n      }\n    },\n    [scrollableX, scrollableY, scrolledX, scrolledY]\n  );\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const element = nodeRef.current;\n      const box = {\n        width: element.clientWidth,\n        height: element.clientHeight,\n        scrollHeight: element.scrollHeight,\n        scrollWidth: element.scrollWidth\n      };\n\n      if (box.width < box.scrollWidth && !scrollableX) {\n        setScrollableX(true);\n      }\n\n      if (box.height < box.scrollHeight && !scrollableY) {\n        setScrollableY(true);\n      }\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={classnames(\n        'overflow-container',\n\n        {\n          [variant]: variant,\n          scrollableX,\n          scrollableY,\n          scrolledX,\n          scrolledY\n        },\n        className\n      )}\n    >\n      <Tag ref={nodeRef} className={classnames('overflow-scroller')} onScroll={onScroll}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nOverflow.propTypes = {\n  children: node,\n  className: string,\n  variant: oneOf(['white'])\n};\n\nOverflow.defaultProps = {};\n","import React, { useContext, useState } from 'react';\nimport { string, node, func, shape, bool } from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { ModalContext } from '../Modal/Modal';\n\nimport { Modal } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport './ModalHeader.local.scss';\n\nexport const ModalHeader = ({\n  avatar,\n  icon,\n  title,\n  desc,\n  closeable,\n  onClose,\n  aria: providedAria,\n  formikRef,\n  changedForm = false\n}) => {\n  const context = useContext(ModalContext);\n  const aria = context.aria || providedAria;\n  const actions = context.actions || { close: onClose };\n  const [open, setOpen] = useState(false);\n\n  const close = () => {\n    if (changedForm || (formikRef?.current?.dirty && fieldChanged(formikRef?.current?.touched))) {\n      setOpen(true);\n    } else {\n      actions.close();\n    }\n  };\n\n  const fieldChanged = fields => {\n    let changed = false;\n    const fieldsArr = Object.keys(fields);\n\n    fieldsArr.map(field => {\n      if (fields[field]) {\n        changed = true;\n      }\n\n      return null;\n    });\n\n    return changed;\n  };\n\n  return (\n    <header className=\"modal-header\">\n      {avatar && <div className=\"icon-slot\">{avatar}</div>}\n      {/** TODO: this should actually be avatar :((( ... don't have time to refactor now need to patch through */}\n      {icon && (\n        <div className=\"icon-slot\">\n          <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n            {icon}\n          </Avatar>\n        </div>\n      )}\n      <div className=\"modal-title-slot\" id={aria['aria-labelledby']}>\n        <h1 className=\"modal-title\">{title}</h1>\n        {desc && (\n          <p className=\"modal-desc\" id={aria['aria-describedby']}>\n            {desc}\n          </p>\n        )}\n      </div>\n      {closeable && actions.close && (\n        <>\n          <div className=\"modal-close-button-slot\">\n            <button className=\"modal-close-button\" onClick={close}>\n              <CloseIcon fontSize=\"large\" />\n            </button>\n          </div>\n\n          <Modal open={open}>\n            <Paper\n              style={{\n                minWidth: '350px',\n                maxHeight: '368px',\n                maxWidth: '65vw'\n              }}\n            >\n              <Paper.Header>\n                <div className=\"modal-header\">\n                  <div className=\"icon-slot\">\n                    <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n                      <WarningIcon />\n                    </Avatar>\n                  </div>\n                  <div className=\"modal-title-slot\">\n                    <h1 className=\"modal-title\">Warning</h1>\n                  </div>\n                  <div className=\"modal-close-button-slot\">\n                    <button\n                      className=\"modal-close-button\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"large\" />\n                    </button>\n                  </div>\n                </div>\n              </Paper.Header>\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Exit without saving?</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    No\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                      actions.close();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Paper>\n          </Modal>\n        </>\n      )}\n    </header>\n  );\n};\n\nModalHeader.propTypes = {\n  title: node,\n  desc: node,\n  onClose: func,\n  closeable: bool,\n  avatar: node,\n  icon: node,\n  aria: shape({\n    'aria-labelledby': string,\n    'aria-describedby': string\n  })\n};\n\nModalHeader.defaultProps = {\n  closeable: true\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nimport './Checkbox.local.scss';\n\nexport const Checkbox = ({ label, disabled, ...rest }) => {\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className=\"checkbox-label\"\n      control={\n        <MUICheckbox\n          className=\"checkbox\"\n          color=\"primary\"\n          icon={<CheckBoxOutlineBlankIcon />}\n          checkedIcon={<CheckBoxIcon />}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  label: node,\n  disabled: bool\n};\n","export default (task, duration = 10000) => {\n  let running = false;\n\n  async function runTask() {\n    if (!running) {\n      return;\n    }\n\n    try {\n      await task();\n      running = false;\n    } catch (e) {\n      setTimeout(() => runTask(), duration);\n    }\n  }\n\n  return {\n    start() {\n      if (running) {\n        return;\n      }\n      running = true;\n      runTask();\n    },\n    stop() {\n      running = false;\n    }\n  };\n};\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nexport const ServerForm = ({\n  server = {},\n  protocols,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [submission, setSubmission] = useState({});\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [showRSA, setShowRSA] = useState(false);\n  const handleAccountCreation = getCreateAccountHandler({\n    showRSA,\n    passwordEditable,\n    setSubmission,\n    isNew,\n    server\n  });\n\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapServerValues(entry) {\n    return {\n      name: entry.name || '',\n      description: entry.description || '',\n      host: entry.address || '',\n      port: entry.port || availablePorts[entry.protocol || 'SSH'],\n      user: entry.user || '',\n      server_password: entry.user_key || '',\n      confirm_server_password: '',\n      rsa_key: entry.user_key || '',\n      protocol: entry.protocol || 'SSH'\n    };\n  }\n\n  const initialValues = mapServerValues(server);\n\n  const extraValidations = values => {\n    const errors = {};\n    if (passwordEditable && !showRSA) {\n      if (values.server_password !== values.confirm_server_password) {\n        errors.confirm_server_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column>\n                          <Row>\n                            <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                          </Row>\n                          <Row>\n                            <Column>\n                              <Text\n                                name=\"protocol\"\n                                required\n                                label=\"Protocol\"\n                                disabled={!isNew}\n                                options={allowedProtocols.map(p => ({\n                                  value: p.name,\n                                  label: p.name\n                                }))}\n                                value={initialValues.protocol}\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue('port', availablePorts[value]);\n                                }}\n                              />\n                            </Column>\n                          </Row>\n                        </Column>\n                        <Column>\n                          <Text\n                            name=\"description\"\n                            multiline\n                            required\n                            label=\"Description\"\n                            value={initialValues.description}\n                          />\n                        </Column>\n                      </Row>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column style={{ maxWidth: '80%', width: '80%' }}>\n                          <Text\n                            name=\"host\"\n                            label=\"Host\"\n                            required\n                            value={initialValues.host}\n                            disabled={editing}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column>\n                          <Text\n                            name=\"server_user\"\n                            label=\"User\"\n                            required\n                            value={initialValues.user}\n                          />\n                        </Column>\n                        {passwordEditable && <PasswordOrRSA allowed showRSA={showRSA} />}\n                      </Row>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" required label=\"RSA Key\" />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row>\n          <Password name=\"server_password\" label=\"Password\" required />\n        </Row>\n        <Row>\n          <Password name=\"confirm_server_password\" label=\"Confirm Password\" required />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ showRSA, passwordEditable, setSubmission, isNew, server }) {\n  return function handleAccountCreation(values) {\n    const request_body = {\n      protocol: values.protocol,\n      user: values.server_user,\n      description: values.description,\n      address: values.host,\n      ...(passwordEditable && {\n        user_key: showRSA ? values.rsa_key : values.server_password\n      }),\n      port: Number.parseInt(values.port, 10)\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(server.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handleSubmission) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    // add this entry to redux structure\n    // addNewAccount(newAccount);\n    handleSubmission();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchDataTypes(type = '') {\n  try {\n    const { data } = await RestClient.get(\n      `${CONSTANTS.BASE.ENDPOINTS.DATATYPES}${type ? `/${type}` : ''}`\n    );\n\n    return { result: data.result, data_types: data.data.data_types };\n  } catch (e) {\n    return { result: 'fail', data_types: [] };\n  }\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport _ from 'lodash';\n\nexport const DatabaseForm = ({\n  account = {},\n  protocols = [],\n  modes,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [submission, setSubmission] = useState({});\n  const allowedProtocols = protocols.filter(p => {\n    const special = p?.special_required;\n\n    return special && special.includes('database');\n  });\n  const [showRSA, setShowRSA] = useState(false);\n\n  const handleAccountCreation = getCreateAccountHandler({\n    protocols: allowedProtocols,\n    modes,\n    showRSA,\n    isNew,\n    setSubmission,\n    account\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapAccountValues(entry = {}) {\n    return {\n      name: _.get(entry, 'name', ''),\n      protocol: _.get(entry, 'protocol', ''),\n      description: _.get(entry, 'description', ''),\n\n      host: _.get(entry, 'address', ''),\n\n      port: _.get(entry, 'port', availablePorts[_.get(entry, 'protocol')]),\n\n      database: _.get(entry, 'special.database', ''),\n      user: _.get(entry, 'user', ''),\n      mode: _.get(entry, 'special.mode', '')\n    };\n  }\n\n  const initialValues = mapAccountValues(account);\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (passwordEditable && !showRSA) {\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {({ values }) => {\n            const selectedProtocol =\n              values.protocol && protocols.find(protocol => protocol.name === values.protocol);\n            const allowRSA = !!selectedProtocol?.allow_rsa_key;\n            const withDatabase = selectedProtocol?.special_required?.includes('database');\n            const withMode = selectedProtocol?.name === 'ORACLE';\n\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column>\n                            <Row padded>\n                              <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                            </Row>\n                            <Row padded>\n                              <Column>\n                                <Text\n                                  name=\"protocol\"\n                                  required\n                                  label=\"Protocol\"\n                                  reactToChange={(value, formik) => {\n                                    formik.setFieldValue('port', availablePorts[value]);\n                                  }}\n                                  options={allowedProtocols.map(p => ({\n                                    value: p.name,\n                                    label: p.name\n                                  }))}\n                                  value={initialValues.protocol}\n                                />\n                              </Column>\n                            </Row>\n                          </Column>\n                          <Column>\n                            <Text\n                              multiline\n                              name=\"description\"\n                              label=\"Description\"\n                              required\n                              value={initialValues.description}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column style={{ maxWidth: '80%', width: '80%' }}>\n                            <Text name=\"host\" required label=\"Host\" value={initialValues.host} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                          </Column>\n                        </Row>\n                        <Row>\n                          {withDatabase && (\n                            <Column style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}>\n                              <Text\n                                name=\"database\"\n                                required\n                                label=\"Database\"\n                                value={initialValues.database}\n                              />\n                            </Column>\n                          )}\n                          {withMode && (\n                            <Column style={{ maxWidth: '20%' }}>\n                              <Text\n                                name=\"mode\"\n                                label=\"Mode\"\n                                required\n                                options={modes.map(mode => ({\n                                  value: mode.label,\n                                  label: mode.label\n                                }))}\n                                value={initialValues.mode}\n                              />\n                            </Column>\n                          )}\n                        </Row>\n                        <Row>\n                          <Column>\n                            <Text\n                              name=\"user\"\n                              label=\"User\"\n                              required\n                              value={initialValues.user || ''}\n                            />\n                          </Column>\n                          {passwordEditable && (\n                            <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                          )}\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && allowRSA && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && allowRSA && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" label=\"RSA Key\" required />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row padded>\n          <Password name=\"password\" required label=\"Password\" />\n        </Row>\n        <Row padded>\n          <Password name=\"confirm_password\" required label=\"Confirm Password\" />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ protocols, showRSA, setSubmission, isNew, account }) {\n  return function handleAccountCreation(values) {\n    const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n    const allowRSA = !!selectedProtocol?.allow_rsa_key;\n    const withDatabase = selectedProtocol?.special_required?.includes('database');\n    const withMode = selectedProtocol?.name === 'ORACLE';\n\n    const request_body = {\n      user: values.user,\n      description: values.description,\n      protocol: values.protocol,\n      address: values.host,\n      user_key: allowRSA && showRSA ? values.rsa_key : values.password,\n      port: Number.parseInt(values.port, 10),\n      special: {\n        ...(withDatabase && { database: values.database }),\n        ...(withMode && { mode: values.mode })\n      }\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(account.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handler) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    handler();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async (url) => {\n  try {\n    const response = await RestClient.get(url);\n\n    const fileName = 'CSV_Template.csv';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { deleteInvocation } from 'shared/api/delete';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions as sharedActions } from 'shared/store/actions';\nimport './DeleteJobModal.local.scss';\n\nexport const ConnectedDeleteJobModal = connect(\n  state => {\n    return {\n      globalFilters: globalFiltersSelector(state)\n    };\n  },\n  dispatch => {\n    return {\n      getJobs: data => {\n        dispatch(sharedActions.getJobs.dispatchLoading(data));\n      }\n    };\n  }\n)(DeleteJobModal);\n\nfunction DeleteJobModal({ open, actions, uuid, filters, globalFilters, getJobs }) {\n  const [result, setResult] = useState('attempt');\n  const getQSP = () => {\n    if (!filters || !Object.keys(filters).length) {\n      const startDate = moment.unix(globalFilters.get('startDate'));\n      const endDate = moment.unix(globalFilters.get('endDate'));\n      const start = moment(startDate.format('YYYY-MM-DD'));\n      const end = moment(endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n      const payload = {\n        date_invoke: startDate.format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      };\n\n      return payload;\n    }\n    return filters;\n  };\n\n  const terminator = useCallback(() => {\n    deleteInvocation(uuid)\n      .then(() => {\n        setResult('success');\n        if (filters) {\n          getJobs(getQSP());\n        }\n      })\n      .catch(() => {\n        setResult('fail');\n      });\n  }, uuid);\n  return (\n    <>\n      <Modal open={open} actions={actions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Delete\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <div className=\"container\">\n                    <p>Are you sure you want to delete this invocation and future invocations of this job?</p>\n                  </div>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('loading');\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <h2 className=\"container\">Invocation successfully deleted!</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <h2 className=\"container\">Invocation could not be deleted.</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"loading\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { ScheduleModal } from './components/ScheduleModal/ScheduleModal';\n\nexport const Schedule = ({ invocation }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setFilledValues({});\n      setResult('');\n      setOpen(false);\n    }\n  };\n  const [filledValues, setFilledValues] = useState({});\n  const [result, setResult] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [canSelectProcess, setCanSelectProcess] = useState(true);\n\n  const onClickHandler = option => {\n    setSelectedOption(option);\n    setCanSelectProcess(!invocation);\n    setOpen(true);\n  };\n\n  const btnLabel = invocation ? 'Schedule' : 'New Schedule';\n  const isScheduled = invocation?.status === 'SCHEDULED' && invocation?.schedule;\n\n  return (\n    <>\n      {isScheduled && (\n        <Button style={{ minWidth: '140px' }} onClick={() => onClickHandler('edit-schedule')}>\n          Edit Schedule\n        </Button>\n      )}\n      <Button\n        onClick={() => {\n          onClickHandler('schedule');\n        }}\n      >\n        {btnLabel}\n      </Button>\n      <ScheduleModal\n        open={open}\n        actions={modalActions}\n        invocation={invocation}\n        isScheduled={isScheduled}\n        selectedOption={selectedOption}\n        canSelectProcess={canSelectProcess}\n        result={result}\n        setResult={setResult}\n        filledValues={filledValues}\n        setFilledValues={setFilledValues}\n      />\n    </>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { postNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\n\nexport const ConnectedNewNamespace = connect(null, {\n  request: fetchEntity\n})(NewNamespace);\n\nfunction NewNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Namespace\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: namespace ? namespace.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  postNamespace(body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButtonNoDirty = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { FormEditor } from './FormEditor';\n\nexport const ConnectedFormModal = connect(null, {\n  refresh: fetchEntity\n})(FormModal);\n\nfunction FormModal({ disabled, form = null, prototype, refresh }) {\n  const isNew = form === null;\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('use_form');\n  const formRef = useRef();\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult('use_form');\n      setOpen(false);\n      // should refresh be here as well?\n      // refresh('form');\n    }\n  };\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        {isNew ? 'New Form' : 'Edit'}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title={`${isNew ? 'New' : 'Edit'} Form`}\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"use_form\">\n              <FormEditor\n                isNew={isNew}\n                form={form}\n                prototype={prototype}\n                setResult={setResult}\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was {isNew ? 'created' : 'updated'} successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      refresh('form');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ConfirmationModal } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\nimport { mdiSettings, mdiDatabase, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { deleteAccount } from 'shared/api/accounts';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nexport const DatabaseSettings = ({ database, disabled, reloadAccounts, editDbTrigger, deleteDbTrigger }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteDbOpen, setDeleteDbOpen] = useState(false);\n  const [deleteDbErrorOpen, setDeleteDbErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteDbModalActions = {\n    open: () => {\n      setDeleteDbOpen(true);\n    },\n    close: () => {\n      setDeleteDbOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(database.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteDbErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteDbErrorModalActions = {\n    open: () => {\n      setDeleteDbErrorOpen(true);\n    },\n    close: () => {\n      setDeleteDbErrorOpen(false);\n    }\n  };\n\n  if (disabled && !editDbTrigger && !deleteDbTrigger) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      {editDbTrigger && editDbTrigger(modalActions.open, disabled)}\n      {!editDbTrigger && (\n        <IconButton onClick={modalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiSettings} />\n          </SvgIcon>\n        </IconButton>\n      )}\n      {deleteDbTrigger && deleteDbTrigger(deleteDbModalActions.open, disabled)}\n      {!deleteDbTrigger && (\n        <IconButton onClick={deleteDbModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditDatabaseContainer database={database} />\n      </Modal>\n\n      <ConfirmationModal open={deleteDbOpen} actions={deleteDbModalActions} message=\"Are you sure you want to delete database?\" />\n      <ErrorModal open={deleteDbErrorOpen} actions={deleteDbErrorModalActions} message=\"Failed to delete Database. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditDatabase = ({ database, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [], modes: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Edit Database\"\n        desc=\"Edit the database connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <DatabaseForm\n            account={database}\n            protocols={state.protocols}\n            modes={state.modes}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditDatabaseContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditDatabase);\n","export const getOutputText = (output, invocation) => {\n  if (!invocation || (!output && invocation.status !== 'FAILED')) return '';\n\n  let outputText = '';\n\n  if (invocation.status === 'FAILED') {\n    outputText = `The following error(s) occurred:\n      ${invocation.errors.map(error => `• ${error}`).join('\\n')}\\n ${\n      output && output.length > 0 ? `Output: \\n${output.map(row => row.data.text).join('\\n')}` : ''\n    }`;\n  } else {\n    outputText = output.map(row => row.data.text).join('\\n');\n  }\n\n  return outputText;\n};\n","import { requestInvocation } from 'shared/api/invocation';\n\nexport function processQuery(uuid, process) {\n  return {\n    type: 'PROCESS_QUERY',\n    uuid,\n    process\n  };\n}\n\nexport function fetchInvocation(uuid, process) {\n  return function thunk(dispatch) {\n    dispatch({\n      type: 'FETCH_INVOCATION',\n      uuid,\n      process,\n      promise: requestInvocation(uuid)\n    });\n  };\n}\n\nexport function updateInvocation(invocation) {\n  return {\n    type: 'UPDATE_INVOCATION',\n    invocation\n  };\n}\n","import moment from 'moment';\nimport { getOutputText } from './getOutputText';\n\nconst EMAIL_BODY_MAX_LENGTH = 2000;\n\nexport const sendToEmail = (invocation, output, processName) => {\n  const text = getOutputText(output, invocation);\n  if (text.length > EMAIL_BODY_MAX_LENGTH) {\n    return false; // Max allowed body length exceeded\n  }\n\n  const date = moment(invocation.date_invoke).format('MMM DD YYYY, H:mm:ss');\n  const subject = processName ? `${processName} output` : 'Job output';\n  const body = `PROCESS: ${processName}\\nDATE: ${date}\\nSTATUS: ${invocation.status}\\n\\nOUTPUT:\\n\\n${text}`;\n  window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(body)}`;\n  return true;\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* getBeVersion() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_VERSION);\n    yield put(actions.getBeVersion.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeVersion.dispatchFail());\n  }\n}\n\nfunction* getBeLicence() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_LICENCE);\n    yield put(actions.getBeLicence.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeLicence.dispatchFail());\n  }\n}\n\nfunction* getBeHeath() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_HEALTH);\n    yield put(actions.getBeHealth.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeHealth.dispatchFail());\n  }\n}\n\nexport function* BeLicenceEffect() {\n  yield takeEvery(actions.getBeLicence.getLoadingAction(), getBeLicence);\n}\n\nexport function* BeHealthEffect() {\n  yield takeEvery(actions.getBeHealth.getLoadingAction(), getBeHeath);\n}\n\nexport function* BeVersionEffect() {\n  yield takeEvery(actions.getBeVersion.getLoadingAction(), getBeVersion);\n}\n","import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './TotalJobsCount.local.scss';\n\nexport const TotalJobsCount = ({ jobs, status }) => {\n  const jobsTotal = () => {\n    return (\n      <div className=\"tooltip-container\">\n        <div className=\"row executing\">\n          <span className=\"label\"> EXECUTING:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'EXECUTING').length}</span>\n        </div>\n        <div className=\"row succeeded\">\n          <span className=\"label\"> SUCCEEDED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SUCCEEDED').length}</span>\n        </div>\n        <div className=\"row scheduled\">\n          <span className=\"label\"> SCHEDULED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SCHEDULED').length}</span>\n        </div>\n        <div className=\"row delayed\">\n          <span className=\"label\">DELAYED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'DELAYED').length}</span>\n        </div>\n        <div className=\"row aborted\">\n          <span className=\"label\">ABORTED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'ABORTED').length}</span>\n        </div>\n        <div className=\"row failed\">\n          <span className=\"label\">FAILED: </span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'FAILED').length}</span>\n        </div>\n        <div className=\"row killed\">\n          <span className=\"label\">KILLED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'KILLED').length}</span>\n        </div>\n      </div>\n    );\n  };\n\n  if (status) {\n    return (\n      <div className=\"count-jobs\">\n        {jobs.length} {status} {jobs.length === 1 ? 'job' : 'jobs'}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"count-jobs\">\n      <LightTooltip placement=\"bottom\" title={jobsTotal()}>\n        <span>{jobs.length}</span>\n      </LightTooltip>{' '}\n      total jobs\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    backgroundColor: '#fff',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: '700',\n    fontFamily: 'Open Sans',\n    boxShadow: '0px 4px 8px rgba(4, 17, 37, 0.1)',\n    borderRadius: '8px'\n  }\n}))(Tooltip);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getAlias(name) {\n  return RestClient.get(`/alias/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchAlias(name, body) {\n  return RestClient.patch(`/alias/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postAlias(body) {\n  return RestClient.post('/alias', body, {\n    page_size: 2147483645\n  });\n}\n","import { actions } from 'session/store/actions';\nimport { actionStates } from 'shared/lib';\nimport { fromJS } from 'immutable';\n\nexport const initialState = {\n  login: {\n    status: '',\n    errors: []\n  },\n  authorization: {\n    status: actionStates.LOADING\n  },\n  currentUser: {\n    name: '',\n    details: {}\n  },\n  beVersion: ''\n};\n\nexport const reducerActions = {\n  // authorization Check\n  [actions.checkAuthorization.getLoadingAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.LOADING),\n  [actions.checkAuthorization.getSuccessAction()]: (state, payload) =>\n    state\n      .set(\n        'currentUser',\n        fromJS({\n          name: payload.name,\n          details: payload.details\n        })\n      )\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.checkAuthorization.getFailAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.FAIL),\n\n  // login\n  [actions.login.getLoadingAction()]: state =>\n    state.setIn(['login', 'status'], actionStates.LOADING),\n  [actions.login.getSuccessAction()]: state =>\n    state\n      .setIn(['login', 'status'], actionStates.SUCCESS)\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.login.getFailAction()]: (state, errors) =>\n    state.setIn(['login', 'status'], actionStates.FAIL).setIn(['login', 'errors'], fromJS(errors)),\n  [actions.getBeVersion.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beVersion', payload.data);\n    return nextState;\n  },\n  [actions.getBeLicence.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beLicence', payload.data);\n    return nextState;\n  },\n  [actions.getBeHealth.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beHealth', payload.data);\n    return nextState;\n  }\n};\n","import { checkDeamonStatus } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  await store.dispatch(checkDeamonStatus());\n\n  throw new Error('polling-daemon');\n}\n\nexport const daemonPoller = withPolling(task, 60000);\n","import { actions } from 'dashboard/store/actions';\n\nexport const initialState = {\n  filterStatus: 'ALL'\n};\n\nexport const reducerActions = {\n  [actions.setFilterStatus.getEventAction()]: (state, status) => {\n    const nextState = state.set('filterStatus', status);\n    return nextState;\n  }\n};\n","import { actions } from 'shared/store/actions';\nimport { actions as sessionActions } from 'session/store/actions';\nimport { fromJS } from 'immutable';\nimport moment from 'moment';\n\nlet sessionGlobalFilters = {\n  startDate: moment()\n    .subtract(7, 'd')\n    .startOf('day')\n    .unix(),\n  endDate: moment()\n    .add(1, 'days')\n    .startOf('day')\n    .unix()\n};\n\nsessionGlobalFilters = JSON.parse(localStorage.getItem('global-filters')) || sessionGlobalFilters;\n\nexport const initialState = {\n  globalFilters: sessionGlobalFilters,\n  jobs: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false,\n    callFailed: false,\n    reason: ''\n  },\n  connections: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  searchResults: {\n    jobs: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    },\n    processes: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    }\n  }\n};\n\nexport const reducerActions = {\n  [actions.setGlobalFilters.getSuccessAction()]: (state, payload) => {\n    const nextState = state\n      .setIn(['globalFilters', 'startDate'], payload.startDate.unix())\n      .setIn(['globalFilters', 'endDate'], payload.endDate.unix());\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.login.getSuccessAction()]: state => {\n    const nextState = state\n      .setIn(\n        ['globalFilters', 'startDate'],\n        moment()\n          .subtract(7, 'd')\n          .startOf('day')\n          .unix()\n      )\n      .setIn(\n        ['globalFilters', 'endDate'],\n        moment()\n          .add(1, 'days')\n          .startOf('day')\n          .unix()\n      );\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.logout.getSuccessAction()]: state => {\n    localStorage.removeItem('global-filters');\n    return state;\n  },\n  [actions.getJobs.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        content: payload.data.invocations,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false,\n        callFailed: false,\n        reason: ''\n      })\n    ),\n  [actions.getJobs.getFailAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        callFailed: true,\n        fetching: false,\n        page_count: 1,\n        content: [],\n        total_count: 0,\n        reason: payload.reason\n      })\n    ),\n  [actions.getJobs.getLoadingAction()]: state => state.setIn(['jobs', 'fetching'], true),\n  [actions.getConnections.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'connections',\n      fromJS({\n        content: payload.data.accounts,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getConnections.getLoadingAction()]: state =>\n    state.setIn(['connections', 'fetching'], true),\n  [actions.searchJobs.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'jobs'],\n      fromJS({\n        content: payload.data.invocations,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchJobs.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], true),\n  [actions.searchJobs.getFailAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], false),\n  [actions.searchProcesses.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'processes'],\n      fromJS({\n        content: payload.data.processes,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchProcesses.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], true),\n  [actions.searchProcesses.getFailAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], false)\n};\n","import { actions } from 'core/store/actions';\n\nexport const initialState = {\n  notifications: [],\n};\n\nexport const reducerActions = {\n  [actions.addNotifications.getEventAction()]: (state, payload) => state\n    .merge('notifications', payload),\n  [actions.removeNotification.getEventAction()]: (state, notificationIndex) => state\n    .removeIn(['notifications', notificationIndex]),\n};\n","import { notificationActions } from './notification.action';\n\nexport const actions = {\n  ...notificationActions,\n};\n","import {\n  TextParameter,\n  BooleanParameter,\n  IntegerParameter,\n  EmailParameter,\n  PhoneNumberParameter,\n  ProcessParameter,\n  VariadicParameter,\n  AccountParameter,\n  FQNameParameter,\n  PasswordParameter,\n  MultilineParameter,\n  ReplvaluesParameter,\n  UuidParameter\n} from './variants';\n\nimport { want, wantComponent } from 'shared/lib/want';\n\n/**\n * Main switcher for Parameter fields.\n */\nexport const WantParameter = wantComponent(\n  want(\n    {\n      text: TextParameter,\n      number: IntegerParameter,\n      select: TextParameter,\n      phone: PhoneNumberParameter,\n      boolean: BooleanParameter,\n      email: EmailParameter,\n      fqname: FQNameParameter,\n      account: AccountParameter,\n      process: ProcessParameter,\n      variadic_parameter: VariadicParameter,\n      password: PasswordParameter,\n      multiline: MultilineParameter,\n      replvalues: ReplvaluesParameter,\n      uuid: UuidParameter\n    },\n    TextParameter,\n    props => {\n      const { editor } = props.parameter;\n\n      return editor.type;\n    }\n  )\n);\n\nexport default WantParameter;\n","import { mapAccountsTree } from '../../../../explorer/store/mappers';\n\nexport const ADDITIONAL_ACCOUNT_FILTERS = {\n  dbms: [\n    filterDbmsByShell.bind(null, 'shell'),\n    filterDbmsByShell.bind(null, 'target_shell'),\n  ],\n  target_shell: [filterShellByPlatform],\n  shell: [filterShellByPlatform],\n};\n\nfunction filterDbmsByShell(shellFieldName, accounts, formValues) {\n  accounts = accounts || [];\n  if (!formValues || !formValues[shellFieldName]) {\n    return accounts;\n  }\n\n  const shellAccount = accounts.find((account) => account.name === formValues[shellFieldName]);\n  if (!shellAccount) {\n    return accounts;\n  }\n\n  return accounts.filter(account => account.address === shellAccount.address);\n}\n\nconst PLATFORM_VALUE_TO_TYPE = {\n  Oracle: 'ORACLE',\n  PostgreSQL: 'PGSQL',\n  MySQL: 'MYSQL',\n  'Microsoft SQL Server': 'MSSQL',\n};\n\nfunction filterShellByPlatform(accounts, formValues) {\n  accounts = accounts || [];\n\n  if (!formValues || !formValues.platform) {\n    return accounts;\n  }\n\n  const accountsTree = mapAccountsTree(accounts);\n  const platformTree = accountsTree.find((platform) => platform.name === PLATFORM_VALUE_TO_TYPE[formValues.platform]);\n  if (!platformTree) {\n    return accounts;\n  }\n\n  const platformAddresses = Object.keys(platformTree.servers);\n  return accounts.filter(account => platformAddresses.indexOf(account.address) !== -1);\n}\n","/* eslint-disable */\n\nimport _ from 'lodash';\n\nexport const groupForm = (prototype, form = null) => {\n  if (form === null) {\n    form = {\n      name: null,\n      description: null,\n      prototype: prototype.name,\n      version: prototype.version,\n      groups: [...prototype.groups],\n      values: prototype.fields.map(field => {\n        return { ...field, value: field.deflt };\n      })\n    };\n  }\n\n  if (!form.hasOwnProperty('groups')) {\n    form.groups = [...prototype.groups];\n    form.values = prototype.fields.map(field => {\n      const value = form.values.find(value => value.position === field.position);\n      return {\n        ...value,\n        ...field\n      };\n    });\n  }\n\n  if (form.hasOwnProperty('values')) {\n    const maxPosition = _.max(form.values.map(value => value.position));\n\n    // important point\n    if (form.groups.length > 0) {\n      // Mark any existing groups as non-virtual\n      form.groups = form.groups.map(group => {\n        return { ...group, virtual: false };\n      });\n      // Make sure groups are properly sorted\n      form.groups = _.sortBy(form.groups, 'lower');\n      // First we need to create any virtual groups, if needed\n      let position = 0;\n      while (position <= maxPosition) {\n        // First, find the group of which this value is a member, if any\n        const currentGroup = form.groups.find(\n          group => group.lower <= position && group.upper > position\n        );\n        if (!!currentGroup) {\n          // We already have a group for this position. Leapfrog to the next\n          position = currentGroup.upper;\n        } else {\n          // OK, we couldn't find the current group, so find the next one\n          const nextGroup = form.groups.find(group => group.lower > position);\n          if (!!nextGroup) {\n            // Add a new virtual group that covers this position up to the next group\n            form.groups = [\n              {\n                name: null,\n                virtual: true,\n                lower: position,\n                upper: nextGroup.lower,\n                iteration_limit: 1\n              },\n              ...form.groups\n            ];\n            // Leapfrog\n            position = nextGroup.upper;\n          } else {\n            // We're at the end. Add a covering virtual group\n            form.groups.push({\n              name: null,\n              virtual: true,\n              lower: position,\n              upper: maxPosition + 1,\n              iteration_limit: 1\n            });\n          }\n        }\n      }\n    } else {\n      // We have no groups at all. Create a single virtual group for all values.\n      form.groups.push({\n        name: null,\n        virtual: true,\n        lower: 0,\n        upper: maxPosition + 1,\n        iteration_limit: 1\n      });\n    }\n\n    form.groups = _.sortBy(form.groups, 'lower').map(group => {\n      group.instances = [];\n      return group;\n    });\n    form.values = _.sortBy(form.values, 'position');\n    // OK, we have the groups, now we need to add the instances and fields\n    for (let group of form.groups) {\n      const values = form.values.filter(\n        value => value.position >= group.lower && value.position < group.upper\n      );\n      if (!group.virtual || group.iteration_limit > 1) {\n        // How many instances do we need?\n        const instanceCount = Math.max(\n          1,\n          _.max(values.map(value => (value.value === null ? 1 : value.value.length)))\n        );\n        for (let g = 0; g < instanceCount; g++) {\n          let instance = {\n            instance: g,\n            fields: values.map(value => {\n              let field = {\n                name: value.name,\n                description: value.description,\n                meta: value.meta,\n                position: value.position,\n                data_type: value.data_type,\n                is_repeatable: value.is_repeatable,\n                is_required: value.is_required,\n                values: []\n              };\n              if (Array.isArray(value.value) && value.value.length > g) {\n                if (value.is_repeatable) {\n                  for (let f = 0; f < value.value[g].length; f++) {\n                    field.values.push({\n                      instance: f,\n                      value: value.value[g][f]\n                    });\n                  }\n                } else {\n                  field.values.push({\n                    instance: 0,\n                    value: value.value[g]\n                  });\n                }\n              }\n              return field;\n            })\n          };\n          group.instances.push(instance);\n        }\n      } else {\n        // Iteration limit is 1\n        let instance = {\n          instance: 0,\n          fields: values.map(value => {\n            let field = {\n              name: value.name,\n              description: value.description,\n              meta: value.meta,\n              position: value.position,\n              data_type: value.data_type,\n              is_repeatable: value.is_repeatable,\n              is_required: value.is_required,\n              values: []\n            };\n            if (field.is_repeatable) {\n              if (Array.isArray(value.value)) {\n                for (let f = 0; f < value.value.length; f++) {\n                  field.values.push({\n                    instance: f,\n                    value: value.value[f]\n                  });\n                }\n              }\n            } else {\n              field.values.push({\n                instance: 0,\n                value: value.value\n              });\n            }\n            return field;\n          })\n        };\n        group.instances.push(instance);\n      }\n    }\n    delete form.values;\n  }\n  // For repeating groups and fields, there must always be one \"empty\" group and/or field at the end.\n  for (let group of form.groups) {\n    // if (group.iteration_limit > 1) {\n    //     const instance = _.last(group.instances)\n    //     const values = _.flatten(instance.fields.map(field => field.values.map(value => value.value)))\n    //     // If at least one value is non-null, then we need to add a new empty group at the end.\n    //     if (!_.every(values, value => value === null)) {\n    //         // OK, we need to add another empty instance\n    //         group.instances.push({\n    //             instance: instance.instance + 1,\n    //             fields: instance.fields.map(field => {\n    //                 return {\n    //                     ...field,\n    //                     values: []\n    //                 }\n    //             })\n    //         })\n    //     }\n    // }\n\n    // Now we check the individual fields\n    // Each field must have at least one value.\n    // For repeating fields, there must always be a final empty instance.\n    for (let instance of group.instances) {\n      for (let field of instance.fields) {\n        if (field.values.length === 0) {\n          field.values.push({\n            instance: 0,\n            value: null\n          });\n          // } else if (field.is_repeatable) {\n          //     const value = _.last(field.values)\n          //     if (value.value !== null) {\n          //         field.values.push({\n          //             instance: value.instance + 1,\n          //             value: null\n          //         })\n          //     }\n        }\n      }\n    }\n  }\n  return form;\n};\n\nexport const ungroupForm = form => {\n  let packed = {\n    description: form.description,\n    values: []\n  };\n  let names = {};\n  for (const group of form.groups) {\n    for (const instance of group.instances) {\n      for (const field of instance.fields) {\n        names[field.name] = {\n          position: field.position,\n          grouped: !group.virtual || group.iteration_limit > 1,\n          is_repeatable: field.is_repeatable\n        };\n      }\n    }\n  }\n  for (const name in names) {\n    const info = names[name];\n    const group = form.groups.find(\n      group => group.lower <= info.position && group.upper > info.position\n    );\n    if (info.grouped && info.is_repeatable) {\n      // Array of arrays\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        if (_.last(subvalues) === null) {\n          subvalues = _.dropRight(subvalues, 1);\n        }\n        values.push(subvalues);\n        while (Array.isArray(_.last(values)) && _.last(values).length === 0) {\n          values = _.dropRight(values, 1);\n        }\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.grouped) {\n      // Just a plain array\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        values.push(subvalues[0]);\n      }\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.is_repeatable) {\n      // Just a plain array\n      const instance = group.instances[0];\n      let values = instance.fields\n        .find(field => field.name === name)\n        .values.map(value => value.value);\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else {\n      // Simple value\n      const instance = group.instances[0];\n      const value = instance.fields.find(field => field.name === name).values[0].value;\n      packed.values.push({ name, value });\n    }\n  }\n  packed.values = packed.values.filter(value => value.value !== null);\n  return packed;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getPrivileges(name, isAlias) {\n  return RestClient.get(`/entity/${name}/privileges`, {\n    ...(isAlias && { cls: 'alias' }),\n    page_size: 2147483645\n  });\n}\n\n/**\n    privilege: type,\n    enitity_name: entityName,\n    alias: isAlias\n    role: user_or_group.role,\n    role_type: user_or_group.is_group ? 'group' : 'user',\n    explicit_grant: user_or_group.granted.includes(type),\n    explicit_denied: user_or_group.denied.includes(type),\n    action: granted ? 'revoke' : 'grant'\n  }}\n */\nexport async function setPrivileges(data) {\n  const { granted, alias } = data;\n\n  const actions = granted ? ['revoke', 'deny'] : ['grant', 'allow'];\n\n  try {\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[0]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[1]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    return getPrivileges(data.enitity_name, data.alias);\n  } catch (e) {\n    throw new Error('failed');\n  }\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  mdiFileTableBox,\n  mdiDatabase,\n  mdiFileTree,\n  mdiTable,\n  mdiAlertOutline,\n  mdiTableColumnWidth,\n  mdiAlphaPBox,\n  mdiInboxFull,\n  mdiInbox\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nimport './root.local.scss';\n\nconst VerticalUsageBar = ({ usage, className }) => {\n  let fill;\n  if (usage > 75) {\n    fill = '#ED3A4A';\n  } else if (usage > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  return (\n    <div className={className}>\n      <svg viewBox=\"-2 -2 62 102\">\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" height=\"100\" width=\"60\" fill=\"rgba(12, 50, 110, 0.38)\" />\n        <rect x=\"0\" y={100 - usage} rx=\"8\" ry=\"8\" height={usage} width=\"60\" fill={fill} />\n      </svg>\n    </div>\n  );\n};\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nconst SidebarStorageItem = ({ ns, usage, setItem, isSelected }) => (\n  <div\n    className={classnames('sidebar-item', { selected: isSelected })}\n    role=\"button\"\n    onClick={() => setItem(ns)}\n  >\n    <VerticalUsageBar usage={usage} className=\"usage-icon\" />\n    {ns}\n  </div>\n);\n\nexport const StorageSidebar = ({ list, setItem, selectedItem, isLoading }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiFileTableBox} />\n        </SvgIcon>\n        Tablespaces\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          list.map((element, index) => (\n            <SidebarStorageItem\n              isSelected={selectedItem === element.ns}\n              key={index}\n              {...element}\n              setItem={setItem}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst iconMapper = {\n  triggers: { icon: mdiAlertOutline, label: 'Triggers' },\n  tables: { icon: mdiTable, label: 'Tables' },\n  indexes: { icon: mdiTableColumnWidth, label: 'Indexes' },\n  procedures: { icon: mdiAlphaPBox, label: 'Procedures' },\n  packages: { icon: mdiInbox, label: 'Packages' },\n  packageBodies: { icon: mdiInboxFull, label: 'Package Bodies' }\n};\n\nconst objectsSidebarMapper = (setItem, selectedItem, invalidObjects) => (\n  { owner, objects },\n  index\n) => {\n  const isSelected = owner === selectedItem.owner;\n  const invalidChildren = invalidObjects.filter(({ owner: name }) => name === owner);\n  return (\n    <React.Fragment key={index}>\n      <div\n        className={classnames('sidebar-item', {\n          selected: isSelected,\n          'rotate-cw': !isSelected,\n          'rotate-ccw': isSelected\n        })}\n        role=\"button\"\n        onClick={() => setItem({ owner: isSelected ? null : owner, object: null })}\n      >\n        <SvgIcon>\n          <path d={mdiFileTree} />\n        </SvgIcon>\n        {owner}\n      </div>\n      {isSelected &&\n        objects.map((object, i) => {\n          const isObjectSelected = object === selectedItem.object;\n          const isInvalid = invalidChildren.findIndex(({ object: name }) => name === object) !== -1;\n          return (\n            <div\n              key={`${index}_${i}`}\n              className={classnames('child', 'sidebar-item', {\n                selected: isObjectSelected,\n                invalid: isInvalid\n              })}\n              role=\"button\"\n              onClick={() => setItem({ owner, object })}\n            >\n              <SvgIcon>\n                <path d={iconMapper[object].icon} />\n              </SvgIcon>\n              {iconMapper[object].label}\n            </div>\n          );\n        })}\n    </React.Fragment>\n  );\n};\n\nexport const ObjectsSidebar = ({\n  setItem,\n  selectedItem,\n  list,\n  isLoading,\n  invalidObjects\n}) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiDatabase} />\n        </SvgIcon>\n        Schema\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          <div className=\"sidebar-container\">\n            {list.map(objectsSidebarMapper(setItem, selectedItem, invalidObjects))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/jsx-indent-props */\nimport React from 'react';\nimport { mdiArrangeBringToFront, mdiFileTableBox, mdiFlashCircle, mdiHelpRhombusOutline, mdiTable } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Chart } from 'react-google-charts';\nimport classnames from 'classnames';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nconst KPIDisplay = ({ value, suffix, colorFormatting = false }) => {\n  let fill;\n  if (value > 75) {\n    fill = '#ED3A4A';\n  } else if (value > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  const digits = value > 10 ? 0 : 2;\n  const valueString = value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: digits\n  });\n  return (\n    <span style={colorFormatting ? { color: fill } : {}}>\n      {valueString}\n      {suffix}\n    </span>\n  );\n};\n\nconst NoDataComponent = ({ name }) => (\n  <div className=\"content dashed-and-centered\">\n    <SvgIcon>\n      <path d={mdiHelpRhombusOutline} />\n    </SvgIcon>\n    <p>Please select a {name} in order to view its children</p>\n  </div>\n);\n\nconst StorageDetailsList = ({ data, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <Loader>Loading data...</Loader>\n      </Center>\n    );\n  }\n\n  const { tablespace, files } = data;\n\n  if (!tablespace || !tablespace.ns) {\n    return <NoDataComponent name=\"tablespace\" />;\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"detail-row\">\n        <div className=\"ts-name\">\n          <SvgIcon>\n            <path d={mdiFileTableBox} />\n          </SvgIcon>\n          {tablespace.ns}\n        </div>\n        <div className=\"details\">\n          <div className=\"block\">\n            <div className=\"top\">Total:</div>\n            <div>\n              <KPIDisplay value={tablespace.totalGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used size:</div>\n            <div>\n              <KPIDisplay value={tablespace.usedGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used %:</div>\n            <div>\n              <KPIDisplay value={tablespace.usage} suffix=\"%\" colorFormatting />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free size:</div>\n            <div>\n              <KPIDisplay value={tablespace.freeGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free %:</div>\n            <div>\n              <KPIDisplay value={tablespace.freePerc} suffix=\"%\" />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {files.map(({ PCT_USED, FILE_NAME, SIZE_MB, MAXSIZE_MB }, index) => {\n        const filePath = FILE_NAME.split('/');\n        const [fileName, extension] = filePath[filePath.length - 1].split('.');\n        return (\n          <div key={index} className=\"detail-row\">\n            <div className=\"file-name\">\n              <SvgIcon>\n                <path d={mdiTable} />\n              </SvgIcon>\n              {fileName}\n              <span className=\"extension\">.{extension}</span>\n            </div>\n            <div className=\"details\">\n              <div className=\"block\">\n                <div className=\"top\">Used %:</div>\n                <div>\n                  <KPIDisplay value={PCT_USED} suffix=\"%\" colorFormatting />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Size:</div>\n                <div>\n                  <KPIDisplay value={SIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Max size:</div>\n                <div>\n                  <KPIDisplay value={MAXSIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n      <div>\n        <Center>\n          <Chart\n            width=\"700px\"\n            height=\"400px\"\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n              ['Task', 'Hours per Day'],\n              [`Free  ${tablespace.freeGB.toFixed(2)} GB`, tablespace.freePerc],\n              [`Used  ${tablespace.usedGB.toFixed(2)} GB`, tablespace.usage]\n            ]}\n            options={{\n              backgroundColor: 'transparent',\n              is3D: true,\n              colors: ['rgb(52, 204, 136)', 'rgb(237, 58, 74)']\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n        </Center>\n      </div>\n    </div>\n  );\n};\n\nexport const StorageViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiTable} />\n        </SvgIcon>\n        Data Files\n      </div>\n      <StorageDetailsList data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport const ObjectsViewer = ({ data, isLoading, sidebarDisabled, protocol }) => {\n  const objectsDataMapper = SystemExplorerFeatureUtil.getObjectsDataMapper(protocol);\n  if (!!objectsDataMapper && data && data.length > 0) {\n    data = data.slice().map(objectsDataMapper);\n  }\n\n  return (\n    <div className={classnames('viewer', {\n        'sidebar-disabled': sidebarDisabled\n      })}\n    >\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiArrangeBringToFront} />\n        </SvgIcon>\n        Objects\n      </div>\n      {isLoading ? (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      ) : (\n        <div className=\"content\">\n          <Overflow>\n            {!data || data.length === 0 ? (\n              <NoDataComponent name=\"object\" />\n            ) : (\n              data.map(({ OBJECT_NAME, CREATED, OBJECT_ID, LAST_DDL_TIME }) => {\n                return (\n                  <div key={OBJECT_ID} className=\"detail-row\">\n                    <div className=\"file-name\">\n                      <SvgIcon>\n                        <path d={mdiFlashCircle} />\n                      </SvgIcon>\n                      {OBJECT_NAME}\n                    </div>\n                    <div className=\"details\">\n                      <div className=\"object-block\">\n                        <div className=\"top\">Last DDL Time</div>\n                        <div>{LAST_DDL_TIME}</div>\n                      </div>\n                      <div className=\"object-block\">\n                        <div className=\"top\">Created</div>\n                        <div>{CREATED}</div>\n                      </div>\n                      {/* Designs have some buttons here */}\n                    </div>\n                  </div>\n                );\n              })\n            )}\n          </Overflow>\n        </div>\n      )}\n    </div>\n  );\n};\n","const GB_MULTIPLIER = 1024 * 1024 * 1024;\n\nexport const formatMemorySizeGb = (bytes) => {\n  return (bytes / GB_MULTIPLIER).toFixed(3);\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { STATUS_TYPES } from '../../store/selectors';\n\nimport './StatusLabel.local.scss';\n\nconst STATUS_LABEL_MAP = {\n  [STATUS_TYPES.down]: 'Down',\n  [STATUS_TYPES.up]: 'Up',\n  [STATUS_TYPES.error]: 'Has errors',\n  [STATUS_TYPES.notConnected]: 'Not connected',\n  [STATUS_TYPES.notFound]: 'Not found',\n};\n\nexport class StatusLabel extends React.PureComponent {\n  render() {\n    const {\n      status\n    } = this.props;\n\n    return (\n      <div className={`status ${status.replace(/\\s/g, '-')}`} role=\"presentation\">{STATUS_LABEL_MAP[status]}</div>\n    );\n  }\n}\n\nStatusLabel.propTypes = {\n  status: string\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LayersOutlinedIcon from '@material-ui/icons/LayersOutlined';\nimport { mdiClipboardPlayMultipleOutline, mdiShieldCheckOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nexport const navigationItems = [\n  {\n    title: <FormattedMessage id=\"navigation.dashboard\" />,\n    to: '/dashboard',\n    id: 'dashboard',\n    icon: <DashboardOutlinedIcon />,\n    qaClass: 'qa-nav-dashboard'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.jobs\" />,\n    to: '/jobs',\n    id: 'jobs',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiClipboardPlayMultipleOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-jobs'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.system\" />,\n    to: '/system',\n    id: 'system',\n    icon: <LayersOutlinedIcon />,\n    qaClass: 'qa-nav-system',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.entitites\" />,\n        to: '/system/entities',\n        qaClass: 'qa-nav-entities'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.explorer\" />,\n        to: '/system/explorer',\n        qaClass: 'qa-nav-explorer'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.user.and.groups\" />,\n        to: '/system/mas-accounts/users',\n        qaClass: 'qa-nav-mas-accounts'\n      }\n    ]\n  },\n  {\n    title: <FormattedMessage id=\"navigation.compliance\" />,\n    to: '/compliance',\n    id: 'compliance',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiShieldCheckOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-compliance',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.license.collection\" />,\n        to: '/compliance/licensing',\n        qaClass: 'qa-nav-licensing'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.usage\" />,\n        to: '/compliance/license-collection',\n        qaClass: 'qa-nav-license-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.allocation\" />,\n        to: '/compliance/license-allocation',\n        qaClass: 'qa-nav-license-allocation'\n      }\n    ]\n  }\n];\n","import { getQuery, getInvocationStatus } from './selectors';\n\nimport { InvocationStatus } from './constants';\n\nimport { fetchInvocation } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  const { uuid, process } = getQuery(store.getState());\n\n  if (uuid) {\n    await store.dispatch(fetchInvocation(uuid, process));\n  }\n\n  const STATUS = getInvocationStatus(store.getState());\n\n  switch (STATUS) {\n    case InvocationStatus.EXECUTING:\n    case InvocationStatus.SCHEDULED:\n    case InvocationStatus.DELAYED:\n    case 'NOT_FETCHED':\n      console.log('[invocation-poller] - polling', STATUS); // eslint-disable-line\n      throw new Error('need to poll invocation...');\n    default:\n      break;\n  }\n\n  console.log('[invocation-poller] - done'); // eslint-disable-line\n\n  return Promise.resolve();\n}\n\nexport const invocationPoller = withPolling(task, 5000);\n","import React from 'react';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors }) => {\n  let content;\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          {errors.map((error, index) => {\n            return <p key={index}>• {error}</p>;\n          })}\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              {output.map((row, index) => {\n                return (\n                  <p className=\"row\" key={`${row.data.text}-${index}`}>\n                    {row.data.text}\n                  </p>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        {output.map((row, index) => {\n          return (\n            <p className=\"row\" key={index}>\n              {row.data.text}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return content;\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { fromJS } from 'immutable';\n\nexport const bindReducer = (initialState, actions) => (state = fromJS(initialState), action) => {\n  if (typeof actions[action.type] === 'function') {\n    return actions[action.type](state, action.payload);\n  }\n\n  return state;\n};\n","export const actionStates = {\n  LOADING: 'LOADING',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS',\n};\n","import { actionStates } from 'shared/lib';\n\nexport class ActionCreatorHandler {\n  constructor(action) {\n    this.action = action;\n  }\n\n  getEventAction() {\n    return this.action;\n  }\n\n  getLoadingAction() {\n    return `${this.action}__${actionStates.LOADING}`;\n  }\n\n  getFailAction() {\n    return `${this.action}__${actionStates.FAIL}`;\n  }\n\n  getSuccessAction() {\n    return `${this.action}__${actionStates.SUCCESS}`;\n  }\n\n  dispatchLoading(payload) {\n    return {\n      type: this.getLoadingAction(),\n      payload,\n    };\n  }\n\n  dispatchFail(payload) {\n    return {\n      type: this.getFailAction(),\n      payload,\n    };\n  }\n\n  dispatchSuccess(payload) {\n    return {\n      type: this.getSuccessAction(),\n      payload,\n    };\n  }\n\n  dispatchEvent(payload) {\n    return {\n      type: this.action,\n      payload,\n    };\n  }\n}\n","export const slugify = (text) => text.toString().toLowerCase()\n  .trim()\n  .replace(/[^a-z0-9 -]/g, '')\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-');\n","export const createUrl = (url, params = {}) => {\n  if (typeof params !== 'object' || !params) {\n    return url;\n  }\n  let path = url;\n  const query = { ...params };\n  Object.keys(query).forEach((key) => {\n    if (typeof query[key] !== 'undefined' && path.includes(`:${key}`)) {\n      path = path.replace(`:${key}`, query[key]);\n      delete query[key];\n    }\n  });\n\n  if (!Object.keys(query).length || !Object.keys(query).find(((key) => typeof query[key] !== 'undefined'))) {\n    return path;\n  }\n\n  const paramsUrl = Object.keys(query).filter((key) => query[key])\n    .map((key) => `${key}=${encodeURIComponent(query[key])}`)\n    .join('&');\n  return `${path}${'?'.concat(...paramsUrl)}`;\n};\n","export const numberPretty = (number) => {\n  if (!number) {\n    return number;\n  }\n  const parts = number.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n","const formatNumber = (number, pow, decimals = 1) => (number / (10 ** pow)).toFixed(decimals);\n\nexport const smartNumber = (number, decimals = false) => {\n  if (typeof number !== 'number') {\n    return number;\n  }\n  if (number < 10 ** 3) {\n    if (typeof decimals === 'number') {\n      return +number.toFixed(+decimals);\n    }\n    return number;\n  }\n\n  if (number < 10 ** 6) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 3, decimals)} K`;\n    }\n    return `${formatNumber(number, 3)} K`;\n  }\n\n  if (number < 10 ** 9) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 6, decimals)} M`;\n    }\n    return `${formatNumber(number, 6)} M`;\n  }\n\n  if (typeof decimals === 'number') {\n    return `${formatNumber(number, 9, decimals)} B`;\n  }\n  return `${formatNumber(number, 9)} B`;\n};\n","export const capitalizeFirstLetter = (s) => s.toString().charAt(0).toUpperCase() + s.slice(1);\n","export const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n","/* eslint-disable */\nexport const phoneNumberPattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n","export const urlPattern = /^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)$/;\n","export const randomStringGenerator = (length = 5) => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n  for (let i = 0; i < length; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n","export const generateUniqueId = () => btoa(Math.floor(new Date().valueOf() * Math.random())).replace(/=/g, '').slice(0, 16);\n","export const emptyFunc = () => null;\n","export const delay = (timer) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve();\n  }, timer);\n});\n","import moment from 'moment';\n\nimport { isBeforeDay } from './isBeforeDay';\n\nexport function isInclusivelyAfterDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n  return !isBeforeDay(a, b);\n}\n","const STATES = {\n  loading: 'LOADING',\n  fail: 'FAIL',\n  success: 'SUCCESS'\n};\n\nexport const SEPARATOR = '__';\n\nexport function type(name, stateKey) {\n  const state = STATES[stateKey];\n\n  if (state) {\n    return name + SEPARATOR + state;\n  }\n\n  return name;\n}\n\n/**\n *\n * These could be written as classes with static methods.\n *\n * */\n\nexport const types = {\n  action: type,\n  loading: function loadingType(name) {\n    return type(name, 'loading');\n  },\n  success: function successType(name) {\n    return type(name, 'success');\n  },\n  fail: function failType(name) {\n    return type(name, 'fail');\n  }\n};\n\nexport const creators = {\n  action: function action(name, payload) {\n    return { type: name, payload };\n  },\n  loading: function loadingAction(name, payload) {\n    return { type: type(name, 'loading'), payload };\n  },\n  success: function successAction(name, payload) {\n    return { type: type(name, 'success'), payload };\n  },\n  fail: function failAction(name, payload) {\n    return { type: type(name, 'fail'), payload };\n  }\n};\n","import { produce } from 'immer';\n\nfunction unchanged(state) {\n  return state;\n}\n\nexport function createReducer(reducers, initialState = {}) {\n  const reducerInitialState = reducers.initialState || initialState;\n\n  return function r(state = reducerInitialState, action) {\n    const { type } = action;\n\n    if (!type) {\n      console.error('[createReducer] action does not have a type', action); // eslint-disable-line\n      return unchanged(state);\n    }\n\n    const reducer = reducers[action.type];\n\n    if (reducer) {\n      return produce(state, nextState => {\n        reducer(nextState, action, state);\n      });\n    }\n\n    return unchanged(state);\n  };\n}\n","import moment from 'moment';\nimport _ from 'lodash';\n\nexport function getWorkloadData(jobs, dateRange) {\n  const isSingleDay =\n    moment(dateRange.currentDate).format('MMM D YY') ===\n    moment(dateRange.endDate).format('MMM D YY');\n\n  if (jobs.length === 0) return [];\n\n  const jobsWithFormattedInvokedDate = _.orderBy(jobs, ['date_invoke'], ['asc']).map(job => ({\n    ...job,\n    date_invoke: isSingleDay\n      ? `${moment(job.date_invoke).format('H')}:00`\n      : moment(job.date_invoke).format('MMM D YY')\n  }));\n  const groupJobsByDate = _.groupBy(jobsWithFormattedInvokedDate, 'date_invoke');\n  const data = [];\n\n  // if no process was executed during selected interval, simply return an empty array\n  if (Object.keys(groupJobsByDate).length === 0) {\n    return [];\n  }\n\n  Object.keys(groupJobsByDate).forEach(date => {\n    const item = { name: date, SUCCEEDED: 0, FAILED: 0, ABORTED: 0, total: 0 };\n    groupJobsByDate[date].forEach(el => {\n      item[el.status]++;\n      if (el.status === 'SUCCEEDED' || el.status === 'FAILED' || el.status === 'ABORTED') {\n        item.total++;\n      }\n    });\n\n    data.push(item);\n  });\n\n  // display all days between the first one that run a process and the last one\n  // or all hours from 0->23\n  const intervalArray = [];\n  const daylist = isSingleDay ? getHoursArray(dateRange) : getDaysArray(dateRange);\n  const totalDays = daylist.reduce((o, key) => ({ ...o, [key]: '' }), {});\n\n  // update the total days from the interval array with the days that have some processes executed\n  data.forEach(day => {\n    totalDays[day.name] = day;\n  });\n\n  Object.keys(totalDays).forEach(date => {\n    // for the days in the interval that have no executed process, add an empty entry\n    if (typeof totalDays[date] === 'string') {\n      totalDays[date] = {\n        name: date,\n        SUCCEEDED: 0,\n        FAILED: 0,\n        ABORTED: 0,\n        total: 0\n      };\n    }\n    intervalArray.push(totalDays[date]);\n  });\n\n  return intervalArray;\n}\n/**\n * Creates an array for the selected interval of days\n */\nfunction getDaysArray(dateRange) {\n  let { currentDate } = dateRange;\n  const { endDate } = dateRange;\n  const dateArray = [];\n\n  while (currentDate <= endDate) {\n    dateArray.push(moment(currentDate).format('MMM D YY'));\n    currentDate = moment(currentDate).add(1, 'days');\n  }\n\n  return dateArray;\n}\n\n/**\n *\n * Creates an array for all the hours in a day 0 -> 23\n */\nfunction getHoursArray() {\n  const dateArray = [];\n\n  for (let i = 0; i < 24; i++) {\n    dateArray.push(`${i}:00`);\n  }\n  return dateArray;\n}\n","import { CheckAuthorizationEffect } from './check-authorization/check-authorization.effect';\nimport { LoginEffect } from './login/login.effect';\nimport { LogoutEffect } from './logout/logout.effect';\nimport { BeHealthEffect, BeLicenceEffect, BeVersionEffect } from './be-version/be-version.effect';\n\nexport const sessionEffects = [\n  CheckAuthorizationEffect,\n  LoginEffect,\n  LogoutEffect,\n  BeVersionEffect,\n  BeLicenceEffect,\n  BeHealthEffect,\n];\n","import { emptyFunc } from 'shared/lib';\n\nexport const tryAsync = async (action, onError = emptyFunc) => {\n  try {\n    await action();\n  } catch (e) {\n    onError(e);\n  }\n};\n","import Cookie from 'js-cookie';\nimport axios from 'axios';\n\nimport { CONSTANTS } from 'config';\nimport { createUrl } from 'shared/lib';\n\nclass RestClientClass {\n  constructor() {\n    this.authentications = {\n      basicAuth: {\n        name: 'Authorization',\n        accessToken: '',\n      },\n    };\n\n    this.baseUrl = CONSTANTS.BASE.HOST;\n\n    if (CONSTANTS.BASE.VERSION) {\n      this.baseUrl = `${CONSTANTS.BASE.HOST}/${CONSTANTS.BASE.VERSION}`;\n    }\n\n    this.client = axios.create({\n      timeout: CONSTANTS.BASE.TIMEOUT,\n      baseURL: this.baseUrl,\n      // withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.get = this.get.bind(this);\n    this.delete = this.delete.bind(this);\n    this.head = this.head.bind(this);\n    this.post = this.post.bind(this);\n    this.put = this.put.bind(this);\n    this.patch = this.patch.bind(this);\n  }\n\n  setBasicAuth() {\n    this.authentications.basicAuth.accessToken = `Basic ${Cookie.get('Authorization')}`;\n  }\n\n  removeBasicAuth() {\n    this.authentications.basicAuth.accessToken = Cookie.remove('Authorization');\n  }\n\n  getRequestConfig() {\n    return {\n      headers: {\n        [this.authentications.basicAuth.name]: this.authentications.basicAuth.accessToken,\n      },\n    };\n  }\n\n  get(path, query) {\n    const url = createUrl(path, query);\n    return this.client.get(url, this.getRequestConfig());\n  }\n\n  delete(path, query) {\n    const url = createUrl(path, query);\n    return this.client.delete(url, this.getRequestConfig());\n  }\n\n  head(path, query) {\n    const url = createUrl(path, query);\n    return this.client.head(url, this.getRequestConfig());\n  }\n\n  post(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.post(url, body, this.getRequestConfig());\n  }\n\n  put(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.put(url, body, this.getRequestConfig());\n  }\n\n  patch(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.patch(url, body, this.getRequestConfig());\n  }\n}\n\nexport const RestClient = new RestClientClass();\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\n\nimport { actionStates } from 'shared/lib';\nimport { loginSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nimport { Form } from './components';\n\nexport class LoginPage extends React.PureComponent {\n  componentDidMount() {\n    Cookie.remove('Authorization');\n  }\n\n  componentDidUpdate() {\n    if (this.props.status === actionStates.SUCCESS) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.login.title\"\n        isLoading={this.props.status === actionStates.LOADING}\n      >\n        <Form\n          isLoading={this.props.status === actionStates.LOADING}\n          errors={this.props.errors}\n          submit={this.props.login}\n          resetErrors={this.props.resetErrors}\n        />\n      </Container>\n    );\n  }\n\n  static path = '/login';\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  errors: PropTypes.object.isRequired,\n  status: PropTypes.oneOf([actionStates.LOADING, actionStates.SUCCESS, actionStates.FAIL, '']).isRequired,\n  login: PropTypes.func.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  errors: loginSelector(state).get('errors'),\n  status: loginSelector(state).get('status'),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (data) => dispatch(actions.login.dispatchLoading(data)),\n  resetErrors: () => dispatch(actions.login.dispatchFail([])),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport LoginGraphic from '../../../../assets/images/login_graphic.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_blue.svg';\nimport MasLogo from '../../../../assets/images/mas_logo_blue.svg';\n\nimport './container.local.scss';\n\nexport class ContainerComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={`${className} flex`}>\n        <div className={`${className}__wrapper`}>\n          <div className=\"header\">\n            <div className=\"mas-logo-container\">\n              <img className=\"img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n            </div>\n            <Typography className={`${className}__title`} variant=\"h3\" component=\"h2\">\n              <FormattedMessage id={this.props.title} />\n            </Typography>\n            {!!this.props.description && (\n              <div className={`${className}__description`}>\n                {this.props.description}\n              </div>\n            )}\n          </div>\n          {this.props.children}\n        </div>\n        <div className={`${className}__graphics`}>\n          <div className=\"logo-container\">\n            <img className=\"img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          </div>\n          <div className=\"graphic-container\">\n            <img className=\"img-responsive\" src={LoginGraphic} alt=\"Login graphic\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  description: PropTypes.string,\n  className: PropTypes.string,\n};\n\nContainerComponent.defaultProps = {\n  className: 'container',\n  description: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { RestErrors } from 'shared/components';\n\nimport './form.local.scss';\n\nexport class FormComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  render() {\n    const { className } = this.props;\n    const restErrors = this.getRestErrors();\n\n    return (\n      <div className={className}>\n        <form onSubmit={this.submitHandler} noValidate autoComplete=\"off\">\n          <div className=\"flex direction-column\">\n            <TextField\n              autoFocus\n              className={`${className}__field`}\n              helperText={this.getError('username')}\n              onChange={this.valueChangeHandler('username')}\n              variant=\"outlined\"\n              label={<FormattedMessage id=\"general.form.username\" />}\n              inputProps={{\n                className: 'qa-login-username',\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n              InputLabelProps={{\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n            />\n\n            <FormControl className={`${className}__field`} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={this.state.showPassword ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.valueChangeHandler('password')}\n                inputProps={{\n                  className: 'qa-login-password',\n                  style: { fontSize: '14px', fontFamily: 'Lato' }\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <div className=\"password-icon\">\n                      <IconButton\n                        className=\"qa-login-toggle-password-visibility\"\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.setShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                        edge=\"end\"\n                        color=\"inherit\"\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </div>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          {restErrors.size > 0 && (\n            <div className={`${className}__errors`}>\n              <RestErrors errors={restErrors} />\n            </div>\n          )}\n          <div className={`${className}__actions flex`}>\n            <Button\n              className=\"qa-login-btn\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                this.props.isLoading || this.state.username === '' || this.state.password === ''\n              }\n            >\n              <FormattedMessage id=\"session.login.button\" />\n            </Button>\n            {/* <div className=\"forgot-password qa-forgot-password\">\n              <FormattedMessage id=\"session.login.forgot-password\" />\n            </div> */}\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  setShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  getError(field) {\n    const error = this.props.errors.find(item => item.get('path') === `.${field}`);\n    if (!error) {\n      return '';\n    }\n\n    return error.get('message') || 'This field is invalid';\n  }\n\n  getRestErrors() {\n    return this.props.errors.filter(\n      item => item.get('path') !== '.username' && item.get('path') !== '.password'\n    );\n  }\n\n  resetErrors() {\n    if (this.props.errors.size) {\n      this.props.resetErrors();\n    }\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    this.props.submit({\n      username: this.state.username,\n      password: this.state.password\n    });\n  }\n\n  valueChangeHandler(name) {\n    return event => {\n      this.resetErrors();\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n}\n\nFormComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nFormComponent.defaultProps = {\n  className: 'form'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { slugify } from 'shared/lib';\n\nimport './rest-errors.local.scss';\n\nexport class RestErrorsComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        {this.props.errors.map((error) => (\n          <div key={slugify(error.get('message'))}>\n            {error.get('message')}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRestErrorsComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nRestErrorsComponent.defaultProps = {\n  className: 'rest-errors',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport './job-item.local.scss';\n\nexport class JobItemComponent extends React.PureComponent {\n  render() {\n    const { extended } = this.props;\n    if (extended) {\n      return (\n        <div className={`${this.props.className} ${this.jobStatus()}`}>\n          <div className=\"status-icon\">{this.props.statusChild}</div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {this.props.job.get('process')}</p>\n                    {this.props.job.get('schedule') && (\n                      <p>Schedule: {this.props.job.get('schedule')}</p>\n                    )}\n                  </>\n                }\n              >\n                <div className=\"name\">{this.formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {this.props.job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"date\">\n                  {moment(this.props.job.get('date_invoke'))\n                    .local()\n                    .format('MMM DD YYYY')}\n                </div>\n              </LimitlessTooltip>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${this.props.className} ${this.jobStatus()}`}>\n        <Link to={`/jobs/job?invocation=${this.props.job.get('uuid')}`}>\n          <div className=\"first-row\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {this.props.job.get('process')}</p>\n                  {this.props.job.get('schedule') && (\n                    <p>Schedule: {this.props.job.get('schedule')}</p>\n                  )}\n                </>\n              }\n            >\n              <div className=\"name\">{this.formatName()}</div>\n            </LimitlessTooltip>\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"time\">\n                {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n          <div className=\"second-row\">\n            {this.props.job.get('user_owner') && (\n              <div className=\"run-by\">\n                <AccountCircleOutlinedIcon />\n                {this.props.job.get('user_owner')}\n              </div>\n            )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('name') && (\n                <div className=\"dbms\">\n                  <SvgIcon>\n                    <Icon path={mdiHexagonMultipleOutline} />\n                  </SvgIcon>\n                  {this.props.job\n                    .get('connections')\n                    .get('dbms')\n                    .get('name')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('shell') &&\n              this.props.job\n                .get('connections')\n                .get('shell')\n                .get('host_address') && (\n                <div className=\"server\">\n                  <StorageIcon />\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('shell') &&\n                    this.props.job\n                      .get('connections')\n                      .get('shell')\n                      .get('host_address')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special')\n                .get('database') && (\n                <div className=\"database\">\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('dbms') &&\n                    this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('protocol_special')\n                      .get('database')}\n                </div>\n              )}\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"date\">\n                {moment(this.props.job.get('date_invoke')).format('MMM DD YYYY')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n\n  jobStatus = () => {\n    switch (this.props.job.get('status')) {\n      case 'EXECUTING':\n        return 'executing';\n      case 'SUCCEEDED':\n        return 'succeeded';\n      case 'SCHEDULED':\n        return 'scheduled';\n      case 'DELAYED':\n        return 'delayed';\n      case 'ABORTED':\n        return 'aborted';\n      case 'FAILED':\n        return 'failed';\n      case 'KILLED':\n        return 'killed';\n      default:\n        return '';\n    }\n  };\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItemComponent.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired,\n  extended: PropTypes.bool,\n  statusChild: PropTypes.element\n};\n\nJobItemComponent.defaultProps = {\n  className: 'job-item',\n  extended: false,\n  statusChild: null\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Center } from 'shared/components';\n\nimport { CustomTooltip, CustomAxisTick } from './components';\n\nimport './workload-graph.local.scss';\n\nexport class WorkloadGraphComponent extends React.PureComponent {\n  render() {\n    if (this.props.data.length === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ResponsiveContainer>\n          <AreaChart\n            data={this.props.data}\n            margin={{ top: 16, right: 5, left: 5, bottom: 16 }}\n            onClick={this.setSingleDay}\n          >\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0.16} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"chartStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0} />\n                <stop offset=\"5%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"95%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickSize={false}\n              axisLine={false}\n              interval=\"preserveStartEnd\"\n              tick={<CustomAxisTick />}\n            />\n            <Tooltip\n              content={<CustomTooltip isSingleDay={this.props.isSingleDay} />}\n              offset={0}\n              cursor={false}\n              viewBox={{ width: 750, height: 144 }}\n              position={{ x: 'auto', y: 0 }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"total\"\n              stroke=\"url(#chartStroke)\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#gradient)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n\n  setSingleDay = e => {\n    if (!this.props.isSingleDay && e && this.props.setSingleDay) {\n      this.props.setSingleDay({\n        startDate: moment(e.activeLabel),\n        endDate: moment(e.activeLabel)\n      });\n    }\n  };\n}\n\nexport default WorkloadGraphComponent;\n\nWorkloadGraphComponent.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nWorkloadGraphComponent.defaultProps = {\n  className: 'workload-graph'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport './custom-tooltip.local.scss';\n\nexport class CustomTooltipComponent extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.label !== this.props.label) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    if (!this.props.active || !this.props.payload || !this.props.payload.length) return null;\n\n    const label = this.props.isSingleDay\n      ? this.props.payload[0].payload.name\n      : moment(this.props.payload[0].payload.name).format('MMM DD YYYY');\n\n    return (\n      <div className={this.props.className} position={{ x: '100%', y: '-100%' }}>\n        {this.props.payload && (\n          <>\n            <div className=\"date\">{label}</div>\n            <div className=\"info-container\">\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.succeeded\" />\n                </div>\n                <div className=\"value success\">{this.props.payload[0].payload.SUCCEEDED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.aborted\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.ABORTED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.failed\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.FAILED}</div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomTooltipComponent;\n\nCustomTooltipComponent.propTypes = {\n  className: PropTypes.string,\n  payload: PropTypes.array,\n  active: PropTypes.bool,\n  label: PropTypes.string\n};\n\nCustomTooltipComponent.defaultProps = {\n  className: 'custom-tooltip',\n  payload: [],\n  active: false,\n  label: ''\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './custom-axis-tick.local.scss';\n\nexport class CustomAxisTickComponent extends React.PureComponent {\n  render() {\n    return (\n      <g transform={`translate(${this.props.x},${this.props.y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill=\"rgba(12, 50, 110, 0.38)\">{this.props.payload.value}</text>\n      </g>\n    );\n  }\n}\n\nexport default CustomAxisTickComponent;\n\nCustomAxisTickComponent.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  payload: PropTypes.object,\n};\n\nCustomAxisTickComponent.defaultProps = {\n  x: null,\n  y: null,\n  payload: {},\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './circle-img.local.scss';\n\nexport class CircleImgComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.image}\n      </div>\n    );\n  }\n}\n\nexport default CircleImgComponent;\n\nCircleImgComponent.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nCircleImgComponent.defaultProps = {\n  className: 'circle-img',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './number-label.local.scss';\n\nexport class NumberLabelComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n\nexport default NumberLabelComponent;\n\nNumberLabelComponent.propTypes = {\n  className: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nNumberLabelComponent.defaultProps = {\n  className: 'number-label',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './string-label.local.scss';\n\nexport class StringLabelComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.text}</div>;\n  }\n}\n\nexport default StringLabelComponent;\n\nStringLabelComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.node.isRequired\n};\n\nStringLabelComponent.defaultProps = {\n  className: 'string-label'\n};\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport './search-input.local.scss';\n\nexport class SearchInputComponent extends PureComponent {\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <>\n        <div className=\"search-icon\">\n          <SearchIcon />\n        </div>\n        <InputBase\n          className=\"search-input-container\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={onChange}\n          inputProps={{\n            className: 'search qa-search',\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchInputComponent;\n\nSearchInputComponent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport classnames from 'classnames';\n\nimport './dropdown.local.scss';\n\nexport class DropdownComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDropdownOpen: false\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isDropdownOpen) {\n      this.setState({ isDropdownOpen: true });\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    let parentWidth;\n\n    if (this.anchorRef && this.anchorRef.current && this.anchorRef.current.offsetWidth) {\n      parentWidth = this.anchorRef.current.offsetWidth;\n    }\n    return (\n      <>\n        {this.props.target(\n          { isOpen: this.state.isDropdownOpen, ref: this.anchorRef },\n          { toggle: this.handleToggle }\n        )}\n        {items && (\n          <Popover\n            open={this.state.isDropdownOpen}\n            anchorEl={this.anchorRef.current}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList className=\"dropdown-menu-container\" style={{ width: parentWidth }}>\n                {items.map((item, index) => (\n                  <MenuItem\n                    className={classnames('', { disabled: item.disabled })}\n                    key={index}\n                    onClick={() => this.onClickCallback(index)}\n                  >\n                    {item.icon && <ListItemIcon className=\"icon\">{item.icon}</ListItemIcon>}\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Popover>\n        )}\n      </>\n    );\n  }\n\n  handleToggle = () => {\n    if (this.props.disabled) {\n      return false;\n    }\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen\n    }));\n  };\n\n  setCloseDropdown = event => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ isDropdownOpen: false });\n  };\n\n  onClickCallback = itemIndex => {\n    this.props.onSelect(itemIndex, this.props.items[itemIndex]);\n    this.setState({ isDropdownOpen: false });\n  };\n}\n\nexport default DropdownComponent;\n\nDropdownComponent.propTypes = {\n  onSelect: PropTypes.func,\n  target: PropTypes.func,\n  items: PropTypes.array,\n  isDropdownOpen: PropTypes.bool\n};\n\nDropdownComponent.defaultProps = {\n  onSelect: () => {},\n  items: [],\n  target: (meta, actions) => (\n    <Button ref={meta.ref} onClick={actions.toggle}>\n      {meta.isOpen ? 'Close' : 'Dropdown'}\n    </Button>\n  ),\n  isDropdownOpen: false\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './small-input.local.scss';\n\nexport const SmallInputComponent = forwardRef(({ value, icon, disabled, ...others }, ref) => (\n  <div\n    ref={ref}\n    className={classnames('small-input', { disabled, active: value.length })}\n  >\n    { icon && <div className=\"icon\">{icon}</div> }\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      {...others}\n    />\n  </div>\n));\n\nSmallInputComponent.propTypes = {\n  icon: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nSmallInputComponent.defaultProps = {\n  icon: null,\n  value: '',\n  disabled: false,\n};\n\nexport default SmallInputComponent;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SingleDatePicker } from 'react-dates';\nimport { mdiCalendarBlank, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './single-date-picker.local.scss';\n\nexport class SingleDatePickerComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: true\n    };\n  }\n\n  render() {\n    const { date, onDateChange, ...others } = this.props;\n\n    return (\n      <div className=\"date-picker-container\">\n        <SingleDatePicker\n          date={date}\n          onDateChange={onDateChange}\n          focused={this.state.focused}\n          onFocusChange={({ focused }) => this.setState({ focused })}\n          id=\"date-picker\"\n          numberOfMonths={1}\n          customInputIcon={\n            <SvgIcon>\n              <Icon path={mdiCalendarBlank} />\n            </SvgIcon>\n          }\n          placeholder=\"Select Date\"\n          isOutsideRange={() => false}\n          readOnly\n          hideKeyboardShortcutsPanel\n          displayFormat=\"MMM DD YYYY\"\n          /** TODO: @Razvan, look at this please. */\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          {...others}\n        />\n      </div>\n    );\n  }\n}\n\nSingleDatePickerComponent.propTypes = {\n  date: PropTypes.object,\n  onDateChange: PropTypes.func.isRequired\n};\n\nSingleDatePickerComponent.defaultProps = {\n  date: null\n};\n\nexport default SingleDatePickerComponent;\n","import React from 'react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArrowLeftRight, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\n\nimport DateRangePickerWrapper from './range-date-range-picker.container';\nimport 'react-dates/initialize'; // necessary for latest version\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport './range-date-picker.local.scss';\n\nexport class RangeDatePicker extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"date-picker-container\">\n        <DateRangePickerWrapper\n          anchorDirection=\"left\"\n          autoFocus={false}\n          block={false}\n          readOnly\n          customArrowIcon={\n            <SvgIcon>\n              <Icon path={mdiArrowLeftRight} />\n            </SvgIcon>\n          }\n          customCloseIcon={null}\n          customInputIcon={null}\n          disabled={false}\n          displayFormat=\"MMM D YYYY\"\n          enableOutsideDays={false}\n          endDateId=\"endDate\"\n          endDatePlaceholderText=\"End Date\"\n          horizontalMargin={0}\n          initialEndDate={null}\n          initialStartDate={moment()}\n          initialVisibleMonth={null}\n          isDayBlocked={() => false}\n          isDayHighlighted={() => false}\n          isOutsideRange={() => false}\n          isRTL={false}\n          keepOpenOnDateSelect={false}\n          minimumNights={0}\n          monthFormat=\"MMMM YYYY\"\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navPosition=\"navPositionTop\"\n          numberOfMonths={2}\n          onClose={() => false}\n          onNextMonthClick={() => false}\n          onPrevMonthClick={() => false}\n          orientation=\"horizontal\"\n          phrases={{\n            calendarLabel: 'Calendar',\n            chooseAvailableEndDate: function noRefCheck() {},\n            chooseAvailableStartDate: function noRefCheck() {},\n            clearDates: 'Clear Dates',\n            closeDatePicker: 'Close',\n            dateIsSelected: function noRefCheck() {},\n            dateIsSelectedAsEndDate: function noRefCheck() {},\n            dateIsSelectedAsStartDate: function noRefCheck() {},\n            dateIsUnavailable: function noRefCheck() {},\n            enterKey: 'Enter key',\n            escape: 'Escape key',\n            focusStartDate: 'Interact with the calendar and add the check-in date for your trip.',\n            hideKeyboardShortcutsPanel: 'Close the shortcuts panel.',\n            homeEnd: 'Home and end keys',\n            jumpToNextMonth: 'Move forward to switch to the next month.',\n            jumpToPrevMonth: 'Move backward to switch to the previous month.',\n            keyboardBackwardNavigationInstructions:\n              'Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardForwardNavigationInstructions:\n              'Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardShortcuts: 'Keyboard Shortcuts',\n            leftArrowRightArrow: 'Right and left arrow keys',\n            moveFocusByOneDay: 'Move backward (left) and forward (right) by one day.',\n            moveFocusByOneMonth: 'Switch months.',\n            moveFocusByOneWeek: 'Move backward (up) and forward (down) by one week.',\n            moveFocustoStartAndEndOfWeek: 'Go to the first or last day of a week.',\n            openThisPanel: 'Open this panel.',\n            pageUpPageDown: 'page up and page down keys',\n            questionMark: 'Question mark',\n            returnFocusToInput: 'Return to the date input field.',\n            roleDescription: 'datepicker',\n            selectFocusedDate: 'Select the date in focus.',\n            showKeyboardShortcutsPanel: 'Open the keyboard shortcuts panel.',\n            upArrowDownArrow: 'up and down arrow keys'\n          }}\n          regular={false}\n          renderCalendarDay={undefined}\n          renderDayContents={text => this.renderDayContents(text)}\n          renderMonthText={null}\n          reopenPickerOnClearDates={false}\n          required={false}\n          screenReaderInputMessage=\"\"\n          showClearDates={false}\n          showDefaultInputIcon={false}\n          small={false}\n          startDateId=\"startDate\"\n          startDatePlaceholderText=\"Start Date\"\n          stateDateWrapper={() => false}\n          withFullScreenPortal={false}\n          withPortal={false}\n          onDatesChange={this.props.onDatesChange}\n          endDate={this.props.endDate}\n          startDate={this.props.startDate}\n          focusedInput={null}\n          hideKeyboardShortcutsPanel\n        />\n      </div>\n    );\n  }\n\n  renderDayContents = text => (\n    <div className=\"wrapper-custom-date\">\n      <div className=\"custom-date\">{text.date()}</div>\n    </div>\n  );\n}\n\nRangeDatePicker.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onDatesChange: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { array, object, oneOfType } from 'prop-types';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline,\n  mdiCancel,\n  mdiHexagonMultipleOutline,\n  mdiDatabase\n} from '@mdi/js';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { LightTooltip, LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Center } from 'shared/components';\n\nimport './JobResults.local.scss';\n\nexport class JobResults extends React.PureComponent {\n  render() {\n    const { jobs, fromSearch } = this.props;\n\n    if (jobs && jobs.size === 0) {\n      if (fromSearch) {\n        return <></>;\n      }\n      return <Center>Job list is empty</Center>;\n    }\n    return <>{this.renderJobsResults(jobs)}</>;\n  }\n\n  renderJobsResults = jobs =>\n    jobs.map((job, index) => (\n      <Link key={index} to={`/jobs/job?invocation=${job.get('uuid')}`}>\n        <div className=\"result-job-row\">\n          <LightTooltip placement=\"bottom-start\" title={job.get('status').toUpperCase()}>\n            <div className=\"job-status-container\">{this.jobStatus(job.get('status'))}</div>\n          </LightTooltip>\n          <div className=\"job-content\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {job.get('process')}</p>\n                  {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                </>\n              }\n            >\n              <div className=\"first-row\">{this.formatName(job.get('process'))}</div>\n            </LimitlessTooltip>\n\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  <ScheduleIcon />\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    ));\n\n  jobStatus = status => {\n    switch (status) {\n      case 'EXECUTING':\n        return (\n          <div className=\"job-status executing\">\n            <SvgIcon>\n              <Icon path={mdiProgressClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SUCCEEDED':\n        return (\n          <div className=\"job-status succeeded\">\n            <SvgIcon>\n              <Icon path={mdiCheckCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SCHEDULED':\n        return (\n          <div className=\"job-status scheduled\">\n            <SvgIcon>\n              <Icon path={mdiCalendarArrowRight} />\n            </SvgIcon>\n          </div>\n        );\n      case 'ABORTED':\n        return (\n          <div className=\"job-status aborted\">\n            <SvgIcon>\n              <Icon path={mdiStopCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'DELAYED':\n        return (\n          <div className=\"job-status delayed\">\n            <SvgIcon>\n              <Icon path={mdiTimelineClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'FAILED':\n        return (\n          <div className=\"job-status failed\">\n            <SvgIcon>\n              <Icon path={mdiAlertRhombusOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'KILLED':\n        return (\n          <div className=\"job-status killed\">\n            <SvgIcon>\n              <Icon path={mdiCancel} />\n            </SvgIcon>\n          </div>\n        );\n      default:\n        return '';\n    }\n  };\n\n  formatName = jobName => {\n    const formattedName = [];\n    const name = jobName.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    return formattedName;\n  };\n}\n\nJobResults.propTypes = {\n  jobs: oneOfType([array, object])\n};\n\nexport default JobResults;\n","import React, { createContext, useContext } from 'react';\nimport { any, node } from 'prop-types';\n\nconst Context = createContext();\n\nexport function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nSwitch.propTypes = {\n  value: any,\n  children: node\n};\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nCase.propTypes = {\n  value: any,\n  children: node\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUITable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport './Table.local.scss';\n\nexport const Table = ({ columns, children, sortBehavior, changeSort, className }) => {\n  return (\n    <MUITable stickyHeader className={className}>\n      <TableHead className=\"sticky-head\">\n        <TableRow>\n          {columns.map(HeaderCell(sortBehavior, changeSort))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {children}\n      </TableBody>\n    </MUITable>\n  );\n};\n\nconst HeaderCell = (sortBehavior, changeSort) => (column, index) => (\n  <TableCell\n    key={`header_column_${index}`}\n    align={column.align}\n    padding={column.padding}\n    sortDirection={sortBehavior ? sortBehavior.order : false}\n    variant={column.variant}\n  >\n    {column.sortKey && (\n      <TableSortLabel\n        active={sortBehavior.sortKey === column.sortKey}\n        direction={sortBehavior.order}\n        onClick={changeSort(column.sortKey, sortBehavior.order === 'asc' ? 'desc' : 'asc')}\n      >\n        {column.component ? column.component() : column.label}\n      </TableSortLabel>\n    )}\n    {!column.sortKey && (\n      column.component ? column.component() : column.label\n    )}\n  </TableCell>\n);\n\nTable.Row = TableRow;\nTable.Cell = TableCell;\n\nTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  sortBehavior: PropTypes.shape({\n    order: PropTypes.string,\n    sortKey: PropTypes.string\n  }),\n  changeSort: PropTypes.func\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nexport class LogoutPage extends React.PureComponent {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.logout.title\"\n        isLoading\n      >\n        <div />\n      </Container>\n    );\n  }\n\n  static path = '/logout';\n}\n\nLogoutPage.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: (data) => dispatch(actions.logout.dispatchLoading(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartTimelineVariant } from '@mdi/js';\n\nimport {\n  Center,\n  CircleImg,\n  JobItem,\n  NumberLabel,\n  RangeDatePicker,\n  StringLabel,\n  WorkloadGraph\n} from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Main, Paper } from 'shared/components/layout';\nimport { filterStatusSelector } from './store/state';\nimport { Header } from 'core/components/Header';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { fetchEntity } from 'entities/actions';\nimport { Search, StatusContainer } from './containers';\n\nimport './root.module.scss';\nimport { ConnectedServersList } from './containers/servers-list/ServersList';\n\nexport class RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n\n    this.onChangeDatesHandler = this.onChangeDatesHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n\n    if (\n      this.props.entitiesStatus.process === 'not-fetched' ||\n      this.props.entitiesStatus.process === 'failed'\n    ) {\n      this.props.request('process');\n    }\n  }\n\n  render() {\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Dashboard\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const averageJobs = Math.round(parseInt(this.props.jobs.get('total_count'), 10) / (days + 1));\n\n    return (\n      <div className={this.props.className}>\n        <Header>\n          <h1 className=\"header-title\">Dashboard</h1>\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Search />\n        <StatusContainer />\n        <div className=\"summary-container\">\n          <div className=\"jobs-container\">\n            {this.props.jobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <>\n                <div className=\"jobs-content\" id=\"jobs-content\">\n                  {this.filteredJobs(this.props.storeFilterStatus)}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"workload-container\">\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Generating Workload Chart</Loader>\n                </Center>\n              ) : (\n                <>\n                  <div className=\"workload-header\">\n                    <CircleImg\n                      image={\n                        <SvgIcon>\n                          <Icon path={mdiChartTimelineVariant} />\n                        </SvgIcon>\n                      }\n                    />\n                    <NumberLabel number={averageJobs} />\n                    <StringLabel\n                      text={\n                        <>\n                          <FormattedMessage id=\"dashboard.jobs\" />/\n                          <FormattedMessage id=\"dashboard.day\" />\n                        </>\n                      }\n                    />\n                  </div>\n                  <div className=\"workload-content\">\n                    <WorkloadGraph\n                      data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                        currentDate: moment.unix(\n                          this.props.globalFilters.get('startDate'),\n                          'YYYY-MM-DD'\n                        ),\n                        endDate: moment.unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                      })}\n                      isSingleDay={\n                        moment\n                          .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD') ===\n                        moment\n                          .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD')\n                      }\n                      setSingleDay={this.onChangeDatesHandler}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"servers-usage-container\">\n              <ConnectedServersList />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  filteredJobs = status => {\n    const { jobs } = this.props;\n\n    if (status === 'ALL') {\n      if (jobs.get('content').size === 0) {\n        return <Center>There are no jobs available with the selected filters</Center>;\n      }\n\n      return (\n        <>\n          {jobs\n            .get('content')\n            .slice(0, 20)\n            .map((item, index) => (\n              <JobItem key={index} job={item} />\n            ))}\n          {jobs.get('total_count') > 20 && (\n            <Button className=\"full-log center qa-view-full-log\">\n              <Link to=\"/jobs\">\n                <FormattedMessage id=\"dashboard.view-full-log\" />\n              </Link>\n            </Button>\n          )}\n        </>\n      );\n    }\n\n    const totalFilteredJobs = jobs.get('content').filter(job => job.get('status') === status).size;\n\n    if (totalFilteredJobs === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <>\n        {jobs\n          .get('content')\n          .filter(job => job.get('status') === status)\n          .slice(0, 20)\n          .map((item, index) => (\n            <JobItem key={index} job={item} />\n          ))}\n        {totalFilteredJobs > 20 && (\n          <Button className=\"full-log center qa-view-full-log\">\n            <Link to={`/jobs?status=${status}`}>\n              <FormattedMessage id=\"dashboard.view-full-log\" />\n            </Link>\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  onChangeDatesHandler(range) {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n\n      const start = moment(range.startDate.format('YYYY-MM-DD'));\n      const end = moment(range.endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n      this.props.getJobs({\n        date_invoke: moment(range.startDate).format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      });\n    }\n  }\n}\n\nRootModule.propTypes = {\n  className: PropTypes.string,\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nRootModule.defaultProps = {\n  className: 'dashboard'\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  storeFilterStatus: filterStatusSelector(state),\n  entitiesStatus: state.entities.fetch_status\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  request: data => dispatch(fetchEntity(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { node } from 'prop-types';\nimport classnames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.local.scss';\n\nexport const Loader = ({ children, inline, left, ...props }) => {\n  return (\n    <div className={classnames('loader', { inline, left })}>\n      <CircularProgress {...props} />\n      {children && <div className=\"loader-text\">{children}</div>}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  children: node\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './ParameterLoader.local.scss';\n\nexport const ParameterLoader = ({ children }) => {\n  return (\n    <div className=\"loader\">\n      {children && <div className=\"loader-text\">{children}</div>}\n      <div className=\"loader-slot\">\n        <LinearProgress variant=\"indeterminate\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { bool, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Overflow } from '../Overflow/Overflow';\n\nimport './Paper.local.scss';\n\nexport const Paper = ({ padded, flex, children, ...rest }) => (\n  <div className={classnames('paper', { padded, [flex]: flex })} {...rest}>\n    {children}\n  </div>\n);\n\nPaper.propTypes = {\n  children: node,\n  padded: bool,\n  flex: oneOf(['column', 'row'])\n};\n\nPaper.defaultProps = {\n  padded: true,\n  flex: 'column'\n};\n\nexport const PaperHeader = ({ children, ...rest }) => (\n  <header className=\"paper-header\" {...rest}>\n    {children}\n  </header>\n);\n\nPaperHeader.propTypes = {\n  children: node\n};\n\nexport const PaperContent = ({ children, scrollable }) => {\n  if (scrollable) {\n    return (\n      <Overflow className=\"paper-content\" variant=\"white\">\n        {children}\n      </Overflow>\n    );\n  }\n\n  return <main className=\"paper-content\">{children}</main>;\n};\n\nPaperContent.propTypes = {\n  scrollable: bool,\n  children: node\n};\n\nPaperContent.defaultProps = {\n  scrollable: true\n};\n\nexport const PaperFooter = ({ children }) => <footer className=\"paper-footer\">{children}</footer>;\n\nPaperFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nPaperFooter.Left = LeftSideSlot;\nPaperFooter.Right = RightSideSlot;\n\nexport const PaperTitle = ({ children, ...rest }) => (\n  <h2 className=\"paper-title\" {...rest}>\n    {children}\n  </h2>\n);\n\nPaperTitle.propTypes = {\n  children: node\n};\n\nPaper.Header = PaperHeader;\nPaper.Title = PaperTitle;\nPaper.Content = PaperContent;\nPaper.Footer = PaperFooter;\n","import React from 'react';\nimport { node, bool } from 'prop-types';\nimport classnames from 'classnames';\nimport './Main.local.scss';\n\nexport const Main = ({ flex, mdPage, children }) => (\n  <main\n    className={classnames('page-main', { flex, 'md-page': mdPage })}\n  >\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: node,\n  flex: bool,\n  mdPage: bool,\n};\n\nMain.defaultProps = {\n  flex: true,\n  mdPage: false\n};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Section.local.scss';\n\nexport const Section = ({ children, full }) => (\n  <section\n    className={classnames('section-block', {\n      full\n    })}\n  >\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  children: node,\n  full: bool\n};\n\nexport const SectionTitle = ({ children, info }) => (\n  <>\n    <h3 className=\"section-title\">{children}</h3>\n    {info && <h4 className=\"section-title-info\">{info}</h4>}\n  </>\n);\n\nSectionTitle.propTypes = {\n  children: node,\n  info: node\n};\n\nexport const SectionHeader = ({ children }) => (\n  <>\n    <header className=\"section-header\">{children}</header>\n  </>\n);\n\nSectionHeader.propTypes = {\n  children: node\n};\n\nexport const SectionInfo = ({ children }) => (\n  <>\n    <h4 className=\"section-title-info\">{children}</h4>\n  </>\n);\n\nSectionInfo.propTypes = {\n  children: node\n};\n\nexport const SectionContent = ({ children }) => (\n  <>\n    <main className=\"section-content\">{children}</main>\n  </>\n);\n\nSection.Header = SectionHeader;\nSection.Content = SectionContent;\nSection.Title = SectionTitle;\nSection.Info = SectionInfo;\n","import React, { useState, useCallback } from 'react';\n\nimport { func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './ScrollableContainer.local.scss';\n\nexport const ScrollableContainer = ({ children, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  return (\n    <div\n      className={classnames('scrollable-container', {\n        scrolled,\n        [variant]: variant\n      })}\n    >\n      {children({\n        className: classnames('scrollable-element', {\n          [variant]: variant\n        }),\n        onWheel\n      })}\n    </div>\n  );\n};\n\nScrollableContainer.propTypes = {\n  children: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nScrollableContainer.defaultProps = {};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport './Column.local.scss';\n\nexport const Column = ({ children, ...rest }) => {\n  return (\n    <div className=\"column\" {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Row.local.scss';\n\nexport const Row = ({ children, compact, ...rest }) => {\n  return (\n    <div className={classnames('row', { compact })} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { jobsSelector } from 'shared/store/state';\nimport { filterStatusSelector } from '../../store/state';\n\nimport { Daemon, JobStatus } from './components';\n\nimport './status.local.scss';\n\nexport class StatusContainer extends React.PureComponent {\n  render() {\n    const { className, jobs } = this.props;\n    return (\n      <Paper className={className}>\n        <Daemon />\n        <div className=\"jobs-status-container\">\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader inline>Loading jobs</Loader>\n            </Center>\n          ) : (\n            this.filterJobs(jobs.toJS().content)\n          )}\n        </div>\n      </Paper>\n    );\n  }\n\n  filterJobs = jobs => {\n    const { active } = this.props;\n    const count = {\n      executing: 0,\n      succeeded: 0,\n      scheduled: 0,\n      aborted: 0,\n      failed: 0\n    };\n    count.executing = jobs.filter(job => job.status === 'EXECUTING')?.length;\n    count.succeeded = jobs.filter(job => job.status === 'SUCCEEDED')?.length;\n    count.scheduled = jobs.filter(job => job.status === 'SCHEDULED')?.length;\n    count.aborted = jobs.filter(job => job.status === 'ABORTED')?.length;\n    count.failed = jobs.filter(job => job.status === 'FAILED')?.length;\n\n    return (\n      <>\n        <JobStatus count={count.executing} status=\"EXECUTING\" active={active} />\n        <JobStatus count={count.succeeded} status=\"SUCCEEDED\" active={active} />\n        <JobStatus count={count.scheduled} status=\"SCHEDULED\" active={active} />\n        <JobStatus count={count.aborted} status=\"ABORTED\" active={active} />\n        <JobStatus count={count.failed} status=\"FAILED\" active={active} />\n      </>\n    );\n  };\n}\n\nStatusContainer.propTypes = {\n  className: PropTypes.string,\n  jobs: PropTypes.object.isRequired\n};\n\nStatusContainer.defaultProps = {\n  className: 'status-container'\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  active: filterStatusSelector(state)\n});\n\nexport default connect(mapStateToProps)(StatusContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { daemonPoller } from '../../../../store/tasks';\nimport { isDaemonRunning } from '../../../../store/selectors';\n\nimport './daemon.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const Daemon = () => {\n  const running = useSelector(isDaemonRunning);\n\n  useEffect(() => {\n    daemonPoller.start();\n\n    return () => {\n      daemonPoller.stop();\n    };\n  }, []);\n\n  return (\n    <div className=\"daemon qa-daemon-status\">\n      {running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.running\" />}>\n          <div className=\"status running\">\n            <PlayCircleOutlineIcon />\n          </div>\n        </LightTooltip>\n      )}\n\n      {!running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.not.running\" />}>\n          <div className=\"status not-running\">\n            <ErrorOutlineIcon className=\"not-running\" />\n          </div>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport { actions } from 'dashboard/store/actions';\nimport { filterStatusSelector } from 'dashboard/store/state';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-status.local.scss';\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return <>{this.renderContent()}</>;\n  }\n\n  filterByStatus = status => {\n    if (this.props.storeStatus === status.toUpperCase()) {\n      this.props.setStatus('ALL');\n    } else {\n      this.props.setStatus(status.toUpperCase());\n    }\n  };\n\n  renderContent() {\n    let icon = null;\n    let status = '';\n    switch (this.props.status) {\n      case 'EXECUTING':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiProgressClock} />\n          </SvgIcon>\n        );\n        status = 'executing';\n        break;\n      case 'SUCCEEDED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCheckCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'succeeded';\n        break;\n      case 'SCHEDULED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCalendarArrowRight} />\n          </SvgIcon>\n        );\n        status = 'scheduled';\n        break;\n      case 'ABORTED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiStopCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'aborted';\n        break;\n      case 'FAILED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiAlertRhombusOutline} />\n          </SvgIcon>\n        );\n        status = 'failed';\n        break;\n      default:\n        // error message\n        break;\n    }\n\n    if (icon) {\n      return (\n        <div\n          className={classnames(`job-status ${status}`, {\n            active: this.props.status === this.props.active\n          })}\n          role=\"presentation\"\n          onClick={() => this.filterByStatus(status)}\n        >\n          <div className=\"header\">\n            <div className=\"icon\">{icon}</div>\n            <div className=\"count\">\n              {this.props.count}\n              {this.props.status === this.props.active && (\n                <LightTooltip placement=\"right\" title=\"Active filter\">\n                  <CheckCircleIcon className=\"active-filter\" />\n                </LightTooltip>\n              )}\n            </div>\n          </div>\n          <div className=\"status\">{this.props.status}</div>\n        </div>\n      );\n    }\n    // error case\n    return null;\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setStatus: PropTypes.func\n};\n\nexport const mapStateToProps = state => ({\n  storeStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setStatus: status => dispatch(actions.setFilterStatus.dispatchEvent(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobStatus);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector } from 'shared/store/state';\n\nimport { FormattedMessage } from 'react-intl';\nimport { debounce } from 'lodash';\nimport { mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport Paper from '@material-ui/core/Paper';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { SearchInput } from 'shared/components';\nimport { SearchResults } from '../../components';\nimport { setFilterSearch, setFilterType } from 'entities/actions';\n\nimport './search-area.local.scss';\n\nexport class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSearchResults: false,\n      searchTerm: ''\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    if (this.state.showSearchResults) {\n      this.getSearchResults(searchedTerm);\n    }\n  }, 500);\n\n  render() {\n    const {\n      className,\n      getSearchedJobs,\n      entitiesStatus,\n      setSearchFilter,\n      setTypeFilter\n    } = this.props;\n    return (\n      <Paper\n        className={`${className} ${this.state.showSearchResults ? 'no-bottom-radius' : ''}\n        `}\n      >\n        <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n\n        {this.state.searchTerm.length > 0 && (\n          <div className=\"clear-search\">\n            <ClearIcon onClick={this.clearSearch} />\n          </div>\n        )}\n        {this.state.showSearchResults && (\n          <div className=\"search-results-container\">\n            <SearchResults\n              category=\"jobs\"\n              totalResults={getSearchedJobs.get('total_count')}\n              content={getSearchedJobs.get('content')}\n              isLoading={getSearchedJobs.get('fetching')}\n              displayedResults={3}\n              filters={{\n                nameFilter: this.state.searchTerm\n              }}\n            />\n            <SearchResults\n              category=\"processes\"\n              totalResults={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).count\n              }\n              content={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).processes\n              }\n              isLoading={entitiesStatus.process === 'fetching'}\n              displayedResults={3}\n              searchedTerm={this.state.searchTerm}\n              setFilterSearch={setSearchFilter}\n              setFilterType={setTypeFilter}\n            />\n            <div className=\"full-results-container qa-full-search-results\">\n              <div className=\"icon-container\">\n                <SearchIcon />\n              </div>\n              <div className=\"content\">\n                <FormattedMessage id=\"dashboard.view-full-search-results\" />\n              </div>\n              <div className=\"open qa-open-full-results\">\n                <SvgIcon>\n                  <Icon path={mdiChevronRight} />\n                </SvgIcon>\n              </div>\n            </div>\n          </div>\n        )}\n      </Paper>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: 3,\n      page: 1,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n  };\n\n  filterProcesses = (processStatus, searchedTerm) => {\n    if (processStatus === 'fetching' || !searchedTerm) {\n      return { processes: [], count: 0 };\n    }\n    if (this.props.storedProcesses && this.props.storedProcesses.length > 0) {\n      const results = this.props.storedProcesses.filter(p => p.name.includes(searchedTerm));\n\n      return { processes: results.slice(0, 3), count: results.length };\n    }\n    return { processes: [], count: 0 };\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length < 3 && this.state.showSearchResults) {\n      this.setState({ showSearchResults: false });\n    } else if (searchedTerm.length === 3) {\n      if (!this.state.showSearchResults) {\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    } else if (searchedTerm.length > 3) {\n      if (!this.state.showSearchResults) {\n        // used for pasted value\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({\n      showSearchResults: false,\n      searchTerm: ''\n    });\n  };\n}\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  searchJobs: PropTypes.func.isRequired,\n  getSearchedJobs: PropTypes.object.isRequired\n};\n\nSearch.defaultProps = {\n  className: 'search-container'\n};\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state),\n  entitiesStatus: state.entities.fetch_status,\n  storedProcesses: state.entities.data?.process?.data?.data?.processes\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data)),\n  setSearchFilter: data => dispatch(setFilterSearch(data)),\n  setTypeFilter: data => dispatch(setFilterType(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed } from '@mdi/js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport { JobResults } from 'shared/components/JobResults';\nimport { createUrl } from 'shared/lib';\n\nimport './search-results.local.scss';\n\nexport class SearchResultsComponent extends React.PureComponent {\n  render() {\n    const {\n      className,\n      category,\n      totalResults,\n      isLoading,\n      displayedResults,\n      content,\n      searchedTerm = '',\n      setFilterSearch,\n      setFilterType\n    } = this.props;\n    return (\n      <div className={className}>\n        {isLoading ? (\n          <div className=\"header-area\">\n            <div className=\"category-name\">{category}</div>\n            <div className=\"loading\">\n              <CircularProgress size=\"20px\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"header-area\">\n              <div className=\"category-name\">{category}</div>\n              <div className=\"separator\">-</div>\n              <div className=\"total-results\">\n                {totalResults} <FormattedMessage id=\"dashboard.results\" />\n              </div>\n              {totalResults > displayedResults && (\n                <Button className=\"all-results qa-view-all-results\">\n                  {category === 'jobs' && (\n                    <Link to={() => this.createURLLink()}>\n                      <FormattedMessage id=\"dashboard.view-all-results\" />\n                    </Link>\n                  )}\n                  {category === 'processes' && (\n                    <div\n                      role=\"presentation\"\n                      onClick={() => {\n                        setFilterSearch(searchedTerm);\n                        setFilterType('process');\n                      }}\n                    >\n                      <Link to=\"/system/entities\">\n                        <FormattedMessage id=\"dashboard.view-all-results\" />\n                      </Link>\n                    </div>\n                  )}\n                </Button>\n              )}\n            </div>\n            <div className=\"content-area\">\n              {category === 'jobs' && <JobResults jobs={content} fromSearch />}\n              {category === 'processes' && this.renderProcessesResults()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderProcessesResults = () =>\n    this.props.content.map((process, index) => (\n      <div key={index} className=\"result-process-row\">\n        <div className=\"icon-container\">\n          <SvgIcon>\n            <Icon path={mdiPlaySpeed} />\n          </SvgIcon>\n        </div>\n        <div className=\"process-container\">{process.name}</div>\n      </div>\n    ));\n\n  createURLLink = () => {\n    let url = '/jobs';\n    const params = {};\n\n    if (this.props.filters.nameFilter) {\n      params.name_filter = this.props.filters.nameFilter;\n    }\n\n    url = createUrl(url, params);\n    return url;\n  };\n}\n\nexport default SearchResultsComponent;\n\nSearchResultsComponent.propTypes = {\n  className: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  category: PropTypes.string,\n  totalResults: PropTypes.number,\n  isLoading: PropTypes.bool,\n  displayedResults: PropTypes.number\n};\n\nSearchResultsComponent.defaultProps = {\n  className: 'results-container',\n  content: [],\n  category: '',\n  totalResults: 0,\n  isLoading: false,\n  displayedResults: 3\n};\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport { bool } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MUITextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from '../../LightTooltip/LightTooltip';\n\nimport './Input.local.scss';\n\nexport const Input = forwardRef(function InputFw(\n  { inline, error, size, children, description, multiline, variant, ...rest },\n  ref\n) {\n  const InputProps = { ...(rest.InputProps && rest.InputProps) };\n\n  const nrRows = rest?.isPopup ? 9999 : 7;\n\n  if (description) {\n    InputProps.endAdornment = (\n      <>\n        <InputAdornment position=\"end\">\n          <LightTooltip title={description}>\n            <SvgIcon>\n              <path d={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        </InputAdornment>\n        {InputProps.endAdornment}\n      </>\n    );\n  }\n\n  return (\n    <MUITextField\n      ref={ref}\n      fullWidth\n      className={classnames('input-field', { inline, error })}\n      variant={variant || 'outlined'}\n      error={error}\n      {...(multiline && {\n        multiline: true,\n        rows: nrRows\n      })}\n      {...rest}\n      InputProps={InputProps} // eslint-disable-line\n      size={size}\n    >\n      {children}\n    </MUITextField>\n  );\n});\n\nInput.propTypes = {\n  inline: bool,\n  error: bool\n};\n","import React from 'react';\nimport MUIButton from '@material-ui/core/Button';\n\nimport './Button.local.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nexport const Button = ({ to, href, ...props }) => {\n  const link = to || href;\n\n  if (link) {\n    return <MUIButton color=\"primary\" {...props} component={LinkBehavior} to={link} />;\n  }\n\n  return <MUIButton color=\"primary\" {...props} />;\n};\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './ModalFooter.local.scss';\n\nexport const ModalFooter = ({ children }) => {\n  return <footer className=\"modal-footer\">{children}</footer>;\n};\n\nModalFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nModalFooter.Left = LeftSideSlot;\nModalFooter.Right = RightSideSlot;\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ErrorModal.local.scss';\n\nexport const ErrorModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ConfirmationModal.local.scss';\n\nexport const ConfirmationModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '400px',\n          maxHeight: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              No\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.confirm();\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { JobsEffect } from './jobs/jobs.effect';\nimport { JobsConnectionsEffect } from './connections/connections.effect';\nimport { SearchJobsEffect } from './search-jobs/search-jobs.effect';\nimport { SearchProcessesEffect } from './search-processes/search-processes.effect';\nimport { GlobalFiltersEffect } from './global-filters/global-filters.effect';\n\nexport const sharedEffects = [\n  JobsEffect,\n  JobsConnectionsEffect,\n  SearchJobsEffect,\n  SearchProcessesEffect,\n  GlobalFiltersEffect\n];\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Cookie from 'js-cookie';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\n\nimport { Login, Logout } from 'session';\nimport { actionStates } from 'shared/lib/action-creator';\nimport { authorizationSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Layout } from './core';\n\nimport './scoped-css-mui-compatibility';\n\nexport class RootModule extends React.PureComponent {\n  componentDidMount() {\n    if (!Cookie.get('Authorization')) {\n      this.props.history.listen((newLocation, action) => {\n        if (action === 'PUSH') {\n          if (\n            newLocation.pathname !== this.currentPathname ||\n            newLocation.search !== this.currentSearch\n          ) {\n            this.currentPathname = newLocation.pathname;\n            this.currentSearch = newLocation.search;\n            this.props.history.push({\n              pathname: newLocation.pathname,\n              search: newLocation.search\n            });\n          }\n        } else {\n          this.props.history.go(1);\n        }\n      });\n      this.props.history.push('/login');\n      this.props.setAuthorization();\n      return;\n    }\n\n    const username = JSON.parse(localStorage.getItem('username')) || 'mas';\n\n    this.props.checkAuthorization(username);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.authorizationStatus !== prevProps.authorizationStatus &&\n      this.props.authorizationStatus === actionStates.FAIL\n    ) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    if (this.props.authorizationStatus === actionStates.LOADING) {\n      return (\n        <Center>\n          <CircularProgress />\n        </Center>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path={Login.path} component={Login} />\n        <Route exact path={Logout.path} component={Logout} />\n        <Route path=\"/\" component={Layout} />\n      </Switch>\n    );\n  }\n}\n\nRootModule.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  authorizationStatus: PropTypes.oneOf([\n    '',\n    actionStates.SUCCESS,\n    actionStates.LOADING,\n    actionStates.FAIL\n  ]).isRequired,\n  setAuthorization: PropTypes.func.isRequired,\n  checkAuthorization: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  authorizationStatus: authorizationSelector(state).get('status')\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  checkAuthorization: user => dispatch(actions.checkAuthorization.dispatchLoading(user)),\n  setAuthorization: () => dispatch(actions.checkAuthorization.dispatchFail())\n});\n\nexport default hot(connect(mapStateToProps, mapDispatchToProps)(RootModule));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Dashboard } from 'dashboard';\nimport { Jobs } from 'jobs';\nimport { Entities } from 'entities';\nimport { UsersAndGroups } from 'users-manager';\nimport { Explorer } from 'explorer';\nimport { Sidebar } from './containers';\nimport { JobProcess } from '../job-process';\nimport { ConnectedExecutiveDashboard } from 'executive-dashboard/ExecutiveDashboard';\nimport { LicenseCollection } from 'license-collection/LicenseCollection';\nimport { LicenseAllocation } from '../license-allocation/LicenseAllocation';\nimport { Licensing } from '../licensing/Licensing';\n\nimport './root.local.scss';\n\nexport class RootLayout extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Sidebar />\n        <div className=\"app-container\">\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/jobs/job\" component={JobProcess} />\n            <Route exact path=\"/system/entities\" component={Entities} />\n            <Route path=\"/system/mas-accounts\" component={UsersAndGroups} />\n            <Route exact path=\"/system/explorer\" component={Explorer} />\n            <Route\n              exact\n              path=\"/compliance/executive-dashboard\"\n              component={ConnectedExecutiveDashboard}\n            />\n            <Route exact path=\"/compliance/license-collection\" component={LicenseCollection} />\n            <Route exact path=\"/compliance/license-allocation\" component={LicenseAllocation} />\n            <Route exact path=\"/compliance/licensing\" component={Licensing} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nRootLayout.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { connect } from 'react-redux';\n\nimport { getWorkloadData } from 'shared/lib/workload';\n\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from 'users-manager/store/thunks';\n\nimport { Header } from 'core/components/Header';\nimport { Center, RangeDatePicker, SimpleSearchInput, Switch, WorkloadGraph } from 'shared/components';\nimport { Main, Paper } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { ConnectedJobList } from './components/job-list/job-list.component';\nimport { JobItem } from './components/job-item';\nimport { Filters } from './containers/filters';\nimport { JobsInvocations } from './containers/jobs-invocations';\n\nimport { Schedule } from './containers/Schedule/Schedule';\nimport { TotalJobsCount } from './components/total-jobs-count/TotalJobsCount';\n\nimport './jobs.local.scss';\n\nfunction renderJobItem(item, index, filters, loggedUser) {\n  return <JobItem extended key={index} job={item} filters={filters} loggedUser={loggedUser} />;\n}\n\nclass RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      },\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_filter: {\n        dbms: query.get('platform_filter_dbms') || '',\n        name: query.get('platform_filter_name') || ''\n      }, // will have the platform_name_filter and platform_dbms_filter\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      name_filter: query.get('name_filter') || '',\n      user_filter: query.get('user_filter') || '',\n      selectedTab: 'all',\n      isWorkloadDisplayed: false,\n      pageFilters: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.allUsers.length === 0) {\n      this.props.loadAllUsers();\n    }\n  }\n\n  render() {\n    const {\n      shell_host_address_filter,\n      platform_filter,\n      status,\n      database_name_filter,\n      user_filter,\n      selectedTab,\n      isWorkloadDisplayed\n    } = this.state;\n\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Jobs\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    return (\n      <JobsInvocations>\n        <Header title=\"Jobs\">\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <NavigationTab\n                tabs={[\n                  { label: 'All jobs', value: 'all' },\n                  { label: 'Current jobs', value: 'current-jobs' },\n                  { label: 'Scheduled', value: 'scheduled' }\n                ]}\n                active={selectedTab}\n                onClick={this.handleOnTabChange}\n              />\n              {(selectedTab === 'all' || selectedTab === 'current-jobs') && (\n                <Button\n                  style={{\n                    whiteSpace: 'nowrap',\n                    lineHeight: '20px',\n                    height: '20px',\n                    paddingTop: '0'\n                  }}\n                  onClick={this.toggleWorkloadDisplay}\n                >\n                  {isWorkloadDisplayed ? 'Hide Workload' : 'Display workload'}\n                </Button>\n              )}\n            </Paper.Header>\n            <Switch value={selectedTab}>\n              <Switch.Case value=\"all\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount jobs={this.props.jobs.get('content').toJS()} status={status} />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"current-jobs\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount\n                    jobs={this.props.jobs\n                      .get('content')\n                      .filter(item => item.get('status') !== 'SCHEDULED')\n                      .toJS()}\n                    status={status}\n                  />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"scheduled\">\n                <TotalJobsCount\n                  jobs={this.props.jobs\n                    .get('content')\n                    .filter(item => item.get('status') === 'SCHEDULED')\n                    .toJS()}\n                  status=\"SCHEDULED\"\n                />\n              </Switch.Case>\n            </Switch>\n            <Paper.Content scrollable={false}>\n              <div className=\"jobs-filters-controllers\">\n                <div className=\"job-search\">\n                  <SimpleSearchInput\n                    value={this.state.name_filter}\n                    onChange={this.onSearchInputChange}\n                    onKeyDown={this.onKeyDown}\n                  />\n                </div>\n                <Filters\n                  selections={{\n                    shell_host_address_filter,\n                    platform_filter,\n                    status,\n                    database_name_filter,\n                    user_filter\n                  }}\n                  onChange={this.handleOnFilterChange}\n                  excludeStatus={selectedTab === 'scheduled'}\n                  currentTab={selectedTab}\n                />\n              </div>\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Loading jobs list</Loader>\n                </Center>\n              ) : (\n                <ConnectedJobList items={this.returnListBasedOnTab()} filters={this.state.pageFilters}>\n                  {renderJobItem}\n                </ConnectedJobList>\n              )}\n            </Paper.Content>\n            <Paper.Footer>\n              <Schedule />\n              <Button to=\"/jobs/job\">New Job</Button>\n            </Paper.Footer>\n          </Paper>\n        </Main>\n      </JobsInvocations>\n    );\n  }\n\n  toggleWorkloadDisplay = () => {\n    this.setState(prevState => ({\n      isWorkloadDisplayed: !prevState.isWorkloadDisplayed\n    }));\n  };\n\n  updateQSP = (filter, value) => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (typeof value === 'object') {\n      const keys = Object.keys(value);\n\n      keys.forEach(key => {\n        if (!value[key]) {\n          query.delete(`${filter}_${key}`);\n        } else if (query.has(`${filter}_${key}`) && query.get(`${filter}_${key}`) !== value[key]) {\n          query.set(`${filter}_${key}`, value[key]);\n        } else {\n          query.append(`${filter}_${key}`, value[key]);\n        }\n      });\n    } else if (!value) {\n      query.delete(filter);\n    } else if (query.has(filter) && query.get(filter) !== value) {\n      query.set(filter, value);\n    } else {\n      query.append(filter, value);\n    }\n\n    query.toString();\n\n    this.props.history.push({ search: `?${query}` });\n  };\n\n  handleOnTabChange = tab => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (query.get('status')) {\n      query.delete('status');\n      query.toString();\n\n      this.props.history.push({ search: `?${query}` });\n      this.setState({ status: '', selectedTab: tab }, () => {\n        this.performFilter(this.state);\n      });\n    } else {\n      this.setState({ selectedTab: tab });\n    }\n  };\n\n  handleOnFilterChange = (filter, value) => {\n    this.updateQSP(filter, value);\n\n    this.setState(\n      {\n        [filter]: value\n      },\n      () => {\n        this.performFilter(this.state);\n      }\n    );\n  };\n\n  returnListBasedOnTab = () => {\n    const { selectedTab, status } = this.state;\n    const list = this.props.jobs.get('content');\n\n    if (status) {\n      return list.filter(item => item.get('status') === status);\n    }\n\n    if (selectedTab === 'scheduled') {\n      return list.filter(item => item.get('status') === 'SCHEDULED');\n    }\n\n    if (selectedTab === 'current-jobs') {\n      return list.filter(item => item.get('status') !== 'SCHEDULED');\n    }\n\n    return list;\n  };\n\n  performFilter = ({\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter,\n    name_filter,\n    range\n  }) => {\n    if (range.startDate === null || range.endDate === null) return;\n\n    const start = moment(range.startDate.format('YYYY-MM-DD'));\n    const end = moment(range.endDate.format('YYYY-MM-DD'));\n    const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n    const payload = {\n      date_invoke: range.startDate.format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    };\n\n    if (shell_host_address_filter) {\n      payload.shell_host_address_filter = shell_host_address_filter;\n    }\n\n    if (platform_filter) {\n      payload.platform_name_filter = platform_filter.name;\n      payload.platform_dbms_filter = platform_filter.dbms;\n    }\n\n    if (status) {\n      payload.status = status;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (name_filter) {\n      payload.name_filter = name_filter;\n    }\n\n    if (user_filter) {\n      payload.owner = user_filter;\n    }\n\n    this.props.getJobs(payload);\n    this.setState({ pageFilters: payload });\n  };\n\n  onSearchInputChange = event => {\n    this.setState({\n      name_filter: event.target.value\n    });\n  };\n\n  onKeyDown = event => {\n    if (event.key === 'Enter' && !this.props.jobs.get('fetching')) {\n      this.updateQSP('name_filter', event.target.value);\n      this.performFilter(this.state);\n    }\n  };\n\n  onChangeDatesHandler = range => {\n    this.setState(\n      {\n        range: {\n          startDate: range.startDate,\n          endDate: range.endDate\n        }\n      },\n      () => {\n        this.props.setGlobalFilters(range);\n        this.performFilter(this.state);\n      }\n    );\n  };\n}\nRootModule.propTypes = {\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  allUsers: state.usersManager.users.all\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n  },\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  loadAllUsers: () => dispatch(loadAllUsersThunk())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiClockOutline, mdiDatabase, mdiHexagonMultipleOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { ConnectedDeleteJobModal } from '../../actions/delete/DeleteJobModal';\nimport { JobStatus } from '../job-status';\nimport { InvocationStatus } from '../../../job-process/store/constants';\nimport './job-item.local.scss';\n\nconst ALLOWED_FOR_DELETE = [\n  InvocationStatus.SCHEDULED,\n  InvocationStatus.EXECUTING,\n  InvocationStatus.DELAYED\n];\n\nexport const JobItem = ({ job, filters, loggedUser }) => {\n  const [open, setOpen] = useState(false);\n  const canDelete = loggedUser.get('name') === 'mas' && ALLOWED_FOR_DELETE.includes(job.get('status'));\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n  const [uuid, setUuid] = useState('');\n\n  const formatName = () => {\n    let name = job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas = formatName.canvas || (formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n  return (\n    <>\n      <Link to={`/jobs/job/?invocation=${job.get('uuid')}`}>\n        <div className=\"job-item\">\n          <div className=\"status-icon\">\n            <JobStatus status={job.get('status')} />\n          </div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {job.get('process')}</p>\n                    {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                  </>\n                }\n              >\n                <div className=\"name\">{formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"metadata-element time\">\n                  <SvgIcon>\n                    <path d={mdiClockOutline} />\n                  </SvgIcon>\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"metadata-element run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"metadata-element dbms\">\n                    <SvgIcon>\n                      <path d={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"metadata-element server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"metadata-element database\">\n                    <SvgIcon>\n                      <path d={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n          {canDelete && (\n            <div className=\"job-actions\">\n              <Button\n                color=\"secondary\"\n                onClick={event => {\n                  event.preventDefault();\n                  setOpen(true);\n                  setUuid(job.get('uuid'));\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          )}\n        </div>\n      </Link>\n\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={uuid} filters={filters} />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiCancel,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport './job-status.local.scss';\n\nconst statusMap = {\n  EXECUTING: mdiProgressClock,\n  SUCCEEDED: mdiCheckCircleOutline,\n  SCHEDULED: mdiCalendarArrowRight,\n  DELAYED: mdiTimelineClock,\n  ABORTED: mdiStopCircleOutline,\n  FAILED: mdiAlertRhombusOutline,\n  KILLED: mdiCancel\n};\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return (\n      <LightTooltip placement=\"bottom-start\" title={this.props.status.toUpperCase()}>\n        <div className=\"daemon qa-daemon-status\">\n          <div className={`status ${this.props.status.toLowerCase()}`}>\n            <SvgIcon>\n              <path d={statusMap[this.props.status]} />\n            </SvgIcon>\n          </div>\n        </div>\n      </LightTooltip>\n    );\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string\n};\nJobStatus.defaultProps = {\n  status: ''\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { mapSortInsensitive } from 'users-manager/store/mappers';\nimport { getJobsFiltersOptions } from 'shared/store/selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiHexagonMultipleOutline, mdiDatabase, mdiServer, mdiCircleSlice5 } from '@mdi/js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\nimport { Input } from 'shared/components/controls';\n\nimport './filters.scss';\n\nexport const PLATFORM = [\n  { label: 'MariaDB', name: 'mariadb', dbms: 'mysql', value: { name: 'mariadb', dbms: 'mysql' } },\n  {\n    label: 'MySQL',\n    name: 'mysql',\n    dbms: 'mysql',\n    value: { name: 'mysql', dbms: 'mysql' }\n  },\n  { label: 'Oracle', name: 'oracle', dbms: 'oracle', value: { name: 'oracle', dbms: 'oracle' } },\n  { label: 'PostgreSQL', name: 'pgsql', dbms: 'pgsql', value: { name: 'pgsql', dbms: 'pgsql' } },\n  {\n    label: 'Microsoft SQL Server',\n    name: 'microsoft.sqlserver',\n    dbms: 'mssql',\n    value: { name: 'microsoft.sqlserver', dbms: 'mssql' }\n  },\n  {\n    label: 'Oracle RDS',\n    name: 'rds.oracle',\n    dbms: 'oracle',\n    value: { name: 'rds.oracle', dbms: 'oracle' }\n  }\n];\n\nconst Filters = props => {\n  const { filters, selections, onChange, excludeStatus, allUsers, currentTab } = props;\n  const {\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter\n  } = selections;\n\n  const users = [\n    { value: '', label: 'All' },\n    ...allUsers.map(user => ({ label: user.name, value: user.name }))\n  ];\n  const selectedUser = users.find(u => u.value && u.value === user_filter) ?? '';\n  const platforms = [\n    { value: { name: '', dbms: '' }, label: 'All' },\n    ...PLATFORM.map(el => ({ value: el.value, label: el.label }))\n  ];\n  const selectedPlatform =\n    platforms.find(p => p?.value?.name && p.value.name === platform_filter?.name) ?? '';\n  const servers = [\n    { value: '', label: 'All' },\n    ...filters.address.map(el => ({ value: el, label: el }))\n  ];\n  const selectedServer =\n    servers.find(sv => sv.value && sv.value === shell_host_address_filter) ?? '';\n  const databases = [\n    { value: '', label: 'All' },\n    ...filters.database.map(el => ({ value: el, label: el }))\n  ];\n  const selectedDb = databases.find(db => db.value && db.value === database_name_filter) ?? '';\n  let statuses = [\n    { value: '', label: 'All' },\n    ...filters.status.map(el => ({ value: el, label: el }))\n  ];\n\n  if (currentTab === 'current-jobs') {\n    statuses = statuses.filter(s => s.value !== 'SCHEDULED');\n  }\n\n  const selectedStatus = statuses.find(s => s.value && s.value === status) ?? '';\n\n  return (\n    <div className=\"job-filters\">\n      <Autocomplete\n        disableClearable\n        id=\"users-filter\"\n        options={users}\n        value={selectedUser}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('user_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <AccountCircleOutlinedIcon />\n                <span className=\"job-filter-select-label\">Users</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"platform-filter\"\n        options={platforms}\n        value={selectedPlatform}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('platform_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Platform</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"server-filter\"\n        options={servers}\n        value={selectedServer}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('shell_host_address_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiServer} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Server</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"database-filter\"\n        options={databases}\n        value={selectedDb}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('database_name_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiDatabase} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Database</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      {!excludeStatus && (\n        <Autocomplete\n          disableClearable\n          id=\"status-filter\"\n          options={statuses}\n          value={selectedStatus}\n          getOptionLabel={opt => opt.label || ''}\n          onChange={(e, option) => {\n            onChange('status', option?.value || '');\n          }}\n          style={{ color: 'red' }}\n          renderInput={params => (\n            <Input\n              {...params}\n              size=\"small\"\n              label={\n                <span className=\"job-filter-select-label-wrap\">\n                  <SvgIcon>\n                    <path d={mdiCircleSlice5} />\n                  </SvgIcon>\n                  <span className=\"job-filter-select-label\">Status</span>\n                </span>\n              }\n              variant=\"outlined\"\n            />\n          )}\n        />\n      )}\n    </div>\n  );\n};\nFilters.propTypes = {\n  filters: PropTypes.object.isRequired,\n  selections: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  excludeStatus: PropTypes.bool\n};\n\nexport const mapStateToProps = state => ({\n  filters: getJobsFiltersOptions(state),\n  allUsers: mapSortInsensitive(state.usersManager.users.all)\n});\n\nexport default connect(mapStateToProps)(Filters);\n","import { createSelector } from 'reselect';\n\nimport { connectionsSelector } from '../state';\n\nexport const getJobsFiltersOptions = createSelector(connectionsSelector, connections => {\n  const filters = {\n    address: [], // connections - server\n    protocol: [], // connections - dbms\n    status: ['EXECUTING', 'SUCCEEDED', 'SCHEDULED', 'ABORTED', 'FAILED', 'DELAYED', 'KILLED'], // hardcoded\n    database: [] // connections -  database\n  };\n\n  connections.get('content').forEach(connection => {\n    const address = connection.get('address');\n    const protocol = connection.get('protocol');\n    const database = connection.getIn(['special', 'database']);\n\n    if (address && !filters.address.includes(address)) {\n      filters.address.push(address);\n    }\n\n    if (protocol && !filters.protocol.includes(protocol)) {\n      if (protocol !== 'SSH') {\n        filters.protocol.push(protocol);\n      }\n    }\n\n    if (database && !filters.database.includes(database)) {\n      filters.database.push(database);\n    }\n  });\n  return filters;\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector } from 'shared/store/state';\n\nexport const JobsInvocations = ({ children }) => {\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n\n  const dispatch = useDispatch();\n  const getJobs = data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n    dispatch(actions.getConnections.dispatchLoading(data));\n  };\n  const globalFilters = useSelector(globalFiltersSelector);\n\n  React.useEffect(() => {\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    getJobs({\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_name_filter: query.get('platform_filter_name') || '',\n      platform_dbms_filter: query.get('platform_filter_dbms') || '',\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      owner: query.get('user_filter') || '',\n      name_filter: query.get('name_filter') || ''\n    });\n  }, []);\n\n  return children;\n};\nJobsInvocations.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","export const deepCopy = (value) => {\n  return JSON.parse(JSON.stringify(value));\n};\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport Container from '@material-ui/core/Container';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MenuItem } from '@material-ui/core';\nimport { fetchEntity, openModal, selectEntity, setFilterSearch, setFilterType } from './actions';\nimport { ENTITY_TYPES, getBreadcrumbs, getEntities, getSelectedEntity } from './selectors';\nimport Entity from './components/Entity';\nimport SelectedEntity from './containers/SelectedEntity';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport debounce from 'lodash/debounce';\n\nimport './root.local.scss';\n\n/* eslint-disable */\n\n\nconst ENTITY_ICONS = {\n  root: <FolderIcon />,\n  namespace: <FolderIcon />,\n  constant: <FilterCenterFocusIcon />,\n  form: <AssignmentTurnedInIcon />,\n  schedule: <EventNoteIcon />,\n  account: <VpnKeyIcon />,\n  process: <SlowMotionVideoIcon />,\n  type: <DeveloperModeIcon />,\n  exception: <WarningIcon />,\n  prototype: <AssignmentIcon />,\n  CachedIcon:<CachedIcon />\n};\n\nlet searchWithDebounce = () => {};\n\nfunction RootModule({\n  fetchEntity,\n  selectEntity,\n  columns,\n  breadcrumbs,\n  filters,\n  setFilterType,\n  setFilterSearch,\n  selectedEntity,\n  entitiesStatus,\n  job\n}) {\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'not-fetched' || entitiesStatus[key] === 'failed') {\n        fetchEntity(key);\n      }\n    }\n\n    searchWithDebounce = debounce(value => {\n      setFilterSearch(value);\n    }, 700);\n    if (filters.search) {\n      setSearchInput(filters.search);\n    }\n  }, []);\n\n  function renderBreadcrumb(breadcrumb) {\n    return (\n      <span key={breadcrumb}>\n        <span className=\"breadcrumb\">{breadcrumb}</span> /{' '}\n      </span>\n    );\n  }\n\n  function renderColumn(columns, colNum) {\n    return (\n      <div key={colNum}>\n        {columns.rows.map(entity => (\n          <Entity\n            key={entity.name}\n            entity={entity}\n            selectEntity={selectEntity}\n            columns={columns}\n            entityIcons={ENTITY_ICONS}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function handleSearchChange(e) {\n    const val = e.target.value;\n    searchWithDebounce(val);\n    setSearchInput(val);\n  }\n\n  function loadingData() {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'fetching') {\n        return (\n          <div className=\"loading\">\n            <CircularProgress size={15} />\n            <span>Loading {key} entities...</span>\n          </div>\n        );\n      }\n    }\n\n    return null;\n  }\n\n\n  function renderColumns() {\n    if (Array.isArray(columns) && columns[0]?.rows?.length) {\n      return columns.map(renderColumn);\n    }\n\n    if (Object.values(entitiesStatus).find(e => e === 'fetching')) {\n      return null;\n    } else {\n      return 'No Entities Found.';\n    }\n  }\n\n  function clearCach(){\n     window.location.reload(false);\n     sessionStorage.removeItem(\"persist:root\");\n    \n  }\n\n  return (\n    <>\n      <Header title=\"System / Entities\" />\n      <Container maxWidth={false} classes={{ root: 'define-height-container' }}>\n        <div className=\"entities-breadcrumb\">{['root', ...breadcrumbs].map(renderBreadcrumb)}</div> \n        <br />\n        {sessionStorage.getItem(\"persist:root\") && <div><CachedIcon style={{ color: 'green',cursor: 'pointer' }}  onClick={e => clearCach()} /><span onClick={e => clearCach()} style={{fontSize: \"13px\",color: \"#047f04\",fontWeight: \"bolder\",cursor: 'pointer'}}>Clear cache </span> </div> }\n        <div className=\"entities-filters\">\n          <Select value={filters.type} onChange={ev => setFilterType(ev.target.value)}>\n            {[{ type: 'all', title: 'ALL' }, ...ENTITY_TYPES].map(type => (\n              <MenuItem key={type.type} value={type.type}>\n                {type.title}\n              </MenuItem>\n            ))}\n          </Select>\n          <div className=\"entities-search-wrap\">\n            <SimpleSearchInput value={searchInput} onChange={handleSearchChange} />\n          </div>\n        </div>\n        {loadingData()}\n        <div className=\"grid-container define-height-grid-root\">\n          <div className=\"entities-list-container define-height\">\n            <div className=\"columns\">{renderColumns()}</div>\n          </div>\n          <div className=\"selected-entity-container\">\n            <SelectedEntity selectedEntity={selectedEntity} entityIcons={ENTITY_ICONS} />\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nRootModule.propTypes = {\n  fetchEntity: PropTypes.func,\n  selectEntity: PropTypes.func,\n  setFilterType: PropTypes.func,\n  setFilterSearch: PropTypes.func,\n  columns: PropTypes.array,\n  breadcrumbs: PropTypes.array,\n  filters: PropTypes.object,\n  selectedEntity: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    columns: getEntities(state),\n    breadcrumbs: getBreadcrumbs(state),\n    filters: state.entities.filters,\n    selectedEntity: getSelectedEntity(state),\n    entitiesStatus: state.entities.fetch_status\n  }),\n  { fetchEntity, selectEntity, setFilterType, setFilterSearch, openModal }\n)(RootModule);\n","import React from 'react';\nimport { Route, Link, Switch, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header/Header';\n\nimport { Button } from 'shared/components/controls';\n\nimport { HeaderPageSwitch } from './components/HeaderPageSwitch/HeaderPageSwitch';\n\nimport { UsersPage } from './users';\n\nimport { GroupsPage } from './groups';\n\nexport const UsersAndGroupsPage = () => {\n  return (\n    <>\n      <Header>\n        <UserManagementHeaderLinks />\n        <RightSideControls />\n      </Header>\n      <UserManagementSwitch />\n    </>\n  );\n};\n\nexport const UserManagementHeaderLinks = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  const routes = [\n    { to: `${url}/users`, label: 'Users' },\n    { to: `${url}/groups`, label: 'Groups' }\n  ];\n\n  return <HeaderPageSwitch active={location.pathname} routes={routes} />;\n};\n\nexport const RightSideControls = () => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  if (location.pathname.includes('create-new')) {\n    return null;\n  }\n\n  if (location.pathname.includes('users')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/users/create-new`} component={Link}>\n          Create User\n        </Button>\n      </div>\n    );\n  }\n\n  if (location.pathname.includes('groups')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/groups/create-new`} component={Link}>\n          Create Group\n        </Button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const UserManagementSwitch = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${url}`}>\n        <UsersPage />\n      </Route>\n      <Route path={`${url}/groups`}>\n        <GroupsPage />\n      </Route>\n      <Route path={`${url}/users`}>\n        <UsersPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default UsersAndGroupsPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { array, func, object } from 'prop-types';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Center, Main } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from '../store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\nimport { loadAllGroupsThunk } from '../groups/store/thunks';\nimport { ConnectedUserLoader } from './containers/UserLoader';\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { UserCard } from '../components/UserCard/UserCard';\nimport { NoUserSelectedPage } from './pages/NoUsersSelected';\nimport { CreateNewUserPage } from './pages/CreateNewUser/CreateNewUser';\n\nimport './root.scss';\n\nexport const UsersPage = ({\n  allUsers,\n  selectedUser,\n  loadAllUsers,\n  allGroups,\n  loadAllGroups,\n  isLoading\n}) => {\n  useEffect(() => {\n    loadAllUsers();\n    if (allGroups.length === 0) {\n      loadAllGroups();\n    }\n  }, []);\n\n  function filterUserByQuery(user, query) {\n    return user.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const userLink = user => {\n    return `${match.url}/${user.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading users...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"users-search-section\">\n        <SearchableList items={allUsers} filter={filterUserByQuery}>\n          {user => <UserCard selected={selectedUser} user={user} href={userLink(user)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <UserSwitch />\n      </section>\n    </Main>\n  );\n};\n\nUsersPage.propTypes = {\n  allUsers: array,\n  selectedUser: object,\n  loadAllUsers: func\n};\n\nexport const UserSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewUserPage />\n      </Route>\n      <Route path={`${path}/:userName`}>\n        <ConnectedUserLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoUserSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allUsers: mapSortInsensitive(state.usersManager.users.all),\n    selectedUser: state.usersManager.users.selected,\n    allGroups: state.groups.all,\n    isLoading: state.usersManager.flags.users.loading\n  }),\n  dispatch => ({\n    loadAllUsers: () => dispatch(loadAllUsersThunk()),\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(UsersPage);\n","import React, { useEffect } from 'react';\nimport { func, array } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadAllGroupsThunk } from './store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { GroupCard } from './components/GroupCard/GroupCard';\n\nimport { ConnectedGroupLoader } from './pages/GroupView/GroupView';\nimport { CreateNewGroupPage } from './pages/CreateNewGroup/CreateNewGroup';\nimport { NoGroupSelectedPage } from './pages/NoGroupSelected';\n\nimport './root.local.scss';\n\nexport const GroupsPage = ({ allGroups, loadAllGroups, isLoading }) => {\n  useEffect(() => {\n    loadAllGroups();\n  }, []);\n\n  function filterGroupByQuery(group, query) {\n    return group.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const groupLink = group => {\n    return `${match.url}/${group.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading groups...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"search-list-section\">\n        <SearchableList items={allGroups} filter={filterGroupByQuery}>\n          {group => <GroupCard group={group} href={groupLink(group)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <GroupsPagesSwitch />\n      </section>\n    </Main>\n  );\n};\n\nGroupsPage.propTypes = {\n  allGroups: array,\n  loadAllGroups: func\n};\n\nexport const GroupsPagesSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewGroupPage />\n      </Route>\n      <Route path={`${path}/:groupName`}>\n        <ConnectedGroupLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoGroupSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allGroups: mapSortInsensitive(state.groups.all.filter(g => g.name !== 'user')),\n    isLoading: state.groups.ops.all.loading\n  }),\n  dispatch => ({\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(GroupsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func, object } from 'prop-types';\nimport moment from 'moment';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddIcon from '@material-ui/icons/Add';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Center, RangeDatePicker } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper } from 'shared/components/layout';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions } from 'shared/store/actions';\nimport { Button } from 'shared/components/controls';\nimport { Header } from 'core/components/Header';\nimport { loadAllAccountsThunk, loadProtocolsThunk } from './store/thunks';\nimport { Treeview } from './treeview';\nimport { ConnectedBreadcrumbsTitle } from './containers/Breadcrumbs/Breadcrumbs';\nimport { ContentSwitch } from './components/ContentSwitch/ContentSwitch';\nimport { AddServerCard } from './containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from './containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from './containers/ImportCSV/ImportCSV';\nimport { ToggleSystemExplorerView } from './components/ToggleSystemExplorerView/ToggleSystemExplorerView';\nimport { SystemExplorerViewMode } from './components/ToggleSystemExplorerView/SystemExplorerViewMode';\nimport { ConnectedSystemExplorerTable } from './components/TableView/SystemExplorerTable';\n\nimport './root.local.scss';\n\nexport class ExplorerPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      anchorElement: null,\n      viewMode: SystemExplorerViewMode.TABLE\n    };\n  }\n\n  componentDidMount() {\n    const { loadProtocols, loadAllAccounts } = this.props;\n\n    loadProtocols();\n    loadAllAccounts();\n  }\n\n  render() {\n    const {\n      treeviewData,\n      isLoading,\n      storeState: { level }\n    } = this.props;\n\n    const { viewMode } = this.state;\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    return (\n      <>\n        <Header stretchContent>\n          <h1 className=\"header-title\">System / Explorer</h1>\n          {level === 'workload' || level === 'license' ? (\n            <RangeDatePicker\n              onDatesChange={this.onChangeDatesHandler}\n              startDate={moment.unix(this.props.globalFilters.get('startDate'))}\n              endDate={moment.unix(this.props.globalFilters.get('endDate'))}\n            />\n          ) : null}\n\n          <ToggleSystemExplorerView active={viewMode} onClickCallback={(newMode) => this.setState({ viewMode: newMode })} />\n        </Header>\n        <Main mdPage>\n          {isLoading ? (\n            <Center>\n              <Loader>Loading accounts...</Loader>\n            </Center>\n          ) : (\n            viewMode === SystemExplorerViewMode.TILES && (\n              <>\n                <Treeview data={treeviewData} />\n                <Paper className=\"tiles-view-container\">\n                  <Paper.Header>\n                    <h1 className=\"breadcrumbs-title\">\n                      <ConnectedBreadcrumbsTitle />\n                    </h1>\n                    <div className=\"action-container\">\n                      <Button\n                        startIcon={<AddIcon />}\n                        className=\"action-btn\"\n                        aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\"\n                        onClick={this.handleClick}\n                        disabled={isDisabled}\n                      >\n                        Add connection\n                      </Button>\n                      <Menu\n                        id=\"connections-menu\"\n                        keepMounted\n                        anchorEl={this.state.anchorElement}\n                        open={Boolean(this.state.anchorElement)}\n                        onClose={this.handleClose}\n                      >\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <AddServerCard disabled={isDisabled} />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <AddDatabaseCard disabled={isDisabled} />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <ImportCSV disabled={isDisabled} />\n                        </MenuItem>\n                      </Menu>\n                    </div>\n                  </Paper.Header>\n                  <ContentSwitch activePage={level} />\n                </Paper>\n              </>\n            )\n          )}\n          {!isLoading && viewMode === SystemExplorerViewMode.TABLE && (\n            <>\n              <ConnectedSystemExplorerTable\n                data={treeviewData}\n                switchToTileView={() => this.setState({ viewMode: SystemExplorerViewMode.TILES })}\n              />\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n\n  handleClick = event => {\n    this.setState({ anchorElement: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorElement: null });\n  };\n\n  onChangeDatesHandler = range => {\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n    }\n  };\n}\n\nExplorerPage.propTypes = {\n  treeviewData: array,\n  loadAllAccounts: func,\n  isLoading: bool,\n  storeState: object,\n  globalFilters: object,\n  setGlobalFilters: func\n};\n\nexport default connect(\n  state => ({\n    treeviewData: state.explorer.structured?.dbms || [],\n    isLoading: state.explorer.flags.accounts.loading || state.explorer.flags.protocols.loading,\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    loadAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    loadProtocols: () => dispatch(loadProtocolsThunk()),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(ExplorerPage);\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { ConnectedDBMS } from './layers/Dbms/Dbms';\n\nimport './root.local.scss';\n\nexport class Treeview extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <ul className=\"treeview-container\">\n        {data.map(dbms => (\n          <ConnectedDBMS key={dbms.protocol} data={dbms} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTreeview.propTypes = {\n  data: array\n};\n\nexport default Treeview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StorageSidebar, ObjectsSidebar } from './Sidebar';\nimport { StorageViewer, ObjectsViewer } from './Viewer';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport const DbObjects = ({\n  type,\n  data,\n  list,\n  dbName,\n  protocol,\n  selectedItem,\n  setItem,\n  loadingFlags,\n  invalidObjects\n}) => {\n  const { loadingPoints, loadingDetails, loading } = loadingFlags;\n  const sidebarDisabled = SystemExplorerFeatureUtil.isObjectsSidebarDisabled(protocol);\n  if (type === 'storage') {\n    return (\n      <div className=\"db-objects-tabs\">\n        <StorageSidebar\n          dbName={dbName}\n          isLoading={loadingPoints}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n        <StorageViewer data={data} isLoading={loadingDetails} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"db-objects-tabs\">\n      {!sidebarDisabled && (\n        <ObjectsSidebar\n          dbName={dbName}\n          invalidObjects={invalidObjects}\n          isLoading={loading}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n      )}\n      <ObjectsViewer data={data} isLoading={loading} sidebarDisabled={sidebarDisabled} protocol={protocol} />\n    </div>\n  );\n};\n\nDbObjects.propTypes = {\n  type: PropTypes.string,\n  data: PropTypes.object,\n  list: PropTypes.array,\n  selectedItem: PropTypes.object,\n  setItem: PropTypes.func,\n  dbName: PropTypes.string,\n  protocol: PropTypes.string\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { actions } from 'session/store/actions';\nimport { beHealthSelector, beLicenceSelector, beVersionSelector, currentUserSelector } from 'session/store/state';\nimport { Compile, Navigation, UserMenu } from './components';\nimport pkg from '../../../../../package.json';\nimport MasLogo from '../../../../assets/images/mas_logo_white.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_white.svg';\nimport './sidebar.local.scss';\n\nconst RUNNING = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'rgb(79, 219, 70)',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nconst STATUS_SPAN = {\n  color: '#fff',\n  fontSize: '11px',\n  marginLeft: '14px',\n  textShadow: '1px 1px 1px #3765af3b',\n  position: 'relative',\n  top: '-2px'\n};\n\nconst STOPPED = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'red',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nexport class SidebarContainer extends React.PureComponent {\n  componentDidMount() {\n    this.props.getBeVersion();\n    this.props.getBeLicence();\n    this.props.getBeHealth();\n  }\n\n  render() {\n    const postgresStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.postgresStatus : null;\n    const masDaemonStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.masDaemonStatus : null;\n    const uptime1Minute = this.props.beHealth\n      ? `${this.props.beHealth.masSystemsMonitor.uptime1Minute},${this.props.beHealth.masSystemsMonitor.uptime5Minutes},${this.props.beHealth.masSystemsMonitor.uptime15Minutes}`\n      : null;\n\n    const daysUntilExpire = this.props.beLicence ? this.props.beLicence.licensed_feature[1].daysUntilExpire : null;\n    const expirationDate = this.props.beLicence ? this.props.beLicence.licensed_feature[1].expirationDate : null;\n    const licenseStatus = this.props.beLicence ? this.props.beLicence.licensed_feature[1].licenseStatus : null;\n\n    return (\n      <div className={this.props.className}>\n        <div className=\"logo-container\">\n          <img className=\"vendita-logo img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          <LightTooltip\n            placement=\"right\"\n            title={\n              <>\n                <div>\n                  <span style={{ paddingRight: '2px' }}>UI </span>version:&nbsp;\n                  {pkg.version}\n                </div>\n                <div>\n                  <span>BE </span>version:&nbsp;\n                  {this.props.beVersion}\n                </div>\n\n                <div>\n                <span>BE </span>License: {(licenseStatus ? 'MAS Lite' : 'MAS Full')} <br />\n                  Expiration Date: {expirationDate} <br />\n                  Days Until Expire: {daysUntilExpire} <br />\n                </div>\n              </>\n            }\n          >\n            <img className=\"mas-logo img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n          </LightTooltip>\n        </div>\n        <div className=\"nav-area\">\n          <div style={{ position: 'relative', bottom: '17px', right: '2px' }}>\n          {masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {!masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {!postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {uptime1Minute && (\n            <div style={{ top: '23px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          {!uptime1Minute && (\n            <div style={{ top: '20px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          </div>\n          <Navigation />\n        </div>\n        <div className=\"bottom\">\n          <Compile />\n          <UserMenu user={this.props.currentUser.get('name')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebarContainer.propTypes = {\n  className: PropTypes.string,\n  currentUser: PropTypes.object.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  currentUser: currentUserSelector(state),\n  beVersion: beVersionSelector(state),\n  beLicence: beLicenceSelector(state),\n  beHealth: beHealthSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getBeVersion: data => dispatch(actions.getBeVersion.dispatchLoading(data)),\n  getBeLicence: data => dispatch(actions.getBeLicence.dispatchLoading(data)),\n  getBeHealth: data => dispatch(actions.getBeHealth.dispatchLoading(data))\n});\n\nSidebarContainer.defaultProps = {\n  className: 'sidebar'\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarContainer);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarOutline } from '@mdi/js';\n\nimport './favorites.local.scss';\n\nexport class Favorites extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-nav-favorites`}>\n        <SvgIcon>\n          <Icon path={mdiStarOutline} />\n        </SvgIcon>\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  className: PropTypes.string\n};\n\nFavorites.defaultProps = {\n  className: 'favorites'\n};\n\nexport default Favorites;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { navigationItems } from './constants';\n\nimport './navigation.local.scss';\n\nexport class Navigation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      navId: '',\n      anchorElement: null\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setCurrentNavItem();\n  }\n\n  componentDidUpdate() {\n    this.setCurrentNavItem();\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {navigationItems.map((item, index) => {\n          if (item.items && item.items.length > 0) {\n            return (\n              <div key={index}>\n                <div\n                  role=\"presentation\"\n                  key={index}\n                  className={`nav-item ${\n                    this.state.activeTab === index || this.state.navId === item.id ? ' active ' : ''\n                  } ${item.qaClass ? item.qaClass : ''}`}\n                  onMouseEnter={(event) => this.handlePopoverOpen(event, item.id)}\n                  onMouseLeave={() => this.handlePopoverClose(item.id)}\n                >\n                  <IconButton className=\"icon\">{item.icon}</IconButton>\n                  <p>{item.title}</p>\n                </div>\n                <Popover\n                  className=\"nav-sublist-container\"\n                  anchorEl={this.state.anchorElement}\n                  open={this.state.navId === item.id}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={this.setCloseDropdown}>\n                      <MenuList className=\"nav-sublist-menu\" id=\"menu-list-grow\">\n                        {item.items.map(subItem => (\n                          <MenuItem\n                            key={subItem.to}\n                            className={subItem.qaClass}\n                            to={subItem.to}\n                            component={Link}\n                            onClick={this.setCloseDropdown}\n                          >\n                            {subItem.title}\n                          </MenuItem>\n                        ))}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Popover>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              role=\"presentation\"\n              key={item.to}\n              className={`nav-item ${this.state.activeTab === index ? 'active' : ''} ${\n                item.qaClass ? item.qaClass : ''\n              }`}\n              onClick={() => this.setActiveTab(index, item.to)}\n              onMouseEnter={() => this.handlePopoverClose(item.id)}\n            >\n              <IconButton className=\"icon\">{item.icon}</IconButton>\n              <p>{item.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page) {\n      this.props.history.push(page);\n    }\n    this.setState({ navId: '' });\n  };\n\n  handlePopoverOpen = (event, name) => {\n    this.setState({ navId: name, anchorElement: event.target });\n  };\n\n  handlePopoverClose = (name) => {\n    if (this.state.navId !== name) {\n      this.setState({ navId: '', anchorElement: null });\n    }\n  };\n\n  setActiveTab = (newActiveTab, page) => {\n    this.props.history.push(page);\n    this.setState({ activeTab: newActiveTab, navId: '' });\n  };\n\n  setCurrentNavItem() {\n    const index = navigationItems.findIndex(\n      item =>\n        item.to === this.props.location.pathname || this.props.location.pathname.startsWith(item.to)\n    );\n\n    if (this.state.activeTab !== index) {\n      this.setState({ activeTab: index });\n    }\n  }\n}\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nNavigation.defaultProps = {\n  className: 'navigation'\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nimport './notification.local.scss';\n\nexport class Notification extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-notification`}>\n        <NotificationsNoneIcon />\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  className: PropTypes.string\n};\n\nNotification.defaultProps = {\n  className: 'notification'\n};\n\nexport default Notification;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Logout } from 'session/pages';\n\nimport './user-menu.local.scss';\nimport { ChangePassword } from '../../../../../users-manager/users/pages/UserView/containers/ChangePassword';\n\nexport class UserMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n\n    this.menuAnchorRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"user-menu qa-user-menu\"\n          ref={this.menuAnchorRef}\n          onClick={this.setToggleDropdown}\n          role=\"presentation\"\n        >\n          <LightTooltip placement=\"right\" title={this.props.user}>\n            <Avatar className=\"user-avatar\">{this.props.user.substring(0, 2).toUpperCase()}</Avatar>\n          </LightTooltip>\n        </div>\n\n        <Popover\n          className=\"user-menu-list-container\"\n          anchorEl={this.menuAnchorRef.current}\n          open={this.state.isVisible}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList\n                className=\"user-menu-list\"\n                autoFocusItem={this.state.isVisible}\n                id=\"menu-list-grow\"\n              >\n                {this.props.user === 'mas' && (\n                  <MenuItem\n                    className=\"qa-user-menu-admin\"\n                    onClick={event => this.openAdminPage(event)}\n                  >\n                    <FormattedMessage id=\"navigation.admin\" />\n                  </MenuItem>\n                )}\n                <MenuItem\n                  className=\"qa-user-menu-groups\"\n                  onClick={event => this.setCloseDropdown(event, 'help')}\n                >\n                  <FormattedMessage id=\"navigation.help\" />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-change-pwd\" onKeyDown={event => event.stopPropagation()}>\n                  <ChangePassword\n                    user={this.props.user}\n                    useLinkTrigger=\"true\"\n                  />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-logout\" to={Logout.path} component={Link}>\n                  <FormattedMessage id=\"navigation.logout\" />\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popover>\n      </>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page === 'help') {\n      window.open(\n        'https://masmanual.venditabeta.com/index.php/Vendita_MAS_Documentation_Library#User_Guides_MAS_3.0',\n        '_blank'\n      );\n    }\n\n    this.setState({ isVisible: false });\n  };\n\n  openAdminPage = (event) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    window.open(\n      `https://${window.location.host}/admin/`,\n      '_blank'\n    );\n\n    this.setState({ isVisible: false });\n  };\n\n  setToggleDropdown = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible\n    }));\n  };\n}\n\nUserMenu.propTypes = {\n  user: PropTypes.string.isRequired\n};\n\nexport default withRouter(UserMenu);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\n\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { postCompile } from 'shared/api/compile';\n\nimport { fetchEntity } from '../../../../../entities/actions';\n\nimport './compile.local.scss';\nimport { useDispatch } from 'react-redux';\n\nexport const Compile = () => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => setOpen(true),\n    close: () => {\n      setOpen(false);\n      setStep('confirmation');\n    }\n  };\n  const [step, setStep] = useState('confirmation');\n\n  return (\n    <>\n      <div className=\"compile\">\n        <Tooltip title=\"Compile\">\n          <VideoLibraryOutlinedIcon onClick={modalActions.open} />\n        </Tooltip>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {step === 'confirmation' && <Confirmation setStep={setStep} />}\n        {step === 'compiler' && <Compiler />}\n      </Modal>\n    </>\n  );\n};\n\nconst Confirmation = ({ setStep }) => {\n  const { actions } = useContext(ModalContext);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '350px',\n        maxHeight: '368px',\n        maxWidth: '65vw'\n      }}\n    >\n      <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n      <Paper.Content scrollable={false}>\n        <Result type=\"fail\">\n          <BodyText>\n            <p style={{ fontWeight: 'normal' }}>\n              This command will recompile all the processes and refresh the process list. This\n              usually takes about 1 to 2 minutes.\n            </p>\n            <p style={{ textAlign: 'center' }}>Do you want to proceed?</p>\n          </BodyText>\n        </Result>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            onClick={() => {\n              actions.close();\n            }}\n          >\n            No\n          </Button>\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            onClick={() => {\n              setStep('compiler');\n            }}\n          >\n            Yes\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </Paper>\n  );\n};\n\nconst Compiler = () => {\n  const [compilation, setCompilation] = useState('compiling');\n  const dispatch = useDispatch();\n\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    console.log('[started compilation'); // eslint-disable-line\n    postCompile()\n      .then(() => {\n        setCompilation('refreshing');\n\n        Promise.all([dispatch(fetchEntity('process')), dispatch(fetchEntity('namespace'))])\n          .then(() => {\n            setCompilation('success');\n            console.log('[succeded compilation'); // eslint-disable-line\n          })\n          .catch(() => {\n            setCompilation('success-no-reload');\n            console.log(results, '[succeded compilation. failed to reload entities.'); // eslint-disable-line\n          });\n      })\n      .catch(() => {\n        setCompilation('failed');\n        console.log('[failed compilation'); // eslint-disable-line\n      });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '430px',\n        minHeight: '330px'\n      }}\n    >\n      <ModalHeader icon={<VideoLibraryOutlinedIcon />} title=\"Compile\" />\n      <Switch value={compilation}>\n        <Switch.Case value=\"compiling\">\n          <Center>\n            <Loader>Running compilation...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"refreshing\">\n          <Center>\n            <Loader>Loading processes...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"failed\">\n          <Center>\n            <Result type=\"fail\">\n              <Result.Text compact>Compilation failed.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success-no-reload\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded</Result.Text>\n              <Result.Text compact>Could not refresh processes list.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header';\n\nimport { Main, Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-process.local.scss';\nimport { Breadcrumbs, Link } from '@material-ui/core';\n\nimport ConnectedJobView from './job-view';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getQuery, getInvocationStatus, getInvocation } from './store/selectors';\nimport { processQuery } from './store/actions';\nimport { InvocationStatus } from './store/constants';\n\nimport './root.local.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\n\nconst JobProcess = () => {\n  const query = useQuery();\n\n  const uuid = query.get('invocation');\n  const processName = query.get('process');\n  const redirected = query.get('redirected');\n\n  return (\n    <>\n      <Header>\n        <Breadcrumbs classes={{ root: 'job-main-breadcrumbs' }} aria-label=\"breadcrumb\">\n          <LinkRouter to=\"/jobs\">Jobs</LinkRouter>\n          <OtherMainLinks />\n        </Breadcrumbs>\n      </Header>\n      <Main>\n        <Paper>\n          <PrepareFlow uuid={uuid} process={processName}>\n            <ConnectedJobView redirected={redirected === 'true'} />\n          </PrepareFlow>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n\nexport default JobProcess;\n\nfunction PrepareFlow({ children, uuid, process }) {\n  const query = useSelector(getQuery);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(processQuery(uuid, process));\n  }, [uuid]);\n\n  if (query.uuid !== uuid) {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Setting up invocation viewer</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return children;\n}\n\nfunction OtherMainLinks() {\n  const status = useSelector(getInvocationStatus);\n  const invocation = useSelector(getInvocation);\n\n  if (status === InvocationStatus.NEW) {\n    return <div className=\"current-job\">New Job</div>;\n  }\n\n  if (invocation && invocation.designation) {\n    return (\n      <LimitlessTooltip\n        placement=\"bottom-start\"\n        title={\n          <>\n            <p>Invocation: {invocation.designation}</p>\n            {invocation.schedule && <p>Schedule: {invocation.schedule}</p>}\n          </>\n        }\n      >\n        <div className=\"current-job\">{invocation.designation}</div>\n      </LimitlessTooltip>\n    );\n  }\n\n  return null;\n}\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  CHECK_AUTHORIZATION: '[session] CHECK_AUTHORIZATION',\n  LOGIN: '[session] LOGIN',\n  LOGOUT: '[session] LOGOUT',\n  BE_VERSION: '[session] BE_VERSION',\n  BE_LICENCE: '[session] BE_LICENCE',\n  BE_HEALTH: '[session] BE_HEALTH'\n};\n\nexport const sessionActions = {\n  checkAuthorization: new ActionCreator(actionsTypes.CHECK_AUTHORIZATION),\n  login: new ActionCreator(actionsTypes.LOGIN),\n  logout: new ActionCreator(actionsTypes.LOGOUT),\n  getBeVersion: new ActionCreator(actionsTypes.BE_VERSION),\n  getBeLicence: new ActionCreator(actionsTypes.BE_LICENCE),\n  getBeHealth: new ActionCreator(actionsTypes.BE_HEALTH)\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* checkAuthorization({ payload }) {\n  RestClient.setBasicAuth();\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_USER(payload), {\n      page_size: 2147483645\n    });\n\n    const userDetails = {\n      name: response.data.data.source.user\n    };\n\n    if (response.data.data.users && response.data.data.users[0]) {\n      [userDetails.details] = response.data.data.users;\n    }\n\n    yield put(actions.checkAuthorization.dispatchSuccess(userDetails));\n  } catch (errors) {\n    yield put(actions.checkAuthorization.dispatchFail());\n  }\n}\n\nexport function* CheckAuthorizationEffect() {\n  yield takeEvery(actions.checkAuthorization.getLoadingAction(), checkAuthorization);\n}\n","export default {\n  INTL: 'en',\n  BASE: {\n    HOST: '/mas',\n    VERSION: '',\n    TIMEOUT: 2000 * 60,\n    ENDPOINTS: {\n      LOGIN: '/authenticate',\n      CURRENT_USER: name => `user/${name}`,\n      CURRENT_TIME: '/current/time',\n      DAEMON_STATUS: 'daemon/status',\n      JOB_COUNT: '/invocation/dashboard/job_count',\n      JOBS: '/invocation',\n      PROCESSES: '/process',\n      USERS: '/user',\n      DATATYPES: '/type',\n      PROTOTYPES: '/prototype',\n      GROUPS: '/group',\n      ACCOUNTS: '/account',\n      FORMS: '/form',\n      FORM: '/form',\n      PROTOCOLS: '/protocol',\n      DOWNLOAD_PACKAGING: '/download/oracle_report',\n      SESSIONS: name => `/system/explorer/${name}/all_sessions`,\n      DB_LAST_BACKUP: '/system/explorer/backup_last_24hr',\n      DB_STATUS: '/system/explorer/dbstate',\n      EXECUTIVE_DASHBOARD: '/nexecdash',\n      VIRTUAL_EXECUTIVE_DASHBOARD: 'execdashboard/virtual',\n      STORAGE_DF: name => `/system/explorer/${name}/df_free_space`,\n      STORAGE_TS: '/system/explorer/ts_usage',\n      BE_VERSION: '/version',\n      BE_LICENCE: '/mondata?id_montype=1',\n      BE_HEALTH: '/mondata?id_montype=2',\n      UPLOAD_ACCOUNTS: '/account/batch',\n      DOWNLOAD_CSV_TEMPLATE: '/download/csv_batch_import_sample',\n      LICENSES_INFO: '/dbpollster/license_data_fetch',\n      AVAILABLE_SERVERS: '/dbpollster/servers',\n      SUBMIT_LICENSE_ASSIGNMENT: '/dbpollster/license_data_insert',\n      UPDATE_LICENSE_ASSIGNMENT: '/dbpollster/license_data_update',\n      DELETE_LICENSE_ASSIGNMENT: '/dbpollster/license_data_delete',\n      UPLOAD_SUPPORT_RENEWAL_FILE: '/dbpollster/supportrenewals',\n      UPLOAD_MAS_LICENSE_FILE: '/dbpollster/licenses',\n    }\n  }\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\nimport Cookie from 'js-cookie';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* login(action) {\n  try {\n    Cookie.set(\n      'Authorization',\n      Buffer.from(`${action.payload.username}:${action.payload.password}`).toString('base64')\n    );\n    RestClient.setBasicAuth();\n    yield RestClient.post(CONSTANTS.BASE.ENDPOINTS.LOGIN);\n    yield put(actions.login.dispatchSuccess());\n    yield put(actions.checkAuthorization.dispatchLoading(action.payload.username));\n    localStorage.setItem('username', JSON.stringify(action.payload.username));\n  } catch (errors) {\n    if (!errors.response) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: 'Unknown Error. Please contact the administrator!'\n          }\n        ])\n      );\n      return;\n    }\n\n    if (errors.response.data.status === 422) {\n      yield put(actions.login.dispatchFail(errors.response.data.error.details));\n      return;\n    }\n\n    if (errors.response.data.status === 401) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors.response.data.status === 500) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors?.response?.statusText) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    throw errors;\n  }\n}\n\nexport function* LoginEffect() {\n  yield takeEvery(actions.login.getLoadingAction(), login);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { Login } from 'session/pages';\n\nfunction loginPath() {\n  return process.env.NODE_ENV === 'development'\n    ? window.location.replace(Login.path)\n    : window.location.replace(`/ui/#${Login.path}`);\n}\n\nfunction* logout() {\n  localStorage.removeItem('username');\n  RestClient.removeBasicAuth();\n  loginPath();\n  yield put(actions.logout.dispatchSuccess());\n}\n\nexport function* LogoutEffect() {\n  yield takeEvery(actions.logout.getLoadingAction(), logout);\n}\n","module.exports = __webpack_public_path__ + \"svgs/ae6021ac50f5c1e93465ff63ea3769d4.svg\";","module.exports = __webpack_public_path__ + \"svgs/0e998e182da8161761cd7209592a7dae.svg\";","module.exports = __webpack_public_path__ + \"svgs/fc315038f28eb52f1b1228e70e8919d6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { isInclusivelyAfterDay } from 'shared/lib';\n\nimport { DateRangePicker, DateRangePickerPhrases, DateRangePickerShape } from 'react-dates';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n} from './constants';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  // initialStartDate: momentPropTypes.momentObj,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  startDateId: PropTypes.string,\n  startDatePlaceholderText: PropTypes.string,\n  endDateId: PropTypes.string,\n  endDatePlaceholderText: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDates: PropTypes.bool,\n  showDefaultInputIcon: PropTypes.bool,\n  customInputIcon: PropTypes.object,\n  customArrowIcon: PropTypes.node,\n  customCloseIcon: PropTypes.object,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: PropTypes.string,\n  orientation: PropTypes.string,\n  anchorDirection: PropTypes.string,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.string,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDates: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  // navigation related props\n  navPosition: PropTypes.string,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.string,\n  renderDayContents: PropTypes.func,\n  minimumNights: PropTypes.number,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization\n  displayFormat: PropTypes.func,\n  monthFormat: PropTypes.string,\n  phrases: DateRangePickerPhrases,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: (day) => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: (date) => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  render() {\n    const { focusedInput } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={this.props.startDate}\n          endDate={this.props.endDate}\n        />\n      </div>\n    );\n  }\n\n  onDatesChange(range) {\n    this.props.onDatesChange(range);\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  GET_JOBS: '[jobs] GET_JOBS',\n  GET_CONNECTIONS: '[jobs] GET_CONNECTIONS',\n  SEARCH_JOBS: '[jobs] SEARCH_JOBS'\n};\n\nexport const jobsActions = {\n  getJobs: new ActionCreator(actionsTypes.GET_JOBS),\n  getConnections: new ActionCreator(actionsTypes.GET_CONNECTIONS),\n  searchJobs: new ActionCreator(actionsTypes.SEARCH_JOBS)\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SEARCH_PROCESSES: '[processes] SEARCH_PROCESSES',\n};\n\nexport const processActions = {\n  searchProcesses: new ActionCreator(actionsTypes.SEARCH_PROCESSES),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  UPDATE_GLOBAL_FILTERS: '[shared] UPDATE_GLOBAL_FILTERS',\n};\n\nexport const globalFiltersActions = {\n  setGlobalFilters: new ActionCreator(actionsTypes.UPDATE_GLOBAL_FILTERS),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SET_FILTER_STATUS: '[dashboard] SET_FILTER_STATUS'\n};\n\nexport const filterStatusActions = {\n  setFilterStatus: new ActionCreator(actionsTypes.SET_FILTER_STATUS)\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport function checkDaemon() {\n  return RestClient.get(CONSTANTS.BASE.ENDPOINTS.DAEMON_STATUS);\n}\n","import { createSelector } from 'reselect';\n\nexport const isDaemonRunning = createSelector(\n  state => state.daemon,\n  daemon => {\n    return daemon.running;\n  }\n);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Loader } from 'shared/components/loaders';\nimport { Center, Switch } from 'shared/components';\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiServer } from '@mdi/js';\nimport { CircleImg, NumberLabel } from '../../../shared/components';\nimport './ServersList.local.scss';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AddServerCard } from '../../../explorer/containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../../explorer/containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../../explorer/containers/ImportCSV/ImportCSV';\nimport Button from '@material-ui/core/Button';\n\nexport const ServersList = ({ loading, dbms, getAllAccounts }) => {\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  useEffect(() => {\n    getAllAccounts();\n  }, []);\n\n  const handleClick = (event) => {\n    event.stopPropagation();\n    setAnchorElement(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorElement(null);\n  };\n\n  const serversNumber = dbms.reduce((acc, el) => acc + el.servers.length, 0);\n\n  return (\n    <Switch value={loading}>\n      <Switch.Case value>\n        <Center>\n          <Loader>Loading Servers</Loader>\n        </Center>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <header onClick={handleClose} role=\"presentation\">\n          <div className=\"widget-title\">\n            <CircleImg\n              image={\n                <SvgIcon>\n                  <Icon path={mdiServer} />\n                </SvgIcon>\n              }\n            />\n            <NumberLabel number={serversNumber} />\n            <Link className=\"servers-link\" to=\"/system/explorer\">Servers</Link>\n          </div>\n\n          <div>\n            <Button\n              startIcon={<AddIcon />}\n              className=\"action-btn\"\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              Add connection\n            </Button>\n            <Menu\n              id=\"connections-menu\"\n              keepMounted\n              anchorEl={anchorElement}\n              open={Boolean(anchorElement)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddServerCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddDatabaseCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <ImportCSV />\n              </MenuItem>\n            </Menu>\n          </div>\n        </header>\n        <div className=\"servers-list\">\n          {dbms.map(el => (\n            <>\n              {el.servers.map(server => (\n                <div className=\"server-item\">\n                  <div className=\"icon-container\">\n                    <SvgIcon>\n                      <Icon path={mdiDns} />\n                    </SvgIcon>\n                  </div>\n                  <div className=\"name-container\">\n                    <span className=\"name\">\n                      <span className=\"dbms\">{el.name}</span>\n                      <span className=\"separator\">/</span>\n                      <span className=\"server\">{server.address}</span>\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </>\n          ))}\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nexport const ConnectedServersList = connect(\n  state => {\n    return {\n      loading: state.explorer.flags.serversUsage.loading,\n      dbms: state.explorer.structured?.dbms || []\n    };\n  },\n  dispatch => ({\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'dashboard' }))\n  })\n)(ServersList);\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\n// import mock from './_mock.json';\n\nfunction* jobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    // yield put(actions.getJobs.dispatchSuccess(mock));\n    yield put(actions.getJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    let reason = '';\n\n    if (\n      errors &&\n      errors.response &&\n      errors.response.data &&\n      errors.response.data.messages &&\n      errors.response.data.messages[0] &&\n      errors.response.data.messages[0].text &&\n      errors.response.data.messages[0].text.startsWith('permission denied')\n    ) {\n      reason = 'rights';\n    }\n\n    yield put(actions.getJobs.dispatchFail({ reason }));\n  }\n}\n\nexport function* JobsEffect() {\n  yield takeEvery(actions.getJobs.getLoadingAction(), jobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* connections() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n      page_size: 2147483645\n    });\n\n    yield put(actions.getConnections.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getConnections.dispatchFail(errors));\n  }\n}\n\nexport function* JobsConnectionsEffect() {\n  yield takeEvery(actions.getConnections.getLoadingAction(), connections);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchJobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    yield put(actions.searchJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchJobs.dispatchFail(errors));\n  }\n}\n\nexport function* SearchJobsEffect() {\n  yield takeEvery(actions.searchJobs.getLoadingAction(), searchJobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchProcesses(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROCESSES, query.payload);\n\n    yield put(actions.searchProcesses.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchProcesses.dispatchFail(errors));\n  }\n}\n\nexport function* SearchProcessesEffect() {\n  yield takeEvery(actions.searchProcesses.getLoadingAction(), searchProcesses);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\n\nfunction* globalFilters(filters) {\n  yield put(actions.setGlobalFilters.dispatchSuccess(filters.payload));\n}\n\nexport function* GlobalFiltersEffect() {\n  yield takeEvery(actions.setGlobalFilters.getLoadingAction(), globalFilters);\n}\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  SELECT_USER,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  REMOVE_USER_FROM_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nimport { mapUsersData, mapLoadedUser } from '../mappers';\n\nexport const initialState = {\n  users: {\n    all: [],\n    selected: null\n  },\n  flags: {\n    users: { loading: false },\n    user: { loading: false, deactivating: false },\n    privileges: { disabled: false }\n  },\n  debug: {\n    user: {},\n    groups_update: {},\n    privileges: {}\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_USERS)]: draft => {\n    draft.flags.users.loading = true;\n  },\n  [types.success(LOAD_ALL_USERS)]: (draft, { payload }) => {\n    draft.users.all = mapUsersData(payload);\n\n    draft.flags.users.loading = false;\n  },\n  [types.action(SELECT_USER)]: (draft, { payload }) => {\n    draft.users.selected = payload;\n  },\n  [types.loading(LOAD_USER)]: draft => {\n    draft.flags.user.loading = true;\n    draft.users.selected = null;\n  },\n  [types.success(LOAD_USER)]: (draft, { payload }) => {\n    draft.flags.user.loading = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.loading(DEACTIVATE_USER)]: draft => {\n    draft.flags.user.deactivating = true;\n  },\n  [types.success(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.users.all = mapUsersData(payload);\n  },\n  [types.fail(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.action(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.loading(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(REMOVE_USER_FROM_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(CREATE_USER)]: draft => {\n    draft.flags.user.creating = true;\n  },\n  [types.success(CREATE_USER)]: draft => {\n    draft.flags.user.creating = false;\n  },\n  [types.fail(CREATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.creating = false;\n    draft.debug.user.errors = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  PATCH_SELECTED_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport const initialState = {\n  all: [],\n  ops: {\n    all: { done: false, loading: false },\n    selected: { done: false, loading: false },\n    privileges: { done: false, loading: false },\n    remove: { loading: false },\n    create: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_GROUPS)]: draft => {\n    draft.ops.all = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.loading(LOAD_GROUP)]: draft => {\n    draft.ops.selected = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_GROUP)]: (draft, { payload }) => {\n    const response = payload;\n    draft.selected = response.data.groups[0]; //eslint-disable-line\n    draft.ops.selected = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_GROUP)]: (draft, { payload }) => {\n    draft.selected = null;\n    draft.ops.selected = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.action(PATCH_SELECTED_GROUP)]: (draft, { payload }) => {\n    draft.selected = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REMOVE_USERS_FROM_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(REMOVE_GROUPS_FROM_GROUP)]: draft => {\n    draft.ops.group_subgroups = { loading: true };\n  },\n  [types.success(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(ADD_USERS_TO_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: true };\n  },\n  [types.success(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: false };\n  },\n  [types.fail(CREATE_GROUP)]: (draft, { payload }) => {\n    draft.ops.create = {\n      loading: false,\n      errors: payload\n    };\n  },\n  [types.loading(DELETE_GROUP)]: draft => {\n    draft.ops.remove = { loading: true };\n  },\n  [types.success(DELETE_GROUP)]: draft => {\n    draft.selected = null;\n    draft.ops.remove = { loading: false };\n  },\n  [types.fail(DELETE_GROUP)]: (draft, { payload }) => {\n    draft.ops.remove = { loading: false, errors: payload };\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_MSSQL_DISK_IO,\n  LOAD_MSSQL_FILE_STORAGE,\n  LOAD_MSSQL_STORAGE_USED,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  mapAccountsNewStructure,\n  mapAccountsTree,\n  mapLicenseReport,\n  mapProtocols,\n  mapUpdateDBStatus\n} from '../mappers';\n\nexport const initialState = {\n  accounts: [],\n  rawAccounts: [],\n  flags: {\n    accounts: { loading: false },\n    protocols: { loading: false },\n    sessions: { loading: false },\n    storage: { loadingPoints: false, loadingDetails: false },\n    objects: { loading: false },\n    license: { loading: false },\n    topSqlStatements: { loading: false },\n    reports: { loading: false },\n    serversUsage: { loading: true },\n    collectionProcesses: {\n      hardware: { loading: false, wasExecuted: false },\n      preSoftware: { loading: false, wasExecuted: false },\n      software: { loading: false, wasExecuted: false },\n      vmware: { loading: false },\n      packaging: { loading: false }\n    }\n  },\n  sessions: [],\n  storage: {\n    storedEntries: {},\n    selected: null\n  },\n  objects: {\n    selectedOwner: null,\n    selectedObject: null,\n    storedEntries: {}\n  },\n  licenses: [],\n  reports: {},\n  protocols: [],\n  state: {\n    path: '',\n    level: 'all-dbms'\n  },\n  serversUsage: {},\n  dbLastBackup: [],\n  dbStatus: [],\n  collectionProcesses: {\n    hardware: null,\n    preSoftware: null,\n    software: null,\n    vmware: null,\n    packaging: null\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_ACCOUNTS)]: draft => {\n    draft.flags.accounts.loading = true;\n  },\n  [types.success(LOAD_ALL_ACCOUNTS)]: (draft, { payload }) => {\n    draft.accounts = mapAccountsTree(payload.data.accounts);\n    draft.structured = mapAccountsNewStructure(payload.data.accounts, payload.protocols);\n    draft.rawAccounts = payload.data.accounts;\n\n    draft.state.path = '';\n    draft.state.level = 'all-dbms';\n\n    draft.flags.accounts.loading = false;\n  },\n  [types.loading(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = true;\n  },\n  [types.success(LOAD_PROTOCOLS)]: (draft, { payload }) => {\n    draft.protocols = mapProtocols(payload.data.protocols);\n    draft.flags.protocols.loading = false;\n  },\n  [types.fail(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = false;\n  },\n  [CHANGE_STATE]: (draft, { payload }, base) => {\n    draft.state = { ...base.state, ...payload };\n  },\n  [types.loading(LOAD_ALL_LICENSES)]: draft => {\n    draft.flags.license.loading = true;\n  },\n  [types.success(LOAD_ALL_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload.data.invocations;\n    draft.flags.license.loading = false;\n  },\n  [types.loading(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = true;\n  },\n  [types.success(LOAD_TOP_SQL_STATEMENTS)]: (draft, { payload }) => {\n    draft.topSqlStatements = payload;\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.fail(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.loading(LICENSE_FULL_REPORT)]: draft => {\n    draft.flags.reports.loading = true;\n  },\n  [types.success(LICENSE_FULL_REPORT)]: (draft, { payload }) => {\n    const { reportData } = payload;\n    draft.reports.data = mapLicenseReport(reportData);\n    draft.flags.reports.loading = false;\n  },\n  [types.loading(PROVIDE_SERVERS_USAGE)]: draft => {\n    draft.flags.serversUsage.loading = true;\n  },\n  [types.success(PROVIDE_SERVERS_USAGE)]: (draft, { payload }) => {\n    draft.flags.serversUsage.loading = false;\n    draft.serversUsage = payload;\n  },\n  [types.loading(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = true;\n  },\n  [types.fail(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.success(LOAD_STORAGE_POINTS)]: (draft, { payload }, base) => {\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      points: payload.data\n    };\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.loading(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = true;\n  },\n  [types.fail(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = false;\n  },\n  [types.success(LOAD_STORAGE_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.storage.loadingDetails = false;\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      details: payload.data\n    };\n  },\n  [types.loading(LOAD_MSSQL_DISK_IO)]: draft => {\n    draft.flags.storage.loadingDiskIO = true;\n  },\n  [types.fail(LOAD_MSSQL_DISK_IO)]: draft => {\n    draft.flags.storage.loadingDiskIO = false;\n  },\n  [types.success(LOAD_MSSQL_DISK_IO)]: (draft, { payload }) => {\n    draft.flags.storage.loadingDiskIO = false;\n    draft.storage.mssqlDiskIO = payload.data;\n  },\n  [types.loading(LOAD_MSSQL_STORAGE_USED)]: draft => {\n    draft.flags.storage.loadingStorageUsed = true;\n  },\n  [types.fail(LOAD_MSSQL_STORAGE_USED)]: draft => {\n    draft.flags.storage.loadingStorageUsed = false;\n  },\n  [types.success(LOAD_MSSQL_STORAGE_USED)]: (draft, { payload }) => {\n    draft.flags.storage.loadingStorageUsed = false;\n    draft.storage.mssqlStorageUsed = payload.data;\n  },\n  [types.loading(LOAD_MSSQL_FILE_STORAGE)]: draft => {\n    draft.flags.storage.loadingFileStorage = true;\n  },\n  [types.fail(LOAD_MSSQL_FILE_STORAGE)]: draft => {\n    draft.flags.storage.loadingFileStorage = false;\n  },\n  [types.success(LOAD_MSSQL_FILE_STORAGE)]: (draft, { payload }) => {\n    draft.flags.storage.loadingFileStorage = false;\n    draft.storage.mssqlFileStorage = payload.data;\n  },\n  [types.success(SET_STORAGE_NS)]: (draft, { payload }) => {\n    draft.storage.selected = payload;\n  },\n  [types.loading(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = true;\n  },\n  [types.fail(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = false;\n  },\n  [types.success(LOAD_OBJECT_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.objects.loading = false;\n    draft.objects.storedEntries[payload.key] = { ...base.objects.storedEntries[payload.key] };\n    payload.data.forEach(({ name, res }) => {\n      draft.objects.storedEntries[payload.key][name] = res;\n    });\n  },\n  [types.success(SET_SELECTED_OBJECT)]: (draft, { payload }) => {\n    draft.objects.selectedObject = payload.object;\n    draft.objects.selectedOwner = payload.owner;\n  },\n  [types.loading(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = true;\n  },\n  [types.success(LOAD_SESSIONS)]: (draft, { payload }) => {\n    draft.flags.sessions.loading = false;\n    // sort flags should be sent to backend and not stored on state.\n    draft.flags.sessions.sort = payload.sort;\n    draft.sessions = payload.data;\n  },\n  [types.fail(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = false;\n  },\n  [types.success(PROVIDE_DB_LAST_BACKUP)]: (draft, { payload }) => {\n    draft.dbLastBackup = payload;\n  },\n  [types.success(PROVIDE_DB_STATUS)]: (draft, { payload }) => {\n    draft.dbStatus = payload;\n  },\n  [types.success(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, true);\n  },\n  [types.fail(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = true;\n  },\n  [types.success(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n    draft.collectionProcesses[payload.name] = payload.data;\n  },\n  [types.fail(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n  },\n  [EXECUTE_COLLECTION_PROCESS]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].wasExecuted = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport {\n  DESELECT_ALL,\n  LOAD_DB_EDITION,\n  LOAD_DB_VERSION,\n  LOAD_LICENSE_DELTA,\n  LOAD_NETWORK_EDGES,\n  LOAD_NETWORK_NODES,\n  LOAD_OS_TYPE,\n  LOAD_SERVER_DETAILS,\n  LOAD_USAGE,\n  LOAD_USAGE_STAT,\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\nimport { mapAllServers, mapVirtualServers } from '../mappers';\n\nexport const initialState = {\n  rawEntries: [],\n  allServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  selectedServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  rawVirtualServers: [],\n  virtualServers: [],\n  flags: {\n    dashboard: { loading: false, callFailed: false },\n    virtual: { loading: false },\n    network: {\n      nodesLoading: false,\n      edgesLoading: false,\n      serverDetailsLoading: false,\n    },\n    techDetails: {\n      osTypeLoading: false,\n      dbEditionLoading: false,\n      dbVersionLoading: false,\n    },\n    licensableFeatures: {\n      loading: false,\n    },\n    usageStat: {\n      loading: false,\n    },\n    licenseDelta: {\n      loading: false,\n    }\n  },\n  networkNodes: [],\n  networkEdges: [],\n  networkServerDetails: {},\n  techDetails: {\n    osType: [],\n    dbEdition: [],\n    dbVersion: [],\n  },\n  licensableFeatures: [],\n  usageStat: {},\n  licenseDelta: [],\n};\n\nexport const producers = {\n  [types.loading(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = true;\n  },\n  [types.success(PROVIDE_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawEntries = payload.execdashboard;\n    draft.allServers = mapAllServers(payload.execdashboard);\n    draft.selectedServers = mapAllServers(payload.execdashboard);\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [DESELECT_ALL]: draft => {\n    draft.selectedServers = [];\n  },\n  [SELECT_ALL]: (draft, { payload }) => {\n    draft.selectedServers = mapAllServers(payload);\n  },\n  [TOGGLE_SERVER]: (draft, { payload }) => {\n    draft.selectedServers = payload;\n  },\n  [types.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = true;\n  },\n  [types.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawVirtualServers = payload?.execdashboard_virtual;\n    draft.virtualServers = mapVirtualServers(payload?.execdashboard_virtual);\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [types.loading(LOAD_NETWORK_NODES)]: draft => {\n    draft.flags.network.nodesLoading = true;\n  },\n  [types.success(LOAD_NETWORK_NODES)]: (draft, { payload }) => {\n    draft.networkNodes = payload;\n    draft.flags.network.nodesLoading = false;\n  },\n  [types.fail(LOAD_NETWORK_NODES)]: draft => {\n    draft.flags.network.nodesLoading = false;\n    draft.networkNodes = [];\n  },\n  [types.loading(LOAD_NETWORK_EDGES)]: draft => {\n    draft.flags.network.edgesLoading = true;\n  },\n  [types.success(LOAD_NETWORK_EDGES)]: (draft, { payload }) => {\n    draft.networkEdges = payload;\n    draft.flags.network.edgesLoading = false;\n  },\n  [types.fail(LOAD_NETWORK_EDGES)]: draft => {\n    draft.flags.network.edgesLoading = false;\n    draft.networkEdges = [];\n  },\n  [types.loading(LOAD_SERVER_DETAILS)]: draft => {\n    draft.flags.network.serverDetailsLoading = true;\n  },\n  [types.success(LOAD_SERVER_DETAILS)]: (draft, { payload }) => {\n    draft.networkServerDetails = payload;\n    draft.flags.network.serverDetailsLoading = false;\n  },\n  [types.fail(LOAD_SERVER_DETAILS)]: draft => {\n    draft.flags.network.serverDetailsLoading = false;\n    draft.networkServerDetails = {};\n  },\n  [types.loading(LOAD_OS_TYPE)]: draft => {\n    draft.flags.network.osTypeLoading = true;\n  },\n  [types.success(LOAD_OS_TYPE)]: (draft, { payload }) => {\n    draft.techDetails.osType = payload;\n    draft.flags.techDetails.osTypeLoading = false;\n  },\n  [types.fail(LOAD_OS_TYPE)]: draft => {\n    draft.flags.network.osTypeLoading = false;\n    draft.techDetails.osType = [];\n  },\n  [types.loading(LOAD_DB_EDITION)]: draft => {\n    draft.flags.network.dbEditionLoading = true;\n  },\n  [types.success(LOAD_DB_EDITION)]: (draft, { payload }) => {\n    draft.techDetails.dbEdition = payload;\n    draft.flags.techDetails.dbEditionLoading = false;\n  },\n  [types.fail(LOAD_DB_EDITION)]: draft => {\n    draft.flags.network.dbEditionLoading = false;\n    draft.techDetails.dbEdition = [];\n  },\n  [types.loading(LOAD_DB_VERSION)]: draft => {\n    draft.flags.network.dbVersionLoading = true;\n  },\n  [types.success(LOAD_DB_VERSION)]: (draft, { payload }) => {\n    draft.techDetails.dbVersion = payload;\n    draft.flags.techDetails.dbVersionLoading = false;\n  },\n  [types.fail(LOAD_DB_VERSION)]: draft => {\n    draft.flags.network.dbVersionLoading = false;\n    draft.techDetails.dbVersion = [];\n  },\n  [types.loading(LOAD_USAGE)]: draft => {\n    draft.flags.licensableFeatures.loading = true;\n  },\n  [types.success(LOAD_USAGE)]: (draft, { payload }) => {\n    draft.licensableFeatures = payload;\n    draft.flags.licensableFeatures.loading = false;\n  },\n  [types.fail(LOAD_USAGE)]: draft => {\n    draft.flags.licensableFeatures.loading = false;\n    draft.licensableFeatures = [];\n  },\n  [types.loading(LOAD_USAGE_STAT)]: draft => {\n    draft.flags.usageStat.loading = true;\n  },\n  [types.success(LOAD_USAGE_STAT)]: (draft, { payload }) => {\n    draft.usageStat = payload;\n    draft.flags.usageStat.loading = false;\n  },\n  [types.fail(LOAD_USAGE_STAT)]: draft => {\n    draft.flags.usageStat.loading = false;\n    draft.usageStat = {};\n  },\n  [types.loading(LOAD_LICENSE_DELTA)]: draft => {\n    draft.flags.licenseDelta.loading = true;\n  },\n  [types.success(LOAD_LICENSE_DELTA)]: (draft, { payload }) => {\n    draft.licenseDelta = payload;\n    draft.flags.licenseDelta.loading = false;\n  },\n  [types.fail(LOAD_LICENSE_DELTA)]: draft => {\n    draft.flags.licenseDelta.loading = false;\n    draft.licenseDelta = [];\n  },\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport { LOAD_AVAILABLE_SERVERS, LOAD_DB_LICENSES, LOAD_LICENSE_TARGETS, LOAD_LICENSES } from '../actions';\n\nexport const initialState = {\n  licenses: [],\n  dbLicenses: [],\n  licenseTargets: [],\n  availableServers: [],\n  flags: {\n    licenses: { loading: false },\n    dbLicenses: { loading: false },\n    licenseTargets: { loading: false },\n    availableServers: { loading: false },\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_LICENSES)]: draft => {\n    draft.flags.licenses.loading = true;\n  },\n  [types.success(LOAD_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload;\n    draft.flags.licenses.loading = false;\n  },\n  [types.fail(LOAD_LICENSES)]: draft => {\n    draft.flags.licenses.loading = false;\n  },\n\n  [types.loading(LOAD_DB_LICENSES)]: draft => {\n    draft.flags.dbLicenses.loading = true;\n  },\n  [types.success(LOAD_DB_LICENSES)]: (draft, { payload }) => {\n    draft.dbLicenses = payload;\n    draft.flags.dbLicenses.loading = false;\n  },\n  [types.fail(LOAD_DB_LICENSES)]: draft => {\n    draft.flags.dbLicenses.loading = false;\n  },\n\n  [types.loading(LOAD_LICENSE_TARGETS)]: draft => {\n    draft.flags.licenseTargets.loading = true;\n  },\n  [types.success(LOAD_LICENSE_TARGETS)]: (draft, { payload }) => {\n    draft.licenseTargets = payload;\n    draft.flags.licenseTargets.loading = false;\n  },\n  [types.fail(LOAD_LICENSE_TARGETS)]: draft => {\n    draft.flags.licenseTargets.loading = false;\n  },\n\n  [types.loading(LOAD_AVAILABLE_SERVERS)]: draft => {\n    draft.flags.availableServers.loading = true;\n  },\n  [types.success(LOAD_AVAILABLE_SERVERS)]: (draft, { payload }) => {\n    draft.availableServers = payload;\n    draft.flags.availableServers.loading = false;\n  },\n  [types.fail(LOAD_AVAILABLE_SERVERS)]: draft => {\n    draft.flags.availableServers.loading = false;\n  },\n};\n\nexport default createReducer(producers, initialState);\n","export const initialState = {\n  data: {},\n  fetch_status: {\n    account: 'not-fetched',\n    constant: 'not-fetched',\n    exception: 'not-fetched',\n    form: 'not-fetched',\n    namespace: 'not-fetched',\n    process: 'not-fetched',\n    prototype: 'not-fetched',\n    schedule: 'not-fetched',\n    type: 'not-fetched',\n    alias: 'not-fetched'\n  },\n  isLoading: true,\n  breadcrumbs: [],\n  filters: {\n    type: 'all',\n    search: ''\n  }\n};\n\nexport function FETCH_ENTITIES_REQUEST(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'fetching';\n}\n\nexport function FETCH_ENTITIES_SUCCESS(nextState, { entityType, result }) {\n  nextState.data[entityType] = result;\n  nextState.fetch_status[entityType] = 'fetched';\n}\n\nexport function FETCH_ENTITIES_FAILURE(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'failed';\n}\n\nexport function FETCH_ENTITIES_ALL_REQUEST(nextState) {\n  nextState.isLoading = true;\n}\n\nexport function FETCH_ENTITIES_ALL_SUCCESS(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function FETCH_ENTITIES_ALL_FAILURE(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function SELECT_ENTITY(nextState, { entity, index }, state) {\n  nextState.breadcrumbs.splice(index, state.breadcrumbs.length - 1);\n  nextState.breadcrumbs[index] = entity.name.split('.').pop();\n}\n\nexport function CLEAR_SELECTED_ENTITY(nextState) {\n  nextState.breadcrumbs = [];\n}\n\nexport function UPDATE_FILTERS(nextState, { name, value }) {\n  nextState.filters[name] = value;\n  if (name === 'type' || name === 'search') {\n    nextState.breadcrumbs = [];\n  }\n}\n","export const initialState = {\n  running: true\n};\n\nexport function DAEMON_STATUS_REQUEST() {}\n\nexport function DAEMON_STATUS_SUCCESS(nextState, { result }) {\n  nextState.running = !!result?.data?.data?.running;\n}\n\nexport function DAEMON_STATUS_FAILURE(nextState) {\n  nextState.running = false;\n}\n","import { InvocationStatus } from './constants';\n\nexport const initialState = {\n  loading: true,\n  query: { processed: false },\n  fetchedInvocation: false,\n  invocation: { status: 'NOT_FETCHED' }\n};\n\nexport function PROCESS_QUERY(nextState, { uuid, process }) {\n  nextState.query = { processed: true, uuid, process };\n  if (uuid) {\n    nextState.invocation = { status: 'NOT_FETCHED' };\n  } else {\n    nextState.invocation = { status: '__NEW__', process: process || '' };\n  }\n}\n\nexport function FETCH_INVOCATION_SUCCESS(nextState, { result }) {\n  const [recieved] = result.data.data.invocations;\n  nextState.invocation = recieved;\n}\n\nexport function FETCH_INVOCATION_FAILURE(nextState, { process }) {\n  nextState.invocation = { status: InvocationStatus.NEW, process };\n}\n\nexport function REPLACE_INVOCATION(nextState, { invocation }) {\n  nextState.invocation = invocation;\n}\n","export const api = () => next => async action => {\n  const { type, promise, schema, ...rest } = action;\n  const isPromise = promise instanceof Promise;\n  if (!isPromise || !type) {\n    next(action);\n    return;\n  }\n\n  next({ type: `${type}_REQUEST`, ...rest });\n  try {\n    const result = await promise;\n    if (schema) {\n      next({ type, ...rest, data: result, schema });\n    }\n    next({ type: `${type}_SUCCESS`, ...rest, result });\n  } catch (error) {\n    console.error('[middlewares] error: ', error); // eslint-disable-line\n    next({ type: `${type}_FAILURE`, ...rest, error });\n  }\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  ADD_NOTIFICATIONS: '[core] ADD_NOTIFICATIONS',\n  REMOVE_NOTIFICATION: '[core] REMOVE_NOTIFICATION',\n};\n\nexport const notificationActions = {\n  addNotifications: new ActionCreator(actionsTypes.ADD_NOTIFICATIONS),\n  removeNotification: new ActionCreator(actionsTypes.REMOVE_NOTIFICATION),\n};\n","import React from 'react';\nimport { any, func } from 'prop-types';\nimport { Center } from 'shared/components/layout';\nimport './job-list.local.scss';\nimport { connect } from 'react-redux';\nimport { currentUserSelector } from 'session/store/state';\n\nconst JobList = ({ items, filters, children, loggedUser }) => {\n  const noneAvailable = items.size === 0;\n\n  if (noneAvailable) {\n    return <NoJobs />;\n  }\n\n  return (\n    <div className=\"list-container\">\n      <ul>\n        {items.map((item, index, list) => (\n          <li key={index} className=\"list-item\">\n            {children(item, index, filters, loggedUser, list)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nJobList.propTypes = {\n  items: any,\n  children: func\n};\n\nJobList.defaultProps = {\n  items: []\n};\n\nfunction NoJobs() {\n  return (\n    <Center>\n      <p>There are no jobs available with the selected filters</p>\n    </Center>\n  );\n}\n\nexport const ConnectedJobList = connect(\n  state => {\n    return {\n      loggedUser: currentUserSelector(state),\n    };\n  }\n)(JobList);\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { ViewTabs } from '../ViewTabs/ViewTabs';\nimport { Documentation } from '../Documentation/Documentation';\nimport { ConnectedScheduleForm } from '../../containers/ScheduleForm/ScheduleForm';\nimport { getProcess } from 'shared/api/process';\nimport { getSchedule } from 'shared/api/schedule';\n\nexport const ScheduleModal = ({\n  open,\n  actions,\n  invocation,\n  isScheduled,\n  result,\n  setResult,\n  selectedOption,\n  canSelectProcess,\n  filledValues,\n  setFilledValues\n}) => {\n  const [tab, setTab] = useState('schedule');\n  const [processDetails, setProcessDetails] = useState({});\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const newSchedule = selectedOption === 'edit-schedule';\n  const formRef = useRef();\n  useEffect(() => {\n    if (isScheduled && invocation?.schedule) {\n      getSchedule(invocation.schedule)\n        .then(data => {\n          if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n            setScheduleDetails(data.data.data.schedules[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n    if (invocation && invocation.process) {\n      getProcess(invocation.process)\n        .then(data => {\n          if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n            setProcessDetails(data.data.data.processes[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n  }, []);\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '85vw',\n          minHeight: '85vh',\n          maxWidth: '85vw',\n          maxHeight: '85vh'\n        }}\n      >\n        <ModalHeader\n          title=\"New Schedule\"\n          icon={\n            <SvgIcon>\n              <SlowMotionVideoIcon />\n            </SvgIcon>\n          }\n          formikRef={formRef}\n        />\n        <Switch value={result}>\n          <Switch.Case value=\"success\">\n            <Result type=\"success\">\n              <Result.Text>Schedule was added successfully!</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Done\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"fail\">\n            <Result type=\"fail\">\n              <Result.Text>\n                <p>An error occurred and the new schedule could not be added.</p>{' '}\n                <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                  <a\n                    role=\"presentation\"\n                    onClick={() => {\n                      setResult('');\n                    }}\n                  >\n                    Go back to form\n                  </a>\n                </p>\n              </Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Close\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"\">\n            <Paper.Header>\n              <ViewTabs active={tab} changeTab={setTab} invocation={invocation} />\n            </Paper.Header>\n            <Switch value={tab}>\n              <Switch.Case value=\"schedule\">\n                <ConnectedScheduleForm\n                  setResult={setResult}\n                  invocation={newSchedule ? scheduleDetails : invocation}\n                  filledValues={filledValues}\n                  setFilledValues={setFilledValues}\n                  formRef={formRef}\n                  selectedOption={selectedOption}\n                  canSelectProcess={canSelectProcess}\n                  isScheduled={isScheduled}\n                />\n              </Switch.Case>\n              <Switch.Case value=\"documentation\">\n                <Paper.Content>\n                  <Documentation process={processDetails} />\n                </Paper.Content>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nexport function ViewTabs({ active, changeTab, invocation }) {\n  const tabs = [{ label: 'Schedule', value: 'schedule', active: true }];\n\n  if (invocation) {\n    tabs.push({ label: 'Documentation', value: 'documentation' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React from 'react';\n\nimport { Section } from 'shared/components/layout';\n\nexport const Documentation = ({ process }) => {\n  if (!process) {\n    return <Section>Select a process in order to see its documentation</Section>;\n  }\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { fetchEntity } from 'entities/actions';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport {\n  PLATFORMS,\n  PlatformSelect,\n  PROCESS_TYPES,\n  ProcessSelect,\n  ProcessTypeSelect\n} from 'shared/components/form/editors/Custom';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { patchSchedule, postSchedule } from 'shared/api/schedule';\nimport { mapScheduledNames } from 'entities/mappers';\nimport { isEmpty, pickBy } from 'lodash';\nimport { CronValidator } from '../../../../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../../../../shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport moment from 'moment';\n\nimport './ScheduleForm.scss';\n\nclass ScheduleFormComp extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { invocation } = this.props;\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    this.state = {\n      monitor: derivedMonitor,\n      serverTime: null,\n      everyHourWarningShown: false\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n\n    const { wasSCheduleCallDone, request } = this.props;\n    if (!wasSCheduleCallDone) {\n      request('schedule');\n    }\n  }\n\n  render() {\n    const {\n      setResult,\n      request,\n      allScheduledNames,\n      invocation,\n      isScheduled,\n      filledValues,\n      setFilledValues,\n      selectedOption,\n      canSelectProcess,\n      formRef\n    } = this.props;\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    const isEditing = selectedOption === 'edit-schedule';\n\n    const availableProcess = (platformVal, typeVal, processVal) => {\n      const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n      const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n      const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n      const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n      return (platformMatches && typeMatches) ? processVal : '';\n    };\n\n    const nameValue = () => {\n      if (isScheduled && invocation?.name) {\n        const splittedName = invocation.name.split('.');\n        const name = splittedName[splittedName.length - 1];\n\n        return name;\n      }\n\n      return invocation?.name || undefined;\n    };\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          if (isScheduled && invocation?.name) {\n            const splittedName = invocation.name.split('.');\n            const name = splittedName[splittedName.length - 1];\n\n            if (name !== sch_name) {\n              errors.sch_name = 'A schedule with this name already exists';\n            }\n          } else {\n            errors.sch_name = 'A schedule with this name already exists';\n          }\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{}}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, invocation, isEditing, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <PlatformSelect\n                                name=\"platform\"\n                                label=\"Platform\"\n                                description=\"Select a platform to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(value, formik.values.type, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <ProcessTypeSelect\n                                name=\"type\"\n                                label=\"Type\"\n                                description=\"Select a type to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(formik.values.platform, value, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          <Column xs={4}>\n                            <ProcessSelect\n                              name=\"process\"\n                              label=\"Process\"\n                              value={filledValues?.process || invocation?.process}\n                              disabled={invocation !== undefined}\n                              required\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || nameValue()}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || invocation?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || invocation?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_hr\"\n                              label=\"T_hr\"\n                              value={filledValues?.t_hr || invocation?.t_hr || '*'}\n                              description={CronValidator.FORMAT_MSG.HOURS}\n                            />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_day\"\n                              label=\"T_Day\"\n                              value={filledValues?.t_day || invocation?.t_day || '*'}\n                              description={CronValidator.FORMAT_MSG.DAYS}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_mon\"\n                              label=\"T_mon\"\n                              value={filledValues?.t_mon || invocation?.t_mon || '*'}\n                              description={CronValidator.FORMAT_MSG.MONTH}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_wkd\"\n                              label=\"T_wkd\"\n                              value={filledValues?.t_wkd || invocation?.t_wkd || '*'}\n                              description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || invocation?.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nexport const ConnectedScheduleForm = connect(\n  state => {\n    return {\n      wasSCheduleCallDone: state.entities?.data?.schedule,\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(ScheduleFormComp);\n\nasync function handleSubmit(\n  monitor,\n  setResult,\n  request,\n  setFilledValues,\n  invocation,\n  isEditing,\n  values\n) {\n  const {\n    platform,\n    type,\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  if (isEditing) {\n    body.rename = sch_name;\n  } else {\n    body.name = sch_name;\n  }\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  if (isEditing) {\n    patchSchedule(invocation.name, body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  } else {\n    postSchedule(body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  }\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n","export const formatAccount = account => {\n  const prefix = `${account.protocol.toLowerCase()}://${account.user}:******@${account.address}:${\n    account.port\n  }`;\n  const { special } = account;\n\n  if (special?.database) {\n    return `${prefix}/${special.database}`;\n  }\n\n  return prefix;\n};\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default: {\n      const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n      const matches = regex.exec(deflt);\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return Number.parseInt(matches[2]); // eslint-disable-line\n          case 'str': {\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            // const json = `[${matches[2]}]`;\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          }\n\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n    }\n  }\n  return null;\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst Groups = ({ groups, onSelect, eventTypeIcons = [] }) => {\n  const renderGroupsList = () => {\n    if (Array.isArray(groups) && groups.length) {\n      return groups.map(item => {\n        return (\n          <ListItem\n            onClick={() => onSelect(item)}\n            selected={item.selected}\n            key={item.data.name}\n            button\n          >\n            <ListItemIcon>\n              <GroupIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n            </ListItemIcon>\n            <ListItemText primary={item.data.name} />\n            <ListItemSecondaryAction>\n              {item.displayIcons && eventTypeIcons.map(icon => icon)}\n              <SvgIcon size=\"small\" edge=\"end\" color=\"primary\">\n                <path d={item.selected ? mdiChevronLeft : mdiChevronRight} />\n              </SvgIcon>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Groups:</div>\n      </div>\n      <List dense disablePadding>\n        {renderGroupsList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Button } from 'shared/components/controls';\n\nimport './users.scss';\n\nconst Users = ({\n  users,\n  onSelect,\n  onSelectUserAction,\n  isClearActionAvailable,\n  isGroupSelected,\n  eventTypeIcons\n}) => {\n  const renderUsersList = () => {\n    if (Array.isArray(users) && users.length) {\n      let emptyListMessage = '';\n      if (!isGroupSelected) {\n        emptyListMessage = 'Please select a group to view its users.';\n      } else if (!users.find(item => item.display)) {\n        emptyListMessage = 'No users available in the group.';\n      }\n      if (emptyListMessage) {\n        return (\n          <div className=\"notifications-users-empty-list\">\n            <PermIdentityIcon size=\"small\" />\n            <span>{emptyListMessage}</span>\n          </div>\n        );\n      }\n      return users\n        .filter(user => user.display)\n        .map(user => {\n          return (\n            <ListItem\n              onClick={() => onSelect(user)}\n              selected={user.selected}\n              key={user.data.name}\n              button\n            >\n              <ListItemIcon>\n                <PersonIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n              </ListItemIcon>\n              <ListItemText primary={user.data.name} />\n              <ListItemSecondaryAction classes={{ root: 'notifications-users-check-wrap' }}>\n                {user.selected && eventTypeIcons.map(icon => icon)}\n                <Checkbox\n                  onChange={() => onSelect(user)}\n                  edge=\"end\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  checked={user.selected}\n                  classes={{ root: 'checkbox-custom' }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n    }\n    return null;\n  };\n\n  const currentActionLabel = isClearActionAvailable ? 'Clear' : 'Select all';\n  const shouldDisplayAction = isGroupSelected && users.find(item => item.display);\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Users:</div>\n        {shouldDisplayAction && (\n          <Button role=\"presentation\" onClick={() => onSelectUserAction(isClearActionAvailable)}>\n            {currentActionLabel}\n          </Button>\n        )}\n      </div>\n      <List dense disablePadding>\n        {renderUsersList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport classnames from 'classnames';\nimport './events.scss';\n\nconst Events = ({ jobStart, jobCompletion, abnormalEvent, onSelect, areUsersSelected }) => {\n  const classes = classnames('notification-events', { 'events-wrap-disabled': !areUsersSelected });\n  return (\n    <div className={classes}>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-title\">Event type:</div>\n        </div>\n        <span>\n          <PlayCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job start</span>\n        </span>\n        <span>\n          <CheckCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job completion</span>\n        </span>\n        <span>\n          <ErrorOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">abnormal event</span>\n        </span>\n      </div>\n      <div className=\"notification-events-col old-notice\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n      </div>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Center } from 'shared/components/layout';\n\nimport { Button } from 'shared/components/controls';\n\nimport './notification-list.scss';\nimport { withStyles } from '@material-ui/core';\n\nconst UserChip = withStyles({\n  root: {\n    background: 'rgba(55, 101, 175, 0.08)',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '& > svg': {\n      marginLeft: '8px'\n    }\n  }\n})(Chip);\n\nconst NotificationList = ({ users, eventTypeIcons, toggleApplyButton, disabled }) => {\n  const filteredUsers = users.filter(user => user.selected);\n  const renderUserList = () => {\n    if (!filteredUsers.length) {\n      return <Center>No notifications applied</Center>;\n    }\n    return filteredUsers.map(user => {\n      return (\n        <UserChip\n          classes={{ root: 'notification-list-item' }}\n          label={\n            <>\n              <span>{user.data.name}</span>\n              {eventTypeIcons}\n            </>\n          }\n          color=\"default\"\n          icon={<PersonIcon size=\"small\" />}\n        />\n      );\n    });\n  };\n\n  let buttonLabel = 'Add';\n  let buttonIcon = <NotificationsNoneIcon />;\n  if (filteredUsers.length) {\n    buttonLabel = 'Edit';\n    buttonIcon = <EditIcon />;\n  }\n\n  return (\n    <div className=\"notification-list-wrapper\">\n      <div>{renderUserList()}</div>\n      <div className=\"notification-list-edit-section\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={toggleApplyButton}\n          startIcon={buttonIcon}\n          endIcon={<ArrowDropDownIcon />}\n          classes={{ root: 'notifications-add-edit' }}\n          disabled={disabled}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport GroupIcon from '@material-ui/icons/Group';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './Entity.scss';\n\n/* eslint-disable */\nconst Entity = ({ entity, selectEntity, columns, entityIcons }) => {\n  const cls = classnames('entity', {\n    '--isSelected': entity.isSelected,\n    'account-entity': entity.entity === 'account'\n  });\n  const user = entity.user_owner;\n  const aliasStr = entity.alias;\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={cls}\n      onClick={event => {\n        selectEntity(entity, columns.level);\n\n        const target = event.currentTarget;\n        const box = target.getBoundingClientRect();\n        const parent = target.parentNode.parentNode;\n\n        setTimeout(function() {\n          parent.scrollTo({ left: box.right, behavior: 'smooth' });\n        }, 200);\n      }}\n    >\n      <LightTooltip placement=\"bottom\" title={entity.entity || ''}>\n        <div className=\"entity-icon-wrap\">{entityIcons[entity.entity]}</div>\n      </LightTooltip>\n      <div className=\"entity-details\">\n        <div className=\"entity-name\">\n          {!!aliasStr && (\n            <div title={`Alias of ${aliasStr}`}>\n              <FilterNoneIcon />\n            </div>\n          )}\n          <LightTooltip placement=\"bottom\" title={entity.name}>\n            <span>{entity.name}</span>\n          </LightTooltip>\n        </div>\n        <div className=\"entity-user\">\n          <GroupIcon />\n          <span>{user}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/* eslint-enable */\n\nexport default Entity;\n","import React from 'react';\nimport Switch from '../components/Switch';\nimport ActionsNamespace from '../components/ActionsNamespace';\nimport ActionsConstant from '../components/ActionsConstant';\nimport ActionsProcess from '../components/ActionsProcess';\nimport ActionsForm from '../components/ActionsForm';\nimport ActionsRoot from '../components/ActionsRoot';\nimport ActionsPrototype from '../components/ActionsPrototype';\nimport ActionsSchedule from '../components/ActionsSchedule';\nimport ActionsCommon from '../components/ActionsCommon';\nimport GroupIcon from '@material-ui/icons/Group';\nimport './SelectedEntity.scss';\n\nconst SelectedEntity = ({ selectedEntity, entityIcons }) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  return (\n    <div className=\"selected-entity\">\n      <div className=\"selected-entity-title\">\n        <div className=\"selected-entity-title-icon\">{entityIcons[selectedEntity.entity]}</div>\n        <div className=\"selected-entity-title-details\">\n          {selectedEntity.name}\n          <div className=\"selected-entity-title-user\">\n            <GroupIcon />\n            <span>{selectedEntity.user_owner}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"entity-detail-wrap\">\n        <div className=\"entity-description-wrap\">{selectedEntity.description}</div>\n\n        <Switch value={selectedEntity.entity}>\n          <Switch.Case value=\"root\">\n            <ActionsRoot />\n          </Switch.Case>\n\n          <Switch.Case value=\"namespace\">\n            <ActionsNamespace entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"constant\">\n            <ActionsConstant entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"form\">\n            <ActionsForm entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"process\">\n            <ActionsProcess entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"prototype\">\n            <ActionsPrototype entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"schedule\">\n            <ActionsSchedule entity={selectedEntity} />\n          </Switch.Case>\n        </Switch>\n        <ActionsCommon entity={selectedEntity} />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedEntity;\n","import React from 'react';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nimport { ConnectedEditNamespace } from './namespace-actions/EditNamespace';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\nimport { ConnectedDeleteNamespace } from './namespace-actions/DeleteNamespace';\n\nconst ActionsNamespace = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const hasWrite = hasWritePrivileges(entity);\n\n  return (\n    <>\n      <ConnectedNewNamespace namespace={entity} />\n      {hasWrite && <ConnectedEditNamespace namespace={entity} />}\n      {deleteRights(entity, hasWrite) && (\n        <ConnectedDeleteNamespace entity={entity} disabled={disableActions} />\n      )}\n    </>\n  );\n};\n\nfunction deleteRights(entity, hasWrite) {\n  return hasWrite && entity.owner !== 'postgres';\n}\n\nexport default ActionsNamespace;\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { getNamespace, patchNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nfunction parseName(namespace) {\n  const split = namespace.name.split('.');\n  const tail = split.length - 1;\n  const parsed = {\n    name: split[tail],\n    fq: namespace.name\n  };\n\n  if (split.length > 1) {\n    parsed.parent = split.slice(0, tail).join('.');\n  } else {\n    parsed.parent = '';\n  }\n\n  return parsed;\n}\n\nexport const ConnectedEditNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    request: fetchEntity\n  }\n)(EditNamespace);\n\nfunction EditNamespace({ namespace, request, nestedNames }) {\n  const canUpdateName = nestedNames.length === 0;\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const split_name = parseName(namespace);\n\n  const getInitialValues = () => {\n    const values = {};\n\n    values.name = split_name.name || '';\n    values.namespace = split_name.parent;\n    values.description = description;\n\n    return values;\n  };\n\n  const getNamespaceDetails = name => {\n    getNamespace(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.namespaces &&\n          data.data.data.namespaces[0] &&\n          data.data.data.namespaces[0].description\n        ) {\n          setDescription(data.data.data.namespaces[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get namespace] error getting namespace details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getNamespaceDetails(namespace.name);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values, split_name);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              {canUpdateName && (\n                                <Text name=\"name\" label=\"Name\" value={values.name} required />\n                              )}\n                              {!canUpdateName && (\n                                <Text\n                                  name=\"name\"\n                                  label=\"Name\"\n                                  value={values.name}\n                                  required\n                                  disabled\n                                  description=\"To update a namespace name, namespace must be empty!\"\n                                />\n                              )}\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                {canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                  />\n                                )}\n                                {!canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                    disabled\n                                    description=\"To update a namespace parent name, namespace must be empty!\"\n                                  />\n                                )}\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values, split_name) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    description: values.description\n  };\n\n  /*\n    If the old entity fully-qualified name does not match with the form value,\n    then we need to add a rename key with the new name.\n   */\n  if (name !== split_name.fq) {\n    body.rename = name;\n  }\n\n  patchNamespace(split_name.fq, body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    refresh: fetchEntity\n  }\n)(DeleteNamespace);\n\nfunction DeleteNamespace({ disabled, entity, refresh, nestedNames }) {\n  const canDelete = nestedNames.length === 0;\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={canDelete}>\n            <Switch.Case value>\n              <Switch value={result}>\n                <Switch.Case value=\"attempt\">\n                  <Paper.Content scrollable={false}>\n                    <Result type=\"fail\">\n                      <BodyText>\n                        Are you sure you want to remove this {type} ? This could affect the way the\n                        user will be able to interact with the app.\n                      </BodyText>\n                    </Result>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          terminator();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"success\">\n                  <Result type=\"success\">\n                    <BodyText>{name} successfully deleted!</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                          refresh(type);\n                        }}\n                      >\n                        Done\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"fail\">\n                  <Result type=\"fail\">\n                    <BodyText>You do not have permissions to delete this entity.</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                        }}\n                      >\n                        Close\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n            <Switch.Case value={false}>\n              <Result type=\"fail\">\n                <BodyText>To delete a namespace it must be empty!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { patchConstant } from 'shared/api/constant';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsConstant = ({ entity }) => {\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConstant constant={entity} />;\n};\n\nexport default ActionsConstant;\n\nexport const ConnectedEditConstant = connect(null, {\n  request: fetchEntity\n})(EditConstant);\n\nfunction EditConstant({ constant, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = constant?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Constant\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Constant was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the constant could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: constant.name, value: constant.value }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" disabled value={constant.name} />\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"value\"\n                                label=\"Value\"\n                                value={constant.value}\n                                description={constant.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const body = {\n    value: values.value\n  };\n\n  patchConstant(values.name, body)\n    .then(() => {\n      setResult('success');\n      request('constant');\n    })\n    .catch(error => {\n      console.log('[edit constant] patch constant error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function patchConstant(name, body) {\n  return RestClient.patch(`/constant/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { ErrorModal, Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { postSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\nimport { isEmpty, pickBy } from 'lodash';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport { EditProcessModal } from './process-actions/EditProcessModal';\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../shared/lib/rest';\nimport moment from 'moment';\nimport { CONSTANTS } from 'config';\n\nimport './ActionsSchedule.scss';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nconst ActionsProcess = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new job.';\n\n  return (\n    <>\n      {entity?.is_executable === false && (\n        <Button\n          classes={{ root: 'entity-button' }}\n          onClick={() => setOpen(true)}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      {entity?.is_executable && (\n        <Button\n          component={LinkBehavior}\n          classes={{ root: 'entity-button' }}\n          to={`/jobs/job?process=${entity.name}&redirected=true`}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      <ConnectedNewSchedule process={entity} isDisabled={isDisabled} />\n      {hasWritePrivileges(entity) && <EditProcessModal process={entity} />}\n      <ErrorModal open={open} actions={modalActions} message={message} />\n    </>\n  );\n};\n\nexport default ActionsProcess;\n\nexport const ConnectedNewSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(NewSchedule);\n\nfunction NewSchedule({ process, isDisabled, request, allScheduledNames }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const [openErrorModal, setOpenErrorModal] = useState(false);\n  const errorModalActions = {\n    open: () => {\n      setOpenErrorModal(true);\n    },\n    close: () => {\n      setOpenErrorModal(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new schedule.';\n\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  // processDetails might be used at a later date\n  const [processDetails, setProcessDetails] = useState({}); // eslint-disable-line\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n\n  const onClickHandler = () => {\n    if (process.is_executable) {\n      setOpen(true);\n    } else {\n      setOpenErrorModal(true);\n    }\n\n    getProcess(process.name)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        New Schedule\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"New Schedule\"\n            icon={\n              <SvgIcon>\n                <SlowMotionVideoIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={process}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={process} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n      <ErrorModal open={openErrorModal} actions={errorModalActions} message={message} />\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nclass ScheduleForm extends React.PureComponent {\n  derivedMonitor = {\n    enabled: false,\n    events: 0,\n    users: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monitor: this.derivedMonitor,\n      serverTime: null\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n  }\n\n  render() {\n    const {\n      process,\n      setResult,\n      allScheduledNames,\n      request,\n      filledValues,\n      setFilledValues,\n      formRef\n    } = this.props;\n\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          errors.sch_name = 'A schedule with this name already exists';\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{ process: process.name }}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"process\"\n                            label=\"Process\"\n                            description={process.description}\n                            value={process.name}\n                            disabled\n                          />\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || undefined}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_hr\" label=\"T_hr\" value={filledValues?.t_hr || '*'} description={CronValidator.FORMAT_MSG.HOURS} />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_day\" label=\"T_Day\" value={filledValues?.t_day || '*'} description={CronValidator.FORMAT_MSG.DAYS} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_mon\" label=\"T_mon\" value={filledValues?.t_mon || '*'} description={CronValidator.FORMAT_MSG.MONTH} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_wkd\" label=\"T_wkd\" value={filledValues?.t_wkd || '*'} description={CronValidator.FORMAT_MSG.DAY_OF_WEEK} />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || process.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={this.derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nasync function handleSubmit(monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { ProcessEditor } from './ProcessEditor';\n\nimport { fetchEntity } from '../../actions';\n\nexport const EditProcessModal = ({ process }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('editing');\n  const formRef = useRef();\n  const modalActions = {\n    open: useCallback(() => {\n      setResult('editing');\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n\n      if (result === 'success') {\n        dispatch(fetchEntity('process'));\n      }\n    }, [result])\n  };\n\n  return (\n    <>\n      <Button classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Edit Process\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Process\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            desc={process.name}\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"editing\">\n              <ProcessEditor process={process} setResult={setResult} formRef={formRef} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Process was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Done</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the process could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Close</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { QualifiedName } from 'shared/components/form/editors/Custom';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { patchProcess } from 'shared/api/process';\n\nimport './ProcessEditor.local.scss';\n\nexport function ProcessEditor({ process, setResult, formRef }) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        saveProcessEdits(values, process, setResult);\n      }}\n      innerRef={formRef}\n    >\n      {() => {\n        return (\n          <>\n            <Paper.Content>\n              <Form>\n                <Section>\n                  <Section.Header>\n                    <Section.Title>Details</Section.Title>\n                  </Section.Header>\n                  <Section.Content>\n                    <Row>\n                      <Column>\n                        <QualifiedName\n                          name=\"process_name\"\n                          label=\"Name\"\n                          value={process.name}\n                          required\n                        />\n                      </Column>\n                    </Row>\n                  </Section.Content>\n                </Section>\n                <Section>\n                  <Section.Content>\n                    {process.steps.map((step, index) => {\n                      return <Step step={step} step_index={index} />;\n                    })}\n                  </Section.Content>\n                </Section>\n              </Form>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <SubmitButton variant=\"contained\">Save</SubmitButton>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nfunction Step({ step, step_index }) {\n  const expressions = parseEvaluatableExpressions(step, step_index);\n  const noEvaluatableExpressions = !expressions.length;\n\n  if (noEvaluatableExpressions) {\n    return null;\n  }\n\n  return (\n    <div className=\"step\">\n      <div className=\"title\">Step: {step.label}</div>\n      <div className=\"description\">{step.description}</div>\n      <div className=\"expressions\">\n        <div className=\"list\">\n          {expressions.map((exp, index) => (\n            <StepExpression key={index} {...exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction StepExpression({ expression, exp_index, step, step_index }) {\n  const name = `step-${step_index}-expression-${exp_index}`;\n  return (\n    <Row>\n      <Text\n        multiline\n        value={expression.evaluate}\n        label={`Expression ${expression.assign || exp_index} of ${step.label}`}\n        name={name}\n        required\n      />\n    </Row>\n  );\n}\n\nfunction parseEvaluatableExpressions(step, step_index) {\n  const { expressions } = step;\n\n  if (!Array.isArray(expressions) || expressions.length === 0) {\n    return [];\n  }\n\n  return expressions.reduce((acc, exp, index) => {\n    if (exp.evaluate) {\n      acc.push({\n        expression: exp,\n        exp_index: index,\n        step,\n        step_index\n      });\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction saveProcessEdits(values, process, setResult) {\n  const { process_name, ...evaluations } = values;\n  const toSend = {};\n\n  const steps = _.cloneDeep(process.steps);\n\n  /**\n   * extract and remap field values.\n   */\n  const extracted = extractFieldInfo(evaluations);\n\n  extracted.forEach(({ step, expression, value }) => {\n    const path = `[${step}].expressions[${expression}].evaluate`;\n\n    _.set(steps, path, value);\n  });\n\n  /** Prepare patch request body */\n  toSend.steps = steps;\n\n  if (process.name !== process_name) {\n    toSend.rename = values.process_name;\n  }\n\n  patchProcess(process.name, toSend)\n    .then(() => {\n      setResult('success');\n    })\n    .catch(() => {\n      setResult('fail');\n    });\n}\n\nfunction extractFieldInfo(all) {\n  const key_struct = /^step-(\\d+)-expression-(\\d+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      step: matched[1],\n      expression: matched[2],\n      value\n    };\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\nimport { postForm } from 'shared/api/form';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButtonNoDirty } from 'shared/components/form/SubmitButtonNoDirty';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { Ensure } from 'core/components/Ensure';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction findFormPrototype(form, prototypes) {\n  const name = form.prototype;\n  const found = prototypes.find(item => item.name === name);\n\n  return found;\n}\n\nfunction findFormEntry(entity, forms) {\n  if (entity.alias) {\n    return forms.find(entry => entry.name === entity.alias);\n  }\n\n  return entity;\n}\n\nconst ActionsForm = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n  return (\n    <>\n      {canWrite && (\n        <Ensure type=\"prototype\" inlineLoader>\n          {({ data: prototypes }) => (\n            <Ensure type=\"form\" inlineLoader>\n              {({ data: forms }) => (\n                <ConnectedFormModal\n                  disabled={disableActions}\n                  form={findFormEntry(entity, forms)}\n                  prototype={findFormPrototype(entity, prototypes)}\n                />\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      )}\n      <ConnectedCopyForm form={entity} />\n    </>\n  );\n};\n\nexport default ActionsForm;\n\nexport const ConnectedCopyForm = connect(null, {\n  request: fetchEntity\n})(CopyForm);\n\nfunction CopyForm({ form, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = form?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Copy\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '300px'\n          }}\n        >\n          <ModalHeader\n            title=\"Copy Form\"\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was copied successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be copied.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: `${form.name}_copy` }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, form.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              Please choose a new name for the copy of form &apos;{form.name}&apos;.\n                            </Section.Header>\n                            <Row>\n                              <Text\n                                name=\"name\"\n                                label=\"Name\"\n                                value={`${form.name}_copy`}\n                                description={form.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButtonNoDirty variant=\"contained\">Save</SubmitButtonNoDirty>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, formName, values) {\n  const body = {\n    name: values.name\n  };\n\n  postForm(formName, body)\n    .then(() => {\n      setResult('success');\n      request('form');\n    })\n    .catch(error => {\n      console.log('[copy form] put form error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useMemo, useContext } from 'react';\n\nimport { Section, Row, Column } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Ensure } from 'core/components/Ensure';\n\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { PackedContext } from './FormEditor';\n\nexport const FormParameters = ({ packed, prototype }) => {\n  return (\n    <Section>\n      <Section.Header />\n      <Section.Content>\n        <Ensure type=\"form\">\n          {({ data: forms }) => (\n            <Ensure type=\"type\">\n              {({ data: datatypes }) => (\n                <Ensure type=\"prototype\">\n                  {({ data: prototypes }) => (\n                    <Ensure type=\"process\">\n                      <FieldsAndGroupsEditor\n                        prototype={prototype}\n                        groups={packed.groups}\n                        prototypes={prototypes}\n                        datatypes={datatypes}\n                        forms={forms}\n                      />\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nconst DataContext = React.createContext({ datatypes: [], forms: [], prototypes: [] });\n\nfunction FieldsAndGroupsEditor({ groups, datatypes, prototypes, forms }) {\n  const entities = useMemo(\n    () => ({\n      datatypes,\n      prototypes,\n      forms\n    }),\n    [datatypes, prototypes, forms]\n  );\n\n  return (\n    <>\n      <DataContext.Provider value={entities}>\n        {groups.map((group, index) => (\n          <FieldGroup key={index} pointer={index} group={group} />\n        ))}\n      </DataContext.Provider>\n    </>\n  );\n}\n\nfunction FieldGroup({ group, pointer }) {\n  return (\n    <>\n      {group.instances.map((instance, index) => (\n        <GroupInstance\n          key={`${pointer}|${index}`}\n          group={group}\n          instance={instance}\n          pointers={{ group: pointer, instance: index }}\n          count={group.instances.length}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction GroupInstance({ group, instance, pointers, count }) {\n  let title = group.name ? `Group ${group.name}` : null;\n  if (group.iteration_limit > 1) {\n    title = group.name\n      ? `Group ${group.name} (${pointers.instance + 1} of ${count})`\n      : `Group (Unnamed) (${pointers.instance + 1} of ${count})`;\n  }\n\n  const canAdd =\n    group.iteration_limit > 1 && count - 1 === pointers.instance && count < group.iteration_limit;\n\n  const { dispatch } = useContext(PackedContext);\n\n  return (\n    <div>\n      <Section.Title>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}\n        >\n          {title}\n          {count !== 1 && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_GROUP_INSTANCE',\n                  pointers\n                });\n              }}\n            >\n              Remove Group\n            </Button>\n          )}\n        </div>\n      </Section.Title>\n      <div>\n        {instance.fields.map((field, index) => (\n          <Field\n            key={`${pointers.group}|${pointers.instance}|${field.name}`}\n            group={group}\n            instance={instance}\n            pointers={{ ...pointers, field: index }}\n            field={field}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {canAdd && (\n          <Button\n            onClick={() => {\n              const fields = instance.fields.map(field => {\n                return {\n                  ...field,\n                  values: [{ instance: 0, value: null }]\n                };\n              });\n              const newInstance = {\n                ...instance,\n                instance: instance.instance + 1,\n                fields\n              };\n\n              dispatch({\n                type: 'ADD_GROUP_INSTANCE',\n                pointers,\n                instance: newInstance\n              });\n            }}\n          >\n            Add Group\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Field({ field, pointers }) {\n  return (\n    <div>\n      {field.values.map((value, index) => (\n        <Value\n          key={`${pointers.group}|${pointers.instance}|${field.name}|${index}`}\n          field={field}\n          value={value.value}\n          pointers={{ ...pointers, value: index }}\n          count={field.values.length}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Value({ field, value, pointers, count }) {\n  const packet = useContext(DataContext);\n\n  const canRemove = field.is_repeatable && count !== 1;\n  const canAdd = field.is_repeatable && pointers.value + 1 === count;\n\n  const { dispatch } = useContext(PackedContext);\n\n  const label = field.is_repeatable\n    ? `${field.name} (${pointers.value + 1} of ${count})`\n    : field.name;\n\n  function uniquedName(name, idx) {\n    const string = `group-${idx.group}-instance-${idx.instance}-field-${idx.field}-value-${idx.value}---${field.name}`;\n\n    return string;\n  }\n\n  const parameter = normalize(\n    {\n      name: uniquedName(field.name, pointers),\n      provided_field_name: field.name,\n      is_required: field.is_required,\n      value,\n      data_type: field.data_type,\n      description: field.description,\n      deflt: field.deflt,\n      meta: field.meta\n    },\n    packet.datatypes,\n    packet.prototypes,\n    packet.forms\n  );\n\n  // for some reason, is_required is set as false for a supported parameter (eg: mas0300.sys.invocation.server_list prototype)\n  // FIX ME: need to investigate further, for now, will make the value the same as field\n  parameter.is_required = field.is_required;\n  // console.log(parameter, field);\n\n  const is_supported = parameter.is_supported && parameter.editor.type !== 'hidden';\n\n  if (!is_supported) {\n    return (\n      <Row key={pointers.value}>\n        <p>{field.name} (Unsuported)</p>\n        <Parameter\n          normalized={{ ...parameter, is_required: false, editor: { type: 'text' } }}\n          disabled\n          label={label}\n        />\n      </Row>\n    );\n  }\n\n  return (\n    <Row key={pointers.value}>\n      <Column key={field.name}>\n        <Parameter normalized={parameter} label={label} />\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          {canAdd && canRemove && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_FIELD_VALUE',\n                  pointers\n                });\n              }}\n            >\n              Remove\n            </Button>\n          )}\n          {canAdd && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                onClick={() => {\n                  dispatch({\n                    type: 'ADD_FIELD_VALUE',\n                    pointers\n                  });\n                }}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n        </div>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\n\nconst ActionsRoot = () => {\n  return (\n    <>\n      <ConnectedNewNamespace />\n    </>\n  );\n};\n\nexport default ActionsRoot;\n","import React from 'react';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nconst ActionsPrototype = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <ConnectedFormModal isNew prototype={entity} disabled={disableActions} />\n    </>\n  );\n};\n\nexport default ActionsPrototype;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport _, { isEmpty, pickBy } from 'lodash';\n\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { getSchedule, patchSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\n\nimport './ActionsSchedule.scss';\n\nconst ActionsSchedule = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConnectedEditSchedule schedule={entity} isDisabled={isDisabled} />\n    </>\n  );\n};\n\nexport default ActionsSchedule;\n\nexport const ConnectedEditSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(EditSchedule);\n\nfunction EditSchedule({ schedule, isDisabled, allScheduledNames, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const [processDetails, setProcessDetails] = useState({});\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n  const [everyHourWarningShown] = useState({});\n\n  useEffect(() => {\n    if (!_.isEmpty(scheduleDetails) && !_.isEmpty(processDetails)) {\n      setOpen(true);\n    }\n  }, [scheduleDetails, processDetails]);\n\n  const onClickHandler = () => {\n    /** TODO cover the case when one (or both) of the below calls fail or no data is returned from them */\n\n    getSchedule(schedule.name)\n      .then(data => {\n        if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n          setScheduleDetails(data.data.data.schedules[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n\n    getProcess(schedule.process)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Schedule\"\n            icon={\n              <SvgIcon>\n                <EventNoteIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={processDetails}\n                    schedule={scheduleDetails}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                    everyHourWarningShown={everyHourWarningShown}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={processDetails} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({\n  schedule,\n  setResult,\n  allScheduledNames,\n  request,\n  filledValues,\n  setFilledValues,\n  formRef,\n  everyHourWarningShown\n}) => {\n  const derivedMonitor = {\n    enabled: !!schedule?.parameters?.events,\n    events: schedule?.parameters?.events || 0,\n    users: schedule?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const splittedName = schedule.name.split('.');\n  const name = splittedName[splittedName.length - 1];\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name) {\n      if (sch_name.includes('.')) {\n        errors.sch_name = 'Name cannot include \".\"';\n      } else if (sch_name.includes(' ')) {\n        errors.sch_name = 'Name cannot include spaces';\n      } else if (allScheduledNames.includes(sch_name) && name !== sch_name) {\n        errors.sch_name = 'A schedule with this name already exists';\n      }\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n      errors.t_hr = 'At least one value should be populated';\n      errors.t_day = 'At least one value should be populated';\n      errors.t_mon = 'At least one value should be populated';\n      errors.t_wkd = 'At least one value should be populated';\n      return errors;\n    }\n\n    if (!CronValidator.isValidMinutes(t_min)) {\n      errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n    }\n\n    if (!CronValidator.isValidHours(t_hr)) {\n      errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n    }\n\n    if (!CronValidator.isValidDays(t_day)) {\n      errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n    }\n\n    if (!CronValidator.isValidMonth(t_mon)) {\n      errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n    }\n\n    if (!CronValidator.isValidWeekDay(t_wkd)) {\n      errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={values => {\n          handleSubmit(schedule, monitor, setResult, request, setFilledValues, values);\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={schedule.description}\n                          value={schedule.process}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"sch_name\"\n                          label=\"Name\"\n                          value={filledValues?.rename || name}\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={filledValues?.description || schedule.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_min\"\n                            label=\"T_min\"\n                            value={filledValues?.t_min || schedule.t_min}\n                            description={CronValidator.FORMAT_MSG.MINUTES}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_hr\"\n                            label=\"T_hr\"\n                            value={filledValues?.t_hr || schedule.t_hr}\n                            description={CronValidator.FORMAT_MSG.HOURS}\n                          />\n                          {everyHourWarningShown && (\n                            <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                          )}\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_day\"\n                            label=\"T_Day\"\n                            value={filledValues?.t_day || schedule.t_day}\n                            description={CronValidator.FORMAT_MSG.DAYS}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_mon\"\n                            label=\"T_mon\"\n                            value={filledValues?.t_mon || schedule.t_mon}\n                            description={CronValidator.FORMAT_MSG.MONTH}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_wkd\"\n                            label=\"T_wkd\"\n                            value={filledValues?.t_wkd || schedule.t_wkd}\n                            description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <ProcessParameters\n                    recieved={filledValues?.parameters || schedule.parameters}\n                    editable\n                  />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(schedule, monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    rename: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  patchSchedule(schedule.name, body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[edit schedule] edit schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getAlias, patchAlias, postAlias } from 'shared/api/alias';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { ConnectedDeleteEntity } from './common-actions/DeleteEntity';\nimport { PrivilegesModal } from './common-actions/privileges/PrivilegesModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction isEntityDeletable(entity) {\n  return (\n    entity.owner !== 'postgres' &&\n    (entity.entity === 'form' ||\n      entity.entity === 'process' ||\n      entity.entity === 'schedule' ||\n      entity.entity === 'account')\n  );\n}\n\nconst ActionsCommon = ({ entity }) => {\n  const displayActions = entity.entity !== 'root';\n  if (displayActions) {\n    const displayDelete = isEntityDeletable(entity);\n    const isAlias = entity.alias;\n    const disableActions = entity?.meta?.appearance === 'Greyed';\n    const canWrite = hasWritePrivileges(entity);\n\n    return (\n      <>\n        {canWrite && (\n          <PrivilegesModal entity={entity} isAlias={isAlias} disabled={disableActions} />\n        )}\n        {!isAlias && <ConnectedNewAlias entity={entity} />}\n        {isAlias && canWrite && <ConnectedEditAlias entity={entity} />}\n        {canWrite && displayDelete && (\n          <ConnectedDeleteEntity entity={entity} disabled={disableActions} />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nexport default ActionsCommon;\n\n//* These should be moved to the common-actions folder */\n\nexport const ConnectedNewAlias = connect(null, {\n  request: fetchEntity\n})(NewAlias);\n\nfunction NewAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: '',\n                  original: entity ? entity.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const alias = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name: values.original,\n    alias,\n    description: values.description\n  };\n\n  postAlias(body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedEditAlias = connect(null, {\n  request: fetchEntity\n})(EditAlias);\n\nfunction EditAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = entity.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.original = entity ? entity.alias : '';\n    values.description = description;\n\n    return values;\n  };\n\n  const getAliasDetails = name => {\n    getAlias(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.aliases &&\n          data.data.data.aliases[0] &&\n          data.data.data.aliases[0].description\n        ) {\n          setDescription(data.data.data.aliases[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get alias] error getting alias details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getAliasDetails(entity.name);\n        }}\n      >\n        Edit Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleEditSubmit(setResult, request, entity.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleEditSubmit(setResult, request, originalName, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    rename: name,\n    description: values.description\n  };\n\n  patchAlias(originalName, body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity, clearSelectedEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteEntity = connect(null, {\n  clearSelected: clearSelectedEntity,\n  refresh: fetchEntity\n})(DeleteEntity);\n\nfunction DeleteEntity({ disabled, entity, refresh, clearSelected }) {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove this {type} ? This could affect the way the user\n                    will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <BodyText>{name} successfully deleted!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                      clearSelected();\n                      refresh(type);\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <BodyText>You do not have permissions to delete this entity.</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { PrivilegesEditor } from './PrivilegesEditor';\n\nexport const PrivilegesModal = ({ disabled, entity, isAlias }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      // refresh(entity.type);\n      setOpen(false);\n    }, [])\n  };\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Privileges\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vw',\n            minHeight: '648px',\n            maxHeight: '648px'\n          }}\n        >\n          <ModalHeader\n            title=\"Privileges\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <PrivilegesEditor entity={entity} isAlias={isAlias} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\n\nimport { Paper, Center, NavigationTab } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Result, ModalContext } from 'shared/components/overlays';\nimport { Button, Checkbox as LabeledCheckbox } from 'shared/components/controls';\n\nimport { getPrivileges, setPrivileges } from 'shared/api/privileges';\n\nimport './PrivilegesEditor.local.scss';\nimport { mdiAccount } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nexport const PrivilegesEditor = ({ entity }) => {\n  const hasAlias = !!entity.alias;\n  const {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    updatePrivilege\n  } = usePrivileges(entity, hasAlias);\n  const [tab, switchTab] = useState('users');\n  const { actions } = useContext(ModalContext);\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader>Loading privileges for entity</Loader>\n      </Center>\n    );\n  }\n\n  if (!data) {\n    return (\n      <Center>\n        <Result type=\"fail\">\n          <Result.Text compact>Could not load privileges list for {entity.name}</Result.Text>\n        </Result>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab\n          active={tab}\n          tabs={[\n            { label: 'Users', value: 'users' },\n            { label: 'Groups', value: 'groups' }\n          ]}\n          onClick={switchTab}\n        />\n      </Paper.Header>\n      <PrivilegesList\n        privileges={data.privileges.filter(p => {\n          if (p.role === 'mas') {\n            return false;\n          }\n          if (p.role === 'admin') {\n            return false;\n          }\n          if (tab === 'users') {\n            return !p.is_group;\n          }\n\n          return p.is_group;\n        })}\n        updater={privilege => {\n          updatePrivilege(privilege);\n        }}\n        updating={updating}\n        entityType={entity.entity}\n        entityName={hasAlias && editAliasParent ? entity.alias : entity.name}\n        isAlias={hasAlias && !editAliasParent}\n      />\n      <Paper.Footer>\n        {!!entity.alias && (\n          <Paper.Footer.Left>\n            <LabeledCheckbox\n              color=\"primary\"\n              icon={<CheckBoxOutlineBlankIcon />}\n              checkedIcon={<CheckBoxIcon />}\n              checked={editAliasParent}\n              onChange={() => {\n                setEditAliasParent(!editAliasParent);\n              }}\n              label=\"Show parent privileges\"\n            />\n          </Paper.Footer.Left>\n        )}\n        <Paper.Footer.Right>\n          <Button color=\"primary\" variant=\"contained\" onClick={actions.close}>\n            Done\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nfunction PrivilegesList({ privileges, updating, updater, entityType, entityName, isAlias }) {\n  const types = privilegeTypes(entityType, isAlias);\n\n  function renderType(type) {\n    return (\n      <div className=\"column role\" key={type}>\n        {type}\n      </div>\n    );\n  }\n\n  function mapByEntity(user_or_group) {\n    return (\n      <div className=\"item\" key={`alias-${isAlias}-role-${user_or_group.role}`}>\n        <div className=\"column role\">\n          <SvgIcon color=\"primary\">\n            <path d={mdiAccount} />\n          </SvgIcon>\n          {user_or_group.role}\n        </div>\n        <div className=\"types\">\n          {types.map(type => {\n            const granted = user_or_group.effective.includes(type);\n            return (\n              <div\n                className=\"column type \"\n                key={`c-alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n              >\n                <Checkbox\n                  key={`alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n                  classes={{ root: 'privilege-checkbox' }}\n                  checked={granted}\n                  disabled={updating}\n                  onChange={() => {\n                    updater({\n                      privilege: type,\n                      enitity_name: entityName,\n                      alias: isAlias,\n                      role: user_or_group.role,\n                      role_type: user_or_group.is_group ? 'group' : 'user',\n                      granted\n                    });\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"privileges\">\n      <div className=\"header\">\n        {renderType('Name')}\n        <div className=\"types\">{types.map(renderType)}</div>\n      </div>\n      <div className=\"list\">\n        {privileges\n          .sort((a, b) => a?.role?.toLowerCase()?.localeCompare(b?.role?.toLowerCase()))\n          .map(mapByEntity)}\n      </div>\n    </div>\n  );\n}\n\nfunction privilegeTypes(entityType, alias = false) {\n  const type = entityType.toLowerCase();\n  const privileges = [];\n  if (!alias) {\n    if (type === 'namespace') {\n      privileges.push('affiliate');\n    } else if (['account', 'constant', 'form', 'process'].includes(type)) {\n      privileges.push('execute');\n    }\n  }\n  privileges.push('read', 'write');\n  return privileges;\n}\n\nfunction usePrivileges(entity, hasAlias) {\n  const [editAliasParent, setEditAliasParent] = useState(!hasAlias);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getPrivileges(\n      hasAlias && editAliasParent ? entity.alias : entity.name,\n      hasAlias && !editAliasParent\n    )\n      .then(resp => {\n        setData(resp?.data?.data?.entities?.[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setData(null);\n        setLoading(false);\n      });\n  }, [editAliasParent]);\n\n  const updatePrivilege = useCallback(\n    privilege => {\n      setUpdating(true);\n      setPrivileges(privilege)\n        .then(resp => {\n          setData(resp?.data?.data?.entities?.[0]);\n          setUpdating(false);\n        })\n        .catch(() => {\n          setUpdating(false);\n        });\n    },\n    [entity, editAliasParent]\n  );\n\n  return {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    setUpdating,\n    setData,\n    updatePrivilege\n  };\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { arrayOf, node, string, shape } from 'prop-types';\n\nimport './HeaderPageSwitch.local.scss';\n\nexport const HeaderPageSwitch = ({ routes }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header-page-switch\" data-qa=\"header-page-switch\">\n      {routes.map(({ to, label }) => (\n        <div\n          key={to}\n          className={classnames('header-page-switch-link', {\n            'active-link': location.pathname.includes(to)\n          })}\n        >\n          <Link key={to} to={to} data-qa={`header-page-switch-link-to-${to}`}>\n            {label}\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nHeaderPageSwitch.propTypes = {\n  routes: arrayOf(\n    shape({\n      to: string,\n      label: node\n    })\n  )\n};\n\nHeaderPageSwitch.defaultProps = {\n  routes: []\n};\n","import React, { useEffect } from 'react';\nimport { func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadUserThunk } from '../../store/thunks';\n\nimport { ConnectedUserView } from '../pages/UserView/UserView';\n\nexport const UserLoader = ({ loadUser, loading }) => {\n  const { userName } = useParams();\n  useEffect(() => {\n    if (userName) {\n      loadUser(userName);\n    }\n  }, [userName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading User <b>{userName}</b>\n        </Loader>\n      ) : (\n        <ConnectedUserView />\n      )}\n    </>\n  );\n};\n\nUserLoader.propTypes = {\n  loadUser: func,\n  loading: bool\n};\n\nexport const ConnectedUserLoader = connect(\n  state => ({\n    loading: state.usersManager.flags.user.loading\n  }),\n  dispatch => ({ loadUser: name => dispatch(loadUserThunk(name)) })\n)(UserLoader);\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { UserGroupsContainer } from './containers/UserGroups';\n\nimport './UserView.local.scss';\nimport { deactivateUserThunk } from '../../../store/thunks';\nimport { EditUserDetailsContainer } from './containers/EditUserDetails';\nimport { EditUserInfoContainer } from './containers/EditUserInfo';\n\nimport { currentUserSelector } from 'session/store/state';\nimport { getCurrentUserDetails } from 'session/store/selectors';\n\nimport { isAdmin } from 'entities/utils/privileges';\n\nexport const UserView = ({ user, deactivateUser, deactivating, loggedUser, userDetails }) => {\n  const defaultResult = () => {\n    if (loggedUser.get('name') === user?.name) {\n      return 'self';\n    }\n\n    if (!isAdmin(userDetails)) {\n      return 'not-admin';\n    }\n\n    return 'attempt';\n  };\n  const [result, setResult] = useState(defaultResult);\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult(defaultResult);\n      setOpen(false);\n    }, [])\n  };\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  const deactivate = useCallback(() => {\n    deactivateUser(user)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not deactivate user!'); // eslint-disable-line\n      });\n  }, [user]);\n  const titleStyles = { textTransform: 'none' };\n\n  if (noGroups) {\n    titleStyles.fontStyle = 'italic';\n  }\n\n  /* This needs to be written as a result check or 404 page for a user. */\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title style={titleStyles}>{user.name}</Paper.Title>\n        </Paper.Header>\n        <Paper.Content>\n          <Section>\n            <Section.Title>Global Privileges</Section.Title>\n            <PrivilegesContainer />\n          </Section>\n          <Section>\n            <Section.Title>Member of Groups</Section.Title>\n            <UserGroupsContainer />\n          </Section>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            {user?.name !== 'mas' && (\n              <Button\n                color=\"secondary\"\n                disabled={deactivating || noGroups}\n                onClick={modalActions.open}\n              >\n                Deactivate user\n              </Button>\n            )}\n            <EditUserDetailsContainer />\n            <EditUserInfoContainer />\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Deactivate user\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"self\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>You cannot deactivate yourself.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"not-admin\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Only admin users can deactivate other users.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to deactivate user {user.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('deactivating');\n                      deactivate();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"deactivating\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Deactivating...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const ConnectedUserView = connect(\n  state => ({\n    user: state.usersManager.users.selected,\n    deactivating: state.usersManager.flags.user.removing,\n    loggedUser: currentUserSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    deactivateUser: userName => dispatch(deactivateUserThunk(userName))\n  })\n)(UserView);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../../store/thunks';\n\nexport const Privileges = ({ user, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <div className=\"user-privileges\">\n      <ul className=\"privileges-list\">\n        {privileges.map(entry => {\n          return (\n            <li key={entry.key} className=\"privileges-item\">\n              <Privilege user={user} privilege={entry} actions={actions} disabled={disabled} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPrivileges.propTypes = {\n  user: string,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ user, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(user, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  user: string,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      disabled: user?.name === 'mas' || state.usersManager.flags.privileges.disabled,\n      privileges: mapPrivileges(user.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (user, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      ),\n    revoke: (user, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction mapPrivileges(data) {\n  if (!data) return [];\n\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { ScrollableContainer, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditUserGroupsContainer } from './EditUserGroups';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './UserGroups.local.scss';\nimport { removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const UserGroups = ({ user, groups, removeFromGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeFromGroups(user, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.type === 'fail') {\n          setResult('error');\n          setErrorMessage(response.message);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [user, selectedGroup]);\n\n  const isOnlySelect = groups?.length === 1 && groups[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove user ${user} from group ${selectedGroup}? This\n  could affect the way the user will be able to interact with the app`;\n\n  return (\n    <>\n      <div className=\"user-groups-block\">\n        <ScrollableContainer variant=\"row white\">\n          {passed => (\n            <ul {...passed}>\n              {groups &&\n                groups.map(group_name => (\n                  <li className=\"group-card-item\" key={group_name}>\n                    <AvatarCard\n                      label={group_name}\n                      disabled={user === 'mas'}\n                      avatar={{ fallback: <GroupIcon /> }}\n                      action={\n                        <SvgIcon\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSelectedGroup(group_name);\n                            modalActions.open();\n                          }}\n                        >\n                          <path d={mdiDeleteCircleOutline} />\n                        </SvgIcon>\n                      }\n                      description={retrieveGroupDescription(group_name)}\n                    />\n                  </li>\n                ))}\n              <li className=\"group-card-item\" key=\"add-user-to-groups\">\n                <EditUserGroupsContainer />\n              </li>\n            </ul>\n          )}\n        </ScrollableContainer>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setErrorMessage('An error occurred.');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  removeFromGroups: func\n};\n\nexport const UserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    const visibleGroups = user.member_of?.filter(group => group !== 'user');\n\n    return {\n      user: user.name,\n      groups: visibleGroups,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n  })\n)(UserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './EditUserGroups.local.scss';\nimport { addUserToGroupsThunk, removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const EditUserGroups = ({ user, groups, addToGroups, flags, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  if (user === 'mas') {\n    return null;\n  }\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard label=\"Add to group\" avatar={{ fallback: <AddIcon /> }} />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                user={user}\n                selected={groups}\n                flags={flags}\n                closeModal={closeModal}\n                onAdd={(userName, selections) => {\n                  return addToGroups(userName, selections);\n                }}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nEditUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  addToGroups: func,\n  flags: object\n};\n\nexport const EditUserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      groups: user.member_of,\n      flags: state.usersManager.flags.user,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    addToGroups: (user, groups) => dispatch(addUserToGroupsThunk({ user, groups })),\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n    /** add to group thunk here */\n    /** remove from group thunk here */\n  })\n)(EditUserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nconst GroupsList = ({\n  user,\n  selected,\n  onAdd,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    loading: true,\n    done: false,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => selected && !selected.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, selected]);\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.done && !state.all.length) {\n    return <p>Could not retrieve all groups</p>;\n  }\n\n  if (state.success) {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Added to selected groups succesfully!</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.fail) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>{capitalizeFirstLetter(state.fail)}</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? selected.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that the user is a part of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              onAdd(user, state.selections)\n                .then(response => {\n                  if (typeof response === 'object' && response.type === 'fail') {\n                    setState(\n                      produce(state, draft => {\n                        draft.fail = response.message;\n                      })\n                    );\n                  } else {\n                    setState(\n                      produce(state, draft => {\n                        draft.success = true;\n                      })\n                    );\n                  }\n                })\n                .catch(err => {\n                  setState(\n                    produce(state, draft => {\n                      draft.fail = err;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  user: string,\n  selected: array,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useRef } from 'react';\nimport { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { ChangePasswordContainer } from './ChangePassword';\nimport { UserDatesBox } from '../components/UserDatesBox';\n\n// import './EditUserDetails.local.scss';\n\nexport const EditUserDetails = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        User Details\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '370px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-details\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"User Details\"\n            formikRef={formRef}\n          />\n          <UserDetailsForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserDetails.propTypes = {\n  user: object\n};\n\nexport const EditUserDetailsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserDetails);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserDetailsForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ submitResult: undefined });\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  const initialValues = {\n    description: user.description\n  };\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          if (_.isEqual(initialValues, values)) {\n            actions.setSubmitting(false);\n            modalActions.close();\n          }\n\n          // parse and add user information form data.\n\n          /**\n            patch user description\n            */\n          RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`, {\n            description: values.description\n          })\n            .then(() => {\n              setState(prev => ({ ...prev, submitResult: 'success' }));\n            })\n            .catch(() => {\n              actions.setSubmitting(false);\n\n              setState(prev => ({ ...prev, submitResult: 'fail' }));\n            });\n        }}\n        innerRef={formRef}\n      >\n        {({ dirty, isSubmitting, submitForm }) => (\n          <>\n            <Paper.Content scrollable>\n              <Form>\n                <UserDatesBox created={user.date_created} updated={user.date_updated} />\n                <Row>\n                  <Field name=\"description\">\n                    {({ field, meta }) => {\n                      return (\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          error={meta.error && meta.touched}\n                          helperText={meta.touched ? meta.error : undefined}\n                          label=\"Short Description\"\n                        />\n                      );\n                    }}\n                  </Field>\n                </Row>\n              </Form>\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <ChangePasswordContainer />\n              </Paper.Footer.Left>\n              <Paper.Footer.Right>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || isSubmitting}\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nUserDetailsForm.propTypes = {\n  user: object,\n  modalActions: object\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { SvgIcon } from '@material-ui/core';\nimport { mdiAccountPlus, mdiAccountEdit } from '@mdi/js';\nimport moment from 'moment';\n\nimport './UserDatesBox.local.scss';\n\nexport const UserDatesBox = ({ created, updated }) => (\n  <div className=\"dates-box\">\n    {created && <DateCreated date={created} />}\n    {updated && <DateUpdated date={updated} />}\n  </div>\n);\n\nUserDatesBox.propTypes = { created: string, updated: string };\n\nexport const DateCreated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountPlus} />\n    </SvgIcon>\n    <span>Created on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateCreated.propTypes = { date: string };\n\nexport const DateUpdated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountEdit} />\n    </SvgIcon>\n    <span>Updated on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateUpdated.propTypes = { date: string };\n\nfunction parseDate(date) {\n  return moment(date).format('MMM DD YYYY');\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\n// import './EditUserInfo.local.scss';\n\nexport const EditUserInfo = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Contact Info\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '632px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"Contact Information\"\n            formikRef={formRef}\n          />\n          <UserInfoForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserInfo.propTypes = {\n  user: object\n};\n\nexport const EditUserInfoContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserInfo);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserInfoForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ loading: true });\n\n  useEffect(() => {\n    const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n    const prototypeEndpoint = 'prototype/mas0300.sys.user.information?version=1';\n\n    RestClient.get(prototypeEndpoint).then(formproto => {\n      const proto = formproto.data.data.prototypes[0];\n\n      RestClient.get(formEndpoint)\n        .then(formdata => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: false,\n            data: formdata.data.data.forms[0],\n            proto\n          });\n        })\n        .catch(() => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: true,\n            proto\n          });\n        });\n    });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <>\n        <Center>\n          <Loader />\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"primary\" onClick={modalActions.close}>\n              Cancel\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.result === 'success') {\n    const { fields, values } = mapFormValues(state.proto, state.data);\n\n    return (\n      <>\n        <Formik\n          validateOnChange={false}\n          initialValues={values}\n          onSubmit={(submited, actions) => {\n            if (_.isEqual(values, submited)) {\n              actions.setSubmitting(false);\n              modalActions.close();\n            }\n\n            const sendable_data = fields.reduce((d, entry) => {\n              /** Empty values have to be nulled to be sent in the data :( */\n              let value = submited[entry.name] || null;\n\n              /**\n                TODO: backend accepts array for is_repeatable values\n               */\n              if (entry.is_repeatable && !Array.isArray(value)) {\n                value = [value];\n              }\n\n              d.push({\n                name: entry.label, // for this particular form, the names contain spaces.\n                value\n              });\n\n              return d;\n            }, []);\n            // parse and add user information form data.\n\n            /**\n            Send user.info data to backend\n            */\n            const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n\n            if (state.create) {\n              const body = {\n                name: `mas0000.user.${user.name}.form.user_information`,\n                description: `User information for ${user.name}`,\n                values: sendable_data,\n                prototype: state.proto.name\n              };\n\n              RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.FORM}`, body)\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            } else {\n              RestClient.patch(formEndpoint, {\n                description: state.data.description,\n                rename: state.data.name,\n                values: sendable_data\n              })\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            }\n          }}\n          innerRef={formRef}\n        >\n          {({ dirty, isSubmitting, submitForm }) => (\n            <>\n              <Paper.Content scrollable>\n                <Form style={{ paddingTop: '16px' }}>\n                  {fields.map(entry => (\n                    <Row key={entry.name}>\n                      <FieldSwitch parameter={entry} />\n                    </Row>\n                  ))}\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button color=\"primary\" onClick={modalActions.close}>\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!dirty || isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          )}\n        </Formik>\n      </>\n    );\n  }\n};\n\nfunction mapFormValues(proto, provided) {\n  const { fields } = proto;\n  const data = provided && provided.values;\n\n  return fields.reduce(\n    (dict, entry, index) => {\n      const normalized = entry.name.replace(' ', '_');\n      const value = data && data[index].value;\n\n      if (entry.is_repeatable && Array.isArray(entry.value)) {\n        /**\n          TODO: array values have to be unpacked\n         */\n        dict.values[normalized] = value ? value[0] : '';\n      } else {\n        dict.values[normalized] = value || '';\n      }\n\n      dict.fields.push({\n        ...entry,\n        name: normalized,\n        label: entry.name\n      });\n\n      return dict;\n    },\n    { values: {}, fields: [] }\n  );\n}\n\nexport const TextField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    const schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAccountOff } from '@mdi/js';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './UserCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const UserCard = ({ href, user }) => {\n  const { pathname } = useLocation();\n  const { name, src } = user;\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  return (\n    <Link\n      to={href}\n      className={classnames('user-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`user-card-of-${name}`}\n    >\n      <Avatar className=\"user-avatar\" alt={name} src={src}>\n        {user.name[0].toUpperCase()}\n      </Avatar>\n      <span className={classnames('user-name', { groupless: noGroups })}>{name}</span>\n      {noGroups && (\n        <LightTooltip placement=\"bottom\" title=\"Deactivated user\">\n          <SvgIcon className=\"deactivated-icon\">\n            <Icon path={mdiAccountOff} />\n          </SvgIcon>\n        </LightTooltip>\n      )}\n    </Link>\n  );\n};\n\nUserCard.propTypes = {\n  href: string,\n  user: object\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoUserSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>User Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a user from the list to view or edit their details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n  </Paper>\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Section, Center, Row, Column } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { NewUserGroups } from './components/NewUserGroups';\n\nimport { createUserThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewUser.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmpassword: Yup.string()\n    .required('Please confim the password you entered')\n    .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  groups: Yup.array()\n});\n\nconst CreateNewUser = ({ submitUserValues, allUsers, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.username) ||\n      (values.username && values.username.substr(-1) === '.')\n    ) {\n      errors.username = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allUsers.map(user => {\n      if (exists) return;\n\n      if (user.name === values.username) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.username = 'A user with this name already exists';\n    }\n\n    if (values.password) {\n      if (/[$\\\\/\":;']/.test(values.password)) {\n        errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n      } else if (values.password.length < 8) {\n        errors.password = 'Password must contain at least eight characters';\n      } else if (!/[a-z]/.test(values.password)) {\n        errors.password = 'Password must have at least a lower case letter (ex: a, b, etc.)';\n      } else if (!/[A-Z]/.test(values.password)) {\n        errors.password = 'Password must have at least a upper case letter (ex: A, B, etc.)';\n      } else if (!/[0-9]/.test(values.password)) {\n        errors.password = 'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n      } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n        errors.password =\n          'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n      }\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /** Not used. Navigating dirrectly to new user */\n    if (operation.result === 'success') {\n      return (\n        <>\n          <Paper>\n            <Paper.Content scrollable={false}>\n              <Center>\n                <Result type={operation.result}>\n                  <Result.Text>User created successfully</Result.Text>\n                </Result>\n              </Center>\n            </Paper.Content>\n            <Paper.Footer>\n              <Button to=\"/system/mas-accounts/users\" component={Link}>\n                Go to user\n              </Button>\n            </Paper.Footer>\n          </Paper>\n        </>\n      );\n    }\n\n    let errorMessage = 'Could not create new user';\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirmpassword: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitUserValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.username));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <Paper>\n          <Form className=\"create-new-user-form\">\n            <Paper.Title>New User</Paper.Title>\n            <Paper.Content>\n              <Section>\n                <Section.Title>User Details</Section.Title>\n                <Section.Content>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"username\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"description\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            label=\"Short Description\"\n                            placeholder=\"Short description\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"password\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"confirmpassword\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            autoComplete=\"off\"\n                            required\n                            label=\"Confirm Password\"\n                            placeholder=\"Confirm Passwords\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                </Section.Content>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <NewUserGroups\n                      groups={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <div className=\"left-side-action\">\n                <Button to=\"/system/mas-accounts/users\" color=\"primary\">\n                  Cancel\n                </Button>\n              </div>\n\n              <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !isValid}>\n                Save\n              </Button>\n            </Paper.Footer>\n          </Form>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewUser.propTypes = { submitUserValues: func };\n\nexport const CreateNewUserPage = connect(\n  state => ({\n    allUsers: state.usersManager.users.all,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitUserValues: values => dispatch(createUserThunk(values))\n  })\n)(CreateNewUser);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './NewUserGroups.local.scss';\n\nexport const NewUserGroups = ({ groups, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {groups.map(group_name => (\n            <li className=\"group-card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = groups.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"group-card-item\" key=\"add-user-to-groups\">\n            <GroupsSelection\n              selected={groups}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nNewUserGroups.propTypes = {\n  username: string,\n  groups: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                selected={selected}\n                helpers={helpers}\n                closeModal={closeModal}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({\n  selected,\n  helpers,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                      setIsFormChanged(true);\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './GroupCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const GroupCard = ({ href, group }) => {\n  const { pathname } = useLocation();\n\n  const { name, src } = group;\n  return (\n    <Link\n      to={href}\n      className={classnames('group-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`group-card-of-${name}`}\n    >\n      <Avatar className=\"group-avatar\" alt={name} src={src}>\n        {group.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"group-name\">{name}</span>\n    </Link>\n  );\n};\n\nGroupCard.propTypes = {\n  href: string,\n  group: object\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { loadGroupThunk, removeGroupThunk } from '../../store/thunks';\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { GroupUsersContainer } from './containers/GroupUsers';\nimport { SubGroupsContainer } from './containers/SubGroups';\n\nimport './GroupView.local.scss';\n\nexport const GroupView = ({ group, removing, removeGroup }) => {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const deleteGroup = useCallback(() => {\n    removeGroup(group.name)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n        history.push('/system/mas-accounts/groups');\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group!'); // eslint-disable-line\n      });\n  }, [group]);\n\n  /* This needs to be written as a result check or 404 page for a group. */\n  if (!group) {\n    return <></>;\n  }\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title>{group.name}</Paper.Title>\n        </Paper.Header>\n\n        <Paper.Content scrollable>\n          <PrivilegesContainer />\n          <GroupUsersContainer />\n          <SubGroupsContainer />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"secondary\" disabled={removing} onClick={modalActions.open}>\n              Remove\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove group {group.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      deleteGroup();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupView.propTypes = {\n  group: object,\n  removing: bool,\n  removeGroup: func\n};\n\nexport const ConnectedGroupView = connect(\n  state => ({\n    group: state.groups.selected,\n    removing: state.groups.ops.remove.loading\n  }),\n  dispatch => ({\n    removeGroup: name => dispatch(removeGroupThunk(name))\n  })\n)(GroupView);\n\nexport const GroupLoader = ({ loadGroup, loading }) => {\n  const { groupName } = useParams();\n  useEffect(() => {\n    if (groupName) {\n      loadGroup(groupName);\n    }\n  }, [groupName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading Group <b>{groupName}</b>\n        </Loader>\n      ) : (\n        <ConnectedGroupView />\n      )}\n    </>\n  );\n};\n\nGroupLoader.propTypes = {\n  loadGroup: func,\n  loading: bool\n};\n\nexport const ConnectedGroupLoader = connect(\n  state => ({\n    loading: state.groups.ops.selected.loading\n  }),\n  dispatch => ({ loadGroup: name => dispatch(loadGroupThunk(name)) })\n)(GroupLoader);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { object, string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { Section } from 'shared/components/layout';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../store/thunks';\n\nexport const Privileges = ({ group, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Class privileges:</Section.Title>\n        <Section.Info>\n          Effective class privileges are calculated based on explicit grants and denies in this\n          group and in groups of which this group may be a member\n        </Section.Info>\n      </Section.Header>\n      <div className=\"user-privileges\">\n        <ul className=\"privileges-list\">\n          {privileges.map(entry => {\n            return (\n              <li key={entry.key} className=\"privileges-item\">\n                <Privilege group={group} privilege={entry} actions={actions} disabled={disabled} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nPrivileges.propTypes = {\n  group: object,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ group, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(group.name, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  group: object,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      disabled: state.groups.ops.privileges.loading,\n      privileges: mapPrivileges(group.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (group, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      ),\n    revoke: (group, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport './GroupUsers.local.scss';\nimport { EditGroupUsersContainer } from './EditGroupUsers';\n\nimport { removeUsersFromGroupThunk } from '../../../store/thunks';\n\nexport const GroupUsers = ({ group, removeUsersFromGroup }) => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeUsersFromGroup(group.name, selectedUser)\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [group, selectedUser]);\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Users in this group</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.users.map(user => (\n              <li className=\"card-item\" key={user}>\n                <AvatarCard\n                  label={user}\n                  avatar={{ initial: user.charAt(0) }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setSelectedUser(user);\n                        modalActions.open();\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"card-item\" key=\"add-user-to-groups\">\n              <EditGroupUsersContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {selectedUser} from group {group.name}?\n                    This could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupUsers.propTypes = {\n  group: object,\n  removeUsersFromGroup: func\n};\n\nexport const GroupUsersContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeUsersFromGroup: (group, user) => dispatch(removeUsersFromGroupThunk({ group, user }))\n  })\n)(GroupUsers);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { addUsersToGroupThunk } from '../../../store/thunks';\n\nimport './EditGroupUsers.local.scss';\n\nexport const EditGroupUsers = ({ group, addUsersToGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add user\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the users you want to add this group\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <UsersSelection\n                  group={group}\n                  closeModal={closeModal}\n                  onAdd={selections => {\n                    return addUsersToGroup(group.name, selections);\n                  }}\n                  setIsFormChanged={setIsFormChanged}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditGroupUsers.propTypes = {\n  group: object,\n  addUsersToGroup: func\n};\n\nexport const EditGroupUsersContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    addUsersToGroup: (group, users) => dispatch(addUsersToGroupThunk({ group, users }))\n  })\n)(EditGroupUsers);\n\nconst UsersSelection = ({ group, closeModal, onAdd, setIsFormChanged }) => {\n  const [state, setState] = useState({\n    selections: [],\n    usersFetched: false,\n    usersSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(u => !group.users.includes(u.name));\n  }, [state.all, state.showAll, group]);\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.users;\n            draft.usersFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.usersFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.usersFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>\n              {state.error ? capitalizeFirstLetter(state.error) : 'Could not retrieve user list!'}\n            </Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected users to group succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add users to group!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered.sort((a, b) =>\n              a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n            )}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? group.users.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      initial: entry.name.charAt(0)\n                    }}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show users that are members of this group\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              /**\n                NOTE: (to self)\n\n                This is lim 0 -> complete trash\n\n                Can't use redux for snippets of this operation.\n                The redux action that is required should only be to update final group entry at maximum.\n\n                Either all ops are in redux, or none are.\n               */\n              onAdd(state.selections).then(response => {\n                setState(prev =>\n                  produce(prev, draft => {\n                    draft.loading = false;\n                    draft.usersSubmitted = true;\n                    draft.result = response?.result;\n                    draft.error = response?.messages;\n                  })\n                );\n              });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nUsersSelection.propTypes = {\n  group: object,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiAccountGroup, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditSubGroupsContainer } from './EditSubGroups';\nimport { removeSubGroupsThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ group, removeSubGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeSubGroups(group.name, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group from group!'); // eslint-disable-line\n      });\n  }, [group, selectedGroup]);\n\n  const isOnlySelect = group?.member_of?.length === 1 && group?.member_of[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove group ${group.name} from group ${selectedGroup}?\n      This could affect the way the user will be able to interact with the app.`;\n\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Member of groups</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.member_of\n              .filter(g => g !== 'user')\n              .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n              .map(subgroup => (\n                <li className=\"card-item\" key={subgroup}>\n                  <AvatarCard\n                    label={subgroup}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    action={\n                      <SvgIcon\n                        onClick={e => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setSelectedGroup(subgroup);\n                          modalActions.open();\n                        }}\n                      >\n                        <path d={mdiDeleteCircleOutline} />\n                      </SvgIcon>\n                    }\n                    description={retrieveGroupDescription(subgroup)}\n                  />\n                </li>\n              ))}\n            <li className=\"card-item\" key=\"add-sub-group\">\n              <EditSubGroupsContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nSubGroups.propTypes = {\n  group: object,\n  removeSubGroups: func\n};\n\nexport const SubGroupsContainer = connect(\n  state => ({\n    group: state.groups.selected,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    removeSubGroups: (group, groups) => dispatch(removeSubGroupsThunk({ group, groups }))\n  })\n)(SubGroups);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport { PATCH_SELECTED_GROUP } from '../../../store/actions';\n\nimport './EditSubGroups.local.scss';\n\nexport const EditSubGroups = ({ group, updateGroup, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select which groups this one should be a part of\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupSelection\n                  group={group}\n                  updateGroup={updateGroup}\n                  closeModal={actions.close}\n                  setIsFormChanged={setIsFormChanged}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditSubGroups.propTypes = {\n  group: object,\n  updateGroup: func\n};\n\nexport const EditSubGroupsContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    updateGroup: group => dispatch(creators.action(PATCH_SELECTED_GROUP, group))\n  })\n)(EditSubGroups);\n\nconst GroupSelection = ({\n  group,\n  closeModal,\n  updateGroup,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    groupsFetched: false,\n    subgroupsSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => !group.member_of.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, group]);\n\n  const isDisabled = name => {\n    if (group.name === name) {\n      return true;\n    }\n\n    if (state.showAll) {\n      return group.member_of.includes(name);\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.groups;\n            draft.groupsFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.groupsFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (\n    state.groupsFetched &&\n    (!state.all.length || (state.result === 'fail' && !state.subgroupError))\n  ) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve groups list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected groups succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'fail') {\n    let errorMessage = 'Could not add selected groups!';\n\n    if (\n      state.error &&\n      state.error[0] &&\n      state.error[0].text &&\n      state.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = state.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>{errorMessage}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={isDisabled(entry.name)}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that this one already is a member of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group.name}/grant`, {\n                groups: state.selections\n              })\n                .then(({ data: resolved }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = resolved.result;\n                      draft.subgroupError = false;\n                    })\n                  );\n\n                  updateGroup(resolved.data.groups[0]);\n                })\n                .catch(error => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = 'fail';\n                      draft.error = error?.response?.data?.messages;\n                      draft.subgroupError = true;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupSelection.propTypes = {\n  group: object,\n  updateGroup: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Center } from 'shared/components';\nimport { Paper, Section, Column, Row } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { createGroupThunk } from '../../store/thunks';\n\nimport { SubGroups } from './components/SubGroups';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewGroup.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  groupname: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Group name is required'),\n  groups: Yup.array()\n});\n\nconst CreateNewGroup = ({ submitGroupValues, allGroups, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.groupname) ||\n      (values.groupname && values.groupname.substr(-1) === '.')\n    ) {\n      errors.groupname = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allGroups.map(group => {\n      if (exists) return;\n\n      if (group.name === values.groupname) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.groupname = 'A group with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /**\n     * Failed results are the ony onnes that are shown.\n     * For successfull creation, the user is navigated to the new entry\n     */\n    let errorMessage = 'Could not create new group';\n\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type=\"fail\">\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined, error: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        groupname: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitGroupValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.groupname));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid, submitForm }) => (\n        <Paper>\n          <Paper.Title>New Group</Paper.Title>\n          <Paper.Content>\n            <Form className=\"create-new-group-form\">\n              <Section>\n                <Section.Title>Group Details</Section.Title>\n                <Row>\n                  <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                    <Field name=\"groupname\">\n                      {({ field, meta }) => (\n                        <Input\n                          required\n                          {...field}\n                          label=\"Group Name\"\n                          placeholder=\"Group Name\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                  <Column style={{ maxWidth: '220px' }}>\n                    <Field name=\"description\">\n                      {({ field, meta }) => (\n                        <Input\n                          {...field}\n                          label=\"Short Description\"\n                          placeholder=\"Short Description\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                </Row>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <SubGroups\n                      selections={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Form>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button to=\"/system/mas-accounts/groups\" color=\"primary\">\n                Cancel\n              </Button>\n            </Paper.Footer.Left>\n\n            <Paper.Footer.Right>\n              <Button\n                type=\"submit\"\n                onClick={submitForm}\n                variant=\"contained\"\n                disabled={isSubmitting || !isValid}\n              >\n                Save\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewGroup.propTypes = { submitGroupValues: func };\n\nexport const CreateNewGroupPage = connect(\n  state => ({\n    allGroups: state.groups.all.filter(g => g.name !== 'user'),\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitGroupValues: values => dispatch(createGroupThunk(values))\n  })\n)(CreateNewGroup);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ selections, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {selections.map(group_name => (\n            <li className=\"card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = selections.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-group-to-groups\">\n            <GroupsSelection\n              selected={selections}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nSubGroups.propTypes = {\n  username: string,\n  selections: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    open: openModal,\n    close: closeModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"add-to-group-button\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <GroupAddIcon />\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the groups you want to add this user to\"\n                aria={aria}\n                onClose={actions.close}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupsList\n                  selected={selected}\n                  helpers={helpers}\n                  closeModal={actions.close}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal, retrieveGroupDescription }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ minWidth: '178px', maxWidth: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoGroupSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>Group Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a group from the list to view or edit its details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n    {/* <Paper.Footer /> */}\n  </Paper>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { mdiHexagonMultipleOutline } from '@mdi/js';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { changeStateThunk } from '../../../store/thunks';\n\nimport { ServerList } from '../ServerList/ServerList';\n\nimport './Dbms.local.scss';\n\nexport class DBMS extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"dbms-item\">\n        <header>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.protocol}-dbms`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiHexagonMultipleOutline} />\n              </SvgIcon>\n            </div>\n            <div\n              className={`value ${path.startsWith(data.path) ? 'active' : ''}`}\n              title={data.protocol}\n            >\n              {data.protocol}\n            </div>\n          </div>\n          <div\n            role=\"presentation\"\n            data-qa={`toggle-${data.protocol}-dbms`}\n            className={`status ${path.startsWith(data.path) ? 'active' : ''}`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <RemoveIcon /> : <AddIcon />}\n          </div>\n        </header>\n        <ul className=\"dbms-content\">{isExpanded && <ServerList servers={data.servers} />}</ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nDBMS.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDBMS = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(DBMS);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedServer } from './containers/Server/Server';\n\nexport class ServerList extends React.PureComponent {\n  render() {\n    const { servers } = this.props;\n\n    return servers.map(server => <ConnectedServer key={server.address} data={server} />);\n  }\n}\n\nServerList.propTypes = {\n  servers: array\n};\n\nexport default ServerList;\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { DatabaseList } from '../../../DatabaseList/DatabaseList';\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Server.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../../../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../../../../shared/components';\n\nexport class Server extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"server-item\">\n        <header className={this.isActive(path, data.path)}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.address}-server`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\">\n              <LightTooltip placement=\"top\" title={data.address}>\n                <span>{SystemExplorerFeatureUtil.splitAccountName(data.name) || data.address}</span>\n              </LightTooltip>\n            </div>\n          </div>\n          <div\n            className=\"status\"\n            role=\"presentation\"\n            data-qa={`toggle-${data.address}-server`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n          </div>\n        </header>\n        <ul className=\"server-content\">\n          {isExpanded && <DatabaseList databases={data.databases} />}\n        </ul>\n      </li>\n    );\n  }\n\n  isActive = (path, current) => {\n    const activePath = current.split('--');\n    const storedPath = path.split('--');\n\n    if (activePath[0] === storedPath[0] && activePath[1] === storedPath[1]) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nServer.propTypes = {\n  data: object,\n  storeState: object,\n  changeState: func\n};\n\nexport const ConnectedServer = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Server);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedDatabase } from './containers/Database/Database';\n\nexport class DatabaseList extends React.PureComponent {\n  render() {\n    const { databases } = this.props;\n\n    if (!databases) return null;\n\n    return databases.map(database => <ConnectedDatabase key={database.name} data={database} />);\n  }\n}\n\nDatabaseList.propTypes = {\n  databases: array\n};\n\nexport default DatabaseList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Database.local.scss';\n\nexport class Database extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.storeState.path === props.data.path) {\n      return { isExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n\n    const name = data.special.database;\n\n    return (\n      <li className=\"database-item\">\n        <header className={`${data.path === path ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${name}-database`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDatabase} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={name}>\n              {name}\n            </div>\n          </div>\n        </header>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nDatabase.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDatabase = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Database);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string, func, object } from 'prop-types';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport { changeStateThunk } from '../../store/thunks';\n\nimport './Breadcrumbs.local.scss';\n\nexport class BreadcrumbsTitle extends React.PureComponent {\n  render() {\n    const {\n      storeState: { path }\n    } = this.props;\n\n    return this.renderBreadcrumbs(path);\n  }\n\n  renderBreadcrumbs = path => {\n    const links = path\n      .split(this.props.separator)\n      .filter(e => e)\n      .reduce(\n        (routes, entry, index, list) => {\n          const previous = list.slice(0, index);\n          previous.push(entry);\n          const routePath = previous.join(this.props.separator);\n\n          const route = { label: entry, route: routePath };\n          routes.push(route);\n\n          return routes;\n        },\n        [{ label: 'DBMS', route: '' }]\n      );\n\n    return (\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        {links.map(link => {\n          return (\n            <div\n              data-qa={`breadcrumbs-${link.label}`}\n              className=\"path\"\n              role=\"presentation\"\n              key={link.route}\n              onClick={() => this.navigateTo(link.route)}\n            >\n              {link.label}\n            </div>\n          );\n        })}\n      </Breadcrumbs>\n    );\n  };\n\n  navigateTo = selectedLink => {\n    if (selectedLink === this.props.storeState.path) {\n      return;\n    }\n\n    this.props.changeState({ path: selectedLink });\n\n    this.setActiveLevel(selectedLink);\n  };\n\n  setActiveLevel = selectedLink => {\n    const linkElements = selectedLink.split(this.props.separator).filter(e => e);\n\n    switch (linkElements.length) {\n      case 0:\n        this.props.changeState({ level: 'all-dbms' });\n        break;\n      case 1:\n        this.props.changeState({ level: 'all-servers' });\n        break;\n      case 2:\n        this.props.changeState({ level: 'all-databases' });\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nBreadcrumbsTitle.propTypes = {\n  storeState: object,\n  changeState: func,\n  separator: string\n};\n\nBreadcrumbsTitle.defaultProps = {\n  separator: '--'\n};\n\nexport const ConnectedBreadcrumbsTitle = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(BreadcrumbsTitle);\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { ConnectedAllDbms } from '../../containers/AllDbms/AllDbms';\nimport { ConnectedAllServers } from '../../containers/AllServers/AllServers';\nimport { ConnectedAllDatabases } from '../../containers/AllDatabases/AllDatabases';\nimport { ConnectedWorkload } from '../../containers/Workload/Workload';\nimport { ConnectedLicense } from '../../containers/License/License';\nimport { ConnectedStorage } from '../../containers/Storage/Storage';\nimport { ConnectedObjects } from '../../containers/Objects/Objects';\nimport { ConnectedSessions } from '../../containers/Sessions/Sessions';\nimport { ConnectedTopSQLStatements } from '../../containers/TopSQLStatements/TopSQLStatements';\n\nexport class ContentSwitch extends React.PureComponent {\n  render() {\n    const { activePage } = this.props;\n\n    return this.renderPage(activePage);\n  }\n\n  renderPage = activePage => {\n    switch (activePage) {\n      case 'all-dbms':\n        return <ConnectedAllDbms />;\n      case 'all-servers':\n        return <ConnectedAllServers />;\n      case 'all-databases':\n        return <ConnectedAllDatabases />;\n      case 'workload':\n        return <ConnectedWorkload />;\n      case 'license':\n        return <ConnectedLicense />;\n      case 'storage':\n        return <ConnectedStorage />;\n      case 'objects':\n        return <ConnectedObjects />;\n      case 'sessions':\n        return <ConnectedSessions />;\n      case 'topsql':\n        return <ConnectedTopSQLStatements />;\n      default:\n        return <></>;\n    }\n  };\n}\n\nContentSwitch.propTypes = {\n  activePage: string\n};\n\nexport default ContentSwitch;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHexagonMultipleOutline, mdiChartTimelineVariant } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { getDBMSStatus, getDBMSStatusInfo } from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nexport class AllDbms extends React.PureComponent {\n  render() {\n    const { all, retrieveDBMSStatus, retrieveDBMSStatusInfo } = this.props;\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {all.map(dbms => (\n            <ActionCard\n              key={dbms.name}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n              }\n              status={dbms.name !== 'OTHER' ? retrieveDBMSStatus(dbms) : ''}\n              statusInfo={retrieveDBMSStatusInfo(dbms)}\n              type=\"dbms\"\n              label={dbms.name}\n              onClick={() => this.setPath(dbms.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: dbms.path, level: 'workload' })\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n  };\n}\n\nAllDbms.propTypes = {\n  all: array,\n  changeState: func\n};\n\nexport const ConnectedAllDbms = connect(\n  state => ({\n    all: state.explorer?.structured?.dbms || [],\n    allDbms: state.explorer.accounts,\n    retrieveDBMSStatus: dbms => getDBMSStatus(dbms, state.explorer.dbStatus),\n    retrieveDBMSStatusInfo: dbms => getDBMSStatusInfo(dbms, state.explorer.dbStatus)\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDbms);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiChartTimelineVariant, mdiPercent } from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshServerDbsStatusThunk } from '../../store/thunks';\nimport {\n  getServerStatus,\n  getServerStatusInfo,\n  getEntityPendingStatus\n} from '../../store/selectors';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { ServerSettings } from '../Settings/ServerSettings';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../shared/components';\n\nconst serverLabel = (serverFullName, address) => {\n  if (serverFullName) {\n    return (\n      <LightTooltip placement=\"bottom-end\" title={address}>\n        <span>{SystemExplorerFeatureUtil.splitAccountName(serverFullName)}</span>\n      </LightTooltip>\n    );\n  }\n\n  return <span>{address}</span>;\n};\n\nexport class AllServers extends React.PureComponent {\n  render() {\n    const {\n      all,\n      serversUsage,\n      retrieveServerStatus,\n      userDetails,\n      retrieveServerStatusInfo,\n      reloadAccounts\n    } = this.props;\n    const servers = all;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {servers.map((server, index) => (\n            <ActionCard\n              key={`${server.name}-${index}`}\n              settings={<ServerSettings server={server} disabled={isDisabled} reloadAccounts={reloadAccounts} hasDatabases={server.databases.length > 0} />}\n              status={server.databases.length > 0 ? retrieveServerStatus(server) : ''}\n              statusInfo={retrieveServerStatusInfo(server)}\n              type=\"server\"\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiDns} />\n                </SvgIcon>\n              }\n              label={serverLabel(server.name, server.address)}\n              onClick={() => this.setPath(server.path)}\n              options={this.renderOptions(server)}\n              readOnlyOptions={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiPercent} />\n                    </SvgIcon>\n                  ),\n                  label: 'CPU Load',\n                  fillable: true,\n                  percentage:\n                    serversUsage.find(sv => sv.address === server.address)?.usage || undefined\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n  };\n\n  renderOptions = server => {\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: server.path, level: 'workload' })\n      }\n    ];\n\n    if (server.databases.length > 0) {\n      options.push({\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(server).label,\n        disabled: this.props.retrievePendingStatus(server).loading,\n        onClick: () => this.refreshServerDBs(server)\n      });\n    }\n\n    return options;\n  };\n\n  refreshServerDBs = server => {\n    if (!this.props.retrievePendingStatus(server).loading) {\n      this.props.refreshServerDbsStatus(server);\n    }\n  };\n}\n\nAllServers.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllServers = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const dbms = structured.dbms.find(entry => entry.protocol === path);\n\n    return {\n      all: dbms?.servers || [],\n      allDbms: state.explorer.accounts,\n      storeState: state.explorer.state,\n      serversUsage: state.explorer.serversUsage?.servers || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveServerStatus: server => getServerStatus(server, state.explorer.dbStatus),\n      retrieveServerStatusInfo: server => getServerStatusInfo(server, state.explorer.dbStatus),\n      retrievePendingStatus: server =>\n        getEntityPendingStatus(server, state.explorer.dbStatus, 'server')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshServerDbsStatus: server => dispatch(refreshServerDbsStatusThunk(server)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllServers);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { ServerForm } from '../Forms/ServerForm';\nimport { mdiSettings, mdiDns, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ConfirmationModal, ErrorModal } from '../../../shared/components/overlays';\nimport { deleteAccount } from '../../../shared/api/accounts';\n\nexport const ServerSettings = ({ server, disabled, reloadAccounts, hasDatabases }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteServerOpen, setDeleteServerOpen] = useState(false);\n  const [deleteServerErrorOpen, setDeleteServerErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteServerModalActions = {\n    open: () => {\n      setDeleteServerOpen(true);\n    },\n    close: () => {\n      setDeleteServerOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(server.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteServerErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteServerErrorModalActions = {\n    open: () => {\n      setDeleteServerErrorOpen(true);\n    },\n    close: () => {\n      setDeleteServerErrorOpen(false);\n    }\n  };\n\n  if (disabled) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n      {!hasDatabases && (\n        <IconButton onClick={deleteServerModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditServerContainer server={server} />\n      </Modal>\n\n      <ConfirmationModal open={deleteServerOpen} actions={deleteServerModalActions} message=\"Are you sure you want to delete server?\" />\n      <ErrorModal open={deleteServerErrorOpen} actions={deleteServerErrorModalActions} message=\"Failed to delete Server. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditServer = ({ server, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    fetchProtocols().then(resp => {\n      if (resp.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: resp.protocols || []\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Edit Server\"\n        desc=\"Edit the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <ServerForm\n            server={server}\n            protocols={state.protocols}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditServerContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditServer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiDatabase,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { DatabaseSettings } from '../Settings/DatabaseSettings';\nimport {\n  getBackup,\n  getDBStatus,\n  getDBStatusInfo,\n  getEntityPendingStatus,\n  retrieveServerEntry\n} from '../../store/selectors';\nimport { TopSqlStatementsUtil } from '../TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class AllDatabases extends React.PureComponent {\n  render() {\n    const {\n      databases,\n      retrieveDbBackup,\n      retrieveDbStatus,\n      retrieveDbStatusInfo,\n      userDetails,\n      reloadAccounts\n    } = this.props;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <>\n        <Paper.Content>\n          <CardsLayout>\n            {databases.map(database => (\n              <ActionCard\n                key={database.name}\n                lastBackup={retrieveDbBackup(database)}\n                settings={<DatabaseSettings database={database} disabled={isDisabled} reloadAccounts={reloadAccounts} />}\n                status={retrieveDbStatus(database)}\n                statusInfo={retrieveDbStatusInfo(database)}\n                type=\"database\"\n                icon={\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                }\n                label={database.special.database}\n                onClick={() => this.setPath(database.path)}\n                options={this.renderOptions(database)}\n              />\n            ))}\n          </CardsLayout>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n\n  refreshDBStatus = db => {\n    if (!this.props.retrievePendingStatus(db).loading) {\n      this.props.refreshDatabaseStatus(db);\n    }\n  };\n\n  renderOptions = database => {\n    const [protocol] = database.path.split('--');\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: database.path, level: 'workload' })\n      },\n      {\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(database).label,\n        disabled: this.props.retrievePendingStatus(database).loading,\n        onClick: () => this.refreshDBStatus(database)\n      }\n    ];\n\n    if (SystemExplorerFeatureUtil.isSessionsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiCheckboxMultipleBlankOutline} />\n          </SvgIcon>\n        ),\n        label: 'Sessions',\n        onClick: () => this.props.changeState({ path: database.path, level: 'sessions' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isObjectsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiShape} />\n          </SvgIcon>\n        ),\n        label: 'Objects',\n        onClick: () => this.props.changeState({ path: database.path, level: 'objects' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isStorageAllowed(protocol)) {\n      options.splice(1, 0, {\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiHexagonSlice2} />\n            </SvgIcon>\n          ),\n          label: 'Storage',\n          onClick: () => this.props.changeState({ path: database.path, level: 'storage' })\n        }\n      );\n    }\n\n    if (TopSqlStatementsUtil.isAllowedProtocol(protocol)) {\n      options.splice(2, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiFormatAlignTop} />\n          </SvgIcon>\n        ),\n        label: 'Top SQL statements',\n        onClick: () => this.props.changeState({ path: database.path, level: 'topsql' })\n      });\n\n      options.splice(options.length - 1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        ),\n        label: 'License reporting',\n        onClick: () => this.props.changeState({ path: database.path, level: 'license' })\n      });\n    }\n\n    return options;\n  };\n}\n\nAllDatabases.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllDatabases = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const [protocol, address] = path.split('--');\n    const server = retrieveServerEntry({ protocol, address }, structured);\n    const backups = state.explorer.dbLastBackup;\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      databases: (server && server.databases) || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveDbBackup: database => getBackup(database, backups),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database =>\n        getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllDatabases);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Overflow, Paper } from 'shared/components/layout';\nimport { Center, WorkloadGraph } from 'shared/components';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { JobResults } from 'shared/components/JobResults';\n\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\n\nimport './Workload.local.scss';\n\nexport class Workload extends React.PureComponent {\n  componentDidMount() {\n    this.getJobsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.storeState.path !== prevProps.storeState.path ||\n      this.props.globalFilters !== prevProps.globalFilters\n    ) {\n      this.getJobsData();\n    }\n  }\n\n  render() {\n    const {\n      jobs,\n      storeState: { path, level }\n    } = this.props;\n    const pageLevel = path.split('--').filter(e => e).length;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          {pageLevel === 3 && (\n            <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n          )}\n        </Paper.Header>\n        <Paper.Content>\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader>Loading jobs</Loader>\n            </Center>\n          ) : (\n            <>\n              {jobs.get('total_count') > 0 ? (\n                <>\n                  <div className=\"container\">\n                    <div className=\"graph-container\">\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                        isSingleDay={\n                          moment\n                            .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD') ===\n                          moment\n                            .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD')\n                        }\n                        setSingleDay={this.props.setGlobalFilters}\n                      />\n                    </div>\n                    <div className=\"jobs-container\">\n                      <Overflow>\n                        <JobResults jobs={jobs.get('content')} />\n                      </Overflow>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Center>Job list is empty</Center>\n              )}\n            </>\n          )}\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getJobsData() {\n    const {\n      storeState: { path }\n    } = this.props;\n    const levelFilters = path.split('--').filter(e => e);\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      protocol_filter: levelFilters[0],\n      shell_host_address_filter: levelFilters[1],\n      database_name_filter: levelFilters[2]\n    });\n  }\n}\n\nWorkload.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  jobs: object,\n  getJobs: func,\n  changeState: func\n};\n\nexport const ConnectedWorkload = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    jobs: jobsSelector(state)\n  }),\n  dispatch => ({\n    getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(Workload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, object } from 'prop-types';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { ConnectedReport } from './Report/Report';\nimport { getFullPath } from '../../store/selectors';\n\nimport './License.local.scss';\n\nexport class License extends React.PureComponent {\n  render() {\n    const {\n      storeState: { level, path },\n    } = this.props;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          <ConnectedReport />\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n}\n\nLicense.propTypes = {\n  storeState: object,\n  changeState: func,\n};\n\nexport const ConnectedLicense = connect(\n  state => ({\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state),\n    isLoading: state.explorer.flags.license.loading\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(License);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, func, object } from 'prop-types';\nimport classnames from 'classnames';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { getLicenseReportThunk } from '../../../store/thunks';\nimport { FeaturesUsage } from '../../../components/LicenseReporting/FeaturesUsage/FeaturesUsage';\nimport { UnusedFeatures } from '../../../components/LicenseReporting/UnusedFeatures/UnusedFeatures';\nimport { getFullPath } from '../../../store/selectors';\nimport { FeaturesTable } from '../../../components/LicenseReporting/FeaturesTable/FeaturesTable';\n\nimport './Report.local.scss';\n\nexport class Report extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolled: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getLicenseReport(this.props.fullPath);\n  }\n\n  render() {\n    const { scrolled } = this.state;\n    const { isLoading, reportData, reportTwo } = this.props;\n    return isLoading ? (\n      <Center>\n        <Loader>Loading report details</Loader>\n      </Center>\n    ) : (\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled\n        })}\n      >\n        <div className=\"container\" onWheel={event => this.onWheel(event)}>\n          {reportData && Object.keys(reportData.FEATURES).length > 0 && (\n            <FeaturesTable licenseFeatures={reportData.FEATURES} />\n          )}\n          <FeaturesUsage reportOne={reportData} reportTwo={reportTwo} />\n          <UnusedFeatures reportOne={reportData} reportTwo={reportTwo} />\n        </div>\n      </div>\n    );\n  }\n\n  onWheel = event => {\n    if (event.currentTarget.scrollTop) {\n      if (!this.state.scrolled) {\n        this.setState({ scrolled: true });\n      }\n    } else if (this.state.scrolled) {\n      this.setState({ scrolled: false });\n    }\n\n    scroller(event);\n  };\n}\n\nReport.propTypes = {\n  getLicenseReport: func,\n  isLoading: bool,\n  reportData: object,\n};\n\nexport const ConnectedReport = connect((state) => {\n  const reportData = state.explorer.reports.data;\n  return {\n    isLoading: state.explorer.flags.reports.loading,\n    fullPath: getFullPath(state),\n    reportData\n  };\n}, dispatch => ({\n  getLicenseReport: fullPath => dispatch(getLicenseReportThunk(fullPath))\n}))(Report);\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { object } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './FeaturesUsage.local.scss';\n\nexport class FeaturesUsage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n    return (\n      <div className=\"features-usage-container\">\n        <header>\n          <h1>License Features Usage</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.USED ?? {});\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          <div className=\"value single\">{feature[1].USAGES}</div>\n          <div className=\"label\">{feature[0]}</div>\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const comparableFeatures = {};\n    if (reportOne.USED && reportOne && reportOne.USED) {\n      const reportOneEntries = Object.entries(reportOne.USED);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        comparableFeatures[feature[0]].usage = [parseInt(feature[1].USAGES, 10)];\n        comparableFeatures[feature[0]].usage[1] = 0;\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportTwo.USED);\n\n      reportTwoEntries.map(feature => {\n        if (feature[0] in comparableFeatures) {\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        } else {\n          comparableFeatures[feature[0]] = {};\n          comparableFeatures[feature[0]].usage = [0];\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        }\n\n        return null;\n      });\n    }\n\n    const features = Object.entries(comparableFeatures);\n    return features.map(feature => {\n      return (\n        <LightTooltip\n          key={feature[0]}\n          placement=\"top\"\n          title={\n            <>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportOne.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[0]}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportTwo.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[1]}</div>\n              </div>\n            </>\n          }\n        >\n          <div className=\"feature\">\n            {this.getFeatureValue(\n              comparableFeatures[feature[0]].usage[0],\n              comparableFeatures[feature[0]].usage[1]\n            )}\n            <div className=\"label\">{feature[0]}</div>\n          </div>\n        </LightTooltip>\n      );\n    });\n  };\n\n  getFeatureValue = (rep1, rep2) => {\n    let valueNode = <div className=\"value lower\">{rep1 - rep2}</div>;\n\n    if (rep1 === rep2) {\n      valueNode = <div className=\"value equal\">=</div>;\n    } else if (rep2 > rep1) {\n      valueNode = <div className=\"value higher\">{rep2 - rep1}</div>;\n    }\n\n    return valueNode;\n  };\n}\n\nFeaturesUsage.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesUsage;\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n\n    '& .row': {\n      display: 'flex',\n\n      '& .value': {\n        paddingLeft: '15px',\n        marginLeft: 'auto',\n        fontWeight: '600'\n      }\n    }\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\n\nimport './UnusedFeatures.local.scss';\n\nexport class UnusedFeatures extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"unused-features-container\">\n        <header>\n          <h1>Unused features</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.UNUSED ?? {});\n\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          {feature[0]}\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const features = Object.keys(reportTwo.UNUSED);\n\n    const comparableFeatures = features.filter(feature => {\n      return reportOne.UNUSED[feature] !== undefined;\n    });\n\n    return comparableFeatures.map(feature => {\n      return (\n        <div key={feature} className=\"feature\">\n          {feature}\n        </div>\n      );\n    });\n  };\n}\n\nUnusedFeatures.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default UnusedFeatures;\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheckboxMarkedCircle, mdiCloseCircle } from '@mdi/js';\nimport moment from 'moment';\n\nimport './FeaturesTable.scss';\n\nconst columns = [\n  { label: 'Feature Name', sortKey: 'NAME' },\n  { label: 'Version' },\n  { label: 'Usages', sortKey: 'USAGES' },\n  { label: 'First Usage' },\n  { label: 'Last Usage' },\n  { label: 'Status', sortKey: 'STATUS' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"license-feature-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"license-feature-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index,) => (\n  <Table.Row hover key={`${row.NAME}_${index}`} className=\"license-feature-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.NAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.VERSION}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.DETECTED_USAGES}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.FIRST_USAGE_DATE).isValid() ? moment(row.FIRST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.LAST_USAGE_DATE).isValid() ? moment(row.LAST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        <div className=\"status-container\">\n          {row.CURRENTLY_USED === 'TRUE' ? (\n            <div className=\"status available\">\n              <SvgIcon>\n                <Icon path={mdiCheckboxMarkedCircle} />\n              </SvgIcon>\n              Available\n            </div>\n          ) : (\n            <div className=\"status unavailable\">\n              <SvgIcon>\n                <Icon path={mdiCloseCircle} />\n              </SvgIcon>\n              Unavailable\n            </div>\n          )}\n        </div>\n      </span>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ licenseFeatures, tableProps }) => {\n  return <Table {...tableProps}>{licenseFeatures.map((row, index) => rowRenderer(row, index))}</Table>;\n};\n\nexport class FeaturesTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'NAME', order: 'asc' },\n    };\n  }\n\n  render() {\n    const { licenseFeatures } = this.props;\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sorted = this.sortLicenseFeatures(licenseFeatures);\n\n    return (\n      <TableRenderer\n        licenseFeatures={sorted}\n        tableProps={tableProps}\n      />\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortLicenseFeatures = (licenseFeatures) => {\n    const { sortBehavior } = this.state;\n    const key = sortBehavior.sortKey;\n    const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n    switch (key) {\n      case 'NAME': {\n        return this.sortByName(licenseFeatures, orderMultiplier);\n      }\n      case 'USAGES': {\n        return this.sortByUsages(licenseFeatures, orderMultiplier);\n      }\n      case 'STATUS': {\n        return this.sortByStatus(licenseFeatures, orderMultiplier);\n      }\n      default:\n        return licenseFeatures;\n    }\n  };\n\n  sortByName = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.NAME.localeCompare(o2.NAME)) * order;\n    });\n  };\n\n  sortByUsages = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.DETECTED_USAGES - o2.DETECTED_USAGES) * order;\n    });\n  };\n\n  sortByStatus = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      const firstUsage = o1.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      const secondUsage = o2.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      return (firstUsage - secondUsage) * order;\n    });\n  };\n}\n\nFeaturesTable.propTypes = {\n  licenseFeatures: PropTypes.array,\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  changeStateThunk,\n  loadStorageDetailsThunk,\n  loadStoragePointsThunk,\n  setStorageItemThunk\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport { getFormattedStorage, getFullPath, getStorageDetailsData, haveStorageData } from '../../store/selectors';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { ConnectedMssqlStorage } from './MSSQL/MssqlStorage';\n\nconst Storage = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getStoragePoints,\n  getStorageDetails,\n  storagePoints,\n  storageDetails,\n  selectedItem,\n  setStorageItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  const isMssql = protocol === DbmsType.MSSQL;\n\n  useEffect(() => {\n    if (!storedEntries && !isMssql) {\n      getStoragePoints({ fullPath });\n      getStorageDetails({\n        selectedItem,\n        fullPath\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        {isMssql ? (\n          <ConnectedMssqlStorage />\n        ) : (\n          <DbObjects\n            loadingFlags={loadingFlags}\n            type={level}\n            data={storageDetails}\n            list={storagePoints}\n            selectedItem={selectedItem}\n            setItem={setStorageItem}\n            dbName={dbName}\n          />\n        )}\n      </Paper.Content>\n    </>\n  );\n};\n\nStorage.propTypes = {\n  storeState: PropTypes.object,\n  storagePoints: PropTypes.array,\n  storageDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setStorageItem: PropTypes.func,\n  selectedItem: PropTypes.string,\n  getStoragePoints: PropTypes.func\n};\n\nexport const ConnectedStorage = connect(\n  state => ({\n    storeState: state.explorer.state,\n    storagePoints: getFormattedStorage(state),\n    selectedItem: state.explorer.storage.selected,\n    loadingFlags: state.explorer.flags.storage,\n    storedEntries: haveStorageData(state),\n    storageDetails: getStorageDetailsData(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setStorageItem: path => dispatch(setStorageItemThunk(path)),\n    getStorageDetails: filters => dispatch(loadStorageDetailsThunk(filters)),\n    getStoragePoints: filters => dispatch(loadStoragePointsThunk(filters))\n  })\n)(Storage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getFullPath, getMssqlStorageDetails } from '../../../store/selectors';\nimport { loadMssqlStorageDataThunk } from '../../../store/thunks';\nimport PropTypes from 'prop-types';\nimport { LOAD_MSSQL_DISK_IO, LOAD_MSSQL_FILE_STORAGE, LOAD_MSSQL_STORAGE_USED } from '../../../store/actions';\nimport { Center, Table, LightTooltip } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\n\nimport './MssqlStorage.local.scss';\nimport { formatMemorySizeGb } from '../../../../license-collection/utils/formatMemoryZiseGb';\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"storage-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"storage-cell\">{name}</span>;\n};\n\nconst diskIOColumns = [\n  { label: 'Database Name' },\n  { label: 'Physical Name' },\n  { label: 'ID' },\n  { label: 'IO Stall' },\n  { label: 'IO Stall Queued Read' },\n  { label: 'IO Stall Queued Write' },\n  { label: 'IO Stall Read' },\n  { label: 'IO Stall Write' },\n  { label: 'Number of Bytes Read' },\n  { label: 'Number of Bytes Written' },\n  { label: 'Number of Reads' },\n  { label: 'Number of Writes' },\n  { label: 'Sample' },\n  { label: 'Size On Disk (GB)' },\n  { label: 'Type Desc' },\n];\n\nconst diskIOTableProps = { columns: diskIOColumns, sortBehavior: { sortKey: 'mockedColumn', order: 'desc' }, changeSort: () => {} };\n\nconst diskIORowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"storage-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_name} />\n    </Table.Cell>\n    <Table.Cell>{row.dbid}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_queued_read_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_queued_write_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_read_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_write_ms)}</Table.Cell>\n    <Table.Cell>{row.num_of_bytes_read}</Table.Cell>\n    <Table.Cell>{row.num_of_bytes_written}</Table.Cell>\n    <Table.Cell>{row.num_of_reads}</Table.Cell>\n    <Table.Cell>{row.num_of_writes}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.sample_ms)}</Table.Cell>\n    <Table.Cell>{formatMemorySizeGb(row.size_on_disk_bytes)}</Table.Cell>\n    <Table.Cell>{row.type_desc}</Table.Cell>\n  </Table.Row>\n);\n\nconst fileStorageColumns = [\n  { label: 'Name' },\n  { label: 'Physical Name' },\n  { label: 'Data Space ID' },\n  { label: 'File ID' },\n  { label: 'Growth' },\n  { label: 'Size' },\n  { label: 'Max Size' },\n  { label: 'State' },\n  { label: 'State Desc' },\n  { label: 'Type' },\n  { label: 'Type Desc' },\n];\n\nconst fileStorageTableProps = { columns: fileStorageColumns, sortBehavior: { sortKey: 'mockedColumn', order: 'desc' }, changeSort: () => {} };\n\nconst fileStorageRowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.name}_${index}`} className=\"storage-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.name} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_name} />\n    </Table.Cell>\n    <Table.Cell>{row.data_space_id}</Table.Cell>\n    <Table.Cell>{row.file_id}</Table.Cell>\n    <Table.Cell>{row.growth}</Table.Cell>\n    <Table.Cell>{row.size}</Table.Cell>\n    <Table.Cell>{row.max_size}</Table.Cell>\n    <Table.Cell>{row.state}</Table.Cell>\n    <Table.Cell>{row.state_desc}</Table.Cell>\n    <Table.Cell>{row.type}</Table.Cell>\n    <Table.Cell>{row.type_desc}</Table.Cell>\n  </Table.Row>\n);\n\nconst PieChartColors = [\n  '#176BA0', '#A6EAA5', '#E8F9F5', '#1AC9E6', '#6DF0D2',\n  '#7D3AC1', '#EA7369', '#1DE4BD', '#EF7E32', '#F0A58F',\n  '#C02323', '#DB4CB2', '#4C6BDB', '#F1DE2C', '#399137'\n];\n\nconst PieChartTooltip = (entry) => {\n  const { payload } = entry;\n  if (!payload.length) {\n    return '';\n  }\n  const { label, value } = payload[0].payload;\n  return (\n    <span className=\"pie-chart-tooltip\">{label}: {formatMemorySizeGb(value)} GB</span>\n  );\n};\n\nclass MssqlStorage extends React.PureComponent {\n  componentDidMount() {\n    const { fullPath, getMssqlStorageData } = this.props;\n    // timeouts needed for BE to be ready to process next request\n    getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.DiskFileIO', storageKey: LOAD_MSSQL_DISK_IO });\n    setTimeout(() => {\n      getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.StorageUsed', storageKey: LOAD_MSSQL_STORAGE_USED });\n    }, 1000);\n    setTimeout(() => {\n      getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.file_storage', storageKey: LOAD_MSSQL_FILE_STORAGE });\n    }, 2000);\n  }\n\n  render() {\n    const { storageData, loadingFlags } = this.props;\n    const dataLoading = loadingFlags.loadingDiskIO || loadingFlags.loadingStorageUsed || loadingFlags.loadingFileStorage;\n    const usedStorageInfo = storageData.storageUsed && storageData.storageUsed.length ? storageData.storageUsed[0] : null;\n    const hasFileStorageInfo = storageData.fileStorage && storageData.fileStorage.length;\n    const hasDiskIOInfo = storageData.diskIO && storageData.diskIO.length;\n    const hasAnyData = !!usedStorageInfo || hasDiskIOInfo || hasFileStorageInfo;\n    let storagePieData = [];\n\n    if (dataLoading) {\n      return (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      );\n    }\n\n    if (!hasAnyData) {\n      return (\n        <Center>\n          No Storage Data Available.\n        </Center>\n      );\n    }\n\n    if (hasDiskIOInfo) {\n      storagePieData = this.prepareStorageGraphData(storageData);\n    }\n\n    return (\n      <div className=\"mssql-storage-container\">\n        {usedStorageInfo ? (\n          <div className=\"mssql-storage-used\">\n            <div className=\"mssql-storage-used-label\">Database Size:</div>\n            <div className=\"mssql-storage-used-value\">{usedStorageInfo.database_size}</div>\n            <div className=\"mssql-storage-used-label\">Unallocated Space:</div>\n            <div className=\"mssql-storage-used-value\">{usedStorageInfo.unallocated_space}</div>\n          </div>\n        ) : ''}\n        {hasFileStorageInfo ? (\n          <div>\n            <h3 className=\"mssql-table-title\">File Storage</h3>\n            <Table {...fileStorageTableProps} className=\"table\">\n              {storageData.fileStorage.map((db, index) => fileStorageRowRenderer(db, index))}\n            </Table>\n          </div>\n        ) : '' }\n        {hasDiskIOInfo ? (\n          <>\n            <h3 className=\"mssql-table-title\">Disk IO</h3>\n            <Table {...diskIOTableProps} className=\"table\">\n              {storageData.diskIO.map((db, index) => diskIORowRenderer(db, index))}\n            </Table>\n            {storagePieData.length && (\n              <ResponsiveContainer height={400}>\n                <PieChart>\n                  <Pie data={storagePieData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={0} outerRadius={150}>\n                    {storagePieData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={PieChartColors[index]} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={PieChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            )}\n          </>\n        ) : ''}\n      </div>\n    );\n  }\n\n  prepareStorageGraphData = (storageData) => {\n    const logsStorageSize = storageData.diskIO\n      .filter((item) => item.type_desc === 'LOG')\n      .map((item) => item.size_on_disk_bytes)\n      .reduce((sum, item) => {\n        sum += +item;\n        return sum;\n      }, 0);\n\n    return storageData.diskIO\n      .filter((item) => item.type_desc === 'ROWS')\n      .map((item) => {\n        return {\n          label: item.Database_name,\n          value: item.size_on_disk_bytes\n        };\n      }).concat([{\n        label: 'All logs',\n        value: logsStorageSize\n      }]);\n  }\n}\n\nMssqlStorage.propTypes = {\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  getMssqlStorageData: PropTypes.func\n};\n\nexport const ConnectedMssqlStorage = connect(\n  state => ({\n    loadingFlags: state.explorer.flags.storage,\n    fullPath: getFullPath(state),\n    storageData: getMssqlStorageDetails(state)\n  }),\n  dispatch => ({\n    getMssqlStorageData: filters => dispatch(loadMssqlStorageDataThunk(filters))\n  })\n)(MssqlStorage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, objectsLoaderResolver, setSelectedObjectThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport {\n  getFullPath,\n  getInvalidObjects,\n  getStructuredObjects,\n  haveObjectsData,\n  objectsSelectorResolver\n} from '../../store/selectors';\n\nconst Objects = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getObjects,\n  objectsData,\n  invalidObjects,\n  objectDetails,\n  selectedItem,\n  setObjectsItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  useEffect(() => {\n    if (!storedEntries) {\n      getObjects({\n        fullPath,\n        protocol\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          invalidObjects={invalidObjects}\n          data={objectDetails}\n          list={objectsData}\n          selectedItem={selectedItem}\n          setItem={setObjectsItem}\n          dbName={dbName}\n          protocol={protocol}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nObjects.propTypes = {\n  storeState: PropTypes.object,\n  objectsData: PropTypes.array,\n  objectDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setObjectsItem: PropTypes.func,\n  selectedItem: PropTypes.object,\n  getObjects: PropTypes.func\n};\n\nexport const ConnectedObjects = connect(\n  state => {\n    const { state: { path } } = state.explorer;\n    const [protocol] = path.split('--');\n\n    return {\n      storeState: state.explorer.state,\n      objectsData: getStructuredObjects(state),\n      selectedItem: {\n        owner: state.explorer.objects.selectedOwner,\n        object: state.explorer.objects.selectedObject\n      },\n      loadingFlags: state.explorer.flags.objects,\n      objectDetails: objectsSelectorResolver(state, protocol),\n      invalidObjects: getInvalidObjects(state),\n      fullPath: getFullPath(state),\n      storedEntries: haveObjectsData(state)\n    };\n  },\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setObjectsItem: object => dispatch(setSelectedObjectThunk(object)),\n    getObjects: filters => dispatch(objectsLoaderResolver(filters))\n  })\n)(Objects);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  changeStateThunk,\n  disableSessionsLoadingFlag,\n  enableSessionsLoadingFlag,\n  sessionsLoaderResolver\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { Button } from 'shared/components/controls';\nimport { FormattedMessage } from 'react-intl';\nimport { getFullPath, getSortedSessions } from '../../store/selectors';\nimport { CommonSessionsTable } from './tables/CommonSessionsTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlSessionsTable } from './tables/MssqlSessionsTable';\nimport './Sessions.local.scss';\n\nexport class Sessions extends React.PureComponent {\n  componentDidMount() {\n    this.getSessionsData();\n  }\n\n  render() {\n    const {\n      level,\n      sessions,\n      isLoading,\n      changeTab,\n      fullPath,\n      enableLoadingFlag,\n      disableLoadingFlag,\n      storeState: { path }\n    } = this.props;\n\n    const [protocol] = path.split('--');\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol !== DbmsType.MSSQL && (\n            <CommonSessionsTable isLoading={isLoading} sessions={sessions} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlSessionsTable\n              isLoading={isLoading}\n              sessions={sessions}\n              dbms={fullPath}\n              refreshSessions={this.getSessionsData}\n              enableLoadingFlag={enableLoadingFlag}\n              disableLoadingFlag={disableLoadingFlag}\n            />\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getSessionsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getSessionsData = () => {\n    const {\n      fullPath,\n      storeState: { path }\n    } = this.props;\n    const [protocol] = path.split('--');\n\n    this.props.getSessions({\n      fullPath,\n      protocol,\n      page_size: 2147483645\n    });\n  };\n}\n\nSessions.propTypes = {\n  level: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  fullPath: PropTypes.string.isRequired,\n  changeTab: PropTypes.func\n};\n\nexport const ConnectedSessions = connect(\n  state => ({\n    sessions: getSortedSessions(state),\n    level: state.explorer.state.level,\n    isLoading: state.explorer.flags.sessions.loading,\n    fullPath: getFullPath(state),\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getSessions: filters => dispatch(sessionsLoaderResolver(filters)),\n    enableLoadingFlag: () => dispatch(enableSessionsLoadingFlag()),\n    disableLoadingFlag: () => dispatch(disableSessionsLoadingFlag())\n  })\n)(Sessions);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../Sessions.local.scss';\n\nconst columns = [\n  { label: 'Serial #' },\n  { label: 'Username' },\n  { label: 'Status' },\n  { label: 'Machine' },\n  { label: 'SID' },\n  { label: 'Logon time', sortKey: 'LOGON_TIME' },\n  { label: 'Program' },\n  { label: 'Type' }\n  // { label: '' } -> disabled view details button for now...\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row['SERIAL#']} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USERNAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATUS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MACHINE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.LOGON_TIME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PROGRAM} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.TYPE} />\n    </Table.Cell>\n    {/* <Table.Cell padding=\"none\" className=\"view-details\">\n      <LightTooltip placement=\"bottom\" title={<span>View Details</span>}>\n        <SvgIcon>\n          <Icon path={mdiViewCompact} />\n        </SvgIcon>\n      </LightTooltip>\n    </Table.Cell> */}\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map(rowRenderer)}</Table>;\n};\n\nexport class CommonSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'LOGON_TIME', order: 'asc' }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          noDataMessage=\"No Sessions Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.LOGON_TIME - o2.LOGON_TIME) * orderMultiplier;\n    });\n  }\n}\n\nCommonSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDelete } from '@mdi/js';\nimport { ConfirmationModal, ErrorModal } from '../../../../shared/components/overlays';\nimport { invocationOutputPoller, postInvocation } from '../../../../shared/api/invocation';\n\nimport '../Sessions.local.scss';\nimport './MssqlSessionsTable.local.scss';\n\nconst columns = [\n  { label: 'SPID', sortKey: 'spid' },\n  { label: 'ECID' },\n  { label: 'Status' },\n  { label: 'Login Name' },\n  { label: 'Host Name' },\n  { label: 'blk' },\n  { label: 'DB Name' },\n  { label: 'CMD' },\n  { label: 'Request ID' },\n  { label: 'Kill Session' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index, killSession) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.spid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ecid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.status} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.loginame} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.hostname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.blk} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.dbname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.cmd} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.request_id} />\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"icon-cell\">\n        {(row.hostname || '').trim().length > 0 && parseInt(row.spid, 10) >= 50 && (\n          <SvgIcon onClick={() => killSession(row.spid)}>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        )}\n      </div>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps, openKillSessionConfirmation }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map((row, index) => rowRenderer(row, index, (sessionId) => openKillSessionConfirmation(sessionId)))}</Table>;\n};\n\nexport class MssqlSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'spid', order: 'asc' },\n      killSessionConfirmationOpen: false,\n      sessionIdToKill: null\n    };\n\n    this.killSessionConfirmationActions = {\n      open: (sessionId) => {\n        this.setState({ killSessionConfirmationOpen: true, sessionIdToKill: sessionId });\n      },\n      close: () => {\n        this.setState({ killSessionConfirmationOpen: false, sessionIdToKill: null });\n      },\n      confirm: () => {\n        const { sessionIdToKill } = this.state;\n        this.props.enableLoadingFlag();\n        this.killSession(sessionIdToKill).then((result) => {\n          if (result) {\n            this.props.refreshSessions();\n          } else {\n            this.props.disableLoadingFlag();\n            this.killSessionErrorModalActions.open();\n          }\n        });\n      }\n    };\n\n    this.killSessionErrorModalActions = {\n      open: () => {\n        this.setState({ killSessionErrorOpen: true });\n      },\n      close: () => {\n        this.setState({ killSessionErrorOpen: false });\n      }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading,\n    } = this.props;\n\n    const { sortBehavior, killSessionConfirmationOpen, killSessionErrorOpen } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          openKillSessionConfirmation={(sessionId) => this.killSessionConfirmationActions.open(sessionId)}\n          noDataMessage=\"No Sessions Available\"\n        />\n        <ConfirmationModal open={killSessionConfirmationOpen} actions={this.killSessionConfirmationActions} message=\"Are you sure you want to kill this session?\" />\n        <ErrorModal open={killSessionErrorOpen} actions={this.killSessionErrorModalActions} message=\"Failed to kill this session. Please refresh the page and try again.\" />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.spid - o2.spid) * orderMultiplier;\n    });\n  };\n\n  killSession = async (sessionId) => {\n    const { dbms } = this.props;\n    const payload = {\n      parameters: {\n        session_id: sessionId,\n        dbconn: dbms,\n        oformat: 'JSON',\n        compact: true\n      },\n      process: 'dbatools.mssql.security.session_kill',\n      timestamp: null\n    };\n\n    const creationResult = await postInvocation(payload);\n    if (creationResult.invocations.length) {\n      const invocationUuid = creationResult.invocations[0].uuid;\n      return invocationOutputPoller(invocationUuid);\n    }\n    return Promise.resolve(null);\n  };\n}\n\nMssqlSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array,\n  dbms: PropTypes.string,\n  refreshSessions: PropTypes.func,\n  enableLoadingFlag: PropTypes.func,\n  disableLoadingFlag: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeStateThunk, loadTopSQLStatementsThunk } from '../../store/thunks';\nimport { getFullPath, selectTopSqlStatements } from '../../store/selectors';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '../../../shared/components/controls';\nimport { ElapsedTimeChart } from './charts/ElapsedTimeChart';\nimport { TopSqlStatementsUtil } from './TopSqlStatementsUtil';\nimport { OracleTopSQLTable } from './tables/OracleTopSQLTable';\nimport { PostgresTopSQLTable } from './tables/PostgresTopSQLTable';\nimport './TopSQLStatements.local.scss';\nimport { MysqlTopSQLTable } from './tables/MysqlTopSQLTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlTopSQLTable } from './tables/MssqlTopSQLTable';\n\nexport class TopSQLStatements extends React.PureComponent {\n  componentDidMount() {\n    this.getTopSqlStatementsData();\n  }\n\n  render() {\n    const {\n      storeState: { level, path },\n      topSqlStatements,\n      isLoading,\n      changeTab\n    } = this.props;\n\n    const [protocol] = path.split('--');\n    const elapsedTimeChartData = TopSqlStatementsUtil.isChartSupported(protocol) ? this.prepareChartData(topSqlStatements) : null;\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol === DbmsType.ORACLE && (\n            <OracleTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.POSTGRES && (\n            <PostgresTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MYSQL && (\n            <MysqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {TopSqlStatementsUtil.isChartSupported(protocol) && (\n            <div className=\"graph-container\">\n              {elapsedTimeChartData.length > 0 && (\n                <ElapsedTimeChart data={elapsedTimeChartData} />\n              )}\n            </div>\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getTopSqlStatementsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getTopSqlStatementsData = () => {\n    const {\n      storeState: { path },\n      fullPath\n    } = this.props;\n    const [protocol] = path.split('--');\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: TopSqlStatementsUtil.getEndpoint(protocol),\n      timestamp: null\n    };\n\n    this.props.getTopSqlStatements(payload);\n  };\n\n  prepareChartData = (topStatementsData) => {\n    return (topStatementsData || []).map((row) => {\n      const timeMillis = Math.round(row.ELAPSED_TIME / 1000);\n      const cpuTime = Math.round((timeMillis / 100) * row.PCT_CPU);\n      const ioTime = Math.round((timeMillis / 100) * row.PCT_IO);\n      return {\n        sqlId: row.SQL_ID,\n        timeMillisFull: timeMillis,\n        timeMillis: timeMillis - cpuTime - ioTime,\n        cpuTime,\n        ioTime,\n        cpuPercent: row.PCT_CPU,\n        ioPercent: row.PCT_IO\n      };\n    });\n  }\n}\n\nTopSQLStatements.propTypes = {\n  isLoading: PropTypes.bool,\n  getTopSqlStatements: PropTypes.func,\n  storeState: PropTypes.object,\n  topSqlStatements: PropTypes.array\n};\n\nexport const ConnectedTopSQLStatements = connect(\n  state => ({\n    topSqlStatements: selectTopSqlStatements(state),\n    isLoading: state.explorer.flags.topSqlStatements.loading,\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getTopSqlStatements: filters => dispatch(loadTopSQLStatementsThunk(filters))\n  })\n)(TopSQLStatements);\n","import React from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport './ElapsedTimeChart.local.scss';\n\nconst renderCustomXAxisTick = ({ x, y, payload }) => {\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-80)\">{payload.value}</text>\n    </g>\n  );\n};\n\nconst renderLegend = ({ payload }) => {\n  return (\n    <ul className=\"elapsed-time-chart-legend\">\n      {\n        (payload || []).map((entry, index) => (\n          <li className=\"legend-item\" key={`item-${index}`}>\n            <span className=\"icon\" style={{ backgroundColor: entry.color }} />\n            <span className=\"label\" style={{ color: entry.color }}>{entry.value}</span>\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nconst renderChartTooltip = (data) => {\n  if (!data || !data.payload || !data.payload.length) {\n    return '';\n  }\n\n  const [elapsedTimeData] = data.payload;\n  const { sqlId, timeMillisFull, cpuPercent, cpuTime, ioPercent, ioTime } = elapsedTimeData.payload;\n  return (\n    <div className=\"elapsed-time-chart-tooltip\">\n      <div className=\"row\"><strong className=\"label\">SQL ID: </strong><span className=\"value\">{sqlId}</span></div>\n      <div className=\"row\"><strong className=\"label\">Elapsed Time: </strong><span className=\"value\">{formatTimePeriod(timeMillisFull)}</span></div>\n      <div className=\"row\"><strong className=\"label\">CPU: </strong><span className=\"value\">{cpuPercent}% ({formatTimePeriod(cpuTime)})</span></div>\n      <div className=\"row\"><strong className=\"label\">I/O: </strong><span className=\"value\">{ioPercent}% {ioPercent > 0 ? `(${formatTimePeriod(ioTime)})` : ''}</span></div>\n    </div>\n  );\n};\n\nexport const ElapsedTimeChart = ({ data }) => {\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data} margin={{ top: 50, right: 30, left: 70, bottom: 100 }} barGap={-10}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <Legend content={renderLegend} align=\"right\" verticalAlign=\"top\" layout=\"vertical\" width={200} />\n        <Tooltip content={renderChartTooltip} cursor={{ fill: '#eeeeee' }} />\n\n        <XAxis dataKey=\"sqlId\" axisLine=\"false\" interval={0} tick={renderCustomXAxisTick} />\n        <YAxis dataKey=\"timeMillisFull\" domain={['auto', 'auto']} tickFormatter={tick => formatTimePeriod(tick)} />\n\n        <Bar dataKey=\"cpuTime\" stackId=\"common\" name=\"CPU, %\" fill=\"#1ac9e6\" />\n        <Bar dataKey=\"ioTime\" stackId=\"common\" name=\"I/O, %\" fill=\"#c02323\" />\n        <Bar dataKey=\"timeMillis\" stackId=\"common\" name=\"Elapsed Time\" fill=\"#176BA0\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'SQL ID' },\n  { label: 'Child Number' },\n  { label: 'SQL Text' },\n  { label: 'Module' },\n  { label: 'Executions' },\n  { label: 'Elapsed Time', sortKey: 'ELAPSED_TIME' },\n  { label: 'Elapsed Per Exec' },\n  { label: 'CPU, %' },\n  { label: 'I/O, %' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESS_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SQL_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.CHILD_NUMBER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_TEXT); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_TEXT} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MODULE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.EXECUTIONS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_PER_EXEC, 10)))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_CPU} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_IO} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class OracleTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'ELAPSED_TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.ELAPSED_TIME - o2.ELAPSED_TIME) * orderMultiplier;\n    });\n  }\n}\n\nOracleTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'User ID' },\n  { label: 'Query ID' },\n  { label: 'Query' },\n  { label: 'Executions' },\n  { label: 'Average Time', sortKey: 'avg_time_ms' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.queryid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.userid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.queryid} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.query); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.query} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.calls} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.avg_time_ms, 10))} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class PostgresTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'avg_time_ms', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.avg_time_ms - o2.avg_time_ms) * orderMultiplier;\n    });\n  }\n}\n\nPostgresTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'User' },\n  { label: 'SQL Text' },\n  { label: 'Elapsed Time', sortKey: 'TIME' },\n  { label: 'State' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.SESSION_ID}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESSION_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_Text); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_Text} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATE} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MysqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.TIME - o2.TIME) * orderMultiplier;\n    });\n  }\n}\n\nMysqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Database Name' },\n  { label: 'SQL Text' },\n  { label: 'Executions' },\n  { label: 'Total CPU Time' },\n  { label: 'Avg CPU Time' },\n  { label: 'Max Elapsed Time', sortKey: 'MaxElapsedTime' },\n  { label: 'Avg Elapsed Time' },\n  { label: 'Logical Reads' },\n  { label: 'Physical Reads' },\n  { label: 'Logical Writes' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.QueryName); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.QueryName} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ExecutionCount} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row['Total_CPU_Time(second)'], 10) * 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row['Average_CPU_Time(milisecond)'], 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.MaxElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.AvgElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.Logical_Reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.logical_writes} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MssqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'MaxElapsedTime', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.MaxElapsedTime - o2.MaxElapsedTime) * orderMultiplier;\n    });\n  }\n}\n\nMssqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiTable, mdiViewComfy } from '@mdi/js';\nimport { SystemExplorerViewMode } from './SystemExplorerViewMode';\n\nimport './ToggleSystemExplorerView.local.scss';\n\nexport const ToggleSystemExplorerView = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Table View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TABLE\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TABLE)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiTable} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Tiles View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TILES\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TILES)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiViewComfy} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../shared/components';\nimport { array, func } from 'prop-types';\nimport { Paper } from '../../../shared/components/layout';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { connect } from 'react-redux';\nimport { getDBStatus, getDBStatusInfo, getEntityPendingStatus, getServerStatus } from '../../store/selectors';\nimport { StatusLabel } from '../StatusLabel/StatusLabel';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { Button } from 'shared/components/controls';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport Refresh from '@material-ui/icons/Refresh';\nimport { Loader } from '../../../shared/components/loaders';\nimport { AddServerCard } from '../../containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../containers/ImportCSV/ImportCSV';\nimport { DatabaseSettings } from '../../containers/Settings/DatabaseSettings';\n\nimport './SystemExplorerTable.local.scss';\n\nconst HostnameCellWithTooltip = ({ name }) => {\n  if (name && name.length > 15) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"hostname-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"hostname-cell\">{name}</span>;\n};\n\nconst columns = [\n  { label: 'Hostname' },\n  { label: 'Server' },\n  { label: 'Port', align: 'center' },\n  { label: 'User', align: 'center' },\n  { label: 'Server Status', align: 'center' },\n  { label: 'Database Status', align: 'center' },\n  { label: 'Workload', align: 'center' },\n  { label: 'Session', align: 'center' },\n  { label: 'Top SQL', align: 'center' },\n  { label: 'Objects', align: 'center' },\n  { label: 'Storage', align: 'center' },\n];\n\nconst rowRenderer = (database, index, isChecked, updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails) => (\n  <Table.Row hover key={`${database.name}_${index}`} className=\"statement-row\">\n    <Table.Cell padding=\"checkbox\">\n      <Checkbox\n        onChange={(event) => updateSelection(database, event.target.checked)}\n        checked={isChecked}\n        size=\"small\"\n        color=\"primary\"\n        classes={{ root: 'checkbox-custom' }}\n      />\n    </Table.Cell>\n    <Table.Cell padding=\"none\" className=\"host-cell\">\n      <HostnameCellWithTooltip name={SystemExplorerFeatureUtil.splitAccountName(database.name)} />\n    </Table.Cell>\n    <Table.Cell className=\"address-cell\">\n      {database.address}\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"centered-cell\">{database.port}</div>\n    </Table.Cell>\n    <Table.Cell className=\"user-cell\">\n      <div className=\"centered-cell\">{database.user}</div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveServerStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveDbStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isWorkloadAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'workload' })}>\n          <Icon path={mdiChartTimelineVariant} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isSessionsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'sessions' })}>\n          <Icon path={mdiCheckboxMultipleBlankOutline} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isTopSqlAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'topsql' })}>\n          <Icon path={mdiFormatAlignTop} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isObjectsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'objects' })}>\n          <Icon path={mdiShape} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isStorageAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'storage' })}>\n          <Icon path={mdiHexagonSlice2} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    {SystemExplorerFeatureUtil.isLicenseReportingAllowed(database.protocol) && (\n      <Table.Cell>\n        <div className=\"icon-cell\">\n          <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'license' })}>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        </div>\n      </Table.Cell>\n    )}\n  </Table.Row>\n);\n\nconst testConnectionsTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={clickHandler}\n      startIcon={<Refresh />}\n      classes={{ root: 'green-btn toolbar-btn' }}\n      disabled={isDisabled}\n    >\n      Test Connection\n    </Button>\n  );\n};\n\nconst addServerTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Add New Server\n    </Button>\n  );\n};\n\nconst addDatabaseTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Add New Database\n    </Button>\n  );\n};\n\nconst importCsvTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Import from CSV\n    </Button>\n  );\n};\n\nconst editDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'yellow-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled}\n    >\n      Edit Database\n    </Button>\n  );\n};\n\nconst deleteDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'red-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled}\n    >\n      Delete Database\n    </Button>\n  );\n};\n\nclass SystemExplorerTable extends React.PureComponent {\n  allGroups = [];\n\n  allDatabases = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDbs: []\n    };\n\n    const { data } = this.props;\n    this.allGroups =\n      data.filter(protocolGroup => protocolGroup.databases && protocolGroup.databases.length)\n          .sort((group1, group2) => {\n            return SystemExplorerFeatureUtil.getListOrder(group2.protocol) - SystemExplorerFeatureUtil.getListOrder(group1.protocol);\n          });\n\n    this.allDatabases = this.allGroups.reduce((acc, protocolGroup) => {\n      acc = acc.concat(protocolGroup.databases);\n      return acc;\n    }, []);\n  }\n\n  render() {\n    const {\n      switchToTileView,\n      retrieveDbStatus,\n      retrieveServerStatus,\n      retrievePendingStatus,\n      reloadAccounts,\n      changeState\n    } = this.props;\n    const { selectedDbs } = this.state;\n    const navigateToDetails = (detailsPageParams) => {\n      changeState(detailsPageParams);\n      switchToTileView();\n    };\n\n    return (\n      <Paper>\n        <Paper.Header>\n          <div className=\"system-explorer-table-view\">\n            <div className=\"system-explorer-table-toolbar\">\n              {testConnectionsTrigger(this.testConnections, !selectedDbs.length)}\n              <AddServerCard trigger={addServerTrigger} />\n              <AddDatabaseCard trigger={addDatabaseTrigger} />\n              <ImportCSV trigger={importCsvTrigger} />\n              <DatabaseSettings\n                database={this.getFirstDatabase()}\n                disabled={!this.hasSingleSelection()}\n                editDbTrigger={editDatabaseTrigger}\n                deleteDbTrigger={deleteDatabaseTrigger}\n                reloadAccounts={reloadAccounts}\n              />\n            </div>\n          </div>\n        </Paper.Header>\n        <Paper.Content>\n          <div className=\"system-explorer-table-content\">\n            {this.allGroups.map(protocolGroup => {\n              const columnsConfig = JSON.parse(JSON.stringify(columns));\n              columnsConfig.unshift({ component: this.createCheckboxHeaderColumnConfig(protocolGroup), padding: 'checkbox' });\n              if (SystemExplorerFeatureUtil.isLicenseReportingAllowed(protocolGroup.protocol)) {\n                columnsConfig.push({ label: 'License Reporting', align: 'center' });\n              }\n              const tableProps = { columns: columnsConfig };\n              return (\n                <>\n                  <h3 className=\"protocol-header\">{protocolGroup.protocol}</h3>\n                  <Table {...tableProps} className=\"table\">\n                    {(protocolGroup.databases || []).map((db, index) =>\n                      rowRenderer(db, index, this.isDbSelected(db), this.updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails))}\n                  </Table>\n                </>\n              );\n            })}\n          </div>\n        </Paper.Content>\n      </Paper>\n    );\n  }\n\n  createCheckboxHeaderColumnConfig = (protocolGroup) => {\n    return () => {\n      return (\n        <Checkbox\n          size=\"small\"\n          color=\"primary\"\n          onChange={(event) => this.toggleDbsSelectionByProtocol(event, protocolGroup)}\n          checked={this.isAllDbsByProtocolSelected(protocolGroup.protocol)}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      );\n    };\n  };\n\n  updateSelection = (database, isChecked) => {\n    const { selectedDbs } = this.state;\n    const dbIndex = selectedDbs.findIndex((db) => db.name === database.name);\n\n    if (isChecked && dbIndex === -1) {\n      selectedDbs.push(database);\n    } else if (dbIndex !== -1) {\n      selectedDbs.splice(dbIndex, 1);\n    }\n\n    this.setState({ selectedDbs });\n    this.forceUpdate();\n  };\n\n  toggleDbsSelectionByProtocol = (event, protocolGroup) => {\n    const shouldAddAll = !this.isAllDbsByProtocolSelected(protocolGroup.protocol);\n    const { selectedDbs } = this.state;\n    const allWithoutCurrent = this.clearDbsByProtocol(selectedDbs, protocolGroup.protocol);\n\n    if (shouldAddAll) {\n     this.setState({ selectedDbs: [...allWithoutCurrent, ...protocolGroup.databases] });\n    } else {\n      this.setState({ selectedDbs: [...allWithoutCurrent] });\n    }\n    this.forceUpdate();\n  };\n\n  clearDbsByProtocol = (dbs, protocol) => {\n    return dbs.filter((db) => db.protocol !== protocol);\n  };\n\n  isAllDbsByProtocolSelected = (protocol) => {\n    const allByProtocol = this.allDatabases.filter((db) => db.protocol === protocol);\n    const selectedByProtocol = (this.state.selectedDbs || []).filter((db) => db.protocol === protocol);\n    return allByProtocol.length === selectedByProtocol.length;\n  }\n\n  testConnections = () => {\n    const { selectedDbs } = this.state;\n    const { refreshDatabaseStatus } = this.props;\n    (selectedDbs || []).forEach(db => refreshDatabaseStatus(db));\n  };\n\n  isDbSelected = (db) => {\n    const { selectedDbs } = this.state;\n    return selectedDbs.some((selected) => selected.name === db.name);\n  };\n\n  hasSingleSelection = () => {\n    const { selectedDbs } = this.state;\n    return !!selectedDbs && selectedDbs.length === 1;\n  };\n\n  getFirstDatabase = () => {\n    const { selectedDbs } = this.state;\n    return this.hasSingleSelection() ? selectedDbs[0] : null;\n  };\n}\n\nSystemExplorerTable.propTypes = {\n  data: array,\n  switchToTileView: func\n};\n\nexport const ConnectedSystemExplorerTable = connect(\n  state => {\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      statuses,\n      retrieveServerStatus: server => getServerStatus(server, statuses),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database => getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(SystemExplorerTable);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postCompile() {\n  return RestClient.post('/compile');\n}\n","module.exports = __webpack_public_path__ + \"svgs/6842f8a8cfcb1999b9a1e64174e25a11.svg\";","module.exports = __webpack_public_path__ + \"svgs/727bf5a83867f2c49ff66ab6df50ae78.svg\";","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport './job-process.local.scss';\n\nimport { getInvocation } from './store/selectors';\nimport { invocationPoller } from './store/tasks';\nimport { AllowOutputFor } from './store/constants';\n\nimport JobForm from './job-form';\n\nimport { JobOutput } from './containers/output/output';\nimport { JobStatus } from './components/JobStatus/JobStatus';\n\nexport const JobView = ({ invocation, redirected }) => {\n  const [tab, setTab] = useState('details');\n\n  useEffect(() => {\n    invocationPoller.start();\n\n    return function stopPolling() {\n      invocationPoller.stop();\n    };\n  }, [invocation.status]);\n\n  if (!invocation || invocation.status === 'NOT_FETCHED') {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Fetching invocation</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <ViewTabs invocation={invocation} active={tab} changeTab={setTab} />\n        <JobStatus />\n      </Paper.Header>\n      <Switch value={tab}>\n        <Switch.Case value=\"details\">\n          <JobForm redirected={redirected} />\n        </Switch.Case>\n        <Switch.Case value=\"output\">\n          <JobOutput />\n        </Switch.Case>\n      </Switch>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    invocation: getInvocation(state)\n  };\n}, {})(JobView);\n\nfunction ViewTabs({ active, changeTab, invocation }) {\n  const withOutput = AllowOutputFor.includes(invocation.status);\n  const tabs = [{ label: 'Job Details', value: 'details', active: true }];\n  if (withOutput) {\n    tabs.push({ label: 'Output', value: 'output' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { isEmpty, pickBy } from 'lodash';\n\nimport moment from 'moment';\n\nimport { Switch } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { Notifications } from './containers/notifications/notifications';\n\nimport { Formik, Form } from 'formik';\n\nimport { Text, Date, Time } from 'shared/components/form/editors/Generic';\nimport { PlatformSelect, ProcessTypeSelect, ProcessSelect, PLATFORMS, PROCESS_TYPES } from 'shared/components/form/editors/Custom';\n\nimport { Button } from 'shared/components/controls';\n\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nimport './job-process.local.scss';\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { getCurrentUserName } from '../session/store/selectors';\n\nimport { getInvocation } from './store/selectors';\nimport { AllowGeneralEditingFor, InvocationStatus } from './store/constants';\n\nimport { postInvocation } from 'shared/api/invocation';\n\nimport { ProcessParameters } from './job-parameters';\n\nimport { Schedule } from 'jobs/containers/Schedule/Schedule';\nimport { ConnectedDeleteJobModal } from 'jobs/actions/delete/DeleteJobModal';\n\nconst JobForm = ({ loggedInAs, invocation, redirected }) => {\n  const history = useHistory();\n\n  const [editable, setEditable] = useState(AllowGeneralEditingFor.includes(invocation.status));\n\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const { initialValues, disabledFields } = deriveFormState(invocation, editable);\n\n  const availableProcess = (platformVal, typeVal, processVal) => {\n    const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n    const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n    const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n    const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n    return (platformMatches && typeMatches) ? processVal : '';\n  };\n\n  const userValue = editable ? loggedInAs : invocation.user_owner;\n  const dateValue = editable\n    ? moment()\n        .utc()\n        .format('MM/DD/YYYY')\n    : moment(invocation.date_invoke).format('MM/DD/YYYY');\n  const timeValue = editable\n    ? moment()\n        .utc()\n        .format('HH:mm')\n    : moment(invocation.date_invoke).format('HH:mm');\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n\n  const extraValidations = values => {\n    const errors = {};\n    const { date_invoke, time_invoke } = values;\n\n    if (!moment(date_invoke).isValid()) {\n      errors.date_invoke = 'Invalid date format';\n    }\n\n    if (!/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/.test(time_invoke)) {\n      errors.time_invoke = 'Invalid time format';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(true);\n          handleJobCreation(values, monitor).then(({ result, invocations }) => {\n            if (result === 'success') {\n              const { uuid } = invocations[0];\n\n              history.push(`/jobs/job?invocation=${uuid}`);\n            }\n          });\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Column xs={4}>\n                          <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(value, formik.values.type, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.platform || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessTypeSelect\n                            name=\"type\"\n                            label=\"Type\"\n                            description=\"Select a type to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(formik.values.platform, value, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.type || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessSelect\n                            name=\"process\"\n                            label=\"Process\"\n                            value={invocation.process}\n                            required\n                            disabled={disabledFields.process || !editable || redirected}\n                          />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column xs={3}>\n                          <Date\n                            name=\"date_invoke\"\n                            label=\"Date\"\n                            disabled={!editable}\n                            value={dateValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Time\n                            name=\"time_invoke\"\n                            label=\"MAS system time (UTC)\"\n                            disabled={!editable}\n                            value={timeValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Text name=\"job_user\" label=\"User\" required disabled value={userValue} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation.parameters} editable={editable} />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row spacing={3}>\n                        <Column xs={12}>\n                          <Notifications\n                            name=\"notifications\"\n                            key={invocation.uuid}\n                            disabled={!editable}\n                            recievedData={derivedMonitor}\n                            onApply={n_state => {\n                              if (n_state.events === 0 || isEmpty(n_state.users)) {\n                                setMonitor({\n                                  enabled: false\n                                });\n                              }\n                              setMonitor({\n                                enabled: true,\n                                ...n_state\n                              });\n                            }}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <a href=\"/ui/#/jobs/\">\n                  <Button>Cancel</Button>\n                  </a>\n                  {invocation.status === 'DELAYED' && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setOpen(true);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  )}\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <FormVerbs\n                    status={invocation.status}\n                    editable={editable}\n                    setEditable={setEditable}\n                    monitor={monitor}\n                    invocation={invocation}\n                  />\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={invocation.uuid} />\n      )}\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    loggedInAs: getCurrentUserName(state),\n    invocation: getInvocation(state)\n  };\n}, {})(JobForm);\n\n/* eslint-disable no-unused-vars */\nfunction FormVerbs({ status, editable, setEditable, monitor, invocation }) {\n  const makeEditable = () => setEditable(true);\n\n  return (\n    <Switch value={editable}>\n      <Switch.Case value>\n        <SubmitButton>{monitor.enabled ? 'Monitor' : 'Run'}</SubmitButton>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Schedule invocation={invocation} />\n          <Button onClick={makeEditable}>Edit</Button>\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n}\n\nfunction handleJobCreation(values, monitor) {\n  const {\n    process,\n    platform,\n    type,\n    date_invoke,\n    time_invoke,\n    job_user,\n    ...params_with_maybe_replvars\n  } = values;\n  const sendable = {};\n\n  const { parameters, replvars } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (date_invoke) {\n    const dateMoment = moment(date_invoke, 'MM/DD/YYYY');\n\n    const timeMoment = time_invoke ? moment(time_invoke, 'hh:mm') : moment();\n    const currentDate = moment()\n      .utc()\n      .set('second', 0)\n      .format('YYYY-MM-DDTHH:mm:ss');\n\n    const date = dateMoment.format('YYYY-MM-DD');\n    const time = timeMoment.format('HH:mm');\n    const dateTime = moment(date + ' ' + time, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DDTHH:mm:ss'); // eslint-disable-line prefer-template\n\n    const duration = moment.duration(\n      moment(dateTime, 'YYYY-MM-DD HH:mm').diff(moment(currentDate, 'YYYY-MM-DD HH:mm'))\n    );\n    const minutes = duration.asMinutes();\n\n    if (minutes > 0) {\n      sendable.timestamp = dateTime;\n    } else {\n      sendable.timestamp = null;\n    }\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    sendable.process = 'mas.sys.invocation.notify.create';\n\n    sendable.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      when: sendable.timestamp,\n      events: monitor.events,\n      users: monitor.users\n    };\n\n    sendable.timestamp = null;\n  } else {\n    sendable.process = process;\n\n    sendable.parameters = pickBy(parameters, rejector);\n  }\n\n  return postInvocation(sendable);\n}\n\nfunction deriveFormState(invocation) {\n  const values = {\n    platform: '',\n    type: '',\n    process: invocation.process,\n    parameters: { ...invocation.parameters }\n  };\n  const disabledFields = {\n    ...(invocation.status !== InvocationStatus.NEW && {\n      platform: true,\n      type: true,\n      process: true,\n      user: true,\n      parameters: true\n    })\n  };\n\n  return { initialValues: values, disabledFields };\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  } else if (values['fqname--fqname']) {\n    if (values['fqname--namespace']) {\n      values.fqname = `${values['fqname--namespace']}.${values['fqname--fqname']}`;\n    } else {\n      values.fqname = values['fqname--fqname'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--fqname'];\n  }\n  return values;\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Paper } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\nimport { useSelector } from 'react-redux';\nimport { getInvocation } from '../../store/selectors';\nimport { InvocationStatus } from '../../store/constants';\nimport { ListOutput } from '../../components/ListOutput/ListOutput';\nimport { fetchInvocationOutput } from 'shared/api/invocation';\nimport { sendToEmail } from 'license-collection/utils/sendToEmail';\nimport { copyToClipboard } from 'license-collection/utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './output.scss';\n\nfunction noOutput(invocation = {}) {\n  return [\n    {\n      data: {\n        text: 'No output to display.\\n'\n      }\n    },\n    {\n      data: {\n        text: `Status: ${invocation.status}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Process: ${invocation.process}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Invocation: ${invocation.uuid}\\n`\n      }\n    }\n  ];\n}\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const JobOutput = () => {\n  const invocation = useSelector(getInvocation);\n\n  const [loading, setLoading] = React.useState(true);\n  const [output, setOutput] = React.useState(noOutput(invocation));\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = React.useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  React.useEffect(() => {\n    fetchInvocationOutput(invocation.uuid)\n      .then(({ data }) => {\n        const recieved = data.data.outputs;\n\n        if (recieved && recieved.length) {\n          setOutput(recieved);\n        } else {\n          setOutput(noOutput(invocation));\n        }\n\n        setLoading(false);\n      })\n      .catch(() => {\n        setOutput(noOutput(invocation));\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const outputType = invocation.status === InvocationStatus.FAILED ? 'fail' : 'normal';\n\n  const monitoring = output?.[0]?.data?.text?.match?.(\n    /{\"process\": {\"uuid\": \"([0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12})\",/\n  )?.[1];\n\n  console.log(monitoring); // eslint-disable-line\n\n  return (\n    <>\n      <Paper.Content scrollable>\n        <ListOutput\n          type={outputType}\n          output={output}\n          outputFormat={invocation.parameters.oformat}\n          errors={invocation.errors}\n          monitoring={monitoring}\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"primary\"\n            onClick={() => onSendByEmail(invocation, output, invocation.process, modalActions)}\n          >\n            Send to email\n          </Button>\n          <Button color=\"primary\" onClick={() => copyToClipboard(output, invocation)}>\n            Copy to clipboard\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n      <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n    </>\n  );\n};\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nimport './ListOutput.local.scss';\nimport ReactJson from 'react-json-view';\n\nexport const ListOutput = ({ output, type, outputFormat, errors, monitoring }) => {\n  let content;\n  let preparedJSON;\n\n  if (outputFormat === 'JSON') {\n    const [, jsonString] = (output[0].data.text || '').split('\\n');\n    try {\n      preparedJSON = JSON.parse(jsonString);\n    } catch (error) {\n      preparedJSON = null;\n    }\n  }\n\n  if (monitoring) {\n    return (\n      <div className=\"list\">\n        <h3>Monitor</h3>\n        <p>Invocation id: {monitoring}</p>\n        <Button to={`/jobs/job?invocation=${monitoring}`} color=\"primary\">\n          Go to Monitored Invocation\n        </Button>\n      </div>\n    );\n  }\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          <code>\n            <pre>{errors.join('\\n')}</pre>\n          </code>\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              <code>\n                <pre>{output.map(row => row.data.text).join('')}</pre>\n              </code>\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else if (preparedJSON) {\n    content = (\n      <div className=\"list\">\n        <ReactJson\n          src={preparedJSON}\n          enableClipboard={false}\n          displayObjectSize={false}\n          displayDataTypes={false}\n        />\n      </div>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        <code>\n          <pre>{output.map(row => row.data.text).join('')}</pre>\n        </code>\n      </div>\n    );\n  }\n\n  return content;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { want } from 'shared/lib/want';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiTimelineClock,\n  mdiCancel,\n  mdiAlertRhombusOutline,\n  mdiStopCircleOutline\n} from '@mdi/js';\n\nimport { getInvocationStatus } from '../../store/selectors';\nimport {\n  InvocationStatus,\n  CannotShowStatusFor,\n  FAILURES,\n  SUCESSES,\n  WARNINGS\n} from '../../store/constants';\n\nimport './JobStatus.local.scss';\n\nexport const JobStatus = () => {\n  const STATUS = useSelector(getInvocationStatus);\n  const ignore = CannotShowStatusFor.includes(STATUS);\n\n  if (ignore) {\n    return null;\n  }\n\n  return (\n    <div className=\"status-label\" style={{ background: wantStatusColor(STATUS) }}>\n      <SvgIcon fontSize=\"inherit\" color=\"inherit\">\n        <path d={wantStatusIcon(STATUS)} />\n      </SvgIcon>\n      <span className=\"status-label-text\">{STATUS}</span>\n    </div>\n  );\n};\n\nconst wantStatusIcon = want(\n  {\n    [InvocationStatus.EXECUTING]: mdiProgressClock,\n    [InvocationStatus.SUCCEEDED]: mdiCheckCircleOutline,\n    [InvocationStatus.DELAYED]: mdiTimelineClock,\n    [InvocationStatus.SCHEDULED]: mdiCalendarArrowRight,\n    [InvocationStatus.KILLED]: mdiCancel,\n    [InvocationStatus.FAILED]: mdiAlertRhombusOutline,\n    [InvocationStatus.ABORTED]: mdiStopCircleOutline\n  },\n  '',\n  status => status\n);\n\nconst wantStatusColor = want(\n  {\n    fail: '#ED3A4A',\n    warning: '#F1BD5C',\n    success: '#34CC88'\n  },\n  '#3765AF', // progress blue color for unresolved statuses\n  status => {\n    if (FAILURES.includes(status)) {\n      return 'fail';\n    }\n\n    if (SUCESSES.includes(status)) {\n      return 'success';\n    }\n\n    if (WARNINGS.includes(status)) {\n      return 'warning';\n    }\n  }\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Center, Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Header } from 'core/components/Header/Header';\nimport { RefreshDashboard } from './components/RefreshDashboard/RefreshDashboard';\nimport { ToggleDashboard } from './components/ToggleDashboard/ToggleDashboard';\nimport { ConnectedToggleSelection } from './containers/ToggleSelection/ToggleSelection';\nimport { ConnectedServersNetworkTile } from './components/ServersNetworkTile/ServersNetworkTile';\nimport { ConnectedLicensableFeaturesTile } from './components/LicensableFeaturesGraph/LicensableFeaturesTile';\nimport { ConnectedOperatingSystemsTile } from './components/OperatingSystemsTile/OperatingSystemsTile';\nimport { ConnectedLicenseDeltaTile } from './components/LicenseDeltaTile/LicenseDeltaTile';\n\nimport './ExecutiveDashboard.local.scss';\n\nfunction ExecutiveDashboard({\n  isLoading,\n  callFailed,\n}) {\n  const [dashboardType, setDashboardType] = useState('physical');\n  const [selectedServer, setSelectedServer] = useState(null);\n\n  function refreshDashboard() {\n    setSelectedServer(null);\n  }\n\n  function changeDashboard(type) {\n    setDashboardType(type);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / Executive Dashboard\">\n        {!isLoading && !callFailed && (\n          <div className=\"header-actions-container\">\n            {dashboardType === 'physical' && <ConnectedToggleSelection />}\n            <RefreshDashboard onClickCallback={refreshDashboard} />\n            <div className=\"separator\" />\n            <ToggleDashboard active={dashboardType} onClickCallback={changeDashboard} />\n          </div>\n        )}\n      </Header>\n      <Main mdPage>\n        <Switch value={isLoading}>\n          <Switch.Case value>\n            <Center>\n              <Loader>Loading Executive Dashboard...</Loader>\n            </Center>\n          </Switch.Case>\n          <Switch.Case value={false}>\n            <Switch value={callFailed}>\n              <Switch.Case value>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load Executive Dashboard data. Please refresh the page and try again.\n                  </Result.Text>\n                </Result>\n              </Switch.Case>\n              <Switch.Case value={false}>\n                <div className=\"widgets-container\">\n                  <div className=\"widget\">\n                    <ConnectedLicensableFeaturesTile selectedServer={selectedServer} />\n                  </div>\n                  <div className=\"widget\">\n                    <ConnectedServersNetworkTile selectedServer={selectedServer} onServerChanged={(serverId) => setSelectedServer(serverId)} />\n                  </div>\n                  <div className=\"widget\">\n                    <ConnectedLicenseDeltaTile selectedServer={selectedServer} />\n                  </div>\n                  <div className=\"widget\">\n                    <ConnectedOperatingSystemsTile selectedServer={selectedServer} />\n                  </div>\n                </div>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Main>\n    </>\n  );\n}\n\nexport const ConnectedExecutiveDashboard = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.dashboard.loading ||\n        state.executiveDashboard.flags.virtual.loading,\n      callFailed: state.executiveDashboard.flags.dashboard.callFailed,\n      selected: state.executiveDashboard.selectedServers.length,\n      rawEntries: state.executiveDashboard.rawEntries,\n      rawVirtualServers: state.executiveDashboard.rawVirtualServers,\n      virtualServers: state.executiveDashboard.virtualServers\n    };\n  }\n)(ExecutiveDashboard);\n","import React from 'react';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartDonut } from '@mdi/js';\n\nimport './RefreshDashboard.local.scss';\n\nexport const RefreshDashboard = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"refresh-container\" onClick={() => onClickCallback()} role=\"presentation\">\n      {active && <div className=\"indicator\" />}\n      <LightTooltip placement=\"bottom\" title=\"Refresh\">\n        <SvgIcon className=\"refresh-icon\">\n          <Icon path={mdiChartDonut} />\n        </SvgIcon>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCubeOutline, mdiDns } from '@mdi/js';\n\nimport './ToggleDashboard.local.scss';\n\nexport const ToggleDashboard = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Virtual servers\">\n        <div\n          className={classnames('option', {\n            active: active === 'virtual'\n          })}\n          onClick={() => onClickCallback('virtual')}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Physical servers\">\n        <div\n          className={classnames('option', {\n            active: active === 'physical'\n          })}\n          onClick={() => onClickCallback('physical')}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiDns} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\n\nimport { deselectAllThunk, selectAllThunk } from '../../store/thunks';\n\nfunction ToggleSelection({ servers, selected, deselectAll, selectAll }) {\n  if (servers === selected) {\n    return (\n      <Button style={{ color: '#03A9F4' }} onClick={() => deselectAll()}>\n        Deselect All\n      </Button>\n    );\n  }\n  return (\n    <Button style={{ color: '#03A9F4' }} onClick={() => selectAll()}>\n      Select all\n    </Button>\n  );\n}\n\nexport const ConnectedToggleSelection = connect(\n  state => {\n    return {\n      servers: state.executiveDashboard.allServers.length,\n      selected: state.executiveDashboard.selectedServers.length\n    };\n  },\n  dispatch => ({\n    deselectAll: () => dispatch(deselectAllThunk()),\n    selectAll: () => dispatch(selectAllThunk())\n  })\n)(ToggleSelection);\n","import React, { PureComponent } from 'react';\nimport Graph from 'react-graph-vis';\nimport {\n  BASE_NETWORK_GRAPH_OPTIONS,\n  DB_NODE_COLOR,\n  DB_NODE_SHAPE,\n  NODE_SIZE_MULTIPLIER,\n  ROOT_NODE,\n  ROOT_NODE_ID,\n  SERVER_NODE_COLOR,\n  SERVER_NODE_SHAPE\n} from './ServersNetworkConstants';\nimport 'vis-network/styles/vis-network.css';\nimport './ServersNetworkTile.local.scss';\nimport { connect } from 'react-redux';\nimport { loadNetworkEdgesThunk, loadNetworkNodesThunk, loadServerDetailsThunk } from '../../store/thunks';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nclass ServersNetworkTile extends PureComponent {\n  events = {\n    select: (event) => {\n      const { nodes } = event;\n      if (nodes.length) {\n        const nodeId = nodes[0];\n        const selectedNode = this.networkData.graph.nodes.find((node) => node.id === nodeId);\n        if (selectedNode && selectedNode.isServerNode) {\n          const { onServerChanged, getServerDetails } = this.props;\n          onServerChanged(selectedNode.id);\n          getServerDetails(selectedNode.id);\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    const { getNetworkNodes, getNetworkEdges } = this.props;\n    getNetworkNodes();\n    getNetworkEdges();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getNetworkNodes, getNetworkEdges } = this.props;\n      setTimeout(() => {\n        getNetworkNodes(newProps.selectedServer);\n        getNetworkEdges(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { nodes, edges, selectedServer, serverDetails, isLoading } = this.props;\n    const preparedNodes = this.mapNodes(nodes);\n    const serverNodes = preparedNodes.filter((node) => node.isServerNode);\n    if (preparedNodes.length && !selectedServer) {\n      preparedNodes.unshift(ROOT_NODE);\n    }\n    this.networkData = {\n      graph: {\n        nodes: preparedNodes,\n        edges: this.mapEdges(edges, serverNodes),\n      }\n    };\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container servers-network-graph-container\">\n            <Center>\n              <Loader>Loading Network Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const hasData = preparedNodes.length && edges.length;\n    return (\n      <div className=\"exec-dashboard-graph-container servers-network-graph-container\">\n        {hasData ? (\n          <>\n            <Graph\n              graph={this.networkData.graph}\n              options={BASE_NETWORK_GRAPH_OPTIONS}\n              events={this.events}\n            />\n            {selectedServer && serverDetails && (\n              <div className=\"server-details-container\">\n                  <div className=\"server-details-row\">Manufacturer: {serverDetails.server_manufacturer}</div>\n                  <div className=\"server-details-row\">Chipset: {serverDetails.processor_identifier}</div>\n                  <div className=\"server-details-row\">Physical Cores: {serverDetails.total_physical_cores}</div>\n                  <div className=\"server-details-row\">Logical Cores: {serverDetails.total_logical_cores}</div>\n                  <div className=\"server-details-row\">Sockets: {serverDetails.physical_sockets_populated}</div>\n              </div>\n            )}\n          </>\n        ) : (\n          <Center>\n            No Network Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapNodes = (nodes) => {\n    return (nodes || [])\n      .filter((node, index, arr) => {\n        return arr.findIndex(t => (t.id === node.id)) === index;\n      })\n      .map((node) => {\n        const isServerNode = node.title === 'server';\n        return {\n          ...node,\n          isServerNode,\n          title: node.label,\n          widthConstraint: node.size * NODE_SIZE_MULTIPLIER,\n          color: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR,\n          shape: isServerNode ? SERVER_NODE_SHAPE : DB_NODE_SHAPE\n        };\n      });\n  }\n\n  mapEdges = (edges, serverNodes) => {\n    const serverEdges = serverNodes.map((node) => {\n      return { from: ROOT_NODE_ID, to: node.id, width: 5, arrows: { to: { enabled: false } } };\n    });\n    return edges.map((edge) => {\n      return { from: edge.from, to: edge.to, width: 5, arrows: { to: { enabled: false } } };\n    }).concat(serverEdges);\n  }\n}\n\nexport const ConnectedServersNetworkTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.network.nodesLoading ||\n        state.executiveDashboard.flags.network.edgesLoading,\n      nodes: state.executiveDashboard.networkNodes,\n      edges: state.executiveDashboard.networkEdges,\n      serverDetails: state.executiveDashboard.networkServerDetails,\n    };\n  },\n  dispatch => ({\n    getNetworkNodes: (serverId) => dispatch(loadNetworkNodesThunk(serverId)),\n    getNetworkEdges: (serverId) => dispatch(loadNetworkEdgesThunk(serverId)),\n    getServerDetails: (serverId) => dispatch(loadServerDetailsThunk(serverId)),\n  })\n)(ServersNetworkTile);\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from './LicensableFeaturesConstants';\nimport { OptionsList } from '../OptionsTile/components/OptionsList/OptionsList';\nimport { Overflow } from '../../../shared/components/layout';\nimport classnames from 'classnames';\nimport { ChartTooltip } from '../ChartTooltip/ChartTooltip';\nimport './LicensableFeaturesTile.local.scss';\nimport { connect } from 'react-redux';\nimport { loadUsageStat, loadUsageThunk } from '../../store/thunks';\n\nconst ScoreItem = ({ clazz, label, value }) => {\n  return (\n    <div className={classnames('score-item-container', clazz)}>\n      <div className=\"score-item-title\">{label}</div>\n      <div className=\"score-item-value\">{value}</div>\n    </div>\n  );\n};\n\nclass LicensableFeaturesTile extends PureComponent {\n  componentDidMount() {\n    const { getLicensableFeatures, getUsageStat } = this.props;\n    getLicensableFeatures();\n    getUsageStat();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getLicensableFeatures, getUsageStat } = this.props;\n      setTimeout(() => {\n        getLicensableFeatures(newProps.selectedServer);\n        getUsageStat(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { licensableFeatures, usageStat } = this.props;\n    const licensesData = this.mapLicenses(licensableFeatures);\n    const currencyFormatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumFractionDigits: 0,\n    });\n\n    return (\n      <div className=\"exec-dashboard-graph-container licensable-features-graph-container\">\n        <ScoreItem clazz=\"total-risk\" label=\"Total Risk\" value={Number.isFinite(usageStat.totalRisk) ? currencyFormatter.format(usageStat.totalRisk) : '-'} />\n        <ScoreItem clazz=\"license-cost\" label=\"License Cost\" value={Number.isFinite(usageStat.licenseCost) ? currencyFormatter.format(usageStat.licenseCost) : '-'} />\n        <ScoreItem clazz=\"support-cost\" label=\"Support Cost\" value={Number.isFinite(usageStat.supportCost) ? currencyFormatter.format(usageStat.supportCost) : '-'} />\n        <ScoreItem clazz=\"unallocated-licenses\" label=\"Unallocated Licenses\" value={Number.isFinite(usageStat.unallocatedLicenses) ? usageStat.unallocatedLicenses : '-'} />\n\n        <ResponsiveContainer height={420}>\n          <PieChart>\n            <Pie data={licensesData} dataKey=\"value\" cx=\"40%\" cy=\"60%\" innerRadius={65} outerRadius={130} blendStroke>\n              {licensesData.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={entry.color} />\n              ))}\n            </Pie>\n            <Tooltip content={ChartTooltip} />\n          </PieChart>\n        </ResponsiveContainer>\n\n        <div className=\"graph-legend-container\">\n          <Overflow>\n            <OptionsList options={licensesData} />\n          </Overflow>\n        </div>\n      </div>\n    );\n  }\n\n  mapLicenses = (licenses) => {\n    return (licenses || []).map((license) => {\n      const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => license.abbreviation === config.type);\n      return {\n        ...license,\n        name: license.product_name,\n        label: license.abbreviation,\n        color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n        secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n      };\n    });\n  }\n}\n\nexport const ConnectedLicensableFeaturesTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.licensableFeatures.loading\n        || state.executiveDashboard.flags.usageStat.loading,\n      licensableFeatures: state.executiveDashboard.licensableFeatures,\n      usageStat: state.executiveDashboard.usageStat,\n    };\n  },\n  dispatch => ({\n    getLicensableFeatures: (serverId) => dispatch(loadUsageThunk(serverId)),\n    getUsageStat: (serverId) => dispatch(loadUsageStat(serverId)),\n  })\n)(LicensableFeaturesTile);\n","import React from 'react';\nimport classnames from 'classnames';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAlert } from '@mdi/js';\nimport { LightTooltip } from 'shared/components';\n\nimport './OptionItem.local.scss';\n\nexport const OptionItem = ({ option }) => {\n  return (\n    <div className={classnames('option', { 'has-issues': option.hasIssues })}>\n      <div className=\"value\" style={{ backgroundColor: option.color }} />\n      <div className=\"label\">{option.label}</div>\n      {option.hasIssues && (\n        <LightTooltip placement=\"right-start\" title=\"Not supported by Oracle\">\n          <SvgIcon className=\"alert-icon\">\n            <Icon path={mdiAlert} />\n          </SvgIcon>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport './OperatingSystemsTile.local.scss';\nimport {\n  DB_VERSION_COLOR_PALETTE,\n  EE_DB_PRIMARY_COLOR,\n  EE_DB_SECONDARY_COLOR,\n  LINUX_OS_PRIMARY_COLOR,\n  LINUX_OS_SECONDARY_COLOR,\n  SE_DB_PRIMARY_COLOR,\n  SE_DB_SECONDARY_COLOR,\n  WINDOWS_OS_PRIMARY_COLOR,\n  WINDOWS_OS_SECONDARY_COLOR\n} from './OperatingSystemsConstants';\nimport { Overflow } from 'shared/components/layout';\nimport { OptionsList } from '../OptionsTile/components/OptionsList/OptionsList';\nimport { ChartTooltip } from '../ChartTooltip/ChartTooltip';\nimport { connect } from 'react-redux';\nimport { loadDBEditionThunk, loadDBVersionThunk, loadOSTypeThunk } from '../../store/thunks';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nclass OperatingSystemsTile extends PureComponent {\n  componentDidMount() {\n    const { getOSType, getDBEdition, getDBVersion } = this.props;\n    getOSType();\n    getDBEdition();\n    getDBVersion();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getOSType, getDBEdition, getDBVersion } = this.props;\n      setTimeout(() => {\n        getOSType(newProps.selectedServer);\n        getDBEdition(newProps.selectedServer);\n        getDBVersion(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { isLoading, selectedServer, graphData } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container operating-systems-graph-container\">\n            <Center>\n              <Loader>Loading Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const preparedOSData = this.mapOS(graphData?.osType);\n    const preparedDBEditionsData = selectedServer ? this.mapDBEditionByServer(graphData?.dbEdition) : this.mapDBEdition(graphData?.dbEdition);\n    const preparedDBVersionsData = this.mapDBVersion(graphData?.dbVersion);\n    const hasData = graphData && (preparedOSData.length || preparedDBEditionsData.length || graphData.dbVersion.length);\n\n    return (\n      <div className=\"exec-dashboard-graph-container operating-systems-graph-container\">\n        {hasData ? (\n          <div className=\"charts-container\">\n            <div className=\"chart\">\n              <div className=\"chart-title\">Operating System</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedOSData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedOSData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedOSData.map((entry, index) => (\n                      <Cell key={`cell-${entry.name}-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"chart\">\n              <div className=\"chart-title\">DB Edition</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedDBEditionsData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedDBEditionsData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedDBEditionsData.map((entry, index) => (\n                      <Cell key={`cell-${entry.database_edition}-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"chart\">\n              <div className=\"chart-title\">DB Version</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedDBVersionsData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedDBVersionsData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedDBVersionsData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapOS = (osData) => {\n    return (osData || []).map((os) => {\n      const isWindowsOS = os.name.indexOf('Windows') !== -1;\n      return {\n        ...os,\n        isWindowsOS,\n        label: os.name,\n        color: isWindowsOS ? WINDOWS_OS_PRIMARY_COLOR : LINUX_OS_PRIMARY_COLOR,\n        secondaryColor: isWindowsOS ? WINDOWS_OS_SECONDARY_COLOR : LINUX_OS_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBEdition = (dbEditionData) => {\n    return (dbEditionData || []).map((dbEdition) => {\n      const isSEEdition = (dbEdition.name || dbEdition.database_edition).indexOf('SE') !== -1;\n      return {\n        ...dbEdition,\n        isSEEdition,\n        label: dbEdition.name,\n        color: isSEEdition ? SE_DB_PRIMARY_COLOR : EE_DB_PRIMARY_COLOR,\n        secondaryColor: isSEEdition ? SE_DB_SECONDARY_COLOR : EE_DB_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBEditionByServer = (dbEditionData) => {\n    return (dbEditionData || []).map((dbEdition) => {\n      const isSEEdition = (dbEdition.database_edition || dbEdition.name).indexOf('SE') !== -1;\n      return {\n        ...dbEdition,\n        isSEEdition,\n        name: dbEdition.database_edition || dbEdition.name,\n        value: dbEdition.count || dbEdition.value,\n        label: dbEdition.database_edition || dbEdition.name,\n        color: isSEEdition ? SE_DB_PRIMARY_COLOR : EE_DB_PRIMARY_COLOR,\n        secondaryColor: isSEEdition ? SE_DB_SECONDARY_COLOR : EE_DB_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBVersion = (dbVersionData) => {\n    return (dbVersionData || []).map((db, index) => {\n      return {\n        ...db,\n        name: db.database_version,\n        value: db.qty,\n        color: DB_VERSION_COLOR_PALETTE[index].color,\n        secondaryColor: DB_VERSION_COLOR_PALETTE[index].secondaryColor,\n        label: db.db_version_short\n      };\n    });\n  }\n}\n\nexport const ConnectedOperatingSystemsTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.network.nodesLoading ||\n        state.executiveDashboard.flags.network.edgesLoading,\n      graphData: state.executiveDashboard.techDetails,\n    };\n  },\n  dispatch => ({\n    getOSType: (serverId) => dispatch(loadOSTypeThunk(serverId)),\n    getDBEdition: (serverId) => dispatch(loadDBEditionThunk(serverId)),\n    getDBVersion: (serverId) => dispatch(loadDBVersionThunk(serverId)),\n  })\n)(OperatingSystemsTile);\n","import React, { PureComponent } from 'react';\nimport { Bar, BarChart, CartesianGrid, Cell, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { ChartTooltip } from '../ChartTooltip/ChartTooltip';\nimport { connect } from 'react-redux';\nimport { loadLicenseDeltaThunk } from '../../store/thunks';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from '../LicensableFeaturesGraph/LicensableFeaturesConstants';\n\nimport './LicenseDeltaTile.local.scss';\n\nclass LicenseDeltaTile extends PureComponent {\n  componentDidMount() {\n    const { getLicenseDelta } = this.props;\n    getLicenseDelta();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getLicenseDelta } = this.props;\n      setTimeout(() => getLicenseDelta(newProps.selectedServer));\n    }\n  }\n\n  render() {\n    const { licenseDelta, selectedServer } = this.props;\n    const chartData = this.mapData(licenseDelta);\n    return (\n      <div className=\"exec-dashboard-graph-container license-delta-graph-container\">\n        <div className=\"chart-title\">License Delta</div>\n        <ResponsiveContainer height={380}>\n          <BarChart data={chartData} barGap={0} margin={{ left: 20 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n            <XAxis dataKey=\"label\" tickSize={false} axisLine={false} tick={this.renderCustomXAxisTick} />\n            <YAxis\n              width={50}\n              tickSize={false}\n              allowDecimals={false}\n              type=\"number\"\n              domain={[0, selectedServer ? 2 : 'dataMax']}\n              stroke=\"rgba(4, 17, 37, 0.87)\"\n              label={{ value: 'Count of Feature in envt', angle: -90, position: 'left' }}\n            />\n            <Bar dataKey=\"assigned\" fill=\"#13369f\">\n              {chartData.map((entry, index) => {\n                return <Cell key={`${entry.name}-${index}`} fill=\"#13369f\" />;\n              })}\n            </Bar>\n            <Bar dataKey=\"used\" fill=\"#f2c94c\">\n              {chartData.map((entry, index) => {\n                return <Cell key={`${entry.name}-${index}`} fill=\"#f2c94c\" />;\n              })}\n            </Bar>\n            <Bar dataKey=\"owned\" fill=\"#55c667\">\n              {chartData.map((entry, index) => {\n                return <Cell key={`${entry.name}-${index}`} fill=\"#55c667\" />;\n              })}\n            </Bar>\n            <Tooltip content={ChartTooltip} cursor={false} />\n            <Legend />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n\n  renderCustomXAxisTick = ({ x, y, payload }) => {\n    const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => config.type === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"x-axis-label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={licenseConfig?.color || '#aaa'}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  mapData = (licenseData) => {\n    const groupedData = (licenseData || [])\n      .reduce((acc, license) => {\n        if (acc[license.product_id]) {\n          const updated = { ...acc[license.product_id] };\n          updated.lic_owned += license.lic_owned;\n          updated.lic_used += license.lic_used;\n          updated.lic_assigned += license.lic_assigned;\n          acc[license.product_id] = updated;\n        } else {\n          acc[license.product_id] = license;\n        }\n        return acc;\n      }, {});\n\n    return Object.values(groupedData)\n      .map((license) => {\n        const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => license.abbreviation === config.type);\n        return {\n          name: license.product_name,\n          label: license.abbreviation,\n          assigned: license.lic_assigned,\n          used: license.lic_used,\n          owned: license.lic_owned,\n          color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n          secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n        };\n      });\n  };\n}\n\nexport const ConnectedLicenseDeltaTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.licenseDelta.loading,\n      licenseDelta: state.executiveDashboard.licenseDelta,\n    };\n  },\n  dispatch => ({\n    getLicenseDelta: (serverId) => dispatch(loadLicenseDeltaThunk(serverId)),\n  })\n)(LicenseDeltaTile);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { ConnectedHardware } from './Pages/Hardware/Hardware';\nimport { ConnectedSoftware } from './Pages/Software/Software';\nimport { ConnectedVMware } from './Pages/VMware/VMware';\nimport { ConnectedPackaging } from './Pages/Packaging/Packaging';\nimport { ConnectedPreSoftware } from './Pages/PreSoftware/PreSoftware';\n\nexport const LicenseCollection = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function changeActiveTab(newActiveTab) {\n    setActiveTab(newActiveTab);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / Usage Collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <Navigation active={activeTab} onClickCallback={changeActiveTab} />\n          </Paper.Header>\n          <Paper.Content>\n            <Switch value={activeTab}>\n              <Switch.Case value={0}>\n                <ConnectedHardware />\n              </Switch.Case>\n              <Switch.Case value={1}>\n                <ConnectedPreSoftware />\n              </Switch.Case>\n              <Switch.Case value={2}>\n                <ConnectedSoftware />\n              </Switch.Case>\n              <Switch.Case value={3}>\n                <ConnectedVMware />\n              </Switch.Case>\n              <Switch.Case value={4}>\n                <ConnectedPackaging />\n              </Switch.Case>\n            </Switch>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Navigation.local.scss';\n\nconst data = [\n  { label: '1. Hardware Data Requirements Collection' },\n  { label: '2. Pre-Software Scan Setup' },\n  { label: '3. Software Data Requirements Collection' },\n  { label: '4. vSphere Data Requirements Collection' },\n  { label: '5. Packaging Process' }\n];\n\nexport const Navigation = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"nav-chip-container\">\n      {data.map((chip, index) => (\n        <div\n          className={classnames('nav-chip', { active: active === index })}\n          key={index}\n          onClick={() => onClickCallback(index)}\n          role=\"presentation\"\n          data-qa={`chip-nav-${index}`}\n        >\n          {chip.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiMemory } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk, executeCollectionProcessThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Hardware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.hw_scan';\n\nexport class Hardware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n      request('form');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'hardware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'hardware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"hardware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Hardware scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Hardware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedHardware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.hardware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.hardware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Hardware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n  const matches = regex.exec(deflt);\n  // const json = `[${matches[2]}]`;\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default:\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return parseInt(matches[2], 10);\n          case 'str':\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n  }\n  return null;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiApplication, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Software.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.sw_scan';\n\nexport class Software extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      request,\n      entitiesStatus,\n      requestProcessData,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted\n    } = this.props;\n\n    if (wasHardwareExecuted && wasPreSoftwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'software', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    if (!wasHardwareExecuted || !wasPreSoftwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather Hardware data and Pre-Software Scan Setup before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'software' });\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting, values }) => {\n            return (\n              <Form className=\"software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Database features scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to target server, Target DBMS, Database form for the target\n                      database, SSH connection to the target host, working directory in the repo\n                      host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled, values)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Software Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiApplication} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled, formValues) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        forms={this.props.forms}\n        prototypes={this.props.prototypes}\n        disabled={disabled}\n        currentFormValues={formValues}\n      />\n    );\n  }\n}\n\nexport const ConnectedSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.software,\n    isProcessLoading: state.explorer.flags.collectionProcesses.software.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n    wasPreSoftwareExecuted: state.explorer.flags.collectionProcesses.preSoftware.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Software);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiCubeScan } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './VMware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.vsphere_scan';\n\nexport class VMware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'vmware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const { entitiesStatus, datatypes, prototypes, isProcessLoading, process } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: VMware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"vmware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>vSphere for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>SSH connection to repo server, working directory in the repo host</p>\n                  </div>\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'VMware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiCubeScan} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedVMware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.vmware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.vmware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(VMware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArchiveArrowDownOutline, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport { SuccessModal } from '../../../shared/components/overlays/SuccessModal/SuccessModal';\nimport { downloadFile } from '../../utils/downloadFile';\nimport './Packaging.local.scss';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.packager';\n\nexport class Packaging extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined,\n      successModalOpen: false,\n      failedModalOpen: false,\n      formValues: {},\n      isDownloadDisabled: true,\n      isEmailDisabled: true\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasVsphereExecuted } = this.props;\n\n    if (wasVsphereExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'packaging', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasVsphereExecuted\n    } = this.props;\n    let parameters = null;\n\n    if (!wasVsphereExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather software data before running the Packaging\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined,\n                    formValues: formatParameters(values),\n                    isDownloadDisabled: true,\n                    isEmailDisabled: true\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"packaging-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Package (HW, SW) file for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>Repo working directory, repo SSH connection</p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Paper.Footer.Left>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isDownloadDisabled}\n                      data-qa=\"download-btn\"\n                      onClick={() => {\n                        downloadFile(this.state.formValues);\n                        this.setState({ isEmailDisabled: false });\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isEmailDisabled}\n                      data-qa=\"email-btn\"\n                      onClick={() => this.sendEmail()}\n                    >\n                      Email\n                    </Button>\n                  </Paper.Footer.Left>\n                  <Paper.Footer.Right>\n                    <Button\n                      className=\"btn submit\"\n                      type=\"submit\"\n                      disabled={!dirty || isSubmitting}\n                      variant=\"contained\"\n                      data-qa=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Packaging Process ',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiArchiveArrowDownOutline} />\n            </SvgIcon>\n          )\n        })}\n        {this.renderPackagingSuccessModal()}\n        {this.renderPackagingFailedModal()}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n\n            try {\n              await RestClient.get(\n                '/execdashboard/update',\n                formatParameters({\n                  lms_repo: this.state.formValues.repo_working_dir,\n                  repo_shell: this.state.formValues.repo_shell\n                })\n              );\n\n              const isSucceeded = invocation.status === 'SUCCEEDED';\n\n              this.setState({\n                output: outputReponse.data.data.outputs,\n                invocation,\n                outputOpen: !isSucceeded,\n                successModalOpen: isSucceeded,\n                failedModalOpen: false,\n                isDownloadDisabled: !isSucceeded\n              });\n            } catch (error) {\n              console.log('[collection-packaging-exec-dashboard-update] error: ', error); // eslint-disable-line\n              this.setState({ outputOpen: false });\n              this.setState({ successModalOpen: false });\n              this.setState({ failedModalOpen: true });\n            }\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        type=\"packaging\"\n        output={this.state.output}\n        processName={processName}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        messages={['Preparing job...', 'Executing job...', 'Preparing files...']}\n      />\n    );\n  };\n\n  renderPackagingSuccessModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ successModalOpen: true });\n      },\n      close: () => {\n        this.setState({ successModalOpen: false });\n      }\n    };\n\n    return (\n      <SuccessModal open={this.state.successModalOpen} actions={actions} message=\"Packaging successfully completed!\" />\n    );\n  }\n\n  renderPackagingFailedModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ failedModalOpen: true });\n      },\n      close: () => {\n        this.setState({ failedModalOpen: false });\n      }\n    };\n\n    return (\n      <ErrorModal open={this.state.failedModalOpen} actions={actions} message=\"Packaging failed! Please check parameters and try again.\" />\n    );\n  }\n\n  sendEmail = () => {\n    const body = 'Please attach the downloaded file. It should be named \"lms-file-bundle.tar\".';\n    window.location.href = `mailto:?subject=Packaging files&body=${encodeURIComponent(body)}`;\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPackaging = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.packaging,\n    isProcessLoading: state.explorer.flags.collectionProcesses.packaging.loading,\n    wasVsphereExecuted: state.explorer.flags.collectionProcesses.software.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Packaging);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './SuccessModal.local.scss';\n\nexport const SuccessModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Success\"\n          icon={\n            <SvgIcon className=\"header-icon\">\n              <CheckCircleRoundedIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"success\">\n            <Result.Text>{message}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async query => {\n  const formatQuery = {\n    lms_repo: query.repo_working_dir,\n    repo_shell: query.repo_shell\n  };\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_PACKAGING, formatQuery);\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'lms-file-bundle.tar';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiMemory, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\nimport { Parameter } from '../../../shared/components/form/parameters';\nimport { Result } from '../../../shared/components/overlays';\n\nimport './PreSoftware.local.scss';\n\nconst PROCESS_NAME = 'vendita.oracle.rdbms.util.lms.hardcoded_hw_scan_lms';\nconst PARAMS_TO_NORMALIZE = [\n  'vendita.oracle.rdbms.util.lms.license_metric_values',\n  'vendita.oracle.rdbms.util.lms.environment_values',\n  'vendita.oracle.rdbms.util.lms.partitioning_values',\n  'vendita.oracle.rdbms.util.lms.database_edition_values',\n];\n\nexport class PreSoftware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasHardwareExecuted } = this.props;\n\n    if (wasHardwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'preSoftware', process: PROCESS_NAME });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess,\n      wasHardwareExecuted,\n    } = this.props;\n\n    if (!wasHardwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather hardware data before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    let parameters = null;\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${PROCESS_NAME} process`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {PROCESS_NAME} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: PROCESS_NAME,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'preSoftware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Pre-Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"pre-software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Pre-Software Scan Setup</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={PROCESS_NAME}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Pre-Software Scan Setup',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={PROCESS_NAME}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    if (PARAMS_TO_NORMALIZE.includes(parameter.data_type)) {\n      const normalizedParam = normalize(parameter, this.props.datatypes, this.props.prototypes, this.props.forms);\n      return <Parameter normalized={normalizedParam} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPreSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.preSoftware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.preSoftware.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(PreSoftware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { ConnectedAllocatedLicensesTable } from './components/AllocatedLicensesTable/AllocatedLicensesTable';\n\nexport class LicenseAllocation extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Header title=\"Compliance / License allocation\" />\n        <Main>\n          <Paper>\n            <Paper.Content>\n              <ConnectedAllocatedLicensesTable />\n            </Paper.Content>\n          </Paper>\n        </Main>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadLicenseAllocationThunk } from '../../store/thunks';\nimport { getLicensesData, licensesLoading } from '../../store/selectors';\nimport { Center, LightTooltip, Table } from 'shared/components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPencil } from '@mdi/js';\nimport { AssignLicenseModal } from '../assign-license-modal/AssignLicenseModal';\n\nimport './AllocatedLicensesTable.local.scss';\n\nconst columns = [\n  { label: 'Server' },\n  { label: 'Product' },\n  { label: 'Metric' },\n  { label: 'Term' },\n  { label: 'Type' },\n  { label: 'Assigned' },\n  { label: 'Available' },\n  { label: '' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"tooltip-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"tooltip-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index, openLicenseAssignments) => (\n  <Table.Row hover key={`${row.license_id}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.host_name}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.product_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.license_metric}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.license_term}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.license_type}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.licenses_assigned}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.licenses_available}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-target-cell action-cell\">\n        <LightTooltip placement=\"top\" title=\"Edit assignment\">\n          <SvgIcon onClick={() => openLicenseAssignments(row)}>\n            <Icon path={mdiPencil} />\n          </SvgIcon>\n        </LightTooltip>\n      </span>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, licenses, noDataMessage, tableProps, openLicenseAssignments }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (licenses.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{licenses.map((row, index) => rowRenderer(row, index, openLicenseAssignments))}</Table>;\n};\n\nclass AllocatedLicensesTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'product_name', order: 'desc' },\n      assignLicenseModalOpened: false,\n      selectedAssignment: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.getLicenses();\n  }\n\n  render() {\n    const { licensesData, isLoading } = this.props;\n    const { sortBehavior, assignLicenseModalOpened, selectedAssignment } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const assignLicenseModalActions = {\n      open: (assignmentToEdit) => {\n        this.setState({ assignLicenseModalOpened: true, selectedAssignment: assignmentToEdit });\n      },\n      close: () => {\n        this.setState({ assignLicenseModalOpened: false, selectedAssignment: null });\n      }\n    };\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          licenses={licensesData}\n          tableProps={tableProps}\n          openLicenseAssignments={assignLicenseModalActions.open}\n          noDataMessage=\"No License Data Available\"\n        />\n\n        <AssignLicenseModal modalActions={assignLicenseModalActions} open={assignLicenseModalOpened} selectedAssignment={selectedAssignment} />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n}\n\nexport const ConnectedAllocatedLicensesTable = connect(\n  state => ({\n    isLoading: licensesLoading(state),\n    licensesData: getLicensesData(state)\n  }),\n  dispatch => ({\n    getLicenses: () => dispatch(loadLicenseAllocationThunk())\n  })\n)(AllocatedLicensesTable);\n","import React, { useEffect, useRef } from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiLicense } from '@mdi/js';\nimport { connect } from 'react-redux';\nimport { getAvailableServersData, getLicensesData } from '../../store/selectors';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { Column, Paper, Row } from 'shared/components/layout';\nimport { Form, Formik } from 'formik';\nimport {\n  loadAvailableServersThunk,\n  loadLicenseAllocationThunk,\n  updateLicenseAssignmentThunk\n} from '../../store/thunks';\nimport { Integer } from '../../../shared/components/form/editors/Generic';\nimport { SubmitButtonNoDirty } from '../../../shared/components/form/SubmitButtonNoDirty';\n\nimport './AssignLicenseModal.local.scss';\n\nexport const AssignLicenseModal = ({ modalActions, open, selectedAssignment }) => {\n  return (\n    <>\n      <Modal open={open} actions={modalActions}>\n        <ConnectedAssignLicense closeModal={modalActions.close} selectedAssignment={selectedAssignment} />\n      </Modal>\n    </>\n  );\n};\n\nconst AssignLicense = (\n  {\n    licensesData,\n    availableServers,\n    getAvailableServers,\n    updateLicenseAssignment,\n    selectedAssignment,\n    closeModal,\n    refreshLicenses\n  }) => {\n  const formRef = useRef();\n  const initialValues = {\n    server_id: selectedAssignment.server_id || '',\n    license_id: selectedAssignment.license_id || '',\n    metric: selectedAssignment.license_metric || '',\n    term: selectedAssignment.license_term || '',\n    type: selectedAssignment.license_type || '',\n    quantity: selectedAssignment.licenses_available || '',\n  };\n\n  const extraValidations = (values) => {\n    const errors = {};\n    if (values.license_id) {\n      const selectedLicense = licensesData.find((license) => license.license_id === values.license_id);\n      if (selectedLicense) {\n        const available = selectedLicense.licenses_available || 0;\n        const assigned = selectedLicense.licenses_assigned || 0;\n\n        if (!values.quantity) {\n          errors.quantity = 'Please specify positive or negative quantity';\n        } else if (values.quantity < 0 && Math.abs(values.quantity) > assigned) {\n          errors.quantity = `You have only ${assigned} assigned licenses. You can't decrease more.`;\n        } else if (values.quantity > 0 && values.quantity > available) {\n          errors.quantity = `You have only ${available} available licenses`;\n        }\n      }\n    }\n    return errors;\n  };\n\n  const licenseOptions = (licensesData || []).map((license) => {\n    return {\n      label: license.product_name,\n      value: license.license_id,\n      disabled: license.licenses_available <= 0\n    };\n  });\n\n  const availableServersOptions = (availableServers || []).map((serverInfo) => {\n    return {\n      label: `${serverInfo.host_name} (${serverInfo.ip_address})`,\n      value: serverInfo.server_id\n    };\n  });\n\n  useEffect(() => {\n    getAvailableServers();\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '700px',\n        minHeight: '565px',\n        maxHeight: '800px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiLicense} />\n          </SvgIcon>\n        }\n        title=\"Assign Licenses\"\n        desc=\"Select target server and assign licenses to it\"\n        formikRef={formRef}\n      />\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={(values) => {\n          const isInitialAssignment = !selectedAssignment.server_id;\n          updateLicenseAssignment(isInitialAssignment, values).then(() => {\n            refreshLicenses();\n            closeModal();\n          });\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form className=\"assign-license-form\">\n                  <Row>\n                    <Column xs={12}>\n                      <Text\n                        type=\"text\"\n                        name=\"server_id\"\n                        label=\"Server\"\n                        options={availableServersOptions}\n                        value={initialValues.server_id}\n                        required\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs={12}>\n                      <Text\n                        type=\"text\"\n                        name=\"license_id\"\n                        label=\"License\"\n                        options={licenseOptions}\n                        value={initialValues.license_id}\n                        disabled\n                        required\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs=\"6\">\n                      <Text\n                        type=\"text\"\n                        name=\"term\"\n                        label=\"Term\"\n                        value={initialValues.term}\n                        disabled\n                      />\n                    </Column>\n                    <Column xs=\"6\">\n                      <Text\n                        type=\"text\"\n                        name=\"type\"\n                        label=\"Type\"\n                        value={initialValues.type}\n                        disabled\n                        required\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs=\"8\">\n                      <Text\n                        type=\"text\"\n                        name=\"metric\"\n                        label=\"Metric\"\n                        value={initialValues.metric}\n                        disabled\n                      />\n                    </Column>\n                    <Column xs=\"4\">\n                      <Integer\n                        type=\"text\"\n                        name=\"quantity\"\n                        label=\"Quantity\"\n                        value={initialValues.quantity}\n                        required\n                      />\n                    </Column>\n                  </Row>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButtonNoDirty variant=\"contained\" confirmation>\n                    Submit\n                  </SubmitButtonNoDirty>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport const ConnectedAssignLicense = connect(\n  state => ({\n    licensesData: getLicensesData(state),\n    availableServers: getAvailableServersData(state),\n  }),\n  dispatch => ({\n    getAvailableServers: () => dispatch(loadAvailableServersThunk()),\n    updateLicenseAssignment: (isInitialAssignment, payload) => dispatch(updateLicenseAssignmentThunk(isInitialAssignment, payload)),\n    refreshLicenses: () => dispatch(loadLicenseAllocationThunk())\n  })\n)(AssignLicense);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Center, Main, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\nimport { downloadFile } from 'shared/lib/download-file/download-file';\nimport { RestClient } from '../shared/lib/rest';\nimport { CONSTANTS } from '../config';\nimport { LimitlessTooltip } from '../shared/components/tooltip/Tooltip';\n\nimport './Licensing.local.scss';\n\nexport const Licensing = () => {\n  const [selectedSupportRenewalFile, setSelectedSupportRenewalFile] = useState(null);\n  const [supportRenewalFileResult, setSupportRenewalFileResult] = useState('');\n  const [uploadSupportRenewalFileDisabled, setUploadSupportRenewalFileDisabled] = useState(true);\n  const supportRenewalFileName = selectedSupportRenewalFile?.name || 'No file chosen';\n\n  const [selectedMasLicenseFile, setSelectedMasLicenseFile] = useState(null);\n  const [masLicenseFileResult, setMasLicenseFileResult] = useState('');\n  const [selectedMasLicenseFileDisabled, setSelectedMasLicenseFileDisabled] = useState(true);\n  const masLicenseFileName = selectedMasLicenseFile?.name || 'No file chosen';\n\n  // const formRef = useRef();\n\n  const uploadSupportRenewalFile = () => {\n    if (!selectedSupportRenewalFile) {\n      setSupportRenewalFileResult('error');\n\n      return;\n    }\n    setSupportRenewalFileResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedSupportRenewalFile);\n\n    RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_SUPPORT_RENEWAL_FILE, data)\n      .then(() => setSupportRenewalFileResult(''))\n      .catch(() => setSupportRenewalFileResult(''));\n  };\n\n  const uploadMasLicenseFile = () => {\n    if (!selectedMasLicenseFile) {\n      setMasLicenseFileResult('error');\n\n      return;\n    }\n    setMasLicenseFileResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedMasLicenseFile);\n\n    RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_MAS_LICENSE_FILE, data)\n      .then(() => setMasLicenseFileResult(''))\n      .catch(() => setMasLicenseFileResult(''));\n  };\n\n  return (\n    <>\n      <Header title=\"Compliance / License Collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <span className=\"licensing-title\">\n              By providing MAS with your organization&apos;s Oracle license information,\n              we can help you optimize your Oracle investment. By comparing your Oracle product\n              usage with the licenses you purchased, we can identify any gaps in license coverage,\n              inform you of your financial exposure from an Oracle License Audit, and help identify\n              opportunities to save by reviewing your existing Oracle license strategy.\n              To get started, simply use one of the methods below to load and review\n              your Oracle license portfolio.\n            </span>\n          </Paper.Header>\n          <Paper.Content>\n            <div className=\"widgets-container\">\n              <div className=\"widget\">\n                <h3 className=\"widget-title\">Oracle Support Renewal File</h3>\n                <p className=\"widget-desc\">\n                  Use this option if you don&apos;t have, or cannot easily obtain, your organization&apos;s\n                  license information.<br /><br />\n                  This option uses the Detailed Support Renewal report that you can produce from within the\n                  Oracle Support Renewal Portal. Simply create and download the CSV file, browse to that\n                  file using the file browser below, then click Upload Support Renewal. We will determine\n                  your Oracle licenses from the file and ask you to confirm them before saving them\n                  in MAS. It&apos;s that easy!\n                </p>\n\n                <Switch value={supportRenewalFileResult}>\n                  <Switch.Case value=\"\">\n                    <div className=\"actions-container\">\n                      <label htmlFor=\"renewal-file-upload\" className=\"browse-file\">\n                        Choose file\n                        <input\n                          type=\"file\"\n                          id=\"renewal-file-upload\"\n                          name=\"csv\"\n                          accept=\".csv\"\n                          onChange={(event) => {\n                            setSelectedSupportRenewalFile(event.target.files[0]);\n                            setUploadSupportRenewalFileDisabled(!event.target.files[0]);\n                          }}\n                        />\n                      </label>\n                      <LimitlessTooltip placement=\"bottom\" title={supportRenewalFileName}>\n                        <span className=\"file-name\">{supportRenewalFileName}</span>\n                      </LimitlessTooltip>\n                      <Button className=\"upload-file-btn\" disabled={uploadSupportRenewalFileDisabled} onClick={uploadSupportRenewalFile}>\n                        Upload Support Renewal File\n                      </Button>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"loading\">\n                    <div className=\"loading-container\">\n                      <Center>\n                        <Loader>Uploading file...</Loader>\n                      </Center>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"error\">\n                    <div className=\"failed-result-container\">\n                      <Result type=\"fail\">\n                        <Result.Text>Something went wrong with uploading the file</Result.Text>\n                      </Result>\n                      <Button onClick={() => setSupportRenewalFileResult('')}>Back</Button>\n                    </div>\n                  </Switch.Case>\n                </Switch>\n              </div>\n              <div className=\"widget\">\n                <h3 className=\"widget-title\">MAS License Template</h3>\n                <p className=\"widget-desc\">\n                  Use this option if you have your organization&apos;s Oracle license information.<br /><br />\n                  This option offers a fast and accurate method for entering your Oracle license data. Simply\n                  download and complete the spreadsheet. Once all of your licenses have been added to the spreadsheet,\n                  simply select the file using the file browser, and click Upload MAS License File.\n                </p>\n                <Button className=\"download-template-btn\" onClick={() => downloadFile('/download/license')}>\n                  Download template file here\n                </Button>\n\n                <Switch value={masLicenseFileResult}>\n                  <Switch.Case value=\"\">\n                    <div className=\"actions-container\">\n                      <label htmlFor=\"mas-file-upload\" className=\"browse-file\">\n                        Choose file\n                        <input\n                          type=\"file\"\n                          id=\"mas-file-upload\"\n                          name=\"csv\"\n                          accept=\".csv\"\n                          onChange={(event) => {\n                            setSelectedMasLicenseFile(event.target.files[0]);\n                            setSelectedMasLicenseFileDisabled(!event.target.files[0]);\n                          }}\n                        />\n                      </label>\n                      <LimitlessTooltip placement=\"bottom\" title={masLicenseFileName}>\n                        <span className=\"file-name\">{masLicenseFileName}</span>\n                      </LimitlessTooltip>\n                      <Button className=\"upload-file-btn\" disabled={selectedMasLicenseFileDisabled} onClick={uploadMasLicenseFile}>\n                        Upload MAS License File\n                      </Button>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"loading\">\n                    <div className=\"loading-container\">\n                      <Center>\n                        <Loader>Uploading file...</Loader>\n                      </Center>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"error\">\n                    <div className=\"failed-result-container\">\n                      <Result type=\"fail\">\n                        <Result.Text>Something went wrong with uploading the file</Result.Text>\n                      </Result>\n                      <Button onClick={() => setMasLicenseFileResult('')}>Back</Button>\n                    </div>\n                  </Switch.Case>\n                </Switch>\n              </div>\n              {\n                /* <div className=\"widget\">\n                <h3 className=\"widget-title\">Manual License Entry</h3>\n\n                <Formik\n                  initialValues={{\n                    csiNumber: '',\n                    productName: '',\n                    licenseType: '',\n                    licenseMetric: '',\n                    licenseTerm: '',\n                    licenseQuantity: '',\n                    licenseStatus: '',\n                    licensePurchased: '',\n                    isSupported: '',\n                  }}\n                  onSubmit={values => {\n                    console.log(values);\n                  }}\n                  innerRef={formRef}\n                >\n                  {({ values }) => {\n                    return (\n                      <>\n                        <Form className=\"license-entry-form\">\n                          <Section>\n                            <Row>\n                              <Text name=\"csiNumber\" label=\"CSI Number\" value={values.csiNumber} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"productName\" label=\"Product Name\" value={values.productName} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseType\" label=\"License Type\" value={values.licenseType} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseMetric\" label=\"License Metric\" value={values.licenseMetric} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseTerm\" label=\"License Term\" value={values.licenseTerm} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseQuantity\" label=\"License Quantity\" value={values.licenseQuantity} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseStatus\" label=\"License Status\" value={values.licenseStatus} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licensePurchased\" label=\"License Purchased\" value={values.licensePurchased} required />\n                            </Row>\n                            <Text name=\"isSupported\" label=\"Is Supported\" value={values.isSupported} required />\n                          </Section>\n                        </Form>\n                        <div className=\"save-license-btn\">\n                          <SubmitButton>Save License Information</SubmitButton>\n                        </div>\n                      </>\n                    );\n                  }}\n                </Formik>\n              </div> */\n              }\n            </div>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import { en } from './en';\n\nexport const i18nMessages = {\n  en,\n};\n","import dashboard from './dashboard.json';\nimport general from './general.json';\nimport session from './session.json';\nimport header from './header.json';\n\nexport const en = {\n  ...dashboard,\n  ...general,\n  ...session,\n  ...header,\n};\n","import 'babel-polyfill';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport store from 'core/store';\nimport { App } from './app';\nimport { CONSTANTS } from './app/config';\nimport { i18nMessages } from './i18n';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport './assets/fonts/Lato-Regular.ttf';\nimport './assets/fonts/OpenSans-Regular.ttf';\nimport './style.scss';\n\nconst persistor = persistStore(store);\n\nconst provider = (\n  <IntlProvider locale={CONSTANTS.INTL} messages={i18nMessages[CONSTANTS.INTL]}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter basename={process.env.NODE_ENV === 'development' ? '/' : '/ui/#/'}>\n          <Switch>\n            <Route component={App} path=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </IntlProvider>\n);\n\nrender(provider, document.getElementById('root'));\n","var map = {\n\t\"./af\": 718,\n\t\"./af.js\": 718,\n\t\"./ar\": 719,\n\t\"./ar-dz\": 720,\n\t\"./ar-dz.js\": 720,\n\t\"./ar-kw\": 721,\n\t\"./ar-kw.js\": 721,\n\t\"./ar-ly\": 722,\n\t\"./ar-ly.js\": 722,\n\t\"./ar-ma\": 723,\n\t\"./ar-ma.js\": 723,\n\t\"./ar-sa\": 724,\n\t\"./ar-sa.js\": 724,\n\t\"./ar-tn\": 725,\n\t\"./ar-tn.js\": 725,\n\t\"./ar.js\": 719,\n\t\"./az\": 726,\n\t\"./az.js\": 726,\n\t\"./be\": 727,\n\t\"./be.js\": 727,\n\t\"./bg\": 728,\n\t\"./bg.js\": 728,\n\t\"./bm\": 729,\n\t\"./bm.js\": 729,\n\t\"./bn\": 730,\n\t\"./bn-bd\": 731,\n\t\"./bn-bd.js\": 731,\n\t\"./bn.js\": 730,\n\t\"./bo\": 732,\n\t\"./bo.js\": 732,\n\t\"./br\": 733,\n\t\"./br.js\": 733,\n\t\"./bs\": 734,\n\t\"./bs.js\": 734,\n\t\"./ca\": 735,\n\t\"./ca.js\": 735,\n\t\"./cs\": 736,\n\t\"./cs.js\": 736,\n\t\"./cv\": 737,\n\t\"./cv.js\": 737,\n\t\"./cy\": 738,\n\t\"./cy.js\": 738,\n\t\"./da\": 739,\n\t\"./da.js\": 739,\n\t\"./de\": 740,\n\t\"./de-at\": 741,\n\t\"./de-at.js\": 741,\n\t\"./de-ch\": 742,\n\t\"./de-ch.js\": 742,\n\t\"./de.js\": 740,\n\t\"./dv\": 743,\n\t\"./dv.js\": 743,\n\t\"./el\": 744,\n\t\"./el.js\": 744,\n\t\"./en-au\": 745,\n\t\"./en-au.js\": 745,\n\t\"./en-ca\": 746,\n\t\"./en-ca.js\": 746,\n\t\"./en-gb\": 747,\n\t\"./en-gb.js\": 747,\n\t\"./en-ie\": 748,\n\t\"./en-ie.js\": 748,\n\t\"./en-il\": 749,\n\t\"./en-il.js\": 749,\n\t\"./en-in\": 750,\n\t\"./en-in.js\": 750,\n\t\"./en-nz\": 751,\n\t\"./en-nz.js\": 751,\n\t\"./en-sg\": 752,\n\t\"./en-sg.js\": 752,\n\t\"./eo\": 753,\n\t\"./eo.js\": 753,\n\t\"./es\": 754,\n\t\"./es-do\": 755,\n\t\"./es-do.js\": 755,\n\t\"./es-mx\": 756,\n\t\"./es-mx.js\": 756,\n\t\"./es-us\": 757,\n\t\"./es-us.js\": 757,\n\t\"./es.js\": 754,\n\t\"./et\": 758,\n\t\"./et.js\": 758,\n\t\"./eu\": 759,\n\t\"./eu.js\": 759,\n\t\"./fa\": 760,\n\t\"./fa.js\": 760,\n\t\"./fi\": 761,\n\t\"./fi.js\": 761,\n\t\"./fil\": 762,\n\t\"./fil.js\": 762,\n\t\"./fo\": 763,\n\t\"./fo.js\": 763,\n\t\"./fr\": 764,\n\t\"./fr-ca\": 765,\n\t\"./fr-ca.js\": 765,\n\t\"./fr-ch\": 766,\n\t\"./fr-ch.js\": 766,\n\t\"./fr.js\": 764,\n\t\"./fy\": 767,\n\t\"./fy.js\": 767,\n\t\"./ga\": 768,\n\t\"./ga.js\": 768,\n\t\"./gd\": 769,\n\t\"./gd.js\": 769,\n\t\"./gl\": 770,\n\t\"./gl.js\": 770,\n\t\"./gom-deva\": 771,\n\t\"./gom-deva.js\": 771,\n\t\"./gom-latn\": 772,\n\t\"./gom-latn.js\": 772,\n\t\"./gu\": 773,\n\t\"./gu.js\": 773,\n\t\"./he\": 774,\n\t\"./he.js\": 774,\n\t\"./hi\": 775,\n\t\"./hi.js\": 775,\n\t\"./hr\": 776,\n\t\"./hr.js\": 776,\n\t\"./hu\": 777,\n\t\"./hu.js\": 777,\n\t\"./hy-am\": 778,\n\t\"./hy-am.js\": 778,\n\t\"./id\": 779,\n\t\"./id.js\": 779,\n\t\"./is\": 780,\n\t\"./is.js\": 780,\n\t\"./it\": 781,\n\t\"./it-ch\": 782,\n\t\"./it-ch.js\": 782,\n\t\"./it.js\": 781,\n\t\"./ja\": 783,\n\t\"./ja.js\": 783,\n\t\"./jv\": 784,\n\t\"./jv.js\": 784,\n\t\"./ka\": 785,\n\t\"./ka.js\": 785,\n\t\"./kk\": 786,\n\t\"./kk.js\": 786,\n\t\"./km\": 787,\n\t\"./km.js\": 787,\n\t\"./kn\": 788,\n\t\"./kn.js\": 788,\n\t\"./ko\": 789,\n\t\"./ko.js\": 789,\n\t\"./ku\": 790,\n\t\"./ku.js\": 790,\n\t\"./ky\": 791,\n\t\"./ky.js\": 791,\n\t\"./lb\": 792,\n\t\"./lb.js\": 792,\n\t\"./lo\": 793,\n\t\"./lo.js\": 793,\n\t\"./lt\": 794,\n\t\"./lt.js\": 794,\n\t\"./lv\": 795,\n\t\"./lv.js\": 795,\n\t\"./me\": 796,\n\t\"./me.js\": 796,\n\t\"./mi\": 797,\n\t\"./mi.js\": 797,\n\t\"./mk\": 798,\n\t\"./mk.js\": 798,\n\t\"./ml\": 799,\n\t\"./ml.js\": 799,\n\t\"./mn\": 800,\n\t\"./mn.js\": 800,\n\t\"./mr\": 801,\n\t\"./mr.js\": 801,\n\t\"./ms\": 802,\n\t\"./ms-my\": 803,\n\t\"./ms-my.js\": 803,\n\t\"./ms.js\": 802,\n\t\"./mt\": 804,\n\t\"./mt.js\": 804,\n\t\"./my\": 805,\n\t\"./my.js\": 805,\n\t\"./nb\": 806,\n\t\"./nb.js\": 806,\n\t\"./ne\": 807,\n\t\"./ne.js\": 807,\n\t\"./nl\": 808,\n\t\"./nl-be\": 809,\n\t\"./nl-be.js\": 809,\n\t\"./nl.js\": 808,\n\t\"./nn\": 810,\n\t\"./nn.js\": 810,\n\t\"./oc-lnc\": 811,\n\t\"./oc-lnc.js\": 811,\n\t\"./pa-in\": 812,\n\t\"./pa-in.js\": 812,\n\t\"./pl\": 813,\n\t\"./pl.js\": 813,\n\t\"./pt\": 814,\n\t\"./pt-br\": 815,\n\t\"./pt-br.js\": 815,\n\t\"./pt.js\": 814,\n\t\"./ro\": 816,\n\t\"./ro.js\": 816,\n\t\"./ru\": 817,\n\t\"./ru.js\": 817,\n\t\"./sd\": 818,\n\t\"./sd.js\": 818,\n\t\"./se\": 819,\n\t\"./se.js\": 819,\n\t\"./si\": 820,\n\t\"./si.js\": 820,\n\t\"./sk\": 821,\n\t\"./sk.js\": 821,\n\t\"./sl\": 822,\n\t\"./sl.js\": 822,\n\t\"./sq\": 823,\n\t\"./sq.js\": 823,\n\t\"./sr\": 824,\n\t\"./sr-cyrl\": 825,\n\t\"./sr-cyrl.js\": 825,\n\t\"./sr.js\": 824,\n\t\"./ss\": 826,\n\t\"./ss.js\": 826,\n\t\"./sv\": 827,\n\t\"./sv.js\": 827,\n\t\"./sw\": 828,\n\t\"./sw.js\": 828,\n\t\"./ta\": 829,\n\t\"./ta.js\": 829,\n\t\"./te\": 830,\n\t\"./te.js\": 830,\n\t\"./tet\": 831,\n\t\"./tet.js\": 831,\n\t\"./tg\": 832,\n\t\"./tg.js\": 832,\n\t\"./th\": 833,\n\t\"./th.js\": 833,\n\t\"./tk\": 834,\n\t\"./tk.js\": 834,\n\t\"./tl-ph\": 835,\n\t\"./tl-ph.js\": 835,\n\t\"./tlh\": 836,\n\t\"./tlh.js\": 836,\n\t\"./tr\": 837,\n\t\"./tr.js\": 837,\n\t\"./tzl\": 838,\n\t\"./tzl.js\": 838,\n\t\"./tzm\": 839,\n\t\"./tzm-latn\": 840,\n\t\"./tzm-latn.js\": 840,\n\t\"./tzm.js\": 839,\n\t\"./ug-cn\": 841,\n\t\"./ug-cn.js\": 841,\n\t\"./uk\": 842,\n\t\"./uk.js\": 842,\n\t\"./ur\": 843,\n\t\"./ur.js\": 843,\n\t\"./uz\": 844,\n\t\"./uz-latn\": 845,\n\t\"./uz-latn.js\": 845,\n\t\"./uz.js\": 844,\n\t\"./vi\": 846,\n\t\"./vi.js\": 846,\n\t\"./x-pseudo\": 847,\n\t\"./x-pseudo.js\": 847,\n\t\"./yo\": 848,\n\t\"./yo.js\": 848,\n\t\"./zh-cn\": 849,\n\t\"./zh-cn.js\": 849,\n\t\"./zh-hk\": 850,\n\t\"./zh-hk.js\": 850,\n\t\"./zh-mo\": 851,\n\t\"./zh-mo.js\": 851,\n\t\"./zh-tw\": 852,\n\t\"./zh-tw.js\": 852\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1498;","/**\n * A IFFE to ignore warnings of prop-types validation\n * from Material-UI components used with scoped-css-loader.\n *\n * They are invalid and will not appear in prod builds, they are\n * cumbersome for development for now.\n *\n * TODO: investigate if there is another option when there is time.\n * For now it looks like there is not.\n */\n\n/* eslint-disable */\n(function clearMUIDataVWarnings() {\n  const error = console.error.bind(console);\n  const partial = /Warning:.*data-v-/;\n\n  console.error = (message, ...args) => {\n    if (typeof message === 'string' && message.search(partial) !== -1) {\n      return;\n    }\n\n    error(message, ...args);\n  };\n})();\n\n/* eslint-enable */\n","module.exports = \"../fonts/2d36b1a925432bae7f3c53a340868c6e.ttf\";","module.exports = \"../fonts/3ed9575dcc488c3e3a5bd66620bdf5a4.ttf\";"],"sourceRoot":""}