{"version":3,"sources":["webpack:///./src/app/config.js","webpack:///./src/app/explorer/store/actions/index.js","webpack:///./src/app/shared/components/form/editors/Generic.jsx","webpack:///./src/app/shared/components/overlays/Result/Result.jsx","webpack:///./src/app/explorer/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/actions.js","webpack:///./src/app/explorer/SystemExplorerFeatureUtil.js","webpack:///./src/app/shared/lib/cron-validator/cron-validator.js","webpack:///./src/app/users-manager/store/actions/index.js","webpack:///./src/app/entities/actions.js","webpack:///./src/app/session/store/actions/index.js","webpack:///./src/app/shared/store/actions/index.js","webpack:///./src/app/explorer/store/selectors/index.js","webpack:///./src/app/shared/components/tooltip/Tooltip.jsx","webpack:///./src/app/shared/components/form/editors/Custom.jsx","webpack:///./src/app/job-process/store/constants.js","webpack:///./src/app/entities/utils/privileges.js","webpack:///./src/app/shared/components/form/SubmitButton.jsx","webpack:///./src/app/users-manager/components/AvatarCard/AvatarCard.jsx","webpack:///./src/app/shared/components/form/editors/field-level-validations.js","webpack:///./src/app/license-collection/utils/formatTimePeriod.js","webpack:///./src/app/shared/api/invocation.js","webpack:///./src/app/shared/store/state/index.js","webpack:///./src/app/session/store/selectors/index.js","webpack:///./src/app/executive-dashboard/store/actions/index.js","webpack:///./src/app/users-manager/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/thunks.js","webpack:///./src/app/license-collection/utils/formikFormatter.js","webpack:///./src/app/users-manager/components/SearchableList/SearchableList.jsx","webpack:///./src/app/shared/components/form/parameters/variants.jsx","webpack:///./src/app/job-process/store/selectors.js","webpack:///./src/app/core/components/Ensure/Ensure.jsx","webpack:///./src/app/session/store/state/index.js","webpack:///./src/app/entities/selectors.js","webpack:///./src/app/users-manager/store/mappers/index.js","webpack:///./src/app/license-collection/utils/copyToClipboard.js","webpack:///./src/app/shared/components/layout/NavigationTab/NavigationTab.jsx","webpack:///./src/app/users-manager/store/selectors/index.js","webpack:///./src/app/explorer/components/NavigationTab/NavigationTab.jsx","webpack:///./src/app/shared/api/accounts.js","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSqlStatementsUtil.js","webpack:///./src/app/license-collection/utils/normalizeParameter.jsx","webpack:///./src/app/license-collection/controls/TextField/TextField.jsx","webpack:///./src/app/license-collection/controls/DropdownField/DropdownField.jsx","webpack:///./src/app/license-collection/components/OutputModal/OutputModal.jsx","webpack:///./src/app/shared/api/schedule.js","webpack:///./src/app/explorer/store/mappers/index.js","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/SystemExplorerViewMode.js","webpack:///./src/app/core/store/index.js","webpack:///./src/app/entities/components/Switch.jsx","webpack:///./src/app/shared/components/simple-search-input/simple-search-input.jsx","webpack:///./src/app/shared/api/protocols.js","webpack:///./src/app/job-process/job-parameters.jsx","webpack:///./src/app/shared/components/form/parameters/normalizeParameter.js","webpack:///./src/app/job-process/containers/notifications/notifications.jsx","webpack:///./src/app/shared/api/process.js","webpack:///./src/app/executive-dashboard/store/thunks/index.js","webpack:///./src/app/shared/components/range-date-picker/constants.js","webpack:///./src/app/shared/components/form/parameters/index.jsx","webpack:///./src/app/core/components/Header/Header.jsx","webpack:///./src/app/dashboard/store/state/index.js","webpack:///./src/app/dashboard/store/actions/index.js","webpack:///./src/app/explorer/containers/AddServerCard/AddServerCard.jsx","webpack:///./src/app/explorer/containers/AddDatabaseCard/AddDatabaseCard.jsx","webpack:///./src/app/explorer/containers/ImportCSV/ImportCSV.jsx","webpack:///./src/app/shared/api/delete.js","webpack:///./src/app/entities/mappers.js","webpack:///./src/app/explorer/components/ActionCard/ActionCard.jsx","webpack:///./src/app/explorer/components/CardsLayout/CardsLayout.jsx","webpack:///./src/app/shared/lib/want/index.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/ChangePassword.jsx","webpack:///./src/app/shared/components/overlays/Modal/Modal.jsx","webpack:///./src/app/shared/api/namespace.js","webpack:///./src/app/shared/api/form.js","webpack:///./src/app/entities/components/form-actions/FormEditor.jsx","webpack:///./src/app/executive-dashboard/store/mappers/index.js","webpack:///./src/app/shared/components/center/center.component.jsx","webpack:///./src/app/shared/lib/react-dates/isBeforeDay.js","webpack:///./src/app/shared/components/LightTooltip/LightTooltip.jsx","webpack:///./src/app/shared/components/layout/Overflow/Overflow.jsx","webpack:///./src/app/shared/components/overlays/ModalHeader/ModalHeader.jsx","webpack:///./src/app/shared/components/controls/Checkbox/Checkbox.jsx","webpack:///./src/app/shared/lib/polling/index.js","webpack:///./src/app/explorer/containers/Forms/ServerForm.jsx","webpack:///./src/app/shared/api/datatypes.js","webpack:///./src/app/explorer/containers/Forms/DatabaseForm.jsx","webpack:///./src/app/shared/lib/download-file/download-file.js","webpack:///./src/app/jobs/actions/delete/DeleteJobModal.jsx","webpack:///./src/app/jobs/containers/Schedule/Schedule.jsx","webpack:///./src/app/entities/components/namespace-actions/NewNamespace.jsx","webpack:///./src/app/entities/components/form-actions/FormModal.jsx","webpack:///./src/app/explorer/containers/Settings/DatabaseSettings.jsx","webpack:///./src/app/license-collection/utils/getOutputText.js","webpack:///./src/app/job-process/store/actions.js","webpack:///./src/app/license-collection/utils/sendToEmail.js","webpack:///./src/app/executive-dashboard/components/ServerCard/ServerCard.jsx","webpack:///./src/app/executive-dashboard/components/ServersTile/ServersTile.jsx","webpack:///./src/app/executive-dashboard/utils/HorizontalStackedBar/HorizontalStackedBar.jsx","webpack:///./src/app/executive-dashboard/components/DatabasesTile/DatabasesTile.jsx","webpack:///./src/app/session/store/effects/be-version/be-version.effect.js","webpack:///./src/app/jobs/components/total-jobs-count/TotalJobsCount.jsx","webpack:///./src/app/shared/api/alias.js","webpack:///./src/app/session/store/reducers/reducer.js","webpack:///./src/app/dashboard/store/tasks.js","webpack:///./src/app/dashboard/store/reducers/reducer.js","webpack:///./src/app/shared/store/reducers/reducer.js","webpack:///./src/app/core/store/reducers/reducer.js","webpack:///./src/app/core/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/wishes.jsx","webpack:///./src/app/shared/components/form/editors/filters.js","webpack:///./src/app/entities/components/form-actions/utils.js","webpack:///./src/app/shared/api/privileges.js","webpack:///./src/app/explorer/components/DbObjects/Sidebar.jsx","webpack:///./src/app/explorer/components/DbObjects/Viewer.jsx","webpack:///./src/app/explorer/components/StatusLabel/StatusLabel.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/constants.jsx","webpack:///./src/app/job-process/store/tasks.js","webpack:///./src/app/license-collection/components/ListOutput/ListOutput.jsx","webpack:///./src/app/session/store/reducers/index.js","webpack:///./src/app/shared/lib/bind-reducer/bind-reducer.js","webpack:///./src/app/shared/lib/action-creator/action-states.js","webpack:///./src/app/shared/lib/action-creator/action-creator.class.js","webpack:///./src/app/shared/lib/slugify/slugify.js","webpack:///./src/app/shared/lib/create-url/create-url.js","webpack:///./src/app/shared/lib/number-pretty/number-pretty.js","webpack:///./src/app/shared/lib/smart-number/smart-number.js","webpack:///./src/app/shared/lib/capitalize-first-letter/capitalize-first-letter.js","webpack:///./src/app/shared/lib/patterns/email.js","webpack:///./src/app/shared/lib/patterns/phone-number.js","webpack:///./src/app/shared/lib/patterns/url.js","webpack:///./src/app/shared/lib/random-generator/string.js","webpack:///./src/app/shared/lib/random-generator/unique-id.js","webpack:///./src/app/shared/lib/function-placeholder/index.js","webpack:///./src/app/shared/lib/delay/index.js","webpack:///./src/app/shared/lib/react-dates/isInclusivelyAfterDay.js","webpack:///./src/app/shared/lib/redux-utils/actions.utils.js","webpack:///./src/app/shared/lib/redux-utils/reducers.utils.js","webpack:///./src/app/shared/lib/workload/parseData.js","webpack:///./src/app/session/store/effects/index.js","webpack:///./src/app/shared/lib/rest/try-async.js","webpack:///./src/app/shared/lib/rest/rest-client.js","webpack:///./src/app/session/pages/login/login.page.jsx","webpack:///./src/app/session/components/container/container.component.jsx","webpack:///./src/app/session/pages/login/components/form/form.component.jsx","webpack:///./src/app/shared/components/rest-errors/rest-errors.component.jsx","webpack:///./src/app/shared/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/workload-graph/workload-graph.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-tooltip/custom-tooltip.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-axis-tick/custom-axis-tick.component.jsx","webpack:///./src/app/shared/components/circle-img/circle-img.component.jsx","webpack:///./src/app/shared/components/number-label/number-label.component.jsx","webpack:///./src/app/shared/components/string-label/string-label.component.jsx","webpack:///./src/app/shared/components/search-input/search-input.component.jsx","webpack:///./src/app/shared/components/dropdown/dropdown.component.jsx","webpack:///./src/app/shared/components/small-input/small-input.component.jsx","webpack:///./src/app/shared/components/single-date-picker/single-date-picker.component.jsx","webpack:///./src/app/shared/components/range-date-picker/range-date-picker.component.jsx","webpack:///./src/app/shared/components/JobResults/JobResults.jsx","webpack:///./src/app/shared/components/switch/Switch.jsx","webpack:///./src/app/shared/components/Table/Table.jsx","webpack:///./src/app/session/pages/logout/logout.page.jsx","webpack:///./src/app/dashboard/root.module.jsx","webpack:///./src/app/shared/components/loaders/Loader/Loader.jsx","webpack:///./src/app/shared/components/loaders/ParameterLoader/ParameterLoader.jsx","webpack:///./src/app/shared/components/layout/Paper/Paper.jsx","webpack:///./src/app/shared/components/layout/Main/Main.jsx","webpack:///./src/app/shared/components/layout/Section/Section.jsx","webpack:///./src/app/shared/components/layout/ScrollableContainer/ScrollableContainer.jsx","webpack:///./src/app/shared/components/layout/Column/Column.jsx","webpack:///./src/app/shared/components/layout/Row/Row.jsx","webpack:///./src/app/dashboard/containers/status/status.container.jsx","webpack:///./src/app/dashboard/containers/status/components/daemon/daemon.component.jsx","webpack:///./src/app/dashboard/containers/status/components/job-status/job-status.component.jsx","webpack:///./src/app/dashboard/containers/search-area/search-area.container.jsx","webpack:///./src/app/dashboard/components/search-results/search-results.component.jsx","webpack:///./src/app/shared/components/controls/Input/Input.jsx","webpack:///./src/app/shared/components/controls/Button/Button.jsx","webpack:///./src/app/shared/components/overlays/ModalFooter/ModalFooter.jsx","webpack:///./src/app/shared/components/overlays/ErrorModal/ErrorModal.jsx","webpack:///./src/app/shared/components/overlays/ConfirmationModal/ConfirmationModal.jsx","webpack:///./src/app/dashboard/store/reducers/index.js","webpack:///./src/app/shared/store/reducers/index.js","webpack:///./src/app/shared/store/effects/index.js","webpack:///./src/app/root.module.jsx","webpack:///./src/app/core/root.layout.jsx","webpack:///./src/app/jobs/root.module.jsx","webpack:///./src/app/jobs/components/job-item/job-item.component.jsx","webpack:///./src/app/jobs/components/job-status/job-status.component.jsx","webpack:///./src/app/jobs/containers/filters/filters.container.jsx","webpack:///./src/app/shared/store/selectors/connections.js","webpack:///./src/app/jobs/containers/jobs-invocations/jobs-invocations.container.jsx","webpack:///./src/app/shared/lib/deep-copy/deep-copy.js","webpack:///./src/app/entities/root.module.jsx","webpack:///./src/app/users-manager/root.jsx","webpack:///./src/app/users-manager/users/root.jsx","webpack:///./src/app/users-manager/groups/root.jsx","webpack:///./src/app/explorer/root.jsx","webpack:///./src/app/explorer/treeview/root.jsx","webpack:///./src/app/explorer/components/DbObjects/DbObjects.jsx","webpack:///./src/app/core/containers/sidebar/sidebar.container.jsx","webpack:///./src/app/core/containers/sidebar/components/favorites/favorites.component.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/navigation.component.jsx","webpack:///./src/app/core/containers/sidebar/components/notification/notification.component.jsx","webpack:///./src/app/core/containers/sidebar/components/user-menu/user-menu.component.jsx","webpack:///./src/app/core/containers/sidebar/components/compile/compile.component.jsx","webpack:///./src/app/job-process/root.module.jsx","webpack:///./src/app/session/store/actions/session.action.js","webpack:///./src/app/session/store/effects/check-authorization/check-authorization.effect.js","webpack:///./src/app/constants.js","webpack:///./src/app/session/store/effects/login/login.effect.js","webpack:///./src/app/session/store/effects/logout/logout.effect.js","webpack:///./src/assets/images/login_graphic.svg","webpack:///./src/assets/images/vendita_logo_blue.svg","webpack:///./src/assets/images/mas_logo_blue.svg","webpack:///./src/app/shared/components/range-date-picker/range-date-range-picker.container.jsx","webpack:///./src/app/shared/store/actions/jobs.action.js","webpack:///./src/app/shared/store/actions/process.action.js","webpack:///./src/app/shared/store/actions/global-filters.action.js","webpack:///./src/app/dashboard/store/actions/filter-status.action.js","webpack:///./src/app/shared/api/daemon.js","webpack:///./src/app/dashboard/store/selectors/index.js","webpack:///./src/app/dashboard/containers/servers-list/ServersList.jsx","webpack:///./src/app/shared/store/effects/jobs/jobs.effect.js","webpack:///./src/app/shared/store/effects/connections/connections.effect.js","webpack:///./src/app/shared/store/effects/search-jobs/search-jobs.effect.js","webpack:///./src/app/shared/store/effects/search-processes/search-processes.effect.js","webpack:///./src/app/shared/store/effects/global-filters/global-filters.effect.js","webpack:///./src/app/users-manager/store/reducers/index.js","webpack:///./src/app/users-manager/groups/store/reducer.js","webpack:///./src/app/explorer/store/reducers/index.js","webpack:///./src/app/executive-dashboard/store/reducers/index.js","webpack:///./src/app/entities/reducer.js","webpack:///./src/app/dashboard/store/reducers/daemon.js","webpack:///./src/app/job-process/store/reducer.js","webpack:///./src/app/core/store/middlewares.js","webpack:///./src/app/core/store/reducers/index.js","webpack:///./src/app/core/store/actions/notification.action.js","webpack:///./src/app/jobs/components/job-list/job-list.component.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ScheduleModal/ScheduleModal.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ViewTabs/ViewTabs.jsx","webpack:///./src/app/jobs/containers/Schedule/components/Documentation/Documentation.jsx","webpack:///./src/app/jobs/containers/Schedule/containers/ScheduleForm/ScheduleForm.jsx","webpack:///./src/app/shared/components/form/editors/formatters.js","webpack:///./src/app/shared/components/form/parameters/extractDefault.js","webpack:///./src/app/job-process/components/notification-groups/notification-groups.jsx","webpack:///./src/app/job-process/components/notification-users/notification-users.jsx","webpack:///./src/app/job-process/components/notification-events/notification-events.jsx","webpack:///./src/app/job-process/components/notification-list/notification-list.jsx","webpack:///./src/app/entities/components/Entity.jsx","webpack:///./src/app/entities/containers/SelectedEntity.jsx","webpack:///./src/app/entities/components/ActionsNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/EditNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/DeleteNamespace.jsx","webpack:///./src/app/entities/components/ActionsConstant.jsx","webpack:///./src/app/shared/api/constant.js","webpack:///./src/app/entities/components/ActionsProcess.jsx","webpack:///./src/app/entities/components/process-actions/EditProcessModal.jsx","webpack:///./src/app/entities/components/process-actions/ProcessEditor.jsx","webpack:///./src/app/entities/components/ActionsForm.jsx","webpack:///./src/app/shared/components/form/SubmitButtonNoDirty.jsx","webpack:///./src/app/entities/components/form-actions/FormParameters.jsx","webpack:///./src/app/entities/components/ActionsRoot.jsx","webpack:///./src/app/entities/components/ActionsPrototype.jsx","webpack:///./src/app/entities/components/ActionsSchedule.jsx","webpack:///./src/app/entities/components/ActionsCommon.jsx","webpack:///./src/app/entities/components/common-actions/DeleteEntity.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesModal.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesEditor.jsx","webpack:///./src/app/users-manager/components/HeaderPageSwitch/HeaderPageSwitch.jsx","webpack:///./src/app/users-manager/users/containers/UserLoader.jsx","webpack:///./src/app/users-manager/users/pages/UserView/UserView.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/Privileges.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/UserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserDetails.jsx","webpack:///./src/app/users-manager/users/pages/UserView/components/UserDatesBox.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserInfo.jsx","webpack:///./src/app/users-manager/components/UserCard/UserCard.jsx","webpack:///./src/app/users-manager/users/pages/NoUsersSelected.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/CreateNewUser.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/NewUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/components/GroupCard/GroupCard.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/GroupView.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/Privileges.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/GroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditGroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditSubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/CreateNewGroup.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/pages/NoGroupSelected.jsx","webpack:///./src/app/explorer/treeview/layers/Dbms/Dbms.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/ServerList.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/containers/Server/Server.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/DatabaseList.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/containers/Database/Database.jsx","webpack:///./src/app/explorer/containers/Breadcrumbs/Breadcrumbs.jsx","webpack:///./src/app/explorer/components/ContentSwitch/ContentSwitch.jsx","webpack:///./src/app/explorer/containers/AllDbms/AllDbms.jsx","webpack:///./src/app/explorer/containers/AllServers/AllServers.jsx","webpack:///./src/app/explorer/containers/Settings/ServerSettings.jsx","webpack:///./src/app/explorer/containers/AllDatabases/AllDatabases.jsx","webpack:///./src/app/explorer/containers/Workload/Workload.jsx","webpack:///./src/app/explorer/containers/License/License.jsx","webpack:///./src/app/explorer/containers/License/Report/Report.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesUsage/FeaturesUsage.jsx","webpack:///./src/app/explorer/components/LicenseReporting/UnusedFeatures/UnusedFeatures.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesTable/FeaturesTable.jsx","webpack:///./src/app/explorer/containers/Storage/Storage.jsx","webpack:///./src/app/explorer/containers/Storage/MSSQL/MssqlStorage.jsx","webpack:///./src/app/explorer/containers/Objects/Objects.jsx","webpack:///./src/app/explorer/containers/Sessions/Sessions.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/CommonSessionsTable.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/MssqlSessionsTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSQLStatements.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/charts/ElapsedTimeChart.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/OracleTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/PostgresTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MysqlTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MssqlTopSQLTable.jsx","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/ToggleSystemExplorerView.jsx","webpack:///./src/app/explorer/components/TableView/SystemExplorerTable.jsx","webpack:///./src/app/shared/api/compile.js","webpack:///./src/assets/images/mas_logo_white.svg","webpack:///./src/assets/images/vendita_logo_white.svg","webpack:///./src/app/job-process/job-view.jsx","webpack:///./src/app/job-process/job-form.jsx","webpack:///./src/app/job-process/containers/output/output.jsx","webpack:///./src/app/job-process/components/ListOutput/ListOutput.jsx","webpack:///./src/app/job-process/components/JobStatus/JobStatus.jsx","webpack:///./src/app/executive-dashboard/ExecutiveDashboard.jsx","webpack:///./src/app/executive-dashboard/components/RefreshDashboard/RefreshDashboard.jsx","webpack:///./src/app/executive-dashboard/components/ToggleDashboard/ToggleDashboard.jsx","webpack:///./src/app/executive-dashboard/components/PhysicalDashboard/PhysicalDashboard.jsx","webpack:///./src/app/executive-dashboard/containers/SearchSection/SearchSection.jsx","webpack:///./src/assets/images/server_core.svg","webpack:///./src/app/executive-dashboard/components/SwitchContent/SwitchContent.jsx","webpack:///./src/app/executive-dashboard/components/EmptyContent/EmptyContent.jsx","webpack:///./src/app/executive-dashboard/containers/Dashboard/Dashboard.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/OptionsTile.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsList/OptionsList.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionItem/OptionItem.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsChart/OptionsChart.jsx","webpack:///./src/app/executive-dashboard/containers/ServerView/ServerView.jsx","webpack:///./src/app/executive-dashboard/components/UsedOptions/UsedOptions.jsx","webpack:///./src/app/executive-dashboard/components/VirtualDashboard/VirtualDashboard.jsx","webpack:///./src/app/executive-dashboard/components/NoData/NoData.jsx","webpack:///./src/app/executive-dashboard/containers/ToggleSelection/ToggleSelection.jsx","webpack:///./src/app/license-collection/LicenseCollection.jsx","webpack:///./src/app/license-collection/components/Navigation/Navigation.jsx","webpack:///./src/app/license-collection/Pages/Hardware/Hardware.jsx","webpack:///./src/app/license-collection/utils/extractDefault.js","webpack:///./src/app/license-collection/Pages/Software/Software.jsx","webpack:///./src/app/license-collection/Pages/VMware/VMware.jsx","webpack:///./src/app/license-collection/Pages/Packaging/Packaging.jsx","webpack:///./src/app/shared/components/overlays/SuccessModal/SuccessModal.jsx","webpack:///./src/app/license-collection/utils/downloadFile.js","webpack:///./src/app/license-collection/Pages/PreSoftware/PreSoftware.jsx","webpack:///./src/app/licensing/Licensing.jsx","webpack:///./src/i18n/index.js","webpack:///./src/i18n/en/index.js","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/scoped-css-mui-compatibility.js","webpack:///./src/assets/fonts/Lato-Regular.ttf","webpack:///./src/assets/fonts/OpenSans-Regular.ttf"],"names":["CONSTANTS","defaultConstants","LOAD_ALL_ACCOUNTS","CHANGE_STATE","LOAD_ALL_LICENSES","LOAD_TOP_SQL_STATEMENTS","LICENSE_FULL_REPORT","PROVIDE_SERVERS_USAGE","LOAD_STORAGE_POINTS","SET_STORAGE_NS","LOAD_STORAGE_DETAILS","LOAD_OBJECT_DETAILS","SET_SELECTED_OBJECT","LOAD_SESSIONS","PROVIDE_DB_LAST_BACKUP","PROVIDE_DB_STATUS","UPDATE_DB_STATUS","LOAD_PROTOCOLS","LOAD_COLLECTION_PROCESS","EXECUTE_COLLECTION_PROCESS","LOAD_MSSQL_DISK_IO","LOAD_MSSQL_STORAGE_USED","LOAD_MSSQL_FILE_STORAGE","Text","forwardRef","ref","options","validate","defaultValue","value","required","reactToChange","props","useState","shouldValidate","setShouldValidate","validation","useMemo","check","useField","touched","name","field","meta","helpers","formikCtx","useFormikContext","useEffect","setValue","setTouched","multiline","isPopup","undefined","setError","length","selected","find","o","description","disableClearable","id","getOptionLabel","option","label","getOptionDisabled","disabled","onChange","e","renderInput","params","type","error","helperText","Email","validations","merge","email","PhoneNumber","phone","Integer","required_not_null","Password","BOOL_OPTIONS","BooleanSelect","Date","moment","format","utc","fullWidth","utils","MomentUtils","disableToolbar","inputVariant","KeyboardButtonProps","date","Time","ampm","mask","Select","isNamespace","getOptionSelected","desription","icons_map","success","mdiCheckDecagram","fail","mdiAlertDecagram","Result","children","className","classnames","fontSize","d","propTypes","oneOf","node","ResultText","compact","bool","ResultMessages","messages","map","msg","index","key","text","split","Messages","loadAllAccountsThunk","payload","dispatch","getState","creators","loading","RestClient","get","BASE","ENDPOINTS","ACCOUNTS","page_size","response","data","protocols","explorer","from","provideServersUsageThunk","provideDBLastBackupThunks","provideDBStatusThunks","loadProtocolsThunk","PROTOCOLS","changeStateThunk","newState","action","loadAllLicensesThunk","JOBS","loadTopSQLStatementsThunk","postInvocation","creationResult","invocations","invocationUuid","uuid","statusChecksCount","isFinished","sleep","fetchInvocation","bind","invocationStatus","invocation","status","fetchInvocationOutput","invocationOutput","result","outputs","timeout","ms","Promise","resolve","setTimeout","fn","args","getLicenseReportThunk","fullPath","dbconn","Array","isArray","reportData","loadSessionsThunk","filters","SESSIONS","sort","loadSessionsByProcessThunk","protocol","dbmsProperty","TopSqlStatementsUtil","getDbmsPropertyName","parameters","oformat","process","SystemExplorerFeatureUtil","getSessionsEndpoint","timestamp","resultTxt","statementsJson","sessionsData","JSON","parse","sessionsLoaderResolver","shouldLoadSessionsByProcess","enableSessionsLoadingFlag","disableSessionsLoadingFlag","loadStorageDetailsThunk","STORAGE_DF","setStorageItemThunk","ns","loadStoragePointsThunk","STORAGE_TS","loadMssqlStorageDataThunk","storageKey","resultJson","invocationOutputPoller","output","parseInvocationResult","loadObjectsThunk","objectApis","path","allSettled","api","dbms","allData","res","loadObjectsByProcessThunk","getObjectsEndpoint","objectsJSON","item","objectsLoaderResolver","shouldLoadObjectsByProcess","setSelectedObjectThunk","servers","structured","slice","usageResult","server","loadUsagePerDb","filter","push","address","usage","highLoadCount","a","b","parseFloat","Oracle","r","Mysql","Pgsql","Mssql","databases","db","special","database","dbLastBackup","loadDBLastBackup","backup","dbStatus","loadDBStatus","message","dbName","refreshServerDbsStatusThunk","retrieveDBStatus","shell","DB_STATUS","toString","toLowerCase","parseInt","refreshDBStatusThunk","selectedDBMS","sv","loadProcessDetailsThunk","PROCESSES","details","processes","executeCollectionProcessThunk","HOST_CPU","s","DB_LAST_BACKUP","isValid","LOAD_ALL_GROUPS","LOAD_GROUP","DELETE_GROUP","GRANT_PRIVILEGE","REVOKE_PRIVILEGE","ADD_USERS_TO_GROUP","REMOVE_USERS_FROM_GROUP","REMOVE_GROUPS_FROM_GROUP","PATCH_SELECTED_GROUP","CREATE_GROUP","DbmsType","ORACLE","POSTGRES","MYSQL","MSSQL","OTHER","DbmsFeature","WORKLOAD","TOP_SQL","OBJECTS","STORAGE","LICENSE_REPORTING","FEATURE_BY_TYPE_MAP","LOAD_SESSIONS_BY_PROCESS","LOAD_OBJECTS_BY_PROCESS","LOAD_STORAGE_BY_PROCESS","OBJECTS_SIDEBAR_DISABLED","SESSIONS_ENDPOINT_MAP","OBJECTS_ENDPOINT_MAP","DBMS_LIST_ORDER","OBJECTS_DATA_MAPPERS","OBJECT_NAME","CREATED","create_date","OBJECT_ID","object_id","LAST_DDL_TIME","modify_date","dbmsType","feature","includes","isFeatureAllowed","fullName","startsWith","startIdx","lastIndexOf","substr","MONTH_LIST","WEEKDAYS_LIST","CronValidator","minutes","isValidNumberValue","cleanValue","hours","days","month","isValidAlternativeValue","weekDay","time","maxVal","zeroAllowed","every","part","isValidNumberPart","rangeNumbersArr","el","isValidNumberRange","timeNumber","trim","dataArray","element","allowedValues","isValidAlternativePart","rangeValues","isValidAlternativeRange","indexOf","values","FORMAT_MSG","MINUTES","HOURS","DAYS","MONTH","DAY_OF_WEEK","EVERY_HOUR_WARNING","ALLOWED_MINUTES_OPTIONS","LOAD_ALL_USERS","SELECT_USER","LOAD_USER","ADD_USER_TO_GROUPS","REMOVE_USER_FROM_GROUPS","DEACTIVATE_USER","CREATE_USER","fetchEntities","promises","ENTITY_TYPES_FETCH","query","url","concat","encodeURIComponent","promise","entityType","fetchEntity","eType","definition","desc","console","warn","selectEntity","entity","clearSelectedEntity","setFilterType","setFilterSearch","openModal","actions","sessionActions","jobsActions","processActions","globalFiltersActions","pipe","fns","arg","reduce","prev","filterBy","selector","equalityFn","retrieveFilteredAccounts","state","accounts","nodes","stateValue","currentValue","Object","keys","currentServer","retrieveServerEntry","structure","entry","retrieveDatabaseEntry","getStatePath","getStructured","getSessions","sessions","getSessionsFlags","flags","getTopSqlStatements","topSqlStatements","getTopSqlStatementsFlags","getStoragePointsLoadingFlag","storage","loadingPoints","getStorageDetailsLoadingFlag","loadingDetails","getSelectedStorage","getStoredEntries","storedEntries","getSelectedObject","objects","selectedObject","getSelectedOwner","selectedOwner","getObjectsEntries","getObjectsLoadingFlag","getMssqlDiskIO","mssqlDiskIO","getMssqlStorageUsed","mssqlStorageUsed","getMssqlFileStorage","mssqlFileStorage","getFullPath","createSelector","pathArr","haveStorageData","selectedStorage","getFormattedStorage","isLoading","points","_","point","Used_MB","Total_MB","Tablespace","freePerc","freeGB","Free_MB","totalGB","usedGB","haveObjectsData","selectedObjects","getStorageDetailsData","list","selectedNS","tablespace","files","TABLESPACE_NAME","getMssqlStorageDetails","diskIO","storageUsed","fileStorage","getStructuredObjects","tree","acc","forEach","object","OWNER","owner","getInvalidObjects","invalidObjects","included","findIndex","STATUS","getSelectedObjectData","isObject","getObjectsDataByProcess","objectsSelectorResolver","getSortedSessions","sortFunction","order","sortKey","getTime","selectTopSqlStatements","statementsTxt","getBackup","backups","getDBStatus","statuses","getDBStatusInfo","info","dbMessage","STATUS_TYPES","down","up","notConnected","notFound","getDBMSStatus","allStatuses","getDBMSStatusInfo","dbmsStatus","getServerStatus","getServerStatusInfo","serverStatus","getEntityPendingStatus","en","LightTooltip","withStyles","tooltip","color","backgroundColor","letterSpacing","lineHeight","fontFamily","Tooltip","LimitlessTooltip","maxWidth","RSAKey","FQName","recieved","fqname","namespace","parts","initial","join","last","style","marginBottom","NamespaceSelect","QualifiedName","masName","AccountSelect","showUrls","setShowUrls","boxName","showToggle","useCallback","target","checked","inlineLoader","ADDITIONAL_ACCOUNT_FILTERS","filterFn","deepCopy","account","formatAccount","Boolean","size","PLATFORMS","tester","PROCESS_TYPES","PlatformSelect","platformValue","platform","processValue","reverse","test","ProcessTypeSelect","typeValue","ProcessSelect","p","OPTIONS","appearance","is_executable","customVal","namespaces","FormPrototypeSelect","prototype","ModeSelect","mode","modes","enumerations","variadicListReducer","produce","draft","deflt","pop","useVariadicList","useReducer","replvars","Variadic","displayDeftlDesc","selectedProcess","Header","Title","Content","dataType","Fragment","VariadicInstance","defltDesc","types","display","alignItems","justifyContent","onClick","name_base","parsedDeflt","replace","firstCharLetter","Multiline","open","setOpen","InputProps","startAdornment","title","cursor","mdiArrowExpand","width","height","variant","Footer","Right","Replvalues","valuesNr","replvaluesParams","i","replvalues","repl","Uuid","InvocationStatus","NEW","ALL","NOT_FETCHED","ABORTED","SCHEDULED","SUCCEEDED","FAILED","EXECUTING","DELAYED","KILLED","AllowOutputFor","AllowGeneralEditingFor","CannotShowStatusFor","FAILURES","SUCESSES","WARNINGS","hasWritePrivileges","privileges","effective","hasOnlyReadPrivilege","isOnlySelectGroup","userDetails","toJS","member_of","isAdmin","SubmitButton","confirmation","submitForm","isSubmitting","isValidating","dirty","modalActions","close","log","minWidth","maxHeight","icon","scrollable","BodyText","Left","fontStyle","fontWeight","marginTop","AvatarCard","avatar","onSelect","focusable","onFocus","event","stopPropagation","tabIndex","data-qa","alt","src","fallback","containEvent","placement","mdiInformationOutline","preventDefault","shape","string","func","mergeValidations","callbacks","provided","checkRequired","Yup","nullable","checkRequiredNotNullable","checkEmail","validateSync","checkPhoneNumber","matches","excludeEmptyString","checkUnsignedInt","checkName","checkFirstLetter","checkUuid","noop","unsigned_int","unsigned_float","signed_float","DAY","formatTimePeriod","timeMillis","millisLeft","seconds","Math","floor","body","post","requestInvocation","pollerFinished","succeeded","this","resultJsonString","localState","shared","jobsSelector","connectionsSelector","jobsSearchedSelector","processesSearchedSelector","globalFiltersSelector","getCurrentUserName","session","getCurrentUserDetails","PROVIDE_EXECUTIVE_DASHBOARD","PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD","SELECT_ALL","DESELECT_ALL","TOGGLE_SERVER","loadAllUsersThunk","USERS","loadUserThunk","grantPrivilegeThunk","user","patch","revokePrivilegeThunk","addUserToGroupsThunk","groups","allUsers","errorMsg","removeUserFromGroupsThunk","deactivateUserThunk","createUserThunk","username","password","refreshed","loadAllGroupsThunk","GROUPS","loadGroupThunk","createGroupThunk","groupname","group","removeUsersFromGroupThunk","removeSubGroupsThunk","addUsersToGroupThunk","users","all","removeGroupThunk","delete","getInitialValues","initialValues","parameter","getValidationSchema","validationSchema","is_required","formatParameters","SearchableList","items","visibleScroll","scrolled","setScrolled","onWheel","currentTarget","scrollTop","scroller","setQuery","filtered","scrollBy","top","deltaY","left","deltaX","array","defaultProps","extractParameter","others","editor","additional","field_name","TextParameter","passable","PasswordParameter","PhoneNumberParameter","BooleanParameter","IntegerParameter","EmailParameter","ProcessParameter","AccountParameter","VariadicParameter","ReplvaluesParameter","FQNameParameter","RSAKeyParameter","MultilineParameter","UuidParameter","getQuery","invocation_viewer","getInvocation","getInvocationStatus","Ensure","connect","entitySelectors","request","Ensurer","fresh","Loading","ParameterLoader","Loader","authorizationSelector","currentUserSelector","loginSelector","beVersionSelector","beLicenceSelector","beHealthSelector","ENTITY_TYPES","dataEnclosure","ROOT_ENTITY","getBreadcrumbs","entities","breadcrumbs","collectData","namespacesWithMeta","collection","aliases","alias","alias_type","aliasedEntity","dataItem","ownNamespace","selectors","def","fetch_status","namespaceWithMetaSelector","dataNamespaces","getFilteredEntities","accumulator","getEntitiesAsHashMap","filteredEntities","search","domainArray","paths","findEntity","notPersisted","getEntities","entitiesMap","roots","entityName","names","isSelected","columns","breadcrumb","level","rows","bucket","entityLevel","getSelectedEntity","namespaceChildrenListSelector","selectedEntity","mapUsersData","mapLoadedUser","mapSortInsensitive","localeCompare","copyTextToClipboard","textToCopy","makeCopyToClipboard","copyToClipboard","getOutputText","navigator","permissions","then","clipboard","writeText","legacyMethod","textArea","document","createElement","appendChild","classList","add","focus","select","execCommand","removeChild","NavigationTab","active","tabs","indicatorColor","textColor","tab","React","PureComponent","getGroupDescription","allGroups","groupDetails","isAllowedProtocol","isSessionsAllowed","isObjectsAllowed","isStorageAllowed","postAccount","patchAccount","deleteAccount","getConnection","patchConnection","postFile","file","UPLOAD_ACCOUNTS","ALLOWED_DBMS","ALLOWED_FOR_CHARTS","PROCESS_ENDPOINT_MAP","DBMS_PROPERTY_NAME_MAP","supportedDataTypes","dataTypes","prototypes","position","Number","MAX_SAFE_INTEGER","data_type","substring","is_supported","extractDefault","getLabel","getIcon","labels","icons","target_working_dir","target_shell","repo_shell","repo_working_dir","form","vsphere_account","vcenterservername","partitioning_methods","mdiFolderHome","mdiLanConnect","mdiSourceRepository","mdiHexagonMultipleOutline","mdiCubeOutline","TextField","placeholder","endAdornment","mdiHelpCircleOutline","filterDbmsByShell","formValues","shellAccount","dbmsAccount","ADDITIONAL_OPTIONS_FILTERS","DropdownField","datatypes","rawAccounts","forms","currentFormValues","datatype","additionalFilter","opt","meta2","readOnly","toggle","onSendByEmail","processName","sendToEmail","OutputModal","content","interval","modalDetails","setMessage","sendToEmailWarningOpen","setSendToEmailWarningOpen","setInterval","clearInterval","errors","minHeight","postSchedule","getSchedule","patchSchedule","mapAccountsTree","splitIntoRootsByProtocol","root","splitIntoRootsByAddress","splitIntoRootsByDatabase","serversMap","existingEntry","databaseMap","mapAccountsNewStructure","raw","protocolsArr","dbServer","dbmsServerEntry","otherIndex","splice","mapProtocols","is_abstract","special_required","mapUpdateDBStatus","existingDb","mapLicenseReport","currentItem","DETECTED_USAGES","USED","NAME","_mapUsedLicense","UNUSED","FEATURES","license","USAGES","VERSION","LAST_USE","LAST_USAGE_DATE","FIRST_USE","FIRST_USAGE_DATE","SystemExplorerViewMode","TILES","TABLE","saga","createSagaMiddleware","persistConfig","storageSession","whitelist","configStore","appReducer","persistReducer","combineReducers","core","sessionReducer","dashboard","dashboardReducer","sharedReducer","usersManager","usersManagerReducer","groupsReducer","createReducer","explorerReducer","executiveDashboard","executiveDashboardReducer","daemon","effects","sessionEffects","sharedEffects","store","createStore","routing","window","location","reload","composeWithDevTools","applyMiddleware","thunk","effect","run","Context","createContext","Switch","Provider","Case","useContext","SimpleSearchInput","fetchProtocols","ProcessParameters","editable","allValues","xs","normalize","chunk","spacing","normalized","space_begone","space_summon","param","defaults","defineEditor","maybeDisabled","parseProtocols","metaEditor","proto","sortBy","Notifications","getEventTypeIcons","jobStart","jobCompletion","abnormalEvent","notice","fullLog","toggleApplyButton","setState","isEditing","checkIfAllUsersSelectedCurrentGroup","selectedGroup","getSelectedGroup","usersData","onSelectGroup","groupsData","onSelectUser","setFlagGroupsIfContainSelectedUser","onSelectUserAction","shouldClear","displayIcons","onSelectEventType","recievedData","events","areUsersSelected","isClearActionAvailable","isGroupSelected","eventTypeIcons","onApply","mappedState","getProcess","patchProcess","loadExecutiveDashboardThunk","EXECUTIVE_DASHBOARD","deselectAllThunk","selectAllThunk","rawEntries","toggleServerThunk","allServers","selectedServers","svIndex","nrCores","loadVirtualExecutiveDashboardThunk","VIRTUAL_EXECUTIVE_DASHBOARD","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","NAV_POSITION_TOP","ANCHOR_LEFT","WEEKDAYS","MODIFIER_KEY_NAMES","Set","RepeatableParameter","Parameter","is_repeatable","stretchContent","PropTypes","filterStatusSelector","filterStatusActions","checkDeamonStatus","checkDaemon","AddServerCard","trigger","AddNewServerContainer","AddNewServer","reloadAccounts","ModalContext","formRef","useRef","resp","mdiDns","formikRef","handleSubmission","isNew","AddDatabaseCard","AddNewDatabaseContainer","AddNewDatabase","fetchDataTypes","pr","mr","data_types","mdiDatabase","ImportCSV","ImportCSVContainer","ImportCSVFile","selectedFile","setSelectedFile","setResult","fileName","htmlFor","accept","downloadFile","DOWNLOAD_CSV_TEMPLATE","FormData","append","catch","deleteEntity","deleteInvocation","mapScheduledNames","allScheduled","nameArr","ActionCard","settings","addOnly","readOnlyOptions","lastBackup","statusInfo","addable","mdiContentSave","role","capitalizeFirstLetter","fillable","percentage","CardsLayout","want","Unresolved","keygen","settler","wantComponent","Picked","ChangePassword","useLinkTrigger","done","confirm","onSubmit","setSubmitting","innerRef","handleSubmit","ChangePasswordContainer","selectedUser","Modal","providedId","aria","onClose","disableBackdropClick","oneOfType","ModalHeader","getNamespace","patchNamespace","postNamespace","postForm","createForm","updateForm","pointers","instances","instance","fields","PackedContext","FormEditor","initialPacked","groupForm","cloneDeep","split_name","packed","contextValue","validateOnChange","form_name","protoName","extracted","extractFieldInfo","exclusions","filteredExtractions","val","packedCopy","set","unpacked","ungroupForm","v","rename","version","request_args","unshift","key_struct","entries","matched","exec","lower","mapAllServers","groupServers","entryInfo","srvname","model","sid","collDate","Ncore","totalDBs","eelic_count","selic_count","sids","installedOptions","aa_count","ac_count","as_count","dv_count","mt_count","adg_count","rac_count","olap_count","part_count","in_mem_db_count","rac_one_node_count","real_app_test_count","totalInstalledOptions","mapVirtualServers","vmname","vmguesthostname","vmguestos","vmipaddress","hosts_nr","cpu","cpucores","allSids","o1","o2","diff","CenterComponent","isRequired","isBeforeDay","isMoment","aYear","year","aMonth","bYear","bMonth","isSameYear","Overflow","component","nodeRef","scrollableX","setScrollableX","scrollableY","setScrollableY","scrolledX","setScrolledX","scrolledY","setScrolledY","Tag","onScroll","scrollLeft","current","box","clientWidth","clientHeight","scrollHeight","scrollWidth","closeable","providedAria","changedForm","context","fieldChanged","changed","Checkbox","rest","control","checkedIcon","task","duration","running","runTask","start","stop","ServerForm","editing","submission","setSubmission","passwordEditable","setPasswordEditable","showRSA","setShowRSA","handleAccountCreation","getCreateAccountHandler","allowedProtocols","availablePorts","default_port","host","port","server_password","user_key","confirm_server_password","rsa_key","loadNewAccountHandler","validateOnBlur","validateOnMount","formik","setFieldValue","PasswordOrRSA","allowed","onInput","request_body","server_user","DATATYPES","DatabaseForm","mapAccountValues","confirm_password","selectedProtocol","allowRSA","allow_rsa_key","withDatabase","withMode","padded","handler","blobData","blob","Blob","blobURL","URL","webkitURL","createObjectURL","tempLink","href","setAttribute","click","revokeObjectURL","ConnectedDeleteJobModal","globalFilters","getJobs","sharedActions","dispatchLoading","DeleteJobModal","terminator","startDate","unix","endDate","end","asDays","date_invoke","period","getQSP","mdiTrashCan","Schedule","setFilledValues","filledValues","selectedOption","setSelectedOption","canSelectProcess","setCanSelectProcess","onClickHandler","btnLabel","isScheduled","schedule","ConnectedNewNamespace","NewNamespace","isDisabled","classes","handleSubmitNew","ConnectedFormModal","refresh","FormModal","mdiClipboardCheck","DatabaseSettings","editDbTrigger","deleteDbTrigger","deleteDbOpen","setDeleteDbOpen","deleteDbErrorOpen","setDeleteDbErrorOpen","deleteDbModalActions","deleteDbErrorModalActions","mdiSettings","mdiDelete","EditDatabaseContainer","EditDatabase","row","processQuery","updateInvocation","subject","tooltipTitle","ServerCard","toggleSelectedCallback","mdiCubeScan","mdiMemory","Cores","mdiCalendarBlank","colors","1","2","4","6","8","16","24","ServersTile","isSingle","total","cores","count","padding","image","number","showTextIn","fontColor","HorizontalBar","listBars","prevProps","prevState","isEqual","getListBarWithOtherParameters","widthTotal","bar","calcWidthTotal","barWidth","assign","evt","random","g","showTextInsteadValue","showTextWithValue","float","showValueIn","fill","randomColor","x","y","dy","textAlign","getListTextBar","showTextUp","showValueUp","renderLabel","renderBars","showTextDown","showValueDown","Component","DatabasesTile","dbs","getBeVersion","getBeLicence","getBeHeath","BeLicenceEffect","BeHealthEffect","BeVersionEffect","BE_VERSION","put","dispatchSuccess","dispatchFail","BE_LICENCE","BE_HEALTH","getBeHealth","takeEvery","getLoadingAction","TotalJobsCount","jobs","job","boxShadow","borderRadius","getAlias","patchAlias","postAlias","initialState","login","authorization","actionStates","LOADING","currentUser","beVersion","reducerActions","checkAuthorization","setIn","getSuccessAction","fromJS","SUCCESS","getFailAction","FAIL","Error","daemonPoller","withPolling","filterStatus","setFilterStatus","getEventAction","sessionGlobalFilters","subtract","startOf","localStorage","getItem","page_count","total_count","fetching","callFailed","reason","connections","searchResults","setGlobalFilters","nextState","setItem","stringify","logout","removeItem","getConnections","searchJobs","searchProcesses","notifications","addNotifications","removeNotification","notificationIndex","removeIn","notificationActions","WantParameter","boolean","variadic_parameter","filterShellByPlatform","shellFieldName","PLATFORM_VALUE_TO_TYPE","PostgreSQL","MySQL","platformTree","platformAddresses","hasOwnProperty","maxPosition","max","virtual","currentGroup","upper","nextGroup","iteration_limit","instanceCount","f","grouped","subvalues","dropRight","getPrivileges","isAlias","cls","setPrivileges","granted","role_type","privilege","enitity_name","VerticalUsageBar","viewBox","rx","ry","SidebarStorageItem","StorageSidebar","selectedItem","mdiFileTableBox","iconMapper","triggers","mdiAlertOutline","tables","mdiTable","indexes","mdiTableColumnWidth","procedures","mdiAlphaPBox","packages","mdiInbox","packageBodies","mdiInboxFull","objectsSidebarMapper","invalidChildren","mdiFileTree","isObjectSelected","isInvalid","invalid","ObjectsSidebar","KPIDisplay","suffix","colorFormatting","digits","valueString","toLocaleString","minimumFractionDigits","maximumFractionDigits","NoDataComponent","mdiHelpRhombusOutline","StorageDetailsList","PCT_USED","FILE_NAME","SIZE_MB","MAXSIZE_MB","filePath","extension","chartType","loader","toFixed","is3D","rootProps","StorageViewer","ObjectsViewer","sidebarDisabled","objectsDataMapper","getObjectsDataMapper","mdiArrangeBringToFront","mdiFlashCircle","STATUS_LABEL_MAP","StatusLabel","navigationItems","to","qaClass","mdiClipboardPlayMultipleOutline","mdiShieldCheckOutline","invocationPoller","ListOutput","reducer","bindReducer","ActionCreatorHandler","slugify","createUrl","paramsUrl","numberPretty","formatNumber","pow","decimals","smartNumber","charAt","toUpperCase","emailPattern","phoneNumberPattern","urlPattern","randomStringGenerator","possible","generateUniqueId","btoa","valueOf","emptyFunc","delay","timer","isInclusivelyAfterDay","STATES","stateKey","unchanged","reducers","reducerInitialState","getWorkloadData","dateRange","isSingleDay","currentDate","jobsWithFormattedInvokedDate","orderBy","groupJobsByDate","groupBy","intervalArray","totalDays","getHoursArray","getDaysArray","day","dateArray","CheckAuthorizationEffect","LoginEffect","LogoutEffect","tryAsync","onError","RestClientClass","authentications","basicAuth","accessToken","baseUrl","HOST","client","axios","create","TIMEOUT","baseURL","headers","Accept","head","Cookie","remove","getRequestConfig","LoginPage","history","submit","resetErrors","mapStateToProps","mapDispatchToProps","ContainerComponent","MasLogo","VenditaLogo","LoginGraphic","FormComponent","setShowPassword","showPassword","handleMouseDownPassword","submitHandler","restErrors","getRestErrors","noValidate","autoComplete","autoFocus","getError","valueChangeHandler","inputProps","InputLabelProps","aria-label","onMouseDown","edge","labelWidth","RestErrorsComponent","JobItemComponent","jobStatus","formatName","nameContainerWidth","getElementById","offsetWidth","starPath","formattedName","canvas","getContext","metrics","measureText","shift","extended","statusChild","local","WorkloadGraphComponent","setSingleDay","activeLabel","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickSize","axisLine","tick","stroke","strokeWidth","fillOpacity","CustomTooltipComponent","nextProps","CustomAxisTickComponent","transform","textAnchor","CircleImgComponent","NumberLabelComponent","StringLabelComponent","SearchInputComponent","DropdownComponent","handleToggle","isDropdownOpen","setCloseDropdown","anchorRef","contains","onClickCallback","itemIndex","createRef","parentWidth","isOpen","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClickAway","SmallInputComponent","SingleDatePickerComponent","focused","onDateChange","onFocusChange","numberOfMonths","customInputIcon","isOutsideRange","hideKeyboardShortcutsPanel","displayFormat","navPrev","mdiChevronLeft","navNext","mdiChevronRight","RangeDatePicker","renderDayContents","anchorDirection","block","customArrowIcon","mdiArrowLeftRight","customCloseIcon","enableOutsideDays","endDateId","endDatePlaceholderText","horizontalMargin","initialEndDate","initialStartDate","initialVisibleMonth","isDayBlocked","isDayHighlighted","isRTL","keepOpenOnDateSelect","minimumNights","monthFormat","navPosition","onNextMonthClick","onPrevMonthClick","orientation","phrases","calendarLabel","chooseAvailableEndDate","chooseAvailableStartDate","clearDates","closeDatePicker","dateIsSelected","dateIsSelectedAsEndDate","dateIsSelectedAsStartDate","dateIsUnavailable","enterKey","escape","focusStartDate","homeEnd","jumpToNextMonth","jumpToPrevMonth","keyboardBackwardNavigationInstructions","keyboardForwardNavigationInstructions","keyboardShortcuts","leftArrowRightArrow","moveFocusByOneDay","moveFocusByOneMonth","moveFocusByOneWeek","moveFocustoStartAndEndOfWeek","openThisPanel","pageUpPageDown","questionMark","returnFocusToInput","roleDescription","selectFocusedDate","showKeyboardShortcutsPanel","upArrowDownArrow","regular","renderCalendarDay","renderMonthText","reopenPickerOnClearDates","screenReaderInputMessage","showClearDates","showDefaultInputIcon","small","startDateId","startDatePlaceholderText","stateDateWrapper","withFullScreenPortal","withPortal","onDatesChange","focusedInput","JobResults","renderJobsResults","mdiProgressClock","mdiCheckCircleOutline","mdiCalendarArrowRight","mdiStopCircleOutline","mdiTimelineClock","mdiAlertRhombusOutline","mdiCancel","jobName","fromSearch","any","Table","sortBehavior","changeSort","stickyHeader","HeaderCell","column","align","sortDirection","direction","Row","TableRow","Cell","TableCell","LogoutPage","RootModule","filteredJobs","totalFilteredJobs","range","onChangeDatesHandler","entitiesStatus","averageJobs","round","storeFilterStatus","mdiChartTimelineVariant","inline","Paper","flex","PaperHeader","PaperContent","PaperFooter","LeftSideSlot","RightSideSlot","PaperTitle","Main","mdPage","Section","full","SectionTitle","SectionHeader","SectionInfo","SectionContent","Info","ScrollableContainer","Column","StatusContainer","filterJobs","executing","scheduled","aborted","failed","Daemon","useSelector","isDaemonRunning","JobStatus","filterByStatus","storeStatus","setStatus","renderContent","dispatchEvent","Search","apiSearchWithDebounce","debounce","searchedTerm","showSearchResults","getSearchResults","QSP","name_filter","page","filterProcesses","processStatus","storedProcesses","results","handleOnChange","searchTerm","clearSearch","getSearchedJobs","setSearchFilter","setTypeFilter","category","totalResults","displayedResults","nameFilter","SearchResultsComponent","renderProcessesResults","mdiPlaySpeed","createURLLink","Input","nrRows","LinkBehavior","Button","link","ModalFooter","ErrorModal","ConfirmationModal","JobsEffect","JobsConnectionsEffect","SearchJobsEffect","SearchProcessesEffect","GlobalFiltersEffect","listen","newLocation","pathname","currentPathname","currentSearch","go","setAuthorization","authorizationStatus","exact","Login","Logout","Layout","hot","RootLayout","Jobs","JobProcess","Entities","UsersAndGroups","Explorer","ConnectedExecutiveDashboard","LicenseCollection","Licensing","renderJobItem","loggedUser","toggleWorkloadDisplay","isWorkloadDisplayed","updateQSP","URLSearchParams","has","handleOnTabChange","selectedTab","performFilter","handleOnFilterChange","returnListBasedOnTab","shell_host_address_filter","platform_filter","database_name_filter","user_filter","platform_name_filter","platform_dbms_filter","pageFilters","onSearchInputChange","onKeyDown","loadAllUsers","whiteSpace","paddingTop","selections","excludeStatus","currentTab","ALLOWED_FOR_DELETE","JobItem","canDelete","setUuid","mdiClockOutline","statusMap","PLATFORM","Filters","u","platforms","selectedPlatform","selectedServer","selectedDb","selectedStatus","mdiServer","mdiCircleSlice5","getJobsFiltersOptions","connection","getIn","JobsInvocations","useLocation","useDispatch","ENTITY_ICONS","constant","exception","CachedIcon","searchWithDebounce","searchInput","setSearchInput","renderColumn","colNum","entityIcons","clearCach","sessionStorage","ev","loadingData","UsersAndGroupsPage","UserManagementHeaderLinks","RightSideControls","UserManagementSwitch","useRouteMatch","routes","Link","UsersPage","loadAllGroups","match","userLink","UserSwitch","GroupsPage","groupLink","GroupsPagesSwitch","ops","ExplorerPage","handleClick","anchorElement","handleClose","viewMode","loadProtocols","loadAllAccounts","treeviewData","storeState","newMode","startIcon","aria-controls","aria-haspopup","keepMounted","activePage","switchToTileView","Treeview","DbObjects","loadingFlags","isObjectsSidebarDisabled","RUNNING","STATUS_SPAN","marginLeft","textShadow","STOPPED","SidebarContainer","postgresStatus","beHealth","masSystemsMonitor","masDaemonStatus","uptime1Minute","uptime5Minutes","uptime15Minutes","daysUntilExpire","beLicence","licensed_feature","expirationDate","licenseStatus","paddingRight","pkg","Favorites","mdiStarOutline","Navigation","navId","handlePopoverOpen","handlePopoverClose","setActiveTab","newActiveTab","activeTab","setCurrentNavItem","onMouseEnter","onMouseLeave","subItem","withRouter","Notification","UserMenu","menuAnchorRef","isVisible","openAdminPage","setToggleDropdown","autoFocusItem","Compile","setStep","step","Confirmation","Compiler","compilation","setCompilation","postCompile","useQuery","LinkRouter","RouterLink","redirected","OtherMainLinks","PrepareFlow","designation","actionsTypes","CHECK_AUTHORIZATION","LOGIN","LOGOUT","ActionCreator","setBasicAuth","CURRENT_USER","source","INTL","CURRENT_TIME","DAEMON_STATUS","JOB_COUNT","PROTOTYPES","FORMS","FORM","DOWNLOAD_PACKAGING","UPLOAD_SUPPORT_RENEWAL_FILE","UPLOAD_MAS_LICENSE_FILE","Buffer","statusText","loginPath","removeBasicAuth","module","exports","autoFocusEndDate","momentPropTypes","momentObj","DateRangePickerPhrases","omit","DateRangePickerShape","localeData","longDateFormat","DateRangePickerWrapper","GET_JOBS","GET_CONNECTIONS","SEARCH_JOBS","SEARCH_PROCESSES","UPDATE_GLOBAL_FILTERS","SET_FILTER_STATUS","ServersList","getAllAccounts","setAnchorElement","serversNumber","ConnectedServersList","serversUsage","deactivating","debug","groups_update","producers","updating_groups","creating","group_users","group_subgroups","reports","collectionProcesses","hardware","wasExecuted","preSoftware","software","vmware","packaging","licenses","base","loadingDiskIO","loadingStorageUsed","loadingFileStorage","rawVirtualServers","virtualServers","execdashboard","execdashboard_virtual","FETCH_ENTITIES_REQUEST","FETCH_ENTITIES_SUCCESS","FETCH_ENTITIES_FAILURE","FETCH_ENTITIES_ALL_REQUEST","FETCH_ENTITIES_ALL_SUCCESS","FETCH_ENTITIES_ALL_FAILURE","SELECT_ENTITY","CLEAR_SELECTED_ENTITY","UPDATE_FILTERS","DAEMON_STATUS_REQUEST","DAEMON_STATUS_SUCCESS","DAEMON_STATUS_FAILURE","processed","fetchedInvocation","PROCESS_QUERY","FETCH_INVOCATION_SUCCESS","FETCH_INVOCATION_FAILURE","REPLACE_INVOCATION","next","schema","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","JobList","NoJobs","ConnectedJobList","ScheduleModal","setTab","processDetails","setProcessDetails","scheduleDetails","setScheduleDetails","newSchedule","schedules","textDecoration","changeTab","ViewTabs","Documentation","ScheduleFormComp","derivedMonitor","enabled","monitor","serverTime","everyHourWarningShown","wasSCheduleCallDone","allScheduledNames","masTimeFormatted","currentTime","availableProcess","platformVal","typeVal","processVal","selectedType","platformMatches","typeMatches","nameValue","splittedName","t_min","t_hr","t_day","t_mon","t_wkd","sch_name","isValidMinutes","isValidHours","isValidDays","isValidMonth","isValidWeekDay","n_state","isEmpty","ConnectedScheduleForm","rejector","sch_description","params_with_maybe_replvars","extractReplVars","pickBy","rawValues","extractFQName","cleanUpReplVars","prefix","Groups","dense","disablePadding","button","primary","Users","currentActionLabel","shouldDisplayAction","emptyListMessage","renderUsersList","Events","UserChip","background","Chip","NotificationList","filteredUsers","buttonLabel","buttonIcon","endIcon","Entity","user_owner","aliasStr","getBoundingClientRect","parent","parentNode","scrollTo","behavior","SelectedEntity","ActionsNamespace","disableActions","hasWrite","deleteRights","parseName","tail","parsed","fq","ConnectedEditNamespace","nestedNames","EditNamespace","canUpdateName","setDescription","ConnectedDeleteNamespace","DeleteNamespace","ActionsConstant","ConnectedEditConstant","EditConstant","mdiImageFilterCenterFocus","patchConstant","ActionsProcess","ConnectedNewSchedule","NewSchedule","openErrorModal","setOpenErrorModal","errorModalActions","ScheduleForm","EditProcessModal","ProcessEditor","saveProcessEdits","steps","Step","step_index","expressions","parseEvaluatableExpressions","exp","StepExpression","expression","exp_index","evaluate","process_name","evaluations","toSend","findFormPrototype","findFormEntry","ActionsForm","canWrite","ConnectedCopyForm","CopyForm","formName","SubmitButtonNoDirty","FormParameters","FieldsAndGroupsEditor","DataContext","FieldGroup","pointer","GroupInstance","canAdd","Field","newInstance","Value","packet","canRemove","idx","provided_field_name","ActionsRoot","ActionsPrototype","ActionsSchedule","ConnectedEditSchedule","EditSchedule","setMonitor","isEntityDeletable","ActionsCommon","displayDelete","ConnectedNewAlias","ConnectedEditAlias","NewAlias","original","EditAlias","splittedNamespace","handleEditSubmit","originalName","ConnectedDeleteEntity","clearSelected","DeleteEntity","PrivilegesModal","PrivilegesEditor","hasAlias","usePrivileges","editAliasParent","updating","setEditAliasParent","updatePrivilege","switchTab","PrivilegesList","is_group","updater","privilegeTypes","renderType","user_or_group","mdiAccount","setLoading","setUpdating","setData","HeaderPageSwitch","arrayOf","UserLoader","loadUser","userName","useParams","ConnectedUserLoader","UserView","deactivateUser","defaultResult","noGroups","deactivate","titleStyles","textTransform","ConnectedUserView","removing","Privileges","grant","revoke","Privilege","capitalize","PrivilegesContainer","mapPrivileges","class_privileges","actual","str","UserGroups","removeFromGroups","retrieveGroupDescription","setSelectedGroup","errorMessage","setErrorMessage","isOnlySelect","questionMessage","passed","group_name","mdiDeleteCircleOutline","UserGroupsContainer","visibleGroups","EditUserGroups","addToGroups","isFormChanged","setIsFormChanged","closeModal","aria-labelledby","aria-describedby","GroupsList","onAdd","EditUserGroupsContainer","showAll","err","EditUserDetails","UserDetailsForm","EditUserDetailsContainer","submitResult","created","date_created","updated","date_updated","UserDatesBox","DateCreated","DateUpdated","mdiAccountPlus","parseDate","mdiAccountEdit","EditUserInfo","UserInfoForm","EditUserInfoContainer","formEndpoint","formproto","formdata","mapFormValues","submited","sendable_data","FieldSwitch","dict","EmailField","PhoneNumberField","notRequired","Field_Types","FieldComponent","getComponent","UserCard","endsWith","groupless","mdiAccountOff","NoUserSelectedPage","min","confirmpassword","CreateNewUser","submitUserValues","useHistory","operation","setOperation","exists","marginRight","CreateNewUserPage","NewUserGroups","existing","GroupsSelection","mdiAccountGroup","GroupCard","GroupView","removeGroup","deleteGroup","ConnectedGroupView","GroupLoader","loadGroup","groupName","ConnectedGroupLoader","GroupUsers","removeUsersFromGroup","setSelectedUser","GroupUsersContainer","EditGroupUsers","addUsersToGroup","mdiAccountMultiplePlus","UsersSelection","EditGroupUsersContainer","usersFetched","usersSubmitted","resolved","rejected","SubGroups","removeSubGroups","subgroup","SubGroupsContainer","EditSubGroups","updateGroup","GroupSelection","EditSubGroupsContainer","groupsFetched","subgroupsSubmitted","subgroupError","CreateNewGroup","submitGroupValues","CreateNewGroupPage","NoGroupSelectedPage","DBMS","toggleExpanded","isExpanded","setPath","changeState","autoExpanded","ConnectedDBMS","ServerList","Server","isActive","activePath","storedPath","splitAccountName","ConnectedServer","DatabaseList","Database","ConnectedDatabase","BreadcrumbsTitle","renderBreadcrumbs","links","separator","previous","route","navigateTo","selectedLink","setActiveLevel","ConnectedBreadcrumbsTitle","ContentSwitch","renderPage","AllDbms","retrieveDBMSStatus","retrieveDBMSStatusInfo","ConnectedAllDbms","allDbms","serverLabel","serverFullName","AllServers","renderOptions","retrievePendingStatus","refreshServerDBs","refreshServerDbsStatus","retrieveServerStatus","retrieveServerStatusInfo","hasDatabases","mdiPercent","ConnectedAllServers","ServerSettings","deleteServerOpen","setDeleteServerOpen","deleteServerErrorOpen","setDeleteServerErrorOpen","deleteServerModalActions","deleteServerErrorModalActions","EditServerContainer","EditServer","AllDatabases","refreshDBStatus","refreshDatabaseStatus","mdiCheckboxMultipleBlankOutline","mdiShape","mdiHexagonSlice2","mdiFormatAlignTop","mdiLicense","retrieveDbBackup","retrieveDbStatus","retrieveDbStatusInfo","ConnectedAllDatabases","Workload","newTab","getJobsData","pageLevel","levelFilters","protocol_filter","ConnectedWorkload","License","ConnectedLicense","Report","getLicenseReport","reportTwo","licenseFeatures","reportOne","ConnectedReport","FeaturesUsage","renderSingleReport","renderComparableReports","comparableFeatures","getFeatureValue","rep1","rep2","valueNode","needsExpansion","listRef","offsetHeight","flexDirection","paddingLeft","UnusedFeatures","CellWithTooltip","rowRenderer","hover","CURRENTLY_USED","mdiCheckboxMarkedCircle","mdiCloseCircle","TableRenderer","tableProps","FeaturesTable","sortLicenseFeatures","orderMultiplier","sortByName","sortByUsages","sortByStatus","sorted","Storage","getStoragePoints","getStorageDetails","storagePoints","storageDetails","setStorageItem","isMssql","ConnectedStorage","diskIOColumns","diskIOTableProps","diskIORowRenderer","Database_name","physical_name","dbid","io_stall","io_stall_queued_read_ms","io_stall_queued_write_ms","io_stall_read_ms","io_stall_write_ms","num_of_bytes_read","num_of_bytes_written","num_of_reads","num_of_writes","sample_ms","size_on_disk_bytes","type_desc","fileStorageColumns","fileStorageTableProps","fileStorageRowRenderer","data_space_id","file_id","growth","max_size","state_desc","MssqlStorage","getMssqlStorageData","storageData","dataLoading","usedStorageInfo","hasFileStorageInfo","hasDiskIOInfo","hasAnyData","database_size","unallocated_space","ConnectedMssqlStorage","Objects","getObjects","objectsData","objectDetails","setObjectsItem","ConnectedObjects","Sessions","getSessionsData","enableLoadingFlag","disableLoadingFlag","refreshSessions","ConnectedSessions","USERNAME","MACHINE","SID","LOGON_TIME","PROGRAM","TYPE","noDataMessage","CommonSessionsTable","sortSessions","sortedSessions","killSession","spid","ecid","loginame","hostname","blk","dbname","cmd","request_id","openKillSessionConfirmation","sessionId","MssqlSessionsTable","session_id","killSessionConfirmationOpen","sessionIdToKill","killSessionConfirmationActions","killSessionErrorModalActions","killSessionErrorOpen","TopSQLStatements","getTopSqlStatementsData","getEndpoint","prepareChartData","topStatementsData","ELAPSED_TIME","cpuTime","PCT_CPU","ioTime","PCT_IO","sqlId","SQL_ID","timeMillisFull","cpuPercent","ioPercent","elapsedTimeChartData","isChartSupported","ConnectedTopSQLStatements","renderCustomXAxisTick","renderLegend","renderChartTooltip","ElapsedTimeChart","barGap","strokeDasharray","verticalAlign","layout","domain","tickFormatter","stackId","SESS_ID","CHILD_NUMBER","SQL_TEXT","mdiContentCopy","MODULE","EXECUTIONS","ELAPSED_PER_EXEC","sqlStatements","OracleTopSQLTable","sortSqlStatements","sortedStatements","queryid","userid","calls","avg_time_ms","PostgresTopSQLTable","SESSION_ID","USER","SQL_Text","TIME","STATE","MysqlTopSQLTable","QueryName","ExecutionCount","MaxElapsedTime","AvgElapsedTime","Logical_Reads","physical_reads","logical_writes","MssqlTopSQLTable","ToggleSystemExplorerView","mdiViewComfy","HostnameCellWithTooltip","isChecked","updateSelection","navigateToDetails","isWorkloadAllowed","isTopSqlAllowed","isLicenseReportingAllowed","testConnectionsTrigger","clickHandler","addServerTrigger","addDatabaseTrigger","importCsvTrigger","editDatabaseTrigger","deleteDatabaseTrigger","SystemExplorerTable","allDatabases","createCheckboxHeaderColumnConfig","protocolGroup","toggleDbsSelectionByProtocol","isAllDbsByProtocolSelected","selectedDbs","dbIndex","forceUpdate","shouldAddAll","allWithoutCurrent","clearDbsByProtocol","allByProtocol","selectedByProtocol","testConnections","isDbSelected","some","hasSingleSelection","getFirstDatabase","group1","group2","getListOrder","detailsPageParams","columnsConfig","ConnectedSystemExplorerTable","JobView","JobForm","loggedInAs","setEditable","deriveFormState","disabledFields","userValue","dateValue","timeValue","time_invoke","handleJobCreation","FormVerbs","sendable","job_user","dateMoment","timeMoment","dateTime","asMinutes","when","noOutput","JobOutput","setOutput","outputType","monitoring","outputFormat","preparedJSON","jsonString","enableClipboard","displayObjectSize","displayDataTypes","wantStatusColor","wantStatusIcon","warning","ExecutiveDashboard","getExecutiveDashboard","getVirtualExecutiveDashboard","dashboardType","setDashboardType","RefreshDashboard","mdiChartDonut","ToggleDashboard","PhysicalDashboard","nrSelected","SearchSection","toggleServer","isServerSelected","toggleSelected","ConnectedSearchSection","SwitchContent","EmptyContent","Dashboard","ConnectedDashboard","OptionsTile","serversToGroup","filteredServers","groupedServers","serverKey","chartOptions","secondaryColor","OptionsList","OptionItem","OptionsChart","allowDecimals","ServerView","ConnectedServerView","optionType","mdiCheck","UsedOptions","selectedForComparison","uniqueId","visibleSids","inComparison","compareSelected","resetSelected","VirtualDashboard","found","NoData","ToggleSelection","deselectAll","selectAll","ConnectedToggleSelection","chip","Hardware","poller","runPoller","pollInvocation","outputReponse","clearTimeout","renderModal","outputOpen","requestProcessData","isProcessLoading","executeCollectionProcess","loadingPrototypes","loadingDatatypes","loadingAccounts","loadingForms","normalizeParameter","chooseField","ConnectedHardware","Software","wasHardwareExecuted","wasPreSoftwareExecuted","mdiApplication","ConnectedSoftware","VMware","ConnectedVMware","Packaging","lms_repo","isSucceeded","successModalOpen","failedModalOpen","isDownloadDisabled","renderPackagingSuccessModal","renderPackagingFailedModal","sendEmail","isEmailDisabled","wasVsphereExecuted","mdiArchiveArrowDownOutline","ConnectedPackaging","SuccessModal","formatQuery","PROCESS_NAME","PARAMS_TO_NORMALIZE","PreSoftware","normalizedParam","ConnectedPreSoftware","selectedSupportRenewalFile","setSelectedSupportRenewalFile","supportRenewalFileResult","setSupportRenewalFileResult","uploadSupportRenewalFileDisabled","setUploadSupportRenewalFileDisabled","supportRenewalFileName","selectedMasLicenseFile","setSelectedMasLicenseFile","masLicenseFileResult","setMasLicenseFileResult","selectedMasLicenseFileDisabled","setSelectedMasLicenseFileDisabled","masLicenseFileName","i18nMessages","general","header","persistor","persistStore","provider","locale","basename","App","render","webpackContext","req","webpackContextResolve","__webpack_require__","code","partial"],"mappings":"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","file":"js/app.6c3b64605410edd82265.js","sourcesContent":["import defaultConstants from './constants';\n\nexport const CONSTANTS = defaultConstants;\n","export const LOAD_ALL_ACCOUNTS = 'LOAD_ALL_ACCOUNTS';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const LOAD_ALL_LICENSES = 'LOAD_ALL_LICENSES';\nexport const LOAD_TOP_SQL_STATEMENTS = 'LOAD_TOP_SQL_STATEMENTS';\nexport const LICENSE_FULL_REPORT = 'LICENSE_FULL_REPORT';\nexport const PROVIDE_SERVERS_USAGE = 'PROVIDE_SERVERS_USAGE';\nexport const LOAD_STORAGE_POINTS = 'LOAD_STORAGE_POINTS';\nexport const SET_STORAGE_NS = 'SET_STORAGE_NS';\nexport const LOAD_STORAGE_DETAILS = 'LOAD_STORAGE_DETAILS';\nexport const LOAD_OBJECT_DETAILS = 'LOAD_OBJECT_DETAILS';\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT';\nexport const LOAD_SESSIONS = 'LOAD_SESSIONS';\nexport const PROVIDE_DB_LAST_BACKUP = 'PROVIDE_DB_LAST_BACKUP';\nexport const PROVIDE_DB_STATUS = 'PROVIDE_DB_STATUS';\nexport const UPDATE_DB_STATUS = 'UPDATE_DB_STATUS';\nexport const LOAD_PROTOCOLS = 'LOAD_PROTOCOLS';\nexport const LOAD_COLLECTION_PROCESS = 'LOAD_COLLECTION_PROCESS';\nexport const EXECUTE_COLLECTION_PROCESS = 'EXECUTE_COLLECTION_PROCESS';\nexport const LOAD_MSSQL_DISK_IO = 'LOAD_MSSQL_DISK_IO';\nexport const LOAD_MSSQL_STORAGE_USED = 'LOAD_MSSQL_STORAGE_USED';\nexport const LOAD_MSSQL_FILE_STORAGE = 'LOAD_MSSQL_FILE_STORAGE';\n","import React, { forwardRef, useMemo, useEffect, useState } from 'react';\n\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\n\nimport { useField, useFormikContext } from 'formik';\n\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport check from './field-level-validations';\n\nexport const Text = forwardRef(function Text(\n  { options, validate, defaultValue = '', value, required, reactToChange, ...props },\n  ref\n) {\n  const [shouldValidate, setShouldValidate] = useState(false);\n  const validation = useMemo(() => {\n    if (!shouldValidate) {\n      return null;\n    }\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required, shouldValidate]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  const formikCtx = useFormikContext();\n\n  useEffect(() => {\n    // used to allow the \"\" (empty string) value\n    if (value === undefined || value === null) {\n      helpers.setValue(defaultValue);\n    } else {\n      helpers.setValue(value);\n    }\n    helpers.setTouched(false);\n    setShouldValidate(true);\n  }, [value]);\n\n  useEffect(() => {\n    /**\n     * accepts a reaction function, ideally called when setValue is called.\n     * It should be used to update other known field names in reaction to this one changing.\n     */\n    reactToChange && reactToChange(value, formikCtx);\n  }, [value]);\n\n  useEffect(() => {\n    /** Unmount cleanup ? */\n    return () => {\n      if (!props.multiline || !props.isPopup) {\n        helpers.setValue(undefined);\n        // helpers.setTouched(false);\n        helpers.setError(undefined);\n      }\n    };\n  }, []);\n\n  if (field.value === undefined) {\n    return <ParameterLoader>Mounting Field</ParameterLoader>;\n  }\n\n  if (options && options.length) {\n    const selected = options.find(o => o.value === field.value) ?? null;\n    const description = options.find(o => o.value === field.value)?.description || undefined;\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        value={selected}\n        getOptionLabel={option => option.label || field.value}\n        getOptionDisabled={option => option.disabled}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n\n          /**\n            only on Select option changes for now. Can be modified for generic text,\n            but should be done when needed.\n            onChange from '...field' can be decorated.\n           */\n          reactToChange && reactToChange(option.value, formikCtx);\n        }}\n        disabled={props.disabled}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              description={description}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n\nexport function Email(props) {\n  const validations = useMemo(() => check.merge(check.email, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"email\" />;\n}\n\nexport function PhoneNumber(props) {\n  const validations = useMemo(() => check.merge(check.phone, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} />;\n}\n/* TODO: fix Integer required validation checks. Investigate how Yup returns the validateSync for this particular instance */\nexport function Integer({ validate, ...props }) {\n  const validations = useMemo(() => check.merge(props.required ?? check.required_not_null), [\n    props.required,\n    validate\n  ]); // validate is given by the parameter normalizer.\n  // it should be a list of check keys. TODO: map to validation functions to merge\n\n  return <Text {...props} validate={validations} type=\"number\" />;\n}\n\nexport function Password(props) {\n  return <Text {...props} type=\"password\" />;\n}\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: true },\n  { label: 'False', value: false }\n];\n\nexport const BooleanSelect = forwardRef(function Boolean({ options, ...props }, ref) {\n  return <Text type=\"text\" value defaultValue {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nexport const Date = forwardRef(function Date(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value ? moment(field.value).format('MM/DD/YYYY') : moment().utc();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date?.format('MM/DD/YYYY') || ' ')}\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Time = forwardRef(function Time(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value\n    ? moment(field.value, 'HH:mm')\n    : moment()\n        .utc()\n        .format('HH:mm');\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardTimePicker\n          ampm={false}\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"HH:mm\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => {\n            helpers.setValue(date?.format('HH:mm') || ' ');\n          }}\n          mask=\"__:__\"\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Select = forwardRef(function Select(\n  { options, validate, defaultValue, value, required, isNamespace, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue || '');\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  /**\n   * This should be moved to it's own thing.\n   * For now, it satisfies... :(((\n   */\n  if (options && options.length) {\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        getOptionSelected={option => option.value === field.value}\n        getOptionLabel={option => option.label || value || ''}\n        value={value}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              desription={undefined}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport { mdiCheckDecagram, mdiAlertDecagram } from '@mdi/js';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { node, oneOf, bool } from 'prop-types';\n\nimport './Result.local.scss';\n\nconst icons_map = {\n  success: mdiCheckDecagram,\n  fail: mdiAlertDecagram\n};\n\nexport const Result = ({ children, type }) => {\n  return (\n    <div\n      className={classnames('result-display', {\n        [type]: type\n      })}\n    >\n      <div className=\"result-icon\">\n        <SvgIcon fontSize=\"inherit\">\n          <path d={icons_map[type] || mdiAlertDecagram} />\n        </SvgIcon>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  type: oneOf(['success', 'fail']),\n  children: node\n};\n\nexport const ResultText = ({ children, compact }) => (\n  <h2 className={classnames('result-text', { compact })}>{children}</h2>\n);\n\nResultText.propTypes = {\n  compact: bool,\n  children: node\n};\n\nexport const ResultMessages = ({ messages = [] }) => (\n  <div className=\"result-messages\">\n    {messages.map((msg, index) => (\n      <div className=\"message-entry\" key={index}>\n        <p>{msg?.text?.split?.('\\n')?.[0]}</p>\n      </div>\n    ))}\n  </div>\n);\n\nResultText.propTypes = {\n  children: node\n};\n\nResult.Text = ResultText;\nResult.Messages = ResultMessages;\n","import moment from 'moment';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  fetchInvocation,\n  fetchInvocationOutput,\n  invocationOutputPoller,\n  parseInvocationResult,\n  postInvocation\n} from '../../../shared/api/invocation';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport function loadAllAccountsThunk(payload) {\n  return async (dispatch, getState) => {\n    dispatch(creators.loading(LOAD_ALL_ACCOUNTS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n        page_size: 2147483645\n      });\n\n      response.data.protocols = getState().explorer.protocols;\n\n      dispatch(creators.success(LOAD_ALL_ACCOUNTS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_ACCOUNTS, error));\n      return;\n    }\n\n    if (payload?.from === 'dashboard') {\n      dispatch(provideServersUsageThunk());\n    } else {\n      dispatch(provideDBLastBackupThunks());\n      dispatch(provideDBStatusThunks());\n    }\n  };\n}\n\nexport function loadProtocolsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_PROTOCOLS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n      dispatch(creators.success(LOAD_PROTOCOLS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_PROTOCOLS, error));\n    }\n  };\n}\n\nexport function changeStateThunk(newState) {\n  return dispatch => {\n    dispatch(creators.action(CHANGE_STATE, newState));\n\n    return 'done';\n  };\n}\n\nexport function loadAllLicensesThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_LICENSES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n      dispatch(creators.success(LOAD_ALL_LICENSES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_LICENSES, error));\n    }\n  };\n}\n\nexport function loadTopSQLStatementsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, null));\n    dispatch(creators.loading(LOAD_TOP_SQL_STATEMENTS));\n\n    try {\n      const creationResult = await postInvocation(payload);\n\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const result = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, result));\n      } else {\n        dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, error));\n    }\n  };\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n\nexport function getLicenseReportThunk(fullPath) {\n  return async dispatch => {\n    dispatch(creators.loading(LICENSE_FULL_REPORT));\n    try {\n      const response = await RestClient.get('license_data', { dbconn: fullPath });\n      if (!Array.isArray(response.data)) {\n        response.data = [];\n      }\n      dispatch(creators.success(LICENSE_FULL_REPORT, { reportData: response.data }));\n    } catch (error) {\n      dispatch(creators.fail(LICENSE_FULL_REPORT, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.SESSIONS(filters.fullPath), {\n        page_size: filters.page_size\n      });\n      dispatch(creators.success(LOAD_SESSIONS, { data: response.data, sort: filters.sort }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    const { fullPath, protocol } = filters;\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: SystemExplorerFeatureUtil.getSessionsEndpoint(protocol),\n      timestamp: null\n    };\n\n    try {\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const resultTxt = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        const statementsJson = (resultTxt || '').split('\\n')[1];\n        const sessionsData = statementsJson ? JSON.parse(statementsJson) : [];\n        dispatch(creators.success(LOAD_SESSIONS, { data: sessionsData, sort: filters.sort }));\n      } else {\n        dispatch(creators.fail(LOAD_SESSIONS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n  };\n}\n\nexport function sessionsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadSessionsByProcess(protocol)) {\n    return loadSessionsByProcessThunk(filters);\n  }\n  return loadSessionsThunk(filters);\n}\n\nexport function enableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n  };\n}\n\nexport function disableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.fail(LOAD_SESSIONS));\n  };\n}\n\nexport function loadStorageDetailsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_DETAILS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_DF(filters.fullPath));\n      const data =\n        response.data && response.data.length\n          ? { data: response.data, key: filters.fullPath }\n          : { data: [], key: filters.fullPath };\n      dispatch(creators.success(LOAD_STORAGE_DETAILS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_DETAILS, error));\n    }\n  };\n}\n\nexport function setStorageItemThunk(ns) {\n  return creators.success(SET_STORAGE_NS, ns);\n}\n\nexport function loadStoragePointsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_POINTS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_TS, {\n        dbconn: filters.fullPath\n      });\n      const data = { data: response.data, key: filters.fullPath } || {\n        data: {},\n        key: filters.fullPath\n      };\n      dispatch(creators.success(LOAD_STORAGE_POINTS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_POINTS, error));\n    }\n  };\n}\n\nexport function loadMssqlStorageDataThunk(filters) {\n  return async dispatch => {\n    const { fullPath, process, storageKey } = filters;\n    dispatch(creators.loading(storageKey));\n\n    try {\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process,\n        timestamp: null\n      };\n\n      let resultJson = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        resultJson = parseInvocationResult(output);\n      }\n      dispatch(creators.success(storageKey, { data: resultJson, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(storageKey, error));\n    }\n  };\n}\n\nexport function loadObjectsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n    const objectApis = [\n      { name: 'triggers', path: '/object_trigger' },\n      { name: 'tables', path: '/object_table' },\n      { name: 'indexes', path: '/object_index' },\n      { name: 'procedures', path: '/object_procedure' },\n      { name: 'packages', path: '/object_package' },\n      { name: 'packageBodies', path: '/object_package_body' }\n    ];\n    try {\n      let allData = await Promise.allSettled(\n        objectApis.map(api =>\n          RestClient.get(`/system/explorer${api.path}`, {\n            dbms: filters.fullPath,\n            page_size: 2147483645\n          })\n        )\n      );\n      allData = objectApis.map((api, index) => {\n        return {\n          res: allData[index]?.value?.data,\n          name: api.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function loadObjectsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n\n    try {\n      const { fullPath, protocol } = filters;\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process: SystemExplorerFeatureUtil.getObjectsEndpoint(protocol),\n        timestamp: null\n      };\n\n      let objectsJSON = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        objectsJSON = parseInvocationResult(output);\n      }\n\n      const allData = objectsJSON.map((item) => {\n        return {\n          res: item,\n          name: item.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function objectsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return loadObjectsByProcessThunk(filters);\n  }\n  return loadObjectsThunk(filters);\n}\n\nexport function setSelectedObjectThunk(selected) {\n  return creators.success(SET_SELECTED_OBJECT, selected);\n}\n\nexport function provideServersUsageThunk() {\n  return async function serversUsage(dispatch, getState) {\n    let servers = [];\n\n    if (getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE')) {\n      servers = getState()\n        .explorer.structured.dbms.find(d => d.protocol === 'ORACLE')\n        .servers.slice();\n    }\n\n    const usageResult = { servers: [] };\n\n    const allResults = await Promise.allSettled(\n      servers.map(server => {\n        return loadUsagePerDb(server);\n      })\n    );\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        usageResult.servers.push({\n          dbms: result.value.dbms,\n          address: result.value.server,\n          usage: result.value.usage || 0\n        });\n\n        return null;\n      });\n\n    usageResult.highLoadCount = usageResult.servers.filter(server => server.usage >= 75).length;\n    usageResult.servers.sort((a, b) => parseFloat(b.usage) - parseFloat(a.usage));\n\n    dispatch(creators.success(PROVIDE_SERVERS_USAGE, usageResult));\n\n    return usageResult;\n  };\n}\n\nexport function provideDBLastBackupThunks() {\n  return async function getDBLastBackup(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases.filter(db => db.special.database === 'mysql')];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [\n        ...databases,\n        ...Pgsql.databases.filter(db => db.special.database === 'postgres')\n      ];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases.filter(db => db.special.database === 'master')];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbLastBackup = [];\n\n    const allResults = await Promise.allSettled(databases.map((db) => loadDBLastBackup(db, servers)));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbLastBackup.push({\n          name: result.value.name,\n          backup: result.value.backup\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_LAST_BACKUP, dbLastBackup));\n\n    return dbLastBackup;\n  };\n}\n\nexport function provideDBStatusThunks() {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [...databases, ...Pgsql.databases];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(\n      databases.map((db) => loadDBStatus(db, servers))\n    );\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          message: result.value.message,\n          dbName: result.value.dbName\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshServerDbsStatusThunk(server) {\n  return async function refreshDbStatus(dispatch, getState) {\n    const { databases } = server;\n\n    async function retrieveDBStatus(database) {\n      dispatch(\n        creators.loading(UPDATE_DB_STATUS, [\n          {\n            name: database.name,\n            server: database.address,\n            dbms: database.protocol,\n            dbName: database?.special?.database,\n            status:\n              getState().explorer.dbStatus.find(db => db.name === database.name)?.status ||\n              'not-connected'\n          }\n        ])\n      );\n\n      const dbms = database.name;\n      const shell = server.name;\n      try {\n        const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, { dbms, shell });\n\n        let status = response.data.status?.toString().toLowerCase() || 'error';\n        // there is a case where API simply returns only 64, for not it will be treated as down\n        if (parseInt(response.data, 10) === 64) {\n          status = 'down';\n        }\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          message: response?.data?.message,\n          status\n        };\n      } catch (error) {\n        dispatch(\n          creators.fail(UPDATE_DB_STATUS, [\n            {\n              name: database.name,\n              server: database.address,\n              dbms: database.protocol,\n              dbName: database?.special?.database,\n              status: 'error',\n              error\n            }\n          ])\n        );\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          status: 'error',\n          error\n        };\n      }\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(retrieveDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          dbName: result.value.dbName,\n          message: result.value.message\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshDBStatusThunk(db) {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n\n    const selectedDBMS = structured.dbms.find(r => r.protocol === db.protocol);\n\n    const dbms = db.name;\n    const shell = selectedDBMS\n      ? selectedDBMS.servers.find(sv => sv.address === db.address)?.name\n      : undefined;\n\n    dispatch(\n      creators.loading(UPDATE_DB_STATUS, [\n        {\n          name: db.name,\n          server: db.address,\n          dbms: db.protocol,\n          status: getState().explorer.dbStatus.find(d => d.name === db.name)?.status\n        }\n      ])\n    );\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n        dbms,\n        shell\n      });\n\n      let status = response.data.status?.toString().toLowerCase() || 'error';\n      // there is a case where API simply returns only 64, for not it will be treated as down\n      if (parseInt(response.data, 10) === 64) {\n        status = 'down';\n      }\n\n      const dbStatus = [\n        {\n          name: dbms,\n          server: db.address,\n          dbms: db.protocol,\n          status\n        }\n      ];\n      dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n      return dbStatus;\n    } catch (error) {\n      dispatch(\n        creators.fail(UPDATE_DB_STATUS, [\n          {\n            name: db.name,\n            server: db.address,\n            dbms: db.protocol,\n            status: 'error',\n            error\n          }\n        ])\n      );\n    }\n  };\n}\n\nexport function loadProcessDetailsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_COLLECTION_PROCESS, { name: payload.name }));\n\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${payload.process}`\n      );\n\n      const details = {\n        name: payload.name,\n        data: response?.data?.data?.processes[0] || {}\n      };\n\n      dispatch(creators.success(LOAD_COLLECTION_PROCESS, details));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_COLLECTION_PROCESS, { name: payload.name, error }));\n    }\n  };\n}\n\nexport function executeCollectionProcessThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.action(EXECUTE_COLLECTION_PROCESS, { name: payload.name }));\n\n    return 'done';\n  };\n}\n\nasync function loadUsagePerDb(server) {\n  const database = server.databases[0];\n  const response = await RestClient.get(`/system/explorer/${database.name}/cpu_load_server`);\n\n  const usage = parseFloat(response.data.HOST_CPU);\n\n  return {\n    dbms: database.protocol,\n    server: database.address,\n    usage\n  };\n}\n\nasync function loadDBLastBackup(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_LAST_BACKUP, {\n    dbms,\n    shell\n  });\n\n  return {\n    name: database.name,\n    backup: moment(response.data.backup).isValid()\n      ? moment(response.data.backup).format('MMM DD YYYY')\n      : null\n  };\n}\n\nasync function loadDBStatus(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n      dbms,\n      shell\n    });\n\n    let status = response.data.status?.toString().toLowerCase() || 'error';\n    // there is a case where API simply returns only 64, for not it will be treated as down\n    if (parseInt(response.data, 10) === 64) {\n      status = 'down';\n    }\n\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: response?.data?.message,\n      dbName: database?.special?.database,\n      status\n    };\n  } catch (error) {\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: database?.data?.message,\n      dbName: database?.special?.database,\n      status: 'error'\n    };\n  }\n}\n","export const LOAD_ALL_GROUPS = 'LOAD_ALL_GROUPS';\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GRANT_PRIVILEGE = 'GRANT_GROUP_PRIVILEGE';\nexport const REVOKE_PRIVILEGE = 'REVOKE_GROUP_PRIVILEGE';\nexport const ADD_USERS_TO_GROUP = 'ADD_USERS_TO_GROUP';\nexport const REMOVE_USERS_FROM_GROUP = 'REMOVE_USERS_FROM_GROUP';\nexport const ADD_GROUPS_TO_GROUP = 'ADD_GROUPS_TO_GROUP';\nexport const REMOVE_GROUPS_FROM_GROUP = 'REMOVE_GROUPS_FROM_GROUP';\nexport const PATCH_SELECTED_GROUP = 'PATCH_SELECTED_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n","export const DbmsType = {\n  ORACLE: 'ORACLE',\n  POSTGRES: 'PGSQL',\n  MYSQL: 'MYSQL',\n  MSSQL: 'MSSQL',\n  OTHER: 'OTHER',\n};\n\nexport const DbmsFeature = {\n  WORKLOAD: 'WORKLOAD',\n  SESSIONS: 'SESSIONS',\n  TOP_SQL: 'TOP_SQL',\n  OBJECTS: 'OBJECTS',\n  STORAGE: 'STORAGE',\n  LICENSE_REPORTING: 'LICENSE_REPORTING',\n};\n\nconst FEATURE_BY_TYPE_MAP = {\n  [DbmsType.ORACLE]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL, DbmsFeature.LICENSE_REPORTING],\n  [DbmsType.MYSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.POSTGRES]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.MSSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL],\n  [DbmsType.OTHER]: [DbmsFeature.WORKLOAD],\n};\n\nconst LOAD_SESSIONS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_OBJECTS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_STORAGE_BY_PROCESS = [DbmsType.MSSQL];\nconst OBJECTS_SIDEBAR_DISABLED = [DbmsType.MSSQL];\n\nconst SESSIONS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.sessions.sp_who'\n};\n\nconst OBJECTS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.database.all_objects'\n};\n\nconst ACCOUNT_ENTITY_PREFIX = 'mas0000.';\nconst ACCOUNT_ENTITY_NAME_TOKEN = '.account.';\n\nconst DBMS_LIST_ORDER = {\n  [DbmsType.ORACLE]: 50,\n  [DbmsType.MSSQL]: 40,\n  [DbmsType.MYSQL]: 30,\n  [DbmsType.POSTGRES]: 20,\n  [DbmsType.OTHER]: 10,\n};\n\nconst OBJECTS_DATA_MAPPERS = {\n  [DbmsType.MSSQL]: (item) => {\n    return {\n      OBJECT_NAME: item.name,\n      CREATED: item.create_date,\n      OBJECT_ID: item.object_id,\n      LAST_DDL_TIME: item.modify_date,\n    };\n  },\n};\n\nexport class SystemExplorerFeatureUtil {\n  static isFeatureAllowed(dbmsType, feature) {\n    if (!dbmsType || !feature || !FEATURE_BY_TYPE_MAP[dbmsType]) {\n      return false;\n    }\n    return FEATURE_BY_TYPE_MAP[dbmsType].includes(feature);\n  }\n\n  static isWorkloadAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.WORKLOAD);\n  }\n\n  static isSessionsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.SESSIONS);\n  }\n\n  static isTopSqlAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.TOP_SQL);\n  }\n\n  static isObjectsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.OBJECTS);\n  }\n\n  static isObjectsSidebarDisabled(dbmsType) {\n    return OBJECTS_SIDEBAR_DISABLED.includes(dbmsType);\n  }\n\n  static isStorageAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.STORAGE);\n  }\n\n  static isLicenseReportingAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.LICENSE_REPORTING);\n  }\n\n  static splitAccountName(fullName) {\n    fullName = fullName || '';\n    if (!fullName.startsWith(ACCOUNT_ENTITY_PREFIX)) {\n      return '';\n    }\n    const startIdx = fullName.lastIndexOf(ACCOUNT_ENTITY_NAME_TOKEN);\n    if (startIdx === -1) {\n      return '';\n    }\n    return fullName.substr(startIdx + ACCOUNT_ENTITY_NAME_TOKEN.length);\n  }\n\n  static shouldLoadSessionsByProcess(dbmsType) {\n    return LOAD_SESSIONS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadObjectsByProcess(dbmsType) {\n    return LOAD_OBJECTS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadStorageByProcess(dbmsType) {\n    return LOAD_STORAGE_BY_PROCESS.includes(dbmsType);\n  }\n\n  static getSessionsEndpoint(dbmsType) {\n    return SESSIONS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsEndpoint(dbmsType) {\n    return OBJECTS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsDataMapper(dbmsType) {\n    return OBJECTS_DATA_MAPPERS[dbmsType];\n  }\n\n  static getListOrder(dbmsType) {\n    return DBMS_LIST_ORDER[dbmsType] || 0;\n  }\n}\n","const MONTH_LIST = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\nconst WEEKDAYS_LIST = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nconst MAX_MINUTES_VALUE = 59;\nconst MAX_HOUR_VALUE = 23;\nconst MAX_DAY_VALUE = 31;\nconst MAX_MONTH_VALUE = 12;\nconst MAX_WEEKDAY_VALUE = 7;\n\nexport class CronValidator {\n  // public methods\n  static isValidMinutes(minutes) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(minutes), MAX_MINUTES_VALUE);\n  }\n\n  static isValidHours(hours) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(hours), MAX_HOUR_VALUE);\n  }\n\n  static isValidDays(days) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(days), MAX_DAY_VALUE);\n  }\n\n  static isValidMonth(month) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(month), MAX_MONTH_VALUE, false)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(month), MONTH_LIST);\n  }\n\n  static isValidWeekDay(weekDay) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(weekDay), MAX_WEEKDAY_VALUE)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(weekDay), WEEKDAYS_LIST);\n  }\n\n  static FORMAT_MSG = {\n    MINUTES: 'Minute value is required',\n    HOURS: 'Hour values must be between 0 and 23 and can contain special symbols: , - *',\n    DAYS: 'Day values must be between 0 and 31 and can contain special symbols: , - *',\n    MONTH: 'Month values must be between 1 and 12, or JAN-DEC, and can contain special symbols: , - *',\n    DAY_OF_WEEK: 'Day-of-Week values must be between 0 and 7, or SUN-SAT, and can contain special symbols: , - *',\n    EVERY_HOUR_WARNING: 'You have selected a process to run every hour. This may not be advisable for processes that consume significant storage resources, like backup processes.'\n  };\n\n  static ALLOWED_MINUTES_OPTIONS = ['0', '10', '20', '30', '40', '50'];\n\n  // private methods\n  static isValidNumberValue(time, maxVal, zeroAllowed = true) {\n    if (time === '*' || (zeroAllowed && time === '0')) {\n      return true;\n    }\n\n    if (time.includes(',')) {\n      return time.split(',').every((part) => {\n        return CronValidator.isValidNumberPart(part, maxVal, zeroAllowed);\n      });\n    }\n\n    return CronValidator.isValidNumberPart(time, maxVal, zeroAllowed);\n  }\n\n  static isValidNumberPart(time, maxVal, zeroAllowed = true) {\n    if (time.includes('/')) {\n      return false;\n    }\n    // Uncomment if we should allow a `/` symbol for Cron schedule\n    /*\n    if (time.includes('/')) {\n      const stepParts = time.split('/');\n      if (stepParts.length !== 2) {\n        return false;\n      }\n\n      const stepPartsValid = CronValidator.isValidNumberPart(stepParts[0], maxVal, zeroAllowed)\n        && CronValidator.isValidNumberPart(stepParts[1], maxVal, zeroAllowed);\n\n      return stepPartsValid || (stepParts[0] === '*' && CronValidator.isValidNumberPart([stepParts[1]], maxVal, zeroAllowed));\n    }\n    */\n\n    if (time.includes('-')) {\n      const rangeNumbersArr = time.split('-').map((el) => parseInt(el, 10));\n      return CronValidator.isValidNumberRange(rangeNumbersArr, maxVal) && rangeNumbersArr.length === 2 && rangeNumbersArr[0] <= rangeNumbersArr[1];\n    }\n\n    const timeNumber = parseInt(time, 10);\n    if (zeroAllowed) {\n      return timeNumber >= 0 && timeNumber <= maxVal;\n    }\n    return timeNumber > 0 && timeNumber <= maxVal;\n  }\n\n  static cleanValue(value) {\n    return (value || '').trim().toLowerCase();\n  }\n\n  static isValidNumberRange(dataArray, maxVal, zeroAllowed = true) {\n    return dataArray.every((element) => {\n      if (zeroAllowed) {\n        return element >= 0 && element <= maxVal;\n      }\n      return element > 0 && element <= maxVal;\n    });\n  }\n\n  static isValidAlternativeValue(value, allowedValues) {\n    if (value.includes(',')) {\n      return value.split(',').every((part) => {\n        return CronValidator.isValidAlternativePart(part, allowedValues);\n      });\n    }\n\n    return CronValidator.isValidAlternativePart(value, allowedValues);\n  }\n\n  static isValidAlternativePart(value, allowedValues) {\n    if (value.includes('/')) {\n      return false;\n      /*\n      const stepValues = value.split('/');\n      return CronValidator.isValidAlternativeRange(stepValues, allowedValues);\n      */\n    }\n\n    if (value.includes('-')) {\n      const rangeValues = value.split('-');\n      return CronValidator.isValidAlternativeRange(rangeValues, allowedValues) && rangeValues.length === 2\n        && allowedValues.indexOf(rangeValues[0]) <= allowedValues.indexOf(rangeValues[1]);\n    }\n\n    return CronValidator.isValidAlternativeRange([value], allowedValues);\n  }\n\n  static isValidAlternativeRange(values, allowedValues) {\n    return values.every((value) => {\n      return allowedValues.includes(CronValidator.cleanValue(value));\n    });\n  }\n}\n","export const LOAD_ALL_USERS = 'LOAD_ALL_USERS';\nexport const SELECT_USER = 'SELECT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const REVOKE_PRIVILEGE = 'REVOKE_PRIVILEGE';\nexport const GRANT_PRIVILEGE = 'GRANT_PRIVILEGE';\n\nexport const ADD_USER_TO_GROUPS = 'ADD_USER_TO_GROUPS';\nexport const REMOVE_USER_FROM_GROUPS = 'REMOVE_USER_FROM_GROUPS';\nexport const DEACTIVATE_USER = 'DEACTIVATE_USER';\nexport const CREATE_USER = 'CREATE_USER';\n","import { RestClient } from 'shared/lib/rest';\nimport { ENTITY_TYPES_FETCH } from './selectors';\n\nexport function fetchEntities() {\n  return function thunk(dispatch) {\n    const promises = ENTITY_TYPES_FETCH.map(({ type, query }) => {\n      let url = `${type}`;\n      if (query) {\n        url = url.concat(`/${encodeURIComponent(query)}`);\n      }\n      const promise = RestClient.get(url, { page_size: 2147483645 });\n      dispatch({\n        type: 'FETCH_ENTITIES',\n        promise,\n        entityType: type\n      });\n      return promise;\n    });\n\n    dispatch({\n      type: 'FETCH_ENTITIES_ALL',\n      promise: promises\n    });\n  };\n}\n\nexport function fetchEntity(eType) {\n  const definition = ENTITY_TYPES_FETCH.find(desc => eType === desc.type);\n\n  if (!definition) {\n    return function notFound() {\n      console.warn('[fetchEntity] invalid entity type:', eType); // eslint-disable-line\n    };\n  }\n\n  return function thunk(dispatch) {\n    const promise = RestClient.get(\n      `${definition.type}${definition.query ? `/${definition.query}` : ''}?page_size=2147483645`\n    );\n\n    dispatch({\n      type: 'FETCH_ENTITIES',\n      promise,\n      entityType: definition.type\n    });\n\n    return promise;\n  };\n}\n\nexport function selectEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'SELECT_ENTITY'\n  };\n}\n\nexport function clearSelectedEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'CLEAR_SELECTED_ENTITY'\n  };\n}\n\nexport function setFilterType(value) {\n  return {\n    name: 'type',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function setFilterSearch(value) {\n  return {\n    name: 'search',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function openModal(name) {\n  return {\n    type: 'OPEN_ENTITIES_MODAL',\n    name\n  };\n}\n","import { sessionActions } from './session.action';\n\nexport const actions = {\n  ...sessionActions,\n};\n","import { jobsActions } from './jobs.action';\nimport { processActions } from './process.action';\nimport { globalFiltersActions } from './global-filters.action';\n\nexport const actions = {\n  ...jobsActions,\n  ...processActions,\n  ...globalFiltersActions,\n};\n","// function Node(payload) {\n//   const data = payload;\n//   const edges = [];\n\n//   return {\n//     getEdges() {\n//       return edges;\n//     },\n//     getData() {\n//       return data;\n//     },\n//     addEdge(edge) {\n//       edges.push(edge);\n//       return edges;\n//     }\n//   };\n// }\n\nimport _ from 'lodash';\nimport { createSelector } from 'reselect';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nfunction pipe(...fns) {\n  return arg => fns.reduce((prev, fn) => fn(prev), arg);\n}\n\nfunction filterBy(selector, equalityFn, value) {\n  return data => {\n    if (value) {\n      return data.filter(el => equalityFn(selector(el), value));\n    }\n\n    return data;\n  };\n}\n\nexport function retrieveFilteredAccounts(protocol, server) {\n  return state => {\n    const { accounts } = state.explorer;\n\n    const filterByProtocol = filterBy(\n      el => (el.nodes[0] ? el.nodes[0].protocol : ''),\n      (stateValue, currentValue) => stateValue === currentValue,\n      protocol\n    );\n\n    const filterByServer = filterBy(\n      el => Object.keys(el.servers),\n      (servers, currentServer) => servers.includes(currentServer),\n      server\n    );\n\n    return pipe(filterByProtocol, filterByServer)(accounts);\n  };\n}\n\nexport function retrieveServerEntry({ protocol, address }, structure) {\n  const dbms = structure.dbms.find(entry => entry.protocol === protocol);\n  return dbms && dbms.servers.find(server => server.address === address);\n}\n\nexport function retrieveDatabaseEntry({ database, protocol, address }, structure) {\n  const server = retrieveServerEntry({ protocol, address }, structure);\n\n  return server.databases.find(db => db.special.database === database);\n}\n\nconst getStatePath = state => state.explorer.state.path;\nconst getStructured = state => state.explorer.structured.dbms;\nconst getSessions = state => state.explorer.sessions;\nconst getSessionsFlags = state => state.explorer.flags.sessions;\nconst getTopSqlStatements = state => state.explorer.topSqlStatements;\nconst getTopSqlStatementsFlags = state => state.explorer.flags.topSqlStatements;\nconst getStoragePointsLoadingFlag = state => state.explorer.flags.storage.loadingPoints;\nconst getStorageDetailsLoadingFlag = state => state.explorer.flags.storage.loadingDetails;\nconst getSelectedStorage = state => state.explorer.storage.selected;\nconst getStoredEntries = state => state.explorer.storage.storedEntries;\nconst getSelectedObject = state => state.explorer.objects.selectedObject;\nconst getSelectedOwner = state => state.explorer.objects.selectedOwner;\nconst getObjectsEntries = state => state.explorer.objects.storedEntries;\nconst getObjectsLoadingFlag = state => state.explorer.flags.objects.loading;\nconst getMssqlDiskIO = state => state.explorer.storage.mssqlDiskIO;\nconst getMssqlStorageUsed = state => state.explorer.storage.mssqlStorageUsed;\nconst getMssqlFileStorage = state => state.explorer.storage.mssqlFileStorage;\n\nexport const getFullPath = createSelector([getStatePath, getStructured], (fullPath, dbms) => {\n  const pathArr = fullPath.split('--');\n  return dbms\n    .find(({ path }) => path === pathArr[0])\n    ?.servers.find(({ address }) => address === pathArr[1])\n    ?.databases.find(({ special }) => special.database === pathArr[2])?.name;\n});\n\nexport const haveStorageData = createSelector(\n  [getFullPath, getStoredEntries],\n  (fullPath, storedEntries) => {\n    const selectedStorage = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedStorage).length > 0;\n  }\n);\n\nexport const getFormattedStorage = createSelector(\n  [getFullPath, getStoredEntries, getStoragePointsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    const points = storedEntries[fullPath]?.points;\n    if (isLoading || !_.isArray(points)) {\n      return [];\n    }\n    const factor = 1024;\n    return points.map(point => {\n      let usage = (point.Used_MB / point.Total_MB) * 100;\n      if (usage < 0) {\n        usage = 0;\n      }\n      return {\n        ns: point.Tablespace,\n        freePerc: point['Pct._Free'],\n        freeGB: point.Free_MB / factor,\n        totalGB: point.Total_MB / factor,\n        usedGB: point.Used_MB / factor,\n        usage\n      };\n    });\n  }\n);\n\nexport const haveObjectsData = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const selectedObjects = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedObjects).length > 0;\n  }\n);\n\nexport const getStorageDetailsData = createSelector(\n  [\n    getFullPath,\n    getStoredEntries,\n    getFormattedStorage,\n    getStorageDetailsLoadingFlag,\n    getSelectedStorage\n  ],\n  (fullPath, storedEntries, list, isLoading, selectedNS) => {\n    const details = storedEntries[fullPath]?.details;\n    if (isLoading || !_.isArray(details)) {\n      return {\n        tablespace: {},\n        files: []\n      };\n    }\n    return {\n      tablespace: list.find(({ ns }) => ns === selectedNS),\n      files: details.filter(({ TABLESPACE_NAME }) => TABLESPACE_NAME === selectedNS)\n    };\n  }\n);\n\nexport const getMssqlStorageDetails = createSelector(\n  [\n    getMssqlDiskIO,\n    getMssqlStorageUsed,\n    getMssqlFileStorage,\n  ],\n  (diskIO, storageUsed, fileStorage) => {\n    return { diskIO, storageUsed, fileStorage };\n  }\n);\n\nexport const getStructuredObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n\n    const objects = storedEntries[fullPath] || {};\n    const tree = Object.keys(objects).reduce((acc, key) => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          if (acc[object.OWNER] && !acc[object.OWNER].includes(key)) {\n            acc[object.OWNER].push(key);\n          } else {\n            acc[object.OWNER] = [key];\n          }\n        });\n      return acc;\n    }, []);\n    return Object.keys(tree).map(key => ({ owner: key, objects: tree[key] }));\n  }\n);\n\nexport const getInvalidObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const invalidObjects = [];\n    const objects = storedEntries[fullPath] || {};\n    Object.keys(objects).forEach(key => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          const included = invalidObjects.findIndex(\n            ({ owner, object: name }) => owner === object?.OWNER && name === key\n          );\n          if (object && object.STATUS !== 'VALID' && included === -1) {\n            invalidObjects.push({ owner: object.OWNER, object: key });\n          }\n        });\n    });\n    return invalidObjects;\n  }\n);\n\nexport const getSelectedObjectData = createSelector(\n  [getSelectedObject, getSelectedOwner, getFullPath, getObjectsEntries],\n  (object, owner, fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!object || !owner || !_.isObject(objects) || !_.isArray(objects[object])) {\n      return [];\n    }\n    return objects[object].filter(({ OWNER }) => OWNER === owner);\n  }\n);\n\nexport const getObjectsDataByProcess = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!_.isObject(objects)) {\n      return [];\n    }\n    return Object.values(objects);\n  }\n);\n\nexport function objectsSelectorResolver(state, protocol) {\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return getObjectsDataByProcess(state);\n  }\n  return getSelectedObjectData(state);\n}\n\nexport const getSortedSessions = createSelector(\n  [getSessions, getSessionsFlags],\n  (sessions, { loading, sort }) => {\n    if (loading || !_.isArray(sessions)) {\n      return [];\n    }\n    if (sort === undefined) {\n      return sessions;\n    }\n    let sortFunction;\n    // Backend doesn't support sorting at this time. Consider moving sort to backend though\n    if (sort.order === 'asc') {\n      sortFunction = (a, b) => {\n        return new Date(a[sort.sortKey]).getTime() - new Date(b[sort.sortKey]).getTime();\n      };\n    } else {\n      sortFunction = (a, b) => {\n        return new Date(b[sort.sortKey]).getTime() - new Date(a[sort.sortKey]).getTime();\n      };\n    }\n    return sessions.slice().sort(sortFunction);\n  }\n);\n\nexport const selectTopSqlStatements = createSelector(\n  [getTopSqlStatements, getTopSqlStatementsFlags],\n  (statementsTxt, { loading }) => {\n    if (loading || !statementsTxt) {\n      return [];\n    }\n\n    const statementsJson = (statementsTxt || '').split('\\n')[1];\n    return statementsJson ? JSON.parse(statementsJson) : [];\n  }\n);\n\nexport const getBackup = (database, backups) => {\n  const backup = backups.find(db => db.name === database.name)?.backup;\n\n  return backup;\n};\n\nexport const getDBStatus = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n\n  return status;\n};\n\nexport const getDBStatusInfo = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n  const info = statuses.find(db => db.name === database.name)?.message;\n\n  return dbMessage(status, info);\n};\n\nexport const STATUS_TYPES = {\n  down: 'down',\n  up: 'up',\n  error: 'error',\n  notConnected: 'not-connected',\n  notFound: 'not found',\n};\n\nexport const getDBMSStatus = (dbms, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n\n  const allStatuses = {};\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n\nexport const getDBMSStatusInfo = (dbms, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const dbmsStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': []\n  };\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      dbmsStatus[entry.status] && dbmsStatus[entry.status].push({\n        server: entry.server,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (dbmsStatus.down.length > 0) {\n    if (dbmsStatus.down.length === 1) {\n      message += `${dbmsStatus.down[0].server} has a database down. `;\n    } else {\n      message += `The following servers: ${dbmsStatus.down.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database down. `;\n    }\n  }\n\n  if (dbmsStatus.error.length > 0) {\n    if (dbmsStatus.error.length === 1) {\n      message += `${dbmsStatus.error[0].server} has a database with error. `;\n    } else {\n      message += `\\n The following servers: ${dbmsStatus.error.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database with error. `;\n    }\n  }\n\n  if (dbmsStatus['not-connected'].length > 0) {\n    if (dbmsStatus['not-connected'].length === 1) {\n      message += `${dbmsStatus['not-connected'][0].server} server has a database which status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases from servers: (${dbmsStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    dbmsStatus.down.length === 0 &&\n    dbmsStatus.error.length === 0 &&\n    dbmsStatus['not-connected'].length === 0 &&\n    dbmsStatus.up.length > 0\n  ) {\n    message = 'All servers are up.';\n  }\n\n  return message;\n};\n\nexport const getServerStatus = (server, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n  const allStatuses = {};\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.notFound]) return 'not found';\n\n  return 'not-connected';\n};\n\nexport const getServerStatusInfo = (server, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const serverStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': [],\n  };\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      serverStatus[entry.status] && serverStatus[entry.status].push({\n        dbName: entry.dbName,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (serverStatus.down.length > 0) {\n    if (serverStatus.down.length === 1) {\n      message += `${serverStatus.down[0].dbName} database is down. `;\n    } else {\n      message += `The following databases: ${serverStatus.down.map(sv => sv.dbName)} are down. `;\n    }\n  }\n\n  if (serverStatus.error.length > 0) {\n    if (serverStatus.error.length === 1) {\n      message += `${serverStatus.error[0].dbName} database has errors. `;\n    } else {\n      message += `Errors reported in databases: (${serverStatus.error.map(sv => sv.dbName)}). `;\n    }\n  }\n\n  if (serverStatus['not-connected'].length > 0) {\n    if (serverStatus['not-connected'].length === 1) {\n      message += `${serverStatus['not-connected'][0].dbName} database status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases: (${serverStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    serverStatus.down.length === 0 &&\n    serverStatus.error.length === 0 &&\n    serverStatus['not-connected'].length === 0 &&\n    serverStatus.up.length > 0\n  ) {\n    message = 'All databases are up.';\n  }\n\n  return message;\n};\n\nexport const getEntityPendingStatus = (entity, statuses, type) => {\n  const pathArray = entity.path.split('--');\n  const dbms = pathArray[0];\n  if (statuses.length === 0) return { label: `Loading ${type} status...`, loading: true };\n\n  if (type === 'server') {\n    return statuses\n      .filter(en => en.dbms === dbms && en.server === entity.address)\n      .find(e => e.loading)\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh dbs status', loading: false };\n  }\n\n  if (type === 'db') {\n    return statuses.find(db => db.name === entity.name)?.loading\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh db status', loading: false };\n  }\n\n  return { label: 'Refresh', type: false };\n};\n\nexport const dbMessage = (status, message) => {\n  if (!message) {\n    if (status === 'up') {\n      return 'Instance is up.';\n    }\n\n    if (status === 'error') {\n      return 'An unknown error has occurred on this instance.';\n    }\n\n    if (status === 'down') {\n      return 'Instance is down.';\n    }\n\n    if (status === 'not-connected' || status === 'not found') {\n      return 'Please refresh in order to get the instance status.';\n    }\n  }\n\n  return message;\n};\n","import Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LimitlessTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n    maxWidth: 'none'\n  }\n}))(Tooltip);\n","import React, { useState, useCallback, useMemo, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { useFormikContext } from 'formik';\nimport _ from 'lodash';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { mdiArrowExpand } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Modal } from 'shared/components/overlays';\nimport { ParameterLoader } from 'shared/components/loaders';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Ensure } from 'core/components/Ensure/Ensure';\nimport { Checkbox } from '../../controls/Checkbox/Checkbox';\nimport { Text } from './Generic';\nimport { formatAccount } from './formatters';\nimport check from './field-level-validations';\nimport { ADDITIONAL_ACCOUNT_FILTERS } from './filters';\nimport { deepCopy } from 'shared/lib/deep-copy';\n\nexport const RSAKey = props => {\n  return <Text multiline {...props} />;\n};\n\nexport const FQName = ({ recieved, ...props }) => {\n  const { values } = useFormikContext();\n\n  const fqname = recieved?.fqname || recieved?.name || null;\n  let name = values[`fqname--${props?.name}`];\n  let namespace = values['fqname--namespace'];\n\n  // use the value received from the invocation\n  if (fqname && name === undefined) {\n    const parts = fqname.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  // use the value that was manually typed\n  if (name !== undefined && name.slice(-1) !== '.') {\n    const parts = name.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '30px' }}\n        value={name}\n        description=\"The relative or fully-qualified name of the process to be created.\"\n        required\n        name={`fqname--${props?.name}`}\n        label=\"name\"\n        disabled={props.disabled}\n      />\n      <NamespaceSelect\n        name=\"fqname--namespace\"\n        label=\"Parent namespace\"\n        description=\"namespace (leave blank for relative name)\"\n        value={namespace}\n        disabled={props.disabled}\n        type=\"fqname\"\n      />\n    </>\n  );\n};\n\nexport function QualifiedName(props) {\n  const validations = useMemo(() => check.merge(check.masName, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"text\" />;\n}\n\n/**\n * TODO:\n * These should be retireved through a connection\n * Platforms are protocols associated for accounts\n * For now they can be hardcoded\n */\nexport const AccountSelect = ({ protocols = [], ...props }) => {\n  const { values } = useFormikContext();\n  const [showUrls, setShowUrls] = useState(false);\n  const boxName = `${props.name}-show-urls`;\n\n  const showToggle = useCallback(e => {\n    setShowUrls(e.target.checked);\n  }, []);\n\n  return (\n    <Ensure type=\"account\" inlineLoader>\n      {({ data: accounts }) => {\n        let list = accounts;\n\n        if (protocols && protocols.length) {\n          if (ADDITIONAL_ACCOUNT_FILTERS[props.name]) {\n            const additionalFilters = ADDITIONAL_ACCOUNT_FILTERS[props.name];\n            list = additionalFilters.reduce((acc, filterFn) => {\n              acc = filterFn(deepCopy(acc), values);\n              return acc;\n            }, accounts);\n          }\n\n          list = list.filter(account => protocols.includes(account.protocol));\n        }\n\n        const options = list.map(account => ({\n          label: showUrls ? formatAccount(account) : account.name,\n          value: account.name\n        }));\n\n        /**\n          TODO: filter by protocol\n         */\n        if (protocols.length) {\n          accounts.filter(Boolean);\n        }\n\n        return (\n          <FormGroup>\n            <Text {...props} options={options} />\n            <Checkbox\n              size=\"small\"\n              id={boxName}\n              name={boxName}\n              onChange={showToggle}\n              disabled={props.disabled}\n              label=\"Show Account URLs\"\n            />\n          </FormGroup>\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const PLATFORMS = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'MariaDB', value: 'MariaDB', tester: /mariadb\\./ },\n  { label: 'MySQL', value: 'MySQL', tester: /mysql\\./ },\n  { label: 'Oracle', value: 'Oracle', tester: /oracle\\./ },\n  { label: 'PostgreSQL', value: 'PostgreSQL', tester: /pgsql\\./ },\n  {\n    label: 'Microsoft SQL Server',\n    value: 'Microsoft SQL Server',\n    tester: /microsoft\\.sqlserver\\./\n  },\n  { label: 'Oracle RDS', value: 'Oracle RDS', tester: /.rds\\.oracle\\./ }\n];\n\nexport const PROCESS_TYPES = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'Backup', value: 'backup', tester: /\\.backup\\./ },\n  { label: 'Config', value: 'config', tester: /\\.config\\./ },\n  { label: 'Import', value: 'import', tester: /\\.import\\./ },\n  { label: 'Monitor', value: 'monitor', tester: /\\.monitor\\./ },\n  { label: 'Oda', value: 'oda', tester: /\\.oda\\./ },\n  { label: 'Patch', value: 'patch', tester: /\\.patch\\./ },\n  { label: 'Patching', value: 'patching', tester: /\\.patching\\./ },\n  { label: 'RDS', value: 'rds', tester: /\\.rds\\./ },\n  { label: 'Run', value: 'run', tester: /\\.run\\./ },\n  { label: 'Security', value: 'security', tester: /\\.security\\./ },\n  { label: 'Util', value: 'util', tester: /\\.util\\./ },\n];\n\nexport const PlatformSelect = props => {\n  const { values } = useFormikContext();\n\n  let platformValue = values?.platform ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availablePlatforms = PLATFORMS.slice(1).reverse();\n    platformValue =\n      availablePlatforms.find(platform => platform.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={platformValue} name=\"platform\" {...props} options={PLATFORMS} />;\n};\n\nexport const ProcessTypeSelect = props => {\n  const { values } = useFormikContext();\n\n  let typeValue = values?.type ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availableTypes = PROCESS_TYPES.slice(1).reverse();\n    typeValue =\n      availableTypes.find(type => type.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={typeValue} name=\"type\" {...props} options={PROCESS_TYPES} />;\n};\n\nexport const ProcessSelect = props => {\n  const { values } = useFormikContext();\n  const platformValue = values?.platform ?? '';\n  const typeValue = values?.type ?? '';\n\n  let platform = PLATFORMS[0];\n  let type = PROCESS_TYPES[0];\n\n  if (platformValue) {\n    platform = PLATFORMS.find(p => p.value === platformValue);\n  }\n\n  if (typeValue) {\n    type = PROCESS_TYPES.find(p => p.value === typeValue);\n  }\n\n  return (\n    <Ensure type=\"namespace\" inlineLoader>\n      <Ensure type=\"process\" inlineLoader>\n        {({ data }) => {\n          let processes = data;\n\n          if (platform && platform.value !== 'all') {\n            processes = processes.filter(process => platform.tester.test(process.name));\n          }\n\n          if (type && type.value !== 'all') {\n            processes = processes.filter(process => type.tester.test(process.name));\n          }\n\n          /** TODO, CHECK */\n          processes = processes.filter(process => {\n            if (processes.meta && process.meta.appearance) {\n              return process.meta.appearance !== 'Hidden';\n            }\n\n            return true;\n          });\n\n          // display only processes that have the is_executable === true\n          // the others need to be compiled first\n          const OPTIONS = processes\n            .filter(p => p.is_executable)\n            .map(item => ({\n              value: item.name,\n              label: item.name,\n              description: item.description,\n              disabled: item.meta && item.meta.appearance === 'Greyed'\n            }));\n\n          return <Text type=\"text\" defaultValue=\"\" name=\"process\" {...props} options={OPTIONS} />;\n        }}\n      </Ensure>\n    </Ensure>\n  );\n};\n\nexport const NamespaceSelect = ({ value, ...props }) => {\n  const { values } = useFormikContext();\n  const defaultValue = values.namespace || '';\n  let customVal = value;\n\n  return (\n    <Ensure type=\"namespace\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading namespaces...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load namespaces.</ParameterLoader>;\n        }\n\n        let namespaces = data;\n\n        namespaces = namespaces.filter(namespace => {\n          if (namespace.meta && namespace.meta.appearance) {\n            return namespace.meta.appearance !== 'Hidden';\n          }\n\n          return true;\n        });\n\n        const OPTIONS = namespaces.map(item => ({\n          value: item.name,\n          label: item.name,\n          disabled: item.meta && item.meta.appearance === 'Greyed'\n        }));\n\n        if (props?.type === 'fqname') {\n          customVal = OPTIONS.find(o => o.value === value)?.value || '';\n        }\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            name=\"namespace\"\n            value={customVal}\n            {...props}\n            options={OPTIONS}\n            required\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const FormPrototypeSelect = props => {\n  return (\n    <Ensure type=\"prototype\" inlineLoader>\n      {({ data: prototypes }) => {\n        const list = prototypes || [];\n\n        const options = list.map(prototype => ({\n          label: prototype.name,\n          value: prototype.name\n        }));\n\n        return <Text fullWidth {...props} description=\"\" options={options} />;\n      }}\n    </Ensure>\n  );\n};\n\nexport const ModeSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.mode || '';\n\n  return (\n    <Ensure type=\"type\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading type...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load types.</ParameterLoader>;\n        }\n\n        const modes = data.filter(type => type.name === 'mas0300.sys.account.privilege_mode')[0];\n\n        if (modes.meta && modes.meta.appearance === 'Hidden') {\n          return null;\n        }\n\n        const OPTIONS =\n          modes.enumerations &&\n          modes.enumerations.map(item => ({\n            value: item.label,\n            label: item.label,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            disabled={modes.meta && modes.meta.appearance === 'Greyed'}\n            name=\"process\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nfunction variadicListReducer(list, action) {\n  switch (action.type) {\n    case 'add_new_parameter':\n      return produce(list, draft => {\n        draft.push({ name: '', type: '', deflt: undefined, description: null, value: '' });\n      });\n\n    case 'remove_parameter':\n      return produce(list, draft => {\n        draft.pop();\n      });\n\n    default:\n      return list;\n  }\n}\n\nfunction useVariadicList(recieved) {\n  const [list, dispatch] = useReducer(variadicListReducer, recieved?.replvars || []);\n\n  return { list, dispatch };\n}\n\nexport const Variadic = ({ recieved, disabled }) => {\n  const { values } = useFormikContext();\n  const displayDeftlDesc = selectedProcess !== 'vendita.oracle.rdbms.cli.sqlplus.execute';\n\n  const { list, dispatch } = useVariadicList(recieved);\n\n  const selectedProcess = values.process;\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvars</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Ensure type=\"type\">\n          {({ data: datatypes }) => {\n            const options = datatypes\n              .filter(dataType => {\n                if (\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.script' ||\n                  selectedProcess === 'mas0300.os.svc.db.data.sql.query_import' ||\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.execute' ||\n                  selectedProcess === 'dbatools.oracle.run.import_sqlplus_query'\n                ) {\n                  return dataType.name === 'string' || dataType.name === 'integer';\n                }\n                return true;\n              })\n              .map(dataType => {\n                return {\n                  label: dataType.name,\n                  value: dataType.name\n                };\n              });\n\n            return (\n              <>\n                <div>\n                  {list.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <VariadicInstance\n                        data={item}\n                        index={index}\n                        defltDesc={displayDeftlDesc}\n                        types={options}\n                        disabled={disabled}\n                      />\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  }}\n                >\n                  {list.length > 0 && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        dispatch({ type: 'remove_parameter' });\n                      }}\n                      disabled={disabled}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                  <Button\n                    onClick={() => {\n                      dispatch({ type: 'add_new_parameter' });\n                    }}\n                    disabled={disabled}\n                  >\n                    Add\n                  </Button>\n                </div>\n              </>\n            );\n          }}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nfunction VariadicInstance({ data = {}, index, defltDesc, types, disabled }) {\n  const name_base = `replvar--${index}`;\n\n  let parsedDeflt = data.deflt;\n\n  if (data.deflt) {\n    parsedDeflt = data.deflt.replace(\"str('\\\"'\", '').replace(\"'\\\"')\", '');\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Name\"\n        type=\"text\"\n        name={`${name_base}--name`}\n        value={data.name}\n        disabled={disabled}\n        validate={check.merge(check.firstCharLetter, check.masName)}\n        required\n      />\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Type\"\n        type=\"text\"\n        name={`${name_base}--type`}\n        options={types}\n        value={data.type}\n        disabled={disabled}\n        required\n      />\n      {defltDesc && (\n        <>\n          <Text\n            style={{ marginBottom: '15px' }}\n            label=\"Deflt\"\n            type=\"text\"\n            name={`${name_base}--deflt`}\n            value={parsedDeflt}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n          <Text\n            style={{ marginBottom: '30px' }}\n            label=\"Description\"\n            type=\"text\"\n            name={`${name_base}--description`}\n            value={data.description}\n            defaultValue={null}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n        </>\n      )}\n      {!defltDesc && (\n        <Text\n          style={{ marginBottom: '15px' }}\n          label=\"Value\"\n          type=\"text\"\n          name={`${name_base}--value`}\n          value={data.value}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n}\n\nexport const Multiline = props => {\n  const [open, setOpen] = useState(false);\n  const { values } = useFormikContext();\n  const value = values[props.name];\n\n  return (\n    <>\n      <Text\n        InputProps={{\n          startAdornment: (\n            <InputAdornment>\n              <LightTooltip title=\"Expand\">\n                <SvgIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    setOpen(true);\n                  }}\n                >\n                  <path d={mdiArrowExpand} />\n                </SvgIcon>\n              </LightTooltip>\n            </InputAdornment>\n          )\n        }}\n        value={value}\n        isPopup={open}\n        multiline\n        {...props}\n      />\n      <Modal open={open}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <Paper.Content>\n            <Text value={value} multiline isPopup={open} variant=\"standard\" {...props} />\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={() => setOpen(false)}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const Replvalues = ({ recieved, disabled, ...props }) => {\n  const { values } = useFormikContext();\n  const keys = Object.keys(values);\n  const replvars = keys.filter(key => key.startsWith('replvar'));\n  const valuesNr = replvars.length / 4;\n  const replvaluesParams = [];\n\n  if (valuesNr > 0) {\n    for (let i = 0; i < valuesNr; i++) {\n      const type =\n        values[`replvar--${i}--type`] === 'integer' ? 'number' : values[`replvar--${i}--type`];\n      const label = values[`replvar--${i}--name`];\n      const name = `replvalue--${i}`;\n      const value =\n        recieved?.replvalues && recieved.replvalues[values[`replvar--${i}--name`]]\n          ? recieved.replvalues[values[`replvar--${i}--name`]]\n          : values[`replvalue--${i}`];\n      replvaluesParams.push({ type, label, name, value });\n    }\n  }\n\n  if (replvaluesParams.length > 0) {\n    return (\n      <>\n        <Section>\n          <Section.Header>\n            <Section.Title>replvalues</Section.Title>\n          </Section.Header>\n        </Section>\n        {replvaluesParams.map((repl, index) => {\n          return (\n            <Text\n              key={index}\n              style={{ marginBottom: '15px' }}\n              label={repl.label}\n              type={repl.type}\n              name={repl.name}\n              value={repl.value}\n              disabled={disabled}\n              description={props.description}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvalues</Section.Title>\n      </Section.Header>\n    </Section>\n  );\n};\n\nexport const Uuid = props => {\n  return <Text validate={check.uuid} {...props} />;\n};\n","export const InvocationStatus = {\n  NEW: '__NEW__',\n  ALL: '__ALL__',\n  NOT_FETCHED: 'NOT_FETCHED',\n  ABORTED: 'ABORTED',\n  SCHEDULED: 'SCHEDULED',\n  SUCCEEDED: 'SUCCEEDED',\n  FAILED: 'FAILED',\n  EXECUTING: 'EXECUTING',\n  DELAYED: 'DELAYED',\n  KILLED: 'KILLED'\n};\n\nexport const AllowOutputFor = [\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED,\n  InvocationStatus.FAILED,\n  InvocationStatus.SUCCEEDED,\n  InvocationStatus.EXECUTING\n];\n\nexport const AllowGeneralEditingFor = [InvocationStatus.NEW];\n\nexport const CannotShowStatusFor = [\n  InvocationStatus.NEW,\n  InvocationStatus.ALL,\n  InvocationStatus.NOT_FETCHED\n];\n\nexport const FAILURES = [\n  InvocationStatus.FAILED,\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED\n];\n\nexport const SUCESSES = [InvocationStatus.SUCCEEDED];\n\nexport const WARNINGS = [InvocationStatus.DELAYED, InvocationStatus.SCHEDULED];\n","export function hasWritePrivileges(entity) {\n  return entity?.privileges?.effective?.includes?.('write');\n}\n\nexport function hasOnlyReadPrivilege(entity) {\n  if (entity?.privileges?.effective?.length === 1 && entity?.privileges?.effective[0] === 'read') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isOnlySelectGroup(details) {\n  if (!details) return false;\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (\n    (userDetails.member_of.length === 1 && userDetails.member_of[0] === 'select') ||\n    (userDetails.member_of.length === 2 &&\n      userDetails.member_of.includes('select') &&\n      userDetails.member_of.includes('user'))\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isAdmin(details) {\n  if (!details) return false;\n\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (userDetails.member_of.includes('admin')) {\n    return true;\n  }\n\n  return false;\n}\n","import React, { useState } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nexport const SubmitButton = ({ children = 'Submit', confirmation, ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating, dirty } = useFormikContext();\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        disabled={!dirty || isSubmitting || isValidating}\n        onClick={() => {\n          console.log('submitting', values); // eslint-disable-line\n          if (confirmation) {\n            setOpen(true);\n          } else {\n            submitForm();\n          }\n        }}\n        {...props}\n      >\n        {children}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '350px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n          <Paper.Content scrollable={false}>\n            <Result type=\"fail\">\n              <BodyText>Are you sure you want to save?</BodyText>\n            </Result>\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                No\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                  submitForm();\n                }}\n              >\n                Yes\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { bool, func, node, shape, object, string } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './AvatarCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nexport const AvatarCard = ({\n  label,\n  avatar = {},\n  selected,\n  data,\n  onSelect,\n  action,\n  description,\n  ...props\n}) => {\n  const focusable = {\n    ...(onSelect && {\n      onFocus: useCallback(\n        event => {\n          event.stopPropagation();\n          onSelect(data);\n        },\n        [onSelect, data]\n      ),\n      tabIndex: props.disabled ? -1 : 0\n    })\n  };\n\n  return (\n    <div\n      {...focusable}\n      className={classnames('avatar-card', { selected })}\n      data-qa={`avatar-card-of-${label}`}\n      {...props}\n    >\n      <Avatar className=\"card-avatar\" alt={label} src={avatar.src}>\n        {avatar.initial || avatar.fallback}\n      </Avatar>\n      <span className=\"card-label\">{label}</span>\n      <div className=\"right-slot\">\n        {action && (\n          <span onClick={containEvent} className=\"action-slot\">\n            {action}\n          </span>\n        )}\n        {typeof description === 'string' && (\n          <LightTooltip placement=\"right\" title={description}>\n            <SvgIcon>\n              <Icon path={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction containEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nAvatarCard.propTypes = {\n  label: node,\n  selected: bool,\n  disabled: bool,\n  avatar: shape({\n    src: string,\n    fallback: node\n  }),\n  data: object,\n  onSelect: func,\n  action: node\n};\n","import * as Yup from 'yup';\n\nexport const mergeValidations = (...callbacks) => value => {\n  let error;\n\n  callbacks.forEach(provided => {\n    if (provided && typeof provided === 'function') {\n      error = provided(value);\n    }\n  });\n\n  return error;\n};\n\nexport const checkRequired = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkRequiredNotNullable = async value => {\n  try {\n    await Yup.string()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkEmail = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .email('Invalid email format.')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkPhoneNumber = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUnsignedInt = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[-]!$/, {\n        excludeEmptyString: true,\n        message: 'The parameter must be unsigned.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkName = value => {\n  if (!/^(?:[a-z_][a-z0-9_\\\\.]*)$/i.test(value) || (value && value.substr(-1) === '.')) {\n    return 'A valid MAS relative name is required.';\n  }\n};\n\nexport const checkFirstLetter = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[a-zA-Z].*/, {\n        excludeEmptyString: true,\n        message: 'First character must be a letter'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUuid = value => {\n  if (value) {\n    if (!/^[a-fA-F0-9-]+$/.test(value)) {\n      return 'Only hexadecimal values (0-9, a-f, A-F) and hyphens (\"-\") are allowed';\n    }\n    const copy = value.replace(/-/g, '');\n    if (copy.length !== 32) {\n      return 'A string of 32 hexadecimal with hyphens (\"-\") is required (ex: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)';\n    }\n  }\n};\n\nexport const noop = () => {};\n\nexport default {\n  merge: mergeValidations,\n  required: checkRequired,\n  required_not_null: checkRequiredNotNullable,\n  email: checkEmail,\n  phone: checkPhoneNumber,\n  unsigned_int: checkUnsignedInt,\n  unsigned_float: noop,\n  signed_float: noop,\n  masName: checkName,\n  firstCharLetter: checkFirstLetter,\n  uuid: checkUuid\n};\n","const DAY = 86400000;\nconst HOUR = 3600000;\nconst MINUTE = 60000;\nconst SECOND = 1000;\n\nexport const formatTimePeriod = (timeMillis) => {\n  let millisLeft = timeMillis;\n  const days = millisLeft / DAY;\n  millisLeft %= DAY;\n  const hours = millisLeft / HOUR;\n  millisLeft %= HOUR;\n  const minutes = millisLeft / MINUTE;\n  millisLeft %= MINUTE;\n  const seconds = millisLeft / SECOND;\n  millisLeft %= SECOND;\n\n  return [\n    days >= 1 ? `${Math.floor(days)}d` : null,\n    hours >= 1 ? `${Math.floor(hours)}h` : null,\n    minutes >= 1 ? `${Math.floor(minutes)}m` : null,\n    seconds >= 1 ? `${Math.floor(seconds)}s` : null,\n    millisLeft >= 1 ? `${Math.floor(millisLeft)}ms` : null\n  ].filter(Boolean).join(' ');\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function postInvocation(body) {\n  try {\n    const { data } = await RestClient.post('/invocation', body);\n\n    return { result: data.result, invocations: data.data.invocations };\n  } catch (e) {\n    return { result: 'fail', invocations: [], messages: e.messages };\n  }\n}\n\nexport function requestInvocation(uuid) {\n  return RestClient.get(`/invocation/${uuid}`);\n}\n\nexport async function fetchInvocation(uuid) {\n  try {\n    const response = await RestClient.get(`/invocation/${uuid}`);\n\n    return {\n      result: 'success',\n      invocation: response.data.data.invocations[0]\n    };\n  } catch (e) {\n    console.log(e); // eslint-disable-line\n    return { result: 'fail' };\n  }\n}\n\nexport async function fetchInvocationOutput(uuid) {\n  return RestClient.get(`/invocation/${uuid}/display`, {\n    page_size: 2147483645\n  });\n}\n\nexport async function invocationOutputPoller(uuid) {\n  let statusChecksCount = 0;\n  let pollerFinished = false;\n  let succeeded = false;\n\n  while (statusChecksCount < 10 && !pollerFinished) {\n    const invocationStatus = await sleep(fetchInvocation.bind(this, uuid)); // eslint-disable-line\n    statusChecksCount++;\n    succeeded = invocationStatus.invocation.status === 'SUCCEEDED';\n    pollerFinished = succeeded || invocationStatus.invocation.status === 'FAILED';\n  }\n\n  return succeeded ? fetchInvocationOutput(uuid) : Promise.resolve(null);\n}\n\nexport function parseInvocationResult(invocationOutput) {\n  const resultText = invocationOutput && invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n  const resultJsonString = (resultText || '').split('\\n')[1];\n  return resultJsonString ? JSON.parse(resultJsonString) : [];\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.shared;\n\nexport const jobsSelector = createSelector(localState, state => state.get('jobs'));\n\nexport const connectionsSelector = createSelector(localState, state => state.get('connections'));\n\nexport const jobsSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('jobs')\n); // eslint-disable-line\n\nexport const processesSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('processes')\n); // eslint-disable-line\n\nexport const globalFiltersSelector = createSelector(localState, state =>\n  state.get('globalFilters')\n); // eslint-disable-line\n","import { createSelector } from 'reselect';\n\n//\nexport const getCurrentUserName = createSelector(\n  state => state.session,\n  session => {\n    /** ImmutableJs object :( */\n    return session.get('currentUser').get('name');\n  }\n);\n\nexport const getCurrentUserDetails = createSelector(\n  state => state.session,\n  session => {\n    return session.get('currentUser').get('details');\n  }\n);\n","export const PROVIDE_EXECUTIVE_DASHBOARD = 'PROVIDE_EXECUTIVE_DASHBOARD';\nexport const PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD = 'PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD';\n\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const TOGGLE_SERVER = 'TOGGLE_SERVER';\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nexport function loadAllUsersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_USERS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_USERS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadUserThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USER, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USER, error));\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(GRANT_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(REVOKE_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function addUserToGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/grant`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, allUsers.data));\n\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function removeUserFromGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function deactivateUserThunk(user) {\n  return async dispatch => {\n    dispatch(creators.loading(DEACTIVATE_USER, user));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}/revoke`, {\n        groups: user.member_of\n      });\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(DEACTIVATE_USER, allUsers.data));\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DEACTIVATE_USER, error));\n\n      return error.data;\n    }\n  };\n}\n\nexport function createUserThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.username,\n      password: values.password,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_USER, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, refreshed.data));\n\n      dispatch(creators.success(CREATE_USER));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_USER, error));\n      return error?.response?.data;\n    }\n  };\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport function loadAllGroupsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_GROUPS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_GROUPS, error.data));\n\n      return error.data;\n    }\n  };\n}\n\nexport function loadGroupThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_GROUP, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${name}`);\n      dispatch(creators.success(LOAD_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_GROUP, error.data));\n    }\n  };\n}\n\nexport function createGroupThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.groupname,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_GROUP, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, refreshed.data));\n\n      dispatch(creators.success(CREATE_GROUP));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_GROUP, error));\n      return error?.response?.data;\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(GRANT_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(REVOKE_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function removeUsersFromGroupThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_USERS_FROM_GROUP, params));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`, {\n        groups: [params.group]\n      });\n\n      const group = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(REMOVE_USERS_FROM_GROUP, group.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_USERS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeSubGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_GROUPS_FROM_GROUP, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(REMOVE_GROUPS_FROM_GROUP, response.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_GROUPS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function addUsersToGroupThunk(params) {\n  return async dispatch => {\n    const { group, users } = params;\n\n    dispatch(creators.loading(ADD_USERS_TO_GROUP, params));\n\n    try {\n      await Promise.all(\n        users.map(async user => {\n          return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant`, {\n            groups: [group]\n          });\n        })\n      );\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(ADD_USERS_TO_GROUP, response.data));\n\n      return response.data;\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USERS_TO_GROUP, errorMsg));\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeGroupThunk(group) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_GROUP, group));\n\n    try {\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}`);\n      dispatch(creators.success(DELETE_GROUP));\n\n      dispatch(loadAllGroupsThunk());\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DELETE_GROUP, error));\n\n      return error.data;\n    }\n  };\n}\n","import * as Yup from 'yup';\n\nexport function getInitialValues(parameters) {\n  const initialValues = {};\n\n  parameters.map(parameter => {\n    initialValues[parameter.name] = parameter.deflt !== null ? parameter.deflt : '';\n    return null;\n  });\n\n  return initialValues;\n}\n\nexport function getValidationSchema(parameters) {\n  const validationSchema = {};\n\n  parameters.map(parameter => {\n    validationSchema[parameter.name] = Yup.string();\n\n    if (parameter.is_required) {\n      validationSchema[parameter.name].required('A value is required');\n    }\n\n    return null;\n  });\n}\n\nexport function formatParameters(values) {\n  const parameters = {};\n\n  Object.keys(values).map(value => {\n    if (typeof values[value] === 'string') {\n      if (values[value].length > 0 || values[value].trim()) {\n        parameters[value] = values[value];\n      }\n    } else if (typeof values[value] === 'object') {\n      if (values[value].name && (values[value].name.length > 0 || values[value].name.trim())) {\n        parameters[value] = values[value].name;\n      }\n    }\n\n    return null;\n  });\n\n  return parameters;\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { array, func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SearchableList.local.scss';\n\nexport const SearchableList = ({ items, children, filter, variant, visibleScroll }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const [query, setQuery] = useState('');\n  const filtered = items.filter(item => filter(item, query));\n\n  return (\n    <>\n      <div className=\"search-input-slot\">\n        <SimpleSearchInput\n          data-qa=\"users-search-input\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <div\n        className={classnames('searchable-list-slot', {\n          visibleScroll,\n          scrolled,\n          [variant]: variant\n        })}\n      >\n        <ul\n          className={classnames('list', {\n            [variant]: variant\n          })}\n          onWheel={onWheel}\n        >\n          {filtered.map((item, index, list) => (\n            <li key={index} className=\"list-item\">\n              {children(item, index, list)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nSearchableList.propTypes = {\n  items: array,\n  children: func,\n  filter: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nSearchableList.defaultProps = {\n  items: [],\n  filter: (item, query) => item === query\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport { Text, Email, Integer, Password, PhoneNumber, BooleanSelect } from '../editors/Generic';\nimport {\n  ProcessSelect,\n  AccountSelect,\n  RSAKey,\n  FQName,\n  Variadic,\n  Multiline,\n  Replvalues,\n  Uuid\n} from '../editors/Custom';\n\nfunction extractParameter({ parameter, recieved, ...others }) {\n  const { type, ...additional } = parameter.editor;\n\n  return {\n    key: parameter.name,\n    label: parameter.label || parameter.name,\n    name: parameter.field_name || parameter.name,\n    required: parameter.is_required,\n    defaultValue: parameter.deflt || parameter.value,\n    description: parameter.description,\n    ...additional,\n    ...others\n  };\n}\n\nexport const TextParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Text {...passable} />;\n};\n\nexport const PasswordParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Password {...passable} />;\n};\n\nexport const PhoneNumberParameter = props => {\n  const passable = extractParameter(props);\n\n  return <PhoneNumber {...passable} />;\n};\n\nexport const BooleanParameter = props => {\n  const passable = extractParameter(props);\n\n  return <BooleanSelect {...passable} />;\n};\n\nexport const IntegerParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Integer {...passable} />;\n};\n\nexport const EmailParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Email {...passable} />;\n};\n\nexport const ProcessParameter = props => {\n  const passable = extractParameter(props);\n\n  return <ProcessSelect {...passable} />;\n};\n\nexport const AccountParameter = props => {\n  const passable = extractParameter(props);\n\n  return <AccountSelect protocols={[]} {...passable} />;\n};\n\nexport const VariadicParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Variadic recieved={props.recieved} {...passable} />;\n};\n\nexport const ReplvaluesParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Replvalues recieved={props.recieved} {...passable} />;\n};\n\nexport const FQNameParameter = props => {\n  const passable = extractParameter(props);\n\n  return <FQName recieved={props.recieved} {...passable} />;\n};\n\nexport const RSAKeyParameter = props => {\n  const passable = extractParameter(props);\n\n  return <RSAKey {...passable} />;\n};\n\nexport const MultilineParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Multiline {...passable} />;\n};\n\nexport const UuidParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Uuid {...passable} />;\n};\n","import { createSelector } from 'reselect';\n\nexport const getQuery = createSelector(\n  state => state.invocation_viewer.query,\n  query => query\n);\n\nexport const getInvocation = createSelector(\n  state => state.invocation_viewer.invocation,\n  invocation => invocation\n);\n\nexport const getInvocationStatus = createSelector(getInvocation, invocation => invocation.status);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../../entities/actions';\nimport { entitySelectors } from '../../../entities/selectors';\n\nimport { Loader, ParameterLoader } from 'shared/components/loaders';\nimport { Center } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nexport const Ensure = connect(\n  (state, { type }) => {\n    const selector = entitySelectors[type];\n\n    return selector(state);\n  },\n  {\n    request: fetchEntity\n  }\n)(Ensurer);\n\nfunction Ensurer({ children, fresh, pipe = false, type, inlineLoader, data, status, request }) {\n  useEffect(() => {\n    if (status === 'fetching') return;\n    if (status === 'fetching') return;\n\n    if (status === 'fetched' && !fresh) return;\n\n    request(type);\n  }, []);\n\n  if (!status || status === 'not-fetched') {\n    return null;\n  }\n\n  if (status === 'fetching' && !pipe) {\n    const Loading = inlineLoader ? ParameterLoader : Loader;\n\n    return (\n      <Center>\n        <Loading>Loading {type}...</Loading>\n      </Center>\n    );\n  }\n\n  if (status === 'failed' && !pipe) {\n    return (\n      <Result type=\"fail\">\n        <Result.Text>Could not fetch {type} data!</Result.Text>\n      </Result>\n    );\n  }\n\n  if (typeof children === 'function') {\n    return <>{children({ status, data, request: () => request(type) })}</>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Ensure;\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.session;\n\nexport const authorizationSelector = createSelector(localState, state =>\n  state.get('authorization')\n);\n\nexport const currentUserSelector = createSelector(localState, state => state.get('currentUser'));\n\nexport const loginSelector = createSelector(localState, state => state.get('login'));\n\nexport const beVersionSelector = createSelector(localState, state => state.get('beVersion'));\nexport const beLicenceSelector = createSelector(localState, state => state.get('beLicence'));\nexport const beHealthSelector = createSelector(localState, state => state.get('beHealth'));\n","import { createSelector } from 'reselect';\n\nexport const ENTITY_TYPES = [\n  {\n    type: 'account',\n    title: 'CONNECTION',\n    dataEnclosure: 'accounts',\n    query: '*'\n  },\n  {\n    type: 'constant',\n    title: 'CONSTANT',\n    dataEnclosure: 'constants',\n    query: '*'\n  },\n  {\n    type: 'exception',\n    title: 'EXCEPTION',\n    dataEnclosure: 'exceptions',\n    query: '*'\n  },\n  {\n    type: 'form',\n    title: 'FORM',\n    dataEnclosure: 'forms',\n    query: '*'\n  },\n  {\n    type: 'namespace',\n    title: 'NAMESPACE',\n    query: '*',\n    dataEnclosure: 'namespaces'\n  },\n  {\n    type: 'process',\n    query: '*',\n    title: 'PROCESS',\n    dataEnclosure: 'processes'\n  },\n  {\n    type: 'prototype',\n    query: '*',\n    title: 'PROTOTYPE',\n    dataEnclosure: 'prototypes'\n  },\n  {\n    type: 'schedule',\n    title: 'SCHEDULE',\n    dataEnclosure: 'schedules',\n    query: '*'\n  },\n  {\n    type: 'type',\n    query: '*',\n    title: 'TYPE',\n    dataEnclosure: 'data_types'\n  }\n];\n\nexport const ENTITY_TYPES_FETCH = ENTITY_TYPES.concat({\n  type: 'alias'\n});\n\nconst ROOT_ENTITY = {\n  name: 'root',\n  entity: 'root',\n  description: 'Main container for all of the entities within MAS.'\n};\n\nexport const getBreadcrumbs = state => state.entities.breadcrumbs;\n\nfunction collectData(data, { type, dataEnclosure }, namespacesWithMeta) {\n  let collection = data[type]?.data?.data?.[dataEnclosure];\n\n  if (collection) {\n    const aliases = data.alias?.data?.data.aliases\n      .filter(item => item.alias_type === type)\n      .map(item => {\n        const { entity, alias, alias_type, ...props } = item;\n\n        /**\n         * Merging properties that the alias does not have,\n         * with properties the entity it aliases, has.\n         * Will avoid having to reconcile this at the usage level.\n         * And keep aliases viewable here.\n         */\n        const aliasedEntity = data[type]?.data?.data[dataEnclosure].find(e => e.name === alias);\n\n        return { ...(aliasedEntity && aliasedEntity), alias, ...props, entity: alias_type };\n      });\n\n    if (aliases) {\n      /** Concat the aliases for this collection with the collection itself */\n      collection = data[type]?.data?.data[dataEnclosure].concat(aliases);\n    }\n\n    /* filter out colllection items where appearance meta is hidden */\n\n    /** FIXME:\n     *  what about aliases ? If their aliasing root entity would have meta apearance hidden, should it as well ?\n     *  */\n    if (Array.isArray(namespacesWithMeta)) {\n      collection = collection.reduce((acc, dataItem) => {\n        const ownNamespace = namespacesWithMeta.find(ns => dataItem.name.startsWith(ns.name));\n\n        if (ownNamespace) {\n          if (ownNamespace?.meta?.appearance === 'Hidden') {\n            return acc;\n          }\n\n          return acc.concat([\n            {\n              ...dataItem,\n              meta: {\n                ...dataItem.meta,\n                ...ownNamespace.meta\n              }\n            }\n          ]);\n        }\n\n        return acc.concat(dataItem);\n      }, []);\n    }\n  }\n\n  return collection;\n}\n\nexport const entitySelectors = ENTITY_TYPES.reduce((selectors, def) => {\n  selectors[def.type] = createSelector(\n    state => state.entities.data,\n    state => state.entities.fetch_status,\n    state => namespaceWithMetaSelector(state),\n    (data, status, namespacesWithMeta) => {\n      return {\n        data: collectData(data, def, namespacesWithMeta),\n        status: status?.[def.type]\n      };\n    }\n  );\n\n  return selectors;\n}, {});\n\nexport const namespaceWithMetaSelector = createSelector(\n  state => state.entities.data,\n  data => {\n    const dataNamespaces = data.namespace?.data?.data?.namespaces;\n    if (Array.isArray(dataNamespaces)) {\n      return dataNamespaces.filter(\n        item => item.meta && item.meta.appearance && item.meta.appearance !== 'Normal'\n      );\n    }\n    return [];\n  }\n);\n\nexport const getFilteredEntities = createSelector(\n  state => state.entities.data,\n  state => state.entities.filters,\n  state => namespaceWithMetaSelector(state),\n  (data, filters, namespacesWithMeta) => {\n    const types =\n      filters.type === 'all'\n        ? ENTITY_TYPES\n        : ENTITY_TYPES.filter(type => type.type === filters.type || type.type === 'namespace');\n    return types\n      .reduce((accumulator, type) => {\n        return accumulator.concat(collectData(data, type, namespacesWithMeta));\n      }, [])\n      .filter(Boolean);\n  }\n);\n\nexport const getEntitiesAsHashMap = createSelector(\n  getFilteredEntities,\n  state => state.entities.filters,\n  (entities, filters) => {\n    let filteredEntities = entities;\n    if (filters.type !== 'all' && filters.type !== 'namespace') {\n      filteredEntities = entities.filter(item => item.entity !== 'namespace');\n    }\n    if (filters.search) {\n      filteredEntities = filteredEntities.filter(item => {\n        if (filters.type !== 'all' && filters.type !== 'namespace') {\n          const domainArray = item.name.split('.');\n          const shortName = domainArray[domainArray.length - 1];\n          return shortName.includes(filters.search);\n        }\n        return item.name.includes(filters.search);\n      });\n    }\n    return filteredEntities.reduce((accumulator, entity) => {\n      const paths = entity.name.includes('.') ? entity.name.split('.') : [];\n      paths.forEach((path, index) => {\n        const key = paths.slice(0, index).join('.');\n        if (!accumulator[key]) {\n          const findEntity = entities.find(item => item.name === key);\n          accumulator[key] = findEntity || {\n            name: key,\n            notPersisted: true\n          };\n        }\n      });\n      accumulator[entity.name] = entity;\n\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const getEntities = createSelector(\n  getBreadcrumbs,\n  getEntitiesAsHashMap,\n  (breadcrumbs, entitiesMap) => {\n    const entities = Object.values(entitiesMap);\n    const roots = Object.keys(entitiesMap)\n      .filter((entityName, index, names) => {\n        return (\n          !entityName.includes('.') &&\n          (names.find(name => name.startsWith(`${entityName}.`)) ||\n            entitiesMap[entityName].entity === 'namespace')\n        );\n      })\n      .map(key => ({\n        ...entitiesMap[key],\n        isSelected: breadcrumbs.includes(entitiesMap[key].name)\n      }));\n    const columns = breadcrumbs.map((breadcrumb, index) => {\n      return {\n        level: index,\n        path: index === 0 ? '.' : breadcrumbs.slice(0, index).join('.'),\n        rows: []\n      };\n    });\n    columns.push({\n      level: breadcrumbs.length,\n      path: `${breadcrumbs.join('.')}.`,\n      rows: []\n    });\n\n    return entities.reduce((accumulator, entity) => {\n      const path = entity.name.split('.');\n      if (accumulator.length < path.length) {\n        return accumulator;\n      }\n      const bucket = accumulator[path.length - 1];\n      if (!bucket) {\n        return accumulator;\n      }\n      if (bucket.path === '.') {\n        bucket.rows = roots;\n        return accumulator;\n      }\n\n      if (!entity.name.startsWith(bucket.path)) {\n        return accumulator;\n      }\n      const name = entity.name.replace(bucket.path, '').replace('.', '');\n      const entityLevel = entity.name.split('.').length - 1;\n      bucket.rows.push({\n        ...entity,\n        name,\n        isSelected: breadcrumbs[entityLevel] ? breadcrumbs[entityLevel] === name : false\n      });\n\n      return accumulator;\n    }, columns);\n  }\n);\n\nexport const getSelectedEntity = createSelector(\n  getEntitiesAsHashMap,\n  getBreadcrumbs,\n  (entities, breadcrumbs) => {\n    const path = breadcrumbs.join('.');\n    const entity = entities[path];\n    return entity?.notPersisted ? ROOT_ENTITY : entity;\n  }\n);\n\nexport const namespaceChildrenListSelector = createSelector(\n  getSelectedEntity,\n  getEntitiesAsHashMap,\n  (selectedEntity, entities) => {\n    const list = Object.keys(entities);\n    const namespace = `${selectedEntity.name}.`;\n\n    return list.filter(name => name.startsWith(namespace) && name !== namespace);\n  }\n);\n","export function mapUsersData(payload) {\n  return payload.data.users;\n}\n\nexport function mapLoadedUser(payload) {\n  return payload.data.users[0]; // the first returned user is the one in question\n}\n\nexport function mapSortInsensitive(payload) {\n  return payload.slice().sort(function sortInsensitive(a, b) {\n    return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n  });\n}\n","import { getOutputText } from './getOutputText';\n\nexport const copyTextToClipboard = (textToCopy) => {\n  makeCopyToClipboard(textToCopy);\n};\n\nexport const copyToClipboard = (output, invocation) => {\n  const text = getOutputText(output, invocation);\n  makeCopyToClipboard(text);\n};\n\nfunction makeCopyToClipboard(text) {\n  navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\n    if (result.state === 'granted' || result.state === 'prompt') {\n      /* write to the clipboard */\n      navigator.clipboard.writeText(text).then(\n        () => {\n          /* successful */\n          console.log('[copyTextToClipboard] Copied:', text); // eslint-disable-line\n        },\n        () => {\n          /* write failed */\n          console.warn('[copyTextToClipboard] --- unable to write to clipboard!'); // eslint-disable-line\n        }\n      );\n    } else {\n      legacyMethod(text);\n    }\n  }, legacyMethod.bind(this, text));\n}\n\nfunction legacyMethod(text) {\n  const textArea = document.createElement('textarea');\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.classList.add('copyToClipboardInput');\n  textArea.focus();\n  textArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textArea);\n  console.log('[copyTextToClipboard-legacy] Copied:', text); // eslint-disable-line\n}\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, tabs } = this.props;\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={tabs.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func,\n  tabs: array\n};\n\nNavigationTab.defaultProps = {\n  tabs: []\n};\n\nexport default NavigationTab;\n","export const getGroupDescription = (name, allGroups) => {\n  const groupDetails = allGroups.find(group => group.name === name);\n\n  return groupDetails?.description || '';\n};\n","import React from 'react';\nimport { func, string } from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './NavigationTab.local.scss';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, protocol } = this.props;\n\n    const data = [\n      { label: 'Workload', value: 'workload' },\n      TopSqlStatementsUtil.isAllowedProtocol(protocol) ? { label: 'Top SQL statements', value: 'topsql' } : false,\n      SystemExplorerFeatureUtil.isSessionsAllowed(protocol) ? { label: 'Sessions', value: 'sessions' } : false,\n      SystemExplorerFeatureUtil.isObjectsAllowed(protocol) ? { label: 'Objects', value: 'objects' } : false,\n      SystemExplorerFeatureUtil.isStorageAllowed(protocol) ? { label: 'Storage', value: 'storage' } : false\n    ].filter(Boolean);\n\n    if (protocol === 'ORACLE') {\n      data.push({ label: 'License reporting', value: 'license' });\n    }\n\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={data.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {data.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func\n};\n\nexport default NavigationTab;\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function postAccount(body) {\n  try {\n    const { data } = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function patchAccount(name, body) {\n  try {\n    const { data } = await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function deleteAccount(name) {\n  try {\n    const { data } = await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`);\n    return { result: data.result, messages: data.messages };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport function getConnection(name) {\n  return RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchConnection(name, body) {\n  return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postFile(file) {\n  return RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_ACCOUNTS, file);\n}\n","import { DbmsType } from '../../SystemExplorerFeatureUtil';\n\nconst ALLOWED_DBMS = [DbmsType.ORACLE, DbmsType.POSTGRES, DbmsType.MYSQL, DbmsType.MSSQL];\nconst ALLOWED_FOR_CHARTS = [DbmsType.ORACLE];\n\nconst PROCESS_ENDPOINT_MAP = {\n    [DbmsType.ORACLE]: 'vendita.oracle.rdbms.util.monitor.session.performance.topsql',\n    [DbmsType.POSTGRES]: 'vendita.pgsql.rdbms.session.topsql_postgres',\n    [DbmsType.MYSQL]: 'vendita.mysql.rdbms.session.topsql_mysql',\n    [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.tuning.top50longrunningsql',\n};\n\nconst DBMS_PROPERTY_NAME_MAP = {\n    [DbmsType.ORACLE]: 'dbms',\n    [DbmsType.POSTGRES]: 'dbms',\n    [DbmsType.MYSQL]: 'dbms',\n    [DbmsType.MSSQL]: 'dbconn',\n};\n\nexport class TopSqlStatementsUtil {\n  static isAllowedProtocol(dbms) {\n    return ALLOWED_DBMS.includes(dbms);\n  }\n\n  static isChartSupported(dbms) {\n    return ALLOWED_FOR_CHARTS.includes(dbms);\n  }\n\n  static getEndpoint(dbms) {\n    return PROCESS_ENDPOINT_MAP[dbms] || '';\n  }\n\n  static getDbmsPropertyName(dbms) {\n    return DBMS_PROPERTY_NAME_MAP[dbms] || '';\n  }\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiSourceRepository,\n  mdiFolderHome,\n  mdiLanConnect,\n  mdiHexagonMultipleOutline,\n  mdiCubeOutline\n} from '@mdi/js';\n\nimport extractDefault from './extractDefault';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'float',\n  'integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter',\n  'string',\n  'unsigned_float',\n  'unsigned_integer'\n];\n\nexport default (parameter, dataTypes, prototypes) => {\n  parameter = { ...parameter };\n  parameter.position = parameter.meta.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    parameter.is_supported = false;\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.value = 'TEXT';\n  }\n\n  parameter.label = getLabel(parameter.name);\n  parameter.icon = getIcon(parameter.name);\n\n  return parameter;\n};\n\nconst getLabel = name => {\n  return labels[name] || name;\n};\n\nconst getIcon = name => {\n  return icons[name] || null;\n};\n\nconst labels = {\n  target_working_dir: 'Working directory',\n  target_shell: 'Target server SSH',\n  repo_shell: 'Repo server SSH',\n  repo_working_dir: 'Repo directory',\n  form: 'Database form',\n  dbms: 'Target DBMS',\n  vsphere_account: 'vSphere account',\n  vcenterservername: 'vCenter server name',\n  partitioning_methods: 'Virtualization Partitioning Technologies'\n};\n\nconst icons = {\n  target_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  target_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiSourceRepository} />\n    </SvgIcon>\n  ),\n  dbms: (\n    <SvgIcon>\n      <Icon path={mdiHexagonMultipleOutline} />\n    </SvgIcon>\n  ),\n  form: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  vsphere_account: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  ),\n  vcenterservername: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  )\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Field } from 'formik';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiLanConnect } from '@mdi/js';\n\nimport './TextField.local.scss';\n\nexport const TextField = ({ parameter, disabled }) => {\n  const validate = value => {\n    if (parameter.is_required) {\n      if (!value) {\n        return 'This Field is Required';\n      }\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <MUITextField\n            className={disabled ? 'disabled' : ''}\n            {...field}\n            variant=\"outlined\"\n            type=\"text\"\n            fullWidth\n            disabled={disabled}\n            error={meta.error && meta.touched}\n            helperText={meta.touched && meta.error ? meta.error : undefined}\n            label={parameter.label}\n            placeholder={parameter.label}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {parameter.icon ? (\n                    parameter.icon\n                  ) : (\n                    <SvgIcon>\n                      <Icon path={mdiLanConnect} />\n                    </SvgIcon>\n                  )}\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <LightTooltip placement=\"bottom-end\" title={parameter.description}>\n                  <InputAdornment position=\"end\">\n                    <SvgIcon>\n                      <Icon path={mdiHelpCircleOutline} />\n                    </SvgIcon>\n                  </InputAdornment>\n                </LightTooltip>\n              )\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Field } from 'formik';\nimport { array, object } from 'prop-types';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { mdiLanConnect } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport { Dropdown } from 'shared/components';\n\nimport './DropdownField.local.scss';\n\nfunction filterDbmsByShell(options, formValues) {\n  options = options || [];\n  if (!formValues || !formValues.target_shell) {\n    return options;\n  }\n\n  const shellAccount = formValues.target_shell;\n  return options.filter(dbmsAccount => dbmsAccount.address === shellAccount.address);\n}\n\nconst ADDITIONAL_OPTIONS_FILTERS = {\n  dbms: filterDbmsByShell,\n};\n\nexport const DropdownField = ({\n  parameter,\n  datatypes,\n  rawAccounts,\n  forms,\n  prototypes,\n  disabled,\n  currentFormValues\n}) => {\n  const dataType = datatypes.find(datatype => datatype.name === parameter.data_type);\n  let protocols = null;\n\n  if (dataType) {\n    if (\n      dataType.name.startsWith('mas0000.sys.account.conn.') ||\n      dataType.name === 'mas0000.sys.account.vsphere'\n    ) {\n      if (Array.isArray(dataType.protocol) && dataType.protocol.length > 0) {\n        protocols = [];\n        dataType.protocol.forEach(protocol => {\n          if (protocol === 'DBMS') {\n            // This is quick and dirty until we have a configuration-driven solution\n            // in the UI.\n            protocols = [...protocols, 'MSSQL', 'MYSQL', 'ORACLE', 'PGSQL'];\n          } else {\n            protocols.push(protocol);\n          }\n        });\n\n        if (currentFormValues && ADDITIONAL_OPTIONS_FILTERS[parameter.name]) {\n          const additionalFilter = ADDITIONAL_OPTIONS_FILTERS[parameter.name];\n          rawAccounts = additionalFilter(rawAccounts, currentFormValues);\n        }\n\n        const options = rawAccounts\n          .map(account => ({ name: account.name, value: account }))\n          .filter(option => protocols === null || protocols.includes(option.value.protocol));\n\n        const validate = value => {\n          if (parameter.is_required) {\n            if (!value) {\n              return 'This Field is Required';\n            }\n          }\n        };\n\n        return (\n          <Field name={parameter.name} validate={validate}>\n            {({ field, meta }) => {\n              return (\n                <Dropdown\n                  onSelect={(index, opt) => {\n                    field.onChange({ target: { name: parameter.name, value: opt.value } });\n                  }}\n                  disabled={disabled}\n                  target={(meta2, actions) => (\n                    <MUITextField\n                      className={disabled ? 'disabled' : ''}\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      variant=\"outlined\"\n                      fullWidth\n                      label={parameter.label}\n                      placeholder={parameter.label}\n                      {...field}\n                      value={field.value ? field.value.name : ''}\n                      onChange={() => {}}\n                      onClick={actions.toggle}\n                      ref={meta2.ref}\n                      error={meta.error && meta.touched}\n                      helperText={meta.touched && meta.error ? meta.error : undefined}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {parameter.icon ? (\n                              parameter.icon\n                            ) : (\n                              <SvgIcon>\n                                <Icon path={mdiLanConnect} />\n                              </SvgIcon>\n                            )}\n                          </InputAdornment>\n                        ),\n\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <ArrowDropDownIcon />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                  )}\n                  items={options}\n                />\n              );\n            }}\n          </Field>\n        );\n      }\n    }\n  } else {\n    const prototype = prototypes.find(p => p.name === parameter.data_type);\n\n    if (prototype) {\n      const options = forms\n        .filter(form => form.prototype === prototype.name)\n        .map(form => ({ name: form.name, value: form.name }));\n\n      const validate = value => {\n        if (parameter.is_required) {\n          if (!value) {\n            return 'This Field is Required';\n          }\n        }\n      };\n\n      return (\n        <Field name={parameter.name} validate={validate}>\n          {({ field, meta }) => {\n            return (\n              <Dropdown\n                onSelect={(index, opt) => {\n                  field.onChange({ target: { name: parameter.name, value: opt.value } });\n                }}\n                disabled={disabled}\n                target={(meta2, actions) => (\n                  <MUITextField\n                    className={disabled ? 'disabled' : ''}\n                    type=\"text\"\n                    readOnly\n                    disabled\n                    variant=\"outlined\"\n                    fullWidth\n                    label={parameter.label}\n                    placeholder={parameter.label}\n                    {...field}\n                    value={field.value ? field.value : ''}\n                    onChange={() => {}}\n                    onClick={actions.toggle}\n                    ref={meta2.ref}\n                    error={meta.error && meta.touched}\n                    helperText={meta.touched && meta.error ? meta.error : undefined}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          {parameter.icon ? (\n                            parameter.icon\n                          ) : (\n                            <SvgIcon>\n                              <Icon path={mdiLanConnect} />\n                            </SvgIcon>\n                          )}\n                        </InputAdornment>\n                      ),\n\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <ArrowDropDownIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                )}\n                items={options}\n              />\n            );\n          }}\n        </Field>\n      );\n    }\n  }\n\n  return <div>Currently not supported input</div>;\n};\n\nDropdownField.propTypes = {\n  parameter: object,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  prototypes: array\n};\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport { ListOutput } from '../ListOutput/ListOutput';\nimport { sendToEmail } from '../../utils/sendToEmail';\nimport { copyToClipboard } from '../../utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './OutputModal.local.scss';\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const OutputModal = ({\n  open,\n  actions,\n  output,\n  invocation,\n  modalDetails,\n  processName,\n  messages\n}) => {\n  let content;\n\n  const [message, setMessage] = useState(messages[0]);\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  let interval;\n\n  useEffect(() => {\n    if (messages && messages.length > 1) {\n      if (!open) {\n        clearInterval(interval);\n      } else {\n        let index = 1;\n        interval = setInterval(() => {\n          setMessage(messages[index]);\n          if (index + 1 < messages.length) {\n            index += 1;\n          }\n        }, 4000);\n\n        return () => clearInterval(interval);\n      }\n    }\n  }, [open]);\n\n  if (!output && invocation.status !== 'SUCCEEDED' && invocation.status !== 'FAILED') {\n    content = (\n      <>\n        <Center>\n          <Loader>{message}</Loader>\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (invocation.status === 'FAILED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput type=\"fail\" output={output} errors={invocation.errors} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'SUCCEEDED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput output={output} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n        <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '75vh',\n          minHeight: '75vh',\n          width: '75vh',\n          height: '75vh'\n        }}\n      >\n        <ModalHeader\n          title={modalDetails.title}\n          desc={invocation.status === 'FAILED' ? 'An error orccured!' : 'Output'}\n          avatar={\n            <Avatar\n              className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n            >\n              {modalDetails.icon}\n            </Avatar>\n          }\n        />\n        {content}\n      </Paper>\n    </Modal>\n  );\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postSchedule(body) {\n  return RestClient.post('schedule', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function getSchedule(name) {\n  return RestClient.get(`schedule/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchSchedule(name, body) {\n  return RestClient.patch(`schedule/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","export function mapAccountsTree(data) {\n  // data is split into 3 levels,\n  // first level is defined by `protocol`\n  // we find root nodes by matching protocols.\n  const roots = data.reduce(splitIntoRootsByProtocol, []);\n  roots.forEach(root => {\n    // define the servers map\n    // all server and database objects for this protocol\n    root.servers = root.nodes.reduce(splitIntoRootsByAddress, {});\n    const servers = Object.keys(root.servers);\n    servers.forEach(name => {\n      const server = root.servers[name];\n      server.databases = server.nodes.reduce(splitIntoRootsByDatabase, {});\n    });\n  });\n  return roots;\n}\nexport function splitIntoRootsByProtocol(acc, item) {\n  const protocolBlacklist = ['SSH'];\n  const { protocol } = item;\n  if (protocolBlacklist.includes(protocol)) {\n    return acc;\n  }\n  if (!(item.special && item.special.database)) {\n    return acc;\n  }\n  const root = acc.find(r => r.name === protocol);\n  if (root) {\n    root.nodes = [...root.nodes, item];\n  } else {\n    acc.push({\n      name: item.protocol,\n      path: item.protocol,\n      type: 'dbms',\n      nodes: [item],\n      servers: []\n    });\n  }\n  return acc;\n}\nfunction splitIntoRootsByAddress(serversMap, item) {\n  const { address } = item;\n  const existingEntry = serversMap[address];\n  if (existingEntry) {\n    existingEntry.nodes = [...existingEntry.nodes, item];\n  } else {\n    serversMap[address] = {\n      name: item.address,\n      path: `${item.protocol}--${item.address}`,\n      type: 'server',\n      nodes: [item]\n    };\n  }\n  return serversMap;\n}\nfunction splitIntoRootsByDatabase(databaseMap, item) {\n  const {\n    special: { database: name }\n  } = item;\n  databaseMap[name] = {\n    name,\n    path: `${item.protocol}--${item.address}--${name}`,\n    node: item\n  };\n  return databaseMap;\n}\n\n/**\n *\n * @param {*} content // /account call data\n *\n * This will resturcture the list of accounts into a list of dbms entries with servers and databases.\n */\n\nexport function mapAccountsNewStructure(content, protocols) {\n  const accounts = { raw: content };\n\n  let protocolsArr = protocols.map(p => p.name);\n\n  if (protocolsArr.length === 0) {\n    protocolsArr = ['CREDENTIAL', 'ILOM', 'SSH'];\n  }\n\n  accounts.databases = content.filter(account => account.special.database);\n  accounts.dbms = [];\n\n  /* eslint-disable */\n  accounts.databases.forEach(function resolver(entry) {\n    /**\n     * Add a path def to the database entry\n     * path descriptions are made here, to mimic somewhat the old mapping.\n     * Keep other properties.\n     */\n    const database = {\n      ...entry,\n      path: `${entry.protocol}--${entry.address}--${entry.special.database}`\n    };\n\n    let dbms = accounts.dbms.find(dbms => dbms.name === database.protocol);\n\n    const dbServer = accounts.raw.find(\n      account => protocolsArr.includes(account.protocol) && account.address === database.address\n    );\n\n    let server;\n\n    // a server entry exists\n    if (dbServer) {\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        ...dbServer,\n        databases: [database]\n      };\n    } else {\n      // db does not have an associated server connection so create a 'placeholder' for server\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        address: database.address,\n        databases: [database]\n      };\n    }\n\n    if (!dbms) {\n      /**\n       * Add a new dbms entry\n       *\n       * path descriptions are made here, to mimic somewhat the old mapping.\n       */\n      accounts.dbms.push({\n        name: database.protocol,\n        protocol: database.protocol,\n        path: database.protocol,\n        databases: [database],\n        servers: [server]\n      });\n\n      return;\n    }\n\n    /**\n     * DBMS exists. Update it\n     */\n    dbms.databases.push(database);\n\n    // find server entr\n    let dbmsServerEntry = dbms.servers.find(sv => sv.address === database.address);\n\n    if (!dbmsServerEntry) {\n      dbms.servers.push({ ...server, databases: [database] });\n    } else {\n      if (dbmsServerEntry.databases) {\n        dbmsServerEntry.databases.push(database);\n      } else {\n        dbmsServerEntry.databases = [database];\n      }\n    }\n  }, accounts);\n\n  // find all existing servers\n  const allServers = content.filter(entry => protocolsArr.includes(entry.protocol));\n\n  // check if servers have a database\n  // if they don't add them in a DBMS called \"OTHER\".\n  // will be removed from there as soon as they get a database\n  allServers.forEach(server => {\n    const exists = accounts.databases.find(db => db.address === server.address);\n\n    if (!exists) {\n      const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n\n      if (otherIndex > -1) {\n        accounts.dbms[otherIndex].servers.push({\n          path: `OTHER--${server.address}`,\n          ...server,\n          databases: []\n        });\n      } else {\n        accounts.dbms.push({\n          name: 'OTHER',\n          path: 'OTHER',\n          protocol: 'OTHER',\n          servers: [{ path: `OTHER--${server.address}`, ...server, databases: [] }]\n        });\n      }\n    }\n  });\n\n  const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n  if (otherIndex > -1 && accounts.dbms[otherIndex].servers.length === 0) {\n    accounts.dbms.splice(otherIndex, 1);\n  }\n  return accounts;\n}\n\nexport function mapProtocols(protocols) {\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return allowedProtocols;\n}\n\nexport function mapUpdateDBStatus(existingDb, databases, isLoading) {\n  let statuses = [...existingDb];\n\n  databases.forEach(function(db) {\n    const index = existingDb.findIndex(d => d.name === db.name);\n    if (index > -1) {\n      statuses[index] = { ...db, loading: isLoading };\n    } else {\n      statuses = [...statuses, { ...db, loading: isLoading }];\n    }\n  });\n\n  return statuses;\n}\n\nexport function mapLicenseReport(reportData) {\n  const result = (reportData || []).reduce((acc, currentItem) => {\n    if (currentItem.DETECTED_USAGES > 0) {\n      acc.USED[currentItem.NAME] = _mapUsedLicense(currentItem);\n    } else {\n      acc.UNUSED[currentItem.NAME] = currentItem;\n    }\n    acc.FEATURES.push(currentItem);\n    return acc;\n  }, { UNUSED: {}, USED: {}, FEATURES: [] });\n  console.log(result);\n  return result;\n}\n\nfunction _mapUsedLicense(license) {\n  return {\n    USAGES: license.DETECTED_USAGES,\n    VERSION: license.VERSION,\n    LAST_USE: license.LAST_USAGE_DATE,\n    FIRST_USE: license.FIRST_USAGE_DATE\n  }\n}\n","export const SystemExplorerViewMode = {\n  TILES: 'TILES',\n  TABLE: 'TABLE',\n};\n","/**\n * This file will be updated with any new module (adding the module reducer)\n */\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { sessionEffects, sessionReducer } from 'session';\nimport { dashboardReducer } from 'dashboard';\nimport { sharedEffects, sharedReducer } from 'shared/store/';\nimport { createReducer } from 'shared/lib/redux-utils';\n\nimport usersManagerReducer from 'users-manager/store/reducers';\nimport groupsReducer from 'users-manager/groups/store/reducer';\nimport explorerReducer from 'explorer/store/reducers';\nimport executiveDashboardReducer from 'executive-dashboard/store/reducers';\nimport * as entities from 'entities/reducer';\nimport * as daemon from 'dashboard/store/reducers/daemon';\n\nimport * as invocations from 'job-process/store/reducer';\n\nimport { api } from './middlewares';\nimport { reducer as core } from './reducers';\n\nconst saga = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n  whitelist: ['entities']\n  /*\n  //Well I just whitelist entities,\n  since it's the one that has all expensive network requests\n  */\n};\n\nexport const configStore = () => {\n  const appReducer = persistReducer(persistConfig, combineReducers({\n    core,\n    session: sessionReducer,\n    dashboard: dashboardReducer,\n    shared: sharedReducer,\n    usersManager: usersManagerReducer,\n    groups: groupsReducer,\n    entities: createReducer(entities),\n    explorer: explorerReducer,\n    invocation_viewer: createReducer(invocations),\n    executiveDashboard: executiveDashboardReducer,\n    daemon: createReducer(daemon)\n  }));\n\n  const reducer = (state, action) => {\n    // clear redux store on logout action\n    if (action.type === '[session] LOGOUT__SUCCESS') {\n      const { routing } = state;\n      state = { routing };\n      window.location.reload();\n    }\n    return appReducer(state, action);\n  };\n\n  const effects = [...sessionEffects, ...sharedEffects];\n\n  const store = createStore(reducer, composeWithDevTools(applyMiddleware(saga, thunk, api)));\n\n  effects.forEach(effect => {\n    saga.run(effect);\n  });\n\n  return store;\n};\n\nexport default configStore();\n","import React, { createContext, useContext } from 'react';\n\nconst Context = createContext();\n\nexport default function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nSwitch.Case = Case;\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './simple-search-input.local.scss';\n\nexport const SimpleSearchInput = ({ value, onChange, ...props }) => {\n  return (\n    <div className=\"search-input\">\n      <i className=\"search-icon-slot\">\n        <SearchIcon fontSize=\"default\" />\n      </i>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"search-input-control\"\n        placeholder=\"Search\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nSimpleSearchInput.propTypes = {\n  value: string,\n  onChange: func\n};\n\nexport default SimpleSearchInput;\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchProtocols() {\n  try {\n    const { data } = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n    return { result: data.result, protocols: data.data.protocols };\n  } catch (e) {\n    return { result: 'fail', protocols: [] };\n  }\n}\n","import React from 'react';\nimport { Switch } from 'shared/components';\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { useFormikContext } from 'formik';\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { chunk } from 'lodash';\n\n/** accepts recived parameters for invocations that are already scheduled */\nexport const ProcessParameters = ({ recieved = {}, editable }) => {\n  const { values } = useFormikContext();\n\n  /**\n   * Returns a parameter list from a given list of parameters, and a Process name\n   * This could be turned into a connected component that can take the processes from entities for itself.\n   * */\n  function selectParametersForProcess(processName, processes) {\n    const process = processes.find(item => item.name === processName);\n\n    if (process) {\n      return process.parameters.map(p => ({ ...p, value: recieved[p.name], disabled: !editable }));\n    }\n    return [];\n  }\n\n  function currentValue(allValues, parameter) {\n    if (allValues[parameter.name] !== undefined) {\n      return allValues[parameter.name];\n    }\n\n    if (allValues?.parameters && allValues?.parameters[parameter.name] !== undefined) {\n      return allValues?.parameters[parameter.name];\n    }\n\n    return undefined;\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Parameters</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Switch value={!!values.process}>\n          <Switch.Case value={false}>\n            <Column xs={12}>\n              <p>Select a process to edit parameters</p>\n            </Column>\n          </Switch.Case>\n          <Switch.Case value>\n            <Ensure type=\"form\">\n              {({ data: forms }) => (\n                <Ensure type=\"type\">\n                  {({ data: datatypes }) => (\n                    <Ensure type=\"prototype\">\n                      {({ data: prototypes }) => (\n                        <Ensure type=\"process\">\n                          {({ data }) => {\n                            const parameters = selectParametersForProcess(values.process, data);\n\n                            const normalized = parameters.map(parameter => {\n                              return normalize(parameter, datatypes, prototypes, forms);\n                            });\n\n                            /*  << +- 1 of '/' to toggle\n                            const notSupported = false;\n                            /* /\n\n                            // In old app, if at least one normalized parameter exists that is not supported,\n                            // the whole process is disregarded.\n\n                            const notSupported = normalized.some(p => !p.is_supported);\n                            // */\n\n                            const filtered = normalized\n                              .filter(p => p.editor.type !== 'hidden')\n                              .sort((a, b) => a.position - b.position); // sort parameters based on the meta.position\n\n                            // if (notSupported || filtered.length === 0) {\n                            if (filtered.length === 0) {\n                              return (\n                                <Row>\n                                  <Column>\n                                    <p>\n                                      This process contains unsuported parameters with no defaults,\n                                      and cannot be run from the web interface.\n                                    </p>\n                                  </Column>\n                                </Row>\n                              );\n                            }\n\n                            const chunks = chunk(filtered, 2);\n\n                            return chunks.map((params, index) => (\n                              <Row key={index} spacing={3}>\n                                {params.map(parameter => (\n                                  <Column key={parameter.name} xs={6}>\n                                    <Parameter\n                                      normalized={parameter}\n                                      value={currentValue(values, parameter)}\n                                      disabled={!editable}\n                                      recieved={recieved}\n                                    />\n                                  </Column>\n                                ))}\n                              </Row>\n                            ));\n                          }}\n                        </Ensure>\n                      )}\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          </Switch.Case>\n        </Switch>\n      </Section.Content>\n    </Section>\n  );\n};\n","import extractDefault from './extractDefault';\n\nimport { sortBy } from 'lodash';\n\nimport check from '../editors/field-level-validations';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'string',\n  'integer',\n  'float',\n  'uuid',\n  'unsigned_float',\n  'unsigned_integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter'\n];\n\nexport function space_begone(name) {\n  return name.replace(/\\s/g, '___');\n}\n\nexport function space_summon(name) {\n  return name.replace(/___/g, ' ');\n}\n\nexport default function normalize(param, dataTypes, prototypes, forms) {\n  const parameter = { ...param };\n\n  defaults(parameter, dataTypes, prototypes, forms);\n\n  parameter.editor = defineEditor(parameter, dataTypes, prototypes, forms);\n\n  parameter.field_name = space_begone(parameter.name);\n\n  maybeDisabled(parameter);\n\n  return parameter;\n}\n\nfunction maybeDisabled(parameter) {\n  const { appearance } = parameter.meta;\n\n  if (appearance === 'Grayed' && parameter.editor) {\n    parameter.editor.disabled = true;\n  }\n}\n\nfunction defaults(parameter, dataTypes, prototypes) {\n  parameter.position = parameter.meta?.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n\n  // hardcode stuff for replvalues params\n  if (parameter.data_type === 'optional_dict' && parameter.name === 'replvalues') {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n  } else if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    /**\n     * TODO: this was done to help exclude parameters like, any\n     * Or other stuff that cannot be parsed correctly\n     *\n     * Will remove them for now.\n     * Any types mostly are multiline input data, so we'll default them to that.\n     */\n    parameter.is_supported = false;\n\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          /**\n           * Allow support for all types of parameters, defaulting to a Text multiline.\n           */\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n\n          parameter.editor = {\n            type: 'string',\n            multiline: true,\n            deflt: ''\n          };\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.deflt = 'TEXT';\n  }\n\n  // hardcode default value for oformat parameter to \"TEXT\"\n  // was decided to be done on the UI because for the BE alot of processess had to be manually changed\n  // and at the moment we are pressed on time\n  if (parameter.name === 'oformat') {\n    parameter.deflt = parameter.value ? parameter.value : 'TEXT';\n  }\n}\n\nfunction parseProtocols(protocols) {\n  if (!protocols) {\n    return [];\n  }\n\n  if (!Array.isArray(protocols)) {\n    return [protocols];\n  }\n\n  return protocols.reduce((bucket, protocol) => {\n    // quick and dirty (as he said)\n    if (protocol === 'DBMS') {\n      bucket.push('MSSQL', 'MYSQL', 'ORACLE', 'PGSQL');\n    } else {\n      bucket.push(protocol);\n    }\n\n    return bucket;\n  }, []);\n}\n\nfunction defineEditor(parameter, dataTypes, prototypes, forms) {\n  if (!parameter.is_supported) {\n    return { type: 'hidden', disabled: true, value: '' };\n    // return { type: 'text', disabled: true, value: '' };\n  }\n\n  const { meta } = parameter;\n  const { editor: metaEditor, appearance } = meta;\n\n  if (appearance === 'Hidden') {\n    return { type: 'hidden' };\n  }\n\n  if (metaEditor === 'Hidden') {\n    return { type: 'text', disabled: true };\n  }\n\n  const prototype = prototypes.find(proto => proto.name === parameter.data_type);\n\n  if (prototype) {\n    const options = forms\n      .filter(form => form.prototype === prototype.name)\n      .map(form => ({ label: form.name, value: form.name }));\n    return {\n      type: 'select',\n      options\n    };\n  }\n\n  const dataType = dataTypes.find(type => type.name === parameter.data_type);\n\n  if (!dataType) {\n    return { type: 'text', disabled: true, readOnly: true };\n  }\n\n  if (dataType.enumerations !== null && dataType.enumerations.length > 0) {\n    const enumerations = sortBy(dataType.enumerations, 'weight');\n    const options = enumerations.map(({ label }) => ({ label, value: label }));\n\n    return { type: 'select', options };\n  }\n\n  if (\n    dataType.name.startsWith('mas0000.sys.account.conn.') ||\n    dataType.name === 'mas0000.sys.account.vsphere'\n  ) {\n    return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n  }\n\n  switch (dataType.name) {\n    case 'ename':\n      switch (metaEditor) {\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'fqname' };\n      }\n    case 'string':\n      switch (metaEditor) {\n        case 'password':\n          return { type: 'password' };\n        case 'fqname':\n        case 'ename':\n          return { type: 'fqname' };\n        case 'multiline':\n          // return { type: 'text', multiline: true };\n          return { type: 'multiline' };\n        case 'key':\n          return { type: 'rsa', multiline: true };\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'text' };\n      }\n    case 'boolean':\n      return { type: 'boolean' };\n    case 'integer':\n      return { type: 'number' };\n    case 'float':\n      return { type: 'number', validate: [check.signed_float] };\n    case 'uuid':\n      return { type: 'uuid' };\n    case 'unsigned_float':\n      return { type: 'number', validate: [check.unsigned_float] };\n    case 'unsigned_integer':\n      return { type: 'number', validate: [check.unsigned_int] };\n    case 'mas0000.os.exec.system_user':\n      return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n    case 'mas0000.sys.email_address':\n      return { type: 'email' };\n    case 'mas0000.sys.phone_number':\n      return { type: 'phone' };\n    case 'mas0000.sys.process.process':\n      return { type: 'process' };\n    case 'mas0000.sys.process.variadic_parameter':\n      return { type: 'variadic_parameter' /** needsSelectedProcessName */ };\n    case 'optional_dict':\n      // hardcord for replvalues\n      if (parameter.name === 'replvalues') {\n        return { type: 'replvalues' };\n      }\n      return { type: 'text', multiline: true };\n    default:\n      return { type: 'text', multiline: true };\n  }\n\n  // return { type: 'hidden' };\n}\n","import React from 'react';\nimport Groups from '../../components/notification-groups/notification-groups';\nimport Users from '../../components/notification-users/notification-users';\nimport Events from '../../components/notification-events/notification-events';\nimport NotificationList from '../../components/notification-list/notification-list';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport { Button } from 'shared/components/controls';\n\nimport classnames from 'classnames';\n\nimport './notifications.scss';\nimport { RestClient } from 'shared/lib/rest';\n\nexport class Notifications extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { recievedData } = props;\n\n    const startFullLog = [1, 3, 5, 7];\n    const completionFullLog = [2, 3, 6, 7];\n    const abnormalFullLog = [4, 6, 7];\n\n    this.state = {\n      groupsData: [],\n      usersData: [],\n      jobStart: {\n        notice: false,\n        fullLog: startFullLog.includes(recievedData.events)\n      },\n      jobCompletion: {\n        notice: false,\n        fullLog: completionFullLog.includes(recievedData.events)\n      },\n      abnormalEvent: {\n        notice: false,\n        fullLog: abnormalFullLog.includes(recievedData.events)\n      },\n      isEditing: false\n    };\n  }\n\n  async componentDidMount() {\n    const { recievedData = { users: [] } } = this.props;\n\n    RestClient.get('/group', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.groups) {\n        this.setState({\n          groupsData: res.data.data.groups.map(item => {\n            return { data: item, selected: false, displayIcons: false };\n          })\n        });\n      }\n    });\n    RestClient.get('/user', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.users) {\n        this.setState({\n          usersData: res.data.data.users.map(item => {\n            return {\n              data: item,\n              selected: recievedData.users.includes(item.name),\n              display: false\n            };\n          })\n        });\n      }\n    });\n  }\n\n  render() {\n    const { usersData, groupsData, jobStart, jobCompletion, abnormalEvent, isEditing } = this.state;\n    const selectedGroup = this.getSelectedGroup();\n    const areUsersSelected = usersData.find(item => item.selected);\n    const isClearActionAvailable = this.checkIfAllUsersSelectedCurrentGroup();\n    return (\n      <div\n        className={classnames('monitor-and-notifications', {\n          disabled: this.props.disabled\n        })}\n      >\n        {isEditing ? (\n          <div className=\"notifications-editor\">\n            <Groups onSelect={this.onSelectGroup} groups={groupsData} />\n            <Users\n              onSelect={this.onSelectUser}\n              onSelectUserAction={this.onSelectUserAction}\n              isClearActionAvailable={isClearActionAvailable}\n              users={usersData}\n              isGroupSelected={!!selectedGroup}\n              eventTypeIcons={this.getEventTypeIcons()}\n            />\n            <div className=\"right-side-container\">\n              <Events\n                jobStart={jobStart}\n                jobCompletion={jobCompletion}\n                abnormalEvent={abnormalEvent}\n                onSelect={this.onSelectEventType}\n                areUsersSelected={areUsersSelected}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  this.props.onApply(mappedState(this.state));\n                  this.toggleApplyButton();\n                }}\n              >\n                Apply\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <NotificationList\n            users={usersData}\n            eventTypeIcons={this.getEventTypeIcons()}\n            toggleApplyButton={this.toggleApplyButton}\n            disabled={this.props.disabled}\n          />\n        )}\n      </div>\n    );\n  }\n\n  getEventTypeIcons = () => {\n    const { jobStart, jobCompletion, abnormalEvent } = this.state;\n    const icons = [];\n    if (jobStart.notice || jobStart.fullLog) {\n      icons.push(<PlayCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (jobCompletion.notice || jobCompletion.fullLog) {\n      icons.push(<CheckCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (abnormalEvent.notice || abnormalEvent.fullLog) {\n      icons.push(<ErrorOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    return icons;\n  };\n\n  toggleApplyButton = () => {\n    this.setState(state => ({ isEditing: !state.isEditing }));\n  };\n\n  checkIfAllUsersSelectedCurrentGroup = () => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      return this.state.usersData\n        .filter(item => selectedGroup.data.users.indexOf(item.data.name) !== -1)\n        .every(item => item.selected);\n    }\n  };\n\n  onSelectGroup = group => {\n    this.setState(state => ({\n      groupsData: state.groupsData.map(item => ({\n        ...item,\n        selected: group.data.name === item.data.name\n      })),\n      usersData: state.usersData.map(item => ({\n        ...item,\n        display: group.data.users.indexOf(item.data.name) !== -1\n      }))\n    }));\n  };\n\n  onSelectUser = user => {\n    /* eslint-disable react/no-access-state-in-setstate */\n    const usersData = this.state.usersData.map(item => {\n      if (item.data.name === user.data.name) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    this.setState({ usersData, groupsData: this.setFlagGroupsIfContainSelectedUser(usersData) });\n  };\n\n  onSelectUserAction = shouldClear => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      const usersData = this.state.usersData.map(item => {\n        if (selectedGroup.data.users.indexOf(item.data.name) !== -1) {\n          return { ...item, selected: !shouldClear };\n        }\n        return item;\n      });\n      this.setState({\n        usersData,\n        groupsData: this.setFlagGroupsIfContainSelectedUser(usersData)\n      });\n    }\n  };\n\n  setFlagGroupsIfContainSelectedUser = usersData => {\n    return this.state.groupsData.map(group => ({\n      ...group,\n      displayIcons: !!usersData.find(user => {\n        return user.selected && user.data.member_of.indexOf(group.data.name) !== -1;\n      })\n    }));\n  };\n\n  onSelectEventType = (type, key) => {\n    this.setState(state => ({ [type]: { ...state[type], [key]: !state[type][key] } }));\n  };\n\n  getSelectedGroup() {\n    return this.state.groupsData.find(item => item.selected);\n  }\n}\n\nexport default Notifications;\n\n/**\n * State mapper for backend request.\n *\n * events is a composite number,\n *\n * notice unsuported for now\n * groups are redundant now that the ui preselects all users in a group.\n */\n/* eslint-disable no-unused-vars */\nfunction mappedState({ groupsData, usersData, jobStart, jobCompletion, abnormalEvent }) {\n  const users = usersData.filter(user => user.selected).map(user => user.data.name);\n\n  let events = 0;\n\n  if (jobStart.fullLog) {\n    events += 1;\n  }\n\n  if (jobCompletion.fullLog) {\n    events += 2;\n  }\n\n  if (abnormalEvent.fullLog) {\n    events += 4;\n  }\n\n  return { users, events };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getProcess(name) {\n  return RestClient.get(`/process/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchProcess(name, body) {\n  return RestClient.patch(`/process/${name}`, body);\n}\n","import { CONSTANTS } from 'config';\n\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  DESELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\n\nexport function loadExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function deselectAllThunk() {\n  return dispatch => {\n    dispatch(creators.action(DESELECT_ALL));\n\n    return 'done';\n  };\n}\n\nexport function selectAllThunk() {\n  return function selectAll(dispatch, getState) {\n    const { rawEntries } = getState().executiveDashboard;\n\n    dispatch(creators.action(SELECT_ALL, rawEntries));\n\n    return 'done';\n  };\n}\n\nexport function toggleServerThunk(server) {\n  return function toggleServer(dispatch, getState) {\n    const { allServers } = getState().executiveDashboard;\n    let { selectedServers } = getState().executiveDashboard;\n\n    const svIndex = allServers.findIndex(sv => sv.name === server.name);\n\n    if (selectedServers.find(sv => sv.name === server.name)) {\n      selectedServers = selectedServers.filter(sv => sv.name !== server.name);\n    } else {\n      selectedServers = [...selectedServers, allServers[svIndex]];\n    }\n\n    selectedServers.sort((a, b) => a.nrCores - b.nrCores);\n\n    dispatch(creators.action(TOGGLE_SERVER, selectedServers));\n    return 'done';\n  };\n}\n\nexport function loadVirtualExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.VIRTUAL_EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n","export const DISPLAY_FORMAT = 'L';\nexport const ISO_FORMAT = 'YYYY-MM-DD';\nexport const ISO_MONTH_FORMAT = 'YYYY-MM'; // TODO delete this line of dead code on next breaking change\n\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const VERTICAL_ORIENTATION = 'vertical';\nexport const VERTICAL_SCROLLABLE = 'verticalScrollable';\n\nexport const NAV_POSITION_BOTTOM = 'navPositionBottom';\nexport const NAV_POSITION_TOP = 'navPositionTop';\n\nexport const ICON_BEFORE_POSITION = 'before';\nexport const ICON_AFTER_POSITION = 'after';\n\nexport const INFO_POSITION_TOP = 'top';\nexport const INFO_POSITION_BOTTOM = 'bottom';\nexport const INFO_POSITION_BEFORE = 'before';\nexport const INFO_POSITION_AFTER = 'after';\n\nexport const ANCHOR_LEFT = 'left';\nexport const ANCHOR_RIGHT = 'right';\n\nexport const OPEN_DOWN = 'down';\nexport const OPEN_UP = 'up';\n\nexport const DAY_SIZE = 39;\nexport const BLOCKED_MODIFIER = 'blocked';\nexport const WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nexport const FANG_WIDTH_PX = 20;\nexport const FANG_HEIGHT_PX = 10;\nexport const DEFAULT_VERTICAL_SPACING = 22;\n\nexport const MODIFIER_KEY_NAMES = new Set(['Shift', 'Control', 'Alt', 'Meta']);\n","import React from 'react';\n\nimport { WantParameter } from './wishes';\n\nexport function RepeatableParameter({ normalized, ...others }) {\n  return <WantParameter parameter={normalized} {...others} />;\n}\n\nexport const Parameter = ({ normalized, ...others }) => {\n  if (normalized.is_repeatable) {\n    return <RepeatableParameter {...others} normalized={normalized} />;\n  }\n\n  return <WantParameter {...others} parameter={normalized} />;\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport './Header.local.scss';\n\nexport const Header = ({ title, children, stretchContent }) => (\n  <header className={`header ${stretchContent ? 'stretched-content' : ''}`}>\n    { title && <h1 className=\"header-title\">{title}</h1>}\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.dashboard;\n\nexport const filterStatusSelector = createSelector(localState, state => state.get('filterStatus'));\n","import { filterStatusActions } from './filter-status.action';\n\nimport { checkDaemon } from 'shared/api/daemon';\n\nexport const actions = {\n  ...filterStatusActions\n};\n\n/** TODO: The Above actions should be expanded to the new structure at some point */\n\nexport function checkDeamonStatus() {\n  return function daemon_thunk(dispatch) {\n    dispatch({\n      type: 'DAEMON_STATUS',\n      promise: checkDaemon()\n    });\n  };\n}\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDns } from '@mdi/js';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport './AddServerCard.local.scss';\n\nexport const AddServerCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Server\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewServerContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewServer = ({ server = { protocol: 'SSH' }, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const { actions } = useContext(ModalContext);\n  const formRef = useRef();\n\n  useEffect(() => {\n    fetchProtocols().then(resp => {\n      setState({\n        loading: false,\n        result: resp.result,\n        protocols: resp.protocols || []\n      });\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Add New Server\"\n        desc=\"Input the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading protocols list</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <ServerForm\n                server={server}\n                handleSubmission={reloadAccounts}\n                protocols={state.protocols}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Paper.Content>\n                <Result>\n                  <Result.Text>Could not load protocols list.</Result.Text>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button color=\"primary\" onClick={actions.close}>\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewServerContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewServer);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDatabase } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Paper, Center } from 'shared/components/layout';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport './AddDatabaseCard.local.scss';\n\nexport const AddDatabaseCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Database\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewDatabaseContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewDatabase = ({ account, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Add New Database\"\n        desc=\"Input the database connection information\"\n        formikRef={formRef}\n      />\n\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading Required Protocols and Privilege Modes</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <DatabaseForm\n                protocols={state.protocols}\n                modes={state.modes}\n                account={account}\n                handleSubmission={reloadAccounts}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Center>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load required protocols or privilege modes list.\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewDatabaseContainer = connect(\n  state => () => {\n    const path = state.explorer.state.path.split('--');\n    return {\n      account: {\n        protocol: path[0],\n        address: path[1]\n      }\n    };\n  },\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewDatabase);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { postFile } from 'shared/api/accounts';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { downloadFile } from 'shared/lib/download-file/download-file';\nimport { CONSTANTS } from '../../../config';\n\nimport './ImportCSV.local.scss';\n\nexport const ImportCSV = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Import from CSV\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <ImportCSVContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const ImportCSVFile = ({ reloadAccounts }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState('');\n  const fileName = selectedFile?.name || 'No file chosen';\n\n  const onChangeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadFile = () => {\n    if (!selectedFile) {\n      setResult('error');\n\n      return;\n    }\n    setResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedFile);\n\n    postFile(data)\n      .then(() => {\n        setResult('');\n        reloadAccounts();\n      })\n      .catch(() => {\n        // at the current BE version, even though the call is a success\n        // a \"false\" error is returned, so the reload account call should be made\n        setResult('');\n        reloadAccounts();\n      });\n  };\n\n  return (\n    <Paper\n      style={{\n        width: '50vw',\n        height: '50vh'\n      }}\n    >\n      <ModalHeader icon={<PostAddIcon />} title=\"Import CSV\" />\n      <Switch value={result}>\n        <Switch.Case value=\"\">\n          <div className=\"container\">\n            <label htmlFor=\"file-upload\" className=\"csv-file-upload\">\n              Choose file\n              <input type=\"file\" id=\"file-upload\" name=\"csv\" accept=\".csv\" onChange={onChangeHandler} />\n            </label>\n            <LimitlessTooltip placement=\"bottom\" title={fileName}>\n              <span className=\"file-name\">{fileName}</span>\n            </LimitlessTooltip>\n          </div>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => downloadFile(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_CSV_TEMPLATE)}>\n                Download template\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button onClick={uploadFile}>Upload</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"loading\">\n          <Center>\n            <Loader>Uploading file...</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value=\"error\">\n          <Result type=\"fail\">\n            <Result.Text>You forgot to select a file</Result.Text>\n          </Result>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => setResult('')}>Back</Button>\n            </Paper.Footer.Left>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const ImportCSVContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(ImportCSVFile);\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function deleteEntity(name, type) {\n  try {\n    const { data } = await RestClient.delete(`/${type}/${name}`);\n\n    return { result: data.result };\n  } catch (e) {\n    return { result: 'fail' };\n  }\n}\n\nexport function deleteInvocation(uuid) {\n  return RestClient.delete(`/invocation/${uuid}`);\n}\n","export function mapScheduledNames(allScheduled = []) {\n  const names = allScheduled.reduce((acc, entry) => {\n    const nameArr = entry.name.split('.');\n    const name = nameArr[nameArr.length - 1];\n    acc.push(name);\n    return acc;\n  }, []);\n\n  return names;\n}\n","import React from 'react';\nimport { bool, node, string, array, func } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiContentSave } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport './ActionCard.local.scss';\n\nexport class ActionCard extends React.PureComponent {\n  render() {\n    const {\n      settings,\n      status,\n      icon,\n      label,\n      addOnly,\n      options,\n      onClick,\n      readOnlyOptions,\n      lastBackup,\n      type = '',\n      statusInfo = ''\n    } = this.props;\n\n    return (\n      <div className={classnames('action-card', { addable: addOnly })}>\n        <header>\n          {lastBackup && (\n            <div className=\"last-backup\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiContentSave} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{lastBackup}</span>\n            </div>\n          )}\n          {settings && <div className=\"settings\">{settings}</div>}\n        </header>\n        <div className=\"main-icon\" onClick={onClick} role=\"presentation\">\n          {status && (\n            <LightTooltip placement=\"bottom\" title={capitalizeFirstLetter(statusInfo)}>\n              <div className={`status ${status} ${type}`} />\n            </LightTooltip>\n          )}\n          {icon}\n        </div>\n        <div className=\"main-label\">{label}</div>\n        {options &&\n          options.map((option, index) => (\n            <div\n              className={classnames('option', { disabled: option.disabled })}\n              key={`${option.label}-${index}`}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n            </div>\n          ))}\n        {readOnlyOptions &&\n          readOnlyOptions.map(option => (\n            <div\n              className=\"option presentation\"\n              key={option.label}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              {option.fillable && option.percentage && (\n                <div className=\"filled\" style={{ width: `${option.percentage}%` }} />\n              )}\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n              {option.percentage && <div className=\"end-icon\">{option.percentage}%</div>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nActionCard.propTypes = {\n  settings: node,\n  icon: node,\n  label: string,\n  addOnly: bool,\n  options: array,\n  onClick: func,\n  status: string,\n  readOnlyOptions: array\n};\n\nexport default ActionCard;\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './CardsLayout.local.scss';\n\nexport class CardsLayout extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"container\">{children}</div>;\n  }\n}\n\nCardsLayout.propTypes = {\n  children: node\n};\n\nexport default CardsLayout;\n","import React from 'react';\n\nexport function want(map, Unresolved = () => null, keygen = key => key) {\n  function settler(props) {\n    const key = keygen(props);\n    return map[key] ?? Unresolved;\n  }\n\n  return settler;\n}\n\nexport function wantComponent(settler) {\n  function Picker(props) {\n    const Picked = settler(props);\n\n    return <Picked {...props} />;\n  }\n\n  return Picker;\n}\n","import React, { useRef, useState } from 'react';\nimport { string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, Form, Formik } from 'formik';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, Input } from 'shared/components/controls';\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Center } from 'shared/components';\nimport './ChangePassword.local.scss';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const ChangePassword = ({ user, useLinkTrigger }) => {\n  const [open, setOpen] = useState(false);\n  /**\n   * Backend call result\n   */\n  const [result, setResult] = useState({ done: false, error: undefined });\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult({ done: false, error: undefined });\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const parseError = error => {\n    if (\n      error?.response?.data?.messages &&\n      error.response.data.messages.length > 0 &&\n      error.response.data.messages[0]?.text\n    ) {\n      return error.response.data.messages[0]?.text.split('\\n')[0];\n    }\n\n    return 'Password Change Failed!';\n  };\n\n  return (\n    <>\n      {!useLinkTrigger && (\n        <Button color=\"primary\" onClick={modalActions.open}>\n          Change Password\n        </Button>\n      )}\n      {useLinkTrigger && (\n        <a role=\"presentation\" onClick={modalActions.open}>\n          Change Password\n        </a>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '600px',\n            height: '450px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-password\">\n                <GroupIcon />\n              </Avatar>\n            }\n            title=\"Change Password\"\n            formikRef={formRef}\n          />\n          {result.done ? (\n            <>\n              <Center>\n                <Result type={result.error ? 'fail' : 'success'}>\n                  <Result.Text>{result.error ? result.error : 'Password Changed!'}</Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </>\n          ) : (\n            <Formik\n              initialValues={{\n                password: '',\n                confirm: ''\n              }}\n              validate={values => {\n                const errors = {};\n\n                if (!values.password) {\n                  errors.password = 'Field is required';\n                }\n\n                if (!values.confirm) {\n                  errors.confirm = 'Please reenter your new password';\n                }\n\n                if (values.password !== values.confirm) {\n                  errors.confirm = 'Passwords do not match';\n                }\n\n                if (values.password) {\n                  if (/[$\\\\/\":;']/.test(values.password)) {\n                    errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n                  } else if (values.password.length < 8) {\n                    errors.password = 'Password must contain at least eight characters';\n                  } else if (!/[a-z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a lower case letter (ex: a, b, etc.)';\n                  } else if (!/[A-Z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a upper case letter (ex: A, B, etc.)';\n                  } else if (!/[0-9]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n                  } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n                  }\n                }\n\n                return errors;\n              }}\n              onSubmit={async (values, actions) => {\n                actions.setSubmitting(true);\n\n                try {\n                  await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`, {\n                    password: values.password\n                  });\n\n                  actions.setSubmitting(false);\n                  setResult({ done: true });\n                } catch (e) {\n                  actions.setSubmitting(false);\n                  setResult({ done: true, error: parseError(e) });\n                }\n              }}\n              innerRef={formRef}\n            >\n              {({ dirty, isSubmitting, isValid, handleSubmit }) => (\n                <>\n                  <Paper.Content scrollable>\n                    <Form className=\"password-form\">\n                      <Row>\n                        <Field name=\"password\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                required\n                                label=\"Password\"\n                                placeholder=\"New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                      <Row>\n                        <Field name=\"confirm\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                required\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                label=\"Confirm Password\"\n                                placeholder=\"Confirm New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                    </Form>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        disabled={!dirty || !isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </>\n              )}\n            </Formik>\n          )}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nChangePassword.propTypes = {\n  user: string\n};\n\nexport const ChangePasswordContainer = connect(state => {\n  const user = selectedUser(state);\n\n  return { user: user.name };\n})(ChangePassword);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import React, { createContext } from 'react';\nimport uuid from 'uuid';\nimport MUIModal from '@material-ui/core/Modal';\nimport { bool, string, oneOfType, node, func, shape } from 'prop-types';\n\nimport './Modal.local.scss';\n\nimport { ModalHeader } from '../ModalHeader/ModalHeader';\n\nexport const ModalContext = createContext({});\n\nexport const Modal = ({ open, actions, id: providedId, children }) => {\n  const id = providedId || uuid();\n  const aria = {\n    'aria-labelledby': `${id}-modal-title`,\n    'aria-describedby': `${id}-modal-description`\n  };\n\n  return (\n    <ModalContext.Provider value={{ aria, actions }}>\n      <MUIModal {...aria} open={open} onClose={actions?.close} disableBackdropClick>\n        <div className=\"overlay\">\n          {typeof children === 'function' ? children({ id, aria, open, actions }) : children}\n        </div>\n      </MUIModal>\n    </ModalContext.Provider>\n  );\n};\n\nModal.propTypes = {\n  actions: shape({\n    open: func,\n    close: func\n  }),\n  children: oneOfType([node, func]),\n  open: bool,\n  id: string\n};\n\nModal.ModalHeader = ModalHeader;\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getNamespace(name) {\n  return RestClient.get(`/namespace/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchNamespace(name, body) {\n  return RestClient.patch(`/namespace/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postNamespace(body) {\n  return RestClient.post('/namespace', body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postForm(name, body) {\n  return RestClient.post(`/form/${name}/clone`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function createForm(body) {\n  return RestClient.post('/form', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function updateForm(name, body) {\n  return RestClient.patch(`/form/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useReducer, createContext } from 'react';\n\nimport _ from 'lodash';\n\nimport { produce } from 'immer';\n\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { QualifiedName, FormPrototypeSelect } from 'shared/components/form/editors/Custom';\n\nimport { space_summon } from 'shared/components/form/parameters/normalizeParameter';\n\nimport { FormParameters } from './FormParameters';\n\nimport { groupForm, ungroupForm } from './utils';\n\nimport { createForm, updateForm } from 'shared/api/form';\n\nconst groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_GROUP_INSTANCE': {\n      return produce(state, draft => {\n        draft.groups[action.pointers.group].instances.push(action.instance);\n      });\n    }\n\n    case 'REMOVE_GROUP_INSTANCE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances.splice(pointers.instance, 1);\n      });\n    }\n    case 'ADD_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        const field =\n          draft.groups[pointers.group].instances[pointers.instance].fields[pointers.field];\n\n        field.values.push({ instance: field.values.length, value: null });\n      });\n    }\n    case 'REMOVE_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances[pointers.instance].fields[\n          pointers.field\n        ].values.splice(action.index, 1);\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const PackedContext = createContext({ groups: [] });\n\nexport function FormEditor({ isNew, form, prototype, setResult, formRef }) {\n  const initialPacked = groupForm(prototype, _.cloneDeep(form));\n  /** Prepare initial relative name */\n  const split_name = form?.name?.split?.('.') || [''];\n\n  initialPacked.name = _.last(split_name);\n\n  const [packed, dispatch] = useReducer(groupsReducer, initialPacked);\n\n  const contextValue = { packed, dispatch };\n\n  return (\n    <PackedContext.Provider value={contextValue}>\n      <Formik\n        initialValues={{}}\n        validateOnChange={false}\n        onSubmit={(values, actions) =>\n          handleSubmit({\n            form,\n            packed,\n            isNew,\n            prototype,\n            values,\n            actions,\n            setResult\n          })}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Form details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <QualifiedName name=\"form_name\" label=\"Name\" value={packed.name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"description\"\n                          label=\"Description\"\n                          value={packed.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column>\n                          <FormPrototypeSelect\n                            value={prototype?.name}\n                            disabled\n                            label=\"Form\"\n                            name=\"prototype\"\n                          />\n                        </Column>\n                      </Row>\n                      <FormParameters packed={packed} prototype={prototype} />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </PackedContext.Provider>\n  );\n}\n\nasync function handleSubmit({\n  prototype,\n  packed,\n  values,\n  setResult,\n  isNew,\n  form\n}) {\n  const { form_name, description, prototype: protoName, ...fields } = values;\n\n  const extracted = extractFieldInfo(fields);\n\n  const exclusions = [null, 'None', ''];\n\n  const filteredExtractions = extracted.filter(entry => !exclusions.includes(entry.val));\n\n  const packedCopy = _.cloneDeep(packed);\n\n  /**\n   * Update name and description\n   */\n\n  /**\n   * extract and remap field values.\n   */\n  filteredExtractions.forEach(entry => {\n    const path = `groups[${entry.group}].instances[${entry.instance}].fields[${entry.field}].values[${entry.index}].value`;\n\n    _.set(packedCopy, path, entry.value);\n  });\n\n  /**\n   * unpack and prepare for sending\n   */\n  const unpacked = ungroupForm(packedCopy);\n\n  /**\n   * Very Important!\n   * Please read.\n   * Another cleanup process is needed.\n   * So there cannot be values for repeatable parameters where there is an empty array.\n   * It requires for some DAMNED reason, to have at least one null value.\n   */\n  unpacked.values = unpacked.values.map(value => {\n    if (Array.isArray(value.value)) {\n      /** for some reason, it's not removed from the first iteration for values. */\n      const filtered = { ...value, value: value.value.filter(v => !!v) };\n\n      if (filtered.value.length === 0) {\n        filtered.value = [null];\n      }\n\n      return filtered;\n    }\n\n    return value;\n  });\n\n  const name = form_name;\n\n  unpacked.name = name;\n\n  if (!isNew) {\n    const rename = [..._.initial(form.name.split('.')), form_name].join('.');\n    if (rename !== form.name) {\n      unpacked.rename = rename;\n      delete unpacked.name;\n    }\n  }\n\n  unpacked.description = description;\n  unpacked.prototype = protoName;\n  unpacked.version = prototype.version;\n\n  const request = isNew ? createForm : updateForm;\n\n  const request_args = [unpacked];\n\n  if (!isNew) {\n    // prepend name to request arguments.\n    request_args.unshift(form.name);\n  }\n\n  try {\n    await request(...request_args);\n    setResult('success');\n  } catch (e) {\n    setResult('fail');\n  }\n}\n\n// /** berry important :) */\nfunction extractFieldInfo(all) {\n  const key_struct = /^group-(\\d+)-instance-(\\d+)-field-(\\d+)-value-(\\d+)---(\\w+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      name: space_summon(matched[5]),\n      index: matched[4],\n      field: matched[3],\n      instance: matched[2],\n      lower: matched[1],\n      group: matched[1],\n      value\n    };\n  });\n}\n","import moment from 'moment';\n\nexport function mapAllServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const entryInfo = {\n      name: entry.srvname,\n      model: entry.model,\n      version: entry.version,\n      sid: entry.sid,\n      collDate: entry.collDate,\n      nrCores: entry.Ncore,\n      totalDBs: 1,\n      eelic_count: entry.eelic_count,\n      selic_count: entry.selic_count,\n      sids: [entry],\n      installedOptions: {\n        aa_count: entry.aa_count ? 1 : 0,\n        ac_count: entry.ac_count ? 1 : 0,\n        as_count: entry.as_count ? 1 : 0,\n        dv_count: entry.dv_count ? 1 : 0,\n        mt_count: entry.mt_count ? 1 : 0,\n        adg_count: entry.adg_count ? 1 : 0,\n        rac_count: entry.rac_count ? 1 : 0,\n        olap_count: entry.olap_count ? 1 : 0,\n        part_count: entry.part_count ? 1 : 0,\n        in_mem_db_count: entry.in_mem_db_count ? 1 : 0,\n        rac_one_node_count: entry.rac_one_node_count ? 1 : 0,\n        real_app_test_count: entry.real_app_test_count ? 1 : 0\n      }\n    };\n\n    const totalInstalledOptions = Object.values(entryInfo.installedOptions).reduce((a, b) => a + b);\n    entryInfo.sids = [{ ...entry, totalInstalledOptions }];\n    entryInfo.totalInstalledOptions = totalInstalledOptions;\n\n    acc.push(entryInfo);\n    return acc;\n  }, []);\n\n  return groupServers(serversInfo).sort((a, b) => a.nrCores - b.nrCores);\n}\n\nexport function mapVirtualServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const index = acc.findIndex(sv => sv.vcenterservername === entry.vcenterservername);\n\n    if (index > -1) {\n      if (\n        entry.vmname !== null ||\n        entry.vmguesthostname !== null ||\n        entry.vmguestos !== null ||\n        entry.vmipaddress !== null\n      ) {\n        acc[index].hosts_nr += 1;\n      }\n    } else {\n      acc.push({\n        vcenterservername: entry.vcenterservername,\n        cpu: entry.cpu,\n        cpucores: entry.cpucores,\n        hosts_nr:\n          entry.vmname !== null ||\n          entry.vmguesthostname !== null ||\n          entry.vmguestos !== null ||\n          entry.vmipaddress !== null\n            ? 1\n            : 0\n      });\n    }\n    return acc;\n  }, []);\n\n  return serversInfo;\n}\n\nfunction groupServers(servers) {\n  return Object.values(servers.reduce((acc, entry) => {\n    if (!acc[entry.name]) {\n      acc[entry.name] = entry;\n    } else {\n      const allSids = [...acc[entry.name].sids, ...entry.sids]\n        .sort((o1, o2) => -moment(o1.collDate).diff(moment(o2.collDate)));\n\n      acc[entry.name] = entry;\n      acc[entry.name].sids = allSids;\n      acc[entry.name].collDate = allSids[0].collDate;\n    }\n    return acc;\n  }, {}));\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './center.local.scss';\n\nexport class CenterComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport default CenterComponent;\n\nCenterComponent.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nCenterComponent.defaultProps = {\n  className: 'center-container'\n};\n","import moment from 'moment';\n\nexport function isBeforeDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n\n  const aYear = a.year();\n  const aMonth = a.month();\n\n  const bYear = b.year();\n  const bMonth = b.month();\n\n  const isSameYear = aYear === bYear;\n  const isSameMonth = aMonth === bMonth;\n\n  if (isSameYear && isSameMonth) return a.date() < b.date();\n  if (isSameYear) return aMonth < bMonth;\n  return aYear < bYear;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { string, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Overflow.scss';\n\nexport const Overflow = ({ className, component, children, variant }) => {\n  const nodeRef = useRef(null);\n  const [scrollableX, setScrollableX] = useState(false);\n  const [scrollableY, setScrollableY] = useState(false);\n  const [scrolledX, setScrolledX] = useState(false);\n  const [scrolledY, setScrolledY] = useState(false);\n\n  const Tag = component || 'div';\n\n  const onScroll = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolledY) {\n          setScrolledY(true);\n        }\n      } else if (scrolledY) {\n        setScrolledY(false);\n      }\n\n      if (event.currentTarget.scrollLeft) {\n        if (!scrolledX) {\n          setScrolledX(true);\n        }\n      } else if (scrolledX) {\n        setScrolledX(false);\n      }\n    },\n    [scrollableX, scrollableY, scrolledX, scrolledY]\n  );\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const element = nodeRef.current;\n      const box = {\n        width: element.clientWidth,\n        height: element.clientHeight,\n        scrollHeight: element.scrollHeight,\n        scrollWidth: element.scrollWidth\n      };\n\n      if (box.width < box.scrollWidth && !scrollableX) {\n        setScrollableX(true);\n      }\n\n      if (box.height < box.scrollHeight && !scrollableY) {\n        setScrollableY(true);\n      }\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={classnames(\n        'overflow-container',\n\n        {\n          [variant]: variant,\n          scrollableX,\n          scrollableY,\n          scrolledX,\n          scrolledY\n        },\n        className\n      )}\n    >\n      <Tag ref={nodeRef} className={classnames('overflow-scroller')} onScroll={onScroll}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nOverflow.propTypes = {\n  children: node,\n  className: string,\n  variant: oneOf(['white'])\n};\n\nOverflow.defaultProps = {};\n","import React, { useContext, useState } from 'react';\nimport { string, node, func, shape, bool } from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { ModalContext } from '../Modal/Modal';\n\nimport { Modal } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport './ModalHeader.local.scss';\n\nexport const ModalHeader = ({\n  avatar,\n  icon,\n  title,\n  desc,\n  closeable,\n  onClose,\n  aria: providedAria,\n  formikRef,\n  changedForm = false\n}) => {\n  const context = useContext(ModalContext);\n  const aria = context.aria || providedAria;\n  const actions = context.actions || { close: onClose };\n  const [open, setOpen] = useState(false);\n\n  const close = () => {\n    if (changedForm || (formikRef?.current?.dirty && fieldChanged(formikRef?.current?.touched))) {\n      setOpen(true);\n    } else {\n      actions.close();\n    }\n  };\n\n  const fieldChanged = fields => {\n    let changed = false;\n    const fieldsArr = Object.keys(fields);\n\n    fieldsArr.map(field => {\n      if (fields[field]) {\n        changed = true;\n      }\n\n      return null;\n    });\n\n    return changed;\n  };\n\n  return (\n    <header className=\"modal-header\">\n      {avatar && <div className=\"icon-slot\">{avatar}</div>}\n      {/** TODO: this should actually be avatar :((( ... don't have time to refactor now need to patch through */}\n      {icon && (\n        <div className=\"icon-slot\">\n          <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n            {icon}\n          </Avatar>\n        </div>\n      )}\n      <div className=\"modal-title-slot\" id={aria['aria-labelledby']}>\n        <h1 className=\"modal-title\">{title}</h1>\n        {desc && (\n          <p className=\"modal-desc\" id={aria['aria-describedby']}>\n            {desc}\n          </p>\n        )}\n      </div>\n      {closeable && actions.close && (\n        <>\n          <div className=\"modal-close-button-slot\">\n            <button className=\"modal-close-button\" onClick={close}>\n              <CloseIcon fontSize=\"large\" />\n            </button>\n          </div>\n\n          <Modal open={open}>\n            <Paper\n              style={{\n                minWidth: '350px',\n                maxHeight: '368px',\n                maxWidth: '65vw'\n              }}\n            >\n              <Paper.Header>\n                <div className=\"modal-header\">\n                  <div className=\"icon-slot\">\n                    <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n                      <WarningIcon />\n                    </Avatar>\n                  </div>\n                  <div className=\"modal-title-slot\">\n                    <h1 className=\"modal-title\">Warning</h1>\n                  </div>\n                  <div className=\"modal-close-button-slot\">\n                    <button\n                      className=\"modal-close-button\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"large\" />\n                    </button>\n                  </div>\n                </div>\n              </Paper.Header>\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Exit without saving?</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    No\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                      actions.close();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Paper>\n          </Modal>\n        </>\n      )}\n    </header>\n  );\n};\n\nModalHeader.propTypes = {\n  title: node,\n  desc: node,\n  onClose: func,\n  closeable: bool,\n  avatar: node,\n  icon: node,\n  aria: shape({\n    'aria-labelledby': string,\n    'aria-describedby': string\n  })\n};\n\nModalHeader.defaultProps = {\n  closeable: true\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nimport './Checkbox.local.scss';\n\nexport const Checkbox = ({ label, disabled, ...rest }) => {\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className=\"checkbox-label\"\n      control={\n        <MUICheckbox\n          className=\"checkbox\"\n          color=\"primary\"\n          icon={<CheckBoxOutlineBlankIcon />}\n          checkedIcon={<CheckBoxIcon />}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  label: node,\n  disabled: bool\n};\n","export default (task, duration = 10000) => {\n  let running = false;\n\n  async function runTask() {\n    if (!running) {\n      return;\n    }\n\n    try {\n      await task();\n      running = false;\n    } catch (e) {\n      setTimeout(() => runTask(), duration);\n    }\n  }\n\n  return {\n    start() {\n      if (running) {\n        return;\n      }\n      running = true;\n      runTask();\n    },\n    stop() {\n      running = false;\n    }\n  };\n};\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nexport const ServerForm = ({\n  server = {},\n  protocols,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [submission, setSubmission] = useState({});\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [showRSA, setShowRSA] = useState(false);\n  const handleAccountCreation = getCreateAccountHandler({\n    showRSA,\n    passwordEditable,\n    setSubmission,\n    isNew,\n    server\n  });\n\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapServerValues(entry) {\n    return {\n      name: entry.name || '',\n      description: entry.description || '',\n      host: entry.address || '',\n      port: entry.port || availablePorts[entry.protocol || 'SSH'],\n      user: entry.user || '',\n      server_password: entry.user_key || '',\n      confirm_server_password: '',\n      rsa_key: entry.user_key || '',\n      protocol: entry.protocol || 'SSH'\n    };\n  }\n\n  const initialValues = mapServerValues(server);\n\n  const extraValidations = values => {\n    const errors = {};\n    if (passwordEditable && !showRSA) {\n      if (values.server_password !== values.confirm_server_password) {\n        errors.confirm_server_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column>\n                          <Row>\n                            <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                          </Row>\n                          <Row>\n                            <Column>\n                              <Text\n                                name=\"protocol\"\n                                required\n                                label=\"Protocol\"\n                                disabled={!isNew}\n                                options={allowedProtocols.map(p => ({\n                                  value: p.name,\n                                  label: p.name\n                                }))}\n                                value={initialValues.protocol}\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue('port', availablePorts[value]);\n                                }}\n                              />\n                            </Column>\n                          </Row>\n                        </Column>\n                        <Column>\n                          <Text\n                            name=\"description\"\n                            multiline\n                            required\n                            label=\"Description\"\n                            value={initialValues.description}\n                          />\n                        </Column>\n                      </Row>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column style={{ maxWidth: '80%', width: '80%' }}>\n                          <Text\n                            name=\"host\"\n                            label=\"Host\"\n                            required\n                            value={initialValues.host}\n                            disabled={editing}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column>\n                          <Text\n                            name=\"server_user\"\n                            label=\"User\"\n                            required\n                            value={initialValues.user}\n                          />\n                        </Column>\n                        {passwordEditable && <PasswordOrRSA allowed showRSA={showRSA} />}\n                      </Row>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" required label=\"RSA Key\" />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row>\n          <Password name=\"server_password\" label=\"Password\" required />\n        </Row>\n        <Row>\n          <Password name=\"confirm_server_password\" label=\"Confirm Password\" required />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ showRSA, passwordEditable, setSubmission, isNew, server }) {\n  return function handleAccountCreation(values) {\n    const request_body = {\n      protocol: values.protocol,\n      user: values.server_user,\n      description: values.description,\n      address: values.host,\n      ...(passwordEditable && {\n        user_key: showRSA ? values.rsa_key : values.server_password\n      }),\n      port: Number.parseInt(values.port, 10)\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(server.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handleSubmission) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    // add this entry to redux structure\n    // addNewAccount(newAccount);\n    handleSubmission();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchDataTypes(type = '') {\n  try {\n    const { data } = await RestClient.get(\n      `${CONSTANTS.BASE.ENDPOINTS.DATATYPES}${type ? `/${type}` : ''}`\n    );\n\n    return { result: data.result, data_types: data.data.data_types };\n  } catch (e) {\n    return { result: 'fail', data_types: [] };\n  }\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport _ from 'lodash';\n\nexport const DatabaseForm = ({\n  account = {},\n  protocols = [],\n  modes,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [submission, setSubmission] = useState({});\n  const allowedProtocols = protocols.filter(p => {\n    const special = p?.special_required;\n\n    return special && special.includes('database');\n  });\n  const [showRSA, setShowRSA] = useState(false);\n\n  const handleAccountCreation = getCreateAccountHandler({\n    protocols: allowedProtocols,\n    modes,\n    showRSA,\n    isNew,\n    setSubmission,\n    account\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapAccountValues(entry = {}) {\n    return {\n      name: _.get(entry, 'name', ''),\n      protocol: _.get(entry, 'protocol', ''),\n      description: _.get(entry, 'description', ''),\n\n      host: _.get(entry, 'address', ''),\n\n      port: _.get(entry, 'port', availablePorts[_.get(entry, 'protocol')]),\n\n      database: _.get(entry, 'special.database', ''),\n      user: _.get(entry, 'user', ''),\n      mode: _.get(entry, 'special.mode', '')\n    };\n  }\n\n  const initialValues = mapAccountValues(account);\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (passwordEditable && !showRSA) {\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {({ values }) => {\n            const selectedProtocol =\n              values.protocol && protocols.find(protocol => protocol.name === values.protocol);\n            const allowRSA = !!selectedProtocol?.allow_rsa_key;\n            const withDatabase = selectedProtocol?.special_required?.includes('database');\n            const withMode = selectedProtocol?.name === 'ORACLE';\n\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column>\n                            <Row padded>\n                              <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                            </Row>\n                            <Row padded>\n                              <Column>\n                                <Text\n                                  name=\"protocol\"\n                                  required\n                                  label=\"Protocol\"\n                                  reactToChange={(value, formik) => {\n                                    formik.setFieldValue('port', availablePorts[value]);\n                                  }}\n                                  options={allowedProtocols.map(p => ({\n                                    value: p.name,\n                                    label: p.name\n                                  }))}\n                                  value={initialValues.protocol}\n                                />\n                              </Column>\n                            </Row>\n                          </Column>\n                          <Column>\n                            <Text\n                              multiline\n                              name=\"description\"\n                              label=\"Description\"\n                              required\n                              value={initialValues.description}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column style={{ maxWidth: '80%', width: '80%' }}>\n                            <Text name=\"host\" required label=\"Host\" value={initialValues.host} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                          </Column>\n                        </Row>\n                        <Row>\n                          {withDatabase && (\n                            <Column style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}>\n                              <Text\n                                name=\"database\"\n                                required\n                                label=\"Database\"\n                                value={initialValues.database}\n                              />\n                            </Column>\n                          )}\n                          {withMode && (\n                            <Column style={{ maxWidth: '20%' }}>\n                              <Text\n                                name=\"mode\"\n                                label=\"Mode\"\n                                required\n                                options={modes.map(mode => ({\n                                  value: mode.label,\n                                  label: mode.label\n                                }))}\n                                value={initialValues.mode}\n                              />\n                            </Column>\n                          )}\n                        </Row>\n                        <Row>\n                          <Column>\n                            <Text\n                              name=\"user\"\n                              label=\"User\"\n                              required\n                              value={initialValues.user || ''}\n                            />\n                          </Column>\n                          {passwordEditable && (\n                            <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                          )}\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && allowRSA && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && allowRSA && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" label=\"RSA Key\" required />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row padded>\n          <Password name=\"password\" required label=\"Password\" />\n        </Row>\n        <Row padded>\n          <Password name=\"confirm_password\" required label=\"Confirm Password\" />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ protocols, showRSA, setSubmission, isNew, account }) {\n  return function handleAccountCreation(values) {\n    const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n    const allowRSA = !!selectedProtocol?.allow_rsa_key;\n    const withDatabase = selectedProtocol?.special_required?.includes('database');\n    const withMode = selectedProtocol?.name === 'ORACLE';\n\n    const request_body = {\n      user: values.user,\n      description: values.description,\n      protocol: values.protocol,\n      address: values.host,\n      user_key: allowRSA && showRSA ? values.rsa_key : values.password,\n      port: Number.parseInt(values.port, 10),\n      special: {\n        ...(withDatabase && { database: values.database }),\n        ...(withMode && { mode: values.mode })\n      }\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(account.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handler) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    handler();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async (url) => {\n  try {\n    const response = await RestClient.get(url);\n\n    const fileName = 'CSV_Template.csv';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { deleteInvocation } from 'shared/api/delete';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions as sharedActions } from 'shared/store/actions';\nimport './DeleteJobModal.local.scss';\n\nexport const ConnectedDeleteJobModal = connect(\n  state => {\n    return {\n      globalFilters: globalFiltersSelector(state)\n    };\n  },\n  dispatch => {\n    return {\n      getJobs: data => {\n        dispatch(sharedActions.getJobs.dispatchLoading(data));\n      }\n    };\n  }\n)(DeleteJobModal);\n\nfunction DeleteJobModal({ open, actions, uuid, filters, globalFilters, getJobs }) {\n  const [result, setResult] = useState('attempt');\n  const getQSP = () => {\n    if (!filters || !Object.keys(filters).length) {\n      const startDate = moment.unix(globalFilters.get('startDate'));\n      const endDate = moment.unix(globalFilters.get('endDate'));\n      const start = moment(startDate.format('YYYY-MM-DD'));\n      const end = moment(endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n      const payload = {\n        date_invoke: startDate.format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      };\n\n      return payload;\n    }\n    return filters;\n  };\n\n  const terminator = useCallback(() => {\n    deleteInvocation(uuid)\n      .then(() => {\n        setResult('success');\n        if (filters) {\n          getJobs(getQSP());\n        }\n      })\n      .catch(() => {\n        setResult('fail');\n      });\n  }, uuid);\n  return (\n    <>\n      <Modal open={open} actions={actions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Delete\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <div className=\"container\">\n                    <p>Are you sure you want to delete this invocation and future invocations of this job?</p>\n                  </div>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('loading');\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <h2 className=\"container\">Invocation successfully deleted!</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <h2 className=\"container\">Invocation could not be deleted.</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"loading\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { ScheduleModal } from './components/ScheduleModal/ScheduleModal';\n\nexport const Schedule = ({ invocation }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setFilledValues({});\n      setResult('');\n      setOpen(false);\n    }\n  };\n  const [filledValues, setFilledValues] = useState({});\n  const [result, setResult] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [canSelectProcess, setCanSelectProcess] = useState(true);\n\n  const onClickHandler = option => {\n    setSelectedOption(option);\n    setCanSelectProcess(!invocation);\n    setOpen(true);\n  };\n\n  const btnLabel = invocation ? 'Schedule' : 'New Schedule';\n  const isScheduled = invocation?.status === 'SCHEDULED' && invocation?.schedule;\n\n  return (\n    <>\n      {isScheduled && (\n        <Button style={{ minWidth: '140px' }} onClick={() => onClickHandler('edit-schedule')}>\n          Edit Schedule\n        </Button>\n      )}\n      <Button\n        onClick={() => {\n          onClickHandler('schedule');\n        }}\n      >\n        {btnLabel}\n      </Button>\n      <ScheduleModal\n        open={open}\n        actions={modalActions}\n        invocation={invocation}\n        isScheduled={isScheduled}\n        selectedOption={selectedOption}\n        canSelectProcess={canSelectProcess}\n        result={result}\n        setResult={setResult}\n        filledValues={filledValues}\n        setFilledValues={setFilledValues}\n      />\n    </>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { postNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\n\nexport const ConnectedNewNamespace = connect(null, {\n  request: fetchEntity\n})(NewNamespace);\n\nfunction NewNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Namespace\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: namespace ? namespace.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  postNamespace(body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { FormEditor } from './FormEditor';\n\nexport const ConnectedFormModal = connect(null, {\n  refresh: fetchEntity\n})(FormModal);\n\nfunction FormModal({ disabled, form = null, prototype, refresh }) {\n  const isNew = form === null;\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('use_form');\n  const formRef = useRef();\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult('use_form');\n      setOpen(false);\n      // should refresh be here as well?\n      // refresh('form');\n    }\n  };\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        {isNew ? 'New Form' : 'Edit'}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title={`${isNew ? 'New' : 'Edit'} Form`}\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"use_form\">\n              <FormEditor\n                isNew={isNew}\n                form={form}\n                prototype={prototype}\n                setResult={setResult}\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was {isNew ? 'created' : 'updated'} successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      refresh('form');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ConfirmationModal } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\nimport { mdiSettings, mdiDatabase, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { deleteAccount } from 'shared/api/accounts';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nexport const DatabaseSettings = ({ database, disabled, reloadAccounts, editDbTrigger, deleteDbTrigger }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteDbOpen, setDeleteDbOpen] = useState(false);\n  const [deleteDbErrorOpen, setDeleteDbErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteDbModalActions = {\n    open: () => {\n      setDeleteDbOpen(true);\n    },\n    close: () => {\n      setDeleteDbOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(database.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteDbErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteDbErrorModalActions = {\n    open: () => {\n      setDeleteDbErrorOpen(true);\n    },\n    close: () => {\n      setDeleteDbErrorOpen(false);\n    }\n  };\n\n  if (disabled && !editDbTrigger && !deleteDbTrigger) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      {editDbTrigger && editDbTrigger(modalActions.open, disabled)}\n      {!editDbTrigger && (\n        <IconButton onClick={modalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiSettings} />\n          </SvgIcon>\n        </IconButton>\n      )}\n      {deleteDbTrigger && deleteDbTrigger(deleteDbModalActions.open, disabled)}\n      {!deleteDbTrigger && (\n        <IconButton onClick={deleteDbModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditDatabaseContainer database={database} />\n      </Modal>\n\n      <ConfirmationModal open={deleteDbOpen} actions={deleteDbModalActions} message=\"Are you sure you want to delete database?\" />\n      <ErrorModal open={deleteDbErrorOpen} actions={deleteDbErrorModalActions} message=\"Failed to delete Database. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditDatabase = ({ database, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [], modes: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Edit Database\"\n        desc=\"Edit the database connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <DatabaseForm\n            account={database}\n            protocols={state.protocols}\n            modes={state.modes}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditDatabaseContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditDatabase);\n","export const getOutputText = (output, invocation) => {\n  if (!invocation || (!output && invocation.status !== 'FAILED')) return '';\n\n  let outputText = '';\n\n  if (invocation.status === 'FAILED') {\n    outputText = `The following error(s) occurred:\n      ${invocation.errors.map(error => `• ${error}`).join('\\n')}\\n ${\n      output && output.length > 0 ? `Output: \\n${output.map(row => row.data.text).join('\\n')}` : ''\n    }`;\n  } else {\n    outputText = output.map(row => row.data.text).join('\\n');\n  }\n\n  return outputText;\n};\n","import { requestInvocation } from 'shared/api/invocation';\n\nexport function processQuery(uuid, process) {\n  return {\n    type: 'PROCESS_QUERY',\n    uuid,\n    process\n  };\n}\n\nexport function fetchInvocation(uuid, process) {\n  return function thunk(dispatch) {\n    dispatch({\n      type: 'FETCH_INVOCATION',\n      uuid,\n      process,\n      promise: requestInvocation(uuid)\n    });\n  };\n}\n\nexport function updateInvocation(invocation) {\n  return {\n    type: 'UPDATE_INVOCATION',\n    invocation\n  };\n}\n","import moment from 'moment';\nimport { getOutputText } from './getOutputText';\n\nconst EMAIL_BODY_MAX_LENGTH = 2000;\n\nexport const sendToEmail = (invocation, output, processName) => {\n  const text = getOutputText(output, invocation);\n  if (text.length > EMAIL_BODY_MAX_LENGTH) {\n    return false; // Max allowed body length exceeded\n  }\n\n  const date = moment(invocation.date_invoke).format('MMM DD YYYY, H:mm:ss');\n  const subject = processName ? `${processName} output` : 'Job output';\n  const body = `PROCESS: ${processName}\\nDATE: ${date}\\nSTATUS: ${invocation.status}\\n\\nOUTPUT:\\n\\n${text}`;\n  window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(body)}`;\n  return true;\n};\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCalendarBlank, mdiCubeOutline, mdiCubeScan, mdiDns, mdiMemory } from '@mdi/js';\nimport Cores from '../../../../assets/images/server_core.svg';\n\nimport './ServerCard.local.scss';\n\nconst tooltipTitle = (server) => {\n  return (\n    <>\n      <div><strong>Name:</strong> {server.name}</div>\n      <div><strong>Model:</strong> {server.model}</div>\n      <div><strong>Version:</strong> {server.version}</div>\n    </>\n  );\n};\n\nexport const ServerCard = ({ server, selected, toggleSelectedCallback, type }) => {\n  if (type === 'virtual') {\n    return (\n      <div className=\"virtual-server-card\">\n        <Avatar className=\"server-avatar\">\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </Avatar>\n        <div className=\"server-info\">\n          <span className=\"name\">{server.vcenterservername}</span>\n          <div className=\"details\">\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiCubeScan} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.hosts_nr}</span>\n              <span className=\"label\">Hosts</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiMemory} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.cpu}</span>\n              <span className=\"label\">CPUs</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <img className=\"img-responsive\" src={Cores} alt=\"server core icon\" />\n              </span>\n              <span className=\"value\">{server.cpucores}</span>\n              <span className=\"label\">Cores</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classnames('server-card', { selected })}\n      onClick={() => toggleSelectedCallback(server)}\n      role=\"presentation\"\n    >\n      <Avatar className=\"server-avatar\">\n        <SvgIcon>\n          <Icon path={mdiDns} />\n        </SvgIcon>\n      </Avatar>\n      <LightTooltip placement=\"bottom\" title={tooltipTitle(server)}>\n        <span className=\"server-name\">{server.name}</span>\n      </LightTooltip>\n      <LightTooltip\n        placement=\"bottom\"\n        title={`Last updated: ${moment(server.collDate).format('MMM DD YYYY')}`}\n      >\n        <span className=\"calendar-icon\">\n          <SvgIcon>\n            <Icon path={mdiCalendarBlank} />\n          </SvgIcon>\n        </span>\n      </LightTooltip>\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './ServersTile.local.scss';\n\nconst colors = {\n  1: '#6DF0D2',\n  2: '#1DE4BD',\n  4: '#1AC9E6',\n  6: '#7D3AC1',\n  8: '#EA7369',\n  16: '#EF7E32',\n  24: '#EABD3B'\n};\n\nexport const ServersTile = ({ servers, isSingle }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.nrCores;\n  }, 0);\n\n  const cores = [];\n  servers.map(sv => {\n    const index = cores.findIndex(core => core.nrCores === sv.nrCores);\n    if (index > -1) {\n      cores[index].count += 1;\n    } else {\n      cores.push({ count: 1, nrCores: sv.nrCores });\n    }\n\n    return null;\n  });\n\n  function getData() {\n    const data = [];\n\n    cores.map(core => {\n      data.push({\n        value: core.count,\n        description: `${core.nrCores}C`,\n        color: colors[core.nrCores]\n      });\n\n      return null;\n    });\n\n    return data;\n  }\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDns} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={servers.length} />\n        <StringLabel text={isSingle ? 'Server' : 'Total servers'} />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"first-column\">\n          <div className=\"value\">{total}</div>\n          <div className=\"label\">Cores</div>\n        </div>\n\n        <div className=\"second-column\">\n          <div className=\"bar-chart\">\n            <HorizontalBar\n              height={36}\n              showTextIn\n              fontColor=\"#fff\"\n              fontWeight=\"bold\"\n              data={getData()}\n            />\n          </div>\n          <div className=\"label\">Server Cores Distribution</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nexport default class HorizontalBar extends Component {\n  constructor(props) {\n    super(props);\n    //\n    this.state = {\n      listBars: [],\n      data: this.props.data\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!_.isEqual(this.props, prevProps)) {\n      this.setState(state => ({\n        ...state,\n        listBars: this.getListBarWithOtherParameters(),\n        data: this.props.data\n      }));\n    }\n  }\n\n  componentDidMount() {\n    this.setState(state => ({\n      ...state,\n      listBars: this.getListBarWithOtherParameters(),\n      data: this.props.data\n    }));\n  }\n\n  /**\n   * Make the calculus of total width\n   */\n  calcWidthTotal() {\n    let widthTotal = 0;\n    this.props.data.forEach(bar => {\n      widthTotal = widthTotal + bar.value;\n    });\n    return widthTotal;\n  }\n\n  /**\n   * Returns the same list of bars with position and barWidth\n   */\n  getListBarWithOtherParameters() {\n    const widthTotal = this.calcWidthTotal();\n    let position = 0;\n    let barWidth = 0;\n    const listBars = this.props.data.map(bar => {\n      position = position + barWidth;\n      barWidth = (bar.value * 100) / widthTotal;\n      bar = Object.assign({ position: position, barWidth: barWidth }, bar);\n      return bar;\n    });\n    return listBars;\n  }\n\n  /**\n   * OnClick Event\n   */\n  onClick(evt, bar) {\n    Object.assign(evt, { bar: bar });\n    if (this.props.onClick) {\n      this.props.onClick(evt);\n    }\n  }\n\n  /**\n   * Returns a new calculated rgb color\n   */\n  randomColor() {\n    const r = Math.floor(Math.random() * 255);\n    const g = Math.floor(Math.random() * 255);\n    const b = Math.floor(Math.random() * 255);\n\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  /**\n   * Returns a list of texts of the bars into a div component\n   */\n  getListTextBar(showTextInsteadValue) {\n    const { showTextWithValue } = this.props;\n    const listText = this.state.listBars.map((bar, index) => {\n      return (\n        <div\n          key={index}\n          style={{\n            position: 'relative',\n            float: 'left',\n            width: `${bar.barWidth}%`,\n            fontSize: '90%'\n          }}\n          onClick={e => this.onClick(e, bar)}\n        >\n          {showTextInsteadValue && bar.name}\n          {showTextInsteadValue && bar.name && showTextWithValue ? ': ' : ''}\n          {(!showTextInsteadValue || showTextWithValue) && (bar.description || bar.value || '')}\n        </div>\n      );\n    });\n    return listText;\n  }\n\n  renderBars() {\n    const listBars = [];\n    const { showTextWithValue, showTextIn, showValueIn } = this.props;\n\n    listBars.push(\n      this.state.listBars.map((bar, index) => {\n        return (\n          <g key={index} onClick={e => this.onClick(e, bar)}>\n            <rect\n              width={`${bar.barWidth + 0.1}%`}\n              height={this.props.height}\n              style={{\n                fill: bar.color || this.randomColor()\n              }}\n              x={`${bar.position}%`}\n            />\n            {(this.props.showTextIn || this.props.showValueIn) && (\n              <text\n                style={{ fill: this.props.fontColor, fontSize: '90%' }}\n                fontWeight={this.props.fontWeight || 'normal'}\n                x={`${bar.position + (bar.barWidth + 0.1) / 2}%`}\n                y=\"50%\"\n                dy=\"0.35em\"\n              >\n                {showTextIn && bar.name}\n                {bar.name && showTextIn ? ': ' : ''}\n                {(showValueIn || showTextWithValue) && (bar.description || bar.value || '1')}\n              </text>\n            )}\n            <title>{`${bar.name || ''}${bar.name ? ': ' : ''}${bar.description ||\n              bar.value ||\n              '1'}`}</title>\n          </g>\n        );\n      })\n    );\n    return listBars;\n  }\n\n  renderLabel(showTextInsteadValue) {\n    return (\n      <div\n        id={`${this.props.id}_text`}\n        style={{\n          textAlign: 'left',\n          display: 'flex',\n          width: '100%'\n        }}\n      >\n        {this.getListTextBar(showTextInsteadValue)}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.props.showTextUp || this.props.showValueUp) &&\n          this.renderLabel(this.props.showTextUp)}\n        <svg id={this.props.id} width=\"100%\" height={this.props.height}>\n          {this.renderBars()}\n        </svg>\n        {(this.props.showTextDown || this.props.showValueDown) &&\n          this.renderLabel(this.props.showTextDown)}\n      </React.Fragment>\n    );\n  }\n}\n\nHorizontalBar.propTypes = {\n  data: PropTypes.array.isRequired,\n  id: PropTypes.string,\n  height: PropTypes.number,\n  showTextIn: PropTypes.bool,\n  showTextUp: PropTypes.bool,\n  showTextDown: PropTypes.bool,\n  showTextWithValue: PropTypes.bool,\n  showValueIn: PropTypes.bool,\n  showValueUp: PropTypes.bool,\n  showValueDown: PropTypes.bool,\n  fontColor: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nHorizontalBar.defaultProps = {\n  height: 30,\n  showTextIn: false,\n  showTextUp: false,\n  showTextDown: false,\n  showTextWithValue: true,\n  showValueIn: false,\n  showValueUp: false,\n  showValueDown: false,\n  fontColor: 'white',\n  id: 'hsbar'\n};\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport './DatabasesTile.local.scss';\n\nexport const DatabasesTile = ({ servers }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.totalDBs;\n  }, 0);\n\n  const dbs = {\n    eelic_count: 0,\n    selic_count: 0\n  };\n  servers.map(sv => {\n    dbs.eelic_count += sv.eelic_count;\n    dbs.selic_count += sv.selic_count;\n\n    return null;\n  });\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDatabase} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={total} />\n        <StringLabel text=\"Total databases\" />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"info\">\n          <div className=\"first-column\">\n            <div className=\"value-eed\">{dbs.eelic_count}</div>\n            <div className=\"label\">Enterprise Edition Databases</div>\n          </div>\n          <div className=\"second-column\">\n            <div className=\"value-sed\">{dbs.selic_count}</div>\n            <div className=\"label\">Standard Edition Databases</div>\n          </div>\n        </div>\n        <div className=\"bar-chart\">\n          <HorizontalBar\n            height={8}\n            data={[\n              { value: dbs.eelic_count, color: '#19AADE' },\n              { value: dbs.selic_count, color: '#7D3AC1' }\n            ]}\n          />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* getBeVersion() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_VERSION);\n    yield put(actions.getBeVersion.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeVersion.dispatchFail());\n  }\n}\n\nfunction* getBeLicence() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_LICENCE);\n    yield put(actions.getBeLicence.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeLicence.dispatchFail());\n  }\n}\n\nfunction* getBeHeath() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_HEALTH);\n    yield put(actions.getBeHealth.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeHealth.dispatchFail());\n  }\n}\n\nexport function* BeLicenceEffect() {\n  yield takeEvery(actions.getBeLicence.getLoadingAction(), getBeLicence);\n}\n\nexport function* BeHealthEffect() {\n  yield takeEvery(actions.getBeHealth.getLoadingAction(), getBeHeath);\n}\n\nexport function* BeVersionEffect() {\n  yield takeEvery(actions.getBeVersion.getLoadingAction(), getBeVersion);\n}\n","import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './TotalJobsCount.local.scss';\n\nexport const TotalJobsCount = ({ jobs, status }) => {\n  const jobsTotal = () => {\n    return (\n      <div className=\"tooltip-container\">\n        <div className=\"row executing\">\n          <span className=\"label\"> EXECUTING:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'EXECUTING').length}</span>\n        </div>\n        <div className=\"row succeeded\">\n          <span className=\"label\"> SUCCEEDED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SUCCEEDED').length}</span>\n        </div>\n        <div className=\"row scheduled\">\n          <span className=\"label\"> SCHEDULED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SCHEDULED').length}</span>\n        </div>\n        <div className=\"row delayed\">\n          <span className=\"label\">DELAYED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'DELAYED').length}</span>\n        </div>\n        <div className=\"row aborted\">\n          <span className=\"label\">ABORTED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'ABORTED').length}</span>\n        </div>\n        <div className=\"row failed\">\n          <span className=\"label\">FAILED: </span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'FAILED').length}</span>\n        </div>\n        <div className=\"row killed\">\n          <span className=\"label\">KILLED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'KILLED').length}</span>\n        </div>\n      </div>\n    );\n  };\n\n  if (status) {\n    return (\n      <div className=\"count-jobs\">\n        {jobs.length} {status} {jobs.length === 1 ? 'job' : 'jobs'}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"count-jobs\">\n      <LightTooltip placement=\"bottom\" title={jobsTotal()}>\n        <span>{jobs.length}</span>\n      </LightTooltip>{' '}\n      total jobs\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    backgroundColor: '#fff',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: '700',\n    fontFamily: 'Open Sans',\n    boxShadow: '0px 4px 8px rgba(4, 17, 37, 0.1)',\n    borderRadius: '8px'\n  }\n}))(Tooltip);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getAlias(name) {\n  return RestClient.get(`/alias/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchAlias(name, body) {\n  return RestClient.patch(`/alias/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postAlias(body) {\n  return RestClient.post('/alias', body, {\n    page_size: 2147483645\n  });\n}\n","import { actions } from 'session/store/actions';\nimport { actionStates } from 'shared/lib';\nimport { fromJS } from 'immutable';\n\nexport const initialState = {\n  login: {\n    status: '',\n    errors: []\n  },\n  authorization: {\n    status: actionStates.LOADING\n  },\n  currentUser: {\n    name: '',\n    details: {}\n  },\n  beVersion: ''\n};\n\nexport const reducerActions = {\n  // authorization Check\n  [actions.checkAuthorization.getLoadingAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.LOADING),\n  [actions.checkAuthorization.getSuccessAction()]: (state, payload) =>\n    state\n      .set(\n        'currentUser',\n        fromJS({\n          name: payload.name,\n          details: payload.details\n        })\n      )\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.checkAuthorization.getFailAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.FAIL),\n\n  // login\n  [actions.login.getLoadingAction()]: state =>\n    state.setIn(['login', 'status'], actionStates.LOADING),\n  [actions.login.getSuccessAction()]: state =>\n    state\n      .setIn(['login', 'status'], actionStates.SUCCESS)\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.login.getFailAction()]: (state, errors) =>\n    state.setIn(['login', 'status'], actionStates.FAIL).setIn(['login', 'errors'], fromJS(errors)),\n  [actions.getBeVersion.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beVersion', payload.data);\n    return nextState;\n  },\n  [actions.getBeLicence.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beLicence', payload.data);\n    return nextState;\n  },\n  [actions.getBeHealth.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beHealth', payload.data);\n    return nextState;\n  }\n};\n","import { checkDeamonStatus } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  await store.dispatch(checkDeamonStatus());\n\n  throw new Error('polling-daemon');\n}\n\nexport const daemonPoller = withPolling(task, 60000);\n","import { actions } from 'dashboard/store/actions';\n\nexport const initialState = {\n  filterStatus: 'ALL'\n};\n\nexport const reducerActions = {\n  [actions.setFilterStatus.getEventAction()]: (state, status) => {\n    const nextState = state.set('filterStatus', status);\n    return nextState;\n  }\n};\n","import { actions } from 'shared/store/actions';\nimport { actions as sessionActions } from 'session/store/actions';\nimport { fromJS } from 'immutable';\nimport moment from 'moment';\n\nlet sessionGlobalFilters = {\n  startDate: moment()\n    .subtract(7, 'd')\n    .startOf('day')\n    .unix(),\n  endDate: moment()\n    .add(1, 'days')\n    .startOf('day')\n    .unix()\n};\n\nsessionGlobalFilters = JSON.parse(localStorage.getItem('global-filters')) || sessionGlobalFilters;\n\nexport const initialState = {\n  globalFilters: sessionGlobalFilters,\n  jobs: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false,\n    callFailed: false,\n    reason: ''\n  },\n  connections: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  searchResults: {\n    jobs: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    },\n    processes: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    }\n  }\n};\n\nexport const reducerActions = {\n  [actions.setGlobalFilters.getSuccessAction()]: (state, payload) => {\n    const nextState = state\n      .setIn(['globalFilters', 'startDate'], payload.startDate.unix())\n      .setIn(['globalFilters', 'endDate'], payload.endDate.unix());\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.login.getSuccessAction()]: state => {\n    const nextState = state\n      .setIn(\n        ['globalFilters', 'startDate'],\n        moment()\n          .subtract(7, 'd')\n          .startOf('day')\n          .unix()\n      )\n      .setIn(\n        ['globalFilters', 'endDate'],\n        moment()\n          .add(1, 'days')\n          .startOf('day')\n          .unix()\n      );\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.logout.getSuccessAction()]: state => {\n    localStorage.removeItem('global-filters');\n    return state;\n  },\n  [actions.getJobs.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        content: payload.data.invocations,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false,\n        callFailed: false,\n        reason: ''\n      })\n    ),\n  [actions.getJobs.getFailAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        callFailed: true,\n        fetching: false,\n        page_count: 1,\n        content: [],\n        total_count: 0,\n        reason: payload.reason\n      })\n    ),\n  [actions.getJobs.getLoadingAction()]: state => state.setIn(['jobs', 'fetching'], true),\n  [actions.getConnections.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'connections',\n      fromJS({\n        content: payload.data.accounts,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getConnections.getLoadingAction()]: state =>\n    state.setIn(['connections', 'fetching'], true),\n  [actions.searchJobs.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'jobs'],\n      fromJS({\n        content: payload.data.invocations,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchJobs.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], true),\n  [actions.searchJobs.getFailAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], false),\n  [actions.searchProcesses.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'processes'],\n      fromJS({\n        content: payload.data.processes,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchProcesses.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], true),\n  [actions.searchProcesses.getFailAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], false)\n};\n","import { actions } from 'core/store/actions';\n\nexport const initialState = {\n  notifications: [],\n};\n\nexport const reducerActions = {\n  [actions.addNotifications.getEventAction()]: (state, payload) => state\n    .merge('notifications', payload),\n  [actions.removeNotification.getEventAction()]: (state, notificationIndex) => state\n    .removeIn(['notifications', notificationIndex]),\n};\n","import { notificationActions } from './notification.action';\n\nexport const actions = {\n  ...notificationActions,\n};\n","import {\n  TextParameter,\n  BooleanParameter,\n  IntegerParameter,\n  EmailParameter,\n  PhoneNumberParameter,\n  ProcessParameter,\n  VariadicParameter,\n  AccountParameter,\n  FQNameParameter,\n  PasswordParameter,\n  MultilineParameter,\n  ReplvaluesParameter,\n  UuidParameter\n} from './variants';\n\nimport { want, wantComponent } from 'shared/lib/want';\n\n/**\n * Main switcher for Parameter fields.\n */\nexport const WantParameter = wantComponent(\n  want(\n    {\n      text: TextParameter,\n      number: IntegerParameter,\n      select: TextParameter,\n      phone: PhoneNumberParameter,\n      boolean: BooleanParameter,\n      email: EmailParameter,\n      fqname: FQNameParameter,\n      account: AccountParameter,\n      process: ProcessParameter,\n      variadic_parameter: VariadicParameter,\n      password: PasswordParameter,\n      multiline: MultilineParameter,\n      replvalues: ReplvaluesParameter,\n      uuid: UuidParameter\n    },\n    TextParameter,\n    props => {\n      const { editor } = props.parameter;\n\n      return editor.type;\n    }\n  )\n);\n\nexport default WantParameter;\n","import { mapAccountsTree } from '../../../../explorer/store/mappers';\n\nexport const ADDITIONAL_ACCOUNT_FILTERS = {\n  dbms: [\n    filterDbmsByShell.bind(null, 'shell'),\n    filterDbmsByShell.bind(null, 'target_shell'),\n  ],\n  target_shell: [filterShellByPlatform],\n  shell: [filterShellByPlatform],\n};\n\nfunction filterDbmsByShell(shellFieldName, accounts, formValues) {\n  accounts = accounts || [];\n  if (!formValues || !formValues[shellFieldName]) {\n    return accounts;\n  }\n\n  const shellAccount = accounts.find((account) => account.name === formValues[shellFieldName]);\n  if (!shellAccount) {\n    return accounts;\n  }\n\n  return accounts.filter(account => account.address === shellAccount.address);\n}\n\nconst PLATFORM_VALUE_TO_TYPE = {\n  Oracle: 'ORACLE',\n  PostgreSQL: 'PGSQL',\n  MySQL: 'MYSQL',\n  'Microsoft SQL Server': 'MSSQL',\n};\n\nfunction filterShellByPlatform(accounts, formValues) {\n  accounts = accounts || [];\n\n  if (!formValues || !formValues.platform) {\n    return accounts;\n  }\n\n  const accountsTree = mapAccountsTree(accounts);\n  const platformTree = accountsTree.find((platform) => platform.name === PLATFORM_VALUE_TO_TYPE[formValues.platform]);\n  if (!platformTree) {\n    return accounts;\n  }\n\n  const platformAddresses = Object.keys(platformTree.servers);\n  return accounts.filter(account => platformAddresses.indexOf(account.address) !== -1);\n}\n","/* eslint-disable */\n\nimport _ from 'lodash';\n\nexport const groupForm = (prototype, form = null) => {\n  if (form === null) {\n    form = {\n      name: null,\n      description: null,\n      prototype: prototype.name,\n      version: prototype.version,\n      groups: [...prototype.groups],\n      values: prototype.fields.map(field => {\n        return { ...field, value: field.deflt };\n      })\n    };\n  }\n\n  if (!form.hasOwnProperty('groups')) {\n    form.groups = [...prototype.groups];\n    form.values = prototype.fields.map(field => {\n      const value = form.values.find(value => value.position === field.position);\n      return {\n        ...value,\n        ...field\n      };\n    });\n  }\n\n  if (form.hasOwnProperty('values')) {\n    const maxPosition = _.max(form.values.map(value => value.position));\n\n    // important point\n    if (form.groups.length > 0) {\n      // Mark any existing groups as non-virtual\n      form.groups = form.groups.map(group => {\n        return { ...group, virtual: false };\n      });\n      // Make sure groups are properly sorted\n      form.groups = _.sortBy(form.groups, 'lower');\n      // First we need to create any virtual groups, if needed\n      let position = 0;\n      while (position <= maxPosition) {\n        // First, find the group of which this value is a member, if any\n        const currentGroup = form.groups.find(\n          group => group.lower <= position && group.upper > position\n        );\n        if (!!currentGroup) {\n          // We already have a group for this position. Leapfrog to the next\n          position = currentGroup.upper;\n        } else {\n          // OK, we couldn't find the current group, so find the next one\n          const nextGroup = form.groups.find(group => group.lower > position);\n          if (!!nextGroup) {\n            // Add a new virtual group that covers this position up to the next group\n            form.groups = [\n              {\n                name: null,\n                virtual: true,\n                lower: position,\n                upper: nextGroup.lower,\n                iteration_limit: 1\n              },\n              ...form.groups\n            ];\n            // Leapfrog\n            position = nextGroup.upper;\n          } else {\n            // We're at the end. Add a covering virtual group\n            form.groups.push({\n              name: null,\n              virtual: true,\n              lower: position,\n              upper: maxPosition + 1,\n              iteration_limit: 1\n            });\n          }\n        }\n      }\n    } else {\n      // We have no groups at all. Create a single virtual group for all values.\n      form.groups.push({\n        name: null,\n        virtual: true,\n        lower: 0,\n        upper: maxPosition + 1,\n        iteration_limit: 1\n      });\n    }\n\n    form.groups = _.sortBy(form.groups, 'lower').map(group => {\n      group.instances = [];\n      return group;\n    });\n    form.values = _.sortBy(form.values, 'position');\n    // OK, we have the groups, now we need to add the instances and fields\n    for (let group of form.groups) {\n      const values = form.values.filter(\n        value => value.position >= group.lower && value.position < group.upper\n      );\n      if (!group.virtual || group.iteration_limit > 1) {\n        // How many instances do we need?\n        const instanceCount = Math.max(\n          1,\n          _.max(values.map(value => (value.value === null ? 1 : value.value.length)))\n        );\n        for (let g = 0; g < instanceCount; g++) {\n          let instance = {\n            instance: g,\n            fields: values.map(value => {\n              let field = {\n                name: value.name,\n                description: value.description,\n                meta: value.meta,\n                position: value.position,\n                data_type: value.data_type,\n                is_repeatable: value.is_repeatable,\n                is_required: value.is_required,\n                values: []\n              };\n              if (Array.isArray(value.value) && value.value.length > g) {\n                if (value.is_repeatable) {\n                  for (let f = 0; f < value.value[g].length; f++) {\n                    field.values.push({\n                      instance: f,\n                      value: value.value[g][f]\n                    });\n                  }\n                } else {\n                  field.values.push({\n                    instance: 0,\n                    value: value.value[g]\n                  });\n                }\n              }\n              return field;\n            })\n          };\n          group.instances.push(instance);\n        }\n      } else {\n        // Iteration limit is 1\n        let instance = {\n          instance: 0,\n          fields: values.map(value => {\n            let field = {\n              name: value.name,\n              description: value.description,\n              meta: value.meta,\n              position: value.position,\n              data_type: value.data_type,\n              is_repeatable: value.is_repeatable,\n              is_required: value.is_required,\n              values: []\n            };\n            if (field.is_repeatable) {\n              if (Array.isArray(value.value)) {\n                for (let f = 0; f < value.value.length; f++) {\n                  field.values.push({\n                    instance: f,\n                    value: value.value[f]\n                  });\n                }\n              }\n            } else {\n              field.values.push({\n                instance: 0,\n                value: value.value\n              });\n            }\n            return field;\n          })\n        };\n        group.instances.push(instance);\n      }\n    }\n    delete form.values;\n  }\n  // For repeating groups and fields, there must always be one \"empty\" group and/or field at the end.\n  for (let group of form.groups) {\n    // if (group.iteration_limit > 1) {\n    //     const instance = _.last(group.instances)\n    //     const values = _.flatten(instance.fields.map(field => field.values.map(value => value.value)))\n    //     // If at least one value is non-null, then we need to add a new empty group at the end.\n    //     if (!_.every(values, value => value === null)) {\n    //         // OK, we need to add another empty instance\n    //         group.instances.push({\n    //             instance: instance.instance + 1,\n    //             fields: instance.fields.map(field => {\n    //                 return {\n    //                     ...field,\n    //                     values: []\n    //                 }\n    //             })\n    //         })\n    //     }\n    // }\n\n    // Now we check the individual fields\n    // Each field must have at least one value.\n    // For repeating fields, there must always be a final empty instance.\n    for (let instance of group.instances) {\n      for (let field of instance.fields) {\n        if (field.values.length === 0) {\n          field.values.push({\n            instance: 0,\n            value: null\n          });\n          // } else if (field.is_repeatable) {\n          //     const value = _.last(field.values)\n          //     if (value.value !== null) {\n          //         field.values.push({\n          //             instance: value.instance + 1,\n          //             value: null\n          //         })\n          //     }\n        }\n      }\n    }\n  }\n  return form;\n};\n\nexport const ungroupForm = form => {\n  let packed = {\n    description: form.description,\n    values: []\n  };\n  let names = {};\n  for (const group of form.groups) {\n    for (const instance of group.instances) {\n      for (const field of instance.fields) {\n        names[field.name] = {\n          position: field.position,\n          grouped: !group.virtual || group.iteration_limit > 1,\n          is_repeatable: field.is_repeatable\n        };\n      }\n    }\n  }\n  for (const name in names) {\n    const info = names[name];\n    const group = form.groups.find(\n      group => group.lower <= info.position && group.upper > info.position\n    );\n    if (info.grouped && info.is_repeatable) {\n      // Array of arrays\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        if (_.last(subvalues) === null) {\n          subvalues = _.dropRight(subvalues, 1);\n        }\n        values.push(subvalues);\n        while (Array.isArray(_.last(values)) && _.last(values).length === 0) {\n          values = _.dropRight(values, 1);\n        }\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.grouped) {\n      // Just a plain array\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        values.push(subvalues[0]);\n      }\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.is_repeatable) {\n      // Just a plain array\n      const instance = group.instances[0];\n      let values = instance.fields\n        .find(field => field.name === name)\n        .values.map(value => value.value);\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else {\n      // Simple value\n      const instance = group.instances[0];\n      const value = instance.fields.find(field => field.name === name).values[0].value;\n      packed.values.push({ name, value });\n    }\n  }\n  packed.values = packed.values.filter(value => value.value !== null);\n  return packed;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getPrivileges(name, isAlias) {\n  return RestClient.get(`/entity/${name}/privileges`, {\n    ...(isAlias && { cls: 'alias' }),\n    page_size: 2147483645\n  });\n}\n\n/**\n    privilege: type,\n    enitity_name: entityName,\n    alias: isAlias\n    role: user_or_group.role,\n    role_type: user_or_group.is_group ? 'group' : 'user',\n    explicit_grant: user_or_group.granted.includes(type),\n    explicit_denied: user_or_group.denied.includes(type),\n    action: granted ? 'revoke' : 'grant'\n  }}\n */\nexport async function setPrivileges(data) {\n  const { granted, alias } = data;\n\n  const actions = granted ? ['revoke', 'deny'] : ['grant', 'allow'];\n\n  try {\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[0]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[1]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    return getPrivileges(data.enitity_name, data.alias);\n  } catch (e) {\n    throw new Error('failed');\n  }\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  mdiFileTableBox,\n  mdiDatabase,\n  mdiFileTree,\n  mdiTable,\n  mdiAlertOutline,\n  mdiTableColumnWidth,\n  mdiAlphaPBox,\n  mdiInboxFull,\n  mdiInbox\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nimport './root.local.scss';\n\nconst VerticalUsageBar = ({ usage, className }) => {\n  let fill;\n  if (usage > 75) {\n    fill = '#ED3A4A';\n  } else if (usage > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  return (\n    <div className={className}>\n      <svg viewBox=\"-2 -2 62 102\">\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" height=\"100\" width=\"60\" fill=\"rgba(12, 50, 110, 0.38)\" />\n        <rect x=\"0\" y={100 - usage} rx=\"8\" ry=\"8\" height={usage} width=\"60\" fill={fill} />\n      </svg>\n    </div>\n  );\n};\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nconst SidebarStorageItem = ({ ns, usage, setItem, isSelected }) => (\n  <div\n    className={classnames('sidebar-item', { selected: isSelected })}\n    role=\"button\"\n    onClick={() => setItem(ns)}\n  >\n    <VerticalUsageBar usage={usage} className=\"usage-icon\" />\n    {ns}\n  </div>\n);\n\nexport const StorageSidebar = ({ list, setItem, selectedItem, isLoading }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiFileTableBox} />\n        </SvgIcon>\n        Tablespaces\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          list.map((element, index) => (\n            <SidebarStorageItem\n              isSelected={selectedItem === element.ns}\n              key={index}\n              {...element}\n              setItem={setItem}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst iconMapper = {\n  triggers: { icon: mdiAlertOutline, label: 'Triggers' },\n  tables: { icon: mdiTable, label: 'Tables' },\n  indexes: { icon: mdiTableColumnWidth, label: 'Indexes' },\n  procedures: { icon: mdiAlphaPBox, label: 'Procedures' },\n  packages: { icon: mdiInbox, label: 'Packages' },\n  packageBodies: { icon: mdiInboxFull, label: 'Package Bodies' }\n};\n\nconst objectsSidebarMapper = (setItem, selectedItem, invalidObjects) => (\n  { owner, objects },\n  index\n) => {\n  const isSelected = owner === selectedItem.owner;\n  const invalidChildren = invalidObjects.filter(({ owner: name }) => name === owner);\n  return (\n    <React.Fragment key={index}>\n      <div\n        className={classnames('sidebar-item', {\n          selected: isSelected,\n          'rotate-cw': !isSelected,\n          'rotate-ccw': isSelected\n        })}\n        role=\"button\"\n        onClick={() => setItem({ owner: isSelected ? null : owner, object: null })}\n      >\n        <SvgIcon>\n          <path d={mdiFileTree} />\n        </SvgIcon>\n        {owner}\n      </div>\n      {isSelected &&\n        objects.map((object, i) => {\n          const isObjectSelected = object === selectedItem.object;\n          const isInvalid = invalidChildren.findIndex(({ object: name }) => name === object) !== -1;\n          return (\n            <div\n              key={`${index}_${i}`}\n              className={classnames('child', 'sidebar-item', {\n                selected: isObjectSelected,\n                invalid: isInvalid\n              })}\n              role=\"button\"\n              onClick={() => setItem({ owner, object })}\n            >\n              <SvgIcon>\n                <path d={iconMapper[object].icon} />\n              </SvgIcon>\n              {iconMapper[object].label}\n            </div>\n          );\n        })}\n    </React.Fragment>\n  );\n};\n\nexport const ObjectsSidebar = ({\n  setItem,\n  selectedItem,\n  list,\n  isLoading,\n  invalidObjects\n}) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiDatabase} />\n        </SvgIcon>\n        Schema\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          <div className=\"sidebar-container\">\n            {list.map(objectsSidebarMapper(setItem, selectedItem, invalidObjects))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/jsx-indent-props */\nimport React from 'react';\nimport { mdiArrangeBringToFront, mdiFileTableBox, mdiFlashCircle, mdiHelpRhombusOutline, mdiTable } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Chart } from 'react-google-charts';\nimport classnames from 'classnames';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nconst KPIDisplay = ({ value, suffix, colorFormatting = false }) => {\n  let fill;\n  if (value > 75) {\n    fill = '#ED3A4A';\n  } else if (value > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  const digits = value > 10 ? 0 : 2;\n  const valueString = value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: digits\n  });\n  return (\n    <span style={colorFormatting ? { color: fill } : {}}>\n      {valueString}\n      {suffix}\n    </span>\n  );\n};\n\nconst NoDataComponent = ({ name }) => (\n  <div className=\"content dashed-and-centered\">\n    <SvgIcon>\n      <path d={mdiHelpRhombusOutline} />\n    </SvgIcon>\n    <p>Please select a {name} in order to view its children</p>\n  </div>\n);\n\nconst StorageDetailsList = ({ data, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <Loader>Loading data...</Loader>\n      </Center>\n    );\n  }\n\n  const { tablespace, files } = data;\n\n  if (!tablespace || !tablespace.ns) {\n    return <NoDataComponent name=\"tablespace\" />;\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"detail-row\">\n        <div className=\"ts-name\">\n          <SvgIcon>\n            <path d={mdiFileTableBox} />\n          </SvgIcon>\n          {tablespace.ns}\n        </div>\n        <div className=\"details\">\n          <div className=\"block\">\n            <div className=\"top\">Total:</div>\n            <div>\n              <KPIDisplay value={tablespace.totalGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used size:</div>\n            <div>\n              <KPIDisplay value={tablespace.usedGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used %:</div>\n            <div>\n              <KPIDisplay value={tablespace.usage} suffix=\"%\" colorFormatting />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free size:</div>\n            <div>\n              <KPIDisplay value={tablespace.freeGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free %:</div>\n            <div>\n              <KPIDisplay value={tablespace.freePerc} suffix=\"%\" />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {files.map(({ PCT_USED, FILE_NAME, SIZE_MB, MAXSIZE_MB }, index) => {\n        const filePath = FILE_NAME.split('/');\n        const [fileName, extension] = filePath[filePath.length - 1].split('.');\n        return (\n          <div key={index} className=\"detail-row\">\n            <div className=\"file-name\">\n              <SvgIcon>\n                <path d={mdiTable} />\n              </SvgIcon>\n              {fileName}\n              <span className=\"extension\">.{extension}</span>\n            </div>\n            <div className=\"details\">\n              <div className=\"block\">\n                <div className=\"top\">Used %:</div>\n                <div>\n                  <KPIDisplay value={PCT_USED} suffix=\"%\" colorFormatting />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Size:</div>\n                <div>\n                  <KPIDisplay value={SIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Max size:</div>\n                <div>\n                  <KPIDisplay value={MAXSIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n      <div>\n        <Center>\n          <Chart\n            width=\"700px\"\n            height=\"400px\"\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n              ['Task', 'Hours per Day'],\n              [`Free  ${tablespace.freeGB.toFixed(2)} GB`, tablespace.freePerc],\n              [`Used  ${tablespace.usedGB.toFixed(2)} GB`, tablespace.usage]\n            ]}\n            options={{\n              backgroundColor: 'transparent',\n              is3D: true,\n              colors: ['rgb(52, 204, 136)', 'rgb(237, 58, 74)']\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n        </Center>\n      </div>\n    </div>\n  );\n};\n\nexport const StorageViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiTable} />\n        </SvgIcon>\n        Data Files\n      </div>\n      <StorageDetailsList data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport const ObjectsViewer = ({ data, isLoading, sidebarDisabled, protocol }) => {\n  const objectsDataMapper = SystemExplorerFeatureUtil.getObjectsDataMapper(protocol);\n  if (!!objectsDataMapper && data && data.length > 0) {\n    data = data.slice().map(objectsDataMapper);\n  }\n\n  return (\n    <div className={classnames('viewer', {\n        'sidebar-disabled': sidebarDisabled\n      })}\n    >\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiArrangeBringToFront} />\n        </SvgIcon>\n        Objects\n      </div>\n      {isLoading ? (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      ) : (\n        <div className=\"content\">\n          <Overflow>\n            {!data || data.length === 0 ? (\n              <NoDataComponent name=\"object\" />\n            ) : (\n              data.map(({ OBJECT_NAME, CREATED, OBJECT_ID, LAST_DDL_TIME }) => {\n                return (\n                  <div key={OBJECT_ID} className=\"detail-row\">\n                    <div className=\"file-name\">\n                      <SvgIcon>\n                        <path d={mdiFlashCircle} />\n                      </SvgIcon>\n                      {OBJECT_NAME}\n                    </div>\n                    <div className=\"details\">\n                      <div className=\"object-block\">\n                        <div className=\"top\">Last DDL Time</div>\n                        <div>{LAST_DDL_TIME}</div>\n                      </div>\n                      <div className=\"object-block\">\n                        <div className=\"top\">Created</div>\n                        <div>{CREATED}</div>\n                      </div>\n                      {/* Designs have some buttons here */}\n                    </div>\n                  </div>\n                );\n              })\n            )}\n          </Overflow>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { STATUS_TYPES } from '../../store/selectors';\n\nimport './StatusLabel.local.scss';\n\nconst STATUS_LABEL_MAP = {\n  [STATUS_TYPES.down]: 'Down',\n  [STATUS_TYPES.up]: 'Up',\n  [STATUS_TYPES.error]: 'Has errors',\n  [STATUS_TYPES.notConnected]: 'Not connected',\n  [STATUS_TYPES.notFound]: 'Not found',\n};\n\nexport class StatusLabel extends React.PureComponent {\n  render() {\n    const {\n      status\n    } = this.props;\n\n    return (\n      <div className={`status ${status.replace(/\\s/g, '-')}`} role=\"presentation\">{STATUS_LABEL_MAP[status]}</div>\n    );\n  }\n}\n\nStatusLabel.propTypes = {\n  status: string\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LayersOutlinedIcon from '@material-ui/icons/LayersOutlined';\nimport { mdiClipboardPlayMultipleOutline, mdiShieldCheckOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nexport const navigationItems = [\n  {\n    title: <FormattedMessage id=\"navigation.dashboard\" />,\n    to: '/dashboard',\n    id: 'dashboard',\n    icon: <DashboardOutlinedIcon />,\n    qaClass: 'qa-nav-dashboard'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.jobs\" />,\n    to: '/jobs',\n    id: 'jobs',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiClipboardPlayMultipleOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-jobs'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.system\" />,\n    to: '/system',\n    id: 'system',\n    icon: <LayersOutlinedIcon />,\n    qaClass: 'qa-nav-system',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.entitites\" />,\n        to: '/system/entities',\n        qaClass: 'qa-nav-entities'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.explorer\" />,\n        to: '/system/explorer',\n        qaClass: 'qa-nav-explorer'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.user.and.groups\" />,\n        to: '/system/mas-accounts/users',\n        qaClass: 'qa-nav-mas-accounts'\n      }\n    ]\n  },\n  {\n    title: <FormattedMessage id=\"navigation.compliance\" />,\n    to: '/compliance',\n    id: 'compliance',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiShieldCheckOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-compliance',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.licensing\" />,\n        to: '/compliance/licensing',\n        qaClass: 'qa-nav-licensing'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.collection\" />,\n        to: '/compliance/license-collection',\n        qaClass: 'qa-nav-license-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      }\n    ]\n  }\n];\n","import { getQuery, getInvocationStatus } from './selectors';\n\nimport { InvocationStatus } from './constants';\n\nimport { fetchInvocation } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  const { uuid, process } = getQuery(store.getState());\n\n  if (uuid) {\n    await store.dispatch(fetchInvocation(uuid, process));\n  }\n\n  const STATUS = getInvocationStatus(store.getState());\n\n  switch (STATUS) {\n    case InvocationStatus.EXECUTING:\n    case InvocationStatus.SCHEDULED:\n    case InvocationStatus.DELAYED:\n    case 'NOT_FETCHED':\n      console.log('[invocation-poller] - polling', STATUS); // eslint-disable-line\n      throw new Error('need to poll invocation...');\n    default:\n      break;\n  }\n\n  console.log('[invocation-poller] - done'); // eslint-disable-line\n\n  return Promise.resolve();\n}\n\nexport const invocationPoller = withPolling(task, 5000);\n","import React from 'react';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors }) => {\n  let content;\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          {errors.map((error, index) => {\n            return <p key={index}>• {error}</p>;\n          })}\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              {output.map((row, index) => {\n                return (\n                  <p className=\"row\" key={`${row.data.text}-${index}`}>\n                    {row.data.text}\n                  </p>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        {output.map((row, index) => {\n          return (\n            <p className=\"row\" key={index}>\n              {row.data.text}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return content;\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { fromJS } from 'immutable';\n\nexport const bindReducer = (initialState, actions) => (state = fromJS(initialState), action) => {\n  if (typeof actions[action.type] === 'function') {\n    return actions[action.type](state, action.payload);\n  }\n\n  return state;\n};\n","export const actionStates = {\n  LOADING: 'LOADING',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS',\n};\n","import { actionStates } from 'shared/lib';\n\nexport class ActionCreatorHandler {\n  constructor(action) {\n    this.action = action;\n  }\n\n  getEventAction() {\n    return this.action;\n  }\n\n  getLoadingAction() {\n    return `${this.action}__${actionStates.LOADING}`;\n  }\n\n  getFailAction() {\n    return `${this.action}__${actionStates.FAIL}`;\n  }\n\n  getSuccessAction() {\n    return `${this.action}__${actionStates.SUCCESS}`;\n  }\n\n  dispatchLoading(payload) {\n    return {\n      type: this.getLoadingAction(),\n      payload,\n    };\n  }\n\n  dispatchFail(payload) {\n    return {\n      type: this.getFailAction(),\n      payload,\n    };\n  }\n\n  dispatchSuccess(payload) {\n    return {\n      type: this.getSuccessAction(),\n      payload,\n    };\n  }\n\n  dispatchEvent(payload) {\n    return {\n      type: this.action,\n      payload,\n    };\n  }\n}\n","export const slugify = (text) => text.toString().toLowerCase()\n  .trim()\n  .replace(/[^a-z0-9 -]/g, '')\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-');\n","export const createUrl = (url, params = {}) => {\n  if (typeof params !== 'object' || !params) {\n    return url;\n  }\n  let path = url;\n  const query = { ...params };\n  Object.keys(query).forEach((key) => {\n    if (typeof query[key] !== 'undefined' && path.includes(`:${key}`)) {\n      path = path.replace(`:${key}`, query[key]);\n      delete query[key];\n    }\n  });\n\n  if (!Object.keys(query).length || !Object.keys(query).find(((key) => typeof query[key] !== 'undefined'))) {\n    return path;\n  }\n\n  const paramsUrl = Object.keys(query).filter((key) => query[key])\n    .map((key) => `${key}=${encodeURIComponent(query[key])}`)\n    .join('&');\n  return `${path}${'?'.concat(...paramsUrl)}`;\n};\n","export const numberPretty = (number) => {\n  if (!number) {\n    return number;\n  }\n  const parts = number.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n","const formatNumber = (number, pow, decimals = 1) => (number / (10 ** pow)).toFixed(decimals);\n\nexport const smartNumber = (number, decimals = false) => {\n  if (typeof number !== 'number') {\n    return number;\n  }\n  if (number < 10 ** 3) {\n    if (typeof decimals === 'number') {\n      return +number.toFixed(+decimals);\n    }\n    return number;\n  }\n\n  if (number < 10 ** 6) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 3, decimals)} K`;\n    }\n    return `${formatNumber(number, 3)} K`;\n  }\n\n  if (number < 10 ** 9) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 6, decimals)} M`;\n    }\n    return `${formatNumber(number, 6)} M`;\n  }\n\n  if (typeof decimals === 'number') {\n    return `${formatNumber(number, 9, decimals)} B`;\n  }\n  return `${formatNumber(number, 9)} B`;\n};\n","export const capitalizeFirstLetter = (s) => s.toString().charAt(0).toUpperCase() + s.slice(1);\n","export const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n","/* eslint-disable */\nexport const phoneNumberPattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n","export const urlPattern = /^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)$/;\n","export const randomStringGenerator = (length = 5) => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n  for (let i = 0; i < length; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n","export const generateUniqueId = () => btoa(Math.floor(new Date().valueOf() * Math.random())).replace(/=/g, '').slice(0, 16);\n","export const emptyFunc = () => null;\n","export const delay = (timer) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve();\n  }, timer);\n});\n","import moment from 'moment';\n\nimport { isBeforeDay } from './isBeforeDay';\n\nexport function isInclusivelyAfterDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n  return !isBeforeDay(a, b);\n}\n","const STATES = {\n  loading: 'LOADING',\n  fail: 'FAIL',\n  success: 'SUCCESS'\n};\n\nexport const SEPARATOR = '__';\n\nexport function type(name, stateKey) {\n  const state = STATES[stateKey];\n\n  if (state) {\n    return name + SEPARATOR + state;\n  }\n\n  return name;\n}\n\n/**\n *\n * These could be written as classes with static methods.\n *\n * */\n\nexport const types = {\n  action: type,\n  loading: function loadingType(name) {\n    return type(name, 'loading');\n  },\n  success: function successType(name) {\n    return type(name, 'success');\n  },\n  fail: function failType(name) {\n    return type(name, 'fail');\n  }\n};\n\nexport const creators = {\n  action: function action(name, payload) {\n    return { type: name, payload };\n  },\n  loading: function loadingAction(name, payload) {\n    return { type: type(name, 'loading'), payload };\n  },\n  success: function successAction(name, payload) {\n    return { type: type(name, 'success'), payload };\n  },\n  fail: function failAction(name, payload) {\n    return { type: type(name, 'fail'), payload };\n  }\n};\n","import { produce } from 'immer';\n\nfunction unchanged(state) {\n  return state;\n}\n\nexport function createReducer(reducers, initialState = {}) {\n  const reducerInitialState = reducers.initialState || initialState;\n\n  return function r(state = reducerInitialState, action) {\n    const { type } = action;\n\n    if (!type) {\n      console.error('[createReducer] action does not have a type', action); // eslint-disable-line\n      return unchanged(state);\n    }\n\n    const reducer = reducers[action.type];\n\n    if (reducer) {\n      return produce(state, nextState => {\n        reducer(nextState, action, state);\n      });\n    }\n\n    return unchanged(state);\n  };\n}\n","import moment from 'moment';\nimport _ from 'lodash';\n\nexport function getWorkloadData(jobs, dateRange) {\n  const isSingleDay =\n    moment(dateRange.currentDate).format('MMM D YY') ===\n    moment(dateRange.endDate).format('MMM D YY');\n\n  if (jobs.length === 0) return [];\n\n  const jobsWithFormattedInvokedDate = _.orderBy(jobs, ['date_invoke'], ['asc']).map(job => ({\n    ...job,\n    date_invoke: isSingleDay\n      ? `${moment(job.date_invoke).format('H')}:00`\n      : moment(job.date_invoke).format('MMM D YY')\n  }));\n  const groupJobsByDate = _.groupBy(jobsWithFormattedInvokedDate, 'date_invoke');\n  const data = [];\n\n  // if no process was executed during selected interval, simply return an empty array\n  if (Object.keys(groupJobsByDate).length === 0) {\n    return [];\n  }\n\n  Object.keys(groupJobsByDate).forEach(date => {\n    const item = { name: date, SUCCEEDED: 0, FAILED: 0, ABORTED: 0, total: 0 };\n    groupJobsByDate[date].forEach(el => {\n      item[el.status]++;\n      if (el.status === 'SUCCEEDED' || el.status === 'FAILED' || el.status === 'ABORTED') {\n        item.total++;\n      }\n    });\n\n    data.push(item);\n  });\n\n  // display all days between the first one that run a process and the last one\n  // or all hours from 0->23\n  const intervalArray = [];\n  const daylist = isSingleDay ? getHoursArray(dateRange) : getDaysArray(dateRange);\n  const totalDays = daylist.reduce((o, key) => ({ ...o, [key]: '' }), {});\n\n  // update the total days from the interval array with the days that have some processes executed\n  data.forEach(day => {\n    totalDays[day.name] = day;\n  });\n\n  Object.keys(totalDays).forEach(date => {\n    // for the days in the interval that have no executed process, add an empty entry\n    if (typeof totalDays[date] === 'string') {\n      totalDays[date] = {\n        name: date,\n        SUCCEEDED: 0,\n        FAILED: 0,\n        ABORTED: 0,\n        total: 0\n      };\n    }\n    intervalArray.push(totalDays[date]);\n  });\n\n  return intervalArray;\n}\n/**\n * Creates an array for the selected interval of days\n */\nfunction getDaysArray(dateRange) {\n  let { currentDate } = dateRange;\n  const { endDate } = dateRange;\n  const dateArray = [];\n\n  while (currentDate <= endDate) {\n    dateArray.push(moment(currentDate).format('MMM D YY'));\n    currentDate = moment(currentDate).add(1, 'days');\n  }\n\n  return dateArray;\n}\n\n/**\n *\n * Creates an array for all the hours in a day 0 -> 23\n */\nfunction getHoursArray() {\n  const dateArray = [];\n\n  for (let i = 0; i < 24; i++) {\n    dateArray.push(`${i}:00`);\n  }\n  return dateArray;\n}\n","import { CheckAuthorizationEffect } from './check-authorization/check-authorization.effect';\nimport { LoginEffect } from './login/login.effect';\nimport { LogoutEffect } from './logout/logout.effect';\nimport { BeHealthEffect, BeLicenceEffect, BeVersionEffect } from './be-version/be-version.effect';\n\nexport const sessionEffects = [\n  CheckAuthorizationEffect,\n  LoginEffect,\n  LogoutEffect,\n  BeVersionEffect,\n  BeLicenceEffect,\n  BeHealthEffect,\n];\n","import { emptyFunc } from 'shared/lib';\n\nexport const tryAsync = async (action, onError = emptyFunc) => {\n  try {\n    await action();\n  } catch (e) {\n    onError(e);\n  }\n};\n","import Cookie from 'js-cookie';\nimport axios from 'axios';\n\nimport { CONSTANTS } from 'config';\nimport { createUrl } from 'shared/lib';\n\nclass RestClientClass {\n  constructor() {\n    this.authentications = {\n      basicAuth: {\n        name: 'Authorization',\n        accessToken: '',\n      },\n    };\n\n    this.baseUrl = CONSTANTS.BASE.HOST;\n\n    if (CONSTANTS.BASE.VERSION) {\n      this.baseUrl = `${CONSTANTS.BASE.HOST}/${CONSTANTS.BASE.VERSION}`;\n    }\n\n    this.client = axios.create({\n      timeout: CONSTANTS.BASE.TIMEOUT,\n      baseURL: this.baseUrl,\n      // withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.get = this.get.bind(this);\n    this.delete = this.delete.bind(this);\n    this.head = this.head.bind(this);\n    this.post = this.post.bind(this);\n    this.put = this.put.bind(this);\n    this.patch = this.patch.bind(this);\n  }\n\n  setBasicAuth() {\n    this.authentications.basicAuth.accessToken = `Basic ${Cookie.get('Authorization')}`;\n  }\n\n  removeBasicAuth() {\n    this.authentications.basicAuth.accessToken = Cookie.remove('Authorization');\n  }\n\n  getRequestConfig() {\n    return {\n      headers: {\n        [this.authentications.basicAuth.name]: this.authentications.basicAuth.accessToken,\n      },\n    };\n  }\n\n  get(path, query) {\n    const url = createUrl(path, query);\n    return this.client.get(url, this.getRequestConfig());\n  }\n\n  delete(path, query) {\n    const url = createUrl(path, query);\n    return this.client.delete(url, this.getRequestConfig());\n  }\n\n  head(path, query) {\n    const url = createUrl(path, query);\n    return this.client.head(url, this.getRequestConfig());\n  }\n\n  post(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.post(url, body, this.getRequestConfig());\n  }\n\n  put(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.put(url, body, this.getRequestConfig());\n  }\n\n  patch(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.patch(url, body, this.getRequestConfig());\n  }\n}\n\nexport const RestClient = new RestClientClass();\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\n\nimport { actionStates } from 'shared/lib';\nimport { loginSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nimport { Form } from './components';\n\nexport class LoginPage extends React.PureComponent {\n  componentDidMount() {\n    Cookie.remove('Authorization');\n  }\n\n  componentDidUpdate() {\n    if (this.props.status === actionStates.SUCCESS) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.login.title\"\n        isLoading={this.props.status === actionStates.LOADING}\n      >\n        <Form\n          isLoading={this.props.status === actionStates.LOADING}\n          errors={this.props.errors}\n          submit={this.props.login}\n          resetErrors={this.props.resetErrors}\n        />\n      </Container>\n    );\n  }\n\n  static path = '/login';\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  errors: PropTypes.object.isRequired,\n  status: PropTypes.oneOf([actionStates.LOADING, actionStates.SUCCESS, actionStates.FAIL, '']).isRequired,\n  login: PropTypes.func.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  errors: loginSelector(state).get('errors'),\n  status: loginSelector(state).get('status'),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (data) => dispatch(actions.login.dispatchLoading(data)),\n  resetErrors: () => dispatch(actions.login.dispatchFail([])),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport LoginGraphic from '../../../../assets/images/login_graphic.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_blue.svg';\nimport MasLogo from '../../../../assets/images/mas_logo_blue.svg';\n\nimport './container.local.scss';\n\nexport class ContainerComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={`${className} flex`}>\n        <div className={`${className}__wrapper`}>\n          <div className=\"header\">\n            <div className=\"mas-logo-container\">\n              <img className=\"img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n            </div>\n            <Typography className={`${className}__title`} variant=\"h3\" component=\"h2\">\n              <FormattedMessage id={this.props.title} />\n            </Typography>\n            {!!this.props.description && (\n              <div className={`${className}__description`}>\n                {this.props.description}\n              </div>\n            )}\n          </div>\n          {this.props.children}\n        </div>\n        <div className={`${className}__graphics`}>\n          <div className=\"logo-container\">\n            <img className=\"img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          </div>\n          <div className=\"graphic-container\">\n            <img className=\"img-responsive\" src={LoginGraphic} alt=\"Login graphic\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  description: PropTypes.string,\n  className: PropTypes.string,\n};\n\nContainerComponent.defaultProps = {\n  className: 'container',\n  description: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { RestErrors } from 'shared/components';\n\nimport './form.local.scss';\n\nexport class FormComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  render() {\n    const { className } = this.props;\n    const restErrors = this.getRestErrors();\n\n    return (\n      <div className={className}>\n        <form onSubmit={this.submitHandler} noValidate autoComplete=\"off\">\n          <div className=\"flex direction-column\">\n            <TextField\n              autoFocus\n              className={`${className}__field`}\n              helperText={this.getError('username')}\n              onChange={this.valueChangeHandler('username')}\n              variant=\"outlined\"\n              label={<FormattedMessage id=\"general.form.username\" />}\n              inputProps={{\n                className: 'qa-login-username',\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n              InputLabelProps={{\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n            />\n\n            <FormControl className={`${className}__field`} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={this.state.showPassword ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.valueChangeHandler('password')}\n                inputProps={{\n                  className: 'qa-login-password',\n                  style: { fontSize: '14px', fontFamily: 'Lato' }\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <div className=\"password-icon\">\n                      <IconButton\n                        className=\"qa-login-toggle-password-visibility\"\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.setShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                        edge=\"end\"\n                        color=\"inherit\"\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </div>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          {restErrors.size > 0 && (\n            <div className={`${className}__errors`}>\n              <RestErrors errors={restErrors} />\n            </div>\n          )}\n          <div className={`${className}__actions flex`}>\n            <Button\n              className=\"qa-login-btn\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                this.props.isLoading || this.state.username === '' || this.state.password === ''\n              }\n            >\n              <FormattedMessage id=\"session.login.button\" />\n            </Button>\n            {/* <div className=\"forgot-password qa-forgot-password\">\n              <FormattedMessage id=\"session.login.forgot-password\" />\n            </div> */}\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  setShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  getError(field) {\n    const error = this.props.errors.find(item => item.get('path') === `.${field}`);\n    if (!error) {\n      return '';\n    }\n\n    return error.get('message') || 'This field is invalid';\n  }\n\n  getRestErrors() {\n    return this.props.errors.filter(\n      item => item.get('path') !== '.username' && item.get('path') !== '.password'\n    );\n  }\n\n  resetErrors() {\n    if (this.props.errors.size) {\n      this.props.resetErrors();\n    }\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    this.props.submit({\n      username: this.state.username,\n      password: this.state.password\n    });\n  }\n\n  valueChangeHandler(name) {\n    return event => {\n      this.resetErrors();\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n}\n\nFormComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nFormComponent.defaultProps = {\n  className: 'form'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { slugify } from 'shared/lib';\n\nimport './rest-errors.local.scss';\n\nexport class RestErrorsComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        {this.props.errors.map((error) => (\n          <div key={slugify(error.get('message'))}>\n            {error.get('message')}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRestErrorsComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nRestErrorsComponent.defaultProps = {\n  className: 'rest-errors',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport './job-item.local.scss';\n\nexport class JobItemComponent extends React.PureComponent {\n  render() {\n    const { extended } = this.props;\n    if (extended) {\n      return (\n        <div className={`${this.props.className} ${this.jobStatus()}`}>\n          <div className=\"status-icon\">{this.props.statusChild}</div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {this.props.job.get('process')}</p>\n                    {this.props.job.get('schedule') && (\n                      <p>Schedule: {this.props.job.get('schedule')}</p>\n                    )}\n                  </>\n                }\n              >\n                <div className=\"name\">{this.formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {this.props.job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"date\">\n                  {moment(this.props.job.get('date_invoke'))\n                    .local()\n                    .format('MMM DD YYYY')}\n                </div>\n              </LimitlessTooltip>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${this.props.className} ${this.jobStatus()}`}>\n        <Link to={`/jobs/job?invocation=${this.props.job.get('uuid')}`}>\n          <div className=\"first-row\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {this.props.job.get('process')}</p>\n                  {this.props.job.get('schedule') && (\n                    <p>Schedule: {this.props.job.get('schedule')}</p>\n                  )}\n                </>\n              }\n            >\n              <div className=\"name\">{this.formatName()}</div>\n            </LimitlessTooltip>\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"time\">\n                {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n          <div className=\"second-row\">\n            {this.props.job.get('user_owner') && (\n              <div className=\"run-by\">\n                <AccountCircleOutlinedIcon />\n                {this.props.job.get('user_owner')}\n              </div>\n            )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('name') && (\n                <div className=\"dbms\">\n                  <SvgIcon>\n                    <Icon path={mdiHexagonMultipleOutline} />\n                  </SvgIcon>\n                  {this.props.job\n                    .get('connections')\n                    .get('dbms')\n                    .get('name')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('shell') &&\n              this.props.job\n                .get('connections')\n                .get('shell')\n                .get('host_address') && (\n                <div className=\"server\">\n                  <StorageIcon />\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('shell') &&\n                    this.props.job\n                      .get('connections')\n                      .get('shell')\n                      .get('host_address')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special')\n                .get('database') && (\n                <div className=\"database\">\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('dbms') &&\n                    this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('protocol_special')\n                      .get('database')}\n                </div>\n              )}\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"date\">\n                {moment(this.props.job.get('date_invoke')).format('MMM DD YYYY')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n\n  jobStatus = () => {\n    switch (this.props.job.get('status')) {\n      case 'EXECUTING':\n        return 'executing';\n      case 'SUCCEEDED':\n        return 'succeeded';\n      case 'SCHEDULED':\n        return 'scheduled';\n      case 'DELAYED':\n        return 'delayed';\n      case 'ABORTED':\n        return 'aborted';\n      case 'FAILED':\n        return 'failed';\n      case 'KILLED':\n        return 'killed';\n      default:\n        return '';\n    }\n  };\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItemComponent.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired,\n  extended: PropTypes.bool,\n  statusChild: PropTypes.element\n};\n\nJobItemComponent.defaultProps = {\n  className: 'job-item',\n  extended: false,\n  statusChild: null\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Center } from 'shared/components';\n\nimport { CustomTooltip, CustomAxisTick } from './components';\n\nimport './workload-graph.local.scss';\n\nexport class WorkloadGraphComponent extends React.PureComponent {\n  render() {\n    if (this.props.data.length === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ResponsiveContainer>\n          <AreaChart\n            data={this.props.data}\n            margin={{ top: 16, right: 5, left: 5, bottom: 16 }}\n            onClick={this.setSingleDay}\n          >\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0.16} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"chartStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0} />\n                <stop offset=\"5%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"95%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickSize={false}\n              axisLine={false}\n              interval=\"preserveStartEnd\"\n              tick={<CustomAxisTick />}\n            />\n            <Tooltip\n              content={<CustomTooltip isSingleDay={this.props.isSingleDay} />}\n              offset={0}\n              cursor={false}\n              viewBox={{ width: 750, height: 144 }}\n              position={{ x: 'auto', y: 0 }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"total\"\n              stroke=\"url(#chartStroke)\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#gradient)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n\n  setSingleDay = e => {\n    if (!this.props.isSingleDay && e && this.props.setSingleDay) {\n      this.props.setSingleDay({\n        startDate: moment(e.activeLabel),\n        endDate: moment(e.activeLabel)\n      });\n    }\n  };\n}\n\nexport default WorkloadGraphComponent;\n\nWorkloadGraphComponent.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nWorkloadGraphComponent.defaultProps = {\n  className: 'workload-graph'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport './custom-tooltip.local.scss';\n\nexport class CustomTooltipComponent extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.label !== this.props.label) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    if (!this.props.active || !this.props.payload || !this.props.payload.length) return null;\n\n    const label = this.props.isSingleDay\n      ? this.props.payload[0].payload.name\n      : moment(this.props.payload[0].payload.name).format('MMM DD YYYY');\n\n    return (\n      <div className={this.props.className} position={{ x: '100%', y: '-100%' }}>\n        {this.props.payload && (\n          <>\n            <div className=\"date\">{label}</div>\n            <div className=\"info-container\">\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.succeeded\" />\n                </div>\n                <div className=\"value success\">{this.props.payload[0].payload.SUCCEEDED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.aborted\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.ABORTED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.failed\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.FAILED}</div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomTooltipComponent;\n\nCustomTooltipComponent.propTypes = {\n  className: PropTypes.string,\n  payload: PropTypes.array,\n  active: PropTypes.bool,\n  label: PropTypes.string\n};\n\nCustomTooltipComponent.defaultProps = {\n  className: 'custom-tooltip',\n  payload: [],\n  active: false,\n  label: ''\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './custom-axis-tick.local.scss';\n\nexport class CustomAxisTickComponent extends React.PureComponent {\n  render() {\n    return (\n      <g transform={`translate(${this.props.x},${this.props.y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill=\"rgba(12, 50, 110, 0.38)\">{this.props.payload.value}</text>\n      </g>\n    );\n  }\n}\n\nexport default CustomAxisTickComponent;\n\nCustomAxisTickComponent.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  payload: PropTypes.object,\n};\n\nCustomAxisTickComponent.defaultProps = {\n  x: null,\n  y: null,\n  payload: {},\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './circle-img.local.scss';\n\nexport class CircleImgComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.image}\n      </div>\n    );\n  }\n}\n\nexport default CircleImgComponent;\n\nCircleImgComponent.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nCircleImgComponent.defaultProps = {\n  className: 'circle-img',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './number-label.local.scss';\n\nexport class NumberLabelComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n\nexport default NumberLabelComponent;\n\nNumberLabelComponent.propTypes = {\n  className: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nNumberLabelComponent.defaultProps = {\n  className: 'number-label',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './string-label.local.scss';\n\nexport class StringLabelComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.text}</div>;\n  }\n}\n\nexport default StringLabelComponent;\n\nStringLabelComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.node.isRequired\n};\n\nStringLabelComponent.defaultProps = {\n  className: 'string-label'\n};\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport './search-input.local.scss';\n\nexport class SearchInputComponent extends PureComponent {\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <>\n        <div className=\"search-icon\">\n          <SearchIcon />\n        </div>\n        <InputBase\n          className=\"search-input-container\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={onChange}\n          inputProps={{\n            className: 'search qa-search',\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchInputComponent;\n\nSearchInputComponent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport classnames from 'classnames';\n\nimport './dropdown.local.scss';\n\nexport class DropdownComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDropdownOpen: false\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isDropdownOpen) {\n      this.setState({ isDropdownOpen: true });\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    let parentWidth;\n\n    if (this.anchorRef && this.anchorRef.current && this.anchorRef.current.offsetWidth) {\n      parentWidth = this.anchorRef.current.offsetWidth;\n    }\n    return (\n      <>\n        {this.props.target(\n          { isOpen: this.state.isDropdownOpen, ref: this.anchorRef },\n          { toggle: this.handleToggle }\n        )}\n        {items && (\n          <Popover\n            open={this.state.isDropdownOpen}\n            anchorEl={this.anchorRef.current}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList className=\"dropdown-menu-container\" style={{ width: parentWidth }}>\n                {items.map((item, index) => (\n                  <MenuItem\n                    className={classnames('', { disabled: item.disabled })}\n                    key={index}\n                    onClick={() => this.onClickCallback(index)}\n                  >\n                    {item.icon && <ListItemIcon className=\"icon\">{item.icon}</ListItemIcon>}\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Popover>\n        )}\n      </>\n    );\n  }\n\n  handleToggle = () => {\n    if (this.props.disabled) {\n      return false;\n    }\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen\n    }));\n  };\n\n  setCloseDropdown = event => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ isDropdownOpen: false });\n  };\n\n  onClickCallback = itemIndex => {\n    this.props.onSelect(itemIndex, this.props.items[itemIndex]);\n    this.setState({ isDropdownOpen: false });\n  };\n}\n\nexport default DropdownComponent;\n\nDropdownComponent.propTypes = {\n  onSelect: PropTypes.func,\n  target: PropTypes.func,\n  items: PropTypes.array,\n  isDropdownOpen: PropTypes.bool\n};\n\nDropdownComponent.defaultProps = {\n  onSelect: () => {},\n  items: [],\n  target: (meta, actions) => (\n    <Button ref={meta.ref} onClick={actions.toggle}>\n      {meta.isOpen ? 'Close' : 'Dropdown'}\n    </Button>\n  ),\n  isDropdownOpen: false\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './small-input.local.scss';\n\nexport const SmallInputComponent = forwardRef(({ value, icon, disabled, ...others }, ref) => (\n  <div\n    ref={ref}\n    className={classnames('small-input', { disabled, active: value.length })}\n  >\n    { icon && <div className=\"icon\">{icon}</div> }\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      {...others}\n    />\n  </div>\n));\n\nSmallInputComponent.propTypes = {\n  icon: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nSmallInputComponent.defaultProps = {\n  icon: null,\n  value: '',\n  disabled: false,\n};\n\nexport default SmallInputComponent;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SingleDatePicker } from 'react-dates';\nimport { mdiCalendarBlank, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './single-date-picker.local.scss';\n\nexport class SingleDatePickerComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: true\n    };\n  }\n\n  render() {\n    const { date, onDateChange, ...others } = this.props;\n\n    return (\n      <div className=\"date-picker-container\">\n        <SingleDatePicker\n          date={date}\n          onDateChange={onDateChange}\n          focused={this.state.focused}\n          onFocusChange={({ focused }) => this.setState({ focused })}\n          id=\"date-picker\"\n          numberOfMonths={1}\n          customInputIcon={\n            <SvgIcon>\n              <Icon path={mdiCalendarBlank} />\n            </SvgIcon>\n          }\n          placeholder=\"Select Date\"\n          isOutsideRange={() => false}\n          readOnly\n          hideKeyboardShortcutsPanel\n          displayFormat=\"MMM DD YYYY\"\n          /** TODO: @Razvan, look at this please. */\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          {...others}\n        />\n      </div>\n    );\n  }\n}\n\nSingleDatePickerComponent.propTypes = {\n  date: PropTypes.object,\n  onDateChange: PropTypes.func.isRequired\n};\n\nSingleDatePickerComponent.defaultProps = {\n  date: null\n};\n\nexport default SingleDatePickerComponent;\n","import React from 'react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArrowLeftRight, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\n\nimport DateRangePickerWrapper from './range-date-range-picker.container';\nimport 'react-dates/initialize'; // necessary for latest version\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport './range-date-picker.local.scss';\n\nexport class RangeDatePicker extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"date-picker-container\">\n        <DateRangePickerWrapper\n          anchorDirection=\"left\"\n          autoFocus={false}\n          block={false}\n          readOnly\n          customArrowIcon={\n            <SvgIcon>\n              <Icon path={mdiArrowLeftRight} />\n            </SvgIcon>\n          }\n          customCloseIcon={null}\n          customInputIcon={null}\n          disabled={false}\n          displayFormat=\"MMM D YYYY\"\n          enableOutsideDays={false}\n          endDateId=\"endDate\"\n          endDatePlaceholderText=\"End Date\"\n          horizontalMargin={0}\n          initialEndDate={null}\n          initialStartDate={moment()}\n          initialVisibleMonth={null}\n          isDayBlocked={() => false}\n          isDayHighlighted={() => false}\n          isOutsideRange={() => false}\n          isRTL={false}\n          keepOpenOnDateSelect={false}\n          minimumNights={0}\n          monthFormat=\"MMMM YYYY\"\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navPosition=\"navPositionTop\"\n          numberOfMonths={2}\n          onClose={() => false}\n          onNextMonthClick={() => false}\n          onPrevMonthClick={() => false}\n          orientation=\"horizontal\"\n          phrases={{\n            calendarLabel: 'Calendar',\n            chooseAvailableEndDate: function noRefCheck() {},\n            chooseAvailableStartDate: function noRefCheck() {},\n            clearDates: 'Clear Dates',\n            closeDatePicker: 'Close',\n            dateIsSelected: function noRefCheck() {},\n            dateIsSelectedAsEndDate: function noRefCheck() {},\n            dateIsSelectedAsStartDate: function noRefCheck() {},\n            dateIsUnavailable: function noRefCheck() {},\n            enterKey: 'Enter key',\n            escape: 'Escape key',\n            focusStartDate: 'Interact with the calendar and add the check-in date for your trip.',\n            hideKeyboardShortcutsPanel: 'Close the shortcuts panel.',\n            homeEnd: 'Home and end keys',\n            jumpToNextMonth: 'Move forward to switch to the next month.',\n            jumpToPrevMonth: 'Move backward to switch to the previous month.',\n            keyboardBackwardNavigationInstructions:\n              'Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardForwardNavigationInstructions:\n              'Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardShortcuts: 'Keyboard Shortcuts',\n            leftArrowRightArrow: 'Right and left arrow keys',\n            moveFocusByOneDay: 'Move backward (left) and forward (right) by one day.',\n            moveFocusByOneMonth: 'Switch months.',\n            moveFocusByOneWeek: 'Move backward (up) and forward (down) by one week.',\n            moveFocustoStartAndEndOfWeek: 'Go to the first or last day of a week.',\n            openThisPanel: 'Open this panel.',\n            pageUpPageDown: 'page up and page down keys',\n            questionMark: 'Question mark',\n            returnFocusToInput: 'Return to the date input field.',\n            roleDescription: 'datepicker',\n            selectFocusedDate: 'Select the date in focus.',\n            showKeyboardShortcutsPanel: 'Open the keyboard shortcuts panel.',\n            upArrowDownArrow: 'up and down arrow keys'\n          }}\n          regular={false}\n          renderCalendarDay={undefined}\n          renderDayContents={text => this.renderDayContents(text)}\n          renderMonthText={null}\n          reopenPickerOnClearDates={false}\n          required={false}\n          screenReaderInputMessage=\"\"\n          showClearDates={false}\n          showDefaultInputIcon={false}\n          small={false}\n          startDateId=\"startDate\"\n          startDatePlaceholderText=\"Start Date\"\n          stateDateWrapper={() => false}\n          withFullScreenPortal={false}\n          withPortal={false}\n          onDatesChange={this.props.onDatesChange}\n          endDate={this.props.endDate}\n          startDate={this.props.startDate}\n          focusedInput={null}\n          hideKeyboardShortcutsPanel\n        />\n      </div>\n    );\n  }\n\n  renderDayContents = text => (\n    <div className=\"wrapper-custom-date\">\n      <div className=\"custom-date\">{text.date()}</div>\n    </div>\n  );\n}\n\nRangeDatePicker.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onDatesChange: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { array, object, oneOfType } from 'prop-types';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline,\n  mdiCancel,\n  mdiHexagonMultipleOutline,\n  mdiDatabase\n} from '@mdi/js';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { LightTooltip, LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Center } from 'shared/components';\n\nimport './JobResults.local.scss';\n\nexport class JobResults extends React.PureComponent {\n  render() {\n    const { jobs, fromSearch } = this.props;\n\n    if (jobs && jobs.size === 0) {\n      if (fromSearch) {\n        return <></>;\n      }\n      return <Center>Job list is empty</Center>;\n    }\n    return <>{this.renderJobsResults(jobs)}</>;\n  }\n\n  renderJobsResults = jobs =>\n    jobs.map((job, index) => (\n      <Link key={index} to={`/jobs/job?invocation=${job.get('uuid')}`}>\n        <div className=\"result-job-row\">\n          <LightTooltip placement=\"bottom-start\" title={job.get('status').toUpperCase()}>\n            <div className=\"job-status-container\">{this.jobStatus(job.get('status'))}</div>\n          </LightTooltip>\n          <div className=\"job-content\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {job.get('process')}</p>\n                  {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                </>\n              }\n            >\n              <div className=\"first-row\">{this.formatName(job.get('process'))}</div>\n            </LimitlessTooltip>\n\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  <ScheduleIcon />\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    ));\n\n  jobStatus = status => {\n    switch (status) {\n      case 'EXECUTING':\n        return (\n          <div className=\"job-status executing\">\n            <SvgIcon>\n              <Icon path={mdiProgressClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SUCCEEDED':\n        return (\n          <div className=\"job-status succeeded\">\n            <SvgIcon>\n              <Icon path={mdiCheckCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SCHEDULED':\n        return (\n          <div className=\"job-status scheduled\">\n            <SvgIcon>\n              <Icon path={mdiCalendarArrowRight} />\n            </SvgIcon>\n          </div>\n        );\n      case 'ABORTED':\n        return (\n          <div className=\"job-status aborted\">\n            <SvgIcon>\n              <Icon path={mdiStopCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'DELAYED':\n        return (\n          <div className=\"job-status delayed\">\n            <SvgIcon>\n              <Icon path={mdiTimelineClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'FAILED':\n        return (\n          <div className=\"job-status failed\">\n            <SvgIcon>\n              <Icon path={mdiAlertRhombusOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'KILLED':\n        return (\n          <div className=\"job-status killed\">\n            <SvgIcon>\n              <Icon path={mdiCancel} />\n            </SvgIcon>\n          </div>\n        );\n      default:\n        return '';\n    }\n  };\n\n  formatName = jobName => {\n    const formattedName = [];\n    const name = jobName.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    return formattedName;\n  };\n}\n\nJobResults.propTypes = {\n  jobs: oneOfType([array, object])\n};\n\nexport default JobResults;\n","import React, { createContext, useContext } from 'react';\nimport { any, node } from 'prop-types';\n\nconst Context = createContext();\n\nexport function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nSwitch.propTypes = {\n  value: any,\n  children: node\n};\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nCase.propTypes = {\n  value: any,\n  children: node\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUITable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport './Table.local.scss';\n\nexport const Table = ({ columns, children, sortBehavior, changeSort, className }) => {\n  return (\n    <MUITable stickyHeader className={className}>\n      <TableHead className=\"sticky-head\">\n        <TableRow>\n          {columns.map(HeaderCell(sortBehavior, changeSort))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {children}\n      </TableBody>\n    </MUITable>\n  );\n};\n\nconst HeaderCell = (sortBehavior, changeSort) => (column, index) => (\n  <TableCell\n    key={`header_column_${index}`}\n    align={column.align}\n    padding={column.padding}\n    sortDirection={sortBehavior ? sortBehavior.order : false}\n    variant={column.variant}\n  >\n    {column.sortKey && (\n      <TableSortLabel\n        active={sortBehavior.sortKey === column.sortKey}\n        direction={sortBehavior.order}\n        onClick={changeSort(column.sortKey, sortBehavior.order === 'asc' ? 'desc' : 'asc')}\n      >\n        {column.component ? column.component() : column.label}\n      </TableSortLabel>\n    )}\n    {!column.sortKey && (\n      column.component ? column.component() : column.label\n    )}\n  </TableCell>\n);\n\nTable.Row = TableRow;\nTable.Cell = TableCell;\n\nTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  sortBehavior: PropTypes.shape({\n    order: PropTypes.string,\n    sortKey: PropTypes.string\n  }),\n  changeSort: PropTypes.func\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nexport class LogoutPage extends React.PureComponent {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.logout.title\"\n        isLoading\n      >\n        <div />\n      </Container>\n    );\n  }\n\n  static path = '/logout';\n}\n\nLogoutPage.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: (data) => dispatch(actions.logout.dispatchLoading(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartTimelineVariant } from '@mdi/js';\n\nimport {\n  Center,\n  CircleImg,\n  JobItem,\n  NumberLabel,\n  RangeDatePicker,\n  StringLabel,\n  WorkloadGraph\n} from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Main, Paper } from 'shared/components/layout';\nimport { filterStatusSelector } from './store/state';\nimport { Header } from 'core/components/Header';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { fetchEntity } from 'entities/actions';\nimport { Search, StatusContainer } from './containers';\n\nimport './root.module.scss';\nimport { ConnectedServersList } from './containers/servers-list/ServersList';\n\nexport class RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n\n    this.onChangeDatesHandler = this.onChangeDatesHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n\n    if (\n      this.props.entitiesStatus.process === 'not-fetched' ||\n      this.props.entitiesStatus.process === 'failed'\n    ) {\n      this.props.request('process');\n    }\n  }\n\n  render() {\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Dashboard\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const averageJobs = Math.round(parseInt(this.props.jobs.get('total_count'), 10) / (days + 1));\n\n    return (\n      <div className={this.props.className}>\n        <Header>\n          <h1 className=\"header-title\">Dashboard</h1>\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Search />\n        <StatusContainer />\n        <div className=\"summary-container\">\n          <div className=\"jobs-container\">\n            {this.props.jobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <>\n                <div className=\"jobs-content\" id=\"jobs-content\">\n                  {this.filteredJobs(this.props.storeFilterStatus)}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"workload-container\">\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Generating Workload Chart</Loader>\n                </Center>\n              ) : (\n                <>\n                  <div className=\"workload-header\">\n                    <CircleImg\n                      image={\n                        <SvgIcon>\n                          <Icon path={mdiChartTimelineVariant} />\n                        </SvgIcon>\n                      }\n                    />\n                    <NumberLabel number={averageJobs} />\n                    <StringLabel\n                      text={\n                        <>\n                          <FormattedMessage id=\"dashboard.jobs\" />/\n                          <FormattedMessage id=\"dashboard.day\" />\n                        </>\n                      }\n                    />\n                  </div>\n                  <div className=\"workload-content\">\n                    <WorkloadGraph\n                      data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                        currentDate: moment.unix(\n                          this.props.globalFilters.get('startDate'),\n                          'YYYY-MM-DD'\n                        ),\n                        endDate: moment.unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                      })}\n                      isSingleDay={\n                        moment\n                          .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD') ===\n                        moment\n                          .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD')\n                      }\n                      setSingleDay={this.onChangeDatesHandler}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"servers-usage-container\">\n              <ConnectedServersList />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  filteredJobs = status => {\n    const { jobs } = this.props;\n\n    if (status === 'ALL') {\n      if (jobs.get('content').size === 0) {\n        return <Center>There are no jobs available with the selected filters</Center>;\n      }\n\n      return (\n        <>\n          {jobs\n            .get('content')\n            .slice(0, 20)\n            .map((item, index) => (\n              <JobItem key={index} job={item} />\n            ))}\n          {jobs.get('total_count') > 20 && (\n            <Button className=\"full-log center qa-view-full-log\">\n              <Link to=\"/jobs\">\n                <FormattedMessage id=\"dashboard.view-full-log\" />\n              </Link>\n            </Button>\n          )}\n        </>\n      );\n    }\n\n    const totalFilteredJobs = jobs.get('content').filter(job => job.get('status') === status).size;\n\n    if (totalFilteredJobs === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <>\n        {jobs\n          .get('content')\n          .filter(job => job.get('status') === status)\n          .slice(0, 20)\n          .map((item, index) => (\n            <JobItem key={index} job={item} />\n          ))}\n        {totalFilteredJobs > 20 && (\n          <Button className=\"full-log center qa-view-full-log\">\n            <Link to={`/jobs?status=${status}`}>\n              <FormattedMessage id=\"dashboard.view-full-log\" />\n            </Link>\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  onChangeDatesHandler(range) {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n\n      const start = moment(range.startDate.format('YYYY-MM-DD'));\n      const end = moment(range.endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n      this.props.getJobs({\n        date_invoke: moment(range.startDate).format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      });\n    }\n  }\n}\n\nRootModule.propTypes = {\n  className: PropTypes.string,\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nRootModule.defaultProps = {\n  className: 'dashboard'\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  storeFilterStatus: filterStatusSelector(state),\n  entitiesStatus: state.entities.fetch_status\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  request: data => dispatch(fetchEntity(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { node } from 'prop-types';\nimport classnames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.local.scss';\n\nexport const Loader = ({ children, inline, left, ...props }) => {\n  return (\n    <div className={classnames('loader', { inline, left })}>\n      <CircularProgress {...props} />\n      {children && <div className=\"loader-text\">{children}</div>}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  children: node\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './ParameterLoader.local.scss';\n\nexport const ParameterLoader = ({ children }) => {\n  return (\n    <div className=\"loader\">\n      {children && <div className=\"loader-text\">{children}</div>}\n      <div className=\"loader-slot\">\n        <LinearProgress variant=\"indeterminate\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { bool, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Overflow } from '../Overflow/Overflow';\n\nimport './Paper.local.scss';\n\nexport const Paper = ({ padded, flex, children, ...rest }) => (\n  <div className={classnames('paper', { padded, [flex]: flex })} {...rest}>\n    {children}\n  </div>\n);\n\nPaper.propTypes = {\n  children: node,\n  padded: bool,\n  flex: oneOf(['column', 'row'])\n};\n\nPaper.defaultProps = {\n  padded: true,\n  flex: 'column'\n};\n\nexport const PaperHeader = ({ children, ...rest }) => (\n  <header className=\"paper-header\" {...rest}>\n    {children}\n  </header>\n);\n\nPaperHeader.propTypes = {\n  children: node\n};\n\nexport const PaperContent = ({ children, scrollable }) => {\n  if (scrollable) {\n    return (\n      <Overflow className=\"paper-content\" variant=\"white\">\n        {children}\n      </Overflow>\n    );\n  }\n\n  return <main className=\"paper-content\">{children}</main>;\n};\n\nPaperContent.propTypes = {\n  scrollable: bool,\n  children: node\n};\n\nPaperContent.defaultProps = {\n  scrollable: true\n};\n\nexport const PaperFooter = ({ children }) => <footer className=\"paper-footer\">{children}</footer>;\n\nPaperFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nPaperFooter.Left = LeftSideSlot;\nPaperFooter.Right = RightSideSlot;\n\nexport const PaperTitle = ({ children, ...rest }) => (\n  <h2 className=\"paper-title\" {...rest}>\n    {children}\n  </h2>\n);\n\nPaperTitle.propTypes = {\n  children: node\n};\n\nPaper.Header = PaperHeader;\nPaper.Title = PaperTitle;\nPaper.Content = PaperContent;\nPaper.Footer = PaperFooter;\n","import React from 'react';\nimport { node, bool } from 'prop-types';\nimport classnames from 'classnames';\nimport './Main.local.scss';\n\nexport const Main = ({ flex, mdPage, children }) => (\n  <main\n    className={classnames('page-main', { flex, 'md-page': mdPage })}\n  >\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: node,\n  flex: bool,\n  mdPage: bool,\n};\n\nMain.defaultProps = {\n  flex: true,\n  mdPage: false\n};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Section.local.scss';\n\nexport const Section = ({ children, full }) => (\n  <section\n    className={classnames('section-block', {\n      full\n    })}\n  >\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  children: node,\n  full: bool\n};\n\nexport const SectionTitle = ({ children, info }) => (\n  <>\n    <h3 className=\"section-title\">{children}</h3>\n    {info && <h4 className=\"section-title-info\">{info}</h4>}\n  </>\n);\n\nSectionTitle.propTypes = {\n  children: node,\n  info: node\n};\n\nexport const SectionHeader = ({ children }) => (\n  <>\n    <header className=\"section-header\">{children}</header>\n  </>\n);\n\nSectionHeader.propTypes = {\n  children: node\n};\n\nexport const SectionInfo = ({ children }) => (\n  <>\n    <h4 className=\"section-title-info\">{children}</h4>\n  </>\n);\n\nSectionInfo.propTypes = {\n  children: node\n};\n\nexport const SectionContent = ({ children }) => (\n  <>\n    <main className=\"section-content\">{children}</main>\n  </>\n);\n\nSection.Header = SectionHeader;\nSection.Content = SectionContent;\nSection.Title = SectionTitle;\nSection.Info = SectionInfo;\n","import React, { useState, useCallback } from 'react';\n\nimport { func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './ScrollableContainer.local.scss';\n\nexport const ScrollableContainer = ({ children, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  return (\n    <div\n      className={classnames('scrollable-container', {\n        scrolled,\n        [variant]: variant\n      })}\n    >\n      {children({\n        className: classnames('scrollable-element', {\n          [variant]: variant\n        }),\n        onWheel\n      })}\n    </div>\n  );\n};\n\nScrollableContainer.propTypes = {\n  children: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nScrollableContainer.defaultProps = {};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport './Column.local.scss';\n\nexport const Column = ({ children, ...rest }) => {\n  return (\n    <div className=\"column\" {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Row.local.scss';\n\nexport const Row = ({ children, compact, ...rest }) => {\n  return (\n    <div className={classnames('row', { compact })} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { jobsSelector } from 'shared/store/state';\nimport { filterStatusSelector } from '../../store/state';\n\nimport { Daemon, JobStatus } from './components';\n\nimport './status.local.scss';\n\nexport class StatusContainer extends React.PureComponent {\n  render() {\n    const { className, jobs } = this.props;\n    return (\n      <Paper className={className}>\n        <Daemon />\n        <div className=\"jobs-status-container\">\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader inline>Loading jobs</Loader>\n            </Center>\n          ) : (\n            this.filterJobs(jobs.toJS().content)\n          )}\n        </div>\n      </Paper>\n    );\n  }\n\n  filterJobs = jobs => {\n    const { active } = this.props;\n    const count = {\n      executing: 0,\n      succeeded: 0,\n      scheduled: 0,\n      aborted: 0,\n      failed: 0\n    };\n    count.executing = jobs.filter(job => job.status === 'EXECUTING')?.length;\n    count.succeeded = jobs.filter(job => job.status === 'SUCCEEDED')?.length;\n    count.scheduled = jobs.filter(job => job.status === 'SCHEDULED')?.length;\n    count.aborted = jobs.filter(job => job.status === 'ABORTED')?.length;\n    count.failed = jobs.filter(job => job.status === 'FAILED')?.length;\n\n    return (\n      <>\n        <JobStatus count={count.executing} status=\"EXECUTING\" active={active} />\n        <JobStatus count={count.succeeded} status=\"SUCCEEDED\" active={active} />\n        <JobStatus count={count.scheduled} status=\"SCHEDULED\" active={active} />\n        <JobStatus count={count.aborted} status=\"ABORTED\" active={active} />\n        <JobStatus count={count.failed} status=\"FAILED\" active={active} />\n      </>\n    );\n  };\n}\n\nStatusContainer.propTypes = {\n  className: PropTypes.string,\n  jobs: PropTypes.object.isRequired\n};\n\nStatusContainer.defaultProps = {\n  className: 'status-container'\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  active: filterStatusSelector(state)\n});\n\nexport default connect(mapStateToProps)(StatusContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { daemonPoller } from '../../../../store/tasks';\nimport { isDaemonRunning } from '../../../../store/selectors';\n\nimport './daemon.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const Daemon = () => {\n  const running = useSelector(isDaemonRunning);\n\n  useEffect(() => {\n    daemonPoller.start();\n\n    return () => {\n      daemonPoller.stop();\n    };\n  }, []);\n\n  return (\n    <div className=\"daemon qa-daemon-status\">\n      {running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.running\" />}>\n          <div className=\"status running\">\n            <PlayCircleOutlineIcon />\n          </div>\n        </LightTooltip>\n      )}\n\n      {!running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.not.running\" />}>\n          <div className=\"status not-running\">\n            <ErrorOutlineIcon className=\"not-running\" />\n          </div>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport { actions } from 'dashboard/store/actions';\nimport { filterStatusSelector } from 'dashboard/store/state';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-status.local.scss';\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return <>{this.renderContent()}</>;\n  }\n\n  filterByStatus = status => {\n    if (this.props.storeStatus === status.toUpperCase()) {\n      this.props.setStatus('ALL');\n    } else {\n      this.props.setStatus(status.toUpperCase());\n    }\n  };\n\n  renderContent() {\n    let icon = null;\n    let status = '';\n    switch (this.props.status) {\n      case 'EXECUTING':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiProgressClock} />\n          </SvgIcon>\n        );\n        status = 'executing';\n        break;\n      case 'SUCCEEDED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCheckCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'succeeded';\n        break;\n      case 'SCHEDULED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCalendarArrowRight} />\n          </SvgIcon>\n        );\n        status = 'scheduled';\n        break;\n      case 'ABORTED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiStopCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'aborted';\n        break;\n      case 'FAILED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiAlertRhombusOutline} />\n          </SvgIcon>\n        );\n        status = 'failed';\n        break;\n      default:\n        // error message\n        break;\n    }\n\n    if (icon) {\n      return (\n        <div\n          className={classnames(`job-status ${status}`, {\n            active: this.props.status === this.props.active\n          })}\n          role=\"presentation\"\n          onClick={() => this.filterByStatus(status)}\n        >\n          <div className=\"header\">\n            <div className=\"icon\">{icon}</div>\n            <div className=\"count\">\n              {this.props.count}\n              {this.props.status === this.props.active && (\n                <LightTooltip placement=\"right\" title=\"Active filter\">\n                  <CheckCircleIcon className=\"active-filter\" />\n                </LightTooltip>\n              )}\n            </div>\n          </div>\n          <div className=\"status\">{this.props.status}</div>\n        </div>\n      );\n    }\n    // error case\n    return null;\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setStatus: PropTypes.func\n};\n\nexport const mapStateToProps = state => ({\n  storeStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setStatus: status => dispatch(actions.setFilterStatus.dispatchEvent(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobStatus);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector } from 'shared/store/state';\n\nimport { FormattedMessage } from 'react-intl';\nimport { debounce } from 'lodash';\nimport { mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport Paper from '@material-ui/core/Paper';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { SearchInput } from 'shared/components';\nimport { SearchResults } from '../../components';\nimport { setFilterSearch, setFilterType } from 'entities/actions';\n\nimport './search-area.local.scss';\n\nexport class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSearchResults: false,\n      searchTerm: ''\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    if (this.state.showSearchResults) {\n      this.getSearchResults(searchedTerm);\n    }\n  }, 500);\n\n  render() {\n    const {\n      className,\n      getSearchedJobs,\n      entitiesStatus,\n      setSearchFilter,\n      setTypeFilter\n    } = this.props;\n    return (\n      <Paper\n        className={`${className} ${this.state.showSearchResults ? 'no-bottom-radius' : ''}\n        `}\n      >\n        <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n\n        {this.state.searchTerm.length > 0 && (\n          <div className=\"clear-search\">\n            <ClearIcon onClick={this.clearSearch} />\n          </div>\n        )}\n        {this.state.showSearchResults && (\n          <div className=\"search-results-container\">\n            <SearchResults\n              category=\"jobs\"\n              totalResults={getSearchedJobs.get('total_count')}\n              content={getSearchedJobs.get('content')}\n              isLoading={getSearchedJobs.get('fetching')}\n              displayedResults={3}\n              filters={{\n                nameFilter: this.state.searchTerm\n              }}\n            />\n            <SearchResults\n              category=\"processes\"\n              totalResults={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).count\n              }\n              content={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).processes\n              }\n              isLoading={entitiesStatus.process === 'fetching'}\n              displayedResults={3}\n              searchedTerm={this.state.searchTerm}\n              setFilterSearch={setSearchFilter}\n              setFilterType={setTypeFilter}\n            />\n            <div className=\"full-results-container qa-full-search-results\">\n              <div className=\"icon-container\">\n                <SearchIcon />\n              </div>\n              <div className=\"content\">\n                <FormattedMessage id=\"dashboard.view-full-search-results\" />\n              </div>\n              <div className=\"open qa-open-full-results\">\n                <SvgIcon>\n                  <Icon path={mdiChevronRight} />\n                </SvgIcon>\n              </div>\n            </div>\n          </div>\n        )}\n      </Paper>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: 3,\n      page: 1,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n  };\n\n  filterProcesses = (processStatus, searchedTerm) => {\n    if (processStatus === 'fetching' || !searchedTerm) {\n      return { processes: [], count: 0 };\n    }\n    if (this.props.storedProcesses && this.props.storedProcesses.length > 0) {\n      const results = this.props.storedProcesses.filter(p => p.name.includes(searchedTerm));\n\n      return { processes: results.slice(0, 3), count: results.length };\n    }\n    return { processes: [], count: 0 };\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length < 3 && this.state.showSearchResults) {\n      this.setState({ showSearchResults: false });\n    } else if (searchedTerm.length === 3) {\n      if (!this.state.showSearchResults) {\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    } else if (searchedTerm.length > 3) {\n      if (!this.state.showSearchResults) {\n        // used for pasted value\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({\n      showSearchResults: false,\n      searchTerm: ''\n    });\n  };\n}\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  searchJobs: PropTypes.func.isRequired,\n  getSearchedJobs: PropTypes.object.isRequired\n};\n\nSearch.defaultProps = {\n  className: 'search-container'\n};\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state),\n  entitiesStatus: state.entities.fetch_status,\n  storedProcesses: state.entities.data?.process?.data?.data?.processes\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data)),\n  setSearchFilter: data => dispatch(setFilterSearch(data)),\n  setTypeFilter: data => dispatch(setFilterType(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed } from '@mdi/js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport { JobResults } from 'shared/components/JobResults';\nimport { createUrl } from 'shared/lib';\n\nimport './search-results.local.scss';\n\nexport class SearchResultsComponent extends React.PureComponent {\n  render() {\n    const {\n      className,\n      category,\n      totalResults,\n      isLoading,\n      displayedResults,\n      content,\n      searchedTerm = '',\n      setFilterSearch,\n      setFilterType\n    } = this.props;\n    return (\n      <div className={className}>\n        {isLoading ? (\n          <div className=\"header-area\">\n            <div className=\"category-name\">{category}</div>\n            <div className=\"loading\">\n              <CircularProgress size=\"20px\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"header-area\">\n              <div className=\"category-name\">{category}</div>\n              <div className=\"separator\">-</div>\n              <div className=\"total-results\">\n                {totalResults} <FormattedMessage id=\"dashboard.results\" />\n              </div>\n              {totalResults > displayedResults && (\n                <Button className=\"all-results qa-view-all-results\">\n                  {category === 'jobs' && (\n                    <Link to={() => this.createURLLink()}>\n                      <FormattedMessage id=\"dashboard.view-all-results\" />\n                    </Link>\n                  )}\n                  {category === 'processes' && (\n                    <div\n                      role=\"presentation\"\n                      onClick={() => {\n                        setFilterSearch(searchedTerm);\n                        setFilterType('process');\n                      }}\n                    >\n                      <Link to=\"/system/entities\">\n                        <FormattedMessage id=\"dashboard.view-all-results\" />\n                      </Link>\n                    </div>\n                  )}\n                </Button>\n              )}\n            </div>\n            <div className=\"content-area\">\n              {category === 'jobs' && <JobResults jobs={content} fromSearch />}\n              {category === 'processes' && this.renderProcessesResults()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderProcessesResults = () =>\n    this.props.content.map((process, index) => (\n      <div key={index} className=\"result-process-row\">\n        <div className=\"icon-container\">\n          <SvgIcon>\n            <Icon path={mdiPlaySpeed} />\n          </SvgIcon>\n        </div>\n        <div className=\"process-container\">{process.name}</div>\n      </div>\n    ));\n\n  createURLLink = () => {\n    let url = '/jobs';\n    const params = {};\n\n    if (this.props.filters.nameFilter) {\n      params.name_filter = this.props.filters.nameFilter;\n    }\n\n    url = createUrl(url, params);\n    return url;\n  };\n}\n\nexport default SearchResultsComponent;\n\nSearchResultsComponent.propTypes = {\n  className: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  category: PropTypes.string,\n  totalResults: PropTypes.number,\n  isLoading: PropTypes.bool,\n  displayedResults: PropTypes.number\n};\n\nSearchResultsComponent.defaultProps = {\n  className: 'results-container',\n  content: [],\n  category: '',\n  totalResults: 0,\n  isLoading: false,\n  displayedResults: 3\n};\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport { bool } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MUITextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from '../../LightTooltip/LightTooltip';\n\nimport './Input.local.scss';\n\nexport const Input = forwardRef(function InputFw(\n  { inline, error, size, children, description, multiline, variant, ...rest },\n  ref\n) {\n  const InputProps = { ...(rest.InputProps && rest.InputProps) };\n\n  const nrRows = rest?.isPopup ? 9999 : 7;\n\n  if (description) {\n    InputProps.endAdornment = (\n      <>\n        <InputAdornment position=\"end\">\n          <LightTooltip title={description}>\n            <SvgIcon>\n              <path d={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        </InputAdornment>\n        {InputProps.endAdornment}\n      </>\n    );\n  }\n\n  return (\n    <MUITextField\n      ref={ref}\n      fullWidth\n      className={classnames('input-field', { inline, error })}\n      variant={variant || 'outlined'}\n      error={error}\n      {...(multiline && {\n        multiline: true,\n        rows: nrRows\n      })}\n      {...rest}\n      InputProps={InputProps} // eslint-disable-line\n      size={size}\n    >\n      {children}\n    </MUITextField>\n  );\n});\n\nInput.propTypes = {\n  inline: bool,\n  error: bool\n};\n","import React from 'react';\nimport MUIButton from '@material-ui/core/Button';\n\nimport './Button.local.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nexport const Button = ({ to, href, ...props }) => {\n  const link = to || href;\n\n  if (link) {\n    return <MUIButton color=\"primary\" {...props} component={LinkBehavior} to={link} />;\n  }\n\n  return <MUIButton color=\"primary\" {...props} />;\n};\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './ModalFooter.local.scss';\n\nexport const ModalFooter = ({ children }) => {\n  return <footer className=\"modal-footer\">{children}</footer>;\n};\n\nModalFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nModalFooter.Left = LeftSideSlot;\nModalFooter.Right = RightSideSlot;\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ErrorModal.local.scss';\n\nexport const ErrorModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ConfirmationModal.local.scss';\n\nexport const ConfirmationModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '400px',\n          maxHeight: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              No\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.confirm();\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { JobsEffect } from './jobs/jobs.effect';\nimport { JobsConnectionsEffect } from './connections/connections.effect';\nimport { SearchJobsEffect } from './search-jobs/search-jobs.effect';\nimport { SearchProcessesEffect } from './search-processes/search-processes.effect';\nimport { GlobalFiltersEffect } from './global-filters/global-filters.effect';\n\nexport const sharedEffects = [\n  JobsEffect,\n  JobsConnectionsEffect,\n  SearchJobsEffect,\n  SearchProcessesEffect,\n  GlobalFiltersEffect\n];\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Cookie from 'js-cookie';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\n\nimport { Login, Logout } from 'session';\nimport { actionStates } from 'shared/lib/action-creator';\nimport { authorizationSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Layout } from './core';\n\nimport './scoped-css-mui-compatibility';\n\nexport class RootModule extends React.PureComponent {\n  componentDidMount() {\n    if (!Cookie.get('Authorization')) {\n      this.props.history.listen((newLocation, action) => {\n        if (action === 'PUSH') {\n          if (\n            newLocation.pathname !== this.currentPathname ||\n            newLocation.search !== this.currentSearch\n          ) {\n            this.currentPathname = newLocation.pathname;\n            this.currentSearch = newLocation.search;\n            this.props.history.push({\n              pathname: newLocation.pathname,\n              search: newLocation.search\n            });\n          }\n        } else {\n          this.props.history.go(1);\n        }\n      });\n      this.props.history.push('/login');\n      this.props.setAuthorization();\n      return;\n    }\n\n    const username = JSON.parse(localStorage.getItem('username')) || 'mas';\n\n    this.props.checkAuthorization(username);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.authorizationStatus !== prevProps.authorizationStatus &&\n      this.props.authorizationStatus === actionStates.FAIL\n    ) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    if (this.props.authorizationStatus === actionStates.LOADING) {\n      return (\n        <Center>\n          <CircularProgress />\n        </Center>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path={Login.path} component={Login} />\n        <Route exact path={Logout.path} component={Logout} />\n        <Route path=\"/\" component={Layout} />\n      </Switch>\n    );\n  }\n}\n\nRootModule.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  authorizationStatus: PropTypes.oneOf([\n    '',\n    actionStates.SUCCESS,\n    actionStates.LOADING,\n    actionStates.FAIL\n  ]).isRequired,\n  setAuthorization: PropTypes.func.isRequired,\n  checkAuthorization: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  authorizationStatus: authorizationSelector(state).get('status')\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  checkAuthorization: user => dispatch(actions.checkAuthorization.dispatchLoading(user)),\n  setAuthorization: () => dispatch(actions.checkAuthorization.dispatchFail())\n});\n\nexport default hot(connect(mapStateToProps, mapDispatchToProps)(RootModule));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Dashboard } from 'dashboard';\nimport { Jobs } from 'jobs';\nimport { Entities } from 'entities';\nimport { UsersAndGroups } from 'users-manager';\nimport { Explorer } from 'explorer';\nimport { Sidebar } from './containers';\nimport { JobProcess } from '../job-process';\nimport { ConnectedExecutiveDashboard } from 'executive-dashboard/ExecutiveDashboard';\nimport { LicenseCollection } from 'license-collection/LicenseCollection';\nimport { Licensing } from '../licensing/Licensing';\n\nimport './root.local.scss';\n\nexport class RootLayout extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Sidebar />\n        <div className=\"app-container\">\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/jobs/job\" component={JobProcess} />\n            <Route exact path=\"/system/entities\" component={Entities} />\n            <Route path=\"/system/mas-accounts\" component={UsersAndGroups} />\n            <Route exact path=\"/system/explorer\" component={Explorer} />\n            <Route\n              exact\n              path=\"/compliance/executive-dashboard\"\n              component={ConnectedExecutiveDashboard}\n            />\n            <Route exact path=\"/compliance/license-collection\" component={LicenseCollection} />\n            <Route exact path=\"/compliance/licensing\" component={Licensing} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nRootLayout.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { connect } from 'react-redux';\n\nimport { getWorkloadData } from 'shared/lib/workload';\n\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from 'users-manager/store/thunks';\n\nimport { Header } from 'core/components/Header';\nimport { Center, RangeDatePicker, SimpleSearchInput, Switch, WorkloadGraph } from 'shared/components';\nimport { Main, Paper } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { ConnectedJobList } from './components/job-list/job-list.component';\nimport { JobItem } from './components/job-item';\nimport { Filters } from './containers/filters';\nimport { JobsInvocations } from './containers/jobs-invocations';\n\nimport { Schedule } from './containers/Schedule/Schedule';\nimport { TotalJobsCount } from './components/total-jobs-count/TotalJobsCount';\n\nimport './jobs.local.scss';\n\nfunction renderJobItem(item, index, filters, loggedUser) {\n  return <JobItem extended key={index} job={item} filters={filters} loggedUser={loggedUser} />;\n}\n\nclass RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      },\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_filter: {\n        dbms: query.get('platform_filter_dbms') || '',\n        name: query.get('platform_filter_name') || ''\n      }, // will have the platform_name_filter and platform_dbms_filter\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      name_filter: query.get('name_filter') || '',\n      user_filter: query.get('user_filter') || '',\n      selectedTab: 'all',\n      isWorkloadDisplayed: false,\n      pageFilters: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.allUsers.length === 0) {\n      this.props.loadAllUsers();\n    }\n  }\n\n  render() {\n    const {\n      shell_host_address_filter,\n      platform_filter,\n      status,\n      database_name_filter,\n      user_filter,\n      selectedTab,\n      isWorkloadDisplayed\n    } = this.state;\n\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Jobs\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    return (\n      <JobsInvocations>\n        <Header title=\"Jobs\">\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <NavigationTab\n                tabs={[\n                  { label: 'All jobs', value: 'all' },\n                  { label: 'Current jobs', value: 'current-jobs' },\n                  { label: 'Scheduled', value: 'scheduled' }\n                ]}\n                active={selectedTab}\n                onClick={this.handleOnTabChange}\n              />\n              {(selectedTab === 'all' || selectedTab === 'current-jobs') && (\n                <Button\n                  style={{\n                    whiteSpace: 'nowrap',\n                    lineHeight: '20px',\n                    height: '20px',\n                    paddingTop: '0'\n                  }}\n                  onClick={this.toggleWorkloadDisplay}\n                >\n                  {isWorkloadDisplayed ? 'Hide Workload' : 'Display workload'}\n                </Button>\n              )}\n            </Paper.Header>\n            <Switch value={selectedTab}>\n              <Switch.Case value=\"all\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount jobs={this.props.jobs.get('content').toJS()} status={status} />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"current-jobs\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount\n                    jobs={this.props.jobs\n                      .get('content')\n                      .filter(item => item.get('status') !== 'SCHEDULED')\n                      .toJS()}\n                    status={status}\n                  />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"scheduled\">\n                <TotalJobsCount\n                  jobs={this.props.jobs\n                    .get('content')\n                    .filter(item => item.get('status') === 'SCHEDULED')\n                    .toJS()}\n                  status=\"SCHEDULED\"\n                />\n              </Switch.Case>\n            </Switch>\n            <Paper.Content scrollable={false}>\n              <div className=\"jobs-filters-controllers\">\n                <div className=\"job-search\">\n                  <SimpleSearchInput\n                    value={this.state.name_filter}\n                    onChange={this.onSearchInputChange}\n                    onKeyDown={this.onKeyDown}\n                  />\n                </div>\n                <Filters\n                  selections={{\n                    shell_host_address_filter,\n                    platform_filter,\n                    status,\n                    database_name_filter,\n                    user_filter\n                  }}\n                  onChange={this.handleOnFilterChange}\n                  excludeStatus={selectedTab === 'scheduled'}\n                  currentTab={selectedTab}\n                />\n              </div>\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Loading jobs list</Loader>\n                </Center>\n              ) : (\n                <ConnectedJobList items={this.returnListBasedOnTab()} filters={this.state.pageFilters}>\n                  {renderJobItem}\n                </ConnectedJobList>\n              )}\n            </Paper.Content>\n            <Paper.Footer>\n              <Schedule />\n              <Button to=\"/jobs/job\">New Job</Button>\n            </Paper.Footer>\n          </Paper>\n        </Main>\n      </JobsInvocations>\n    );\n  }\n\n  toggleWorkloadDisplay = () => {\n    this.setState(prevState => ({\n      isWorkloadDisplayed: !prevState.isWorkloadDisplayed\n    }));\n  };\n\n  updateQSP = (filter, value) => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (typeof value === 'object') {\n      const keys = Object.keys(value);\n\n      keys.forEach(key => {\n        if (!value[key]) {\n          query.delete(`${filter}_${key}`);\n        } else if (query.has(`${filter}_${key}`) && query.get(`${filter}_${key}`) !== value[key]) {\n          query.set(`${filter}_${key}`, value[key]);\n        } else {\n          query.append(`${filter}_${key}`, value[key]);\n        }\n      });\n    } else if (!value) {\n      query.delete(filter);\n    } else if (query.has(filter) && query.get(filter) !== value) {\n      query.set(filter, value);\n    } else {\n      query.append(filter, value);\n    }\n\n    query.toString();\n\n    this.props.history.push({ search: `?${query}` });\n  };\n\n  handleOnTabChange = tab => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (query.get('status')) {\n      query.delete('status');\n      query.toString();\n\n      this.props.history.push({ search: `?${query}` });\n      this.setState({ status: '', selectedTab: tab }, () => {\n        this.performFilter(this.state);\n      });\n    } else {\n      this.setState({ selectedTab: tab });\n    }\n  };\n\n  handleOnFilterChange = (filter, value) => {\n    this.updateQSP(filter, value);\n\n    this.setState(\n      {\n        [filter]: value\n      },\n      () => {\n        this.performFilter(this.state);\n      }\n    );\n  };\n\n  returnListBasedOnTab = () => {\n    const { selectedTab, status } = this.state;\n    const list = this.props.jobs.get('content');\n\n    if (status) {\n      return list.filter(item => item.get('status') === status);\n    }\n\n    if (selectedTab === 'scheduled') {\n      return list.filter(item => item.get('status') === 'SCHEDULED');\n    }\n\n    if (selectedTab === 'current-jobs') {\n      return list.filter(item => item.get('status') !== 'SCHEDULED');\n    }\n\n    return list;\n  };\n\n  performFilter = ({\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter,\n    name_filter,\n    range\n  }) => {\n    if (range.startDate === null || range.endDate === null) return;\n\n    const start = moment(range.startDate.format('YYYY-MM-DD'));\n    const end = moment(range.endDate.format('YYYY-MM-DD'));\n    const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n    const payload = {\n      date_invoke: range.startDate.format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    };\n\n    if (shell_host_address_filter) {\n      payload.shell_host_address_filter = shell_host_address_filter;\n    }\n\n    if (platform_filter) {\n      payload.platform_name_filter = platform_filter.name;\n      payload.platform_dbms_filter = platform_filter.dbms;\n    }\n\n    if (status) {\n      payload.status = status;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (name_filter) {\n      payload.name_filter = name_filter;\n    }\n\n    if (user_filter) {\n      payload.owner = user_filter;\n    }\n\n    this.props.getJobs(payload);\n    this.setState({ pageFilters: payload });\n  };\n\n  onSearchInputChange = event => {\n    this.setState({\n      name_filter: event.target.value\n    });\n  };\n\n  onKeyDown = event => {\n    if (event.key === 'Enter' && !this.props.jobs.get('fetching')) {\n      this.updateQSP('name_filter', event.target.value);\n      this.performFilter(this.state);\n    }\n  };\n\n  onChangeDatesHandler = range => {\n    this.setState(\n      {\n        range: {\n          startDate: range.startDate,\n          endDate: range.endDate\n        }\n      },\n      () => {\n        this.props.setGlobalFilters(range);\n        this.performFilter(this.state);\n      }\n    );\n  };\n}\nRootModule.propTypes = {\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  allUsers: state.usersManager.users.all\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n  },\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  loadAllUsers: () => dispatch(loadAllUsersThunk())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiClockOutline, mdiDatabase, mdiHexagonMultipleOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { ConnectedDeleteJobModal } from '../../actions/delete/DeleteJobModal';\nimport { JobStatus } from '../job-status';\nimport { InvocationStatus } from '../../../job-process/store/constants';\nimport './job-item.local.scss';\n\nconst ALLOWED_FOR_DELETE = [\n  InvocationStatus.SCHEDULED,\n  InvocationStatus.EXECUTING,\n  InvocationStatus.DELAYED\n];\n\nexport const JobItem = ({ job, filters, loggedUser }) => {\n  const [open, setOpen] = useState(false);\n  const canDelete = loggedUser.get('name') === 'mas' && ALLOWED_FOR_DELETE.includes(job.get('status'));\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n  const [uuid, setUuid] = useState('');\n\n  const formatName = () => {\n    let name = job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas = formatName.canvas || (formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n  return (\n    <>\n      <Link to={`/jobs/job/?invocation=${job.get('uuid')}`}>\n        <div className=\"job-item\">\n          <div className=\"status-icon\">\n            <JobStatus status={job.get('status')} />\n          </div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {job.get('process')}</p>\n                    {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                  </>\n                }\n              >\n                <div className=\"name\">{formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"metadata-element time\">\n                  <SvgIcon>\n                    <path d={mdiClockOutline} />\n                  </SvgIcon>\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"metadata-element run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"metadata-element dbms\">\n                    <SvgIcon>\n                      <path d={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"metadata-element server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"metadata-element database\">\n                    <SvgIcon>\n                      <path d={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n          {canDelete && (\n            <div className=\"job-actions\">\n              <Button\n                color=\"secondary\"\n                onClick={event => {\n                  event.preventDefault();\n                  setOpen(true);\n                  setUuid(job.get('uuid'));\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          )}\n        </div>\n      </Link>\n\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={uuid} filters={filters} />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiCancel,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport './job-status.local.scss';\n\nconst statusMap = {\n  EXECUTING: mdiProgressClock,\n  SUCCEEDED: mdiCheckCircleOutline,\n  SCHEDULED: mdiCalendarArrowRight,\n  DELAYED: mdiTimelineClock,\n  ABORTED: mdiStopCircleOutline,\n  FAILED: mdiAlertRhombusOutline,\n  KILLED: mdiCancel\n};\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return (\n      <LightTooltip placement=\"bottom-start\" title={this.props.status.toUpperCase()}>\n        <div className=\"daemon qa-daemon-status\">\n          <div className={`status ${this.props.status.toLowerCase()}`}>\n            <SvgIcon>\n              <path d={statusMap[this.props.status]} />\n            </SvgIcon>\n          </div>\n        </div>\n      </LightTooltip>\n    );\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string\n};\nJobStatus.defaultProps = {\n  status: ''\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { mapSortInsensitive } from 'users-manager/store/mappers';\nimport { getJobsFiltersOptions } from 'shared/store/selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiHexagonMultipleOutline, mdiDatabase, mdiServer, mdiCircleSlice5 } from '@mdi/js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\nimport { Input } from 'shared/components/controls';\n\nimport './filters.scss';\n\nexport const PLATFORM = [\n  { label: 'MariaDB', name: 'mariadb', dbms: 'mysql', value: { name: 'mariadb', dbms: 'mysql' } },\n  {\n    label: 'MySQL',\n    name: 'mysql',\n    dbms: 'mysql',\n    value: { name: 'mysql', dbms: 'mysql' }\n  },\n  { label: 'Oracle', name: 'oracle', dbms: 'oracle', value: { name: 'oracle', dbms: 'oracle' } },\n  { label: 'PostgreSQL', name: 'pgsql', dbms: 'pgsql', value: { name: 'pgsql', dbms: 'pgsql' } },\n  {\n    label: 'Microsoft SQL Server',\n    name: 'microsoft.sqlserver',\n    dbms: 'mssql',\n    value: { name: 'microsoft.sqlserver', dbms: 'mssql' }\n  },\n  {\n    label: 'Oracle RDS',\n    name: 'rds.oracle',\n    dbms: 'oracle',\n    value: { name: 'rds.oracle', dbms: 'oracle' }\n  }\n];\n\nconst Filters = props => {\n  const { filters, selections, onChange, excludeStatus, allUsers, currentTab } = props;\n  const {\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter\n  } = selections;\n\n  const users = [\n    { value: '', label: 'All' },\n    ...allUsers.map(user => ({ label: user.name, value: user.name }))\n  ];\n  const selectedUser = users.find(u => u.value && u.value === user_filter) ?? '';\n  const platforms = [\n    { value: { name: '', dbms: '' }, label: 'All' },\n    ...PLATFORM.map(el => ({ value: el.value, label: el.label }))\n  ];\n  const selectedPlatform =\n    platforms.find(p => p?.value?.name && p.value.name === platform_filter?.name) ?? '';\n  const servers = [\n    { value: '', label: 'All' },\n    ...filters.address.map(el => ({ value: el, label: el }))\n  ];\n  const selectedServer =\n    servers.find(sv => sv.value && sv.value === shell_host_address_filter) ?? '';\n  const databases = [\n    { value: '', label: 'All' },\n    ...filters.database.map(el => ({ value: el, label: el }))\n  ];\n  const selectedDb = databases.find(db => db.value && db.value === database_name_filter) ?? '';\n  let statuses = [\n    { value: '', label: 'All' },\n    ...filters.status.map(el => ({ value: el, label: el }))\n  ];\n\n  if (currentTab === 'current-jobs') {\n    statuses = statuses.filter(s => s.value !== 'SCHEDULED');\n  }\n\n  const selectedStatus = statuses.find(s => s.value && s.value === status) ?? '';\n\n  return (\n    <div className=\"job-filters\">\n      <Autocomplete\n        disableClearable\n        id=\"users-filter\"\n        options={users}\n        value={selectedUser}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('user_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <AccountCircleOutlinedIcon />\n                <span className=\"job-filter-select-label\">Users</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"platform-filter\"\n        options={platforms}\n        value={selectedPlatform}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('platform_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Platform</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"server-filter\"\n        options={servers}\n        value={selectedServer}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('shell_host_address_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiServer} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Server</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"database-filter\"\n        options={databases}\n        value={selectedDb}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('database_name_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiDatabase} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Database</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      {!excludeStatus && (\n        <Autocomplete\n          disableClearable\n          id=\"status-filter\"\n          options={statuses}\n          value={selectedStatus}\n          getOptionLabel={opt => opt.label || ''}\n          onChange={(e, option) => {\n            onChange('status', option?.value || '');\n          }}\n          style={{ color: 'red' }}\n          renderInput={params => (\n            <Input\n              {...params}\n              size=\"small\"\n              label={\n                <span className=\"job-filter-select-label-wrap\">\n                  <SvgIcon>\n                    <path d={mdiCircleSlice5} />\n                  </SvgIcon>\n                  <span className=\"job-filter-select-label\">Status</span>\n                </span>\n              }\n              variant=\"outlined\"\n            />\n          )}\n        />\n      )}\n    </div>\n  );\n};\nFilters.propTypes = {\n  filters: PropTypes.object.isRequired,\n  selections: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  excludeStatus: PropTypes.bool\n};\n\nexport const mapStateToProps = state => ({\n  filters: getJobsFiltersOptions(state),\n  allUsers: mapSortInsensitive(state.usersManager.users.all)\n});\n\nexport default connect(mapStateToProps)(Filters);\n","import { createSelector } from 'reselect';\n\nimport { connectionsSelector } from '../state';\n\nexport const getJobsFiltersOptions = createSelector(connectionsSelector, connections => {\n  const filters = {\n    address: [], // connections - server\n    protocol: [], // connections - dbms\n    status: ['EXECUTING', 'SUCCEEDED', 'SCHEDULED', 'ABORTED', 'FAILED', 'DELAYED', 'KILLED'], // hardcoded\n    database: [] // connections -  database\n  };\n\n  connections.get('content').forEach(connection => {\n    const address = connection.get('address');\n    const protocol = connection.get('protocol');\n    const database = connection.getIn(['special', 'database']);\n\n    if (address && !filters.address.includes(address)) {\n      filters.address.push(address);\n    }\n\n    if (protocol && !filters.protocol.includes(protocol)) {\n      if (protocol !== 'SSH') {\n        filters.protocol.push(protocol);\n      }\n    }\n\n    if (database && !filters.database.includes(database)) {\n      filters.database.push(database);\n    }\n  });\n  return filters;\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector } from 'shared/store/state';\n\nexport const JobsInvocations = ({ children }) => {\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n\n  const dispatch = useDispatch();\n  const getJobs = data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n    dispatch(actions.getConnections.dispatchLoading(data));\n  };\n  const globalFilters = useSelector(globalFiltersSelector);\n\n  React.useEffect(() => {\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    getJobs({\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_name_filter: query.get('platform_filter_name') || '',\n      platform_dbms_filter: query.get('platform_filter_dbms') || '',\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      owner: query.get('user_filter') || '',\n      name_filter: query.get('name_filter') || ''\n    });\n  }, []);\n\n  return children;\n};\nJobsInvocations.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","export const deepCopy = (value) => {\n  return JSON.parse(JSON.stringify(value));\n};\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport Container from '@material-ui/core/Container';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MenuItem } from '@material-ui/core';\nimport { fetchEntity, openModal, selectEntity, setFilterSearch, setFilterType } from './actions';\nimport { ENTITY_TYPES, getBreadcrumbs, getEntities, getSelectedEntity } from './selectors';\nimport Entity from './components/Entity';\nimport SelectedEntity from './containers/SelectedEntity';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport debounce from 'lodash/debounce';\n\nimport './root.local.scss';\n\n/* eslint-disable */\n\n\nconst ENTITY_ICONS = {\n  root: <FolderIcon />,\n  namespace: <FolderIcon />,\n  constant: <FilterCenterFocusIcon />,\n  form: <AssignmentTurnedInIcon />,\n  schedule: <EventNoteIcon />,\n  account: <VpnKeyIcon />,\n  process: <SlowMotionVideoIcon />,\n  type: <DeveloperModeIcon />,\n  exception: <WarningIcon />,\n  prototype: <AssignmentIcon />,\n  CachedIcon:<CachedIcon />\n};\n\nlet searchWithDebounce = () => {};\n\nfunction RootModule({\n  fetchEntity,\n  selectEntity,\n  columns,\n  breadcrumbs,\n  filters,\n  setFilterType,\n  setFilterSearch,\n  selectedEntity,\n  entitiesStatus,\n  job\n}) {\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'not-fetched' || entitiesStatus[key] === 'failed') {\n        fetchEntity(key);\n      }\n    }\n\n    searchWithDebounce = debounce(value => {\n      setFilterSearch(value);\n    }, 700);\n    if (filters.search) {\n      setSearchInput(filters.search);\n    }\n  }, []);\n\n  function renderBreadcrumb(breadcrumb) {\n    return (\n      <span key={breadcrumb}>\n        <span className=\"breadcrumb\">{breadcrumb}</span> /{' '}\n      </span>\n    );\n  }\n\n  function renderColumn(columns, colNum) {\n    return (\n      <div key={colNum}>\n        {columns.rows.map(entity => (\n          <Entity\n            key={entity.name}\n            entity={entity}\n            selectEntity={selectEntity}\n            columns={columns}\n            entityIcons={ENTITY_ICONS}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function handleSearchChange(e) {\n    const val = e.target.value;\n    searchWithDebounce(val);\n    setSearchInput(val);\n  }\n\n  function loadingData() {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'fetching') {\n        return (\n          <div className=\"loading\">\n            <CircularProgress size={15} />\n            <span>Loading {key} entities...</span>\n          </div>\n        );\n      }\n    }\n\n    return null;\n  }\n\n\n  function renderColumns() {\n    if (Array.isArray(columns) && columns[0]?.rows?.length) {\n      return columns.map(renderColumn);\n    }\n\n    if (Object.values(entitiesStatus).find(e => e === 'fetching')) {\n      return null;\n    } else {\n      return 'No Entities Found.';\n    }\n  }\n\n  function clearCach(){\n     window.location.reload(false);\n     sessionStorage.removeItem(\"persist:root\");\n    \n  }\n\n  return (\n    <>\n      <Header title=\"System / Entities\" />\n      <Container maxWidth={false} classes={{ root: 'define-height-container' }}>\n        <div className=\"entities-breadcrumb\">{['root', ...breadcrumbs].map(renderBreadcrumb)}</div> \n        <br />\n        {sessionStorage.getItem(\"persist:root\") && <div><CachedIcon style={{ color: 'green',cursor: 'pointer' }}  onClick={e => clearCach()} /><span onClick={e => clearCach()} style={{fontSize: \"13px\",color: \"#047f04\",fontWeight: \"bolder\",cursor: 'pointer'}}>Clear cache </span> </div> }\n        <div className=\"entities-filters\">\n          <Select value={filters.type} onChange={ev => setFilterType(ev.target.value)}>\n            {[{ type: 'all', title: 'ALL' }, ...ENTITY_TYPES].map(type => (\n              <MenuItem key={type.type} value={type.type}>\n                {type.title}\n              </MenuItem>\n            ))}\n          </Select>\n          <div className=\"entities-search-wrap\">\n            <SimpleSearchInput value={searchInput} onChange={handleSearchChange} />\n          </div>\n        </div>\n        {loadingData()}\n        <div className=\"grid-container define-height-grid-root\">\n          <div className=\"entities-list-container define-height\">\n            <div className=\"columns\">{renderColumns()}</div>\n          </div>\n          <div className=\"selected-entity-container\">\n            <SelectedEntity selectedEntity={selectedEntity} entityIcons={ENTITY_ICONS} />\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nRootModule.propTypes = {\n  fetchEntity: PropTypes.func,\n  selectEntity: PropTypes.func,\n  setFilterType: PropTypes.func,\n  setFilterSearch: PropTypes.func,\n  columns: PropTypes.array,\n  breadcrumbs: PropTypes.array,\n  filters: PropTypes.object,\n  selectedEntity: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    columns: getEntities(state),\n    breadcrumbs: getBreadcrumbs(state),\n    filters: state.entities.filters,\n    selectedEntity: getSelectedEntity(state),\n    entitiesStatus: state.entities.fetch_status\n  }),\n  { fetchEntity, selectEntity, setFilterType, setFilterSearch, openModal }\n)(RootModule);\n","import React from 'react';\nimport { Route, Link, Switch, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header/Header';\n\nimport { Button } from 'shared/components/controls';\n\nimport { HeaderPageSwitch } from './components/HeaderPageSwitch/HeaderPageSwitch';\n\nimport { UsersPage } from './users';\n\nimport { GroupsPage } from './groups';\n\nexport const UsersAndGroupsPage = () => {\n  return (\n    <>\n      <Header>\n        <UserManagementHeaderLinks />\n        <RightSideControls />\n      </Header>\n      <UserManagementSwitch />\n    </>\n  );\n};\n\nexport const UserManagementHeaderLinks = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  const routes = [\n    { to: `${url}/users`, label: 'Users' },\n    { to: `${url}/groups`, label: 'Groups' }\n  ];\n\n  return <HeaderPageSwitch active={location.pathname} routes={routes} />;\n};\n\nexport const RightSideControls = () => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  if (location.pathname.includes('create-new')) {\n    return null;\n  }\n\n  if (location.pathname.includes('users')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/users/create-new`} component={Link}>\n          Create User\n        </Button>\n      </div>\n    );\n  }\n\n  if (location.pathname.includes('groups')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/groups/create-new`} component={Link}>\n          Create Group\n        </Button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const UserManagementSwitch = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${url}`}>\n        <UsersPage />\n      </Route>\n      <Route path={`${url}/groups`}>\n        <GroupsPage />\n      </Route>\n      <Route path={`${url}/users`}>\n        <UsersPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default UsersAndGroupsPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { array, func, object } from 'prop-types';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Center, Main } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from '../store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\nimport { loadAllGroupsThunk } from '../groups/store/thunks';\nimport { ConnectedUserLoader } from './containers/UserLoader';\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { UserCard } from '../components/UserCard/UserCard';\nimport { NoUserSelectedPage } from './pages/NoUsersSelected';\nimport { CreateNewUserPage } from './pages/CreateNewUser/CreateNewUser';\n\nimport './root.scss';\n\nexport const UsersPage = ({\n  allUsers,\n  selectedUser,\n  loadAllUsers,\n  allGroups,\n  loadAllGroups,\n  isLoading\n}) => {\n  useEffect(() => {\n    loadAllUsers();\n    if (allGroups.length === 0) {\n      loadAllGroups();\n    }\n  }, []);\n\n  function filterUserByQuery(user, query) {\n    return user.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const userLink = user => {\n    return `${match.url}/${user.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading users...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"users-search-section\">\n        <SearchableList items={allUsers} filter={filterUserByQuery}>\n          {user => <UserCard selected={selectedUser} user={user} href={userLink(user)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <UserSwitch />\n      </section>\n    </Main>\n  );\n};\n\nUsersPage.propTypes = {\n  allUsers: array,\n  selectedUser: object,\n  loadAllUsers: func\n};\n\nexport const UserSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewUserPage />\n      </Route>\n      <Route path={`${path}/:userName`}>\n        <ConnectedUserLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoUserSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allUsers: mapSortInsensitive(state.usersManager.users.all),\n    selectedUser: state.usersManager.users.selected,\n    allGroups: state.groups.all,\n    isLoading: state.usersManager.flags.users.loading\n  }),\n  dispatch => ({\n    loadAllUsers: () => dispatch(loadAllUsersThunk()),\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(UsersPage);\n","import React, { useEffect } from 'react';\nimport { func, array } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadAllGroupsThunk } from './store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { GroupCard } from './components/GroupCard/GroupCard';\n\nimport { ConnectedGroupLoader } from './pages/GroupView/GroupView';\nimport { CreateNewGroupPage } from './pages/CreateNewGroup/CreateNewGroup';\nimport { NoGroupSelectedPage } from './pages/NoGroupSelected';\n\nimport './root.local.scss';\n\nexport const GroupsPage = ({ allGroups, loadAllGroups, isLoading }) => {\n  useEffect(() => {\n    loadAllGroups();\n  }, []);\n\n  function filterGroupByQuery(group, query) {\n    return group.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const groupLink = group => {\n    return `${match.url}/${group.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading groups...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"search-list-section\">\n        <SearchableList items={allGroups} filter={filterGroupByQuery}>\n          {group => <GroupCard group={group} href={groupLink(group)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <GroupsPagesSwitch />\n      </section>\n    </Main>\n  );\n};\n\nGroupsPage.propTypes = {\n  allGroups: array,\n  loadAllGroups: func\n};\n\nexport const GroupsPagesSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewGroupPage />\n      </Route>\n      <Route path={`${path}/:groupName`}>\n        <ConnectedGroupLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoGroupSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allGroups: mapSortInsensitive(state.groups.all.filter(g => g.name !== 'user')),\n    isLoading: state.groups.ops.all.loading\n  }),\n  dispatch => ({\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(GroupsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func, object } from 'prop-types';\nimport moment from 'moment';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddIcon from '@material-ui/icons/Add';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Center, RangeDatePicker } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper } from 'shared/components/layout';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions } from 'shared/store/actions';\nimport { Button } from 'shared/components/controls';\nimport { Header } from 'core/components/Header';\nimport { loadAllAccountsThunk, loadProtocolsThunk } from './store/thunks';\nimport { Treeview } from './treeview';\nimport { ConnectedBreadcrumbsTitle } from './containers/Breadcrumbs/Breadcrumbs';\nimport { ContentSwitch } from './components/ContentSwitch/ContentSwitch';\nimport { AddServerCard } from './containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from './containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from './containers/ImportCSV/ImportCSV';\nimport { ToggleSystemExplorerView } from './components/ToggleSystemExplorerView/ToggleSystemExplorerView';\nimport { SystemExplorerViewMode } from './components/ToggleSystemExplorerView/SystemExplorerViewMode';\nimport { ConnectedSystemExplorerTable } from './components/TableView/SystemExplorerTable';\n\nimport './root.local.scss';\n\nexport class ExplorerPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      anchorElement: null,\n      viewMode: SystemExplorerViewMode.TABLE\n    };\n  }\n\n  componentDidMount() {\n    const { loadProtocols, loadAllAccounts } = this.props;\n\n    loadProtocols();\n    loadAllAccounts();\n  }\n\n  render() {\n    const {\n      treeviewData,\n      isLoading,\n      storeState: { level }\n    } = this.props;\n\n    const { viewMode } = this.state;\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    return (\n      <>\n        <Header stretchContent>\n          <h1 className=\"header-title\">System / Explorer</h1>\n          {level === 'workload' || level === 'license' ? (\n            <RangeDatePicker\n              onDatesChange={this.onChangeDatesHandler}\n              startDate={moment.unix(this.props.globalFilters.get('startDate'))}\n              endDate={moment.unix(this.props.globalFilters.get('endDate'))}\n            />\n          ) : null}\n\n          <ToggleSystemExplorerView active={viewMode} onClickCallback={(newMode) => this.setState({ viewMode: newMode })} />\n        </Header>\n        <Main mdPage>\n          {isLoading ? (\n            <Center>\n              <Loader>Loading accounts...</Loader>\n            </Center>\n          ) : (\n            viewMode === SystemExplorerViewMode.TILES && (\n              <>\n                <Treeview data={treeviewData} />\n                <Paper className=\"tiles-view-container\">\n                  <Paper.Header>\n                    <h1 className=\"breadcrumbs-title\">\n                      <ConnectedBreadcrumbsTitle />\n                    </h1>\n                    <div className=\"action-container\">\n                      <Button\n                        startIcon={<AddIcon />}\n                        className=\"action-btn\"\n                        aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\"\n                        onClick={this.handleClick}\n                        disabled={isDisabled}\n                      >\n                        Add connection\n                      </Button>\n                      <Menu\n                        id=\"connections-menu\"\n                        keepMounted\n                        anchorEl={this.state.anchorElement}\n                        open={Boolean(this.state.anchorElement)}\n                        onClose={this.handleClose}\n                      >\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <AddServerCard disabled={isDisabled} />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <AddDatabaseCard disabled={isDisabled} />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <ImportCSV disabled={isDisabled} />\n                        </MenuItem>\n                      </Menu>\n                    </div>\n                  </Paper.Header>\n                  <ContentSwitch activePage={level} />\n                </Paper>\n              </>\n            )\n          )}\n          {!isLoading && viewMode === SystemExplorerViewMode.TABLE && (\n            <>\n              <ConnectedSystemExplorerTable\n                data={treeviewData}\n                switchToTileView={() => this.setState({ viewMode: SystemExplorerViewMode.TILES })}\n              />\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n\n  handleClick = event => {\n    this.setState({ anchorElement: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorElement: null });\n  };\n\n  onChangeDatesHandler = range => {\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n    }\n  };\n}\n\nExplorerPage.propTypes = {\n  treeviewData: array,\n  loadAllAccounts: func,\n  isLoading: bool,\n  storeState: object,\n  globalFilters: object,\n  setGlobalFilters: func\n};\n\nexport default connect(\n  state => ({\n    treeviewData: state.explorer.structured?.dbms || [],\n    isLoading: state.explorer.flags.accounts.loading || state.explorer.flags.protocols.loading,\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    loadAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    loadProtocols: () => dispatch(loadProtocolsThunk()),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(ExplorerPage);\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { ConnectedDBMS } from './layers/Dbms/Dbms';\n\nimport './root.local.scss';\n\nexport class Treeview extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <ul className=\"treeview-container\">\n        {data.map(dbms => (\n          <ConnectedDBMS key={dbms.protocol} data={dbms} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTreeview.propTypes = {\n  data: array\n};\n\nexport default Treeview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StorageSidebar, ObjectsSidebar } from './Sidebar';\nimport { StorageViewer, ObjectsViewer } from './Viewer';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport const DbObjects = ({\n  type,\n  data,\n  list,\n  dbName,\n  protocol,\n  selectedItem,\n  setItem,\n  loadingFlags,\n  invalidObjects\n}) => {\n  const { loadingPoints, loadingDetails, loading } = loadingFlags;\n  const sidebarDisabled = SystemExplorerFeatureUtil.isObjectsSidebarDisabled(protocol);\n  if (type === 'storage') {\n    return (\n      <div className=\"db-objects-tabs\">\n        <StorageSidebar\n          dbName={dbName}\n          isLoading={loadingPoints}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n        <StorageViewer data={data} isLoading={loadingDetails} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"db-objects-tabs\">\n      {!sidebarDisabled && (\n        <ObjectsSidebar\n          dbName={dbName}\n          invalidObjects={invalidObjects}\n          isLoading={loading}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n      )}\n      <ObjectsViewer data={data} isLoading={loading} sidebarDisabled={sidebarDisabled} protocol={protocol} />\n    </div>\n  );\n};\n\nDbObjects.propTypes = {\n  type: PropTypes.string,\n  data: PropTypes.object,\n  list: PropTypes.array,\n  selectedItem: PropTypes.object,\n  setItem: PropTypes.func,\n  dbName: PropTypes.string,\n  protocol: PropTypes.string\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { actions } from 'session/store/actions';\nimport { beHealthSelector, beLicenceSelector, beVersionSelector, currentUserSelector } from 'session/store/state';\nimport { Compile, Navigation, UserMenu } from './components';\nimport pkg from '../../../../../package.json';\nimport MasLogo from '../../../../assets/images/mas_logo_white.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_white.svg';\nimport './sidebar.local.scss';\n\nconst RUNNING = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'rgb(79, 219, 70)',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nconst STATUS_SPAN = {\n  color: '#fff',\n  fontSize: '11px',\n  marginLeft: '14px',\n  textShadow: '1px 1px 1px #3765af3b',\n  position: 'relative',\n  top: '-2px'\n};\n\nconst STOPPED = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'red',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nexport class SidebarContainer extends React.PureComponent {\n  componentDidMount() {\n    this.props.getBeVersion();\n    this.props.getBeLicence();\n    this.props.getBeHealth();\n  }\n\n  render() {\n    const postgresStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.postgresStatus : null;\n    const masDaemonStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.masDaemonStatus : null;\n    const uptime1Minute = this.props.beHealth\n      ? `${this.props.beHealth.masSystemsMonitor.uptime1Minute},${this.props.beHealth.masSystemsMonitor.uptime5Minutes},${this.props.beHealth.masSystemsMonitor.uptime15Minutes}`\n      : null;\n\n    const daysUntilExpire = this.props.beLicence ? this.props.beLicence.licensed_feature[1].daysUntilExpire : null;\n    const expirationDate = this.props.beLicence ? this.props.beLicence.licensed_feature[1].expirationDate : null;\n    const licenseStatus = this.props.beLicence ? this.props.beLicence.licensed_feature[1].licenseStatus : null;\n\n    return (\n      <div className={this.props.className}>\n        <div className=\"logo-container\">\n          <img className=\"vendita-logo img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          <LightTooltip\n            placement=\"right\"\n            title={\n              <>\n                <div>\n                  <span style={{ paddingRight: '2px' }}>UI </span>version:&nbsp;\n                  {pkg.version}\n                </div>\n                <div>\n                  <span>BE </span>version:&nbsp;\n                  {this.props.beVersion}\n                </div>\n\n                <div>\n                <span>BE </span>License: {(licenseStatus ? 'MAS Lite' : 'MAS Full')} <br />\n                  Expiration Date: {expirationDate} <br />\n                  Days Until Expire: {daysUntilExpire} <br />\n                </div>\n              </>\n            }\n          >\n            <img className=\"mas-logo img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n          </LightTooltip>\n        </div>\n        <div className=\"nav-area\">\n          <div style={{ position: 'relative', bottom: '17px', right: '2px' }}>\n          {masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {!masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {!postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {uptime1Minute && (\n            <div style={{ top: '23px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          {!uptime1Minute && (\n            <div style={{ top: '20px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          </div>\n          <Navigation />\n        </div>\n        <div className=\"bottom\">\n          <Compile />\n          <UserMenu user={this.props.currentUser.get('name')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebarContainer.propTypes = {\n  className: PropTypes.string,\n  currentUser: PropTypes.object.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  currentUser: currentUserSelector(state),\n  beVersion: beVersionSelector(state),\n  beLicence: beLicenceSelector(state),\n  beHealth: beHealthSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getBeVersion: data => dispatch(actions.getBeVersion.dispatchLoading(data)),\n  getBeLicence: data => dispatch(actions.getBeLicence.dispatchLoading(data)),\n  getBeHealth: data => dispatch(actions.getBeHealth.dispatchLoading(data))\n});\n\nSidebarContainer.defaultProps = {\n  className: 'sidebar'\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarContainer);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarOutline } from '@mdi/js';\n\nimport './favorites.local.scss';\n\nexport class Favorites extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-nav-favorites`}>\n        <SvgIcon>\n          <Icon path={mdiStarOutline} />\n        </SvgIcon>\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  className: PropTypes.string\n};\n\nFavorites.defaultProps = {\n  className: 'favorites'\n};\n\nexport default Favorites;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { navigationItems } from './constants';\n\nimport './navigation.local.scss';\n\nexport class Navigation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      navId: '',\n      anchorElement: null\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setCurrentNavItem();\n  }\n\n  componentDidUpdate() {\n    this.setCurrentNavItem();\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {navigationItems.map((item, index) => {\n          if (item.items && item.items.length > 0) {\n            return (\n              <div key={index}>\n                <div\n                  role=\"presentation\"\n                  key={index}\n                  className={`nav-item ${\n                    this.state.activeTab === index || this.state.navId === item.id ? ' active ' : ''\n                  } ${item.qaClass ? item.qaClass : ''}`}\n                  onMouseEnter={(event) => this.handlePopoverOpen(event, item.id)}\n                  onMouseLeave={() => this.handlePopoverClose(item.id)}\n                >\n                  <IconButton className=\"icon\">{item.icon}</IconButton>\n                  <p>{item.title}</p>\n                </div>\n                <Popover\n                  className=\"nav-sublist-container\"\n                  anchorEl={this.state.anchorElement}\n                  open={this.state.navId === item.id}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={this.setCloseDropdown}>\n                      <MenuList className=\"nav-sublist-menu\" id=\"menu-list-grow\">\n                        {item.items.map(subItem => (\n                          <MenuItem\n                            key={subItem.to}\n                            className={subItem.qaClass}\n                            to={subItem.to}\n                            component={Link}\n                            onClick={this.setCloseDropdown}\n                          >\n                            {subItem.title}\n                          </MenuItem>\n                        ))}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Popover>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              role=\"presentation\"\n              key={item.to}\n              className={`nav-item ${this.state.activeTab === index ? 'active' : ''} ${\n                item.qaClass ? item.qaClass : ''\n              }`}\n              onClick={() => this.setActiveTab(index, item.to)}\n              onMouseEnter={() => this.handlePopoverClose(item.id)}\n            >\n              <IconButton className=\"icon\">{item.icon}</IconButton>\n              <p>{item.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page) {\n      this.props.history.push(page);\n    }\n    this.setState({ navId: '' });\n  };\n\n  handlePopoverOpen = (event, name) => {\n    this.setState({ navId: name, anchorElement: event.target });\n  };\n\n  handlePopoverClose = (name) => {\n    if (this.state.navId !== name) {\n      this.setState({ navId: '', anchorElement: null });\n    }\n  };\n\n  setActiveTab = (newActiveTab, page) => {\n    this.props.history.push(page);\n    this.setState({ activeTab: newActiveTab, navId: '' });\n  };\n\n  setCurrentNavItem() {\n    const index = navigationItems.findIndex(\n      item =>\n        item.to === this.props.location.pathname || this.props.location.pathname.startsWith(item.to)\n    );\n\n    if (this.state.activeTab !== index) {\n      this.setState({ activeTab: index });\n    }\n  }\n}\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nNavigation.defaultProps = {\n  className: 'navigation'\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nimport './notification.local.scss';\n\nexport class Notification extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-notification`}>\n        <NotificationsNoneIcon />\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  className: PropTypes.string\n};\n\nNotification.defaultProps = {\n  className: 'notification'\n};\n\nexport default Notification;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Logout } from 'session/pages';\n\nimport './user-menu.local.scss';\nimport { ChangePassword } from '../../../../../users-manager/users/pages/UserView/containers/ChangePassword';\n\nexport class UserMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n\n    this.menuAnchorRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"user-menu qa-user-menu\"\n          ref={this.menuAnchorRef}\n          onClick={this.setToggleDropdown}\n          role=\"presentation\"\n        >\n          <LightTooltip placement=\"right\" title={this.props.user}>\n            <Avatar className=\"user-avatar\">{this.props.user.substring(0, 2).toUpperCase()}</Avatar>\n          </LightTooltip>\n        </div>\n\n        <Popover\n          className=\"user-menu-list-container\"\n          anchorEl={this.menuAnchorRef.current}\n          open={this.state.isVisible}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList\n                className=\"user-menu-list\"\n                autoFocusItem={this.state.isVisible}\n                id=\"menu-list-grow\"\n              >\n                {this.props.user === 'mas' && (\n                  <MenuItem\n                    className=\"qa-user-menu-admin\"\n                    onClick={event => this.openAdminPage(event)}\n                  >\n                    <FormattedMessage id=\"navigation.admin\" />\n                  </MenuItem>\n                )}\n                <MenuItem\n                  className=\"qa-user-menu-groups\"\n                  onClick={event => this.setCloseDropdown(event, 'help')}\n                >\n                  <FormattedMessage id=\"navigation.help\" />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-change-pwd\" onKeyDown={event => event.stopPropagation()}>\n                  <ChangePassword\n                    user={this.props.user}\n                    useLinkTrigger=\"true\"\n                  />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-logout\" to={Logout.path} component={Link}>\n                  <FormattedMessage id=\"navigation.logout\" />\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popover>\n      </>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page === 'help') {\n      window.open(\n        'https://masmanual.venditabeta.com/index.php/Vendita_MAS_Documentation_Library#User_Guides_MAS_3.0',\n        '_blank'\n      );\n    }\n\n    this.setState({ isVisible: false });\n  };\n\n  openAdminPage = (event) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    window.open(\n      `https://${window.location.host}/admin/`,\n      '_blank'\n    );\n\n    this.setState({ isVisible: false });\n  };\n\n  setToggleDropdown = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible\n    }));\n  };\n}\n\nUserMenu.propTypes = {\n  user: PropTypes.string.isRequired\n};\n\nexport default withRouter(UserMenu);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\n\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { postCompile } from 'shared/api/compile';\n\nimport { fetchEntity } from '../../../../../entities/actions';\n\nimport './compile.local.scss';\nimport { useDispatch } from 'react-redux';\n\nexport const Compile = () => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => setOpen(true),\n    close: () => {\n      setOpen(false);\n      setStep('confirmation');\n    }\n  };\n  const [step, setStep] = useState('confirmation');\n\n  return (\n    <>\n      <div className=\"compile\">\n        <Tooltip title=\"Compile\">\n          <VideoLibraryOutlinedIcon onClick={modalActions.open} />\n        </Tooltip>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {step === 'confirmation' && <Confirmation setStep={setStep} />}\n        {step === 'compiler' && <Compiler />}\n      </Modal>\n    </>\n  );\n};\n\nconst Confirmation = ({ setStep }) => {\n  const { actions } = useContext(ModalContext);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '350px',\n        maxHeight: '368px',\n        maxWidth: '65vw'\n      }}\n    >\n      <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n      <Paper.Content scrollable={false}>\n        <Result type=\"fail\">\n          <BodyText>\n            <p style={{ fontWeight: 'normal' }}>\n              This command will recompile all the processes and refresh the process list. This\n              usually takes about 1 to 2 minutes.\n            </p>\n            <p style={{ textAlign: 'center' }}>Do you want to proceed?</p>\n          </BodyText>\n        </Result>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            onClick={() => {\n              actions.close();\n            }}\n          >\n            No\n          </Button>\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            onClick={() => {\n              setStep('compiler');\n            }}\n          >\n            Yes\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </Paper>\n  );\n};\n\nconst Compiler = () => {\n  const [compilation, setCompilation] = useState('compiling');\n  const dispatch = useDispatch();\n\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    console.log('[started compilation'); // eslint-disable-line\n    postCompile()\n      .then(() => {\n        setCompilation('refreshing');\n\n        Promise.all([dispatch(fetchEntity('process')), dispatch(fetchEntity('namespace'))])\n          .then(() => {\n            setCompilation('success');\n            console.log('[succeded compilation'); // eslint-disable-line\n          })\n          .catch(() => {\n            setCompilation('success-no-reload');\n            console.log(results, '[succeded compilation. failed to reload entities.'); // eslint-disable-line\n          });\n      })\n      .catch(() => {\n        setCompilation('failed');\n        console.log('[failed compilation'); // eslint-disable-line\n      });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '430px',\n        minHeight: '330px'\n      }}\n    >\n      <ModalHeader icon={<VideoLibraryOutlinedIcon />} title=\"Compile\" />\n      <Switch value={compilation}>\n        <Switch.Case value=\"compiling\">\n          <Center>\n            <Loader>Running compilation...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"refreshing\">\n          <Center>\n            <Loader>Loading processes...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"failed\">\n          <Center>\n            <Result type=\"fail\">\n              <Result.Text compact>Compilation failed.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success-no-reload\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded</Result.Text>\n              <Result.Text compact>Could not refresh processes list.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header';\n\nimport { Main, Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-process.local.scss';\nimport { Breadcrumbs, Link } from '@material-ui/core';\n\nimport ConnectedJobView from './job-view';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getQuery, getInvocationStatus, getInvocation } from './store/selectors';\nimport { processQuery } from './store/actions';\nimport { InvocationStatus } from './store/constants';\n\nimport './root.local.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\n\nconst JobProcess = () => {\n  const query = useQuery();\n\n  const uuid = query.get('invocation');\n  const processName = query.get('process');\n  const redirected = query.get('redirected');\n\n  return (\n    <>\n      <Header>\n        <Breadcrumbs classes={{ root: 'job-main-breadcrumbs' }} aria-label=\"breadcrumb\">\n          <LinkRouter to=\"/jobs\">Jobs</LinkRouter>\n          <OtherMainLinks />\n        </Breadcrumbs>\n      </Header>\n      <Main>\n        <Paper>\n          <PrepareFlow uuid={uuid} process={processName}>\n            <ConnectedJobView redirected={redirected === 'true'} />\n          </PrepareFlow>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n\nexport default JobProcess;\n\nfunction PrepareFlow({ children, uuid, process }) {\n  const query = useSelector(getQuery);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(processQuery(uuid, process));\n  }, [uuid]);\n\n  if (query.uuid !== uuid) {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Setting up invocation viewer</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return children;\n}\n\nfunction OtherMainLinks() {\n  const status = useSelector(getInvocationStatus);\n  const invocation = useSelector(getInvocation);\n\n  if (status === InvocationStatus.NEW) {\n    return <div className=\"current-job\">New Job</div>;\n  }\n\n  if (invocation && invocation.designation) {\n    return (\n      <LimitlessTooltip\n        placement=\"bottom-start\"\n        title={\n          <>\n            <p>Invocation: {invocation.designation}</p>\n            {invocation.schedule && <p>Schedule: {invocation.schedule}</p>}\n          </>\n        }\n      >\n        <div className=\"current-job\">{invocation.designation}</div>\n      </LimitlessTooltip>\n    );\n  }\n\n  return null;\n}\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  CHECK_AUTHORIZATION: '[session] CHECK_AUTHORIZATION',\n  LOGIN: '[session] LOGIN',\n  LOGOUT: '[session] LOGOUT',\n  BE_VERSION: '[session] BE_VERSION',\n  BE_LICENCE: '[session] BE_LICENCE',\n  BE_HEALTH: '[session] BE_HEALTH'\n};\n\nexport const sessionActions = {\n  checkAuthorization: new ActionCreator(actionsTypes.CHECK_AUTHORIZATION),\n  login: new ActionCreator(actionsTypes.LOGIN),\n  logout: new ActionCreator(actionsTypes.LOGOUT),\n  getBeVersion: new ActionCreator(actionsTypes.BE_VERSION),\n  getBeLicence: new ActionCreator(actionsTypes.BE_LICENCE),\n  getBeHealth: new ActionCreator(actionsTypes.BE_HEALTH)\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* checkAuthorization({ payload }) {\n  RestClient.setBasicAuth();\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_USER(payload), {\n      page_size: 2147483645\n    });\n\n    const userDetails = {\n      name: response.data.data.source.user\n    };\n\n    if (response.data.data.users && response.data.data.users[0]) {\n      [userDetails.details] = response.data.data.users;\n    }\n\n    yield put(actions.checkAuthorization.dispatchSuccess(userDetails));\n  } catch (errors) {\n    yield put(actions.checkAuthorization.dispatchFail());\n  }\n}\n\nexport function* CheckAuthorizationEffect() {\n  yield takeEvery(actions.checkAuthorization.getLoadingAction(), checkAuthorization);\n}\n","export default {\n  INTL: 'en',\n  BASE: {\n    HOST: '/mas',\n    VERSION: '',\n    TIMEOUT: 2000 * 60,\n    ENDPOINTS: {\n      LOGIN: '/authenticate',\n      CURRENT_USER: name => `user/${name}`,\n      CURRENT_TIME: '/current/time',\n      DAEMON_STATUS: 'daemon/status',\n      JOB_COUNT: '/invocation/dashboard/job_count',\n      JOBS: '/invocation',\n      PROCESSES: '/process',\n      USERS: '/user',\n      DATATYPES: '/type',\n      PROTOTYPES: '/prototype',\n      GROUPS: '/group',\n      ACCOUNTS: '/account',\n      FORMS: '/form',\n      FORM: '/form',\n      PROTOCOLS: '/protocol',\n      DOWNLOAD_PACKAGING: '/download/oracle_report',\n      SESSIONS: name => `/system/explorer/${name}/all_sessions`,\n      DB_LAST_BACKUP: '/system/explorer/backup_last_24hr',\n      DB_STATUS: '/system/explorer/dbstate',\n      EXECUTIVE_DASHBOARD: '/execdashboard',\n      VIRTUAL_EXECUTIVE_DASHBOARD: 'execdashboard/virtual',\n      STORAGE_DF: name => `/system/explorer/${name}/df_free_space`,\n      STORAGE_TS: '/system/explorer/ts_usage',\n      BE_VERSION: '/version',\n      BE_LICENCE: '/mondata?id_montype=1',\n      BE_HEALTH: '/mondata?id_montype=2',\n      UPLOAD_ACCOUNTS: '/account/batch',\n      DOWNLOAD_CSV_TEMPLATE: '/download/csv_batch_import_sample',\n      UPLOAD_SUPPORT_RENEWAL_FILE: '/dbpollster/supportrenewals',\n      UPLOAD_MAS_LICENSE_FILE: '/dbpollster/licenses',\n    }\n  }\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\nimport Cookie from 'js-cookie';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* login(action) {\n  try {\n    Cookie.set(\n      'Authorization',\n      Buffer.from(`${action.payload.username}:${action.payload.password}`).toString('base64')\n    );\n    RestClient.setBasicAuth();\n    yield RestClient.post(CONSTANTS.BASE.ENDPOINTS.LOGIN);\n    yield put(actions.login.dispatchSuccess());\n    yield put(actions.checkAuthorization.dispatchLoading(action.payload.username));\n    localStorage.setItem('username', JSON.stringify(action.payload.username));\n  } catch (errors) {\n    if (!errors.response) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: 'Unknown Error. Please contact the administrator!'\n          }\n        ])\n      );\n      return;\n    }\n\n    if (errors.response.data.status === 422) {\n      yield put(actions.login.dispatchFail(errors.response.data.error.details));\n      return;\n    }\n\n    if (errors.response.data.status === 401) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors.response.data.status === 500) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors?.response?.statusText) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    throw errors;\n  }\n}\n\nexport function* LoginEffect() {\n  yield takeEvery(actions.login.getLoadingAction(), login);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { Login } from 'session/pages';\n\nfunction loginPath() {\n  return process.env.NODE_ENV === 'development'\n    ? window.location.replace(Login.path)\n    : window.location.replace(`/ui/#${Login.path}`);\n}\n\nfunction* logout() {\n  localStorage.removeItem('username');\n  RestClient.removeBasicAuth();\n  loginPath();\n  yield put(actions.logout.dispatchSuccess());\n}\n\nexport function* LogoutEffect() {\n  yield takeEvery(actions.logout.getLoadingAction(), logout);\n}\n","module.exports = __webpack_public_path__ + \"svgs/ae6021ac50f5c1e93465ff63ea3769d4.svg\";","module.exports = __webpack_public_path__ + \"svgs/0e998e182da8161761cd7209592a7dae.svg\";","module.exports = __webpack_public_path__ + \"svgs/fc315038f28eb52f1b1228e70e8919d6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { isInclusivelyAfterDay } from 'shared/lib';\n\nimport { DateRangePicker, DateRangePickerPhrases, DateRangePickerShape } from 'react-dates';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n} from './constants';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  // initialStartDate: momentPropTypes.momentObj,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  startDateId: PropTypes.string,\n  startDatePlaceholderText: PropTypes.string,\n  endDateId: PropTypes.string,\n  endDatePlaceholderText: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDates: PropTypes.bool,\n  showDefaultInputIcon: PropTypes.bool,\n  customInputIcon: PropTypes.object,\n  customArrowIcon: PropTypes.node,\n  customCloseIcon: PropTypes.object,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: PropTypes.string,\n  orientation: PropTypes.string,\n  anchorDirection: PropTypes.string,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.string,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDates: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  // navigation related props\n  navPosition: PropTypes.string,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.string,\n  renderDayContents: PropTypes.func,\n  minimumNights: PropTypes.number,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization\n  displayFormat: PropTypes.func,\n  monthFormat: PropTypes.string,\n  phrases: DateRangePickerPhrases,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: (day) => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: (date) => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  render() {\n    const { focusedInput } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={this.props.startDate}\n          endDate={this.props.endDate}\n        />\n      </div>\n    );\n  }\n\n  onDatesChange(range) {\n    this.props.onDatesChange(range);\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  GET_JOBS: '[jobs] GET_JOBS',\n  GET_CONNECTIONS: '[jobs] GET_CONNECTIONS',\n  SEARCH_JOBS: '[jobs] SEARCH_JOBS'\n};\n\nexport const jobsActions = {\n  getJobs: new ActionCreator(actionsTypes.GET_JOBS),\n  getConnections: new ActionCreator(actionsTypes.GET_CONNECTIONS),\n  searchJobs: new ActionCreator(actionsTypes.SEARCH_JOBS)\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SEARCH_PROCESSES: '[processes] SEARCH_PROCESSES',\n};\n\nexport const processActions = {\n  searchProcesses: new ActionCreator(actionsTypes.SEARCH_PROCESSES),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  UPDATE_GLOBAL_FILTERS: '[shared] UPDATE_GLOBAL_FILTERS',\n};\n\nexport const globalFiltersActions = {\n  setGlobalFilters: new ActionCreator(actionsTypes.UPDATE_GLOBAL_FILTERS),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SET_FILTER_STATUS: '[dashboard] SET_FILTER_STATUS'\n};\n\nexport const filterStatusActions = {\n  setFilterStatus: new ActionCreator(actionsTypes.SET_FILTER_STATUS)\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport function checkDaemon() {\n  return RestClient.get(CONSTANTS.BASE.ENDPOINTS.DAEMON_STATUS);\n}\n","import { createSelector } from 'reselect';\n\nexport const isDaemonRunning = createSelector(\n  state => state.daemon,\n  daemon => {\n    return daemon.running;\n  }\n);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Loader } from 'shared/components/loaders';\nimport { Center, Switch } from 'shared/components';\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiServer } from '@mdi/js';\nimport { CircleImg, NumberLabel } from '../../../shared/components';\nimport './ServersList.local.scss';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AddServerCard } from '../../../explorer/containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../../explorer/containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../../explorer/containers/ImportCSV/ImportCSV';\nimport Button from '@material-ui/core/Button';\n\nexport const ServersList = ({ loading, dbms, getAllAccounts }) => {\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  useEffect(() => {\n    getAllAccounts();\n  }, []);\n\n  const handleClick = (event) => {\n    event.stopPropagation();\n    setAnchorElement(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorElement(null);\n  };\n\n  const serversNumber = dbms.reduce((acc, el) => acc + el.servers.length, 0);\n\n  return (\n    <Switch value={loading}>\n      <Switch.Case value>\n        <Center>\n          <Loader>Loading Servers</Loader>\n        </Center>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <header onClick={handleClose} role=\"presentation\">\n          <div className=\"widget-title\">\n            <CircleImg\n              image={\n                <SvgIcon>\n                  <Icon path={mdiServer} />\n                </SvgIcon>\n              }\n            />\n            <NumberLabel number={serversNumber} />\n            <Link className=\"servers-link\" to=\"/system/explorer\">Servers</Link>\n          </div>\n\n          <div>\n            <Button\n              startIcon={<AddIcon />}\n              className=\"action-btn\"\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              Add connection\n            </Button>\n            <Menu\n              id=\"connections-menu\"\n              keepMounted\n              anchorEl={anchorElement}\n              open={Boolean(anchorElement)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddServerCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddDatabaseCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <ImportCSV />\n              </MenuItem>\n            </Menu>\n          </div>\n        </header>\n        <div className=\"servers-list\">\n          {dbms.map(el => (\n            <>\n              {el.servers.map(server => (\n                <div className=\"server-item\">\n                  <div className=\"icon-container\">\n                    <SvgIcon>\n                      <Icon path={mdiDns} />\n                    </SvgIcon>\n                  </div>\n                  <div className=\"name-container\">\n                    <span className=\"name\">\n                      <span className=\"dbms\">{el.name}</span>\n                      <span className=\"separator\">/</span>\n                      <span className=\"server\">{server.address}</span>\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </>\n          ))}\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nexport const ConnectedServersList = connect(\n  state => {\n    return {\n      loading: state.explorer.flags.serversUsage.loading,\n      dbms: state.explorer.structured?.dbms || []\n    };\n  },\n  dispatch => ({\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'dashboard' }))\n  })\n)(ServersList);\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\n// import mock from './_mock.json';\n\nfunction* jobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    // yield put(actions.getJobs.dispatchSuccess(mock));\n    yield put(actions.getJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    let reason = '';\n\n    if (\n      errors &&\n      errors.response &&\n      errors.response.data &&\n      errors.response.data.messages &&\n      errors.response.data.messages[0] &&\n      errors.response.data.messages[0].text &&\n      errors.response.data.messages[0].text.startsWith('permission denied')\n    ) {\n      reason = 'rights';\n    }\n\n    yield put(actions.getJobs.dispatchFail({ reason }));\n  }\n}\n\nexport function* JobsEffect() {\n  yield takeEvery(actions.getJobs.getLoadingAction(), jobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* connections() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n      page_size: 2147483645\n    });\n\n    yield put(actions.getConnections.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getConnections.dispatchFail(errors));\n  }\n}\n\nexport function* JobsConnectionsEffect() {\n  yield takeEvery(actions.getConnections.getLoadingAction(), connections);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchJobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    yield put(actions.searchJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchJobs.dispatchFail(errors));\n  }\n}\n\nexport function* SearchJobsEffect() {\n  yield takeEvery(actions.searchJobs.getLoadingAction(), searchJobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchProcesses(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROCESSES, query.payload);\n\n    yield put(actions.searchProcesses.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchProcesses.dispatchFail(errors));\n  }\n}\n\nexport function* SearchProcessesEffect() {\n  yield takeEvery(actions.searchProcesses.getLoadingAction(), searchProcesses);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\n\nfunction* globalFilters(filters) {\n  yield put(actions.setGlobalFilters.dispatchSuccess(filters.payload));\n}\n\nexport function* GlobalFiltersEffect() {\n  yield takeEvery(actions.setGlobalFilters.getLoadingAction(), globalFilters);\n}\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  SELECT_USER,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  REMOVE_USER_FROM_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nimport { mapUsersData, mapLoadedUser } from '../mappers';\n\nexport const initialState = {\n  users: {\n    all: [],\n    selected: null\n  },\n  flags: {\n    users: { loading: false },\n    user: { loading: false, deactivating: false },\n    privileges: { disabled: false }\n  },\n  debug: {\n    user: {},\n    groups_update: {},\n    privileges: {}\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_USERS)]: draft => {\n    draft.flags.users.loading = true;\n  },\n  [types.success(LOAD_ALL_USERS)]: (draft, { payload }) => {\n    draft.users.all = mapUsersData(payload);\n\n    draft.flags.users.loading = false;\n  },\n  [types.action(SELECT_USER)]: (draft, { payload }) => {\n    draft.users.selected = payload;\n  },\n  [types.loading(LOAD_USER)]: draft => {\n    draft.flags.user.loading = true;\n    draft.users.selected = null;\n  },\n  [types.success(LOAD_USER)]: (draft, { payload }) => {\n    draft.flags.user.loading = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.loading(DEACTIVATE_USER)]: draft => {\n    draft.flags.user.deactivating = true;\n  },\n  [types.success(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.users.all = mapUsersData(payload);\n  },\n  [types.fail(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.action(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.loading(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(REMOVE_USER_FROM_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(CREATE_USER)]: draft => {\n    draft.flags.user.creating = true;\n  },\n  [types.success(CREATE_USER)]: draft => {\n    draft.flags.user.creating = false;\n  },\n  [types.fail(CREATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.creating = false;\n    draft.debug.user.errors = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  PATCH_SELECTED_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport const initialState = {\n  all: [],\n  ops: {\n    all: { done: false, loading: false },\n    selected: { done: false, loading: false },\n    privileges: { done: false, loading: false },\n    remove: { loading: false },\n    create: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_GROUPS)]: draft => {\n    draft.ops.all = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.loading(LOAD_GROUP)]: draft => {\n    draft.ops.selected = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_GROUP)]: (draft, { payload }) => {\n    const response = payload;\n    draft.selected = response.data.groups[0]; //eslint-disable-line\n    draft.ops.selected = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_GROUP)]: (draft, { payload }) => {\n    draft.selected = null;\n    draft.ops.selected = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.action(PATCH_SELECTED_GROUP)]: (draft, { payload }) => {\n    draft.selected = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REMOVE_USERS_FROM_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(REMOVE_GROUPS_FROM_GROUP)]: draft => {\n    draft.ops.group_subgroups = { loading: true };\n  },\n  [types.success(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(ADD_USERS_TO_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: true };\n  },\n  [types.success(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: false };\n  },\n  [types.fail(CREATE_GROUP)]: (draft, { payload }) => {\n    draft.ops.create = {\n      loading: false,\n      errors: payload\n    };\n  },\n  [types.loading(DELETE_GROUP)]: draft => {\n    draft.ops.remove = { loading: true };\n  },\n  [types.success(DELETE_GROUP)]: draft => {\n    draft.selected = null;\n    draft.ops.remove = { loading: false };\n  },\n  [types.fail(DELETE_GROUP)]: (draft, { payload }) => {\n    draft.ops.remove = { loading: false, errors: payload };\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_MSSQL_DISK_IO,\n  LOAD_MSSQL_FILE_STORAGE,\n  LOAD_MSSQL_STORAGE_USED,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  mapAccountsNewStructure,\n  mapAccountsTree,\n  mapLicenseReport,\n  mapProtocols,\n  mapUpdateDBStatus\n} from '../mappers';\n\nexport const initialState = {\n  accounts: [],\n  rawAccounts: [],\n  flags: {\n    accounts: { loading: false },\n    protocols: { loading: false },\n    sessions: { loading: false },\n    storage: { loadingPoints: false, loadingDetails: false },\n    objects: { loading: false },\n    license: { loading: false },\n    topSqlStatements: { loading: false },\n    reports: { loading: false },\n    serversUsage: { loading: true },\n    collectionProcesses: {\n      hardware: { loading: false, wasExecuted: false },\n      preSoftware: { loading: false, wasExecuted: false },\n      software: { loading: false, wasExecuted: false },\n      vmware: { loading: false },\n      packaging: { loading: false }\n    }\n  },\n  sessions: [],\n  storage: {\n    storedEntries: {},\n    selected: null\n  },\n  objects: {\n    selectedOwner: null,\n    selectedObject: null,\n    storedEntries: {}\n  },\n  licenses: [],\n  reports: {},\n  protocols: [],\n  state: {\n    path: '',\n    level: 'all-dbms'\n  },\n  serversUsage: {},\n  dbLastBackup: [],\n  dbStatus: [],\n  collectionProcesses: {\n    hardware: null,\n    preSoftware: null,\n    software: null,\n    vmware: null,\n    packaging: null\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_ACCOUNTS)]: draft => {\n    draft.flags.accounts.loading = true;\n  },\n  [types.success(LOAD_ALL_ACCOUNTS)]: (draft, { payload }) => {\n    draft.accounts = mapAccountsTree(payload.data.accounts);\n    draft.structured = mapAccountsNewStructure(payload.data.accounts, payload.protocols);\n    draft.rawAccounts = payload.data.accounts;\n\n    draft.state.path = '';\n    draft.state.level = 'all-dbms';\n\n    draft.flags.accounts.loading = false;\n  },\n  [types.loading(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = true;\n  },\n  [types.success(LOAD_PROTOCOLS)]: (draft, { payload }) => {\n    draft.protocols = mapProtocols(payload.data.protocols);\n    draft.flags.protocols.loading = false;\n  },\n  [types.fail(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = false;\n  },\n  [CHANGE_STATE]: (draft, { payload }, base) => {\n    draft.state = { ...base.state, ...payload };\n  },\n  [types.loading(LOAD_ALL_LICENSES)]: draft => {\n    draft.flags.license.loading = true;\n  },\n  [types.success(LOAD_ALL_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload.data.invocations;\n    draft.flags.license.loading = false;\n  },\n  [types.loading(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = true;\n  },\n  [types.success(LOAD_TOP_SQL_STATEMENTS)]: (draft, { payload }) => {\n    draft.topSqlStatements = payload;\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.fail(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.loading(LICENSE_FULL_REPORT)]: draft => {\n    draft.flags.reports.loading = true;\n  },\n  [types.success(LICENSE_FULL_REPORT)]: (draft, { payload }) => {\n    const { reportData } = payload;\n    draft.reports.data = mapLicenseReport(reportData);\n    draft.flags.reports.loading = false;\n  },\n  [types.loading(PROVIDE_SERVERS_USAGE)]: draft => {\n    draft.flags.serversUsage.loading = true;\n  },\n  [types.success(PROVIDE_SERVERS_USAGE)]: (draft, { payload }) => {\n    draft.flags.serversUsage.loading = false;\n    draft.serversUsage = payload;\n  },\n  [types.loading(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = true;\n  },\n  [types.fail(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.success(LOAD_STORAGE_POINTS)]: (draft, { payload }, base) => {\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      points: payload.data\n    };\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.loading(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = true;\n  },\n  [types.fail(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = false;\n  },\n  [types.success(LOAD_STORAGE_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.storage.loadingDetails = false;\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      details: payload.data\n    };\n  },\n  [types.loading(LOAD_MSSQL_DISK_IO)]: draft => {\n    draft.flags.storage.loadingDiskIO = true;\n  },\n  [types.fail(LOAD_MSSQL_DISK_IO)]: draft => {\n    draft.flags.storage.loadingDiskIO = false;\n  },\n  [types.success(LOAD_MSSQL_DISK_IO)]: (draft, { payload }) => {\n    draft.flags.storage.loadingDiskIO = false;\n    draft.storage.mssqlDiskIO = payload.data;\n  },\n  [types.loading(LOAD_MSSQL_STORAGE_USED)]: draft => {\n    draft.flags.storage.loadingStorageUsed = true;\n  },\n  [types.fail(LOAD_MSSQL_STORAGE_USED)]: draft => {\n    draft.flags.storage.loadingStorageUsed = false;\n  },\n  [types.success(LOAD_MSSQL_STORAGE_USED)]: (draft, { payload }) => {\n    draft.flags.storage.loadingStorageUsed = false;\n    draft.storage.mssqlStorageUsed = payload.data;\n  },\n  [types.loading(LOAD_MSSQL_FILE_STORAGE)]: draft => {\n    draft.flags.storage.loadingFileStorage = true;\n  },\n  [types.fail(LOAD_MSSQL_FILE_STORAGE)]: draft => {\n    draft.flags.storage.loadingFileStorage = false;\n  },\n  [types.success(LOAD_MSSQL_FILE_STORAGE)]: (draft, { payload }) => {\n    draft.flags.storage.loadingFileStorage = false;\n    draft.storage.mssqlFileStorage = payload.data;\n  },\n  [types.success(SET_STORAGE_NS)]: (draft, { payload }) => {\n    draft.storage.selected = payload;\n  },\n  [types.loading(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = true;\n  },\n  [types.fail(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = false;\n  },\n  [types.success(LOAD_OBJECT_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.objects.loading = false;\n    draft.objects.storedEntries[payload.key] = { ...base.objects.storedEntries[payload.key] };\n    payload.data.forEach(({ name, res }) => {\n      draft.objects.storedEntries[payload.key][name] = res;\n    });\n  },\n  [types.success(SET_SELECTED_OBJECT)]: (draft, { payload }) => {\n    draft.objects.selectedObject = payload.object;\n    draft.objects.selectedOwner = payload.owner;\n  },\n  [types.loading(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = true;\n  },\n  [types.success(LOAD_SESSIONS)]: (draft, { payload }) => {\n    draft.flags.sessions.loading = false;\n    // sort flags should be sent to backend and not stored on state.\n    draft.flags.sessions.sort = payload.sort;\n    draft.sessions = payload.data;\n  },\n  [types.fail(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = false;\n  },\n  [types.success(PROVIDE_DB_LAST_BACKUP)]: (draft, { payload }) => {\n    draft.dbLastBackup = payload;\n  },\n  [types.success(PROVIDE_DB_STATUS)]: (draft, { payload }) => {\n    draft.dbStatus = payload;\n  },\n  [types.success(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, true);\n  },\n  [types.fail(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = true;\n  },\n  [types.success(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n    draft.collectionProcesses[payload.name] = payload.data;\n  },\n  [types.fail(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n  },\n  [EXECUTE_COLLECTION_PROCESS]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].wasExecuted = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\nimport {\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  DESELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\nimport { mapAllServers, mapVirtualServers } from '../mappers';\n\nexport const initialState = {\n  rawEntries: [],\n  allServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  selectedServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  rawVirtualServers: [],\n  virtualServers: [],\n  flags: {\n    dashboard: { loading: false, callFailed: false },\n    virtual: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = true;\n  },\n  [types.success(PROVIDE_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawEntries = payload.execdashboard;\n    draft.allServers = mapAllServers(payload.execdashboard);\n    draft.selectedServers = mapAllServers(payload.execdashboard);\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [DESELECT_ALL]: draft => {\n    draft.selectedServers = [];\n  },\n  [SELECT_ALL]: (draft, { payload }) => {\n    draft.selectedServers = mapAllServers(payload);\n  },\n  [TOGGLE_SERVER]: (draft, { payload }) => {\n    draft.selectedServers = payload;\n  },\n  [types.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = true;\n  },\n  [types.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawVirtualServers = payload?.execdashboard_virtual;\n    draft.virtualServers = mapVirtualServers(payload?.execdashboard_virtual);\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","export const initialState = {\n  data: {},\n  fetch_status: {\n    account: 'not-fetched',\n    constant: 'not-fetched',\n    exception: 'not-fetched',\n    form: 'not-fetched',\n    namespace: 'not-fetched',\n    process: 'not-fetched',\n    prototype: 'not-fetched',\n    schedule: 'not-fetched',\n    type: 'not-fetched',\n    alias: 'not-fetched'\n  },\n  isLoading: true,\n  breadcrumbs: [],\n  filters: {\n    type: 'all',\n    search: ''\n  }\n};\n\nexport function FETCH_ENTITIES_REQUEST(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'fetching';\n}\n\nexport function FETCH_ENTITIES_SUCCESS(nextState, { entityType, result }) {\n  nextState.data[entityType] = result;\n  nextState.fetch_status[entityType] = 'fetched';\n}\n\nexport function FETCH_ENTITIES_FAILURE(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'failed';\n}\n\nexport function FETCH_ENTITIES_ALL_REQUEST(nextState) {\n  nextState.isLoading = true;\n}\n\nexport function FETCH_ENTITIES_ALL_SUCCESS(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function FETCH_ENTITIES_ALL_FAILURE(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function SELECT_ENTITY(nextState, { entity, index }, state) {\n  nextState.breadcrumbs.splice(index, state.breadcrumbs.length - 1);\n  nextState.breadcrumbs[index] = entity.name.split('.').pop();\n}\n\nexport function CLEAR_SELECTED_ENTITY(nextState) {\n  nextState.breadcrumbs = [];\n}\n\nexport function UPDATE_FILTERS(nextState, { name, value }) {\n  nextState.filters[name] = value;\n  if (name === 'type' || name === 'search') {\n    nextState.breadcrumbs = [];\n  }\n}\n","export const initialState = {\n  running: true\n};\n\nexport function DAEMON_STATUS_REQUEST() {}\n\nexport function DAEMON_STATUS_SUCCESS(nextState, { result }) {\n  nextState.running = !!result?.data?.data?.running;\n}\n\nexport function DAEMON_STATUS_FAILURE(nextState) {\n  nextState.running = false;\n}\n","import { InvocationStatus } from './constants';\n\nexport const initialState = {\n  loading: true,\n  query: { processed: false },\n  fetchedInvocation: false,\n  invocation: { status: 'NOT_FETCHED' }\n};\n\nexport function PROCESS_QUERY(nextState, { uuid, process }) {\n  nextState.query = { processed: true, uuid, process };\n  if (uuid) {\n    nextState.invocation = { status: 'NOT_FETCHED' };\n  } else {\n    nextState.invocation = { status: '__NEW__', process: process || '' };\n  }\n}\n\nexport function FETCH_INVOCATION_SUCCESS(nextState, { result }) {\n  const [recieved] = result.data.data.invocations;\n  nextState.invocation = recieved;\n}\n\nexport function FETCH_INVOCATION_FAILURE(nextState, { process }) {\n  nextState.invocation = { status: InvocationStatus.NEW, process };\n}\n\nexport function REPLACE_INVOCATION(nextState, { invocation }) {\n  nextState.invocation = invocation;\n}\n","export const api = () => next => async action => {\n  const { type, promise, schema, ...rest } = action;\n  const isPromise = promise instanceof Promise;\n  if (!isPromise || !type) {\n    next(action);\n    return;\n  }\n\n  next({ type: `${type}_REQUEST`, ...rest });\n  try {\n    const result = await promise;\n    if (schema) {\n      next({ type, ...rest, data: result, schema });\n    }\n    next({ type: `${type}_SUCCESS`, ...rest, result });\n  } catch (error) {\n    console.error('[middlewares] error: ', error); // eslint-disable-line\n    next({ type: `${type}_FAILURE`, ...rest, error });\n  }\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  ADD_NOTIFICATIONS: '[core] ADD_NOTIFICATIONS',\n  REMOVE_NOTIFICATION: '[core] REMOVE_NOTIFICATION',\n};\n\nexport const notificationActions = {\n  addNotifications: new ActionCreator(actionsTypes.ADD_NOTIFICATIONS),\n  removeNotification: new ActionCreator(actionsTypes.REMOVE_NOTIFICATION),\n};\n","import React from 'react';\nimport { any, func } from 'prop-types';\nimport { Center } from 'shared/components/layout';\nimport './job-list.local.scss';\nimport { connect } from 'react-redux';\nimport { currentUserSelector } from 'session/store/state';\n\nconst JobList = ({ items, filters, children, loggedUser }) => {\n  const noneAvailable = items.size === 0;\n\n  if (noneAvailable) {\n    return <NoJobs />;\n  }\n\n  return (\n    <div className=\"list-container\">\n      <ul>\n        {items.map((item, index, list) => (\n          <li key={index} className=\"list-item\">\n            {children(item, index, filters, loggedUser, list)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nJobList.propTypes = {\n  items: any,\n  children: func\n};\n\nJobList.defaultProps = {\n  items: []\n};\n\nfunction NoJobs() {\n  return (\n    <Center>\n      <p>There are no jobs available with the selected filters</p>\n    </Center>\n  );\n}\n\nexport const ConnectedJobList = connect(\n  state => {\n    return {\n      loggedUser: currentUserSelector(state),\n    };\n  }\n)(JobList);\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { ViewTabs } from '../ViewTabs/ViewTabs';\nimport { Documentation } from '../Documentation/Documentation';\nimport { ConnectedScheduleForm } from '../../containers/ScheduleForm/ScheduleForm';\nimport { getProcess } from 'shared/api/process';\nimport { getSchedule } from 'shared/api/schedule';\n\nexport const ScheduleModal = ({\n  open,\n  actions,\n  invocation,\n  isScheduled,\n  result,\n  setResult,\n  selectedOption,\n  canSelectProcess,\n  filledValues,\n  setFilledValues\n}) => {\n  const [tab, setTab] = useState('schedule');\n  const [processDetails, setProcessDetails] = useState({});\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const newSchedule = selectedOption === 'edit-schedule';\n  const formRef = useRef();\n  useEffect(() => {\n    if (isScheduled && invocation?.schedule) {\n      getSchedule(invocation.schedule)\n        .then(data => {\n          if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n            setScheduleDetails(data.data.data.schedules[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n    if (invocation && invocation.process) {\n      getProcess(invocation.process)\n        .then(data => {\n          if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n            setProcessDetails(data.data.data.processes[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n  }, []);\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '85vw',\n          minHeight: '85vh',\n          maxWidth: '85vw',\n          maxHeight: '85vh'\n        }}\n      >\n        <ModalHeader\n          title=\"New Schedule\"\n          icon={\n            <SvgIcon>\n              <SlowMotionVideoIcon />\n            </SvgIcon>\n          }\n          formikRef={formRef}\n        />\n        <Switch value={result}>\n          <Switch.Case value=\"success\">\n            <Result type=\"success\">\n              <Result.Text>Schedule was added successfully!</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Done\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"fail\">\n            <Result type=\"fail\">\n              <Result.Text>\n                <p>An error occurred and the new schedule could not be added.</p>{' '}\n                <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                  <a\n                    role=\"presentation\"\n                    onClick={() => {\n                      setResult('');\n                    }}\n                  >\n                    Go back to form\n                  </a>\n                </p>\n              </Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Close\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"\">\n            <Paper.Header>\n              <ViewTabs active={tab} changeTab={setTab} invocation={invocation} />\n            </Paper.Header>\n            <Switch value={tab}>\n              <Switch.Case value=\"schedule\">\n                <ConnectedScheduleForm\n                  setResult={setResult}\n                  invocation={newSchedule ? scheduleDetails : invocation}\n                  filledValues={filledValues}\n                  setFilledValues={setFilledValues}\n                  formRef={formRef}\n                  selectedOption={selectedOption}\n                  canSelectProcess={canSelectProcess}\n                  isScheduled={isScheduled}\n                />\n              </Switch.Case>\n              <Switch.Case value=\"documentation\">\n                <Paper.Content>\n                  <Documentation process={processDetails} />\n                </Paper.Content>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nexport function ViewTabs({ active, changeTab, invocation }) {\n  const tabs = [{ label: 'Schedule', value: 'schedule', active: true }];\n\n  if (invocation) {\n    tabs.push({ label: 'Documentation', value: 'documentation' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React from 'react';\n\nimport { Section } from 'shared/components/layout';\n\nexport const Documentation = ({ process }) => {\n  if (!process) {\n    return <Section>Select a process in order to see its documentation</Section>;\n  }\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { fetchEntity } from 'entities/actions';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport {\n  PLATFORMS,\n  PlatformSelect,\n  PROCESS_TYPES,\n  ProcessSelect,\n  ProcessTypeSelect\n} from 'shared/components/form/editors/Custom';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { patchSchedule, postSchedule } from 'shared/api/schedule';\nimport { mapScheduledNames } from 'entities/mappers';\nimport { isEmpty, pickBy } from 'lodash';\nimport { CronValidator } from '../../../../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../../../../shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport moment from 'moment';\n\nimport './ScheduleForm.scss';\n\nclass ScheduleFormComp extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { invocation } = this.props;\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    this.state = {\n      monitor: derivedMonitor,\n      serverTime: null,\n      everyHourWarningShown: false\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n\n    const { wasSCheduleCallDone, request } = this.props;\n    if (!wasSCheduleCallDone) {\n      request('schedule');\n    }\n  }\n\n  render() {\n    const {\n      setResult,\n      request,\n      allScheduledNames,\n      invocation,\n      isScheduled,\n      filledValues,\n      setFilledValues,\n      selectedOption,\n      canSelectProcess,\n      formRef\n    } = this.props;\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    const isEditing = selectedOption === 'edit-schedule';\n\n    const availableProcess = (platformVal, typeVal, processVal) => {\n      const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n      const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n      const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n      const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n      return (platformMatches && typeMatches) ? processVal : '';\n    };\n\n    const nameValue = () => {\n      if (isScheduled && invocation?.name) {\n        const splittedName = invocation.name.split('.');\n        const name = splittedName[splittedName.length - 1];\n\n        return name;\n      }\n\n      return invocation?.name || undefined;\n    };\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          if (isScheduled && invocation?.name) {\n            const splittedName = invocation.name.split('.');\n            const name = splittedName[splittedName.length - 1];\n\n            if (name !== sch_name) {\n              errors.sch_name = 'A schedule with this name already exists';\n            }\n          } else {\n            errors.sch_name = 'A schedule with this name already exists';\n          }\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{}}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, invocation, isEditing, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <PlatformSelect\n                                name=\"platform\"\n                                label=\"Platform\"\n                                description=\"Select a platform to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(value, formik.values.type, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <ProcessTypeSelect\n                                name=\"type\"\n                                label=\"Type\"\n                                description=\"Select a type to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(formik.values.platform, value, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          <Column xs={4}>\n                            <ProcessSelect\n                              name=\"process\"\n                              label=\"Process\"\n                              value={filledValues?.process || invocation?.process}\n                              disabled={invocation !== undefined}\n                              required\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || nameValue()}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || invocation?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || invocation?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_hr\"\n                              label=\"T_hr\"\n                              value={filledValues?.t_hr || invocation?.t_hr || '*'}\n                              description={CronValidator.FORMAT_MSG.HOURS}\n                            />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_day\"\n                              label=\"T_Day\"\n                              value={filledValues?.t_day || invocation?.t_day || '*'}\n                              description={CronValidator.FORMAT_MSG.DAYS}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_mon\"\n                              label=\"T_mon\"\n                              value={filledValues?.t_mon || invocation?.t_mon || '*'}\n                              description={CronValidator.FORMAT_MSG.MONTH}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_wkd\"\n                              label=\"T_wkd\"\n                              value={filledValues?.t_wkd || invocation?.t_wkd || '*'}\n                              description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || invocation?.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nexport const ConnectedScheduleForm = connect(\n  state => {\n    return {\n      wasSCheduleCallDone: state.entities?.data?.schedule,\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(ScheduleFormComp);\n\nasync function handleSubmit(\n  monitor,\n  setResult,\n  request,\n  setFilledValues,\n  invocation,\n  isEditing,\n  values\n) {\n  const {\n    platform,\n    type,\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  if (isEditing) {\n    body.rename = sch_name;\n  } else {\n    body.name = sch_name;\n  }\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  if (isEditing) {\n    patchSchedule(invocation.name, body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  } else {\n    postSchedule(body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  }\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n","export const formatAccount = account => {\n  const prefix = `${account.protocol.toLowerCase()}://${account.user}:******@${account.address}:${\n    account.port\n  }`;\n  const { special } = account;\n\n  if (special?.database) {\n    return `${prefix}/${special.database}`;\n  }\n\n  return prefix;\n};\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default: {\n      const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n      const matches = regex.exec(deflt);\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return Number.parseInt(matches[2]); // eslint-disable-line\n          case 'str': {\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            // const json = `[${matches[2]}]`;\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          }\n\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n    }\n  }\n  return null;\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst Groups = ({ groups, onSelect, eventTypeIcons = [] }) => {\n  const renderGroupsList = () => {\n    if (Array.isArray(groups) && groups.length) {\n      return groups.map(item => {\n        return (\n          <ListItem\n            onClick={() => onSelect(item)}\n            selected={item.selected}\n            key={item.data.name}\n            button\n          >\n            <ListItemIcon>\n              <GroupIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n            </ListItemIcon>\n            <ListItemText primary={item.data.name} />\n            <ListItemSecondaryAction>\n              {item.displayIcons && eventTypeIcons.map(icon => icon)}\n              <SvgIcon size=\"small\" edge=\"end\" color=\"primary\">\n                <path d={item.selected ? mdiChevronLeft : mdiChevronRight} />\n              </SvgIcon>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Groups:</div>\n      </div>\n      <List dense disablePadding>\n        {renderGroupsList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Button } from 'shared/components/controls';\n\nimport './users.scss';\n\nconst Users = ({\n  users,\n  onSelect,\n  onSelectUserAction,\n  isClearActionAvailable,\n  isGroupSelected,\n  eventTypeIcons\n}) => {\n  const renderUsersList = () => {\n    if (Array.isArray(users) && users.length) {\n      let emptyListMessage = '';\n      if (!isGroupSelected) {\n        emptyListMessage = 'Please select a group to view its users.';\n      } else if (!users.find(item => item.display)) {\n        emptyListMessage = 'No users available in the group.';\n      }\n      if (emptyListMessage) {\n        return (\n          <div className=\"notifications-users-empty-list\">\n            <PermIdentityIcon size=\"small\" />\n            <span>{emptyListMessage}</span>\n          </div>\n        );\n      }\n      return users\n        .filter(user => user.display)\n        .map(user => {\n          return (\n            <ListItem\n              onClick={() => onSelect(user)}\n              selected={user.selected}\n              key={user.data.name}\n              button\n            >\n              <ListItemIcon>\n                <PersonIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n              </ListItemIcon>\n              <ListItemText primary={user.data.name} />\n              <ListItemSecondaryAction classes={{ root: 'notifications-users-check-wrap' }}>\n                {user.selected && eventTypeIcons.map(icon => icon)}\n                <Checkbox\n                  onChange={() => onSelect(user)}\n                  edge=\"end\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  checked={user.selected}\n                  classes={{ root: 'checkbox-custom' }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n    }\n    return null;\n  };\n\n  const currentActionLabel = isClearActionAvailable ? 'Clear' : 'Select all';\n  const shouldDisplayAction = isGroupSelected && users.find(item => item.display);\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Users:</div>\n        {shouldDisplayAction && (\n          <Button role=\"presentation\" onClick={() => onSelectUserAction(isClearActionAvailable)}>\n            {currentActionLabel}\n          </Button>\n        )}\n      </div>\n      <List dense disablePadding>\n        {renderUsersList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport classnames from 'classnames';\nimport './events.scss';\n\nconst Events = ({ jobStart, jobCompletion, abnormalEvent, onSelect, areUsersSelected }) => {\n  const classes = classnames('notification-events', { 'events-wrap-disabled': !areUsersSelected });\n  return (\n    <div className={classes}>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-title\">Event type:</div>\n        </div>\n        <span>\n          <PlayCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job start</span>\n        </span>\n        <span>\n          <CheckCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job completion</span>\n        </span>\n        <span>\n          <ErrorOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">abnormal event</span>\n        </span>\n      </div>\n      <div className=\"notification-events-col old-notice\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n      </div>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Center } from 'shared/components/layout';\n\nimport { Button } from 'shared/components/controls';\n\nimport './notification-list.scss';\nimport { withStyles } from '@material-ui/core';\n\nconst UserChip = withStyles({\n  root: {\n    background: 'rgba(55, 101, 175, 0.08)',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '& > svg': {\n      marginLeft: '8px'\n    }\n  }\n})(Chip);\n\nconst NotificationList = ({ users, eventTypeIcons, toggleApplyButton, disabled }) => {\n  const filteredUsers = users.filter(user => user.selected);\n  const renderUserList = () => {\n    if (!filteredUsers.length) {\n      return <Center>No notifications applied</Center>;\n    }\n    return filteredUsers.map(user => {\n      return (\n        <UserChip\n          classes={{ root: 'notification-list-item' }}\n          label={\n            <>\n              <span>{user.data.name}</span>\n              {eventTypeIcons}\n            </>\n          }\n          color=\"default\"\n          icon={<PersonIcon size=\"small\" />}\n        />\n      );\n    });\n  };\n\n  let buttonLabel = 'Add';\n  let buttonIcon = <NotificationsNoneIcon />;\n  if (filteredUsers.length) {\n    buttonLabel = 'Edit';\n    buttonIcon = <EditIcon />;\n  }\n\n  return (\n    <div className=\"notification-list-wrapper\">\n      <div>{renderUserList()}</div>\n      <div className=\"notification-list-edit-section\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={toggleApplyButton}\n          startIcon={buttonIcon}\n          endIcon={<ArrowDropDownIcon />}\n          classes={{ root: 'notifications-add-edit' }}\n          disabled={disabled}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport GroupIcon from '@material-ui/icons/Group';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './Entity.scss';\n\n/* eslint-disable */\nconst Entity = ({ entity, selectEntity, columns, entityIcons }) => {\n  const cls = classnames('entity', {\n    '--isSelected': entity.isSelected,\n    'account-entity': entity.entity === 'account'\n  });\n  const user = entity.user_owner;\n  const aliasStr = entity.alias;\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={cls}\n      onClick={event => {\n        selectEntity(entity, columns.level);\n\n        const target = event.currentTarget;\n        const box = target.getBoundingClientRect();\n        const parent = target.parentNode.parentNode;\n\n        setTimeout(function() {\n          parent.scrollTo({ left: box.right, behavior: 'smooth' });\n        }, 200);\n      }}\n    >\n      <LightTooltip placement=\"bottom\" title={entity.entity || ''}>\n        <div className=\"entity-icon-wrap\">{entityIcons[entity.entity]}</div>\n      </LightTooltip>\n      <div className=\"entity-details\">\n        <div className=\"entity-name\">\n          {!!aliasStr && (\n            <div title={`Alias of ${aliasStr}`}>\n              <FilterNoneIcon />\n            </div>\n          )}\n          <LightTooltip placement=\"bottom\" title={entity.name}>\n            <span>{entity.name}</span>\n          </LightTooltip>\n        </div>\n        <div className=\"entity-user\">\n          <GroupIcon />\n          <span>{user}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/* eslint-enable */\n\nexport default Entity;\n","import React from 'react';\nimport Switch from '../components/Switch';\nimport ActionsNamespace from '../components/ActionsNamespace';\nimport ActionsConstant from '../components/ActionsConstant';\nimport ActionsProcess from '../components/ActionsProcess';\nimport ActionsForm from '../components/ActionsForm';\nimport ActionsRoot from '../components/ActionsRoot';\nimport ActionsPrototype from '../components/ActionsPrototype';\nimport ActionsSchedule from '../components/ActionsSchedule';\nimport ActionsCommon from '../components/ActionsCommon';\nimport GroupIcon from '@material-ui/icons/Group';\nimport './SelectedEntity.scss';\n\nconst SelectedEntity = ({ selectedEntity, entityIcons }) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  return (\n    <div className=\"selected-entity\">\n      <div className=\"selected-entity-title\">\n        <div className=\"selected-entity-title-icon\">{entityIcons[selectedEntity.entity]}</div>\n        <div className=\"selected-entity-title-details\">\n          {selectedEntity.name}\n          <div className=\"selected-entity-title-user\">\n            <GroupIcon />\n            <span>{selectedEntity.user_owner}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"entity-detail-wrap\">\n        <div className=\"entity-description-wrap\">{selectedEntity.description}</div>\n\n        <Switch value={selectedEntity.entity}>\n          <Switch.Case value=\"root\">\n            <ActionsRoot />\n          </Switch.Case>\n\n          <Switch.Case value=\"namespace\">\n            <ActionsNamespace entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"constant\">\n            <ActionsConstant entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"form\">\n            <ActionsForm entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"process\">\n            <ActionsProcess entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"prototype\">\n            <ActionsPrototype entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"schedule\">\n            <ActionsSchedule entity={selectedEntity} />\n          </Switch.Case>\n        </Switch>\n        <ActionsCommon entity={selectedEntity} />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedEntity;\n","import React from 'react';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nimport { ConnectedEditNamespace } from './namespace-actions/EditNamespace';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\nimport { ConnectedDeleteNamespace } from './namespace-actions/DeleteNamespace';\n\nconst ActionsNamespace = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const hasWrite = hasWritePrivileges(entity);\n\n  return (\n    <>\n      <ConnectedNewNamespace namespace={entity} />\n      {hasWrite && <ConnectedEditNamespace namespace={entity} />}\n      {deleteRights(entity, hasWrite) && (\n        <ConnectedDeleteNamespace entity={entity} disabled={disableActions} />\n      )}\n    </>\n  );\n};\n\nfunction deleteRights(entity, hasWrite) {\n  return hasWrite && entity.owner !== 'postgres';\n}\n\nexport default ActionsNamespace;\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { getNamespace, patchNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nfunction parseName(namespace) {\n  const split = namespace.name.split('.');\n  const tail = split.length - 1;\n  const parsed = {\n    name: split[tail],\n    fq: namespace.name\n  };\n\n  if (split.length > 1) {\n    parsed.parent = split.slice(0, tail).join('.');\n  } else {\n    parsed.parent = '';\n  }\n\n  return parsed;\n}\n\nexport const ConnectedEditNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    request: fetchEntity\n  }\n)(EditNamespace);\n\nfunction EditNamespace({ namespace, request, nestedNames }) {\n  const canUpdateName = nestedNames.length === 0;\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const split_name = parseName(namespace);\n\n  const getInitialValues = () => {\n    const values = {};\n\n    values.name = split_name.name || '';\n    values.namespace = split_name.parent;\n    values.description = description;\n\n    return values;\n  };\n\n  const getNamespaceDetails = name => {\n    getNamespace(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.namespaces &&\n          data.data.data.namespaces[0] &&\n          data.data.data.namespaces[0].description\n        ) {\n          setDescription(data.data.data.namespaces[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get namespace] error getting namespace details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getNamespaceDetails(namespace.name);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values, split_name);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              {canUpdateName && (\n                                <Text name=\"name\" label=\"Name\" value={values.name} required />\n                              )}\n                              {!canUpdateName && (\n                                <Text\n                                  name=\"name\"\n                                  label=\"Name\"\n                                  value={values.name}\n                                  required\n                                  disabled\n                                  description=\"To update a namespace name, namespace must be empty!\"\n                                />\n                              )}\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                {canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                  />\n                                )}\n                                {!canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                    disabled\n                                    description=\"To update a namespace parent name, namespace must be empty!\"\n                                  />\n                                )}\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values, split_name) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    description: values.description\n  };\n\n  /*\n    If the old entity fully-qualified name does not match with the form value,\n    then we need to add a rename key with the new name.\n   */\n  if (name !== split_name.fq) {\n    body.rename = name;\n  }\n\n  patchNamespace(split_name.fq, body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    refresh: fetchEntity\n  }\n)(DeleteNamespace);\n\nfunction DeleteNamespace({ disabled, entity, refresh, nestedNames }) {\n  const canDelete = nestedNames.length === 0;\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={canDelete}>\n            <Switch.Case value>\n              <Switch value={result}>\n                <Switch.Case value=\"attempt\">\n                  <Paper.Content scrollable={false}>\n                    <Result type=\"fail\">\n                      <BodyText>\n                        Are you sure you want to remove this {type} ? This could affect the way the\n                        user will be able to interact with the app.\n                      </BodyText>\n                    </Result>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          terminator();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"success\">\n                  <Result type=\"success\">\n                    <BodyText>{name} successfully deleted!</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                          refresh(type);\n                        }}\n                      >\n                        Done\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"fail\">\n                  <Result type=\"fail\">\n                    <BodyText>You do not have permissions to delete this entity.</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                        }}\n                      >\n                        Close\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n            <Switch.Case value={false}>\n              <Result type=\"fail\">\n                <BodyText>To delete a namespace it must be empty!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { patchConstant } from 'shared/api/constant';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsConstant = ({ entity }) => {\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConstant constant={entity} />;\n};\n\nexport default ActionsConstant;\n\nexport const ConnectedEditConstant = connect(null, {\n  request: fetchEntity\n})(EditConstant);\n\nfunction EditConstant({ constant, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = constant?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Constant\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Constant was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the constant could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: constant.name, value: constant.value }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" disabled value={constant.name} />\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"value\"\n                                label=\"Value\"\n                                value={constant.value}\n                                description={constant.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const body = {\n    value: values.value\n  };\n\n  patchConstant(values.name, body)\n    .then(() => {\n      setResult('success');\n      request('constant');\n    })\n    .catch(error => {\n      console.log('[edit constant] patch constant error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function patchConstant(name, body) {\n  return RestClient.patch(`/constant/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { ErrorModal, Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { postSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\nimport { isEmpty, pickBy } from 'lodash';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport { EditProcessModal } from './process-actions/EditProcessModal';\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../shared/lib/rest';\nimport moment from 'moment';\nimport { CONSTANTS } from 'config';\n\nimport './ActionsSchedule.scss';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nconst ActionsProcess = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new job.';\n\n  return (\n    <>\n      {entity?.is_executable === false && (\n        <Button\n          classes={{ root: 'entity-button' }}\n          onClick={() => setOpen(true)}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      {entity?.is_executable && (\n        <Button\n          component={LinkBehavior}\n          classes={{ root: 'entity-button' }}\n          to={`/jobs/job?process=${entity.name}&redirected=true`}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      <ConnectedNewSchedule process={entity} isDisabled={isDisabled} />\n      {hasWritePrivileges(entity) && <EditProcessModal process={entity} />}\n      <ErrorModal open={open} actions={modalActions} message={message} />\n    </>\n  );\n};\n\nexport default ActionsProcess;\n\nexport const ConnectedNewSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(NewSchedule);\n\nfunction NewSchedule({ process, isDisabled, request, allScheduledNames }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const [openErrorModal, setOpenErrorModal] = useState(false);\n  const errorModalActions = {\n    open: () => {\n      setOpenErrorModal(true);\n    },\n    close: () => {\n      setOpenErrorModal(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new schedule.';\n\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  // processDetails might be used at a later date\n  const [processDetails, setProcessDetails] = useState({}); // eslint-disable-line\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n\n  const onClickHandler = () => {\n    if (process.is_executable) {\n      setOpen(true);\n    } else {\n      setOpenErrorModal(true);\n    }\n\n    getProcess(process.name)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        New Schedule\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"New Schedule\"\n            icon={\n              <SvgIcon>\n                <SlowMotionVideoIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={process}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={process} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n      <ErrorModal open={openErrorModal} actions={errorModalActions} message={message} />\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nclass ScheduleForm extends React.PureComponent {\n  derivedMonitor = {\n    enabled: false,\n    events: 0,\n    users: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monitor: this.derivedMonitor,\n      serverTime: null\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n  }\n\n  render() {\n    const {\n      process,\n      setResult,\n      allScheduledNames,\n      request,\n      filledValues,\n      setFilledValues,\n      formRef\n    } = this.props;\n\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          errors.sch_name = 'A schedule with this name already exists';\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{ process: process.name }}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"process\"\n                            label=\"Process\"\n                            description={process.description}\n                            value={process.name}\n                            disabled\n                          />\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || undefined}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_hr\" label=\"T_hr\" value={filledValues?.t_hr || '*'} description={CronValidator.FORMAT_MSG.HOURS} />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_day\" label=\"T_Day\" value={filledValues?.t_day || '*'} description={CronValidator.FORMAT_MSG.DAYS} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_mon\" label=\"T_mon\" value={filledValues?.t_mon || '*'} description={CronValidator.FORMAT_MSG.MONTH} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_wkd\" label=\"T_wkd\" value={filledValues?.t_wkd || '*'} description={CronValidator.FORMAT_MSG.DAY_OF_WEEK} />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || process.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={this.derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nasync function handleSubmit(monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { ProcessEditor } from './ProcessEditor';\n\nimport { fetchEntity } from '../../actions';\n\nexport const EditProcessModal = ({ process }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('editing');\n  const formRef = useRef();\n  const modalActions = {\n    open: useCallback(() => {\n      setResult('editing');\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n\n      if (result === 'success') {\n        dispatch(fetchEntity('process'));\n      }\n    }, [result])\n  };\n\n  return (\n    <>\n      <Button classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Edit Process\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Process\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            desc={process.name}\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"editing\">\n              <ProcessEditor process={process} setResult={setResult} formRef={formRef} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Process was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Done</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the process could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Close</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { QualifiedName } from 'shared/components/form/editors/Custom';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { patchProcess } from 'shared/api/process';\n\nimport './ProcessEditor.local.scss';\n\nexport function ProcessEditor({ process, setResult, formRef }) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        saveProcessEdits(values, process, setResult);\n      }}\n      innerRef={formRef}\n    >\n      {() => {\n        return (\n          <>\n            <Paper.Content>\n              <Form>\n                <Section>\n                  <Section.Header>\n                    <Section.Title>Details</Section.Title>\n                  </Section.Header>\n                  <Section.Content>\n                    <Row>\n                      <Column>\n                        <QualifiedName\n                          name=\"process_name\"\n                          label=\"Name\"\n                          value={process.name}\n                          required\n                        />\n                      </Column>\n                    </Row>\n                  </Section.Content>\n                </Section>\n                <Section>\n                  <Section.Content>\n                    {process.steps.map((step, index) => {\n                      return <Step step={step} step_index={index} />;\n                    })}\n                  </Section.Content>\n                </Section>\n              </Form>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <SubmitButton variant=\"contained\">Save</SubmitButton>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nfunction Step({ step, step_index }) {\n  const expressions = parseEvaluatableExpressions(step, step_index);\n  const noEvaluatableExpressions = !expressions.length;\n\n  if (noEvaluatableExpressions) {\n    return null;\n  }\n\n  return (\n    <div className=\"step\">\n      <div className=\"title\">Step: {step.label}</div>\n      <div className=\"description\">{step.description}</div>\n      <div className=\"expressions\">\n        <div className=\"list\">\n          {expressions.map((exp, index) => (\n            <StepExpression key={index} {...exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction StepExpression({ expression, exp_index, step, step_index }) {\n  const name = `step-${step_index}-expression-${exp_index}`;\n  return (\n    <Row>\n      <Text\n        multiline\n        value={expression.evaluate}\n        label={`Expression ${expression.assign || exp_index} of ${step.label}`}\n        name={name}\n        required\n      />\n    </Row>\n  );\n}\n\nfunction parseEvaluatableExpressions(step, step_index) {\n  const { expressions } = step;\n\n  if (!Array.isArray(expressions) || expressions.length === 0) {\n    return [];\n  }\n\n  return expressions.reduce((acc, exp, index) => {\n    if (exp.evaluate) {\n      acc.push({\n        expression: exp,\n        exp_index: index,\n        step,\n        step_index\n      });\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction saveProcessEdits(values, process, setResult) {\n  const { process_name, ...evaluations } = values;\n  const toSend = {};\n\n  const steps = _.cloneDeep(process.steps);\n\n  /**\n   * extract and remap field values.\n   */\n  const extracted = extractFieldInfo(evaluations);\n\n  extracted.forEach(({ step, expression, value }) => {\n    const path = `[${step}].expressions[${expression}].evaluate`;\n\n    _.set(steps, path, value);\n  });\n\n  /** Prepare patch request body */\n  toSend.steps = steps;\n\n  if (process.name !== process_name) {\n    toSend.rename = values.process_name;\n  }\n\n  patchProcess(process.name, toSend)\n    .then(() => {\n      setResult('success');\n    })\n    .catch(() => {\n      setResult('fail');\n    });\n}\n\nfunction extractFieldInfo(all) {\n  const key_struct = /^step-(\\d+)-expression-(\\d+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      step: matched[1],\n      expression: matched[2],\n      value\n    };\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\nimport { postForm } from 'shared/api/form';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButtonNoDirty } from 'shared/components/form/SubmitButtonNoDirty';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { Ensure } from 'core/components/Ensure';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction findFormPrototype(form, prototypes) {\n  const name = form.prototype;\n  const found = prototypes.find(item => item.name === name);\n\n  return found;\n}\n\nfunction findFormEntry(entity, forms) {\n  if (entity.alias) {\n    return forms.find(entry => entry.name === entity.alias);\n  }\n\n  return entity;\n}\n\nconst ActionsForm = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n  return (\n    <>\n      {canWrite && (\n        <Ensure type=\"prototype\" inlineLoader>\n          {({ data: prototypes }) => (\n            <Ensure type=\"form\" inlineLoader>\n              {({ data: forms }) => (\n                <ConnectedFormModal\n                  disabled={disableActions}\n                  form={findFormEntry(entity, forms)}\n                  prototype={findFormPrototype(entity, prototypes)}\n                />\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      )}\n      <ConnectedCopyForm form={entity} />\n    </>\n  );\n};\n\nexport default ActionsForm;\n\nexport const ConnectedCopyForm = connect(null, {\n  request: fetchEntity\n})(CopyForm);\n\nfunction CopyForm({ form, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = form?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Copy\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '300px'\n          }}\n        >\n          <ModalHeader\n            title=\"Copy Form\"\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was copied successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be copied.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: `${form.name}_copy` }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, form.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              Please choose a new name for the copy of form &apos;{form.name}&apos;.\n                            </Section.Header>\n                            <Row>\n                              <Text\n                                name=\"name\"\n                                label=\"Name\"\n                                value={`${form.name}_copy`}\n                                description={form.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButtonNoDirty variant=\"contained\">Save</SubmitButtonNoDirty>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, formName, values) {\n  const body = {\n    name: values.name\n  };\n\n  postForm(formName, body)\n    .then(() => {\n      setResult('success');\n      request('form');\n    })\n    .catch(error => {\n      console.log('[copy form] put form error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButtonNoDirty = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { Section, Row, Column } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Ensure } from 'core/components/Ensure';\n\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { PackedContext } from './FormEditor';\n\nexport const FormParameters = ({ packed, prototype }) => {\n  return (\n    <Section>\n      <Section.Header />\n      <Section.Content>\n        <Ensure type=\"form\">\n          {({ data: forms }) => (\n            <Ensure type=\"type\">\n              {({ data: datatypes }) => (\n                <Ensure type=\"prototype\">\n                  {({ data: prototypes }) => (\n                    <Ensure type=\"process\">\n                      <FieldsAndGroupsEditor\n                        prototype={prototype}\n                        groups={packed.groups}\n                        prototypes={prototypes}\n                        datatypes={datatypes}\n                        forms={forms}\n                      />\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nconst DataContext = React.createContext({ datatypes: [], forms: [], prototypes: [] });\n\nfunction FieldsAndGroupsEditor({ groups, datatypes, prototypes, forms }) {\n  const entities = useMemo(\n    () => ({\n      datatypes,\n      prototypes,\n      forms\n    }),\n    [datatypes, prototypes, forms]\n  );\n\n  return (\n    <>\n      <DataContext.Provider value={entities}>\n        {groups.map((group, index) => (\n          <FieldGroup key={index} pointer={index} group={group} />\n        ))}\n      </DataContext.Provider>\n    </>\n  );\n}\n\nfunction FieldGroup({ group, pointer }) {\n  return (\n    <>\n      {group.instances.map((instance, index) => (\n        <GroupInstance\n          key={`${pointer}|${index}`}\n          group={group}\n          instance={instance}\n          pointers={{ group: pointer, instance: index }}\n          count={group.instances.length}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction GroupInstance({ group, instance, pointers, count }) {\n  let title = group.name ? `Group ${group.name}` : null;\n  if (group.iteration_limit > 1) {\n    title = group.name\n      ? `Group ${group.name} (${pointers.instance + 1} of ${count})`\n      : `Group (Unnamed) (${pointers.instance + 1} of ${count})`;\n  }\n\n  const canAdd =\n    group.iteration_limit > 1 && count - 1 === pointers.instance && count < group.iteration_limit;\n\n  const { dispatch } = useContext(PackedContext);\n\n  return (\n    <div>\n      <Section.Title>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}\n        >\n          {title}\n          {count !== 1 && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_GROUP_INSTANCE',\n                  pointers\n                });\n              }}\n            >\n              Remove Group\n            </Button>\n          )}\n        </div>\n      </Section.Title>\n      <div>\n        {instance.fields.map((field, index) => (\n          <Field\n            key={`${pointers.group}|${pointers.instance}|${field.name}`}\n            group={group}\n            instance={instance}\n            pointers={{ ...pointers, field: index }}\n            field={field}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {canAdd && (\n          <Button\n            onClick={() => {\n              const fields = instance.fields.map(field => {\n                return {\n                  ...field,\n                  values: [{ instance: 0, value: null }]\n                };\n              });\n              const newInstance = {\n                ...instance,\n                instance: instance.instance + 1,\n                fields\n              };\n\n              dispatch({\n                type: 'ADD_GROUP_INSTANCE',\n                pointers,\n                instance: newInstance\n              });\n            }}\n          >\n            Add Group\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Field({ field, pointers }) {\n  return (\n    <div>\n      {field.values.map((value, index) => (\n        <Value\n          key={`${pointers.group}|${pointers.instance}|${field.name}|${index}`}\n          field={field}\n          value={value.value}\n          pointers={{ ...pointers, value: index }}\n          count={field.values.length}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Value({ field, value, pointers, count }) {\n  const packet = useContext(DataContext);\n\n  const canRemove = field.is_repeatable && count !== 1;\n  const canAdd = field.is_repeatable && pointers.value + 1 === count;\n\n  const { dispatch } = useContext(PackedContext);\n\n  const label = field.is_repeatable\n    ? `${field.name} (${pointers.value + 1} of ${count})`\n    : field.name;\n\n  function uniquedName(name, idx) {\n    const string = `group-${idx.group}-instance-${idx.instance}-field-${idx.field}-value-${idx.value}---${field.name}`;\n\n    return string;\n  }\n\n  const parameter = normalize(\n    {\n      name: uniquedName(field.name, pointers),\n      provided_field_name: field.name,\n      is_required: field.is_required,\n      value,\n      data_type: field.data_type,\n      description: field.description,\n      deflt: field.deflt,\n      meta: field.meta\n    },\n    packet.datatypes,\n    packet.prototypes,\n    packet.forms\n  );\n\n  // for some reason, is_required is set as false for a supported parameter (eg: mas0300.sys.invocation.server_list prototype)\n  // FIX ME: need to investigate further, for now, will make the value the same as field\n  parameter.is_required = field.is_required;\n  // console.log(parameter, field);\n\n  const is_supported = parameter.is_supported && parameter.editor.type !== 'hidden';\n\n  if (!is_supported) {\n    return (\n      <Row key={pointers.value}>\n        <p>{field.name} (Unsuported)</p>\n        <Parameter\n          normalized={{ ...parameter, is_required: false, editor: { type: 'text' } }}\n          disabled\n          label={label}\n        />\n      </Row>\n    );\n  }\n\n  return (\n    <Row key={pointers.value}>\n      <Column key={field.name}>\n        <Parameter normalized={parameter} label={label} />\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          {canAdd && canRemove && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_FIELD_VALUE',\n                  pointers\n                });\n              }}\n            >\n              Remove\n            </Button>\n          )}\n          {canAdd && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                onClick={() => {\n                  dispatch({\n                    type: 'ADD_FIELD_VALUE',\n                    pointers\n                  });\n                }}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n        </div>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\n\nconst ActionsRoot = () => {\n  return (\n    <>\n      <ConnectedNewNamespace />\n    </>\n  );\n};\n\nexport default ActionsRoot;\n","import React from 'react';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nconst ActionsPrototype = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <ConnectedFormModal isNew prototype={entity} disabled={disableActions} />\n    </>\n  );\n};\n\nexport default ActionsPrototype;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport _, { isEmpty, pickBy } from 'lodash';\n\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { getSchedule, patchSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\n\nimport './ActionsSchedule.scss';\n\nconst ActionsSchedule = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConnectedEditSchedule schedule={entity} isDisabled={isDisabled} />\n    </>\n  );\n};\n\nexport default ActionsSchedule;\n\nexport const ConnectedEditSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(EditSchedule);\n\nfunction EditSchedule({ schedule, isDisabled, allScheduledNames, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const [processDetails, setProcessDetails] = useState({});\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n  const [everyHourWarningShown] = useState({});\n\n  useEffect(() => {\n    if (!_.isEmpty(scheduleDetails) && !_.isEmpty(processDetails)) {\n      setOpen(true);\n    }\n  }, [scheduleDetails, processDetails]);\n\n  const onClickHandler = () => {\n    /** TODO cover the case when one (or both) of the below calls fail or no data is returned from them */\n\n    getSchedule(schedule.name)\n      .then(data => {\n        if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n          setScheduleDetails(data.data.data.schedules[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n\n    getProcess(schedule.process)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Schedule\"\n            icon={\n              <SvgIcon>\n                <EventNoteIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={processDetails}\n                    schedule={scheduleDetails}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                    everyHourWarningShown={everyHourWarningShown}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={processDetails} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({\n  schedule,\n  setResult,\n  allScheduledNames,\n  request,\n  filledValues,\n  setFilledValues,\n  formRef,\n  everyHourWarningShown\n}) => {\n  const derivedMonitor = {\n    enabled: !!schedule?.parameters?.events,\n    events: schedule?.parameters?.events || 0,\n    users: schedule?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const splittedName = schedule.name.split('.');\n  const name = splittedName[splittedName.length - 1];\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name) {\n      if (sch_name.includes('.')) {\n        errors.sch_name = 'Name cannot include \".\"';\n      } else if (sch_name.includes(' ')) {\n        errors.sch_name = 'Name cannot include spaces';\n      } else if (allScheduledNames.includes(sch_name) && name !== sch_name) {\n        errors.sch_name = 'A schedule with this name already exists';\n      }\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n      errors.t_hr = 'At least one value should be populated';\n      errors.t_day = 'At least one value should be populated';\n      errors.t_mon = 'At least one value should be populated';\n      errors.t_wkd = 'At least one value should be populated';\n      return errors;\n    }\n\n    if (!CronValidator.isValidMinutes(t_min)) {\n      errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n    }\n\n    if (!CronValidator.isValidHours(t_hr)) {\n      errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n    }\n\n    if (!CronValidator.isValidDays(t_day)) {\n      errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n    }\n\n    if (!CronValidator.isValidMonth(t_mon)) {\n      errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n    }\n\n    if (!CronValidator.isValidWeekDay(t_wkd)) {\n      errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={values => {\n          handleSubmit(schedule, monitor, setResult, request, setFilledValues, values);\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={schedule.description}\n                          value={schedule.process}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"sch_name\"\n                          label=\"Name\"\n                          value={filledValues?.rename || name}\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={filledValues?.description || schedule.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_min\"\n                            label=\"T_min\"\n                            value={filledValues?.t_min || schedule.t_min}\n                            description={CronValidator.FORMAT_MSG.MINUTES}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_hr\"\n                            label=\"T_hr\"\n                            value={filledValues?.t_hr || schedule.t_hr}\n                            description={CronValidator.FORMAT_MSG.HOURS}\n                          />\n                          {everyHourWarningShown && (\n                            <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                          )}\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_day\"\n                            label=\"T_Day\"\n                            value={filledValues?.t_day || schedule.t_day}\n                            description={CronValidator.FORMAT_MSG.DAYS}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_mon\"\n                            label=\"T_mon\"\n                            value={filledValues?.t_mon || schedule.t_mon}\n                            description={CronValidator.FORMAT_MSG.MONTH}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_wkd\"\n                            label=\"T_wkd\"\n                            value={filledValues?.t_wkd || schedule.t_wkd}\n                            description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <ProcessParameters\n                    recieved={filledValues?.parameters || schedule.parameters}\n                    editable\n                  />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(schedule, monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    rename: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  patchSchedule(schedule.name, body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[edit schedule] edit schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getAlias, patchAlias, postAlias } from 'shared/api/alias';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { ConnectedDeleteEntity } from './common-actions/DeleteEntity';\nimport { PrivilegesModal } from './common-actions/privileges/PrivilegesModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction isEntityDeletable(entity) {\n  return (\n    entity.owner !== 'postgres' &&\n    (entity.entity === 'form' ||\n      entity.entity === 'process' ||\n      entity.entity === 'schedule' ||\n      entity.entity === 'account')\n  );\n}\n\nconst ActionsCommon = ({ entity }) => {\n  const displayActions = entity.entity !== 'root';\n  if (displayActions) {\n    const displayDelete = isEntityDeletable(entity);\n    const isAlias = entity.alias;\n    const disableActions = entity?.meta?.appearance === 'Greyed';\n    const canWrite = hasWritePrivileges(entity);\n\n    return (\n      <>\n        {canWrite && (\n          <PrivilegesModal entity={entity} isAlias={isAlias} disabled={disableActions} />\n        )}\n        {!isAlias && <ConnectedNewAlias entity={entity} />}\n        {isAlias && canWrite && <ConnectedEditAlias entity={entity} />}\n        {canWrite && displayDelete && (\n          <ConnectedDeleteEntity entity={entity} disabled={disableActions} />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nexport default ActionsCommon;\n\n//* These should be moved to the common-actions folder */\n\nexport const ConnectedNewAlias = connect(null, {\n  request: fetchEntity\n})(NewAlias);\n\nfunction NewAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: '',\n                  original: entity ? entity.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const alias = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name: values.original,\n    alias,\n    description: values.description\n  };\n\n  postAlias(body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedEditAlias = connect(null, {\n  request: fetchEntity\n})(EditAlias);\n\nfunction EditAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = entity.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.original = entity ? entity.alias : '';\n    values.description = description;\n\n    return values;\n  };\n\n  const getAliasDetails = name => {\n    getAlias(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.aliases &&\n          data.data.data.aliases[0] &&\n          data.data.data.aliases[0].description\n        ) {\n          setDescription(data.data.data.aliases[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get alias] error getting alias details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getAliasDetails(entity.name);\n        }}\n      >\n        Edit Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleEditSubmit(setResult, request, entity.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleEditSubmit(setResult, request, originalName, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    rename: name,\n    description: values.description\n  };\n\n  patchAlias(originalName, body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity, clearSelectedEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteEntity = connect(null, {\n  clearSelected: clearSelectedEntity,\n  refresh: fetchEntity\n})(DeleteEntity);\n\nfunction DeleteEntity({ disabled, entity, refresh, clearSelected }) {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove this {type} ? This could affect the way the user\n                    will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <BodyText>{name} successfully deleted!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                      clearSelected();\n                      refresh(type);\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <BodyText>You do not have permissions to delete this entity.</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { PrivilegesEditor } from './PrivilegesEditor';\n\nexport const PrivilegesModal = ({ disabled, entity, isAlias }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      // refresh(entity.type);\n      setOpen(false);\n    }, [])\n  };\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Privileges\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vw',\n            minHeight: '648px',\n            maxHeight: '648px'\n          }}\n        >\n          <ModalHeader\n            title=\"Privileges\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <PrivilegesEditor entity={entity} isAlias={isAlias} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\n\nimport { Paper, Center, NavigationTab } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Result, ModalContext } from 'shared/components/overlays';\nimport { Button, Checkbox as LabeledCheckbox } from 'shared/components/controls';\n\nimport { getPrivileges, setPrivileges } from 'shared/api/privileges';\n\nimport './PrivilegesEditor.local.scss';\nimport { mdiAccount } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nexport const PrivilegesEditor = ({ entity }) => {\n  const hasAlias = !!entity.alias;\n  const {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    updatePrivilege\n  } = usePrivileges(entity, hasAlias);\n  const [tab, switchTab] = useState('users');\n  const { actions } = useContext(ModalContext);\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader>Loading privileges for entity</Loader>\n      </Center>\n    );\n  }\n\n  if (!data) {\n    return (\n      <Center>\n        <Result type=\"fail\">\n          <Result.Text compact>Could not load privileges list for {entity.name}</Result.Text>\n        </Result>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab\n          active={tab}\n          tabs={[\n            { label: 'Users', value: 'users' },\n            { label: 'Groups', value: 'groups' }\n          ]}\n          onClick={switchTab}\n        />\n      </Paper.Header>\n      <PrivilegesList\n        privileges={data.privileges.filter(p => {\n          if (p.role === 'mas') {\n            return false;\n          }\n          if (p.role === 'admin') {\n            return false;\n          }\n          if (tab === 'users') {\n            return !p.is_group;\n          }\n\n          return p.is_group;\n        })}\n        updater={privilege => {\n          updatePrivilege(privilege);\n        }}\n        updating={updating}\n        entityType={entity.entity}\n        entityName={hasAlias && editAliasParent ? entity.alias : entity.name}\n        isAlias={hasAlias && !editAliasParent}\n      />\n      <Paper.Footer>\n        {!!entity.alias && (\n          <Paper.Footer.Left>\n            <LabeledCheckbox\n              color=\"primary\"\n              icon={<CheckBoxOutlineBlankIcon />}\n              checkedIcon={<CheckBoxIcon />}\n              checked={editAliasParent}\n              onChange={() => {\n                setEditAliasParent(!editAliasParent);\n              }}\n              label=\"Show parent privileges\"\n            />\n          </Paper.Footer.Left>\n        )}\n        <Paper.Footer.Right>\n          <Button color=\"primary\" variant=\"contained\" onClick={actions.close}>\n            Done\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nfunction PrivilegesList({ privileges, updating, updater, entityType, entityName, isAlias }) {\n  const types = privilegeTypes(entityType, isAlias);\n\n  function renderType(type) {\n    return (\n      <div className=\"column role\" key={type}>\n        {type}\n      </div>\n    );\n  }\n\n  function mapByEntity(user_or_group) {\n    return (\n      <div className=\"item\" key={`alias-${isAlias}-role-${user_or_group.role}`}>\n        <div className=\"column role\">\n          <SvgIcon color=\"primary\">\n            <path d={mdiAccount} />\n          </SvgIcon>\n          {user_or_group.role}\n        </div>\n        <div className=\"types\">\n          {types.map(type => {\n            const granted = user_or_group.effective.includes(type);\n            return (\n              <div\n                className=\"column type \"\n                key={`c-alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n              >\n                <Checkbox\n                  key={`alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n                  classes={{ root: 'privilege-checkbox' }}\n                  checked={granted}\n                  disabled={updating}\n                  onChange={() => {\n                    updater({\n                      privilege: type,\n                      enitity_name: entityName,\n                      alias: isAlias,\n                      role: user_or_group.role,\n                      role_type: user_or_group.is_group ? 'group' : 'user',\n                      granted\n                    });\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"privileges\">\n      <div className=\"header\">\n        {renderType('Name')}\n        <div className=\"types\">{types.map(renderType)}</div>\n      </div>\n      <div className=\"list\">\n        {privileges\n          .sort((a, b) => a?.role?.toLowerCase()?.localeCompare(b?.role?.toLowerCase()))\n          .map(mapByEntity)}\n      </div>\n    </div>\n  );\n}\n\nfunction privilegeTypes(entityType, alias = false) {\n  const type = entityType.toLowerCase();\n  const privileges = [];\n  if (!alias) {\n    if (type === 'namespace') {\n      privileges.push('affiliate');\n    } else if (['account', 'constant', 'form', 'process'].includes(type)) {\n      privileges.push('execute');\n    }\n  }\n  privileges.push('read', 'write');\n  return privileges;\n}\n\nfunction usePrivileges(entity, hasAlias) {\n  const [editAliasParent, setEditAliasParent] = useState(!hasAlias);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getPrivileges(\n      hasAlias && editAliasParent ? entity.alias : entity.name,\n      hasAlias && !editAliasParent\n    )\n      .then(resp => {\n        setData(resp?.data?.data?.entities?.[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setData(null);\n        setLoading(false);\n      });\n  }, [editAliasParent]);\n\n  const updatePrivilege = useCallback(\n    privilege => {\n      setUpdating(true);\n      setPrivileges(privilege)\n        .then(resp => {\n          setData(resp?.data?.data?.entities?.[0]);\n          setUpdating(false);\n        })\n        .catch(() => {\n          setUpdating(false);\n        });\n    },\n    [entity, editAliasParent]\n  );\n\n  return {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    setUpdating,\n    setData,\n    updatePrivilege\n  };\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { arrayOf, node, string, shape } from 'prop-types';\n\nimport './HeaderPageSwitch.local.scss';\n\nexport const HeaderPageSwitch = ({ routes }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header-page-switch\" data-qa=\"header-page-switch\">\n      {routes.map(({ to, label }) => (\n        <div\n          key={to}\n          className={classnames('header-page-switch-link', {\n            'active-link': location.pathname.includes(to)\n          })}\n        >\n          <Link key={to} to={to} data-qa={`header-page-switch-link-to-${to}`}>\n            {label}\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nHeaderPageSwitch.propTypes = {\n  routes: arrayOf(\n    shape({\n      to: string,\n      label: node\n    })\n  )\n};\n\nHeaderPageSwitch.defaultProps = {\n  routes: []\n};\n","import React, { useEffect } from 'react';\nimport { func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadUserThunk } from '../../store/thunks';\n\nimport { ConnectedUserView } from '../pages/UserView/UserView';\n\nexport const UserLoader = ({ loadUser, loading }) => {\n  const { userName } = useParams();\n  useEffect(() => {\n    if (userName) {\n      loadUser(userName);\n    }\n  }, [userName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading User <b>{userName}</b>\n        </Loader>\n      ) : (\n        <ConnectedUserView />\n      )}\n    </>\n  );\n};\n\nUserLoader.propTypes = {\n  loadUser: func,\n  loading: bool\n};\n\nexport const ConnectedUserLoader = connect(\n  state => ({\n    loading: state.usersManager.flags.user.loading\n  }),\n  dispatch => ({ loadUser: name => dispatch(loadUserThunk(name)) })\n)(UserLoader);\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { UserGroupsContainer } from './containers/UserGroups';\n\nimport './UserView.local.scss';\nimport { deactivateUserThunk } from '../../../store/thunks';\nimport { EditUserDetailsContainer } from './containers/EditUserDetails';\nimport { EditUserInfoContainer } from './containers/EditUserInfo';\n\nimport { currentUserSelector } from 'session/store/state';\nimport { getCurrentUserDetails } from 'session/store/selectors';\n\nimport { isAdmin } from 'entities/utils/privileges';\n\nexport const UserView = ({ user, deactivateUser, deactivating, loggedUser, userDetails }) => {\n  const defaultResult = () => {\n    if (loggedUser.get('name') === user?.name) {\n      return 'self';\n    }\n\n    if (!isAdmin(userDetails)) {\n      return 'not-admin';\n    }\n\n    return 'attempt';\n  };\n  const [result, setResult] = useState(defaultResult);\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult(defaultResult);\n      setOpen(false);\n    }, [])\n  };\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  const deactivate = useCallback(() => {\n    deactivateUser(user)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not deactivate user!'); // eslint-disable-line\n      });\n  }, [user]);\n  const titleStyles = { textTransform: 'none' };\n\n  if (noGroups) {\n    titleStyles.fontStyle = 'italic';\n  }\n\n  /* This needs to be written as a result check or 404 page for a user. */\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title style={titleStyles}>{user.name}</Paper.Title>\n        </Paper.Header>\n        <Paper.Content>\n          <Section>\n            <Section.Title>Global Privileges</Section.Title>\n            <PrivilegesContainer />\n          </Section>\n          <Section>\n            <Section.Title>Member of Groups</Section.Title>\n            <UserGroupsContainer />\n          </Section>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            {user?.name !== 'mas' && (\n              <Button\n                color=\"secondary\"\n                disabled={deactivating || noGroups}\n                onClick={modalActions.open}\n              >\n                Deactivate user\n              </Button>\n            )}\n            <EditUserDetailsContainer />\n            <EditUserInfoContainer />\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Deactivate user\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"self\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>You cannot deactivate yourself.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"not-admin\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Only admin users can deactivate other users.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to deactivate user {user.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('deactivating');\n                      deactivate();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"deactivating\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Deactivating...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const ConnectedUserView = connect(\n  state => ({\n    user: state.usersManager.users.selected,\n    deactivating: state.usersManager.flags.user.removing,\n    loggedUser: currentUserSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    deactivateUser: userName => dispatch(deactivateUserThunk(userName))\n  })\n)(UserView);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../../store/thunks';\n\nexport const Privileges = ({ user, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <div className=\"user-privileges\">\n      <ul className=\"privileges-list\">\n        {privileges.map(entry => {\n          return (\n            <li key={entry.key} className=\"privileges-item\">\n              <Privilege user={user} privilege={entry} actions={actions} disabled={disabled} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPrivileges.propTypes = {\n  user: string,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ user, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(user, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  user: string,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      disabled: user?.name === 'mas' || state.usersManager.flags.privileges.disabled,\n      privileges: mapPrivileges(user.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (user, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      ),\n    revoke: (user, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction mapPrivileges(data) {\n  if (!data) return [];\n\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { ScrollableContainer, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditUserGroupsContainer } from './EditUserGroups';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './UserGroups.local.scss';\nimport { removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const UserGroups = ({ user, groups, removeFromGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeFromGroups(user, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.type === 'fail') {\n          setResult('error');\n          setErrorMessage(response.message);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [user, selectedGroup]);\n\n  const isOnlySelect = groups?.length === 1 && groups[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove user ${user} from group ${selectedGroup}? This\n  could affect the way the user will be able to interact with the app`;\n\n  return (\n    <>\n      <div className=\"user-groups-block\">\n        <ScrollableContainer variant=\"row white\">\n          {passed => (\n            <ul {...passed}>\n              {groups &&\n                groups.map(group_name => (\n                  <li className=\"group-card-item\" key={group_name}>\n                    <AvatarCard\n                      label={group_name}\n                      disabled={user === 'mas'}\n                      avatar={{ fallback: <GroupIcon /> }}\n                      action={\n                        <SvgIcon\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSelectedGroup(group_name);\n                            modalActions.open();\n                          }}\n                        >\n                          <path d={mdiDeleteCircleOutline} />\n                        </SvgIcon>\n                      }\n                      description={retrieveGroupDescription(group_name)}\n                    />\n                  </li>\n                ))}\n              <li className=\"group-card-item\" key=\"add-user-to-groups\">\n                <EditUserGroupsContainer />\n              </li>\n            </ul>\n          )}\n        </ScrollableContainer>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setErrorMessage('An error occurred.');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  removeFromGroups: func\n};\n\nexport const UserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    const visibleGroups = user.member_of?.filter(group => group !== 'user');\n\n    return {\n      user: user.name,\n      groups: visibleGroups,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n  })\n)(UserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './EditUserGroups.local.scss';\nimport { addUserToGroupsThunk, removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const EditUserGroups = ({ user, groups, addToGroups, flags, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  if (user === 'mas') {\n    return null;\n  }\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard label=\"Add to group\" avatar={{ fallback: <AddIcon /> }} />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                user={user}\n                selected={groups}\n                flags={flags}\n                closeModal={closeModal}\n                onAdd={(userName, selections) => {\n                  return addToGroups(userName, selections);\n                }}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nEditUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  addToGroups: func,\n  flags: object\n};\n\nexport const EditUserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      groups: user.member_of,\n      flags: state.usersManager.flags.user,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    addToGroups: (user, groups) => dispatch(addUserToGroupsThunk({ user, groups })),\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n    /** add to group thunk here */\n    /** remove from group thunk here */\n  })\n)(EditUserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nconst GroupsList = ({\n  user,\n  selected,\n  onAdd,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    loading: true,\n    done: false,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => selected && !selected.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, selected]);\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.done && !state.all.length) {\n    return <p>Could not retrieve all groups</p>;\n  }\n\n  if (state.success) {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Added to selected groups succesfully!</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.fail) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>{capitalizeFirstLetter(state.fail)}</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? selected.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that the user is a part of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              onAdd(user, state.selections)\n                .then(response => {\n                  if (typeof response === 'object' && response.type === 'fail') {\n                    setState(\n                      produce(state, draft => {\n                        draft.fail = response.message;\n                      })\n                    );\n                  } else {\n                    setState(\n                      produce(state, draft => {\n                        draft.success = true;\n                      })\n                    );\n                  }\n                })\n                .catch(err => {\n                  setState(\n                    produce(state, draft => {\n                      draft.fail = err;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  user: string,\n  selected: array,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useRef } from 'react';\nimport { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { ChangePasswordContainer } from './ChangePassword';\nimport { UserDatesBox } from '../components/UserDatesBox';\n\n// import './EditUserDetails.local.scss';\n\nexport const EditUserDetails = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        User Details\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '370px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-details\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"User Details\"\n            formikRef={formRef}\n          />\n          <UserDetailsForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserDetails.propTypes = {\n  user: object\n};\n\nexport const EditUserDetailsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserDetails);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserDetailsForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ submitResult: undefined });\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  const initialValues = {\n    description: user.description\n  };\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          if (_.isEqual(initialValues, values)) {\n            actions.setSubmitting(false);\n            modalActions.close();\n          }\n\n          // parse and add user information form data.\n\n          /**\n            patch user description\n            */\n          RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`, {\n            description: values.description\n          })\n            .then(() => {\n              setState(prev => ({ ...prev, submitResult: 'success' }));\n            })\n            .catch(() => {\n              actions.setSubmitting(false);\n\n              setState(prev => ({ ...prev, submitResult: 'fail' }));\n            });\n        }}\n        innerRef={formRef}\n      >\n        {({ dirty, isSubmitting, submitForm }) => (\n          <>\n            <Paper.Content scrollable>\n              <Form>\n                <UserDatesBox created={user.date_created} updated={user.date_updated} />\n                <Row>\n                  <Field name=\"description\">\n                    {({ field, meta }) => {\n                      return (\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          error={meta.error && meta.touched}\n                          helperText={meta.touched ? meta.error : undefined}\n                          label=\"Short Description\"\n                        />\n                      );\n                    }}\n                  </Field>\n                </Row>\n              </Form>\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <ChangePasswordContainer />\n              </Paper.Footer.Left>\n              <Paper.Footer.Right>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || isSubmitting}\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nUserDetailsForm.propTypes = {\n  user: object,\n  modalActions: object\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { SvgIcon } from '@material-ui/core';\nimport { mdiAccountPlus, mdiAccountEdit } from '@mdi/js';\nimport moment from 'moment';\n\nimport './UserDatesBox.local.scss';\n\nexport const UserDatesBox = ({ created, updated }) => (\n  <div className=\"dates-box\">\n    {created && <DateCreated date={created} />}\n    {updated && <DateUpdated date={updated} />}\n  </div>\n);\n\nUserDatesBox.propTypes = { created: string, updated: string };\n\nexport const DateCreated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountPlus} />\n    </SvgIcon>\n    <span>Created on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateCreated.propTypes = { date: string };\n\nexport const DateUpdated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountEdit} />\n    </SvgIcon>\n    <span>Updated on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateUpdated.propTypes = { date: string };\n\nfunction parseDate(date) {\n  return moment(date).format('MMM DD YYYY');\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\n// import './EditUserInfo.local.scss';\n\nexport const EditUserInfo = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Contact Info\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '632px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"Contact Information\"\n            formikRef={formRef}\n          />\n          <UserInfoForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserInfo.propTypes = {\n  user: object\n};\n\nexport const EditUserInfoContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserInfo);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserInfoForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ loading: true });\n\n  useEffect(() => {\n    const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n    const prototypeEndpoint = 'prototype/mas0300.sys.user.information?version=1';\n\n    RestClient.get(prototypeEndpoint).then(formproto => {\n      const proto = formproto.data.data.prototypes[0];\n\n      RestClient.get(formEndpoint)\n        .then(formdata => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: false,\n            data: formdata.data.data.forms[0],\n            proto\n          });\n        })\n        .catch(() => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: true,\n            proto\n          });\n        });\n    });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <>\n        <Center>\n          <Loader />\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"primary\" onClick={modalActions.close}>\n              Cancel\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.result === 'success') {\n    const { fields, values } = mapFormValues(state.proto, state.data);\n\n    return (\n      <>\n        <Formik\n          validateOnChange={false}\n          initialValues={values}\n          onSubmit={(submited, actions) => {\n            if (_.isEqual(values, submited)) {\n              actions.setSubmitting(false);\n              modalActions.close();\n            }\n\n            const sendable_data = fields.reduce((d, entry) => {\n              /** Empty values have to be nulled to be sent in the data :( */\n              let value = submited[entry.name] || null;\n\n              /**\n                TODO: backend accepts array for is_repeatable values\n               */\n              if (entry.is_repeatable && !Array.isArray(value)) {\n                value = [value];\n              }\n\n              d.push({\n                name: entry.label, // for this particular form, the names contain spaces.\n                value\n              });\n\n              return d;\n            }, []);\n            // parse and add user information form data.\n\n            /**\n            Send user.info data to backend\n            */\n            const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n\n            if (state.create) {\n              const body = {\n                name: `mas0000.user.${user.name}.form.user_information`,\n                description: `User information for ${user.name}`,\n                values: sendable_data,\n                prototype: state.proto.name\n              };\n\n              RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.FORM}`, body)\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            } else {\n              RestClient.patch(formEndpoint, {\n                description: state.data.description,\n                rename: state.data.name,\n                values: sendable_data\n              })\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            }\n          }}\n          innerRef={formRef}\n        >\n          {({ dirty, isSubmitting, submitForm }) => (\n            <>\n              <Paper.Content scrollable>\n                <Form style={{ paddingTop: '16px' }}>\n                  {fields.map(entry => (\n                    <Row key={entry.name}>\n                      <FieldSwitch parameter={entry} />\n                    </Row>\n                  ))}\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button color=\"primary\" onClick={modalActions.close}>\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!dirty || isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          )}\n        </Formik>\n      </>\n    );\n  }\n};\n\nfunction mapFormValues(proto, provided) {\n  const { fields } = proto;\n  const data = provided && provided.values;\n\n  return fields.reduce(\n    (dict, entry, index) => {\n      const normalized = entry.name.replace(' ', '_');\n      const value = data && data[index].value;\n\n      if (entry.is_repeatable && Array.isArray(entry.value)) {\n        /**\n          TODO: array values have to be unpacked\n         */\n        dict.values[normalized] = value ? value[0] : '';\n      } else {\n        dict.values[normalized] = value || '';\n      }\n\n      dict.fields.push({\n        ...entry,\n        name: normalized,\n        label: entry.name\n      });\n\n      return dict;\n    },\n    { values: {}, fields: [] }\n  );\n}\n\nexport const TextField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    const schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAccountOff } from '@mdi/js';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './UserCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const UserCard = ({ href, user }) => {\n  const { pathname } = useLocation();\n  const { name, src } = user;\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  return (\n    <Link\n      to={href}\n      className={classnames('user-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`user-card-of-${name}`}\n    >\n      <Avatar className=\"user-avatar\" alt={name} src={src}>\n        {user.name[0].toUpperCase()}\n      </Avatar>\n      <span className={classnames('user-name', { groupless: noGroups })}>{name}</span>\n      {noGroups && (\n        <LightTooltip placement=\"bottom\" title=\"Deactivated user\">\n          <SvgIcon className=\"deactivated-icon\">\n            <Icon path={mdiAccountOff} />\n          </SvgIcon>\n        </LightTooltip>\n      )}\n    </Link>\n  );\n};\n\nUserCard.propTypes = {\n  href: string,\n  user: object\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoUserSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>User Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a user from the list to view or edit their details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n  </Paper>\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Section, Center, Row, Column } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { NewUserGroups } from './components/NewUserGroups';\n\nimport { createUserThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewUser.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmpassword: Yup.string()\n    .required('Please confim the password you entered')\n    .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  groups: Yup.array()\n});\n\nconst CreateNewUser = ({ submitUserValues, allUsers, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.username) ||\n      (values.username && values.username.substr(-1) === '.')\n    ) {\n      errors.username = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allUsers.map(user => {\n      if (exists) return;\n\n      if (user.name === values.username) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.username = 'A user with this name already exists';\n    }\n\n    if (values.password) {\n      if (/[$\\\\/\":;']/.test(values.password)) {\n        errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n      } else if (values.password.length < 8) {\n        errors.password = 'Password must contain at least eight characters';\n      } else if (!/[a-z]/.test(values.password)) {\n        errors.password = 'Password must have at least a lower case letter (ex: a, b, etc.)';\n      } else if (!/[A-Z]/.test(values.password)) {\n        errors.password = 'Password must have at least a upper case letter (ex: A, B, etc.)';\n      } else if (!/[0-9]/.test(values.password)) {\n        errors.password = 'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n      } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n        errors.password =\n          'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n      }\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /** Not used. Navigating dirrectly to new user */\n    if (operation.result === 'success') {\n      return (\n        <>\n          <Paper>\n            <Paper.Content scrollable={false}>\n              <Center>\n                <Result type={operation.result}>\n                  <Result.Text>User created successfully</Result.Text>\n                </Result>\n              </Center>\n            </Paper.Content>\n            <Paper.Footer>\n              <Button to=\"/system/mas-accounts/users\" component={Link}>\n                Go to user\n              </Button>\n            </Paper.Footer>\n          </Paper>\n        </>\n      );\n    }\n\n    let errorMessage = 'Could not create new user';\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirmpassword: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitUserValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.username));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <Paper>\n          <Form className=\"create-new-user-form\">\n            <Paper.Title>New User</Paper.Title>\n            <Paper.Content>\n              <Section>\n                <Section.Title>User Details</Section.Title>\n                <Section.Content>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"username\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"description\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            label=\"Short Description\"\n                            placeholder=\"Short description\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"password\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"confirmpassword\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            autoComplete=\"off\"\n                            required\n                            label=\"Confirm Password\"\n                            placeholder=\"Confirm Passwords\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                </Section.Content>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <NewUserGroups\n                      groups={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <div className=\"left-side-action\">\n                <Button to=\"/system/mas-accounts/users\" color=\"primary\">\n                  Cancel\n                </Button>\n              </div>\n\n              <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !isValid}>\n                Save\n              </Button>\n            </Paper.Footer>\n          </Form>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewUser.propTypes = { submitUserValues: func };\n\nexport const CreateNewUserPage = connect(\n  state => ({\n    allUsers: state.usersManager.users.all,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitUserValues: values => dispatch(createUserThunk(values))\n  })\n)(CreateNewUser);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './NewUserGroups.local.scss';\n\nexport const NewUserGroups = ({ groups, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {groups.map(group_name => (\n            <li className=\"group-card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = groups.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"group-card-item\" key=\"add-user-to-groups\">\n            <GroupsSelection\n              selected={groups}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nNewUserGroups.propTypes = {\n  username: string,\n  groups: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                selected={selected}\n                helpers={helpers}\n                closeModal={closeModal}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({\n  selected,\n  helpers,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                      setIsFormChanged(true);\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './GroupCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const GroupCard = ({ href, group }) => {\n  const { pathname } = useLocation();\n\n  const { name, src } = group;\n  return (\n    <Link\n      to={href}\n      className={classnames('group-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`group-card-of-${name}`}\n    >\n      <Avatar className=\"group-avatar\" alt={name} src={src}>\n        {group.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"group-name\">{name}</span>\n    </Link>\n  );\n};\n\nGroupCard.propTypes = {\n  href: string,\n  group: object\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { loadGroupThunk, removeGroupThunk } from '../../store/thunks';\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { GroupUsersContainer } from './containers/GroupUsers';\nimport { SubGroupsContainer } from './containers/SubGroups';\n\nimport './GroupView.local.scss';\n\nexport const GroupView = ({ group, removing, removeGroup }) => {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const deleteGroup = useCallback(() => {\n    removeGroup(group.name)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n        history.push('/system/mas-accounts/groups');\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group!'); // eslint-disable-line\n      });\n  }, [group]);\n\n  /* This needs to be written as a result check or 404 page for a group. */\n  if (!group) {\n    return <></>;\n  }\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title>{group.name}</Paper.Title>\n        </Paper.Header>\n\n        <Paper.Content scrollable>\n          <PrivilegesContainer />\n          <GroupUsersContainer />\n          <SubGroupsContainer />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"secondary\" disabled={removing} onClick={modalActions.open}>\n              Remove\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove group {group.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      deleteGroup();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupView.propTypes = {\n  group: object,\n  removing: bool,\n  removeGroup: func\n};\n\nexport const ConnectedGroupView = connect(\n  state => ({\n    group: state.groups.selected,\n    removing: state.groups.ops.remove.loading\n  }),\n  dispatch => ({\n    removeGroup: name => dispatch(removeGroupThunk(name))\n  })\n)(GroupView);\n\nexport const GroupLoader = ({ loadGroup, loading }) => {\n  const { groupName } = useParams();\n  useEffect(() => {\n    if (groupName) {\n      loadGroup(groupName);\n    }\n  }, [groupName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading Group <b>{groupName}</b>\n        </Loader>\n      ) : (\n        <ConnectedGroupView />\n      )}\n    </>\n  );\n};\n\nGroupLoader.propTypes = {\n  loadGroup: func,\n  loading: bool\n};\n\nexport const ConnectedGroupLoader = connect(\n  state => ({\n    loading: state.groups.ops.selected.loading\n  }),\n  dispatch => ({ loadGroup: name => dispatch(loadGroupThunk(name)) })\n)(GroupLoader);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { object, string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { Section } from 'shared/components/layout';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../store/thunks';\n\nexport const Privileges = ({ group, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Class privileges:</Section.Title>\n        <Section.Info>\n          Effective class privileges are calculated based on explicit grants and denies in this\n          group and in groups of which this group may be a member\n        </Section.Info>\n      </Section.Header>\n      <div className=\"user-privileges\">\n        <ul className=\"privileges-list\">\n          {privileges.map(entry => {\n            return (\n              <li key={entry.key} className=\"privileges-item\">\n                <Privilege group={group} privilege={entry} actions={actions} disabled={disabled} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nPrivileges.propTypes = {\n  group: object,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ group, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(group.name, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  group: object,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      disabled: state.groups.ops.privileges.loading,\n      privileges: mapPrivileges(group.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (group, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      ),\n    revoke: (group, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport './GroupUsers.local.scss';\nimport { EditGroupUsersContainer } from './EditGroupUsers';\n\nimport { removeUsersFromGroupThunk } from '../../../store/thunks';\n\nexport const GroupUsers = ({ group, removeUsersFromGroup }) => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeUsersFromGroup(group.name, selectedUser)\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [group, selectedUser]);\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Users in this group</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.users.map(user => (\n              <li className=\"card-item\" key={user}>\n                <AvatarCard\n                  label={user}\n                  avatar={{ initial: user.charAt(0) }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setSelectedUser(user);\n                        modalActions.open();\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"card-item\" key=\"add-user-to-groups\">\n              <EditGroupUsersContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {selectedUser} from group {group.name}?\n                    This could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupUsers.propTypes = {\n  group: object,\n  removeUsersFromGroup: func\n};\n\nexport const GroupUsersContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeUsersFromGroup: (group, user) => dispatch(removeUsersFromGroupThunk({ group, user }))\n  })\n)(GroupUsers);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { addUsersToGroupThunk } from '../../../store/thunks';\n\nimport './EditGroupUsers.local.scss';\n\nexport const EditGroupUsers = ({ group, addUsersToGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add user\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the users you want to add this group\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <UsersSelection\n                  group={group}\n                  closeModal={closeModal}\n                  onAdd={selections => {\n                    return addUsersToGroup(group.name, selections);\n                  }}\n                  setIsFormChanged={setIsFormChanged}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditGroupUsers.propTypes = {\n  group: object,\n  addUsersToGroup: func\n};\n\nexport const EditGroupUsersContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    addUsersToGroup: (group, users) => dispatch(addUsersToGroupThunk({ group, users }))\n  })\n)(EditGroupUsers);\n\nconst UsersSelection = ({ group, closeModal, onAdd, setIsFormChanged }) => {\n  const [state, setState] = useState({\n    selections: [],\n    usersFetched: false,\n    usersSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(u => !group.users.includes(u.name));\n  }, [state.all, state.showAll, group]);\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.users;\n            draft.usersFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.usersFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.usersFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>\n              {state.error ? capitalizeFirstLetter(state.error) : 'Could not retrieve user list!'}\n            </Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected users to group succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add users to group!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered.sort((a, b) =>\n              a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n            )}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? group.users.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      initial: entry.name.charAt(0)\n                    }}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show users that are members of this group\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              /**\n                NOTE: (to self)\n\n                This is lim 0 -> complete trash\n\n                Can't use redux for snippets of this operation.\n                The redux action that is required should only be to update final group entry at maximum.\n\n                Either all ops are in redux, or none are.\n               */\n              onAdd(state.selections).then(response => {\n                setState(prev =>\n                  produce(prev, draft => {\n                    draft.loading = false;\n                    draft.usersSubmitted = true;\n                    draft.result = response?.result;\n                    draft.error = response?.messages;\n                  })\n                );\n              });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nUsersSelection.propTypes = {\n  group: object,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiAccountGroup, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditSubGroupsContainer } from './EditSubGroups';\nimport { removeSubGroupsThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ group, removeSubGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeSubGroups(group.name, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group from group!'); // eslint-disable-line\n      });\n  }, [group, selectedGroup]);\n\n  const isOnlySelect = group?.member_of?.length === 1 && group?.member_of[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove group ${group.name} from group ${selectedGroup}?\n      This could affect the way the user will be able to interact with the app.`;\n\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Member of groups</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.member_of\n              .filter(g => g !== 'user')\n              .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n              .map(subgroup => (\n                <li className=\"card-item\" key={subgroup}>\n                  <AvatarCard\n                    label={subgroup}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    action={\n                      <SvgIcon\n                        onClick={e => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setSelectedGroup(subgroup);\n                          modalActions.open();\n                        }}\n                      >\n                        <path d={mdiDeleteCircleOutline} />\n                      </SvgIcon>\n                    }\n                    description={retrieveGroupDescription(subgroup)}\n                  />\n                </li>\n              ))}\n            <li className=\"card-item\" key=\"add-sub-group\">\n              <EditSubGroupsContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nSubGroups.propTypes = {\n  group: object,\n  removeSubGroups: func\n};\n\nexport const SubGroupsContainer = connect(\n  state => ({\n    group: state.groups.selected,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    removeSubGroups: (group, groups) => dispatch(removeSubGroupsThunk({ group, groups }))\n  })\n)(SubGroups);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport { PATCH_SELECTED_GROUP } from '../../../store/actions';\n\nimport './EditSubGroups.local.scss';\n\nexport const EditSubGroups = ({ group, updateGroup, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select which groups this one should be a part of\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupSelection\n                  group={group}\n                  updateGroup={updateGroup}\n                  closeModal={actions.close}\n                  setIsFormChanged={setIsFormChanged}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditSubGroups.propTypes = {\n  group: object,\n  updateGroup: func\n};\n\nexport const EditSubGroupsContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    updateGroup: group => dispatch(creators.action(PATCH_SELECTED_GROUP, group))\n  })\n)(EditSubGroups);\n\nconst GroupSelection = ({\n  group,\n  closeModal,\n  updateGroup,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    groupsFetched: false,\n    subgroupsSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => !group.member_of.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, group]);\n\n  const isDisabled = name => {\n    if (group.name === name) {\n      return true;\n    }\n\n    if (state.showAll) {\n      return group.member_of.includes(name);\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.groups;\n            draft.groupsFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.groupsFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (\n    state.groupsFetched &&\n    (!state.all.length || (state.result === 'fail' && !state.subgroupError))\n  ) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve groups list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected groups succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'fail') {\n    let errorMessage = 'Could not add selected groups!';\n\n    if (\n      state.error &&\n      state.error[0] &&\n      state.error[0].text &&\n      state.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = state.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>{errorMessage}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={isDisabled(entry.name)}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that this one already is a member of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group.name}/grant`, {\n                groups: state.selections\n              })\n                .then(({ data: resolved }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = resolved.result;\n                      draft.subgroupError = false;\n                    })\n                  );\n\n                  updateGroup(resolved.data.groups[0]);\n                })\n                .catch(error => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = 'fail';\n                      draft.error = error?.response?.data?.messages;\n                      draft.subgroupError = true;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupSelection.propTypes = {\n  group: object,\n  updateGroup: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Center } from 'shared/components';\nimport { Paper, Section, Column, Row } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { createGroupThunk } from '../../store/thunks';\n\nimport { SubGroups } from './components/SubGroups';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewGroup.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  groupname: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Group name is required'),\n  groups: Yup.array()\n});\n\nconst CreateNewGroup = ({ submitGroupValues, allGroups, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.groupname) ||\n      (values.groupname && values.groupname.substr(-1) === '.')\n    ) {\n      errors.groupname = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allGroups.map(group => {\n      if (exists) return;\n\n      if (group.name === values.groupname) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.groupname = 'A group with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /**\n     * Failed results are the ony onnes that are shown.\n     * For successfull creation, the user is navigated to the new entry\n     */\n    let errorMessage = 'Could not create new group';\n\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type=\"fail\">\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined, error: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        groupname: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitGroupValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.groupname));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid, submitForm }) => (\n        <Paper>\n          <Paper.Title>New Group</Paper.Title>\n          <Paper.Content>\n            <Form className=\"create-new-group-form\">\n              <Section>\n                <Section.Title>Group Details</Section.Title>\n                <Row>\n                  <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                    <Field name=\"groupname\">\n                      {({ field, meta }) => (\n                        <Input\n                          required\n                          {...field}\n                          label=\"Group Name\"\n                          placeholder=\"Group Name\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                  <Column style={{ maxWidth: '220px' }}>\n                    <Field name=\"description\">\n                      {({ field, meta }) => (\n                        <Input\n                          {...field}\n                          label=\"Short Description\"\n                          placeholder=\"Short Description\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                </Row>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <SubGroups\n                      selections={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Form>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button to=\"/system/mas-accounts/groups\" color=\"primary\">\n                Cancel\n              </Button>\n            </Paper.Footer.Left>\n\n            <Paper.Footer.Right>\n              <Button\n                type=\"submit\"\n                onClick={submitForm}\n                variant=\"contained\"\n                disabled={isSubmitting || !isValid}\n              >\n                Save\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewGroup.propTypes = { submitGroupValues: func };\n\nexport const CreateNewGroupPage = connect(\n  state => ({\n    allGroups: state.groups.all.filter(g => g.name !== 'user'),\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitGroupValues: values => dispatch(createGroupThunk(values))\n  })\n)(CreateNewGroup);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ selections, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {selections.map(group_name => (\n            <li className=\"card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = selections.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-group-to-groups\">\n            <GroupsSelection\n              selected={selections}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nSubGroups.propTypes = {\n  username: string,\n  selections: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    open: openModal,\n    close: closeModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"add-to-group-button\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <GroupAddIcon />\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the groups you want to add this user to\"\n                aria={aria}\n                onClose={actions.close}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupsList\n                  selected={selected}\n                  helpers={helpers}\n                  closeModal={actions.close}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal, retrieveGroupDescription }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ minWidth: '178px', maxWidth: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoGroupSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>Group Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a group from the list to view or edit its details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n    {/* <Paper.Footer /> */}\n  </Paper>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { mdiHexagonMultipleOutline } from '@mdi/js';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { changeStateThunk } from '../../../store/thunks';\n\nimport { ServerList } from '../ServerList/ServerList';\n\nimport './Dbms.local.scss';\n\nexport class DBMS extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"dbms-item\">\n        <header>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.protocol}-dbms`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiHexagonMultipleOutline} />\n              </SvgIcon>\n            </div>\n            <div\n              className={`value ${path.startsWith(data.path) ? 'active' : ''}`}\n              title={data.protocol}\n            >\n              {data.protocol}\n            </div>\n          </div>\n          <div\n            role=\"presentation\"\n            data-qa={`toggle-${data.protocol}-dbms`}\n            className={`status ${path.startsWith(data.path) ? 'active' : ''}`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <RemoveIcon /> : <AddIcon />}\n          </div>\n        </header>\n        <ul className=\"dbms-content\">{isExpanded && <ServerList servers={data.servers} />}</ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nDBMS.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDBMS = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(DBMS);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedServer } from './containers/Server/Server';\n\nexport class ServerList extends React.PureComponent {\n  render() {\n    const { servers } = this.props;\n\n    return servers.map(server => <ConnectedServer key={server.address} data={server} />);\n  }\n}\n\nServerList.propTypes = {\n  servers: array\n};\n\nexport default ServerList;\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { DatabaseList } from '../../../DatabaseList/DatabaseList';\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Server.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../../../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../../../../shared/components';\n\nexport class Server extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"server-item\">\n        <header className={this.isActive(path, data.path)}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.address}-server`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\">\n              <LightTooltip placement=\"top\" title={data.address}>\n                <span>{SystemExplorerFeatureUtil.splitAccountName(data.name) || data.address}</span>\n              </LightTooltip>\n            </div>\n          </div>\n          <div\n            className=\"status\"\n            role=\"presentation\"\n            data-qa={`toggle-${data.address}-server`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n          </div>\n        </header>\n        <ul className=\"server-content\">\n          {isExpanded && <DatabaseList databases={data.databases} />}\n        </ul>\n      </li>\n    );\n  }\n\n  isActive = (path, current) => {\n    const activePath = current.split('--');\n    const storedPath = path.split('--');\n\n    if (activePath[0] === storedPath[0] && activePath[1] === storedPath[1]) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nServer.propTypes = {\n  data: object,\n  storeState: object,\n  changeState: func\n};\n\nexport const ConnectedServer = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Server);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedDatabase } from './containers/Database/Database';\n\nexport class DatabaseList extends React.PureComponent {\n  render() {\n    const { databases } = this.props;\n\n    if (!databases) return null;\n\n    return databases.map(database => <ConnectedDatabase key={database.name} data={database} />);\n  }\n}\n\nDatabaseList.propTypes = {\n  databases: array\n};\n\nexport default DatabaseList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Database.local.scss';\n\nexport class Database extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.storeState.path === props.data.path) {\n      return { isExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n\n    const name = data.special.database;\n\n    return (\n      <li className=\"database-item\">\n        <header className={`${data.path === path ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${name}-database`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDatabase} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={name}>\n              {name}\n            </div>\n          </div>\n        </header>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nDatabase.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDatabase = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Database);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string, func, object } from 'prop-types';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport { changeStateThunk } from '../../store/thunks';\n\nimport './Breadcrumbs.local.scss';\n\nexport class BreadcrumbsTitle extends React.PureComponent {\n  render() {\n    const {\n      storeState: { path }\n    } = this.props;\n\n    return this.renderBreadcrumbs(path);\n  }\n\n  renderBreadcrumbs = path => {\n    const links = path\n      .split(this.props.separator)\n      .filter(e => e)\n      .reduce(\n        (routes, entry, index, list) => {\n          const previous = list.slice(0, index);\n          previous.push(entry);\n          const routePath = previous.join(this.props.separator);\n\n          const route = { label: entry, route: routePath };\n          routes.push(route);\n\n          return routes;\n        },\n        [{ label: 'DBMS', route: '' }]\n      );\n\n    return (\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        {links.map(link => {\n          return (\n            <div\n              data-qa={`breadcrumbs-${link.label}`}\n              className=\"path\"\n              role=\"presentation\"\n              key={link.route}\n              onClick={() => this.navigateTo(link.route)}\n            >\n              {link.label}\n            </div>\n          );\n        })}\n      </Breadcrumbs>\n    );\n  };\n\n  navigateTo = selectedLink => {\n    if (selectedLink === this.props.storeState.path) {\n      return;\n    }\n\n    this.props.changeState({ path: selectedLink });\n\n    this.setActiveLevel(selectedLink);\n  };\n\n  setActiveLevel = selectedLink => {\n    const linkElements = selectedLink.split(this.props.separator).filter(e => e);\n\n    switch (linkElements.length) {\n      case 0:\n        this.props.changeState({ level: 'all-dbms' });\n        break;\n      case 1:\n        this.props.changeState({ level: 'all-servers' });\n        break;\n      case 2:\n        this.props.changeState({ level: 'all-databases' });\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nBreadcrumbsTitle.propTypes = {\n  storeState: object,\n  changeState: func,\n  separator: string\n};\n\nBreadcrumbsTitle.defaultProps = {\n  separator: '--'\n};\n\nexport const ConnectedBreadcrumbsTitle = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(BreadcrumbsTitle);\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { ConnectedAllDbms } from '../../containers/AllDbms/AllDbms';\nimport { ConnectedAllServers } from '../../containers/AllServers/AllServers';\nimport { ConnectedAllDatabases } from '../../containers/AllDatabases/AllDatabases';\nimport { ConnectedWorkload } from '../../containers/Workload/Workload';\nimport { ConnectedLicense } from '../../containers/License/License';\nimport { ConnectedStorage } from '../../containers/Storage/Storage';\nimport { ConnectedObjects } from '../../containers/Objects/Objects';\nimport { ConnectedSessions } from '../../containers/Sessions/Sessions';\nimport { ConnectedTopSQLStatements } from '../../containers/TopSQLStatements/TopSQLStatements';\n\nexport class ContentSwitch extends React.PureComponent {\n  render() {\n    const { activePage } = this.props;\n\n    return this.renderPage(activePage);\n  }\n\n  renderPage = activePage => {\n    switch (activePage) {\n      case 'all-dbms':\n        return <ConnectedAllDbms />;\n      case 'all-servers':\n        return <ConnectedAllServers />;\n      case 'all-databases':\n        return <ConnectedAllDatabases />;\n      case 'workload':\n        return <ConnectedWorkload />;\n      case 'license':\n        return <ConnectedLicense />;\n      case 'storage':\n        return <ConnectedStorage />;\n      case 'objects':\n        return <ConnectedObjects />;\n      case 'sessions':\n        return <ConnectedSessions />;\n      case 'topsql':\n        return <ConnectedTopSQLStatements />;\n      default:\n        return <></>;\n    }\n  };\n}\n\nContentSwitch.propTypes = {\n  activePage: string\n};\n\nexport default ContentSwitch;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHexagonMultipleOutline, mdiChartTimelineVariant } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { getDBMSStatus, getDBMSStatusInfo } from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nexport class AllDbms extends React.PureComponent {\n  render() {\n    const { all, retrieveDBMSStatus, retrieveDBMSStatusInfo } = this.props;\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {all.map(dbms => (\n            <ActionCard\n              key={dbms.name}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n              }\n              status={dbms.name !== 'OTHER' ? retrieveDBMSStatus(dbms) : ''}\n              statusInfo={retrieveDBMSStatusInfo(dbms)}\n              type=\"dbms\"\n              label={dbms.name}\n              onClick={() => this.setPath(dbms.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: dbms.path, level: 'workload' })\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n  };\n}\n\nAllDbms.propTypes = {\n  all: array,\n  changeState: func\n};\n\nexport const ConnectedAllDbms = connect(\n  state => ({\n    all: state.explorer?.structured?.dbms || [],\n    allDbms: state.explorer.accounts,\n    retrieveDBMSStatus: dbms => getDBMSStatus(dbms, state.explorer.dbStatus),\n    retrieveDBMSStatusInfo: dbms => getDBMSStatusInfo(dbms, state.explorer.dbStatus)\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDbms);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiChartTimelineVariant, mdiPercent } from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshServerDbsStatusThunk } from '../../store/thunks';\nimport {\n  getServerStatus,\n  getServerStatusInfo,\n  getEntityPendingStatus\n} from '../../store/selectors';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { ServerSettings } from '../Settings/ServerSettings';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../shared/components';\n\nconst serverLabel = (serverFullName, address) => {\n  if (serverFullName) {\n    return (\n      <LightTooltip placement=\"bottom-end\" title={address}>\n        <span>{SystemExplorerFeatureUtil.splitAccountName(serverFullName)}</span>\n      </LightTooltip>\n    );\n  }\n\n  return <span>{address}</span>;\n};\n\nexport class AllServers extends React.PureComponent {\n  render() {\n    const {\n      all,\n      serversUsage,\n      retrieveServerStatus,\n      userDetails,\n      retrieveServerStatusInfo,\n      reloadAccounts\n    } = this.props;\n    const servers = all;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {servers.map((server, index) => (\n            <ActionCard\n              key={`${server.name}-${index}`}\n              settings={<ServerSettings server={server} disabled={isDisabled} reloadAccounts={reloadAccounts} hasDatabases={server.databases.length > 0} />}\n              status={server.databases.length > 0 ? retrieveServerStatus(server) : ''}\n              statusInfo={retrieveServerStatusInfo(server)}\n              type=\"server\"\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiDns} />\n                </SvgIcon>\n              }\n              label={serverLabel(server.name, server.address)}\n              onClick={() => this.setPath(server.path)}\n              options={this.renderOptions(server)}\n              readOnlyOptions={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiPercent} />\n                    </SvgIcon>\n                  ),\n                  label: 'CPU Load',\n                  fillable: true,\n                  percentage:\n                    serversUsage.find(sv => sv.address === server.address)?.usage || undefined\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n  };\n\n  renderOptions = server => {\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: server.path, level: 'workload' })\n      }\n    ];\n\n    if (server.databases.length > 0) {\n      options.push({\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(server).label,\n        disabled: this.props.retrievePendingStatus(server).loading,\n        onClick: () => this.refreshServerDBs(server)\n      });\n    }\n\n    return options;\n  };\n\n  refreshServerDBs = server => {\n    if (!this.props.retrievePendingStatus(server).loading) {\n      this.props.refreshServerDbsStatus(server);\n    }\n  };\n}\n\nAllServers.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllServers = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const dbms = structured.dbms.find(entry => entry.protocol === path);\n\n    return {\n      all: dbms?.servers || [],\n      allDbms: state.explorer.accounts,\n      storeState: state.explorer.state,\n      serversUsage: state.explorer.serversUsage?.servers || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveServerStatus: server => getServerStatus(server, state.explorer.dbStatus),\n      retrieveServerStatusInfo: server => getServerStatusInfo(server, state.explorer.dbStatus),\n      retrievePendingStatus: server =>\n        getEntityPendingStatus(server, state.explorer.dbStatus, 'server')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshServerDbsStatus: server => dispatch(refreshServerDbsStatusThunk(server)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllServers);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { ServerForm } from '../Forms/ServerForm';\nimport { mdiSettings, mdiDns, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ConfirmationModal, ErrorModal } from '../../../shared/components/overlays';\nimport { deleteAccount } from '../../../shared/api/accounts';\n\nexport const ServerSettings = ({ server, disabled, reloadAccounts, hasDatabases }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteServerOpen, setDeleteServerOpen] = useState(false);\n  const [deleteServerErrorOpen, setDeleteServerErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteServerModalActions = {\n    open: () => {\n      setDeleteServerOpen(true);\n    },\n    close: () => {\n      setDeleteServerOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(server.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteServerErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteServerErrorModalActions = {\n    open: () => {\n      setDeleteServerErrorOpen(true);\n    },\n    close: () => {\n      setDeleteServerErrorOpen(false);\n    }\n  };\n\n  if (disabled) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n      {!hasDatabases && (\n        <IconButton onClick={deleteServerModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditServerContainer server={server} />\n      </Modal>\n\n      <ConfirmationModal open={deleteServerOpen} actions={deleteServerModalActions} message=\"Are you sure you want to delete server?\" />\n      <ErrorModal open={deleteServerErrorOpen} actions={deleteServerErrorModalActions} message=\"Failed to delete Server. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditServer = ({ server, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    fetchProtocols().then(resp => {\n      if (resp.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: resp.protocols || []\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Edit Server\"\n        desc=\"Edit the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <ServerForm\n            server={server}\n            protocols={state.protocols}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditServerContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditServer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiDatabase,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { DatabaseSettings } from '../Settings/DatabaseSettings';\nimport {\n  getBackup,\n  getDBStatus,\n  getDBStatusInfo,\n  getEntityPendingStatus,\n  retrieveServerEntry\n} from '../../store/selectors';\nimport { TopSqlStatementsUtil } from '../TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class AllDatabases extends React.PureComponent {\n  render() {\n    const {\n      databases,\n      retrieveDbBackup,\n      retrieveDbStatus,\n      retrieveDbStatusInfo,\n      userDetails,\n      reloadAccounts\n    } = this.props;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <>\n        <Paper.Content>\n          <CardsLayout>\n            {databases.map(database => (\n              <ActionCard\n                key={database.name}\n                lastBackup={retrieveDbBackup(database)}\n                settings={<DatabaseSettings database={database} disabled={isDisabled} reloadAccounts={reloadAccounts} />}\n                status={retrieveDbStatus(database)}\n                statusInfo={retrieveDbStatusInfo(database)}\n                type=\"database\"\n                icon={\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                }\n                label={database.special.database}\n                onClick={() => this.setPath(database.path)}\n                options={this.renderOptions(database)}\n              />\n            ))}\n          </CardsLayout>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n\n  refreshDBStatus = db => {\n    if (!this.props.retrievePendingStatus(db).loading) {\n      this.props.refreshDatabaseStatus(db);\n    }\n  };\n\n  renderOptions = database => {\n    const [protocol] = database.path.split('--');\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: database.path, level: 'workload' })\n      },\n      {\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(database).label,\n        disabled: this.props.retrievePendingStatus(database).loading,\n        onClick: () => this.refreshDBStatus(database)\n      }\n    ];\n\n    if (SystemExplorerFeatureUtil.isSessionsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiCheckboxMultipleBlankOutline} />\n          </SvgIcon>\n        ),\n        label: 'Sessions',\n        onClick: () => this.props.changeState({ path: database.path, level: 'sessions' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isObjectsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiShape} />\n          </SvgIcon>\n        ),\n        label: 'Objects',\n        onClick: () => this.props.changeState({ path: database.path, level: 'objects' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isStorageAllowed(protocol)) {\n      options.splice(1, 0, {\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiHexagonSlice2} />\n            </SvgIcon>\n          ),\n          label: 'Storage',\n          onClick: () => this.props.changeState({ path: database.path, level: 'storage' })\n        }\n      );\n    }\n\n    if (TopSqlStatementsUtil.isAllowedProtocol(protocol)) {\n      options.splice(2, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiFormatAlignTop} />\n          </SvgIcon>\n        ),\n        label: 'Top SQL statements',\n        onClick: () => this.props.changeState({ path: database.path, level: 'topsql' })\n      });\n\n      options.splice(options.length - 1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        ),\n        label: 'License reporting',\n        onClick: () => this.props.changeState({ path: database.path, level: 'license' })\n      });\n    }\n\n    return options;\n  };\n}\n\nAllDatabases.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllDatabases = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const [protocol, address] = path.split('--');\n    const server = retrieveServerEntry({ protocol, address }, structured);\n    const backups = state.explorer.dbLastBackup;\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      databases: (server && server.databases) || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveDbBackup: database => getBackup(database, backups),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database =>\n        getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllDatabases);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Overflow, Paper } from 'shared/components/layout';\nimport { Center, WorkloadGraph } from 'shared/components';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { JobResults } from 'shared/components/JobResults';\n\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\n\nimport './Workload.local.scss';\n\nexport class Workload extends React.PureComponent {\n  componentDidMount() {\n    this.getJobsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.storeState.path !== prevProps.storeState.path ||\n      this.props.globalFilters !== prevProps.globalFilters\n    ) {\n      this.getJobsData();\n    }\n  }\n\n  render() {\n    const {\n      jobs,\n      storeState: { path, level }\n    } = this.props;\n    const pageLevel = path.split('--').filter(e => e).length;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          {pageLevel === 3 && (\n            <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n          )}\n        </Paper.Header>\n        <Paper.Content>\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader>Loading jobs</Loader>\n            </Center>\n          ) : (\n            <>\n              {jobs.get('total_count') > 0 ? (\n                <>\n                  <div className=\"container\">\n                    <div className=\"graph-container\">\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                        isSingleDay={\n                          moment\n                            .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD') ===\n                          moment\n                            .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD')\n                        }\n                        setSingleDay={this.props.setGlobalFilters}\n                      />\n                    </div>\n                    <div className=\"jobs-container\">\n                      <Overflow>\n                        <JobResults jobs={jobs.get('content')} />\n                      </Overflow>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Center>Job list is empty</Center>\n              )}\n            </>\n          )}\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getJobsData() {\n    const {\n      storeState: { path }\n    } = this.props;\n    const levelFilters = path.split('--').filter(e => e);\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      protocol_filter: levelFilters[0],\n      shell_host_address_filter: levelFilters[1],\n      database_name_filter: levelFilters[2]\n    });\n  }\n}\n\nWorkload.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  jobs: object,\n  getJobs: func,\n  changeState: func\n};\n\nexport const ConnectedWorkload = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    jobs: jobsSelector(state)\n  }),\n  dispatch => ({\n    getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(Workload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, object } from 'prop-types';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { ConnectedReport } from './Report/Report';\nimport { getFullPath } from '../../store/selectors';\n\nimport './License.local.scss';\n\nexport class License extends React.PureComponent {\n  render() {\n    const {\n      storeState: { level, path },\n    } = this.props;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          <ConnectedReport />\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n}\n\nLicense.propTypes = {\n  storeState: object,\n  changeState: func,\n};\n\nexport const ConnectedLicense = connect(\n  state => ({\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state),\n    isLoading: state.explorer.flags.license.loading\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(License);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, func, object } from 'prop-types';\nimport classnames from 'classnames';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { getLicenseReportThunk } from '../../../store/thunks';\nimport { FeaturesUsage } from '../../../components/LicenseReporting/FeaturesUsage/FeaturesUsage';\nimport { UnusedFeatures } from '../../../components/LicenseReporting/UnusedFeatures/UnusedFeatures';\nimport { getFullPath } from '../../../store/selectors';\nimport { FeaturesTable } from '../../../components/LicenseReporting/FeaturesTable/FeaturesTable';\n\nimport './Report.local.scss';\n\nexport class Report extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolled: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getLicenseReport(this.props.fullPath);\n  }\n\n  render() {\n    const { scrolled } = this.state;\n    const { isLoading, reportData, reportTwo } = this.props;\n    return isLoading ? (\n      <Center>\n        <Loader>Loading report details</Loader>\n      </Center>\n    ) : (\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled\n        })}\n      >\n        <div className=\"container\" onWheel={event => this.onWheel(event)}>\n          {reportData && Object.keys(reportData.FEATURES).length > 0 && (\n            <FeaturesTable licenseFeatures={reportData.FEATURES} />\n          )}\n          <FeaturesUsage reportOne={reportData} reportTwo={reportTwo} />\n          <UnusedFeatures reportOne={reportData} reportTwo={reportTwo} />\n        </div>\n      </div>\n    );\n  }\n\n  onWheel = event => {\n    if (event.currentTarget.scrollTop) {\n      if (!this.state.scrolled) {\n        this.setState({ scrolled: true });\n      }\n    } else if (this.state.scrolled) {\n      this.setState({ scrolled: false });\n    }\n\n    scroller(event);\n  };\n}\n\nReport.propTypes = {\n  getLicenseReport: func,\n  isLoading: bool,\n  reportData: object,\n};\n\nexport const ConnectedReport = connect((state) => {\n  const reportData = state.explorer.reports.data;\n  return {\n    isLoading: state.explorer.flags.reports.loading,\n    fullPath: getFullPath(state),\n    reportData\n  };\n}, dispatch => ({\n  getLicenseReport: fullPath => dispatch(getLicenseReportThunk(fullPath))\n}))(Report);\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { object } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './FeaturesUsage.local.scss';\n\nexport class FeaturesUsage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n    return (\n      <div className=\"features-usage-container\">\n        <header>\n          <h1>License Features Usage</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.USED ?? {});\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          <div className=\"value single\">{feature[1].USAGES}</div>\n          <div className=\"label\">{feature[0]}</div>\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const comparableFeatures = {};\n    if (reportOne.USED && reportOne && reportOne.USED) {\n      const reportOneEntries = Object.entries(reportOne.USED);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        comparableFeatures[feature[0]].usage = [parseInt(feature[1].USAGES, 10)];\n        comparableFeatures[feature[0]].usage[1] = 0;\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportTwo.USED);\n\n      reportTwoEntries.map(feature => {\n        if (feature[0] in comparableFeatures) {\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        } else {\n          comparableFeatures[feature[0]] = {};\n          comparableFeatures[feature[0]].usage = [0];\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        }\n\n        return null;\n      });\n    }\n\n    const features = Object.entries(comparableFeatures);\n    return features.map(feature => {\n      return (\n        <LightTooltip\n          key={feature[0]}\n          placement=\"top\"\n          title={\n            <>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportOne.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[0]}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportTwo.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[1]}</div>\n              </div>\n            </>\n          }\n        >\n          <div className=\"feature\">\n            {this.getFeatureValue(\n              comparableFeatures[feature[0]].usage[0],\n              comparableFeatures[feature[0]].usage[1]\n            )}\n            <div className=\"label\">{feature[0]}</div>\n          </div>\n        </LightTooltip>\n      );\n    });\n  };\n\n  getFeatureValue = (rep1, rep2) => {\n    let valueNode = <div className=\"value lower\">{rep1 - rep2}</div>;\n\n    if (rep1 === rep2) {\n      valueNode = <div className=\"value equal\">=</div>;\n    } else if (rep2 > rep1) {\n      valueNode = <div className=\"value higher\">{rep2 - rep1}</div>;\n    }\n\n    return valueNode;\n  };\n}\n\nFeaturesUsage.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesUsage;\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n\n    '& .row': {\n      display: 'flex',\n\n      '& .value': {\n        paddingLeft: '15px',\n        marginLeft: 'auto',\n        fontWeight: '600'\n      }\n    }\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\n\nimport './UnusedFeatures.local.scss';\n\nexport class UnusedFeatures extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"unused-features-container\">\n        <header>\n          <h1>Unused features</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.UNUSED ?? {});\n\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          {feature[0]}\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const features = Object.keys(reportTwo.UNUSED);\n\n    const comparableFeatures = features.filter(feature => {\n      return reportOne.UNUSED[feature] !== undefined;\n    });\n\n    return comparableFeatures.map(feature => {\n      return (\n        <div key={feature} className=\"feature\">\n          {feature}\n        </div>\n      );\n    });\n  };\n}\n\nUnusedFeatures.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default UnusedFeatures;\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheckboxMarkedCircle, mdiCloseCircle } from '@mdi/js';\nimport moment from 'moment';\n\nimport './FeaturesTable.scss';\n\nconst columns = [\n  { label: 'Feature Name', sortKey: 'NAME' },\n  { label: 'Version' },\n  { label: 'Usages', sortKey: 'USAGES' },\n  { label: 'First Usage' },\n  { label: 'Last Usage' },\n  { label: 'Status', sortKey: 'STATUS' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"license-feature-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"license-feature-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index,) => (\n  <Table.Row hover key={`${row.NAME}_${index}`} className=\"license-feature-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.NAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.VERSION}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.DETECTED_USAGES}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.FIRST_USAGE_DATE).isValid() ? moment(row.FIRST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.LAST_USAGE_DATE).isValid() ? moment(row.LAST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        <div className=\"status-container\">\n          {row.CURRENTLY_USED === 'TRUE' ? (\n            <div className=\"status available\">\n              <SvgIcon>\n                <Icon path={mdiCheckboxMarkedCircle} />\n              </SvgIcon>\n              Available\n            </div>\n          ) : (\n            <div className=\"status unavailable\">\n              <SvgIcon>\n                <Icon path={mdiCloseCircle} />\n              </SvgIcon>\n              Unavailable\n            </div>\n          )}\n        </div>\n      </span>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ licenseFeatures, tableProps }) => {\n  return <Table {...tableProps}>{licenseFeatures.map((row, index) => rowRenderer(row, index))}</Table>;\n};\n\nexport class FeaturesTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'NAME', order: 'asc' },\n    };\n  }\n\n  render() {\n    const { licenseFeatures } = this.props;\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sorted = this.sortLicenseFeatures(licenseFeatures);\n\n    return (\n      <TableRenderer\n        licenseFeatures={sorted}\n        tableProps={tableProps}\n      />\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortLicenseFeatures = (licenseFeatures) => {\n    const { sortBehavior } = this.state;\n    const key = sortBehavior.sortKey;\n    const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n    switch (key) {\n      case 'NAME': {\n        return this.sortByName(licenseFeatures, orderMultiplier);\n      }\n      case 'USAGES': {\n        return this.sortByUsages(licenseFeatures, orderMultiplier);\n      }\n      case 'STATUS': {\n        return this.sortByStatus(licenseFeatures, orderMultiplier);\n      }\n      default:\n        return licenseFeatures;\n    }\n  };\n\n  sortByName = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.NAME.localeCompare(o2.NAME)) * order;\n    });\n  };\n\n  sortByUsages = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.DETECTED_USAGES - o2.DETECTED_USAGES) * order;\n    });\n  };\n\n  sortByStatus = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      const firstUsage = o1.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      const secondUsage = o2.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      return (firstUsage - secondUsage) * order;\n    });\n  };\n}\n\nFeaturesTable.propTypes = {\n  licenseFeatures: PropTypes.array,\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  changeStateThunk,\n  loadStorageDetailsThunk,\n  loadStoragePointsThunk,\n  setStorageItemThunk\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport { getFormattedStorage, getFullPath, getStorageDetailsData, haveStorageData } from '../../store/selectors';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { ConnectedMssqlStorage } from './MSSQL/MssqlStorage';\n\nconst Storage = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getStoragePoints,\n  getStorageDetails,\n  storagePoints,\n  storageDetails,\n  selectedItem,\n  setStorageItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  const isMssql = protocol === DbmsType.MSSQL;\n\n  useEffect(() => {\n    if (!storedEntries && !isMssql) {\n      getStoragePoints({ fullPath });\n      getStorageDetails({\n        selectedItem,\n        fullPath\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        {isMssql ? (\n          <ConnectedMssqlStorage />\n        ) : (\n          <DbObjects\n            loadingFlags={loadingFlags}\n            type={level}\n            data={storageDetails}\n            list={storagePoints}\n            selectedItem={selectedItem}\n            setItem={setStorageItem}\n            dbName={dbName}\n          />\n        )}\n      </Paper.Content>\n    </>\n  );\n};\n\nStorage.propTypes = {\n  storeState: PropTypes.object,\n  storagePoints: PropTypes.array,\n  storageDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setStorageItem: PropTypes.func,\n  selectedItem: PropTypes.string,\n  getStoragePoints: PropTypes.func\n};\n\nexport const ConnectedStorage = connect(\n  state => ({\n    storeState: state.explorer.state,\n    storagePoints: getFormattedStorage(state),\n    selectedItem: state.explorer.storage.selected,\n    loadingFlags: state.explorer.flags.storage,\n    storedEntries: haveStorageData(state),\n    storageDetails: getStorageDetailsData(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setStorageItem: path => dispatch(setStorageItemThunk(path)),\n    getStorageDetails: filters => dispatch(loadStorageDetailsThunk(filters)),\n    getStoragePoints: filters => dispatch(loadStoragePointsThunk(filters))\n  })\n)(Storage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getFullPath, getMssqlStorageDetails } from '../../../store/selectors';\nimport { loadMssqlStorageDataThunk } from '../../../store/thunks';\nimport PropTypes from 'prop-types';\nimport { LOAD_MSSQL_DISK_IO, LOAD_MSSQL_FILE_STORAGE, LOAD_MSSQL_STORAGE_USED } from '../../../store/actions';\nimport { Center, Table, LightTooltip } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\n\nimport './MssqlStorage.local.scss';\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"storage-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"storage-cell\">{name}</span>;\n};\n\nconst diskIOColumns = [\n  { label: 'Database Name' },\n  { label: 'Physical Name' },\n  { label: 'ID' },\n  { label: 'IO Stall' },\n  { label: 'IO Stall Queued Read' },\n  { label: 'IO Stall Queued Write' },\n  { label: 'IO Stall Read' },\n  { label: 'IO Stall Write' },\n  { label: 'Number of Bytes Read' },\n  { label: 'Number of Bytes Written' },\n  { label: 'Number of Reads' },\n  { label: 'Number of Writes' },\n  { label: 'Sample' },\n  { label: 'Size On Disk (bytes)' },\n  { label: 'Type Desc' },\n];\n\nconst diskIOTableProps = { columns: diskIOColumns, sortBehavior: { sortKey: 'mockedColumn', order: 'desc' }, changeSort: () => {} };\n\nconst diskIORowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"storage-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_name} />\n    </Table.Cell>\n    <Table.Cell>{row.dbid}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_queued_read_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_queued_write_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_read_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_write_ms)}</Table.Cell>\n    <Table.Cell>{row.num_of_bytes_read}</Table.Cell>\n    <Table.Cell>{row.num_of_bytes_written}</Table.Cell>\n    <Table.Cell>{row.num_of_reads}</Table.Cell>\n    <Table.Cell>{row.num_of_writes}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.sample_ms)}</Table.Cell>\n    <Table.Cell>{row.size_on_disk_bytes}</Table.Cell>\n    <Table.Cell>{row.type_desc}</Table.Cell>\n  </Table.Row>\n);\n\nconst fileStorageColumns = [\n  { label: 'Name' },\n  { label: 'Physical Name' },\n  { label: 'Data Space ID' },\n  { label: 'File ID' },\n  { label: 'Growth' },\n  { label: 'Size' },\n  { label: 'Max Size' },\n  { label: 'State' },\n  { label: 'State Desc' },\n  { label: 'Type' },\n  { label: 'Type Desc' },\n];\n\nconst fileStorageTableProps = { columns: fileStorageColumns, sortBehavior: { sortKey: 'mockedColumn', order: 'desc' }, changeSort: () => {} };\n\nconst fileStorageRowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.name}_${index}`} className=\"storage-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.name} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_name} />\n    </Table.Cell>\n    <Table.Cell>{row.data_space_id}</Table.Cell>\n    <Table.Cell>{row.file_id}</Table.Cell>\n    <Table.Cell>{row.growth}</Table.Cell>\n    <Table.Cell>{row.size}</Table.Cell>\n    <Table.Cell>{row.max_size}</Table.Cell>\n    <Table.Cell>{row.state}</Table.Cell>\n    <Table.Cell>{row.state_desc}</Table.Cell>\n    <Table.Cell>{row.type}</Table.Cell>\n    <Table.Cell>{row.type_desc}</Table.Cell>\n  </Table.Row>\n);\n\nclass MssqlStorage extends React.PureComponent {\n  componentDidMount() {\n    const { fullPath, getMssqlStorageData } = this.props;\n    // timeouts needed for BE to be ready to process next request\n    getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.DiskFileIO', storageKey: LOAD_MSSQL_DISK_IO });\n    setTimeout(() => {\n      getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.StorageUsed', storageKey: LOAD_MSSQL_STORAGE_USED });\n    }, 1000);\n    setTimeout(() => {\n      getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.file_storage', storageKey: LOAD_MSSQL_FILE_STORAGE });\n    }, 2000);\n  }\n\n  render() {\n    const { storageData, loadingFlags } = this.props;\n    const dataLoading = loadingFlags.loadingDiskIO || loadingFlags.loadingStorageUsed || loadingFlags.loadingFileStorage;\n    const usedStorageInfo = storageData.storageUsed && storageData.storageUsed.length ? storageData.storageUsed[0] : null;\n    const hasFileStorageInfo = storageData.fileStorage && storageData.fileStorage.length;\n    const hasDiskIOInfo = storageData.diskIO && storageData.diskIO.length;\n    const hasAnyData = !!usedStorageInfo || hasDiskIOInfo || hasFileStorageInfo;\n\n    if (dataLoading) {\n      return (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      );\n    }\n\n    if (!hasAnyData) {\n      return (\n        <Center>\n          No Storage Data Available.\n        </Center>\n      );\n    }\n\n    return (\n      <div className=\"mssql-storage-container\">\n        {usedStorageInfo ? (\n          <div className=\"mssql-storage-used\">\n            <div className=\"mssql-storage-used-label\">Database Size:</div>\n            <div className=\"mssql-storage-used-value\">{usedStorageInfo.database_size}</div>\n            <div className=\"mssql-storage-used-label\">Unallocated Space:</div>\n            <div className=\"mssql-storage-used-value\">{usedStorageInfo.unallocated_space}</div>\n          </div>\n        ) : ''}\n        {hasFileStorageInfo ? (\n          <div>\n            <h3 className=\"mssql-table-title\">File Storage</h3>\n            <Table {...fileStorageTableProps} className=\"table\">\n              {storageData.fileStorage.map((db, index) => fileStorageRowRenderer(db, index))}\n            </Table>\n          </div>\n        ) : '' }\n        {hasDiskIOInfo ? (\n          <>\n            <h3 className=\"mssql-table-title\">Disk IO</h3>\n            <Table {...diskIOTableProps} className=\"table\">\n              {storageData.diskIO.map((db, index) => diskIORowRenderer(db, index))}\n            </Table>\n          </>\n        ) : ''}\n      </div>\n    );\n  }\n}\n\nMssqlStorage.propTypes = {\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  getMssqlStorageData: PropTypes.func\n};\n\nexport const ConnectedMssqlStorage = connect(\n  state => ({\n    loadingFlags: state.explorer.flags.storage,\n    fullPath: getFullPath(state),\n    storageData: getMssqlStorageDetails(state)\n  }),\n  dispatch => ({\n    getMssqlStorageData: filters => dispatch(loadMssqlStorageDataThunk(filters))\n  })\n)(MssqlStorage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, objectsLoaderResolver, setSelectedObjectThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport {\n  getFullPath,\n  getInvalidObjects,\n  getStructuredObjects,\n  haveObjectsData,\n  objectsSelectorResolver\n} from '../../store/selectors';\n\nconst Objects = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getObjects,\n  objectsData,\n  invalidObjects,\n  objectDetails,\n  selectedItem,\n  setObjectsItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  useEffect(() => {\n    if (!storedEntries) {\n      getObjects({\n        fullPath,\n        protocol\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          invalidObjects={invalidObjects}\n          data={objectDetails}\n          list={objectsData}\n          selectedItem={selectedItem}\n          setItem={setObjectsItem}\n          dbName={dbName}\n          protocol={protocol}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nObjects.propTypes = {\n  storeState: PropTypes.object,\n  objectsData: PropTypes.array,\n  objectDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setObjectsItem: PropTypes.func,\n  selectedItem: PropTypes.object,\n  getObjects: PropTypes.func\n};\n\nexport const ConnectedObjects = connect(\n  state => {\n    const { state: { path } } = state.explorer;\n    const [protocol] = path.split('--');\n\n    return {\n      storeState: state.explorer.state,\n      objectsData: getStructuredObjects(state),\n      selectedItem: {\n        owner: state.explorer.objects.selectedOwner,\n        object: state.explorer.objects.selectedObject\n      },\n      loadingFlags: state.explorer.flags.objects,\n      objectDetails: objectsSelectorResolver(state, protocol),\n      invalidObjects: getInvalidObjects(state),\n      fullPath: getFullPath(state),\n      storedEntries: haveObjectsData(state)\n    };\n  },\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setObjectsItem: object => dispatch(setSelectedObjectThunk(object)),\n    getObjects: filters => dispatch(objectsLoaderResolver(filters))\n  })\n)(Objects);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  changeStateThunk,\n  disableSessionsLoadingFlag,\n  enableSessionsLoadingFlag,\n  sessionsLoaderResolver\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { Button } from 'shared/components/controls';\nimport { FormattedMessage } from 'react-intl';\nimport { getFullPath, getSortedSessions } from '../../store/selectors';\nimport { CommonSessionsTable } from './tables/CommonSessionsTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlSessionsTable } from './tables/MssqlSessionsTable';\nimport './Sessions.local.scss';\n\nexport class Sessions extends React.PureComponent {\n  componentDidMount() {\n    this.getSessionsData();\n  }\n\n  render() {\n    const {\n      level,\n      sessions,\n      isLoading,\n      changeTab,\n      fullPath,\n      enableLoadingFlag,\n      disableLoadingFlag,\n      storeState: { path }\n    } = this.props;\n\n    const [protocol] = path.split('--');\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol !== DbmsType.MSSQL && (\n            <CommonSessionsTable isLoading={isLoading} sessions={sessions} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlSessionsTable\n              isLoading={isLoading}\n              sessions={sessions}\n              dbms={fullPath}\n              refreshSessions={this.getSessionsData}\n              enableLoadingFlag={enableLoadingFlag}\n              disableLoadingFlag={disableLoadingFlag}\n            />\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getSessionsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getSessionsData = () => {\n    const {\n      fullPath,\n      storeState: { path }\n    } = this.props;\n    const [protocol] = path.split('--');\n\n    this.props.getSessions({\n      fullPath,\n      protocol,\n      page_size: 2147483645\n    });\n  };\n}\n\nSessions.propTypes = {\n  level: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  fullPath: PropTypes.string.isRequired,\n  changeTab: PropTypes.func\n};\n\nexport const ConnectedSessions = connect(\n  state => ({\n    sessions: getSortedSessions(state),\n    level: state.explorer.state.level,\n    isLoading: state.explorer.flags.sessions.loading,\n    fullPath: getFullPath(state),\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getSessions: filters => dispatch(sessionsLoaderResolver(filters)),\n    enableLoadingFlag: () => dispatch(enableSessionsLoadingFlag()),\n    disableLoadingFlag: () => dispatch(disableSessionsLoadingFlag())\n  })\n)(Sessions);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../Sessions.local.scss';\n\nconst columns = [\n  { label: 'Serial #' },\n  { label: 'Username' },\n  { label: 'Status' },\n  { label: 'Machine' },\n  { label: 'SID' },\n  { label: 'Logon time', sortKey: 'LOGON_TIME' },\n  { label: 'Program' },\n  { label: 'Type' }\n  // { label: '' } -> disabled view details button for now...\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row['SERIAL#']} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USERNAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATUS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MACHINE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.LOGON_TIME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PROGRAM} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.TYPE} />\n    </Table.Cell>\n    {/* <Table.Cell padding=\"none\" className=\"view-details\">\n      <LightTooltip placement=\"bottom\" title={<span>View Details</span>}>\n        <SvgIcon>\n          <Icon path={mdiViewCompact} />\n        </SvgIcon>\n      </LightTooltip>\n    </Table.Cell> */}\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map(rowRenderer)}</Table>;\n};\n\nexport class CommonSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'LOGON_TIME', order: 'asc' }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          noDataMessage=\"No Sessions Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.LOGON_TIME - o2.LOGON_TIME) * orderMultiplier;\n    });\n  }\n}\n\nCommonSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDelete } from '@mdi/js';\nimport { ConfirmationModal, ErrorModal } from '../../../../shared/components/overlays';\nimport { invocationOutputPoller, postInvocation } from '../../../../shared/api/invocation';\n\nimport '../Sessions.local.scss';\nimport './MssqlSessionsTable.local.scss';\n\nconst columns = [\n  { label: 'SPID', sortKey: 'spid' },\n  { label: 'ECID' },\n  { label: 'Status' },\n  { label: 'Login Name' },\n  { label: 'Host Name' },\n  { label: 'blk' },\n  { label: 'DB Name' },\n  { label: 'CMD' },\n  { label: 'Request ID' },\n  { label: 'Kill Session' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index, killSession) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.spid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ecid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.status} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.loginame} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.hostname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.blk} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.dbname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.cmd} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.request_id} />\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"icon-cell\">\n        {(row.hostname || '').trim().length > 0 && parseInt(row.spid, 10) >= 50 && (\n          <SvgIcon onClick={() => killSession(row.spid)}>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        )}\n      </div>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps, openKillSessionConfirmation }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map((row, index) => rowRenderer(row, index, (sessionId) => openKillSessionConfirmation(sessionId)))}</Table>;\n};\n\nexport class MssqlSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'spid', order: 'asc' },\n      killSessionConfirmationOpen: false,\n      sessionIdToKill: null\n    };\n\n    this.killSessionConfirmationActions = {\n      open: (sessionId) => {\n        this.setState({ killSessionConfirmationOpen: true, sessionIdToKill: sessionId });\n      },\n      close: () => {\n        this.setState({ killSessionConfirmationOpen: false, sessionIdToKill: null });\n      },\n      confirm: () => {\n        const { sessionIdToKill } = this.state;\n        this.props.enableLoadingFlag();\n        this.killSession(sessionIdToKill).then((result) => {\n          if (result) {\n            this.props.refreshSessions();\n          } else {\n            this.props.disableLoadingFlag();\n            this.killSessionErrorModalActions.open();\n          }\n        });\n      }\n    };\n\n    this.killSessionErrorModalActions = {\n      open: () => {\n        this.setState({ killSessionErrorOpen: true });\n      },\n      close: () => {\n        this.setState({ killSessionErrorOpen: false });\n      }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading,\n    } = this.props;\n\n    const { sortBehavior, killSessionConfirmationOpen, killSessionErrorOpen } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          openKillSessionConfirmation={(sessionId) => this.killSessionConfirmationActions.open(sessionId)}\n          noDataMessage=\"No Sessions Available\"\n        />\n        <ConfirmationModal open={killSessionConfirmationOpen} actions={this.killSessionConfirmationActions} message=\"Are you sure you want to kill this session?\" />\n        <ErrorModal open={killSessionErrorOpen} actions={this.killSessionErrorModalActions} message=\"Failed to kill this session. Please refresh the page and try again.\" />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.spid - o2.spid) * orderMultiplier;\n    });\n  };\n\n  killSession = async (sessionId) => {\n    const { dbms } = this.props;\n    const payload = {\n      parameters: {\n        session_id: sessionId,\n        dbconn: dbms,\n        oformat: 'JSON',\n        compact: true\n      },\n      process: 'dbatools.mssql.security.session_kill',\n      timestamp: null\n    };\n\n    const creationResult = await postInvocation(payload);\n    if (creationResult.invocations.length) {\n      const invocationUuid = creationResult.invocations[0].uuid;\n      return invocationOutputPoller(invocationUuid);\n    }\n    return Promise.resolve(null);\n  };\n}\n\nMssqlSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array,\n  dbms: PropTypes.string,\n  refreshSessions: PropTypes.func,\n  enableLoadingFlag: PropTypes.func,\n  disableLoadingFlag: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeStateThunk, loadTopSQLStatementsThunk } from '../../store/thunks';\nimport { getFullPath, selectTopSqlStatements } from '../../store/selectors';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '../../../shared/components/controls';\nimport { ElapsedTimeChart } from './charts/ElapsedTimeChart';\nimport { TopSqlStatementsUtil } from './TopSqlStatementsUtil';\nimport { OracleTopSQLTable } from './tables/OracleTopSQLTable';\nimport { PostgresTopSQLTable } from './tables/PostgresTopSQLTable';\nimport './TopSQLStatements.local.scss';\nimport { MysqlTopSQLTable } from './tables/MysqlTopSQLTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlTopSQLTable } from './tables/MssqlTopSQLTable';\n\nexport class TopSQLStatements extends React.PureComponent {\n  componentDidMount() {\n    this.getTopSqlStatementsData();\n  }\n\n  render() {\n    const {\n      storeState: { level, path },\n      topSqlStatements,\n      isLoading,\n      changeTab\n    } = this.props;\n\n    const [protocol] = path.split('--');\n    const elapsedTimeChartData = TopSqlStatementsUtil.isChartSupported(protocol) ? this.prepareChartData(topSqlStatements) : null;\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol === DbmsType.ORACLE && (\n            <OracleTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.POSTGRES && (\n            <PostgresTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MYSQL && (\n            <MysqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {TopSqlStatementsUtil.isChartSupported(protocol) && (\n            <div className=\"graph-container\">\n              {elapsedTimeChartData.length > 0 && (\n                <ElapsedTimeChart data={elapsedTimeChartData} />\n              )}\n            </div>\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getTopSqlStatementsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getTopSqlStatementsData = () => {\n    const {\n      storeState: { path },\n      fullPath\n    } = this.props;\n    const [protocol] = path.split('--');\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: TopSqlStatementsUtil.getEndpoint(protocol),\n      timestamp: null\n    };\n\n    this.props.getTopSqlStatements(payload);\n  };\n\n  prepareChartData = (topStatementsData) => {\n    return (topStatementsData || []).map((row) => {\n      const timeMillis = Math.round(row.ELAPSED_TIME / 1000);\n      const cpuTime = Math.round((timeMillis / 100) * row.PCT_CPU);\n      const ioTime = Math.round((timeMillis / 100) * row.PCT_IO);\n      return {\n        sqlId: row.SQL_ID,\n        timeMillisFull: timeMillis,\n        timeMillis: timeMillis - cpuTime - ioTime,\n        cpuTime,\n        ioTime,\n        cpuPercent: row.PCT_CPU,\n        ioPercent: row.PCT_IO\n      };\n    });\n  }\n}\n\nTopSQLStatements.propTypes = {\n  isLoading: PropTypes.bool,\n  getTopSqlStatements: PropTypes.func,\n  storeState: PropTypes.object,\n  topSqlStatements: PropTypes.array\n};\n\nexport const ConnectedTopSQLStatements = connect(\n  state => ({\n    topSqlStatements: selectTopSqlStatements(state),\n    isLoading: state.explorer.flags.topSqlStatements.loading,\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getTopSqlStatements: filters => dispatch(loadTopSQLStatementsThunk(filters))\n  })\n)(TopSQLStatements);\n","import React from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport './ElapsedTimeChart.local.scss';\n\nconst renderCustomXAxisTick = ({ x, y, payload }) => {\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-80)\">{payload.value}</text>\n    </g>\n  );\n};\n\nconst renderLegend = ({ payload }) => {\n  return (\n    <ul className=\"elapsed-time-chart-legend\">\n      {\n        (payload || []).map((entry, index) => (\n          <li className=\"legend-item\" key={`item-${index}`}>\n            <span className=\"icon\" style={{ backgroundColor: entry.color }} />\n            <span className=\"label\" style={{ color: entry.color }}>{entry.value}</span>\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nconst renderChartTooltip = (data) => {\n  if (!data || !data.payload || !data.payload.length) {\n    return '';\n  }\n\n  const [elapsedTimeData] = data.payload;\n  const { sqlId, timeMillisFull, cpuPercent, cpuTime, ioPercent, ioTime } = elapsedTimeData.payload;\n  return (\n    <div className=\"elapsed-time-chart-tooltip\">\n      <div className=\"row\"><strong className=\"label\">SQL ID: </strong><span className=\"value\">{sqlId}</span></div>\n      <div className=\"row\"><strong className=\"label\">Elapsed Time: </strong><span className=\"value\">{formatTimePeriod(timeMillisFull)}</span></div>\n      <div className=\"row\"><strong className=\"label\">CPU: </strong><span className=\"value\">{cpuPercent}% ({formatTimePeriod(cpuTime)})</span></div>\n      <div className=\"row\"><strong className=\"label\">I/O: </strong><span className=\"value\">{ioPercent}% {ioPercent > 0 ? `(${formatTimePeriod(ioTime)})` : ''}</span></div>\n    </div>\n  );\n};\n\nexport const ElapsedTimeChart = ({ data }) => {\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data} margin={{ top: 50, right: 30, left: 70, bottom: 100 }} barGap={-10}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <Legend content={renderLegend} align=\"right\" verticalAlign=\"top\" layout=\"vertical\" width={200} />\n        <Tooltip content={renderChartTooltip} cursor={{ fill: '#eeeeee' }} />\n\n        <XAxis dataKey=\"sqlId\" axisLine=\"false\" interval={0} tick={renderCustomXAxisTick} />\n        <YAxis dataKey=\"timeMillisFull\" domain={['auto', 'auto']} tickFormatter={tick => formatTimePeriod(tick)} />\n\n        <Bar dataKey=\"cpuTime\" stackId=\"common\" name=\"CPU, %\" fill=\"#1ac9e6\" />\n        <Bar dataKey=\"ioTime\" stackId=\"common\" name=\"I/O, %\" fill=\"#c02323\" />\n        <Bar dataKey=\"timeMillis\" stackId=\"common\" name=\"Elapsed Time\" fill=\"#176BA0\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'SQL ID' },\n  { label: 'Child Number' },\n  { label: 'SQL Text' },\n  { label: 'Module' },\n  { label: 'Executions' },\n  { label: 'Elapsed Time', sortKey: 'ELAPSED_TIME' },\n  { label: 'Elapsed Per Exec' },\n  { label: 'CPU, %' },\n  { label: 'I/O, %' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESS_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SQL_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.CHILD_NUMBER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_TEXT); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_TEXT} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MODULE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.EXECUTIONS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_PER_EXEC, 10)))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_CPU} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_IO} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class OracleTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'ELAPSED_TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.ELAPSED_TIME - o2.ELAPSED_TIME) * orderMultiplier;\n    });\n  }\n}\n\nOracleTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'User ID' },\n  { label: 'Query ID' },\n  { label: 'Query' },\n  { label: 'Executions' },\n  { label: 'Average Time', sortKey: 'avg_time_ms' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.queryid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.userid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.queryid} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.query); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.query} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.calls} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.avg_time_ms, 10))} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class PostgresTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'avg_time_ms', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.avg_time_ms - o2.avg_time_ms) * orderMultiplier;\n    });\n  }\n}\n\nPostgresTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'User' },\n  { label: 'SQL Text' },\n  { label: 'Elapsed Time', sortKey: 'TIME' },\n  { label: 'State' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.SESSION_ID}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESSION_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_Text); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_Text} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATE} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MysqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.TIME - o2.TIME) * orderMultiplier;\n    });\n  }\n}\n\nMysqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Database Name' },\n  { label: 'SQL Text' },\n  { label: 'Executions' },\n  { label: 'Total CPU Time' },\n  { label: 'Avg CPU Time' },\n  { label: 'Max Elapsed Time', sortKey: 'MaxElapsedTime' },\n  { label: 'Avg Elapsed Time' },\n  { label: 'Logical Reads' },\n  { label: 'Physical Reads' },\n  { label: 'Logical Writes' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.QueryName); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.QueryName} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ExecutionCount} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row['Total_CPU_Time(second)'], 10) * 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row['Average_CPU_Time(milisecond)'], 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.MaxElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.AvgElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.Logical_Reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.logical_writes} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MssqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'MaxElapsedTime', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.MaxElapsedTime - o2.MaxElapsedTime) * orderMultiplier;\n    });\n  }\n}\n\nMssqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiTable, mdiViewComfy } from '@mdi/js';\nimport { SystemExplorerViewMode } from './SystemExplorerViewMode';\n\nimport './ToggleSystemExplorerView.local.scss';\n\nexport const ToggleSystemExplorerView = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Table View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TABLE\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TABLE)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiTable} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Tiles View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TILES\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TILES)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiViewComfy} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../shared/components';\nimport { array, func } from 'prop-types';\nimport { Paper } from '../../../shared/components/layout';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { connect } from 'react-redux';\nimport { getDBStatus, getDBStatusInfo, getEntityPendingStatus, getServerStatus } from '../../store/selectors';\nimport { StatusLabel } from '../StatusLabel/StatusLabel';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { Button } from 'shared/components/controls';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport Refresh from '@material-ui/icons/Refresh';\nimport { Loader } from '../../../shared/components/loaders';\nimport { AddServerCard } from '../../containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../containers/ImportCSV/ImportCSV';\nimport { DatabaseSettings } from '../../containers/Settings/DatabaseSettings';\n\nimport './SystemExplorerTable.local.scss';\n\nconst HostnameCellWithTooltip = ({ name }) => {\n  if (name && name.length > 15) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"hostname-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"hostname-cell\">{name}</span>;\n};\n\nconst columns = [\n  { label: 'Hostname' },\n  { label: 'Server' },\n  { label: 'Port', align: 'center' },\n  { label: 'User', align: 'center' },\n  { label: 'Server Status', align: 'center' },\n  { label: 'Database Status', align: 'center' },\n  { label: 'Workload', align: 'center' },\n  { label: 'Session', align: 'center' },\n  { label: 'Top SQL', align: 'center' },\n  { label: 'Objects', align: 'center' },\n  { label: 'Storage', align: 'center' },\n];\n\nconst rowRenderer = (database, index, isChecked, updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails) => (\n  <Table.Row hover key={`${database.name}_${index}`} className=\"statement-row\">\n    <Table.Cell padding=\"checkbox\">\n      <Checkbox\n        onChange={(event) => updateSelection(database, event.target.checked)}\n        checked={isChecked}\n        size=\"small\"\n        color=\"primary\"\n        classes={{ root: 'checkbox-custom' }}\n      />\n    </Table.Cell>\n    <Table.Cell padding=\"none\" className=\"host-cell\">\n      <HostnameCellWithTooltip name={SystemExplorerFeatureUtil.splitAccountName(database.name)} />\n    </Table.Cell>\n    <Table.Cell className=\"address-cell\">\n      {database.address}\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"centered-cell\">{database.port}</div>\n    </Table.Cell>\n    <Table.Cell className=\"user-cell\">\n      <div className=\"centered-cell\">{database.user}</div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveServerStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveDbStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isWorkloadAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'workload' })}>\n          <Icon path={mdiChartTimelineVariant} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isSessionsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'sessions' })}>\n          <Icon path={mdiCheckboxMultipleBlankOutline} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isTopSqlAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'topsql' })}>\n          <Icon path={mdiFormatAlignTop} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isObjectsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'objects' })}>\n          <Icon path={mdiShape} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isStorageAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'storage' })}>\n          <Icon path={mdiHexagonSlice2} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    {SystemExplorerFeatureUtil.isLicenseReportingAllowed(database.protocol) && (\n      <Table.Cell>\n        <div className=\"icon-cell\">\n          <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'license' })}>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        </div>\n      </Table.Cell>\n    )}\n  </Table.Row>\n);\n\nconst testConnectionsTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={clickHandler}\n      startIcon={<Refresh />}\n      classes={{ root: 'green-btn toolbar-btn' }}\n      disabled={isDisabled}\n    >\n      Test Connection\n    </Button>\n  );\n};\n\nconst addServerTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Add New Server\n    </Button>\n  );\n};\n\nconst addDatabaseTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Add New Database\n    </Button>\n  );\n};\n\nconst importCsvTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Import from CSV\n    </Button>\n  );\n};\n\nconst editDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'yellow-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled}\n    >\n      Edit Database\n    </Button>\n  );\n};\n\nconst deleteDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'red-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled}\n    >\n      Delete Database\n    </Button>\n  );\n};\n\nclass SystemExplorerTable extends React.PureComponent {\n  allGroups = [];\n\n  allDatabases = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDbs: []\n    };\n\n    const { data } = this.props;\n    this.allGroups =\n      data.filter(protocolGroup => protocolGroup.databases && protocolGroup.databases.length)\n          .sort((group1, group2) => {\n            return SystemExplorerFeatureUtil.getListOrder(group2.protocol) - SystemExplorerFeatureUtil.getListOrder(group1.protocol);\n          });\n\n    this.allDatabases = this.allGroups.reduce((acc, protocolGroup) => {\n      acc = acc.concat(protocolGroup.databases);\n      return acc;\n    }, []);\n  }\n\n  render() {\n    const {\n      switchToTileView,\n      retrieveDbStatus,\n      retrieveServerStatus,\n      retrievePendingStatus,\n      reloadAccounts,\n      changeState\n    } = this.props;\n    const { selectedDbs } = this.state;\n    const navigateToDetails = (detailsPageParams) => {\n      changeState(detailsPageParams);\n      switchToTileView();\n    };\n\n    return (\n      <Paper>\n        <Paper.Header>\n          <div className=\"system-explorer-table-view\">\n            <div className=\"system-explorer-table-toolbar\">\n              {testConnectionsTrigger(this.testConnections, !selectedDbs.length)}\n              <AddServerCard trigger={addServerTrigger} />\n              <AddDatabaseCard trigger={addDatabaseTrigger} />\n              <ImportCSV trigger={importCsvTrigger} />\n              <DatabaseSettings\n                database={this.getFirstDatabase()}\n                disabled={!this.hasSingleSelection()}\n                editDbTrigger={editDatabaseTrigger}\n                deleteDbTrigger={deleteDatabaseTrigger}\n                reloadAccounts={reloadAccounts}\n              />\n            </div>\n          </div>\n        </Paper.Header>\n        <Paper.Content>\n          <div className=\"system-explorer-table-content\">\n            {this.allGroups.map(protocolGroup => {\n              const columnsConfig = JSON.parse(JSON.stringify(columns));\n              columnsConfig.unshift({ component: this.createCheckboxHeaderColumnConfig(protocolGroup), padding: 'checkbox' });\n              if (SystemExplorerFeatureUtil.isLicenseReportingAllowed(protocolGroup.protocol)) {\n                columnsConfig.push({ label: 'License Reporting', align: 'center' });\n              }\n              const tableProps = { columns: columnsConfig };\n              return (\n                <>\n                  <h3 className=\"protocol-header\">{protocolGroup.protocol}</h3>\n                  <Table {...tableProps} className=\"table\">\n                    {(protocolGroup.databases || []).map((db, index) =>\n                      rowRenderer(db, index, this.isDbSelected(db), this.updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails))}\n                  </Table>\n                </>\n              );\n            })}\n          </div>\n        </Paper.Content>\n      </Paper>\n    );\n  }\n\n  createCheckboxHeaderColumnConfig = (protocolGroup) => {\n    return () => {\n      return (\n        <Checkbox\n          size=\"small\"\n          color=\"primary\"\n          onChange={(event) => this.toggleDbsSelectionByProtocol(event, protocolGroup)}\n          checked={this.isAllDbsByProtocolSelected(protocolGroup.protocol)}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      );\n    };\n  };\n\n  updateSelection = (database, isChecked) => {\n    const { selectedDbs } = this.state;\n    const dbIndex = selectedDbs.findIndex((db) => db.name === database.name);\n\n    if (isChecked && dbIndex === -1) {\n      selectedDbs.push(database);\n    } else if (dbIndex !== -1) {\n      selectedDbs.splice(dbIndex, 1);\n    }\n\n    this.setState({ selectedDbs });\n    this.forceUpdate();\n  };\n\n  toggleDbsSelectionByProtocol = (event, protocolGroup) => {\n    const shouldAddAll = !this.isAllDbsByProtocolSelected(protocolGroup.protocol);\n    const { selectedDbs } = this.state;\n    const allWithoutCurrent = this.clearDbsByProtocol(selectedDbs, protocolGroup.protocol);\n\n    if (shouldAddAll) {\n     this.setState({ selectedDbs: [...allWithoutCurrent, ...protocolGroup.databases] });\n    } else {\n      this.setState({ selectedDbs: [...allWithoutCurrent] });\n    }\n    this.forceUpdate();\n  };\n\n  clearDbsByProtocol = (dbs, protocol) => {\n    return dbs.filter((db) => db.protocol !== protocol);\n  };\n\n  isAllDbsByProtocolSelected = (protocol) => {\n    const allByProtocol = this.allDatabases.filter((db) => db.protocol === protocol);\n    const selectedByProtocol = (this.state.selectedDbs || []).filter((db) => db.protocol === protocol);\n    return allByProtocol.length === selectedByProtocol.length;\n  }\n\n  testConnections = () => {\n    const { selectedDbs } = this.state;\n    const { refreshDatabaseStatus } = this.props;\n    (selectedDbs || []).forEach(db => refreshDatabaseStatus(db));\n  };\n\n  isDbSelected = (db) => {\n    const { selectedDbs } = this.state;\n    return selectedDbs.some((selected) => selected.name === db.name);\n  };\n\n  hasSingleSelection = () => {\n    const { selectedDbs } = this.state;\n    return !!selectedDbs && selectedDbs.length === 1;\n  };\n\n  getFirstDatabase = () => {\n    const { selectedDbs } = this.state;\n    return this.hasSingleSelection() ? selectedDbs[0] : null;\n  };\n}\n\nSystemExplorerTable.propTypes = {\n  data: array,\n  switchToTileView: func\n};\n\nexport const ConnectedSystemExplorerTable = connect(\n  state => {\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      statuses,\n      retrieveServerStatus: server => getServerStatus(server, statuses),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database => getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(SystemExplorerTable);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postCompile() {\n  return RestClient.post('/compile');\n}\n","module.exports = __webpack_public_path__ + \"svgs/6842f8a8cfcb1999b9a1e64174e25a11.svg\";","module.exports = __webpack_public_path__ + \"svgs/727bf5a83867f2c49ff66ab6df50ae78.svg\";","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport './job-process.local.scss';\n\nimport { getInvocation } from './store/selectors';\nimport { invocationPoller } from './store/tasks';\nimport { AllowOutputFor } from './store/constants';\n\nimport JobForm from './job-form';\n\nimport { JobOutput } from './containers/output/output';\nimport { JobStatus } from './components/JobStatus/JobStatus';\n\nexport const JobView = ({ invocation, redirected }) => {\n  const [tab, setTab] = useState('details');\n\n  useEffect(() => {\n    invocationPoller.start();\n\n    return function stopPolling() {\n      invocationPoller.stop();\n    };\n  }, [invocation.status]);\n\n  if (!invocation || invocation.status === 'NOT_FETCHED') {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Fetching invocation</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <ViewTabs invocation={invocation} active={tab} changeTab={setTab} />\n        <JobStatus />\n      </Paper.Header>\n      <Switch value={tab}>\n        <Switch.Case value=\"details\">\n          <JobForm redirected={redirected} />\n        </Switch.Case>\n        <Switch.Case value=\"output\">\n          <JobOutput />\n        </Switch.Case>\n      </Switch>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    invocation: getInvocation(state)\n  };\n}, {})(JobView);\n\nfunction ViewTabs({ active, changeTab, invocation }) {\n  const withOutput = AllowOutputFor.includes(invocation.status);\n  const tabs = [{ label: 'Job Details', value: 'details', active: true }];\n  if (withOutput) {\n    tabs.push({ label: 'Output', value: 'output' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { isEmpty, pickBy } from 'lodash';\n\nimport moment from 'moment';\n\nimport { Switch } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { Notifications } from './containers/notifications/notifications';\n\nimport { Formik, Form } from 'formik';\n\nimport { Text, Date, Time } from 'shared/components/form/editors/Generic';\nimport { PlatformSelect, ProcessTypeSelect, ProcessSelect, PLATFORMS, PROCESS_TYPES } from 'shared/components/form/editors/Custom';\n\nimport { Button } from 'shared/components/controls';\n\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nimport './job-process.local.scss';\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { getCurrentUserName } from '../session/store/selectors';\n\nimport { getInvocation } from './store/selectors';\nimport { AllowGeneralEditingFor, InvocationStatus } from './store/constants';\n\nimport { postInvocation } from 'shared/api/invocation';\n\nimport { ProcessParameters } from './job-parameters';\n\nimport { Schedule } from 'jobs/containers/Schedule/Schedule';\nimport { ConnectedDeleteJobModal } from 'jobs/actions/delete/DeleteJobModal';\n\nconst JobForm = ({ loggedInAs, invocation, redirected }) => {\n  const history = useHistory();\n\n  const [editable, setEditable] = useState(AllowGeneralEditingFor.includes(invocation.status));\n\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const { initialValues, disabledFields } = deriveFormState(invocation, editable);\n\n  const availableProcess = (platformVal, typeVal, processVal) => {\n    const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n    const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n    const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n    const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n    return (platformMatches && typeMatches) ? processVal : '';\n  };\n\n  const userValue = editable ? loggedInAs : invocation.user_owner;\n  const dateValue = editable\n    ? moment()\n        .utc()\n        .format('MM/DD/YYYY')\n    : moment(invocation.date_invoke).format('MM/DD/YYYY');\n  const timeValue = editable\n    ? moment()\n        .utc()\n        .format('HH:mm')\n    : moment(invocation.date_invoke).format('HH:mm');\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n\n  const extraValidations = values => {\n    const errors = {};\n    const { date_invoke, time_invoke } = values;\n\n    if (!moment(date_invoke).isValid()) {\n      errors.date_invoke = 'Invalid date format';\n    }\n\n    if (!/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/.test(time_invoke)) {\n      errors.time_invoke = 'Invalid time format';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(true);\n          handleJobCreation(values, monitor).then(({ result, invocations }) => {\n            if (result === 'success') {\n              const { uuid } = invocations[0];\n\n              history.push(`/jobs/job?invocation=${uuid}`);\n            }\n          });\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Column xs={4}>\n                          <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(value, formik.values.type, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.platform || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessTypeSelect\n                            name=\"type\"\n                            label=\"Type\"\n                            description=\"Select a type to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(formik.values.platform, value, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.type || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessSelect\n                            name=\"process\"\n                            label=\"Process\"\n                            value={invocation.process}\n                            required\n                            disabled={disabledFields.process || !editable || redirected}\n                          />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column xs={3}>\n                          <Date\n                            name=\"date_invoke\"\n                            label=\"Date\"\n                            disabled={!editable}\n                            value={dateValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Time\n                            name=\"time_invoke\"\n                            label=\"MAS system time (UTC)\"\n                            disabled={!editable}\n                            value={timeValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Text name=\"job_user\" label=\"User\" required disabled value={userValue} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation.parameters} editable={editable} />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row spacing={3}>\n                        <Column xs={12}>\n                          <Notifications\n                            name=\"notifications\"\n                            key={invocation.uuid}\n                            disabled={!editable}\n                            recievedData={derivedMonitor}\n                            onApply={n_state => {\n                              if (n_state.events === 0 || isEmpty(n_state.users)) {\n                                setMonitor({\n                                  enabled: false\n                                });\n                              }\n                              setMonitor({\n                                enabled: true,\n                                ...n_state\n                              });\n                            }}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <a href=\"/ui/#/jobs/\">\n                  <Button>Cancel</Button>\n                  </a>\n                  {invocation.status === 'DELAYED' && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setOpen(true);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  )}\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <FormVerbs\n                    status={invocation.status}\n                    editable={editable}\n                    setEditable={setEditable}\n                    monitor={monitor}\n                    invocation={invocation}\n                  />\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={invocation.uuid} />\n      )}\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    loggedInAs: getCurrentUserName(state),\n    invocation: getInvocation(state)\n  };\n}, {})(JobForm);\n\n/* eslint-disable no-unused-vars */\nfunction FormVerbs({ status, editable, setEditable, monitor, invocation }) {\n  const makeEditable = () => setEditable(true);\n\n  return (\n    <Switch value={editable}>\n      <Switch.Case value>\n        <SubmitButton>{monitor.enabled ? 'Monitor' : 'Run'}</SubmitButton>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Schedule invocation={invocation} />\n          <Button onClick={makeEditable}>Edit</Button>\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n}\n\nfunction handleJobCreation(values, monitor) {\n  const {\n    process,\n    platform,\n    type,\n    date_invoke,\n    time_invoke,\n    job_user,\n    ...params_with_maybe_replvars\n  } = values;\n  const sendable = {};\n\n  const { parameters, replvars } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (date_invoke) {\n    const dateMoment = moment(date_invoke, 'MM/DD/YYYY');\n\n    const timeMoment = time_invoke ? moment(time_invoke, 'hh:mm') : moment();\n    const currentDate = moment()\n      .utc()\n      .set('second', 0)\n      .format('YYYY-MM-DDTHH:mm:ss');\n\n    const date = dateMoment.format('YYYY-MM-DD');\n    const time = timeMoment.format('HH:mm');\n    const dateTime = moment(date + ' ' + time, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DDTHH:mm:ss'); // eslint-disable-line prefer-template\n\n    const duration = moment.duration(\n      moment(dateTime, 'YYYY-MM-DD HH:mm').diff(moment(currentDate, 'YYYY-MM-DD HH:mm'))\n    );\n    const minutes = duration.asMinutes();\n\n    if (minutes > 0) {\n      sendable.timestamp = dateTime;\n    } else {\n      sendable.timestamp = null;\n    }\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    sendable.process = 'mas.sys.invocation.notify.create';\n\n    sendable.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      when: sendable.timestamp,\n      events: monitor.events,\n      users: monitor.users\n    };\n\n    sendable.timestamp = null;\n  } else {\n    sendable.process = process;\n\n    sendable.parameters = pickBy(parameters, rejector);\n  }\n\n  return postInvocation(sendable);\n}\n\nfunction deriveFormState(invocation) {\n  const values = {\n    platform: '',\n    type: '',\n    process: invocation.process,\n    parameters: { ...invocation.parameters }\n  };\n  const disabledFields = {\n    ...(invocation.status !== InvocationStatus.NEW && {\n      platform: true,\n      type: true,\n      process: true,\n      user: true,\n      parameters: true\n    })\n  };\n\n  return { initialValues: values, disabledFields };\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  } else if (values['fqname--fqname']) {\n    if (values['fqname--namespace']) {\n      values.fqname = `${values['fqname--namespace']}.${values['fqname--fqname']}`;\n    } else {\n      values.fqname = values['fqname--fqname'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--fqname'];\n  }\n  return values;\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Paper } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\nimport { useSelector } from 'react-redux';\nimport { getInvocation } from '../../store/selectors';\nimport { InvocationStatus } from '../../store/constants';\nimport { ListOutput } from '../../components/ListOutput/ListOutput';\nimport { fetchInvocationOutput } from 'shared/api/invocation';\nimport { sendToEmail } from 'license-collection/utils/sendToEmail';\nimport { copyToClipboard } from 'license-collection/utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './output.scss';\n\nfunction noOutput(invocation = {}) {\n  return [\n    {\n      data: {\n        text: 'No output to display.\\n'\n      }\n    },\n    {\n      data: {\n        text: `Status: ${invocation.status}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Process: ${invocation.process}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Invocation: ${invocation.uuid}\\n`\n      }\n    }\n  ];\n}\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const JobOutput = () => {\n  const invocation = useSelector(getInvocation);\n\n  const [loading, setLoading] = React.useState(true);\n  const [output, setOutput] = React.useState(noOutput(invocation));\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = React.useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  React.useEffect(() => {\n    fetchInvocationOutput(invocation.uuid)\n      .then(({ data }) => {\n        const recieved = data.data.outputs;\n\n        if (recieved && recieved.length) {\n          setOutput(recieved);\n        } else {\n          setOutput(noOutput(invocation));\n        }\n\n        setLoading(false);\n      })\n      .catch(() => {\n        setOutput(noOutput(invocation));\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const outputType = invocation.status === InvocationStatus.FAILED ? 'fail' : 'normal';\n\n  const monitoring = output?.[0]?.data?.text?.match?.(\n    /{\"process\": {\"uuid\": \"([0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12})\",/\n  )?.[1];\n\n  console.log(monitoring); // eslint-disable-line\n\n  return (\n    <>\n      <Paper.Content scrollable>\n        <ListOutput\n          type={outputType}\n          output={output}\n          outputFormat={invocation.parameters.oformat}\n          errors={invocation.errors}\n          monitoring={monitoring}\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"primary\"\n            onClick={() => onSendByEmail(invocation, output, invocation.process, modalActions)}\n          >\n            Send to email\n          </Button>\n          <Button color=\"primary\" onClick={() => copyToClipboard(output, invocation)}>\n            Copy to clipboard\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n      <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n    </>\n  );\n};\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nimport './ListOutput.local.scss';\nimport ReactJson from 'react-json-view';\n\nexport const ListOutput = ({ output, type, outputFormat, errors, monitoring }) => {\n  let content;\n  let preparedJSON;\n\n  if (outputFormat === 'JSON') {\n    const [, jsonString] = (output[0].data.text || '').split('\\n');\n    try {\n      preparedJSON = JSON.parse(jsonString);\n    } catch (error) {\n      preparedJSON = null;\n    }\n  }\n\n  if (monitoring) {\n    return (\n      <div className=\"list\">\n        <h3>Monitor</h3>\n        <p>Invocation id: {monitoring}</p>\n        <Button to={`/jobs/job?invocation=${monitoring}`} color=\"primary\">\n          Go to Monitored Invocation\n        </Button>\n      </div>\n    );\n  }\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          <code>\n            <pre>{errors.join('\\n')}</pre>\n          </code>\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              <code>\n                <pre>{output.map(row => row.data.text).join('')}</pre>\n              </code>\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else if (preparedJSON) {\n    content = (\n      <div className=\"list\">\n        <ReactJson\n          src={preparedJSON}\n          enableClipboard={false}\n          displayObjectSize={false}\n          displayDataTypes={false}\n        />\n      </div>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        <code>\n          <pre>{output.map(row => row.data.text).join('')}</pre>\n        </code>\n      </div>\n    );\n  }\n\n  return content;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { want } from 'shared/lib/want';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiTimelineClock,\n  mdiCancel,\n  mdiAlertRhombusOutline,\n  mdiStopCircleOutline\n} from '@mdi/js';\n\nimport { getInvocationStatus } from '../../store/selectors';\nimport {\n  InvocationStatus,\n  CannotShowStatusFor,\n  FAILURES,\n  SUCESSES,\n  WARNINGS\n} from '../../store/constants';\n\nimport './JobStatus.local.scss';\n\nexport const JobStatus = () => {\n  const STATUS = useSelector(getInvocationStatus);\n  const ignore = CannotShowStatusFor.includes(STATUS);\n\n  if (ignore) {\n    return null;\n  }\n\n  return (\n    <div className=\"status-label\" style={{ background: wantStatusColor(STATUS) }}>\n      <SvgIcon fontSize=\"inherit\" color=\"inherit\">\n        <path d={wantStatusIcon(STATUS)} />\n      </SvgIcon>\n      <span className=\"status-label-text\">{STATUS}</span>\n    </div>\n  );\n};\n\nconst wantStatusIcon = want(\n  {\n    [InvocationStatus.EXECUTING]: mdiProgressClock,\n    [InvocationStatus.SUCCEEDED]: mdiCheckCircleOutline,\n    [InvocationStatus.DELAYED]: mdiTimelineClock,\n    [InvocationStatus.SCHEDULED]: mdiCalendarArrowRight,\n    [InvocationStatus.KILLED]: mdiCancel,\n    [InvocationStatus.FAILED]: mdiAlertRhombusOutline,\n    [InvocationStatus.ABORTED]: mdiStopCircleOutline\n  },\n  '',\n  status => status\n);\n\nconst wantStatusColor = want(\n  {\n    fail: '#ED3A4A',\n    warning: '#F1BD5C',\n    success: '#34CC88'\n  },\n  '#3765AF', // progress blue color for unresolved statuses\n  status => {\n    if (FAILURES.includes(status)) {\n      return 'fail';\n    }\n\n    if (SUCESSES.includes(status)) {\n      return 'success';\n    }\n\n    if (WARNINGS.includes(status)) {\n      return 'warning';\n    }\n  }\n);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Center, Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { Header } from 'core/components/Header/Header';\nimport { RefreshDashboard } from './components/RefreshDashboard/RefreshDashboard';\nimport { ToggleDashboard } from './components/ToggleDashboard/ToggleDashboard';\nimport { PhysicalDashboard } from './components/PhysicalDashboard/PhysicalDashboard';\nimport { VirtualDashboard } from './components/VirtualDashboard/VirtualDashboard';\nimport { NoData } from './components/NoData/NoData';\nimport { ConnectedToggleSelection } from './containers/ToggleSelection/ToggleSelection';\n\nimport { loadExecutiveDashboardThunk, loadVirtualExecutiveDashboardThunk } from './store/thunks';\n\nimport './ExecutiveDashboard.local.scss';\n\nfunction ExecutiveDashboard({\n  isLoading,\n  callFailed,\n  selected,\n  rawEntries,\n  getExecutiveDashboard,\n  getVirtualExecutiveDashboard,\n  virtualServers,\n  rawVirtualServers\n}) {\n  const [dashboardType, setDashboardType] = useState('physical');\n  // const [isRefreshNeeded, setIsRefreshNeeded] = useState(false); // will update based on the new API that will be provide by the BE\n  useEffect(() => {\n    // do the new API provided by the BE\n    // set isRefreshNeeded value based on result\n\n    // if we have no data in store, do the call, else new data will be added on demand -> refresh button\n    // if (rawEntries.length === 0) {\n    if (dashboardType === 'physical' && rawEntries.length === 0) {\n      getExecutiveDashboard();\n    }\n\n    if (dashboardType === 'virtual' && rawVirtualServers.length === 0) {\n      getVirtualExecutiveDashboard();\n    }\n  }, [dashboardType]);\n\n  function refreshDashboard() {\n    if (dashboardType === 'physical') {\n      getExecutiveDashboard();\n    }\n\n    if (dashboardType === 'virtual') {\n      getVirtualExecutiveDashboard();\n    }\n  }\n\n  function changeDashboard(type) {\n    setDashboardType(type);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / Executive Dashboard\">\n        {!isLoading && !callFailed && (\n          <div className=\"header-actions-container\">\n            {dashboardType === 'physical' && <ConnectedToggleSelection />}\n            <RefreshDashboard onClickCallback={refreshDashboard} />\n            <div className=\"separator\" />\n            <ToggleDashboard active={dashboardType} onClickCallback={changeDashboard} />\n          </div>\n        )}\n      </Header>\n      <Main mdPage>\n        <Switch value={isLoading}>\n          <Switch.Case value>\n            <Center>\n              <Loader>Loading Executive Dashboard...</Loader>\n            </Center>\n          </Switch.Case>\n          <Switch.Case value={false}>\n            <Switch value={callFailed}>\n              <Switch.Case value>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load Executive Dashboard data. Please refresh the page and try again.\n                  </Result.Text>\n                </Result>\n              </Switch.Case>\n              <Switch.Case value={false}>\n                {rawEntries.length === 0 && <NoData />}\n                {rawEntries.length > 0 && (\n                  <Switch value={dashboardType}>\n                    <Switch.Case value=\"virtual\">\n                      <VirtualDashboard servers={virtualServers} />\n                    </Switch.Case>\n                    <Switch.Case value=\"physical\">\n                      <PhysicalDashboard selected={selected} />\n                    </Switch.Case>\n                  </Switch>\n                )}\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Main>\n    </>\n  );\n}\n\nexport const ConnectedExecutiveDashboard = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.dashboard.loading ||\n        state.executiveDashboard.flags.virtual.loading,\n      callFailed: state.executiveDashboard.flags.dashboard.callFailed,\n      selected: state.executiveDashboard.selectedServers.length,\n      rawEntries: state.executiveDashboard.rawEntries,\n      rawVirtualServers: state.executiveDashboard.rawVirtualServers,\n      virtualServers: state.executiveDashboard.virtualServers\n    };\n  },\n  dispatch => ({\n    getExecutiveDashboard: () => dispatch(loadExecutiveDashboardThunk()),\n    getVirtualExecutiveDashboard: () => dispatch(loadVirtualExecutiveDashboardThunk())\n  })\n)(ExecutiveDashboard);\n","import React from 'react';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartDonut } from '@mdi/js';\n\nimport './RefreshDashboard.local.scss';\n\nexport const RefreshDashboard = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"refresh-container\" onClick={() => onClickCallback()} role=\"presentation\">\n      {active && <div className=\"indicator\" />}\n      <LightTooltip placement=\"bottom\" title=\"Refresh\">\n        <SvgIcon className=\"refresh-icon\">\n          <Icon path={mdiChartDonut} />\n        </SvgIcon>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCubeOutline, mdiDns } from '@mdi/js';\n\nimport './ToggleDashboard.local.scss';\n\nexport const ToggleDashboard = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Virtual servers\">\n        <div\n          className={classnames('option', {\n            active: active === 'virtual'\n          })}\n          onClick={() => onClickCallback('virtual')}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Physical servers\">\n        <div\n          className={classnames('option', {\n            active: active === 'physical'\n          })}\n          onClick={() => onClickCallback('physical')}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiDns} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { ConnectedSearchSection } from '../../containers/SearchSection/SearchSection';\nimport { SwitchContent } from '../SwitchContent/SwitchContent';\n\nexport const PhysicalDashboard = ({ selected }) => {\n  return (\n    <>\n      <ConnectedSearchSection />\n      <SwitchContent nrSelected={selected} />\n    </>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SearchableList } from 'users-manager/components/SearchableList/SearchableList';\nimport { ServerCard } from '../../components/ServerCard/ServerCard';\n\nimport { toggleServerThunk } from '../../store/thunks';\n\nimport './SearchSection.local.scss';\n\nfunction SearchSection({ allServers, selectedServers, toggleServer }) {\n  function filterServerByQuery(server, query) {\n    return server.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  function isServerSelected(server) {\n    if (selectedServers.find(sv => sv.name === server.name)) return true;\n    return false;\n  }\n\n  function toggleSelected(server) {\n    toggleServer(server);\n  }\n\n  return (\n    <section className=\"servers-search-section\">\n      <SearchableList items={allServers} filter={filterServerByQuery}>\n        {server => (\n          <ServerCard\n            selected={isServerSelected(server)}\n            toggleSelectedCallback={toggleSelected}\n            server={server}\n          />\n        )}\n      </SearchableList>\n    </section>\n  );\n}\n\nexport const ConnectedSearchSection = connect(\n  state => {\n    return {\n      allServers: state.executiveDashboard.allServers,\n      selectedServers: state.executiveDashboard.selectedServers\n    };\n  },\n  dispatch => ({\n    toggleServer: name => dispatch(toggleServerThunk(name))\n  })\n)(SearchSection);\n","module.exports = __webpack_public_path__ + \"svgs/4b3cf735142a68d8e31e71d5905527d8.svg\";","import React from 'react';\n\nimport { Switch } from 'shared/components';\n\nimport { EmptyContent } from '../EmptyContent/EmptyContent';\nimport { ConnectedDashboard } from '../../containers/Dashboard/Dashboard';\nimport { ConnectedServerView } from '../../containers/ServerView/ServerView';\n\nimport './SwitchContent.local.scss';\n\nexport const SwitchContent = ({ nrSelected }) => {\n  let page = '';\n  if (nrSelected === 0) {\n    page = 'empty-content';\n  } else if (nrSelected === 1) {\n    page = 'server-details';\n  } else if (nrSelected > 1) {\n    page = 'dashboard';\n  }\n\n  return (\n    <section className=\"dashboard-view-section\">\n      <Switch value={page}>\n        <Switch.Case value=\"empty-content\">\n          <EmptyContent />\n        </Switch.Case>\n        <Switch.Case value=\"server-details\">\n          <ConnectedServerView />\n        </Switch.Case>\n        <Switch.Case value=\"dashboard\">\n          <ConnectedDashboard />\n        </Switch.Case>\n      </Switch>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './EmptyContent.local.scss';\n\nexport const EmptyContent = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              Please select at least a server in order to view its details\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { OptionsTile } from '../../components/OptionsTile/OptionsTile';\n\nimport './Dashboard.local.scss';\n\nfunction Dashboard({ selected }) {\n  return (\n    <>\n      <div className=\"widgets-row\">\n        <div className=\"widget\">\n          <ServersTile servers={selected} />\n        </div>\n        <div className=\"widget\">\n          <DatabasesTile servers={selected} />\n        </div>\n      </div>\n      <OptionsTile servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedDashboard = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(Dashboard);\n","import React from 'react';\nimport { Overflow, Paper } from 'shared/components/layout';\n\nimport { OptionsList } from './components/OptionsList/OptionsList';\nimport { OptionsChart } from './components/OptionsChart/OptionsChart';\n\nimport './OptionsTile.local.scss';\n\nexport const OptionsTile = ({ servers }) => {\n  function groupChartServers(serversToGroup) {\n    return Object.values(serversToGroup.reduce((acc, entry) => {\n      const serverKey = `${entry.name}_${entry.sid}`;\n      if (!acc[serverKey] || acc[serverKey].collDate < entry.collDate) {\n        acc[serverKey] = entry;\n      }\n      return acc;\n    }, {}));\n  }\n\n  function prepareOptions(filteredServers) {\n    return [\n      {\n        name: 'Advanced Analytics',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.aa_count;\n        }, 0),\n        color: '#176BA0',\n        secondaryColor: '#E8F9F5',\n        label: 'AA'\n      },\n      {\n        name: 'Advanced Compression',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.ac_count;\n        }, 0),\n        color: '#1AC9E6',\n        secondaryColor: '#e8fafc',\n        label: 'AC'\n      },\n      {\n        name: 'Advanced Security',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.as_count;\n        }, 0),\n        color: '#6DF0D2',\n        secondaryColor: '#f0fdfb',\n        label: 'AS'\n      },\n      {\n        name: 'Database Vault',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.dv_count;\n        }, 0),\n        color: '#7D3AC1',\n        secondaryColor: '#f2ebf9',\n        label: 'DV'\n      },\n      {\n        name: 'Multitenant',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.mt_count;\n        }, 0),\n        color: '#EA7369',\n        secondaryColor: '#fbedf7',\n        label: 'MT'\n      },\n      {\n        name: 'Active Data Guard',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.adg_count;\n        }, 0),\n        color: '#1DE4BD',\n        secondaryColor: '#e8fcf8',\n        label: 'ADG'\n      },\n      {\n        name: 'Real Application Clusters',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.rac_count;\n        }, 0),\n        color: '#EF7E32',\n        secondaryColor: '#fdf2eb',\n        label: 'RAC'\n      },\n      {\n        name: 'OLAP',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.olap_count;\n        }, 0),\n        color: '#F0A58F',\n        secondaryColor: '#fdf6f4',\n        label: 'OL'\n      },\n      {\n        name: 'Partitioning (User)',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.part_count;\n        }, 0),\n        color: '#C02323',\n        secondaryColor: '#f9e9e9',\n        label: 'P'\n      },\n      {\n        name: 'In-Memory Database',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.in_mem_db_count;\n        }, 0),\n        color: '#DB4CB2',\n        secondaryColor: '#fbedf7',\n        label: 'IMD'\n      },\n      {\n        name: 'RAC One Node',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.rac_one_node_count;\n        }, 0),\n        color: '#4c6bdb',\n        secondaryColor: '#a8d1f1',\n        label: 'RACON'\n      },\n      {\n        name: 'Real Application Testing',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.real_app_test_count;\n        }, 0),\n        color: '#399137',\n        secondaryColor: '#a6eaa5',\n        label: 'RAT'\n      }\n    ];\n  }\n\n  const groupedServers = groupChartServers(servers);\n  const chartOptions = prepareOptions(groupedServers);\n\n  return (\n    <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n      <div className=\"container\">\n        <div className=\"graph-container\">\n          <OptionsChart data={chartOptions} />\n        </div>\n        <div className=\"label-container\">\n          <Overflow>\n            <OptionsList options={chartOptions} />\n          </Overflow>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\n\nimport { OptionItem } from '../OptionItem/OptionItem';\n\nexport const OptionsList = ({ options }) => {\n  return options.map(option => <OptionItem key={option.name} option={option} />);\n};\n","import React from 'react';\n\nimport './OptionItem.local.scss';\n\nexport const OptionItem = ({ option }) => {\n  return (\n    <div className=\"option\">\n      <div className=\"value\" style={{ backgroundColor: option.secondaryColor }}>\n        <span style={{ color: option.color }}>{option.value}</span>\n      </div>\n      <div style={{ color: option.color }}>{option.name}</div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { BarChart, Bar, XAxis, Cell, ResponsiveContainer, YAxis, CartesianGrid } from 'recharts';\n\nimport './OptionsChart.local.scss';\n\nexport const OptionsChart = ({ data }) => {\n  const renderCustomXAxisTick = ({ x, y, payload }) => {\n    const index = data.findIndex(sv => sv.label === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={data[index].color}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <XAxis dataKey=\"label\" tickSize={false} axisLine={false} tick={renderCustomXAxisTick} />\n        <YAxis\n          width={20}\n          tickSize={false}\n          axisLine={false}\n          allowDecimals={false}\n          type=\"number\"\n          domain={[0, 'dataMax']}\n          stroke=\"rgba(4, 17, 37, 0.87)\"\n        />\n        <Bar dataKey=\"value\">\n          {data.map((entry, index) => {\n            return <Cell key={`${entry.name}-${index}`} fill={entry.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { UsedOptions } from '../../components/UsedOptions/UsedOptions';\n\nimport './ServerView.local.scss';\n\nfunction ServerView({ selected }) {\n  return (\n    <>\n      <div className=\"widgets-row\">\n        <div className=\"widget\">\n          <ServersTile servers={selected} isSingle />\n        </div>\n        <div className=\"widget\">\n          <DatabasesTile servers={selected} />\n        </div>\n      </div>\n      <UsedOptions servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedServerView = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(ServerView);\n","import React from 'react';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheck } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper } from 'shared/components/layout';\n\nimport './UsedOptions.local.scss';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Button } from '../../../shared/components/controls';\n\nfunction optionType(type) {\n  if (type.value === 1) {\n    return (\n      <LightTooltip\n        placement=\"top\"\n        title={\n          <>\n            <span style={{ fontWeight: '600' }}>{type.name}:&nbsp;</span>\n            <span>Installed</span>\n          </>\n        }\n      >\n        <SvgIcon className=\"installed\">\n          <Icon path={mdiCheck} />\n        </SvgIcon>\n      </LightTooltip>\n    );\n  }\n\n  return null;\n}\n\nexport class UsedOptions extends React.PureComponent {\n  selectedForComparison = {};\n\n  allSids = [];\n\n  constructor(props) {\n    super(props);\n\n    const selectedServer = this.props.servers[0];\n    this.allSids = (selectedServer.sids || []).slice()\n      .sort((o1, o2) => -moment(o1.collDate).diff(moment(o2.collDate)))\n      .map((sid, index) => ({ ...sid, uniqueId: `${sid.sid}_${sid.collDate}_${index}` }));\n\n    this.state = {\n      visibleSids: this.allSids,\n      selectedForComparison: {},\n      inComparison: false,\n    };\n  }\n\n  render() {\n    const { visibleSids, selectedForComparison, inComparison } = this.state;\n\n    return (\n      <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n        <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n          <div className=\"grid-header\">\n            {\n              (Object.keys(selectedForComparison).length > 0 && !inComparison) &&\n                <Button style={{ color: '#03A9F4' }} onClick={() => this.compareSelected()}>\n                  Compare\n                </Button>\n            }\n            {\n              inComparison &&\n                <Button style={{ color: '#03A9F4' }} onClick={() => this.resetSelected()}>\n                  Compare all\n                </Button>\n            }\n          </div>\n        </Paper.Header>\n        <Paper.Content scrollable={false}>\n          <div className=\"grid\">\n            <div className=\"column header left\" />\n            <div className=\"column header aa\">\n              <LightTooltip placement=\"top\" title=\"Advanced Analytics\">\n                <span>AA</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header ac\">\n              <LightTooltip placement=\"top\" title=\"Advanced Compression\">\n                <span>AC</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header adg\">\n              <LightTooltip placement=\"top\" title=\"Active Data Guard\">\n                <span>ADG</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header as\">\n              <LightTooltip placement=\"top\" title=\"Advanced Security\">\n                <span>AS</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header dv\">\n              <LightTooltip placement=\"top\" title=\"Database Vault\">\n                <span>DV</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header imd\">\n              <LightTooltip placement=\"top\" title=\"In-Memory Database\">\n                <span>IMD</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header mt\">\n              <LightTooltip placement=\"top\" title=\"Multitenant\">\n                <span>MT</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header ol\">\n              <LightTooltip placement=\"top\" title=\"OLAP\">\n                <span>OL</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header p\">\n              <LightTooltip placement=\"top\" title=\"Partitioning (User)\">\n                <span>P</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header racon\">\n              <LightTooltip placement=\"top\" title=\"RAC One Node\">\n                <span>RACON</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header rat\">\n              <LightTooltip placement=\"top\" title=\"Real Application Testing\">\n                <span>RAT</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header aa\">Collection Date</div>\n            <div className=\"column header aa\">Select</div>\n\n            {visibleSids.map((sid) => {\n              return (\n                <div key={sid.uniqueId} className=\"row\">\n                  <div className=\"column left\">{sid.sid}</div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Advanced Analytics', value: sid.aa_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Advanced Compression', value: sid.ac_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Active Data Guard', value: sid.adg_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Advanced Security', value: sid.as_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Database Vault', value: sid.dv_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'In-Memory Database', value: sid.in_mem_db_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Multitenant', value: sid.mt_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'OLAP', value: sid.olap_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Partitioning (User)', value: sid.part_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'RAC One Node', value: sid.rac_one_node_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Real Application Testing', value: sid.real_app_test_count })}\n                  </div>\n                  <div className=\"column\">\n                    <LightTooltip placement=\"bottom\" title={moment(sid.collDate).format('HH:mm:ss')}>\n                      <span>{moment(sid.collDate).format('MMM DD YYYY')}</span>\n                    </LightTooltip>\n                  </div>\n                  <div className=\"column\">\n                    <Checkbox\n                      onChange={(event) => this.updateSelection(event.target.checked, sid)}\n                      size=\"small\"\n                      color=\"primary\"\n                      checked={!!selectedForComparison[sid.uniqueId]}\n                      classes={{ root: 'checkbox-custom' }}\n                    />\n                  </div>\n                </div>\n              );\n            }).sort()}\n          </div>\n        </Paper.Content>\n      </Paper>\n    );\n  }\n\n  updateSelection(isChecked, sid) {\n    if (isChecked) {\n      this.selectedForComparison[sid.uniqueId] = true;\n    } else {\n      delete this.selectedForComparison[sid.uniqueId];\n    }\n    this.setState({ selectedForComparison: this.selectedForComparison });\n    this.forceUpdate();\n  }\n\n  compareSelected() {\n    const visibleSids = this.allSids.filter((sid) => this.selectedForComparison[sid.uniqueId]);\n    this.setState({ visibleSids, inComparison: true });\n  }\n\n  resetSelected() {\n    this.selectedForComparison = {};\n    this.setState({ visibleSids: this.allSids, inComparison: false, selectedForComparison: this.selectedForComparison });\n  }\n}\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState } from 'react';\n\nimport { Center } from 'shared/components';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { ServerCard } from '../ServerCard/ServerCard';\n\nimport './VirtualDashboard.local.scss';\n\nexport const VirtualDashboard = ({ servers }) => {\n  const [query, setQuery] = useState('');\n  const filtered = servers.filter(item => filterServerByQuery(item, query));\n\n  function filterServerByQuery(server) {\n    let found = false;\n\n    Object.values(server).map(val => {\n      if (\n        val\n          .toString()\n          .toLowerCase()\n          .includes(query.toLowerCase())\n      ) {\n        found = true;\n      }\n\n      return null;\n    });\n\n    return found;\n  }\n\n  return (\n    <div className=\"container\">\n      {servers.length === 0 && <Center>Currently there are no virtual servers</Center>}\n      {servers.length > 0 && (\n        <>\n          <div className=\"search-input-slot\">\n            <SimpleSearchInput\n              data-qa=\"users-search-input\"\n              value={query}\n              onChange={e => setQuery(e.target.value)}\n            />\n          </div>\n          <div className=\"servers-container\">\n            {filtered.map(server => (\n              <ServerCard key={server.vcenterservername} server={server} type=\"virtual\" />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiShieldCheckOutline } from '@mdi/js';\n\nimport './NoData.local.scss';\n\nexport const NoData = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiShieldCheckOutline} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              In order for the Executive Dashboard to be populated, you need to run all 3 collection\n              processes. The order is also important, so you need to run the Hardware and Software\n              scans first and then the Packaging process for the data to be sent to the Executive\n              dashboard. All these steps can be performed from the{' '}\n              <Link className=\"link\" to=\"/compliance/license-collection\">\n                License Collection\n              </Link>{' '}\n              page.\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\n\nimport { deselectAllThunk, selectAllThunk } from '../../store/thunks';\n\nfunction ToggleSelection({ servers, selected, deselectAll, selectAll }) {\n  if (servers === selected) {\n    return (\n      <Button style={{ color: '#03A9F4' }} onClick={() => deselectAll()}>\n        Deselect All\n      </Button>\n    );\n  }\n  return (\n    <Button style={{ color: '#03A9F4' }} onClick={() => selectAll()}>\n      Select all\n    </Button>\n  );\n}\n\nexport const ConnectedToggleSelection = connect(\n  state => {\n    return {\n      servers: state.executiveDashboard.allServers.length,\n      selected: state.executiveDashboard.selectedServers.length\n    };\n  },\n  dispatch => ({\n    deselectAll: () => dispatch(deselectAllThunk()),\n    selectAll: () => dispatch(selectAllThunk())\n  })\n)(ToggleSelection);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { ConnectedHardware } from './Pages/Hardware/Hardware';\nimport { ConnectedSoftware } from './Pages/Software/Software';\nimport { ConnectedVMware } from './Pages/VMware/VMware';\nimport { ConnectedPackaging } from './Pages/Packaging/Packaging';\nimport { ConnectedPreSoftware } from './Pages/PreSoftware/PreSoftware';\n\nexport const LicenseCollection = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function changeActiveTab(newActiveTab) {\n    setActiveTab(newActiveTab);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / License collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <Navigation active={activeTab} onClickCallback={changeActiveTab} />\n          </Paper.Header>\n          <Paper.Content>\n            <Switch value={activeTab}>\n              <Switch.Case value={0}>\n                <ConnectedHardware />\n              </Switch.Case>\n              <Switch.Case value={1}>\n                <ConnectedPreSoftware />\n              </Switch.Case>\n              <Switch.Case value={2}>\n                <ConnectedSoftware />\n              </Switch.Case>\n              <Switch.Case value={3}>\n                <ConnectedVMware />\n              </Switch.Case>\n              <Switch.Case value={4}>\n                <ConnectedPackaging />\n              </Switch.Case>\n            </Switch>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Navigation.local.scss';\n\nconst data = [\n  { label: '1. Hardware Data Requirements Collection' },\n  { label: '2. Pre-Software Scan Setup' },\n  { label: '3. Software Data Requirements Collection' },\n  { label: '4. vSphere Data Requirements Collection' },\n  { label: '5. Packaging Process' }\n];\n\nexport const Navigation = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"nav-chip-container\">\n      {data.map((chip, index) => (\n        <div\n          className={classnames('nav-chip', { active: active === index })}\n          key={index}\n          onClick={() => onClickCallback(index)}\n          role=\"presentation\"\n          data-qa={`chip-nav-${index}`}\n        >\n          {chip.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiMemory } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk, executeCollectionProcessThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Hardware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.hw_scan';\n\nexport class Hardware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n      request('form');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'hardware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'hardware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"hardware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Hardware scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Hardware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedHardware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.hardware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.hardware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Hardware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n  const matches = regex.exec(deflt);\n  // const json = `[${matches[2]}]`;\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default:\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return parseInt(matches[2], 10);\n          case 'str':\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n  }\n  return null;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiApplication, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Software.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.sw_scan';\n\nexport class Software extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      request,\n      entitiesStatus,\n      requestProcessData,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted\n    } = this.props;\n\n    if (wasHardwareExecuted && wasPreSoftwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'software', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    if (!wasHardwareExecuted || !wasPreSoftwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather Hardware data and Pre-Software Scan Setup before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'software' });\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting, values }) => {\n            return (\n              <Form className=\"software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Database features scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to target server, Target DBMS, Database form for the target\n                      database, SSH connection to the target host, working directory in the repo\n                      host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled, values)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Software Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiApplication} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled, formValues) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        forms={this.props.forms}\n        prototypes={this.props.prototypes}\n        disabled={disabled}\n        currentFormValues={formValues}\n      />\n    );\n  }\n}\n\nexport const ConnectedSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.software,\n    isProcessLoading: state.explorer.flags.collectionProcesses.software.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n    wasPreSoftwareExecuted: state.explorer.flags.collectionProcesses.preSoftware.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Software);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiCubeScan } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './VMware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.vsphere_scan';\n\nexport class VMware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'vmware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const { entitiesStatus, datatypes, prototypes, isProcessLoading, process } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: VMware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"vmware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>vSphere for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>SSH connection to repo server, working directory in the repo host</p>\n                  </div>\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'VMware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiCubeScan} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedVMware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.vmware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.vmware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(VMware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArchiveArrowDownOutline, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport { SuccessModal } from '../../../shared/components/overlays/SuccessModal/SuccessModal';\nimport { downloadFile } from '../../utils/downloadFile';\nimport './Packaging.local.scss';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.packager';\n\nexport class Packaging extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined,\n      successModalOpen: false,\n      failedModalOpen: false,\n      formValues: {},\n      isDownloadDisabled: true,\n      isEmailDisabled: true\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasVsphereExecuted } = this.props;\n\n    if (wasVsphereExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'packaging', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasVsphereExecuted\n    } = this.props;\n    let parameters = null;\n\n    if (!wasVsphereExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather software data before running the Packaging\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined,\n                    formValues: formatParameters(values),\n                    isDownloadDisabled: true,\n                    isEmailDisabled: true\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"packaging-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Package (HW, SW) file for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>Repo working directory, repo SSH connection</p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Paper.Footer.Left>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isDownloadDisabled}\n                      data-qa=\"download-btn\"\n                      onClick={() => {\n                        downloadFile(this.state.formValues);\n                        this.setState({ isEmailDisabled: false });\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isEmailDisabled}\n                      data-qa=\"email-btn\"\n                      onClick={() => this.sendEmail()}\n                    >\n                      Email\n                    </Button>\n                  </Paper.Footer.Left>\n                  <Paper.Footer.Right>\n                    <Button\n                      className=\"btn submit\"\n                      type=\"submit\"\n                      disabled={!dirty || isSubmitting}\n                      variant=\"contained\"\n                      data-qa=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Packaging Process ',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiArchiveArrowDownOutline} />\n            </SvgIcon>\n          )\n        })}\n        {this.renderPackagingSuccessModal()}\n        {this.renderPackagingFailedModal()}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n\n            try {\n              await RestClient.get(\n                '/execdashboard/update',\n                formatParameters({\n                  lms_repo: this.state.formValues.repo_working_dir,\n                  repo_shell: this.state.formValues.repo_shell\n                })\n              );\n\n              const isSucceeded = invocation.status === 'SUCCEEDED';\n\n              this.setState({\n                output: outputReponse.data.data.outputs,\n                invocation,\n                outputOpen: !isSucceeded,\n                successModalOpen: isSucceeded,\n                failedModalOpen: false,\n                isDownloadDisabled: !isSucceeded\n              });\n            } catch (error) {\n              console.log('[collection-packaging-exec-dashboard-update] error: ', error); // eslint-disable-line\n              this.setState({ outputOpen: false });\n              this.setState({ successModalOpen: false });\n              this.setState({ failedModalOpen: true });\n            }\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        type=\"packaging\"\n        output={this.state.output}\n        processName={processName}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        messages={['Preparing job...', 'Executing job...', 'Preparing files...']}\n      />\n    );\n  };\n\n  renderPackagingSuccessModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ successModalOpen: true });\n      },\n      close: () => {\n        this.setState({ successModalOpen: false });\n      }\n    };\n\n    return (\n      <SuccessModal open={this.state.successModalOpen} actions={actions} message=\"Packaging successfully completed!\" />\n    );\n  }\n\n  renderPackagingFailedModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ failedModalOpen: true });\n      },\n      close: () => {\n        this.setState({ failedModalOpen: false });\n      }\n    };\n\n    return (\n      <ErrorModal open={this.state.failedModalOpen} actions={actions} message=\"Packaging failed! Please check parameters and try again.\" />\n    );\n  }\n\n  sendEmail = () => {\n    const body = 'Please attach the downloaded file. It should be named \"lms-file-bundle.tar\".';\n    window.location.href = `mailto:?subject=Packaging files&body=${encodeURIComponent(body)}`;\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPackaging = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.packaging,\n    isProcessLoading: state.explorer.flags.collectionProcesses.packaging.loading,\n    wasVsphereExecuted: state.explorer.flags.collectionProcesses.software.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Packaging);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './SuccessModal.local.scss';\n\nexport const SuccessModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Success\"\n          icon={\n            <SvgIcon className=\"header-icon\">\n              <CheckCircleRoundedIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"success\">\n            <Result.Text>{message}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async query => {\n  const formatQuery = {\n    lms_repo: query.repo_working_dir,\n    repo_shell: query.repo_shell\n  };\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_PACKAGING, formatQuery);\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'lms-file-bundle.tar';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiMemory, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\nimport { Parameter } from '../../../shared/components/form/parameters';\nimport { Result } from '../../../shared/components/overlays';\n\nimport './PreSoftware.local.scss';\n\nconst PROCESS_NAME = 'vendita.oracle.rdbms.util.lms.hardcoded_hw_scan_lms';\nconst PARAMS_TO_NORMALIZE = [\n  'vendita.oracle.rdbms.util.lms.license_metric_values',\n  'vendita.oracle.rdbms.util.lms.environment_values',\n  'vendita.oracle.rdbms.util.lms.partitioning_values',\n  'vendita.oracle.rdbms.util.lms.database_edition_values',\n];\n\nexport class PreSoftware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasHardwareExecuted } = this.props;\n\n    if (wasHardwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'preSoftware', process: PROCESS_NAME });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess,\n      wasHardwareExecuted,\n    } = this.props;\n\n    if (!wasHardwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather hardware data before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    let parameters = null;\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${PROCESS_NAME} process`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {PROCESS_NAME} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: PROCESS_NAME,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'preSoftware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Pre-Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"pre-software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Pre-Software Scan Setup</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={PROCESS_NAME}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Pre-Software Scan Setup',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={PROCESS_NAME}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    if (PARAMS_TO_NORMALIZE.includes(parameter.data_type)) {\n      const normalizedParam = normalize(parameter, this.props.datatypes, this.props.prototypes, this.props.forms);\n      return <Parameter normalized={normalizedParam} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPreSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.preSoftware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.preSoftware.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(PreSoftware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Center, Main, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\nimport { downloadFile } from 'shared/lib/download-file/download-file';\nimport { RestClient } from '../shared/lib/rest';\nimport { CONSTANTS } from '../config';\nimport { LimitlessTooltip } from '../shared/components/tooltip/Tooltip';\n\nimport './Licensing.local.scss';\n\nexport const Licensing = () => {\n  const [selectedSupportRenewalFile, setSelectedSupportRenewalFile] = useState(null);\n  const [supportRenewalFileResult, setSupportRenewalFileResult] = useState('');\n  const [uploadSupportRenewalFileDisabled, setUploadSupportRenewalFileDisabled] = useState(true);\n  const supportRenewalFileName = selectedSupportRenewalFile?.name || 'No file chosen';\n\n  const [selectedMasLicenseFile, setSelectedMasLicenseFile] = useState(null);\n  const [masLicenseFileResult, setMasLicenseFileResult] = useState('');\n  const [selectedMasLicenseFileDisabled, setSelectedMasLicenseFileDisabled] = useState(true);\n  const masLicenseFileName = selectedMasLicenseFile?.name || 'No file chosen';\n\n  // const formRef = useRef();\n\n  const uploadSupportRenewalFile = () => {\n    if (!selectedSupportRenewalFile) {\n      setSupportRenewalFileResult('error');\n\n      return;\n    }\n    setSupportRenewalFileResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedSupportRenewalFile);\n\n    RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_SUPPORT_RENEWAL_FILE, data)\n      .then(() => setSupportRenewalFileResult(''))\n      .catch(() => setSupportRenewalFileResult(''));\n  };\n\n  const uploadMasLicenseFile = () => {\n    if (!selectedMasLicenseFile) {\n      setMasLicenseFileResult('error');\n\n      return;\n    }\n    setMasLicenseFileResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedMasLicenseFile);\n\n    RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_MAS_LICENSE_FILE, data)\n      .then(() => setMasLicenseFileResult(''))\n      .catch(() => setMasLicenseFileResult(''));\n  };\n\n  return (\n    <>\n      <Header title=\"Compliance / Licensing / Oracle / License Collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <span className=\"licensing-title\">\n              By providing MAS with your organization&apos;s Oracle license information,\n              we can help you optimize your Oracle investment. By comparing your Oracle product\n              usage with the licenses you purchased, we can identify any gaps in license coverage,\n              inform you of your financial exposure from an Oracle License Audit, and help identify\n              opportunities to save by reviewing your existing Oracle license strategy.\n              To get started, simply use one of the methods below to load and review\n              your Oracle license portfolio.\n            </span>\n          </Paper.Header>\n          <Paper.Content>\n            <div className=\"widgets-container\">\n              <div className=\"widget\">\n                <h3 className=\"widget-title\">Oracle Support Renewal File</h3>\n                <p className=\"widget-desc\">\n                  Use this option if you don&apos;t have, or cannot easily obtain, your organization&apos;s\n                  license information.<br /><br />\n                  This option uses the Detailed Support Renewal report that you can produce from within the\n                  Oracle Support Renewal Portal. Simply create and download the CSV file, browse to that\n                  file using the file browser below, then click Upload Support Renewal. We will determine\n                  your Oracle licenses from the file and ask you to confirm them before saving them\n                  in MAS. It&apos;s that easy!\n                </p>\n\n                <Switch value={supportRenewalFileResult}>\n                  <Switch.Case value=\"\">\n                    <div className=\"actions-container\">\n                      <label htmlFor=\"renewal-file-upload\" className=\"browse-file\">\n                        Choose file\n                        <input\n                          type=\"file\"\n                          id=\"renewal-file-upload\"\n                          name=\"csv\"\n                          accept=\".csv\"\n                          onChange={(event) => {\n                            setSelectedSupportRenewalFile(event.target.files[0]);\n                            setUploadSupportRenewalFileDisabled(!event.target.files[0]);\n                          }}\n                        />\n                      </label>\n                      <LimitlessTooltip placement=\"bottom\" title={supportRenewalFileName}>\n                        <span className=\"file-name\">{supportRenewalFileName}</span>\n                      </LimitlessTooltip>\n                      <Button className=\"upload-file-btn\" disabled={uploadSupportRenewalFileDisabled} onClick={uploadSupportRenewalFile}>\n                        Upload Support Renewal File\n                      </Button>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"loading\">\n                    <div className=\"loading-container\">\n                      <Center>\n                        <Loader>Uploading file...</Loader>\n                      </Center>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"error\">\n                    <div className=\"failed-result-container\">\n                      <Result type=\"fail\">\n                        <Result.Text>Something went wrong with uploading the file</Result.Text>\n                      </Result>\n                      <Button onClick={() => setSupportRenewalFileResult('')}>Back</Button>\n                    </div>\n                  </Switch.Case>\n                </Switch>\n              </div>\n              <div className=\"widget\">\n                <h3 className=\"widget-title\">MAS License Template</h3>\n                <p className=\"widget-desc\">\n                  Use this option if you have your organization&apos;s Oracle license information.<br /><br />\n                  This option offers a fast and accurate method for entering your Oracle license data. Simply\n                  download and complete the spreadsheet. Once all of your licenses have been added to the spreadsheet,\n                  simply select the file using the file browser, and click Upload MAS License File.\n                </p>\n                <Button className=\"download-template-btn\" onClick={() => downloadFile('/download/license')}>\n                  Download template file here\n                </Button>\n\n                <Switch value={masLicenseFileResult}>\n                  <Switch.Case value=\"\">\n                    <div className=\"actions-container\">\n                      <label htmlFor=\"mas-file-upload\" className=\"browse-file\">\n                        Choose file\n                        <input\n                          type=\"file\"\n                          id=\"mas-file-upload\"\n                          name=\"csv\"\n                          accept=\".csv\"\n                          onChange={(event) => {\n                            setSelectedMasLicenseFile(event.target.files[0]);\n                            setSelectedMasLicenseFileDisabled(!event.target.files[0]);\n                          }}\n                        />\n                      </label>\n                      <LimitlessTooltip placement=\"bottom\" title={masLicenseFileName}>\n                        <span className=\"file-name\">{masLicenseFileName}</span>\n                      </LimitlessTooltip>\n                      <Button className=\"upload-file-btn\" disabled={selectedMasLicenseFileDisabled} onClick={uploadMasLicenseFile}>\n                        Upload MAS License File\n                      </Button>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"loading\">\n                    <div className=\"loading-container\">\n                      <Center>\n                        <Loader>Uploading file...</Loader>\n                      </Center>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"error\">\n                    <div className=\"failed-result-container\">\n                      <Result type=\"fail\">\n                        <Result.Text>Something went wrong with uploading the file</Result.Text>\n                      </Result>\n                      <Button onClick={() => setMasLicenseFileResult('')}>Back</Button>\n                    </div>\n                  </Switch.Case>\n                </Switch>\n              </div>\n              {\n                /* <div className=\"widget\">\n                <h3 className=\"widget-title\">Manual License Entry</h3>\n\n                <Formik\n                  initialValues={{\n                    csiNumber: '',\n                    productName: '',\n                    licenseType: '',\n                    licenseMetric: '',\n                    licenseTerm: '',\n                    licenseQuantity: '',\n                    licenseStatus: '',\n                    licensePurchased: '',\n                    isSupported: '',\n                  }}\n                  onSubmit={values => {\n                    console.log(values);\n                  }}\n                  innerRef={formRef}\n                >\n                  {({ values }) => {\n                    return (\n                      <>\n                        <Form className=\"license-entry-form\">\n                          <Section>\n                            <Row>\n                              <Text name=\"csiNumber\" label=\"CSI Number\" value={values.csiNumber} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"productName\" label=\"Product Name\" value={values.productName} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseType\" label=\"License Type\" value={values.licenseType} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseMetric\" label=\"License Metric\" value={values.licenseMetric} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseTerm\" label=\"License Term\" value={values.licenseTerm} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseQuantity\" label=\"License Quantity\" value={values.licenseQuantity} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseStatus\" label=\"License Status\" value={values.licenseStatus} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licensePurchased\" label=\"License Purchased\" value={values.licensePurchased} required />\n                            </Row>\n                            <Text name=\"isSupported\" label=\"Is Supported\" value={values.isSupported} required />\n                          </Section>\n                        </Form>\n                        <div className=\"save-license-btn\">\n                          <SubmitButton>Save License Information</SubmitButton>\n                        </div>\n                      </>\n                    );\n                  }}\n                </Formik>\n              </div> */\n              }\n            </div>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import { en } from './en';\n\nexport const i18nMessages = {\n  en,\n};\n","import dashboard from './dashboard.json';\nimport general from './general.json';\nimport session from './session.json';\nimport header from './header.json';\n\nexport const en = {\n  ...dashboard,\n  ...general,\n  ...session,\n  ...header,\n};\n","import 'babel-polyfill';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport store from 'core/store';\nimport { App } from './app';\nimport { CONSTANTS } from './app/config';\nimport { i18nMessages } from './i18n';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport './assets/fonts/Lato-Regular.ttf';\nimport './assets/fonts/OpenSans-Regular.ttf';\nimport './style.scss';\n\nconst persistor = persistStore(store);\n\nconst provider = (\n  <IntlProvider locale={CONSTANTS.INTL} messages={i18nMessages[CONSTANTS.INTL]}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter basename={process.env.NODE_ENV === 'development' ? '/' : '/ui/#/'}>\n          <Switch>\n            <Route component={App} path=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </IntlProvider>\n);\n\nrender(provider, document.getElementById('root'));\n","var map = {\n\t\"./af\": 696,\n\t\"./af.js\": 696,\n\t\"./ar\": 697,\n\t\"./ar-dz\": 698,\n\t\"./ar-dz.js\": 698,\n\t\"./ar-kw\": 699,\n\t\"./ar-kw.js\": 699,\n\t\"./ar-ly\": 700,\n\t\"./ar-ly.js\": 700,\n\t\"./ar-ma\": 701,\n\t\"./ar-ma.js\": 701,\n\t\"./ar-sa\": 702,\n\t\"./ar-sa.js\": 702,\n\t\"./ar-tn\": 703,\n\t\"./ar-tn.js\": 703,\n\t\"./ar.js\": 697,\n\t\"./az\": 704,\n\t\"./az.js\": 704,\n\t\"./be\": 705,\n\t\"./be.js\": 705,\n\t\"./bg\": 706,\n\t\"./bg.js\": 706,\n\t\"./bm\": 707,\n\t\"./bm.js\": 707,\n\t\"./bn\": 708,\n\t\"./bn-bd\": 709,\n\t\"./bn-bd.js\": 709,\n\t\"./bn.js\": 708,\n\t\"./bo\": 710,\n\t\"./bo.js\": 710,\n\t\"./br\": 711,\n\t\"./br.js\": 711,\n\t\"./bs\": 712,\n\t\"./bs.js\": 712,\n\t\"./ca\": 713,\n\t\"./ca.js\": 713,\n\t\"./cs\": 714,\n\t\"./cs.js\": 714,\n\t\"./cv\": 715,\n\t\"./cv.js\": 715,\n\t\"./cy\": 716,\n\t\"./cy.js\": 716,\n\t\"./da\": 717,\n\t\"./da.js\": 717,\n\t\"./de\": 718,\n\t\"./de-at\": 719,\n\t\"./de-at.js\": 719,\n\t\"./de-ch\": 720,\n\t\"./de-ch.js\": 720,\n\t\"./de.js\": 718,\n\t\"./dv\": 721,\n\t\"./dv.js\": 721,\n\t\"./el\": 722,\n\t\"./el.js\": 722,\n\t\"./en-au\": 723,\n\t\"./en-au.js\": 723,\n\t\"./en-ca\": 724,\n\t\"./en-ca.js\": 724,\n\t\"./en-gb\": 725,\n\t\"./en-gb.js\": 725,\n\t\"./en-ie\": 726,\n\t\"./en-ie.js\": 726,\n\t\"./en-il\": 727,\n\t\"./en-il.js\": 727,\n\t\"./en-in\": 728,\n\t\"./en-in.js\": 728,\n\t\"./en-nz\": 729,\n\t\"./en-nz.js\": 729,\n\t\"./en-sg\": 730,\n\t\"./en-sg.js\": 730,\n\t\"./eo\": 731,\n\t\"./eo.js\": 731,\n\t\"./es\": 732,\n\t\"./es-do\": 733,\n\t\"./es-do.js\": 733,\n\t\"./es-mx\": 734,\n\t\"./es-mx.js\": 734,\n\t\"./es-us\": 735,\n\t\"./es-us.js\": 735,\n\t\"./es.js\": 732,\n\t\"./et\": 736,\n\t\"./et.js\": 736,\n\t\"./eu\": 737,\n\t\"./eu.js\": 737,\n\t\"./fa\": 738,\n\t\"./fa.js\": 738,\n\t\"./fi\": 739,\n\t\"./fi.js\": 739,\n\t\"./fil\": 740,\n\t\"./fil.js\": 740,\n\t\"./fo\": 741,\n\t\"./fo.js\": 741,\n\t\"./fr\": 742,\n\t\"./fr-ca\": 743,\n\t\"./fr-ca.js\": 743,\n\t\"./fr-ch\": 744,\n\t\"./fr-ch.js\": 744,\n\t\"./fr.js\": 742,\n\t\"./fy\": 745,\n\t\"./fy.js\": 745,\n\t\"./ga\": 746,\n\t\"./ga.js\": 746,\n\t\"./gd\": 747,\n\t\"./gd.js\": 747,\n\t\"./gl\": 748,\n\t\"./gl.js\": 748,\n\t\"./gom-deva\": 749,\n\t\"./gom-deva.js\": 749,\n\t\"./gom-latn\": 750,\n\t\"./gom-latn.js\": 750,\n\t\"./gu\": 751,\n\t\"./gu.js\": 751,\n\t\"./he\": 752,\n\t\"./he.js\": 752,\n\t\"./hi\": 753,\n\t\"./hi.js\": 753,\n\t\"./hr\": 754,\n\t\"./hr.js\": 754,\n\t\"./hu\": 755,\n\t\"./hu.js\": 755,\n\t\"./hy-am\": 756,\n\t\"./hy-am.js\": 756,\n\t\"./id\": 757,\n\t\"./id.js\": 757,\n\t\"./is\": 758,\n\t\"./is.js\": 758,\n\t\"./it\": 759,\n\t\"./it-ch\": 760,\n\t\"./it-ch.js\": 760,\n\t\"./it.js\": 759,\n\t\"./ja\": 761,\n\t\"./ja.js\": 761,\n\t\"./jv\": 762,\n\t\"./jv.js\": 762,\n\t\"./ka\": 763,\n\t\"./ka.js\": 763,\n\t\"./kk\": 764,\n\t\"./kk.js\": 764,\n\t\"./km\": 765,\n\t\"./km.js\": 765,\n\t\"./kn\": 766,\n\t\"./kn.js\": 766,\n\t\"./ko\": 767,\n\t\"./ko.js\": 767,\n\t\"./ku\": 768,\n\t\"./ku.js\": 768,\n\t\"./ky\": 769,\n\t\"./ky.js\": 769,\n\t\"./lb\": 770,\n\t\"./lb.js\": 770,\n\t\"./lo\": 771,\n\t\"./lo.js\": 771,\n\t\"./lt\": 772,\n\t\"./lt.js\": 772,\n\t\"./lv\": 773,\n\t\"./lv.js\": 773,\n\t\"./me\": 774,\n\t\"./me.js\": 774,\n\t\"./mi\": 775,\n\t\"./mi.js\": 775,\n\t\"./mk\": 776,\n\t\"./mk.js\": 776,\n\t\"./ml\": 777,\n\t\"./ml.js\": 777,\n\t\"./mn\": 778,\n\t\"./mn.js\": 778,\n\t\"./mr\": 779,\n\t\"./mr.js\": 779,\n\t\"./ms\": 780,\n\t\"./ms-my\": 781,\n\t\"./ms-my.js\": 781,\n\t\"./ms.js\": 780,\n\t\"./mt\": 782,\n\t\"./mt.js\": 782,\n\t\"./my\": 783,\n\t\"./my.js\": 783,\n\t\"./nb\": 784,\n\t\"./nb.js\": 784,\n\t\"./ne\": 785,\n\t\"./ne.js\": 785,\n\t\"./nl\": 786,\n\t\"./nl-be\": 787,\n\t\"./nl-be.js\": 787,\n\t\"./nl.js\": 786,\n\t\"./nn\": 788,\n\t\"./nn.js\": 788,\n\t\"./oc-lnc\": 789,\n\t\"./oc-lnc.js\": 789,\n\t\"./pa-in\": 790,\n\t\"./pa-in.js\": 790,\n\t\"./pl\": 791,\n\t\"./pl.js\": 791,\n\t\"./pt\": 792,\n\t\"./pt-br\": 793,\n\t\"./pt-br.js\": 793,\n\t\"./pt.js\": 792,\n\t\"./ro\": 794,\n\t\"./ro.js\": 794,\n\t\"./ru\": 795,\n\t\"./ru.js\": 795,\n\t\"./sd\": 796,\n\t\"./sd.js\": 796,\n\t\"./se\": 797,\n\t\"./se.js\": 797,\n\t\"./si\": 798,\n\t\"./si.js\": 798,\n\t\"./sk\": 799,\n\t\"./sk.js\": 799,\n\t\"./sl\": 800,\n\t\"./sl.js\": 800,\n\t\"./sq\": 801,\n\t\"./sq.js\": 801,\n\t\"./sr\": 802,\n\t\"./sr-cyrl\": 803,\n\t\"./sr-cyrl.js\": 803,\n\t\"./sr.js\": 802,\n\t\"./ss\": 804,\n\t\"./ss.js\": 804,\n\t\"./sv\": 805,\n\t\"./sv.js\": 805,\n\t\"./sw\": 806,\n\t\"./sw.js\": 806,\n\t\"./ta\": 807,\n\t\"./ta.js\": 807,\n\t\"./te\": 808,\n\t\"./te.js\": 808,\n\t\"./tet\": 809,\n\t\"./tet.js\": 809,\n\t\"./tg\": 810,\n\t\"./tg.js\": 810,\n\t\"./th\": 811,\n\t\"./th.js\": 811,\n\t\"./tk\": 812,\n\t\"./tk.js\": 812,\n\t\"./tl-ph\": 813,\n\t\"./tl-ph.js\": 813,\n\t\"./tlh\": 814,\n\t\"./tlh.js\": 814,\n\t\"./tr\": 815,\n\t\"./tr.js\": 815,\n\t\"./tzl\": 816,\n\t\"./tzl.js\": 816,\n\t\"./tzm\": 817,\n\t\"./tzm-latn\": 818,\n\t\"./tzm-latn.js\": 818,\n\t\"./tzm.js\": 817,\n\t\"./ug-cn\": 819,\n\t\"./ug-cn.js\": 819,\n\t\"./uk\": 820,\n\t\"./uk.js\": 820,\n\t\"./ur\": 821,\n\t\"./ur.js\": 821,\n\t\"./uz\": 822,\n\t\"./uz-latn\": 823,\n\t\"./uz-latn.js\": 823,\n\t\"./uz.js\": 822,\n\t\"./vi\": 824,\n\t\"./vi.js\": 824,\n\t\"./x-pseudo\": 825,\n\t\"./x-pseudo.js\": 825,\n\t\"./yo\": 826,\n\t\"./yo.js\": 826,\n\t\"./zh-cn\": 827,\n\t\"./zh-cn.js\": 827,\n\t\"./zh-hk\": 828,\n\t\"./zh-hk.js\": 828,\n\t\"./zh-mo\": 829,\n\t\"./zh-mo.js\": 829,\n\t\"./zh-tw\": 830,\n\t\"./zh-tw.js\": 830\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1456;","/**\n * A IFFE to ignore warnings of prop-types validation\n * from Material-UI components used with scoped-css-loader.\n *\n * They are invalid and will not appear in prod builds, they are\n * cumbersome for development for now.\n *\n * TODO: investigate if there is another option when there is time.\n * For now it looks like there is not.\n */\n\n/* eslint-disable */\n(function clearMUIDataVWarnings() {\n  const error = console.error.bind(console);\n  const partial = /Warning:.*data-v-/;\n\n  console.error = (message, ...args) => {\n    if (typeof message === 'string' && message.search(partial) !== -1) {\n      return;\n    }\n\n    error(message, ...args);\n  };\n})();\n\n/* eslint-enable */\n","module.exports = \"../fonts/2d36b1a925432bae7f3c53a340868c6e.ttf\";","module.exports = \"../fonts/3ed9575dcc488c3e3a5bd66620bdf5a4.ttf\";"],"sourceRoot":""}