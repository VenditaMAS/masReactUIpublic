{"version":3,"sources":["webpack:///./src/app/config.js","webpack:///./src/app/executive-dashboard/store/actions/index.js","webpack:///./src/app/shared/components/form/editors/Generic.jsx","webpack:///./src/app/explorer/store/actions/index.js","webpack:///./src/app/shared/components/overlays/Result/Result.jsx","webpack:///./src/app/explorer/store/thunks/index.js","webpack:///./src/app/explorer/SystemExplorerFeatureUtil.js","webpack:///./src/app/users-manager/groups/store/actions.js","webpack:///./src/app/shared/lib/cron-validator/cron-validator.js","webpack:///./src/app/users-manager/store/actions/index.js","webpack:///./src/app/entities/actions.js","webpack:///./src/app/session/store/actions/index.js","webpack:///./src/app/shared/store/actions/index.js","webpack:///./src/app/explorer/store/selectors/index.js","webpack:///./src/app/shared/components/tooltip/Tooltip.jsx","webpack:///./src/app/entities/utils/privileges.js","webpack:///./src/app/shared/components/form/editors/Custom.jsx","webpack:///./src/app/job-process/store/constants.js","webpack:///./src/app/license-allocation/store/actions/index.js","webpack:///./src/app/shared/components/form/SubmitButton.jsx","webpack:///./src/app/users-manager/components/AvatarCard/AvatarCard.jsx","webpack:///./src/app/shared/components/form/editors/field-level-validations.js","webpack:///./src/app/executive-dashboard/store/thunks/index.js","webpack:///./src/app/license-collection/utils/formatTimePeriod.js","webpack:///./src/app/session/store/selectors/index.js","webpack:///./src/app/shared/api/invocation.js","webpack:///./src/app/executive-dashboard/components/ServersNetworkTile/ServersNetworkConstants.js","webpack:///./src/app/executive-dashboard/components/OperatingSystemsTile/OperatingSystemsConstants.js","webpack:///./src/app/shared/store/state/index.js","webpack:///./src/app/users-manager/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/thunks.js","webpack:///./src/app/executive-dashboard/components/LicensableFeaturesGraph/LicensableFeaturesConstants.js","webpack:///./src/app/license-collection/utils/formikFormatter.js","webpack:///./src/app/shared/components/form/parameters/variants.jsx","webpack:///./src/app/job-process/store/selectors.js","webpack:///./src/app/core/components/Ensure/Ensure.jsx","webpack:///./src/app/users-manager/components/SearchableList/SearchableList.jsx","webpack:///./src/app/session/store/state/index.js","webpack:///./src/app/entities/selectors.js","webpack:///./src/app/users-manager/store/mappers/index.js","webpack:///./src/app/license-collection/utils/copyToClipboard.js","webpack:///./src/app/shared/components/layout/NavigationTab/NavigationTab.jsx","webpack:///./src/app/users-manager/store/selectors/index.js","webpack:///./src/app/explorer/components/NavigationTab/NavigationTab.jsx","webpack:///./src/app/shared/api/accounts.js","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSqlStatementsUtil.js","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsList/OptionsList.jsx","webpack:///./src/app/executive-dashboard/components/ChartTooltip/ChartTooltip.jsx","webpack:///./src/app/license-collection/utils/normalizeParameter.jsx","webpack:///./src/app/license-collection/controls/TextField/TextField.jsx","webpack:///./src/app/license-collection/controls/DropdownField/DropdownField.jsx","webpack:///./src/app/license-collection/components/OutputModal/OutputModal.jsx","webpack:///./src/app/shared/api/schedule.js","webpack:///./src/app/explorer/store/mappers/index.js","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/SystemExplorerViewMode.js","webpack:///./src/app/core/store/index.js","webpack:///./src/app/entities/components/Switch.jsx","webpack:///./src/app/shared/api/protocols.js","webpack:///./src/app/job-process/job-parameters.jsx","webpack:///./src/app/shared/components/form/parameters/normalizeParameter.js","webpack:///./src/app/job-process/containers/notifications/notifications.jsx","webpack:///./src/app/shared/api/process.js","webpack:///./src/app/shared/components/range-date-picker/constants.js","webpack:///./src/app/shared/components/form/parameters/index.jsx","webpack:///./src/app/shared/components/simple-search-input/simple-search-input.jsx","webpack:///./src/app/core/components/Header/Header.jsx","webpack:///./src/app/dashboard/store/state/index.js","webpack:///./src/app/dashboard/store/actions/index.js","webpack:///./src/app/explorer/containers/AddServerCard/AddServerCard.jsx","webpack:///./src/app/explorer/containers/AddDatabaseCard/AddDatabaseCard.jsx","webpack:///./src/app/explorer/containers/ImportCSV/ImportCSV.jsx","webpack:///./src/app/shared/api/delete.js","webpack:///./src/app/entities/mappers.js","webpack:///./src/app/entities/utils/security-areas.js","webpack:///./src/app/explorer/components/ActionCard/ActionCard.jsx","webpack:///./src/app/explorer/components/CardsLayout/CardsLayout.jsx","webpack:///./src/app/shared/lib/want/index.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/ChangePassword.jsx","webpack:///./src/app/license-allocation/store/thunks/index.js","webpack:///./src/app/license-allocation/store/selectors/index.js","webpack:///./src/app/shared/components/overlays/Modal/Modal.jsx","webpack:///./src/app/shared/api/namespace.js","webpack:///./src/app/shared/api/form.js","webpack:///./src/app/entities/components/form-actions/FormEditor.jsx","webpack:///./src/app/executive-dashboard/store/mappers/index.js","webpack:///./src/app/shared/components/center/center.component.jsx","webpack:///./src/app/shared/lib/react-dates/isBeforeDay.js","webpack:///./src/app/shared/components/LightTooltip/LightTooltip.jsx","webpack:///./src/app/shared/components/layout/Overflow/Overflow.jsx","webpack:///./src/app/shared/components/overlays/ModalHeader/ModalHeader.jsx","webpack:///./src/app/shared/components/controls/Checkbox/Checkbox.jsx","webpack:///./src/app/shared/lib/polling/index.js","webpack:///./src/app/explorer/containers/Forms/ServerForm.jsx","webpack:///./src/app/shared/api/datatypes.js","webpack:///./src/app/explorer/containers/Forms/DatabaseForm.jsx","webpack:///./src/app/shared/lib/download-file/download-file.js","webpack:///./src/app/jobs/actions/delete/DeleteJobModal.jsx","webpack:///./src/app/jobs/containers/Schedule/Schedule.jsx","webpack:///./src/app/entities/components/namespace-actions/NewNamespace.jsx","webpack:///./src/app/shared/components/form/SubmitButtonNoDirty.jsx","webpack:///./src/app/entities/components/form-actions/FormModal.jsx","webpack:///./src/app/explorer/containers/Settings/DatabaseSettings.jsx","webpack:///./src/app/license-collection/utils/getOutputText.js","webpack:///./src/app/job-process/store/actions.js","webpack:///./src/app/license-collection/utils/sendToEmail.js","webpack:///./src/app/session/store/effects/be-version/be-version.effect.js","webpack:///./src/app/jobs/components/total-jobs-count/TotalJobsCount.jsx","webpack:///./src/app/shared/api/alias.js","webpack:///./src/app/session/store/reducers/reducer.js","webpack:///./src/app/dashboard/store/tasks.js","webpack:///./src/app/dashboard/store/reducers/reducer.js","webpack:///./src/app/shared/store/reducers/reducer.js","webpack:///./src/app/core/store/reducers/reducer.js","webpack:///./src/app/core/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/wishes.jsx","webpack:///./src/app/shared/components/form/editors/filters.js","webpack:///./src/app/entities/components/form-actions/utils.js","webpack:///./src/app/shared/api/privileges.js","webpack:///./src/app/explorer/components/DbObjects/Sidebar.jsx","webpack:///./src/app/explorer/components/DbObjects/Viewer.jsx","webpack:///./src/app/license-collection/utils/formatMemoryZiseGb.js","webpack:///./src/app/explorer/components/StatusLabel/StatusLabel.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/constants.jsx","webpack:///./src/app/job-process/store/tasks.js","webpack:///./src/app/executive-dashboard/ExecutiveDashboard.jsx","webpack:///./src/app/license-collection/components/ListOutput/ListOutput.jsx","webpack:///./src/app/session/store/reducers/index.js","webpack:///./src/app/shared/lib/bind-reducer/bind-reducer.js","webpack:///./src/app/shared/lib/action-creator/action-states.js","webpack:///./src/app/shared/lib/action-creator/action-creator.class.js","webpack:///./src/app/shared/lib/slugify/slugify.js","webpack:///./src/app/shared/lib/create-url/create-url.js","webpack:///./src/app/shared/lib/number-pretty/number-pretty.js","webpack:///./src/app/shared/lib/smart-number/smart-number.js","webpack:///./src/app/shared/lib/capitalize-first-letter/capitalize-first-letter.js","webpack:///./src/app/shared/lib/patterns/email.js","webpack:///./src/app/shared/lib/patterns/phone-number.js","webpack:///./src/app/shared/lib/patterns/url.js","webpack:///./src/app/shared/lib/random-generator/string.js","webpack:///./src/app/shared/lib/random-generator/unique-id.js","webpack:///./src/app/shared/lib/function-placeholder/index.js","webpack:///./src/app/shared/lib/delay/index.js","webpack:///./src/app/shared/lib/react-dates/isInclusivelyAfterDay.js","webpack:///./src/app/shared/lib/redux-utils/actions.utils.js","webpack:///./src/app/shared/lib/redux-utils/reducers.utils.js","webpack:///./src/app/shared/lib/workload/parseData.js","webpack:///./src/app/session/store/effects/index.js","webpack:///./src/app/shared/lib/rest/try-async.js","webpack:///./src/app/shared/lib/rest/rest-client.js","webpack:///./src/app/session/pages/login/login.page.jsx","webpack:///./src/app/session/components/container/container.component.jsx","webpack:///./src/app/session/pages/login/components/form/form.component.jsx","webpack:///./src/app/shared/components/rest-errors/rest-errors.component.jsx","webpack:///./src/app/shared/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/workload-graph/workload-graph.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-tooltip/custom-tooltip.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-axis-tick/custom-axis-tick.component.jsx","webpack:///./src/app/shared/components/circle-img/circle-img.component.jsx","webpack:///./src/app/shared/components/number-label/number-label.component.jsx","webpack:///./src/app/shared/components/string-label/string-label.component.jsx","webpack:///./src/app/shared/components/search-input/search-input.component.jsx","webpack:///./src/app/shared/components/dropdown/dropdown.component.jsx","webpack:///./src/app/shared/components/small-input/small-input.component.jsx","webpack:///./src/app/shared/components/single-date-picker/single-date-picker.component.jsx","webpack:///./src/app/shared/components/range-date-picker/range-date-picker.component.jsx","webpack:///./src/app/shared/components/JobResults/JobResults.jsx","webpack:///./src/app/shared/components/switch/Switch.jsx","webpack:///./src/app/shared/components/Table/Table.jsx","webpack:///./src/app/session/pages/logout/logout.page.jsx","webpack:///./src/app/dashboard/root.module.jsx","webpack:///./src/app/shared/components/loaders/Loader/Loader.jsx","webpack:///./src/app/shared/components/loaders/ParameterLoader/ParameterLoader.jsx","webpack:///./src/app/shared/components/layout/Paper/Paper.jsx","webpack:///./src/app/shared/components/layout/Main/Main.jsx","webpack:///./src/app/shared/components/layout/Section/Section.jsx","webpack:///./src/app/shared/components/layout/ScrollableContainer/ScrollableContainer.jsx","webpack:///./src/app/shared/components/layout/Column/Column.jsx","webpack:///./src/app/shared/components/layout/Row/Row.jsx","webpack:///./src/app/dashboard/containers/status/status.container.jsx","webpack:///./src/app/dashboard/containers/status/components/daemon/daemon.component.jsx","webpack:///./src/app/dashboard/containers/status/components/job-status/job-status.component.jsx","webpack:///./src/app/dashboard/containers/search-area/search-area.container.jsx","webpack:///./src/app/dashboard/components/search-results/search-results.component.jsx","webpack:///./src/app/shared/components/controls/Input/Input.jsx","webpack:///./src/app/shared/components/controls/Button/Button.jsx","webpack:///./src/app/shared/components/overlays/ModalFooter/ModalFooter.jsx","webpack:///./src/app/shared/components/overlays/ErrorModal/ErrorModal.jsx","webpack:///./src/app/shared/components/overlays/ConfirmationModal/ConfirmationModal.jsx","webpack:///./src/app/dashboard/store/reducers/index.js","webpack:///./src/app/shared/store/reducers/index.js","webpack:///./src/app/shared/store/effects/index.js","webpack:///./src/app/root.module.jsx","webpack:///./src/app/core/root.layout.jsx","webpack:///./src/app/jobs/root.module.jsx","webpack:///./src/app/jobs/components/job-item/job-item.component.jsx","webpack:///./src/app/jobs/components/job-status/job-status.component.jsx","webpack:///./src/app/jobs/containers/filters/filters.container.jsx","webpack:///./src/app/shared/store/selectors/connections.js","webpack:///./src/app/jobs/containers/jobs-invocations/jobs-invocations.container.jsx","webpack:///./src/app/shared/lib/deep-copy/deep-copy.js","webpack:///./src/app/entities/root.module.jsx","webpack:///./src/app/users-manager/root.jsx","webpack:///./src/app/users-manager/users/root.jsx","webpack:///./src/app/users-manager/groups/root.jsx","webpack:///./src/app/explorer/root.jsx","webpack:///./src/app/explorer/treeview/root.jsx","webpack:///./src/app/explorer/components/DbObjects/DbObjects.jsx","webpack:///./src/app/core/containers/sidebar/sidebar.container.jsx","webpack:///./src/app/core/containers/sidebar/components/favorites/favorites.component.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/navigation.component.jsx","webpack:///./src/app/core/containers/sidebar/components/notification/notification.component.jsx","webpack:///./src/app/core/containers/sidebar/components/user-menu/user-menu.component.jsx","webpack:///./src/app/core/containers/sidebar/components/compile/compile.component.jsx","webpack:///./src/app/job-process/root.module.jsx","webpack:///./src/app/session/store/actions/session.action.js","webpack:///./src/app/session/store/effects/check-authorization/check-authorization.effect.js","webpack:///./src/app/constants.js","webpack:///./src/app/session/store/effects/login/login.effect.js","webpack:///./src/app/session/store/effects/logout/logout.effect.js","webpack:///./src/assets/images/login_graphic.svg","webpack:///./src/assets/images/vendita_logo_blue.svg","webpack:///./src/assets/images/mas_logo_blue.svg","webpack:///./src/app/shared/components/range-date-picker/range-date-range-picker.container.jsx","webpack:///./src/app/shared/store/actions/jobs.action.js","webpack:///./src/app/shared/store/actions/process.action.js","webpack:///./src/app/shared/store/actions/global-filters.action.js","webpack:///./src/app/dashboard/store/actions/filter-status.action.js","webpack:///./src/app/shared/api/daemon.js","webpack:///./src/app/dashboard/store/selectors/index.js","webpack:///./src/app/dashboard/containers/servers-list/ServersList.jsx","webpack:///./src/app/shared/store/effects/jobs/jobs.effect.js","webpack:///./src/app/shared/store/effects/connections/connections.effect.js","webpack:///./src/app/shared/store/effects/search-jobs/search-jobs.effect.js","webpack:///./src/app/shared/store/effects/search-processes/search-processes.effect.js","webpack:///./src/app/shared/store/effects/global-filters/global-filters.effect.js","webpack:///./src/app/users-manager/store/reducers/index.js","webpack:///./src/app/users-manager/groups/store/reducer.js","webpack:///./src/app/explorer/store/reducers/index.js","webpack:///./src/app/executive-dashboard/store/reducers/index.js","webpack:///./src/app/license-allocation/store/reducers/index.js","webpack:///./src/app/entities/reducer.js","webpack:///./src/app/dashboard/store/reducers/daemon.js","webpack:///./src/app/job-process/store/reducer.js","webpack:///./src/app/core/store/middlewares.js","webpack:///./src/app/core/store/reducers/index.js","webpack:///./src/app/core/store/actions/notification.action.js","webpack:///./src/app/jobs/components/job-list/job-list.component.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ScheduleModal/ScheduleModal.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ViewTabs/ViewTabs.jsx","webpack:///./src/app/jobs/containers/Schedule/components/Documentation/Documentation.jsx","webpack:///./src/app/jobs/containers/Schedule/containers/ScheduleForm/ScheduleForm.jsx","webpack:///./src/app/shared/components/form/editors/formatters.js","webpack:///./src/app/shared/components/form/parameters/extractDefault.js","webpack:///./src/app/job-process/components/notification-groups/notification-groups.jsx","webpack:///./src/app/job-process/components/notification-users/notification-users.jsx","webpack:///./src/app/job-process/components/notification-events/notification-events.jsx","webpack:///./src/app/job-process/components/notification-list/notification-list.jsx","webpack:///./src/app/entities/components/Entity.jsx","webpack:///./src/app/entities/containers/SelectedEntity.jsx","webpack:///./src/app/entities/components/ActionsNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/EditNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/DeleteNamespace.jsx","webpack:///./src/app/entities/components/ActionsConstant.jsx","webpack:///./src/app/shared/api/constant.js","webpack:///./src/app/entities/components/ActionsProcess.jsx","webpack:///./src/app/entities/components/process-actions/EditProcessModal.jsx","webpack:///./src/app/entities/components/process-actions/ProcessEditor.jsx","webpack:///./src/app/entities/components/ActionsForm.jsx","webpack:///./src/app/entities/components/form-actions/FormParameters.jsx","webpack:///./src/app/entities/components/ActionsRoot.jsx","webpack:///./src/app/entities/components/ActionsPrototype.jsx","webpack:///./src/app/entities/components/ActionsSchedule.jsx","webpack:///./src/app/entities/components/ActionsCommon.jsx","webpack:///./src/app/entities/components/common-actions/DeleteEntity.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesModal.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesEditor.jsx","webpack:///./src/app/users-manager/components/HeaderPageSwitch/HeaderPageSwitch.jsx","webpack:///./src/app/users-manager/users/containers/UserLoader.jsx","webpack:///./src/app/users-manager/users/pages/UserView/UserView.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/Privileges.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/UserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserDetails.jsx","webpack:///./src/app/users-manager/users/pages/UserView/components/UserDatesBox.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserInfo.jsx","webpack:///./src/app/users-manager/components/UserCard/UserCard.jsx","webpack:///./src/app/users-manager/users/pages/NoUsersSelected.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/CreateNewUser.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/NewUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/components/GroupCard/GroupCard.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/GroupView.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/Privileges.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/GroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditGroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditSubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/CreateNewGroup.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/pages/NoGroupSelected.jsx","webpack:///./src/app/explorer/treeview/layers/Dbms/Dbms.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/ServerList.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/containers/Server/Server.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/DatabaseList.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/containers/Database/Database.jsx","webpack:///./src/app/explorer/containers/Breadcrumbs/Breadcrumbs.jsx","webpack:///./src/app/explorer/components/ContentSwitch/ContentSwitch.jsx","webpack:///./src/app/explorer/containers/AllDbms/AllDbms.jsx","webpack:///./src/app/explorer/containers/AllServers/AllServers.jsx","webpack:///./src/app/explorer/containers/Settings/ServerSettings.jsx","webpack:///./src/app/explorer/containers/AllDatabases/AllDatabases.jsx","webpack:///./src/app/explorer/containers/Workload/Workload.jsx","webpack:///./src/app/explorer/containers/License/License.jsx","webpack:///./src/app/explorer/containers/License/Report/Report.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesUsage/FeaturesUsage.jsx","webpack:///./src/app/explorer/components/LicenseReporting/UnusedFeatures/UnusedFeatures.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesTable/FeaturesTable.jsx","webpack:///./src/app/explorer/containers/Storage/Storage.jsx","webpack:///./src/app/explorer/containers/Storage/MSSQL/MssqlStorage.jsx","webpack:///./src/app/explorer/containers/Objects/Objects.jsx","webpack:///./src/app/explorer/containers/Sessions/Sessions.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/CommonSessionsTable.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/MssqlSessionsTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSQLStatements.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/charts/ElapsedTimeChart.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/OracleTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/PostgresTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MysqlTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MssqlTopSQLTable.jsx","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/ToggleSystemExplorerView.jsx","webpack:///./src/app/explorer/components/TableView/SystemExplorerTable.jsx","webpack:///./src/app/shared/api/compile.js","webpack:///./src/assets/images/mas_logo_white.svg","webpack:///./src/assets/images/vendita_logo_white.svg","webpack:///./src/app/job-process/job-view.jsx","webpack:///./src/app/job-process/job-form.jsx","webpack:///./src/app/job-process/containers/output/output.jsx","webpack:///./src/app/job-process/components/ListOutput/ListOutput.jsx","webpack:///./src/app/job-process/components/JobStatus/JobStatus.jsx","webpack:///./src/app/executive-dashboard/containers/ToggleSelection/ToggleSelection.jsx","webpack:///./src/app/executive-dashboard/components/ServersNetworkTile/ServersNetworkTile.jsx","webpack:///./src/app/executive-dashboard/components/LicensableFeaturesGraph/LicensableFeaturesTile.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionItem/OptionItem.jsx","webpack:///./src/app/executive-dashboard/components/OperatingSystemsTile/OperatingSystemsTile.jsx","webpack:///./src/app/executive-dashboard/components/LicenseDeltaTile/LicenseDeltaTile.jsx","webpack:///./src/app/executive-dashboard/components/MSSQL/LicenseUsageTile/LicenseUsageTile.jsx","webpack:///./src/app/executive-dashboard/components/MSSQL/ServersNetworkTile/ServersNetworkTile.jsx","webpack:///./src/app/executive-dashboard/components/MSSQL/EnvironmentUsageTile/EnvironmentUsageTile.jsx","webpack:///./src/app/executive-dashboard/components/MSSQL/DbVersionAndOsTile/DbVersionAndOsTile.jsx","webpack:///./src/app/license-collection/LicenseCollection.jsx","webpack:///./src/app/license-collection/components/Navigation/Navigation.jsx","webpack:///./src/app/license-collection/Pages/Hardware/Hardware.jsx","webpack:///./src/app/license-collection/utils/extractDefault.js","webpack:///./src/app/license-collection/Pages/Software/Software.jsx","webpack:///./src/app/license-collection/Pages/VMware/VMware.jsx","webpack:///./src/app/license-collection/Pages/Packaging/Packaging.jsx","webpack:///./src/app/shared/components/overlays/SuccessModal/SuccessModal.jsx","webpack:///./src/app/license-collection/utils/downloadFile.js","webpack:///./src/app/license-collection/Pages/PreSoftware/PreSoftware.jsx","webpack:///./src/app/license-allocation/LicenseAllocation.jsx","webpack:///./src/app/license-allocation/components/AllocatedLicensesTable/AllocatedLicensesTable.jsx","webpack:///./src/app/license-allocation/components/assign-license-modal/AssignLicenseModal.jsx","webpack:///./src/app/licensing/Licensing.jsx","webpack:///./src/i18n/index.js","webpack:///./src/i18n/en/index.js","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/scoped-css-mui-compatibility.js","webpack:///./src/assets/fonts/Lato-Regular.ttf","webpack:///./src/assets/fonts/OpenSans-Regular.ttf"],"names":["CONSTANTS","defaultConstants","PROVIDE_EXECUTIVE_DASHBOARD","PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD","SELECT_ALL","DESELECT_ALL","TOGGLE_SERVER","LOAD_NETWORK_NODES","LOAD_NETWORK_EDGES","LOAD_SERVER_DETAILS","LOAD_OS_TYPE","LOAD_DB_EDITION","LOAD_DB_VERSION","LOAD_USAGE","LOAD_USAGE_STAT","LOAD_LICENSE_DELTA","LOAD_MSSQL_USAGE","LOAD_MSSQL_NETWORK_NODES","LOAD_MSSQL_NETWORK_EDGES","LOAD_MSSQL_SERVER_DETAILS","LOAD_MSSQL_ENVIRONMENT_USAGE","LOAD_MSSQL_DB_VERSIONS","LOAD_MSSQL_OS_TYPES","Text","forwardRef","ref","options","validate","defaultValue","value","required","reactToChange","props","useState","shouldValidate","setShouldValidate","validation","useMemo","check","useField","touched","name","field","meta","helpers","formikCtx","useFormikContext","useEffect","setValue","setTouched","multiline","isPopup","undefined","setError","length","selected","find","o","description","disableClearable","id","getOptionLabel","option","label","getOptionDisabled","disabled","onChange","e","renderInput","params","type","error","helperText","Email","validations","merge","email","PhoneNumber","phone","Integer","required_not_null","Password","BOOL_OPTIONS","BooleanSelect","Date","moment","format","utc","fullWidth","utils","MomentUtils","disableToolbar","inputVariant","KeyboardButtonProps","date","Time","ampm","mask","Select","isNamespace","getOptionSelected","desription","LOAD_ALL_ACCOUNTS","CHANGE_STATE","LOAD_ALL_LICENSES","LOAD_TOP_SQL_STATEMENTS","LICENSE_FULL_REPORT","PROVIDE_SERVERS_USAGE","LOAD_STORAGE_POINTS","SET_STORAGE_NS","LOAD_STORAGE_DETAILS","LOAD_OBJECT_DETAILS","SET_SELECTED_OBJECT","LOAD_SESSIONS","PROVIDE_DB_LAST_BACKUP","PROVIDE_DB_STATUS","UPDATE_DB_STATUS","LOAD_PROTOCOLS","LOAD_COLLECTION_PROCESS","EXECUTE_COLLECTION_PROCESS","LOAD_MSSQL_DISK_IO","LOAD_MSSQL_STORAGE_USED","LOAD_MSSQL_FILE_STORAGE","icons_map","success","mdiCheckDecagram","fail","mdiAlertDecagram","Result","children","className","classnames","fontSize","d","propTypes","oneOf","node","ResultText","compact","bool","ResultMessages","messages","map","msg","index","key","text","split","Messages","loadAllAccountsThunk","payload","dispatch","getState","creators","loading","RestClient","get","BASE","ENDPOINTS","ACCOUNTS","page_size","response","data","protocols","explorer","from","provideServersUsageThunk","provideDBLastBackupThunks","provideDBStatusThunks","loadProtocolsThunk","PROTOCOLS","changeStateThunk","newState","action","loadAllLicensesThunk","JOBS","loadTopSQLStatementsThunk","postInvocation","creationResult","invocations","invocationUuid","uuid","statusChecksCount","isFinished","sleep","fetchInvocation","bind","invocationStatus","invocation","status","fetchInvocationOutput","invocationOutput","result","outputs","timeout","ms","Promise","resolve","setTimeout","fn","args","getLicenseReportThunk","fullPath","dbconn","Array","isArray","reportData","loadSessionsThunk","filters","SESSIONS","sort","loadSessionsByProcessThunk","protocol","dbmsProperty","TopSqlStatementsUtil","getDbmsPropertyName","parameters","oformat","process","SystemExplorerFeatureUtil","getSessionsEndpoint","timestamp","resultTxt","statementsJson","sessionsData","JSON","parse","sessionsLoaderResolver","shouldLoadSessionsByProcess","enableSessionsLoadingFlag","disableSessionsLoadingFlag","loadStorageDetailsThunk","STORAGE_DF","setStorageItemThunk","ns","loadStoragePointsThunk","STORAGE_TS","loadMssqlStorageDataThunk","storageKey","resultJson","invocationOutputPoller","output","parseInvocationResult","loadObjectsThunk","objectApis","path","allSettled","api","dbms","allData","res","loadObjectsByProcessThunk","getObjectsEndpoint","objectsJSON","item","objectsLoaderResolver","shouldLoadObjectsByProcess","setSelectedObjectThunk","servers","structured","slice","usageResult","server","loadUsagePerDb","filter","push","address","usage","highLoadCount","a","b","parseFloat","Oracle","r","Mysql","Pgsql","Mssql","databases","db","special","database","dbLastBackup","loadDBLastBackup","backup","dbStatus","loadDBStatus","message","dbName","refreshServerDbsStatusThunk","retrieveDBStatus","shell","DB_STATUS","toString","toLowerCase","parseInt","refreshDBStatusThunk","selectedDBMS","sv","loadProcessDetailsThunk","PROCESSES","details","processes","executeCollectionProcessThunk","HOST_CPU","s","DB_LAST_BACKUP","isValid","DbmsType","ORACLE","POSTGRES","MYSQL","MSSQL","OTHER","DbmsFeature","WORKLOAD","TOP_SQL","OBJECTS","STORAGE","LICENSE_REPORTING","FEATURE_BY_TYPE_MAP","LOAD_SESSIONS_BY_PROCESS","LOAD_OBJECTS_BY_PROCESS","LOAD_STORAGE_BY_PROCESS","OBJECTS_SIDEBAR_DISABLED","SESSIONS_ENDPOINT_MAP","OBJECTS_ENDPOINT_MAP","DBMS_LIST_ORDER","OBJECTS_DATA_MAPPERS","OBJECT_NAME","CREATED","create_date","OBJECT_ID","object_id","LAST_DDL_TIME","modify_date","dbmsType","feature","includes","isFeatureAllowed","fullName","startsWith","startIdx","lastIndexOf","substr","LOAD_ALL_GROUPS","LOAD_GROUP","DELETE_GROUP","GRANT_PRIVILEGE","REVOKE_PRIVILEGE","ADD_USERS_TO_GROUP","REMOVE_USERS_FROM_GROUP","REMOVE_GROUPS_FROM_GROUP","PATCH_SELECTED_GROUP","CREATE_GROUP","MONTH_LIST","WEEKDAYS_LIST","CronValidator","minutes","isValidNumberValue","cleanValue","hours","days","month","isValidAlternativeValue","weekDay","time","maxVal","zeroAllowed","every","part","isValidNumberPart","rangeNumbersArr","el","isValidNumberRange","timeNumber","trim","dataArray","element","allowedValues","isValidAlternativePart","rangeValues","isValidAlternativeRange","indexOf","values","FORMAT_MSG","MINUTES","HOURS","DAYS","MONTH","DAY_OF_WEEK","EVERY_HOUR_WARNING","ALLOWED_MINUTES_OPTIONS","LOAD_ALL_USERS","SELECT_USER","LOAD_USER","ADD_USER_TO_GROUPS","REMOVE_USER_FROM_GROUPS","DEACTIVATE_USER","CREATE_USER","fetchEntities","promises","ENTITY_TYPES_FETCH","query","url","concat","encodeURIComponent","promise","entityType","fetchEntity","eType","definition","desc","console","warn","selectEntity","entity","clearSelectedEntity","setFilterType","setFilterSearch","openModal","actions","sessionActions","jobsActions","processActions","globalFiltersActions","pipe","fns","arg","reduce","prev","filterBy","selector","equalityFn","retrieveFilteredAccounts","state","accounts","nodes","stateValue","currentValue","Object","keys","currentServer","retrieveServerEntry","structure","entry","retrieveDatabaseEntry","getStatePath","getStructured","getSessions","sessions","getSessionsFlags","flags","getTopSqlStatements","topSqlStatements","getTopSqlStatementsFlags","getStoragePointsLoadingFlag","storage","loadingPoints","getStorageDetailsLoadingFlag","loadingDetails","getSelectedStorage","getStoredEntries","storedEntries","getSelectedObject","objects","selectedObject","getSelectedOwner","selectedOwner","getObjectsEntries","getObjectsLoadingFlag","getMssqlDiskIO","mssqlDiskIO","getMssqlStorageUsed","mssqlStorageUsed","getMssqlFileStorage","mssqlFileStorage","getFullPath","createSelector","pathArr","haveStorageData","selectedStorage","getFormattedStorage","isLoading","points","_","point","Used_MB","Total_MB","Tablespace","freePerc","freeGB","Free_MB","totalGB","usedGB","haveObjectsData","selectedObjects","getStorageDetailsData","list","selectedNS","tablespace","files","TABLESPACE_NAME","getMssqlStorageDetails","diskIO","storageUsed","fileStorage","getStructuredObjects","tree","acc","forEach","object","OWNER","owner","getInvalidObjects","invalidObjects","included","findIndex","STATUS","getSelectedObjectData","isObject","getObjectsDataByProcess","objectsSelectorResolver","getSortedSessions","sortFunction","order","sortKey","getTime","selectTopSqlStatements","statementsTxt","getBackup","backups","getDBStatus","statuses","getDBStatusInfo","info","dbMessage","STATUS_TYPES","down","up","notConnected","notFound","getDBMSStatus","allStatuses","getDBMSStatusInfo","dbmsStatus","getServerStatus","getServerStatusInfo","serverStatus","getEntityPendingStatus","en","LightTooltip","withStyles","tooltip","color","backgroundColor","letterSpacing","lineHeight","fontFamily","Tooltip","LimitlessTooltip","maxWidth","hasWritePrivileges","privileges","effective","hasOnlyReadPrivilege","isOnlySelectGroup","userDetails","toJS","member_of","isAdmin","hasCreatePrivilege","user","module","class_privileges","some","RSAKey","FQName","recieved","fqname","namespace","parts","initial","join","last","style","marginBottom","NamespaceSelect","QualifiedName","masName","AccountSelect","showUrls","setShowUrls","boxName","showToggle","useCallback","target","checked","inlineLoader","ADDITIONAL_ACCOUNT_FILTERS","filterFn","deepCopy","account","formatAccount","Boolean","size","PLATFORMS","tester","PROCESS_TYPES","PlatformSelect","platformValue","platform","processValue","reverse","test","ProcessTypeSelect","typeValue","ProcessSelect","p","OPTIONS","appearance","is_executable","customVal","namespaces","FormPrototypeSelect","prototype","ModeSelect","mode","modes","enumerations","variadicListReducer","produce","draft","deflt","pop","useVariadicList","useReducer","replvars","Variadic","displayDeftlDesc","selectedProcess","Header","Title","Content","dataType","Fragment","VariadicInstance","defltDesc","types","display","alignItems","justifyContent","onClick","name_base","parsedDeflt","replace","firstCharLetter","Multiline","open","setOpen","InputProps","startAdornment","title","cursor","mdiArrowExpand","width","height","variant","Footer","Right","Replvalues","valuesNr","replvaluesParams","i","replvalues","repl","Uuid","InvocationStatus","NEW","ALL","NOT_FETCHED","ABORTED","SCHEDULED","SUCCEEDED","FAILED","EXECUTING","DELAYED","KILLED","AllowOutputFor","AllowGeneralEditingFor","CannotShowStatusFor","FAILURES","SUCESSES","WARNINGS","LOAD_LICENSES","LOAD_DB_LICENSES","LOAD_LICENSE_TARGETS","LOAD_AVAILABLE_SERVERS","SubmitButton","confirmation","submitForm","isSubmitting","isValidating","dirty","modalActions","close","log","minWidth","maxHeight","icon","scrollable","BodyText","Left","fontStyle","fontWeight","marginTop","AvatarCard","avatar","onSelect","focusable","onFocus","event","stopPropagation","tabIndex","data-qa","alt","src","fallback","containEvent","placement","mdiInformationOutline","preventDefault","shape","string","func","mergeValidations","callbacks","provided","checkRequired","Yup","nullable","checkRequiredNotNullable","checkEmail","validateSync","checkPhoneNumber","matches","excludeEmptyString","checkUnsignedInt","checkName","checkFirstLetter","checkUuid","noop","unsigned_int","unsigned_float","signed_float","loadExecutiveDashboardThunk","EXECUTIVE_DASHBOARD","deselectAllThunk","selectAllThunk","rawEntries","executiveDashboard","toggleServerThunk","allServers","selectedServers","svIndex","nrCores","loadVirtualExecutiveDashboardThunk","VIRTUAL_EXECUTIVE_DASHBOARD","loadNetworkNodesThunk","serverId","loadNetworkEdgesThunk","loadServerDetailsThunk","loadOSTypeThunk","loadDBEditionThunk","loadDBVersionThunk","loadUsageThunk","loadUsageStat","serverPrefix","serverSuffix","usageStatResponse","obj","assign","totalRisk","total_risk","licenseCost","license_cost","supportCost","support_cost","unallocatedLicenses","unallocated_licenses","loadLicenseDeltaThunk","loadMssqlUsageThunk","MSSQL_EXECUTIVE_DASHBOARD","loadMssqlNetworkNodesThunk","loadMssqlNetworkEdgesThunk","loadMssqlServerDetailsThunk","loadMssqlEnvironmentUsageThunk","loadMssqlDbVersionsThunk","loadMssqlOsTypesThunk","DAY","formatTimePeriod","timeMillis","millisLeft","seconds","Math","floor","getCurrentUserName","session","getCurrentUserDetails","body","post","requestInvocation","pollerFinished","succeeded","this","resultJsonString","ROOT_NODE_ID","ROOT_NODE","widthConstraint","SERVER_NODE_COLOR","SERVER_NODE_SHAPE","DB_NODE_COLOR","DB_NODE_SHAPE","NODE_SIZE_MULTIPLIER","BASE_NETWORK_GRAPH_OPTIONS","layout","hierarchical","edges","LINUX_OS_PRIMARY_COLOR","LINUX_OS_SECONDARY_COLOR","WINDOWS_OS_PRIMARY_COLOR","WINDOWS_OS_SECONDARY_COLOR","SE_DB_PRIMARY_COLOR","SE_DB_SECONDARY_COLOR","EE_DB_PRIMARY_COLOR","EE_DB_SECONDARY_COLOR","DB_VERSION_COLOR_PALETTE","secondaryColor","localState","shared","jobsSelector","connectionsSelector","jobsSearchedSelector","processesSearchedSelector","globalFiltersSelector","loadAllUsersThunk","USERS","loadUserThunk","grantPrivilegeThunk","patch","revokePrivilegeThunk","addUserToGroupsThunk","groups","allUsers","errorMsg","removeUserFromGroupsThunk","deactivateUserThunk","createUserThunk","username","password","refreshed","loadAllGroupsThunk","GROUPS","loadGroupThunk","createGroupThunk","groupname","group","removeUsersFromGroupThunk","removeSubGroupsThunk","addUsersToGroupThunk","users","all","removeGroupThunk","delete","LICENSABLE_FEATURE_DEFAULT_COLOR","LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR","LICENSABLE_FEATURES_COLORS","getInitialValues","initialValues","parameter","getValidationSchema","validationSchema","is_required","formatParameters","extractParameter","others","editor","additional","field_name","TextParameter","passable","PasswordParameter","PhoneNumberParameter","BooleanParameter","IntegerParameter","EmailParameter","ProcessParameter","AccountParameter","VariadicParameter","ReplvaluesParameter","FQNameParameter","RSAKeyParameter","MultilineParameter","UuidParameter","getQuery","invocation_viewer","getInvocation","getInvocationStatus","Ensure","connect","entitySelectors","request","Ensurer","fresh","Loading","ParameterLoader","Loader","SearchableList","items","visibleScroll","scrolled","setScrolled","onWheel","currentTarget","scrollTop","scroller","setQuery","filtered","scrollBy","top","deltaY","left","deltaX","array","defaultProps","authorizationSelector","currentUserSelector","loginSelector","beVersionSelector","beLicenceSelector","beHealthSelector","ENTITY_TYPES","dataEnclosure","ROOT_ENTITY","getBreadcrumbs","entities","breadcrumbs","collectData","namespacesWithMeta","collection","aliases","alias","alias_type","aliasedEntity","dataItem","ownNamespace","selectors","def","fetch_status","namespaceWithMetaSelector","dataNamespaces","getFilteredEntities","accumulator","getEntitiesAsHashMap","filteredEntities","search","domainArray","paths","findEntity","notPersisted","getEntities","entitiesMap","roots","entityName","names","isSelected","columns","breadcrumb","level","rows","bucket","entityLevel","getSelectedEntity","namespaceChildrenListSelector","selectedEntity","mapUsersData","mapLoadedUser","mapSortInsensitive","localeCompare","copyTextToClipboard","textToCopy","makeCopyToClipboard","copyToClipboard","getOutputText","navigator","permissions","then","clipboard","writeText","legacyMethod","textArea","document","createElement","appendChild","classList","add","focus","select","execCommand","removeChild","NavigationTab","active","tabs","indicatorColor","textColor","tab","React","PureComponent","getGroupDescription","allGroups","groupDetails","isAllowedProtocol","isSessionsAllowed","isObjectsAllowed","isStorageAllowed","postAccount","patchAccount","deleteAccount","getConnection","patchConnection","postFile","file","UPLOAD_ACCOUNTS","ALLOWED_DBMS","ALLOWED_FOR_CHARTS","PROCESS_ENDPOINT_MAP","DBMS_PROPERTY_NAME_MAP","OptionsList","ChartTooltip","supportedDataTypes","dataTypes","prototypes","position","Number","MAX_SAFE_INTEGER","data_type","substring","is_supported","extractDefault","getLabel","getIcon","labels","icons","target_working_dir","target_shell","repo_shell","repo_working_dir","form","vsphere_account","vcenterservername","partitioning_methods","mdiFolderHome","mdiLanConnect","mdiSourceRepository","mdiHexagonMultipleOutline","mdiCubeOutline","TextField","placeholder","endAdornment","mdiHelpCircleOutline","filterDbmsByShell","formValues","shellAccount","dbmsAccount","ADDITIONAL_OPTIONS_FILTERS","DropdownField","datatypes","rawAccounts","forms","currentFormValues","datatype","additionalFilter","opt","meta2","readOnly","toggle","onSendByEmail","processName","sendToEmail","OutputModal","content","interval","modalDetails","setMessage","sendToEmailWarningOpen","setSendToEmailWarningOpen","setInterval","clearInterval","errors","minHeight","postSchedule","getSchedule","patchSchedule","mapAccountsTree","splitIntoRootsByProtocol","root","splitIntoRootsByAddress","splitIntoRootsByDatabase","serversMap","existingEntry","databaseMap","mapAccountsNewStructure","raw","protocolsArr","dbServer","dbmsServerEntry","otherIndex","splice","mapProtocols","is_abstract","special_required","mapUpdateDBStatus","existingDb","mapLicenseReport","currentItem","DETECTED_USAGES","USED","NAME","_mapUsedLicense","UNUSED","FEATURES","license","USAGES","VERSION","LAST_USE","LAST_USAGE_DATE","FIRST_USE","FIRST_USAGE_DATE","SystemExplorerViewMode","TILES","TABLE","saga","createSagaMiddleware","persistConfig","storageSession","whitelist","configStore","appReducer","persistReducer","combineReducers","core","sessionReducer","dashboard","dashboardReducer","sharedReducer","usersManager","usersManagerReducer","groupsReducer","createReducer","explorerReducer","executiveDashboardReducer","daemon","licenseAllocation","licenseAllocationReducer","effects","sessionEffects","sharedEffects","store","createStore","routing","window","location","reload","composeWithDevTools","applyMiddleware","thunk","effect","run","Context","createContext","Switch","Provider","Case","useContext","fetchProtocols","ProcessParameters","editable","allValues","xs","normalize","chunk","spacing","normalized","space_begone","space_summon","param","defaults","defineEditor","maybeDisabled","parseProtocols","metaEditor","proto","sortBy","Notifications","getEventTypeIcons","jobStart","jobCompletion","abnormalEvent","notice","fullLog","toggleApplyButton","setState","isEditing","checkIfAllUsersSelectedCurrentGroup","selectedGroup","getSelectedGroup","usersData","onSelectGroup","groupsData","onSelectUser","setFlagGroupsIfContainSelectedUser","onSelectUserAction","shouldClear","displayIcons","onSelectEventType","recievedData","events","areUsersSelected","isClearActionAvailable","isGroupSelected","eventTypeIcons","onApply","mappedState","getProcess","patchProcess","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","NAV_POSITION_TOP","ANCHOR_LEFT","WEEKDAYS","MODIFIER_KEY_NAMES","Set","RepeatableParameter","Parameter","is_repeatable","SimpleSearchInput","stretchContent","PropTypes","filterStatusSelector","filterStatusActions","checkDeamonStatus","checkDaemon","AddServerCard","trigger","AddNewServerContainer","AddNewServer","reloadAccounts","ModalContext","formRef","useRef","resp","mdiDns","formikRef","handleSubmission","isNew","AddDatabaseCard","AddNewDatabaseContainer","AddNewDatabase","fetchDataTypes","pr","mr","data_types","mdiDatabase","ImportCSV","ImportCSVContainer","ImportCSVFile","selectedFile","setSelectedFile","setResult","fileName","htmlFor","accept","downloadFile","DOWNLOAD_CSV_TEMPLATE","FormData","append","catch","deleteEntity","deleteInvocation","mapScheduledNames","allScheduled","nameArr","SecurityAreas","SCHEDULE","ActionCard","settings","addOnly","readOnlyOptions","lastBackup","statusInfo","addable","mdiContentSave","role","capitalizeFirstLetter","fillable","percentage","CardsLayout","want","Unresolved","keygen","settler","wantComponent","Picked","ChangePassword","useLinkTrigger","done","confirm","onSubmit","setSubmitting","innerRef","handleSubmit","ChangePasswordContainer","selectedUser","licensesInfoMock","license_id","product_name","product_id","metric","lic_total","lic_assigned","lic_avail","licenseTargetsMock","server_id","quantity","loadLicenseAllocationThunk","LICENSES_INFO","loadDbLicensesThunk","loadLicenseTargetsThunk","loadAvailableServersThunk","AVAILABLE_SERVERS","availableServersData","updateLicenseAssignmentThunk","isInitialAssignment","SUBMIT_LICENSE_ASSIGNMENT","put","UPDATE_LICENSE_ASSIGNMENT","getLicensesData","licenses","licensesLoading","getDbLicensesData","dbLicenses","dbLicensesLoading","getLicenseTargetsData","licenseTargets","licenseTargetsLoading","getAvailableServersData","availableServers","availableServersLoading","Modal","providedId","aria","onClose","disableBackdropClick","oneOfType","ModalHeader","getNamespace","patchNamespace","postNamespace","postForm","createForm","updateForm","pointers","instances","instance","fields","PackedContext","FormEditor","initialPacked","groupForm","cloneDeep","split_name","packed","contextValue","validateOnChange","form_name","protoName","extracted","extractFieldInfo","exclusions","filteredExtractions","val","packedCopy","set","unpacked","ungroupForm","v","rename","version","request_args","unshift","key_struct","entries","matched","exec","lower","mapAllServers","groupServers","entryInfo","srvname","model","sid","collDate","Ncore","totalDBs","eelic_count","selic_count","sids","installedOptions","aa_count","ac_count","as_count","dv_count","mt_count","adg_count","rac_count","olap_count","part_count","in_mem_db_count","rac_one_node_count","real_app_test_count","totalInstalledOptions","mapVirtualServers","vmname","vmguesthostname","vmguestos","vmipaddress","hosts_nr","cpu","cpucores","allSids","o1","o2","diff","CenterComponent","isRequired","isBeforeDay","isMoment","aYear","year","aMonth","bYear","bMonth","isSameYear","Overflow","component","nodeRef","scrollableX","setScrollableX","scrollableY","setScrollableY","scrolledX","setScrolledX","scrolledY","setScrolledY","Tag","onScroll","scrollLeft","current","box","clientWidth","clientHeight","scrollHeight","scrollWidth","closeable","providedAria","changedForm","context","fieldChanged","changed","Checkbox","rest","control","checkedIcon","task","duration","running","runTask","start","stop","ServerForm","editing","submission","setSubmission","passwordEditable","setPasswordEditable","showRSA","setShowRSA","handleAccountCreation","getCreateAccountHandler","allowedProtocols","availablePorts","default_port","host","port","server_password","user_key","confirm_server_password","rsa_key","loadNewAccountHandler","validateOnBlur","validateOnMount","formik","setFieldValue","PasswordOrRSA","allowed","onInput","request_body","server_user","DATATYPES","DatabaseForm","mapAccountValues","confirm_password","selectedProtocol","allowRSA","allow_rsa_key","withDatabase","withMode","padded","handler","blobData","blob","Blob","blobURL","URL","webkitURL","createObjectURL","tempLink","href","setAttribute","click","revokeObjectURL","ConnectedDeleteJobModal","globalFilters","getJobs","sharedActions","dispatchLoading","DeleteJobModal","terminator","startDate","unix","endDate","end","asDays","date_invoke","period","getQSP","mdiTrashCan","Schedule","setFilledValues","filledValues","selectedOption","setSelectedOption","canSelectProcess","setCanSelectProcess","onClickHandler","btnLabel","isScheduled","schedule","ConnectedNewNamespace","NewNamespace","isDisabled","classes","handleSubmitNew","SubmitButtonNoDirty","ConnectedFormModal","refresh","FormModal","mdiClipboardCheck","DatabaseSettings","editDbTrigger","deleteDbTrigger","deleteDbOpen","setDeleteDbOpen","deleteDbErrorOpen","setDeleteDbErrorOpen","deleteDbModalActions","deleteDbErrorModalActions","mdiSettings","mdiDelete","EditDatabaseContainer","EditDatabase","row","processQuery","updateInvocation","subject","getBeVersion","getBeLicence","getBeHeath","BeLicenceEffect","BeHealthEffect","BeVersionEffect","BE_VERSION","dispatchSuccess","dispatchFail","BE_LICENCE","BE_HEALTH","getBeHealth","takeEvery","getLoadingAction","TotalJobsCount","jobs","job","boxShadow","borderRadius","getAlias","patchAlias","postAlias","initialState","login","authorization","actionStates","LOADING","currentUser","beVersion","reducerActions","checkAuthorization","setIn","getSuccessAction","fromJS","SUCCESS","getFailAction","FAIL","Error","daemonPoller","withPolling","filterStatus","setFilterStatus","getEventAction","sessionGlobalFilters","subtract","startOf","localStorage","getItem","page_count","total_count","fetching","callFailed","reason","connections","searchResults","setGlobalFilters","nextState","setItem","stringify","logout","removeItem","getConnections","searchJobs","searchProcesses","notifications","addNotifications","removeNotification","notificationIndex","removeIn","notificationActions","WantParameter","number","boolean","variadic_parameter","filterShellByPlatform","shellFieldName","PLATFORM_VALUE_TO_TYPE","PostgreSQL","MySQL","platformTree","platformAddresses","hasOwnProperty","maxPosition","max","virtual","currentGroup","upper","nextGroup","iteration_limit","instanceCount","g","f","grouped","subvalues","dropRight","getPrivileges","isAlias","cls","setPrivileges","granted","role_type","privilege","enitity_name","VerticalUsageBar","fill","viewBox","x","y","rx","ry","SidebarStorageItem","StorageSidebar","selectedItem","mdiFileTableBox","iconMapper","triggers","mdiAlertOutline","tables","mdiTable","indexes","mdiTableColumnWidth","procedures","mdiAlphaPBox","packages","mdiInbox","packageBodies","mdiInboxFull","objectsSidebarMapper","invalidChildren","mdiFileTree","isObjectSelected","isInvalid","invalid","ObjectsSidebar","KPIDisplay","suffix","colorFormatting","digits","valueString","toLocaleString","minimumFractionDigits","maximumFractionDigits","NoDataComponent","mdiHelpRhombusOutline","StorageDetailsList","PCT_USED","FILE_NAME","SIZE_MB","MAXSIZE_MB","filePath","extension","chartType","loader","toFixed","is3D","colors","rootProps","StorageViewer","ObjectsViewer","sidebarDisabled","objectsDataMapper","getObjectsDataMapper","mdiArrangeBringToFront","mdiFlashCircle","formatMemorySizeGb","bytes","STATUS_LABEL_MAP","StatusLabel","navigationItems","to","qaClass","mdiClipboardPlayMultipleOutline","mdiShieldCheckOutline","invocationPoller","prepareDashboardTitle","dbType","ExecutiveDashboard","selectedServer","setSelectedServer","dashboardTitle","hasSelectedServer","deselectServer","mdPage","onServerChanged","ConnectedExecutiveDashboard","rawVirtualServers","virtualServers","ListOutput","reducer","bindReducer","ActionCreatorHandler","slugify","createUrl","paramsUrl","numberPretty","formatNumber","pow","decimals","smartNumber","charAt","toUpperCase","emailPattern","phoneNumberPattern","urlPattern","randomStringGenerator","possible","random","generateUniqueId","btoa","valueOf","emptyFunc","delay","timer","isInclusivelyAfterDay","STATES","stateKey","unchanged","reducers","reducerInitialState","getWorkloadData","dateRange","isSingleDay","currentDate","jobsWithFormattedInvokedDate","orderBy","groupJobsByDate","groupBy","total","intervalArray","totalDays","getHoursArray","getDaysArray","day","dateArray","CheckAuthorizationEffect","LoginEffect","LogoutEffect","tryAsync","onError","RestClientClass","authentications","basicAuth","accessToken","baseUrl","HOST","client","axios","create","TIMEOUT","baseURL","headers","Accept","head","Cookie","remove","getRequestConfig","LoginPage","history","submit","resetErrors","mapStateToProps","mapDispatchToProps","ContainerComponent","MasLogo","VenditaLogo","LoginGraphic","FormComponent","setShowPassword","prevState","showPassword","handleMouseDownPassword","submitHandler","restErrors","getRestErrors","noValidate","autoComplete","autoFocus","getError","valueChangeHandler","inputProps","InputLabelProps","aria-label","onMouseDown","edge","labelWidth","RestErrorsComponent","JobItemComponent","jobStatus","formatName","nameContainerWidth","getElementById","offsetWidth","starPath","formattedName","canvas","getContext","metrics","measureText","shift","extended","statusChild","local","WorkloadGraphComponent","setSingleDay","activeLabel","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickSize","axisLine","tick","stroke","strokeWidth","fillOpacity","CustomTooltipComponent","nextProps","Component","CustomAxisTickComponent","transform","dy","textAnchor","CircleImgComponent","image","NumberLabelComponent","StringLabelComponent","SearchInputComponent","DropdownComponent","handleToggle","isDropdownOpen","setCloseDropdown","anchorRef","contains","onClickCallback","itemIndex","createRef","parentWidth","isOpen","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClickAway","SmallInputComponent","SingleDatePickerComponent","focused","onDateChange","onFocusChange","numberOfMonths","customInputIcon","mdiCalendarBlank","isOutsideRange","hideKeyboardShortcutsPanel","displayFormat","navPrev","mdiChevronLeft","navNext","mdiChevronRight","RangeDatePicker","renderDayContents","anchorDirection","block","customArrowIcon","mdiArrowLeftRight","customCloseIcon","enableOutsideDays","endDateId","endDatePlaceholderText","horizontalMargin","initialEndDate","initialStartDate","initialVisibleMonth","isDayBlocked","isDayHighlighted","isRTL","keepOpenOnDateSelect","minimumNights","monthFormat","navPosition","onNextMonthClick","onPrevMonthClick","orientation","phrases","calendarLabel","chooseAvailableEndDate","chooseAvailableStartDate","clearDates","closeDatePicker","dateIsSelected","dateIsSelectedAsEndDate","dateIsSelectedAsStartDate","dateIsUnavailable","enterKey","escape","focusStartDate","homeEnd","jumpToNextMonth","jumpToPrevMonth","keyboardBackwardNavigationInstructions","keyboardForwardNavigationInstructions","keyboardShortcuts","leftArrowRightArrow","moveFocusByOneDay","moveFocusByOneMonth","moveFocusByOneWeek","moveFocustoStartAndEndOfWeek","openThisPanel","pageUpPageDown","questionMark","returnFocusToInput","roleDescription","selectFocusedDate","showKeyboardShortcutsPanel","upArrowDownArrow","regular","renderCalendarDay","renderMonthText","reopenPickerOnClearDates","screenReaderInputMessage","showClearDates","showDefaultInputIcon","small","startDateId","startDatePlaceholderText","stateDateWrapper","withFullScreenPortal","withPortal","onDatesChange","focusedInput","JobResults","renderJobsResults","mdiProgressClock","mdiCheckCircleOutline","mdiCalendarArrowRight","mdiStopCircleOutline","mdiTimelineClock","mdiAlertRhombusOutline","mdiCancel","jobName","fromSearch","any","Table","sortBehavior","changeSort","stickyHeader","HeaderCell","column","align","padding","sortDirection","direction","Row","TableRow","Cell","TableCell","LogoutPage","RootModule","filteredJobs","totalFilteredJobs","range","onChangeDatesHandler","entitiesStatus","averageJobs","round","storeFilterStatus","mdiChartTimelineVariant","inline","Paper","flex","PaperHeader","PaperContent","PaperFooter","LeftSideSlot","RightSideSlot","PaperTitle","Main","Section","full","SectionTitle","SectionHeader","SectionInfo","SectionContent","Info","ScrollableContainer","Column","StatusContainer","filterJobs","count","executing","scheduled","aborted","failed","Daemon","useSelector","isDaemonRunning","JobStatus","filterByStatus","storeStatus","setStatus","renderContent","dispatchEvent","Search","apiSearchWithDebounce","debounce","searchedTerm","showSearchResults","getSearchResults","QSP","name_filter","page","filterProcesses","processStatus","storedProcesses","results","handleOnChange","searchTerm","clearSearch","getSearchedJobs","setSearchFilter","setTypeFilter","category","totalResults","displayedResults","nameFilter","SearchResultsComponent","renderProcessesResults","mdiPlaySpeed","createURLLink","Input","nrRows","LinkBehavior","Button","link","ModalFooter","ErrorModal","ConfirmationModal","JobsEffect","JobsConnectionsEffect","SearchJobsEffect","SearchProcessesEffect","GlobalFiltersEffect","listen","newLocation","pathname","currentPathname","currentSearch","go","setAuthorization","prevProps","authorizationStatus","exact","Login","Logout","Layout","hot","RootLayout","Jobs","JobProcess","Entities","UsersAndGroups","Explorer","render","LicenseCollection","LicenseAllocation","Licensing","renderJobItem","loggedUser","toggleWorkloadDisplay","isWorkloadDisplayed","updateQSP","URLSearchParams","has","handleOnTabChange","selectedTab","performFilter","handleOnFilterChange","returnListBasedOnTab","shell_host_address_filter","platform_filter","database_name_filter","user_filter","platform_name_filter","platform_dbms_filter","pageFilters","onSearchInputChange","onKeyDown","loadAllUsers","canCreateSchedule","whiteSpace","paddingTop","selections","excludeStatus","currentTab","ALLOWED_FOR_DELETE","JobItem","canDelete","setUuid","mdiClockOutline","statusMap","PLATFORM","Filters","u","platforms","selectedPlatform","selectedDb","selectedStatus","mdiServer","mdiCircleSlice5","getJobsFiltersOptions","connection","getIn","JobsInvocations","useLocation","useDispatch","ENTITY_ICONS","constant","exception","CachedIcon","searchWithDebounce","searchInput","setSearchInput","renderColumn","colNum","entityIcons","clearCach","sessionStorage","ev","loadingData","UsersAndGroupsPage","UserManagementHeaderLinks","RightSideControls","UserManagementSwitch","useRouteMatch","routes","Link","UsersPage","loadAllGroups","match","userLink","UserSwitch","GroupsPage","groupLink","GroupsPagesSwitch","ops","ExplorerPage","handleClick","anchorElement","handleClose","viewMode","loadProtocols","loadAllAccounts","treeviewData","storeState","newMode","startIcon","aria-controls","aria-haspopup","keepMounted","activePage","switchToTileView","Treeview","DbObjects","loadingFlags","isObjectsSidebarDisabled","RUNNING","STATUS_SPAN","marginLeft","textShadow","STOPPED","SidebarContainer","postgresStatus","beHealth","masSystemsMonitor","masDaemonStatus","uptime1Minute","uptime5Minutes","uptime15Minutes","daysUntilExpire","beLicence","licensed_feature","expirationDate","licenseStatus","paddingRight","pkg","Favorites","mdiStarOutline","Navigation","navId","handlePopoverOpen","handlePopoverClose","setActiveTab","newActiveTab","activeTab","setCurrentNavItem","onMouseEnter","onMouseLeave","subItem","withRouter","Notification","UserMenu","menuAnchorRef","isVisible","openAdminPage","setToggleDropdown","autoFocusItem","Compile","setStep","step","Confirmation","Compiler","textAlign","compilation","setCompilation","postCompile","useQuery","LinkRouter","RouterLink","redirected","OtherMainLinks","PrepareFlow","designation","actionsTypes","CHECK_AUTHORIZATION","LOGIN","LOGOUT","ActionCreator","setBasicAuth","CURRENT_USER","source","INTL","CURRENT_TIME","DAEMON_STATUS","JOB_COUNT","PROTOTYPES","FORMS","FORM","DOWNLOAD_PACKAGING","DELETE_LICENSE_ASSIGNMENT","UPLOAD_SUPPORT_RENEWAL_FILE","UPLOAD_MAS_LICENSE_FILE","Buffer","statusText","loginPath","removeBasicAuth","exports","autoFocusEndDate","momentPropTypes","momentObj","DateRangePickerPhrases","omit","DateRangePickerShape","localeData","longDateFormat","DateRangePickerWrapper","GET_JOBS","GET_CONNECTIONS","SEARCH_JOBS","SEARCH_PROCESSES","UPDATE_GLOBAL_FILTERS","SET_FILTER_STATUS","ServersList","getAllAccounts","setAnchorElement","serversNumber","ConnectedServersList","serversUsage","deactivating","debug","groups_update","producers","updating_groups","creating","group_users","group_subgroups","reports","collectionProcesses","hardware","wasExecuted","preSoftware","software","vmware","packaging","base","loadingDiskIO","loadingStorageUsed","loadingFileStorage","network","nodesLoading","edgesLoading","serverDetailsLoading","techDetails","osTypeLoading","dbEditionLoading","dbVersionLoading","licensableFeatures","usageStat","licenseDelta","mssqlLicenseUsage","mssqlNetwork","mssqlEnvironmentUsage","mssqlDbVersions","mssqlOsTypes","networkNodes","networkEdges","networkServerDetails","osType","dbEdition","dbVersion","mssqlNetworkNodes","mssqlNetworkEdges","mssqlNetworkServerDetails","execdashboard","execdashboard_virtual","FETCH_ENTITIES_REQUEST","FETCH_ENTITIES_SUCCESS","FETCH_ENTITIES_FAILURE","FETCH_ENTITIES_ALL_REQUEST","FETCH_ENTITIES_ALL_SUCCESS","FETCH_ENTITIES_ALL_FAILURE","SELECT_ENTITY","CLEAR_SELECTED_ENTITY","UPDATE_FILTERS","DAEMON_STATUS_REQUEST","DAEMON_STATUS_SUCCESS","DAEMON_STATUS_FAILURE","processed","fetchedInvocation","PROCESS_QUERY","FETCH_INVOCATION_SUCCESS","FETCH_INVOCATION_FAILURE","REPLACE_INVOCATION","next","schema","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","JobList","NoJobs","ConnectedJobList","ScheduleModal","setTab","processDetails","setProcessDetails","scheduleDetails","setScheduleDetails","newSchedule","schedules","textDecoration","changeTab","ViewTabs","Documentation","ScheduleFormComp","derivedMonitor","enabled","monitor","serverTime","everyHourWarningShown","wasSCheduleCallDone","allScheduledNames","masTimeFormatted","currentTime","availableProcess","platformVal","typeVal","processVal","selectedType","platformMatches","typeMatches","nameValue","splittedName","t_min","t_hr","t_day","t_mon","t_wkd","sch_name","isValidMinutes","isValidHours","isValidDays","isValidMonth","isValidWeekDay","n_state","isEmpty","ConnectedScheduleForm","rejector","sch_description","params_with_maybe_replvars","extractReplVars","pickBy","rawValues","extractFQName","cleanUpReplVars","prefix","Groups","dense","disablePadding","button","primary","Users","currentActionLabel","shouldDisplayAction","emptyListMessage","renderUsersList","Events","UserChip","background","Chip","NotificationList","filteredUsers","buttonLabel","buttonIcon","endIcon","Entity","user_owner","aliasStr","getBoundingClientRect","parent","parentNode","scrollTo","behavior","SelectedEntity","ActionsNamespace","disableActions","hasWrite","deleteRights","parseName","tail","parsed","fq","ConnectedEditNamespace","nestedNames","EditNamespace","canUpdateName","setDescription","ConnectedDeleteNamespace","DeleteNamespace","ActionsConstant","ConnectedEditConstant","EditConstant","mdiImageFilterCenterFocus","patchConstant","ActionsProcess","ConnectedNewSchedule","NewSchedule","openErrorModal","setOpenErrorModal","errorModalActions","ScheduleForm","EditProcessModal","ProcessEditor","saveProcessEdits","steps","Step","step_index","expressions","parseEvaluatableExpressions","exp","StepExpression","expression","exp_index","evaluate","process_name","evaluations","toSend","findFormPrototype","findFormEntry","ActionsForm","canWrite","ConnectedCopyForm","CopyForm","formName","FormParameters","FieldsAndGroupsEditor","DataContext","FieldGroup","pointer","GroupInstance","canAdd","Field","newInstance","Value","packet","canRemove","idx","provided_field_name","ActionsRoot","ActionsPrototype","ActionsSchedule","ConnectedEditSchedule","EditSchedule","setMonitor","isEntityDeletable","ActionsCommon","displayDelete","ConnectedNewAlias","ConnectedEditAlias","NewAlias","original","EditAlias","splittedNamespace","handleEditSubmit","originalName","ConnectedDeleteEntity","clearSelected","DeleteEntity","PrivilegesModal","PrivilegesEditor","hasAlias","usePrivileges","editAliasParent","updating","setEditAliasParent","updatePrivilege","switchTab","PrivilegesList","is_group","updater","privilegeTypes","renderType","user_or_group","mdiAccount","setLoading","setUpdating","setData","HeaderPageSwitch","arrayOf","UserLoader","loadUser","userName","useParams","ConnectedUserLoader","UserView","deactivateUser","defaultResult","noGroups","deactivate","titleStyles","textTransform","ConnectedUserView","removing","Privileges","grant","revoke","Privilege","capitalize","PrivilegesContainer","mapPrivileges","actual","str","UserGroups","removeFromGroups","retrieveGroupDescription","setSelectedGroup","errorMessage","setErrorMessage","isOnlySelect","questionMessage","passed","group_name","mdiDeleteCircleOutline","UserGroupsContainer","visibleGroups","EditUserGroups","addToGroups","isFormChanged","setIsFormChanged","closeModal","aria-labelledby","aria-describedby","GroupsList","onAdd","EditUserGroupsContainer","showAll","err","EditUserDetails","UserDetailsForm","EditUserDetailsContainer","submitResult","isEqual","created","date_created","updated","date_updated","UserDatesBox","DateCreated","DateUpdated","mdiAccountPlus","parseDate","mdiAccountEdit","EditUserInfo","UserInfoForm","EditUserInfoContainer","formEndpoint","formproto","formdata","mapFormValues","submited","sendable_data","FieldSwitch","dict","EmailField","PhoneNumberField","notRequired","Field_Types","FieldComponent","getComponent","UserCard","endsWith","groupless","mdiAccountOff","NoUserSelectedPage","min","confirmpassword","CreateNewUser","submitUserValues","useHistory","operation","setOperation","exists","marginRight","CreateNewUserPage","NewUserGroups","existing","GroupsSelection","mdiAccountGroup","GroupCard","GroupView","removeGroup","deleteGroup","ConnectedGroupView","GroupLoader","loadGroup","groupName","ConnectedGroupLoader","GroupUsers","removeUsersFromGroup","setSelectedUser","GroupUsersContainer","EditGroupUsers","addUsersToGroup","mdiAccountMultiplePlus","UsersSelection","EditGroupUsersContainer","usersFetched","usersSubmitted","resolved","rejected","SubGroups","removeSubGroups","subgroup","SubGroupsContainer","EditSubGroups","updateGroup","GroupSelection","EditSubGroupsContainer","groupsFetched","subgroupsSubmitted","subgroupError","CreateNewGroup","submitGroupValues","CreateNewGroupPage","NoGroupSelectedPage","DBMS","toggleExpanded","isExpanded","setPath","changeState","autoExpanded","ConnectedDBMS","ServerList","Server","isActive","activePath","storedPath","splitAccountName","ConnectedServer","DatabaseList","Database","ConnectedDatabase","BreadcrumbsTitle","renderBreadcrumbs","links","separator","previous","route","navigateTo","selectedLink","setActiveLevel","ConnectedBreadcrumbsTitle","ContentSwitch","renderPage","AllDbms","retrieveDBMSStatus","retrieveDBMSStatusInfo","ConnectedAllDbms","allDbms","serverLabel","serverFullName","AllServers","renderOptions","retrievePendingStatus","refreshServerDBs","refreshServerDbsStatus","retrieveServerStatus","retrieveServerStatusInfo","hasDatabases","mdiPercent","ConnectedAllServers","ServerSettings","deleteServerOpen","setDeleteServerOpen","deleteServerErrorOpen","setDeleteServerErrorOpen","deleteServerModalActions","deleteServerErrorModalActions","EditServerContainer","EditServer","AllDatabases","refreshDBStatus","refreshDatabaseStatus","mdiCheckboxMultipleBlankOutline","mdiShape","mdiHexagonSlice2","mdiFormatAlignTop","mdiLicense","retrieveDbBackup","retrieveDbStatus","retrieveDbStatusInfo","ConnectedAllDatabases","Workload","newTab","getJobsData","pageLevel","levelFilters","protocol_filter","ConnectedWorkload","License","ConnectedLicense","Report","getLicenseReport","reportTwo","licenseFeatures","reportOne","ConnectedReport","FeaturesUsage","renderSingleReport","renderComparableReports","comparableFeatures","getFeatureValue","rep1","rep2","valueNode","needsExpansion","listRef","offsetHeight","flexDirection","paddingLeft","UnusedFeatures","CellWithTooltip","rowRenderer","hover","CURRENTLY_USED","mdiCheckboxMarkedCircle","mdiCloseCircle","TableRenderer","tableProps","FeaturesTable","sortLicenseFeatures","orderMultiplier","sortByName","sortByUsages","sortByStatus","sorted","Storage","getStoragePoints","getStorageDetails","storagePoints","storageDetails","setStorageItem","isMssql","ConnectedStorage","diskIOColumns","diskIOTableProps","diskIORowRenderer","Database_name","physical_name","dbid","io_stall","io_stall_queued_read_ms","io_stall_queued_write_ms","io_stall_read_ms","io_stall_write_ms","num_of_bytes_read","num_of_bytes_written","num_of_reads","num_of_writes","sample_ms","size_on_disk_bytes","type_desc","fileStorageColumns","fileStorageTableProps","fileStorageRowRenderer","data_space_id","file_id","growth","max_size","state_desc","PieChartColors","PieChartTooltip","MssqlStorage","prepareStorageGraphData","storageData","logsStorageSize","sum","getMssqlStorageData","dataLoading","usedStorageInfo","hasFileStorageInfo","hasDiskIOInfo","hasAnyData","storagePieData","database_size","unallocated_space","cx","cy","innerRadius","outerRadius","ConnectedMssqlStorage","Objects","getObjects","objectsData","objectDetails","setObjectsItem","ConnectedObjects","Sessions","getSessionsData","enableLoadingFlag","disableLoadingFlag","refreshSessions","ConnectedSessions","USERNAME","MACHINE","SID","LOGON_TIME","PROGRAM","TYPE","noDataMessage","CommonSessionsTable","sortSessions","sortedSessions","killSession","spid","ecid","loginame","hostname","blk","dbname","cmd","request_id","openKillSessionConfirmation","sessionId","MssqlSessionsTable","session_id","killSessionConfirmationOpen","sessionIdToKill","killSessionConfirmationActions","killSessionErrorModalActions","killSessionErrorOpen","TopSQLStatements","getTopSqlStatementsData","getEndpoint","prepareChartData","topStatementsData","ELAPSED_TIME","cpuTime","PCT_CPU","ioTime","PCT_IO","sqlId","SQL_ID","timeMillisFull","cpuPercent","ioPercent","elapsedTimeChartData","isChartSupported","ConnectedTopSQLStatements","renderCustomXAxisTick","renderLegend","renderChartTooltip","ElapsedTimeChart","barGap","strokeDasharray","verticalAlign","domain","tickFormatter","stackId","SESS_ID","CHILD_NUMBER","SQL_TEXT","mdiContentCopy","MODULE","EXECUTIONS","ELAPSED_PER_EXEC","sqlStatements","OracleTopSQLTable","sortSqlStatements","sortedStatements","queryid","userid","calls","avg_time_ms","PostgresTopSQLTable","SESSION_ID","USER","SQL_Text","TIME","STATE","MysqlTopSQLTable","QueryName","ExecutionCount","MaxElapsedTime","AvgElapsedTime","Logical_Reads","physical_reads","logical_writes","MssqlTopSQLTable","ToggleSystemExplorerView","mdiViewComfy","HostnameCellWithTooltip","isChecked","updateSelection","navigateToDetails","isWorkloadAllowed","isTopSqlAllowed","isLicenseReportingAllowed","testConnectionsTrigger","clickHandler","addServerTrigger","addDatabaseTrigger","importCsvTrigger","editDatabaseTrigger","deleteDatabaseTrigger","SystemExplorerTable","allDatabases","createCheckboxHeaderColumnConfig","protocolGroup","toggleDbsSelectionByProtocol","isAllDbsByProtocolSelected","selectedDbs","dbIndex","forceUpdate","shouldAddAll","allWithoutCurrent","clearDbsByProtocol","dbs","allByProtocol","selectedByProtocol","testConnections","isDbSelected","hasSingleSelection","getFirstDatabase","group1","group2","getListOrder","detailsPageParams","columnsConfig","ConnectedSystemExplorerTable","JobView","JobForm","loggedInAs","setEditable","deriveFormState","disabledFields","userValue","dateValue","timeValue","time_invoke","handleJobCreation","FormVerbs","sendable","job_user","dateMoment","timeMoment","dateTime","asMinutes","when","noOutput","JobOutput","setOutput","outputType","monitoring","outputFormat","preparedJSON","jsonString","enableClipboard","displayObjectSize","displayDataTypes","wantStatusColor","wantStatusIcon","warning","ToggleSelection","ServersNetworkTile","nodeId","selectedNode","networkData","graph","isServerNode","getServerDetails","mapNodes","arr","t","hasWarnings","nodeConfig","border","borderWidth","mapEdges","serverNodes","serverEdges","arrows","getNetworkNodes","getNetworkEdges","newProps","serverDetails","preparedNodes","hasData","server_manufacturer","processor_identifier","total_physical_cores","total_logical_cores","physical_sockets_populated","ConnectedServersNetworkTile","ScoreItem","clazz","LicensableFeaturesTile","mapLicenses","licenseConfig","config","abbreviation","getLicensableFeatures","getUsageStat","licensesData","currencyFormatter","Intl","NumberFormat","currency","isFinite","blendStroke","ConnectedLicensableFeaturesTile","OptionItem","hasIssues","mdiAlert","OperatingSystemsTile","mapOS","osData","os","isWindowsOS","mapDBEdition","dbEditionData","isSEEdition","database_edition","mapDBEditionByServer","mapDBVersion","dbVersionData","isSupported","database_version","qty","db_version_short","getOSType","getDBEdition","getDBVersion","graphData","preparedOSData","preparedDBEditionsData","preparedDBVersionsData","ConnectedOperatingSystemsTile","LicenseType","NUP","CPU","LicenseDeltaChartTooltip","assignedValue","usedValue","ownedValue","LicenseDeltaTile","mapData","licenseData","groupedData","lic_owned","lic_used","assigned","used","owned","selectedLicenseType","getLicenseDelta","chartData","allowDecimals","angle","ConnectedLicenseDeltaTile","MssqlLicenseUsageTile","license_type","getLicenseUsage","licenseUsageData","MssqlConnectedLicenseUsageTile","MssqlServersNetworkTile","chipset","cpu_speed","physical_cores","logical_cores","servername","server_entity_name","MssqlConnectedServersNetworkTile","EnvironmentUsageChartTooltip","coresValue","maxCoresValue","maxCores","devicesCalValue","usersCalValue","EnvironmentUsageTile","environmentUsage","env","devicesCal","estimate_calcount_fordevices","usersCal","estimate_calcount_forusers","max_core","getEnvironmentUsage","MssqlConnectedEnvironmentUsageTile","MssqlDbVersionAndOsTile","version_year","dbVersions","osTypes","MssqlConnectedDbVersionAndOsTile","chip","Hardware","poller","runPoller","pollInvocation","outputReponse","clearTimeout","renderModal","outputOpen","requestProcessData","isProcessLoading","executeCollectionProcess","loadingPrototypes","loadingDatatypes","loadingAccounts","loadingForms","normalizeParameter","chooseField","mdiMemory","ConnectedHardware","Software","wasHardwareExecuted","wasPreSoftwareExecuted","mdiApplication","ConnectedSoftware","VMware","mdiCubeScan","ConnectedVMware","Packaging","lms_repo","isSucceeded","successModalOpen","failedModalOpen","isDownloadDisabled","renderPackagingSuccessModal","renderPackagingFailedModal","sendEmail","isEmailDisabled","wasVsphereExecuted","mdiArchiveArrowDownOutline","ConnectedPackaging","SuccessModal","formatQuery","PROCESS_NAME","PARAMS_TO_NORMALIZE","PreSoftware","normalizedParam","ConnectedPreSoftware","openLicenseAssignments","host_name","license_metric","license_term","licenses_assigned","licenses_available","mdiPencil","AllocatedLicensesTable","assignLicenseModalOpened","selectedAssignment","getLicenses","assignLicenseModalActions","assignmentToEdit","ConnectedAllocatedLicensesTable","AssignLicenseModal","ConnectedAssignLicense","AssignLicense","getAvailableServers","updateLicenseAssignment","refreshLicenses","term","licenseOptions","availableServersOptions","serverInfo","ip_address","selectedLicense","available","abs","selectedSupportRenewalFile","setSelectedSupportRenewalFile","supportRenewalFileResult","setSupportRenewalFileResult","uploadSupportRenewalFileDisabled","setUploadSupportRenewalFileDisabled","supportRenewalFileName","selectedMasLicenseFile","setSelectedMasLicenseFile","masLicenseFileResult","setMasLicenseFileResult","selectedMasLicenseFileDisabled","setSelectedMasLicenseFileDisabled","masLicenseFileName","i18nMessages","general","header","persistor","persistStore","provider","locale","basename","App","webpackContext","req","webpackContextResolve","__webpack_require__","code","partial"],"mappings":"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","file":"js/app.d4effab763ea2b36ed66.js","sourcesContent":["import defaultConstants from './constants';\n\nexport const CONSTANTS = defaultConstants;\n","export const PROVIDE_EXECUTIVE_DASHBOARD = 'PROVIDE_EXECUTIVE_DASHBOARD';\nexport const PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD = 'PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD';\n\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const TOGGLE_SERVER = 'TOGGLE_SERVER';\n\nexport const LOAD_NETWORK_NODES = 'LOAD_NETWORK_NODES';\nexport const LOAD_NETWORK_EDGES = 'LOAD_NETWORK_EDGES';\nexport const LOAD_SERVER_DETAILS = 'LOAD_SERVER_DETAILS';\n\nexport const LOAD_OS_TYPE = 'LOAD_OS_TYPE';\nexport const LOAD_DB_EDITION = 'LOAD_DB_EDITION';\nexport const LOAD_DB_VERSION = 'LOAD_DB_VERSION';\n\nexport const LOAD_USAGE = 'LOAD_USAGE';\nexport const LOAD_USAGE_STAT = 'LOAD_USAGE_STAT';\n\nexport const LOAD_LICENSE_DELTA = 'LOAD_LICENSE_DELTA';\n\nexport const LOAD_MSSQL_USAGE = 'LOAD_MSSQL_USAGE';\nexport const LOAD_MSSQL_NETWORK_NODES = 'LOAD_MSSQL_NETWORK_NODES';\nexport const LOAD_MSSQL_NETWORK_EDGES = 'LOAD_MSSQL_NETWORK_EDGES';\nexport const LOAD_MSSQL_SERVER_DETAILS = 'LOAD_MSSQL_SERVER_DETAILS';\nexport const LOAD_MSSQL_ENVIRONMENT_USAGE = 'LOAD_MSSQL_ENVIRONMENT_USAGE';\nexport const LOAD_MSSQL_DB_VERSIONS = 'LOAD_MSSQL_DB_VERSIONS';\nexport const LOAD_MSSQL_OS_TYPES = 'LOAD_MSSQL_OS_TYPES';\n","import React, { forwardRef, useMemo, useEffect, useState } from 'react';\n\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\n\nimport { useField, useFormikContext } from 'formik';\n\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport check from './field-level-validations';\n\nexport const Text = forwardRef(function Text(\n  { options, validate, defaultValue = '', value, required, reactToChange, ...props },\n  ref\n) {\n  const [shouldValidate, setShouldValidate] = useState(false);\n  const validation = useMemo(() => {\n    if (!shouldValidate) {\n      return null;\n    }\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required, shouldValidate]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  const formikCtx = useFormikContext();\n\n  useEffect(() => {\n    // used to allow the \"\" (empty string) value\n    if (value === undefined || value === null) {\n      helpers.setValue(defaultValue);\n    } else {\n      helpers.setValue(value);\n    }\n    helpers.setTouched(false);\n    setShouldValidate(true);\n  }, [value]);\n\n  useEffect(() => {\n    /**\n     * accepts a reaction function, ideally called when setValue is called.\n     * It should be used to update other known field names in reaction to this one changing.\n     */\n    reactToChange && reactToChange(value, formikCtx);\n  }, [value]);\n\n  useEffect(() => {\n    /** Unmount cleanup ? */\n    return () => {\n      if (!props.multiline || !props.isPopup) {\n        helpers.setValue(undefined);\n        // helpers.setTouched(false);\n        helpers.setError(undefined);\n      }\n    };\n  }, []);\n\n  if (field.value === undefined) {\n    return <ParameterLoader>Mounting Field</ParameterLoader>;\n  }\n\n  if (options && options.length) {\n    const selected = options.find(o => o.value === field.value) ?? null;\n    const description = options.find(o => o.value === field.value)?.description || undefined;\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        value={selected}\n        getOptionLabel={option => option.label || field.value}\n        getOptionDisabled={option => option.disabled}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n\n          /**\n            only on Select option changes for now. Can be modified for generic text,\n            but should be done when needed.\n            onChange from '...field' can be decorated.\n           */\n          reactToChange && reactToChange(option.value, formikCtx);\n        }}\n        disabled={props.disabled}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              description={description}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n\nexport function Email(props) {\n  const validations = useMemo(() => check.merge(check.email, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"email\" />;\n}\n\nexport function PhoneNumber(props) {\n  const validations = useMemo(() => check.merge(check.phone, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} />;\n}\n/* TODO: fix Integer required validation checks. Investigate how Yup returns the validateSync for this particular instance */\nexport function Integer({ validate, ...props }) {\n  const validations = useMemo(() => check.merge(props.required ?? check.required_not_null), [\n    props.required,\n    validate\n  ]); // validate is given by the parameter normalizer.\n  // it should be a list of check keys. TODO: map to validation functions to merge\n\n  return <Text {...props} validate={validations} type=\"number\" />;\n}\n\nexport function Password(props) {\n  return <Text {...props} type=\"password\" />;\n}\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: true },\n  { label: 'False', value: false }\n];\n\nexport const BooleanSelect = forwardRef(function Boolean({ options, ...props }, ref) {\n  return <Text type=\"text\" value defaultValue {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nexport const Date = forwardRef(function Date(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value ? moment(field.value).format('MM/DD/YYYY') : moment().utc();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date?.format('MM/DD/YYYY') || ' ')}\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Time = forwardRef(function Time(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value\n    ? moment(field.value, 'HH:mm')\n    : moment()\n        .utc()\n        .format('HH:mm');\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardTimePicker\n          ampm={false}\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"HH:mm\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => {\n            helpers.setValue(date?.format('HH:mm') || ' ');\n          }}\n          mask=\"__:__\"\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Select = forwardRef(function Select(\n  { options, validate, defaultValue, value, required, isNamespace, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue || '');\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  /**\n   * This should be moved to it's own thing.\n   * For now, it satisfies... :(((\n   */\n  if (options && options.length) {\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        getOptionSelected={option => option.value === field.value}\n        getOptionLabel={option => option.label || value || ''}\n        value={value}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              desription={undefined}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n","export const LOAD_ALL_ACCOUNTS = 'LOAD_ALL_ACCOUNTS';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const LOAD_ALL_LICENSES = 'LOAD_ALL_LICENSES';\nexport const LOAD_TOP_SQL_STATEMENTS = 'LOAD_TOP_SQL_STATEMENTS';\nexport const LICENSE_FULL_REPORT = 'LICENSE_FULL_REPORT';\nexport const PROVIDE_SERVERS_USAGE = 'PROVIDE_SERVERS_USAGE';\nexport const LOAD_STORAGE_POINTS = 'LOAD_STORAGE_POINTS';\nexport const SET_STORAGE_NS = 'SET_STORAGE_NS';\nexport const LOAD_STORAGE_DETAILS = 'LOAD_STORAGE_DETAILS';\nexport const LOAD_OBJECT_DETAILS = 'LOAD_OBJECT_DETAILS';\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT';\nexport const LOAD_SESSIONS = 'LOAD_SESSIONS';\nexport const PROVIDE_DB_LAST_BACKUP = 'PROVIDE_DB_LAST_BACKUP';\nexport const PROVIDE_DB_STATUS = 'PROVIDE_DB_STATUS';\nexport const UPDATE_DB_STATUS = 'UPDATE_DB_STATUS';\nexport const LOAD_PROTOCOLS = 'LOAD_PROTOCOLS';\nexport const LOAD_COLLECTION_PROCESS = 'LOAD_COLLECTION_PROCESS';\nexport const EXECUTE_COLLECTION_PROCESS = 'EXECUTE_COLLECTION_PROCESS';\nexport const LOAD_MSSQL_DISK_IO = 'LOAD_MSSQL_DISK_IO';\nexport const LOAD_MSSQL_STORAGE_USED = 'LOAD_MSSQL_STORAGE_USED';\nexport const LOAD_MSSQL_FILE_STORAGE = 'LOAD_MSSQL_FILE_STORAGE';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { mdiCheckDecagram, mdiAlertDecagram } from '@mdi/js';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { node, oneOf, bool } from 'prop-types';\n\nimport './Result.local.scss';\n\nconst icons_map = {\n  success: mdiCheckDecagram,\n  fail: mdiAlertDecagram\n};\n\nexport const Result = ({ children, type }) => {\n  return (\n    <div\n      className={classnames('result-display', {\n        [type]: type\n      })}\n    >\n      <div className=\"result-icon\">\n        <SvgIcon fontSize=\"inherit\">\n          <path d={icons_map[type] || mdiAlertDecagram} />\n        </SvgIcon>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  type: oneOf(['success', 'fail']),\n  children: node\n};\n\nexport const ResultText = ({ children, compact }) => (\n  <h2 className={classnames('result-text', { compact })}>{children}</h2>\n);\n\nResultText.propTypes = {\n  compact: bool,\n  children: node\n};\n\nexport const ResultMessages = ({ messages = [] }) => (\n  <div className=\"result-messages\">\n    {messages.map((msg, index) => (\n      <div className=\"message-entry\" key={index}>\n        <p>{msg?.text?.split?.('\\n')?.[0]}</p>\n      </div>\n    ))}\n  </div>\n);\n\nResultText.propTypes = {\n  children: node\n};\n\nResult.Text = ResultText;\nResult.Messages = ResultMessages;\n","import moment from 'moment';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  fetchInvocation,\n  fetchInvocationOutput,\n  invocationOutputPoller,\n  parseInvocationResult,\n  postInvocation\n} from '../../../shared/api/invocation';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport function loadAllAccountsThunk(payload) {\n  return async (dispatch, getState) => {\n    dispatch(creators.loading(LOAD_ALL_ACCOUNTS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n        page_size: 2147483645\n      });\n\n      response.data.protocols = getState().explorer.protocols;\n\n      dispatch(creators.success(LOAD_ALL_ACCOUNTS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_ACCOUNTS, error));\n      return;\n    }\n\n    if (payload?.from === 'dashboard') {\n      dispatch(provideServersUsageThunk());\n    } else {\n      dispatch(provideDBLastBackupThunks());\n      dispatch(provideDBStatusThunks());\n    }\n  };\n}\n\nexport function loadProtocolsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_PROTOCOLS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n      dispatch(creators.success(LOAD_PROTOCOLS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_PROTOCOLS, error));\n    }\n  };\n}\n\nexport function changeStateThunk(newState) {\n  return dispatch => {\n    dispatch(creators.action(CHANGE_STATE, newState));\n\n    return 'done';\n  };\n}\n\nexport function loadAllLicensesThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_LICENSES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n      dispatch(creators.success(LOAD_ALL_LICENSES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_LICENSES, error));\n    }\n  };\n}\n\nexport function loadTopSQLStatementsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, null));\n    dispatch(creators.loading(LOAD_TOP_SQL_STATEMENTS));\n\n    try {\n      const creationResult = await postInvocation(payload);\n\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const result = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, result));\n      } else {\n        dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, error));\n    }\n  };\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n\nexport function getLicenseReportThunk(fullPath) {\n  return async dispatch => {\n    dispatch(creators.loading(LICENSE_FULL_REPORT));\n    try {\n      const response = await RestClient.get('license_data', { dbconn: fullPath });\n      if (!Array.isArray(response.data)) {\n        response.data = [];\n      }\n      dispatch(creators.success(LICENSE_FULL_REPORT, { reportData: response.data }));\n    } catch (error) {\n      dispatch(creators.fail(LICENSE_FULL_REPORT, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.SESSIONS(filters.fullPath), {\n        page_size: filters.page_size\n      });\n      dispatch(creators.success(LOAD_SESSIONS, { data: response.data, sort: filters.sort }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    const { fullPath, protocol } = filters;\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: SystemExplorerFeatureUtil.getSessionsEndpoint(protocol),\n      timestamp: null\n    };\n\n    try {\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const resultTxt = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        const statementsJson = (resultTxt || '').split('\\n')[1];\n        const sessionsData = statementsJson ? JSON.parse(statementsJson) : [];\n        dispatch(creators.success(LOAD_SESSIONS, { data: sessionsData, sort: filters.sort }));\n      } else {\n        dispatch(creators.fail(LOAD_SESSIONS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n  };\n}\n\nexport function sessionsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadSessionsByProcess(protocol)) {\n    return loadSessionsByProcessThunk(filters);\n  }\n  return loadSessionsThunk(filters);\n}\n\nexport function enableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n  };\n}\n\nexport function disableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.fail(LOAD_SESSIONS));\n  };\n}\n\nexport function loadStorageDetailsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_DETAILS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_DF(filters.fullPath));\n      const data =\n        response.data && response.data.length\n          ? { data: response.data, key: filters.fullPath }\n          : { data: [], key: filters.fullPath };\n      dispatch(creators.success(LOAD_STORAGE_DETAILS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_DETAILS, error));\n    }\n  };\n}\n\nexport function setStorageItemThunk(ns) {\n  return creators.success(SET_STORAGE_NS, ns);\n}\n\nexport function loadStoragePointsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_POINTS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_TS, {\n        dbconn: filters.fullPath\n      });\n      const data = { data: response.data, key: filters.fullPath } || {\n        data: {},\n        key: filters.fullPath\n      };\n      dispatch(creators.success(LOAD_STORAGE_POINTS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_POINTS, error));\n    }\n  };\n}\n\nexport function loadMssqlStorageDataThunk(filters) {\n  return async dispatch => {\n    const { fullPath, process, storageKey } = filters;\n    dispatch(creators.loading(storageKey));\n\n    try {\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process,\n        timestamp: null\n      };\n\n      let resultJson = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        resultJson = parseInvocationResult(output);\n      }\n      dispatch(creators.success(storageKey, { data: resultJson, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(storageKey, error));\n    }\n  };\n}\n\nexport function loadObjectsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n    const objectApis = [\n      { name: 'triggers', path: '/object_trigger' },\n      { name: 'tables', path: '/object_table' },\n      { name: 'indexes', path: '/object_index' },\n      { name: 'procedures', path: '/object_procedure' },\n      { name: 'packages', path: '/object_package' },\n      { name: 'packageBodies', path: '/object_package_body' }\n    ];\n    try {\n      let allData = await Promise.allSettled(\n        objectApis.map(api =>\n          RestClient.get(`/system/explorer${api.path}`, {\n            dbms: filters.fullPath,\n            page_size: 2147483645\n          })\n        )\n      );\n      allData = objectApis.map((api, index) => {\n        return {\n          res: allData[index]?.value?.data,\n          name: api.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function loadObjectsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n\n    try {\n      const { fullPath, protocol } = filters;\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process: SystemExplorerFeatureUtil.getObjectsEndpoint(protocol),\n        timestamp: null\n      };\n\n      let objectsJSON = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        objectsJSON = parseInvocationResult(output);\n      }\n\n      const allData = objectsJSON.map((item) => {\n        return {\n          res: item,\n          name: item.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function objectsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return loadObjectsByProcessThunk(filters);\n  }\n  return loadObjectsThunk(filters);\n}\n\nexport function setSelectedObjectThunk(selected) {\n  return creators.success(SET_SELECTED_OBJECT, selected);\n}\n\nexport function provideServersUsageThunk() {\n  return async function serversUsage(dispatch, getState) {\n    let servers = [];\n\n    if (getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE')) {\n      servers = getState()\n        .explorer.structured.dbms.find(d => d.protocol === 'ORACLE')\n        .servers.slice();\n    }\n\n    const usageResult = { servers: [] };\n\n    const allResults = await Promise.allSettled(\n      servers.map(server => {\n        return loadUsagePerDb(server);\n      })\n    );\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        usageResult.servers.push({\n          dbms: result.value.dbms,\n          address: result.value.server,\n          usage: result.value.usage || 0\n        });\n\n        return null;\n      });\n\n    usageResult.highLoadCount = usageResult.servers.filter(server => server.usage >= 75).length;\n    usageResult.servers.sort((a, b) => parseFloat(b.usage) - parseFloat(a.usage));\n\n    dispatch(creators.success(PROVIDE_SERVERS_USAGE, usageResult));\n\n    return usageResult;\n  };\n}\n\nexport function provideDBLastBackupThunks() {\n  return async function getDBLastBackup(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases.filter(db => db.special.database === 'mysql')];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [\n        ...databases,\n        ...Pgsql.databases.filter(db => db.special.database === 'postgres')\n      ];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases.filter(db => db.special.database === 'master')];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbLastBackup = [];\n\n    const allResults = await Promise.allSettled(databases.map((db) => loadDBLastBackup(db, servers)));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbLastBackup.push({\n          name: result.value.name,\n          backup: result.value.backup\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_LAST_BACKUP, dbLastBackup));\n\n    return dbLastBackup;\n  };\n}\n\nexport function provideDBStatusThunks() {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [...databases, ...Pgsql.databases];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(\n      databases.map((db) => loadDBStatus(db, servers))\n    );\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          message: result.value.message,\n          dbName: result.value.dbName\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshServerDbsStatusThunk(server) {\n  return async function refreshDbStatus(dispatch, getState) {\n    const { databases } = server;\n\n    async function retrieveDBStatus(database) {\n      dispatch(\n        creators.loading(UPDATE_DB_STATUS, [\n          {\n            name: database.name,\n            server: database.address,\n            dbms: database.protocol,\n            dbName: database?.special?.database,\n            status:\n              getState().explorer.dbStatus.find(db => db.name === database.name)?.status ||\n              'not-connected'\n          }\n        ])\n      );\n\n      const dbms = database.name;\n      const shell = server.name;\n      try {\n        const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, { dbms, shell });\n\n        let status = response.data.status?.toString().toLowerCase() || 'error';\n        // there is a case where API simply returns only 64, for not it will be treated as down\n        if (parseInt(response.data, 10) === 64) {\n          status = 'down';\n        }\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          message: response?.data?.message,\n          status\n        };\n      } catch (error) {\n        dispatch(\n          creators.fail(UPDATE_DB_STATUS, [\n            {\n              name: database.name,\n              server: database.address,\n              dbms: database.protocol,\n              dbName: database?.special?.database,\n              status: 'error',\n              error\n            }\n          ])\n        );\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          status: 'error',\n          error\n        };\n      }\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(retrieveDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          dbName: result.value.dbName,\n          message: result.value.message\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshDBStatusThunk(db) {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n\n    const selectedDBMS = structured.dbms.find(r => r.protocol === db.protocol);\n\n    const dbms = db.name;\n    const shell = selectedDBMS\n      ? selectedDBMS.servers.find(sv => sv.address === db.address)?.name\n      : undefined;\n\n    dispatch(\n      creators.loading(UPDATE_DB_STATUS, [\n        {\n          name: db.name,\n          server: db.address,\n          dbms: db.protocol,\n          status: getState().explorer.dbStatus.find(d => d.name === db.name)?.status\n        }\n      ])\n    );\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n        dbms,\n        shell\n      });\n\n      let status = response.data.status?.toString().toLowerCase() || 'error';\n      // there is a case where API simply returns only 64, for not it will be treated as down\n      if (parseInt(response.data, 10) === 64) {\n        status = 'down';\n      }\n\n      const dbStatus = [\n        {\n          name: dbms,\n          server: db.address,\n          dbms: db.protocol,\n          status\n        }\n      ];\n      dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n      return dbStatus;\n    } catch (error) {\n      dispatch(\n        creators.fail(UPDATE_DB_STATUS, [\n          {\n            name: db.name,\n            server: db.address,\n            dbms: db.protocol,\n            status: 'error',\n            error\n          }\n        ])\n      );\n    }\n  };\n}\n\nexport function loadProcessDetailsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_COLLECTION_PROCESS, { name: payload.name }));\n\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${payload.process}`\n      );\n\n      const details = {\n        name: payload.name,\n        data: response?.data?.data?.processes[0] || {}\n      };\n\n      dispatch(creators.success(LOAD_COLLECTION_PROCESS, details));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_COLLECTION_PROCESS, { name: payload.name, error }));\n    }\n  };\n}\n\nexport function executeCollectionProcessThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.action(EXECUTE_COLLECTION_PROCESS, { name: payload.name }));\n\n    return 'done';\n  };\n}\n\nasync function loadUsagePerDb(server) {\n  const database = server.databases[0];\n  const response = await RestClient.get(`/system/explorer/${database.name}/cpu_load_server`);\n\n  const usage = parseFloat(response.data.HOST_CPU);\n\n  return {\n    dbms: database.protocol,\n    server: database.address,\n    usage\n  };\n}\n\nasync function loadDBLastBackup(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_LAST_BACKUP, {\n    dbms,\n    shell\n  });\n\n  return {\n    name: database.name,\n    backup: moment(response.data.backup).isValid()\n      ? moment(response.data.backup).format('MMM DD YYYY')\n      : null\n  };\n}\n\nasync function loadDBStatus(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n      dbms,\n      shell\n    });\n\n    let status = response.data.status?.toString().toLowerCase() || 'error';\n    // there is a case where API simply returns only 64, for not it will be treated as down\n    if (parseInt(response.data, 10) === 64) {\n      status = 'down';\n    }\n\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: response?.data?.message,\n      dbName: database?.special?.database,\n      status\n    };\n  } catch (error) {\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: database?.data?.message,\n      dbName: database?.special?.database,\n      status: 'error'\n    };\n  }\n}\n","export const DbmsType = {\n  ORACLE: 'ORACLE',\n  POSTGRES: 'PGSQL',\n  MYSQL: 'MYSQL',\n  MSSQL: 'MSSQL',\n  OTHER: 'OTHER',\n};\n\nexport const DbmsFeature = {\n  WORKLOAD: 'WORKLOAD',\n  SESSIONS: 'SESSIONS',\n  TOP_SQL: 'TOP_SQL',\n  OBJECTS: 'OBJECTS',\n  STORAGE: 'STORAGE',\n  LICENSE_REPORTING: 'LICENSE_REPORTING',\n};\n\nconst FEATURE_BY_TYPE_MAP = {\n  [DbmsType.ORACLE]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL, DbmsFeature.LICENSE_REPORTING],\n  [DbmsType.MYSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.POSTGRES]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.MSSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL],\n  [DbmsType.OTHER]: [DbmsFeature.WORKLOAD],\n};\n\nconst LOAD_SESSIONS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_OBJECTS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_STORAGE_BY_PROCESS = [DbmsType.MSSQL];\nconst OBJECTS_SIDEBAR_DISABLED = [DbmsType.MSSQL];\n\nconst SESSIONS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.sessions.sp_who'\n};\n\nconst OBJECTS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.database.all_objects'\n};\n\nconst ACCOUNT_ENTITY_PREFIX = 'mas0000.';\nconst ACCOUNT_ENTITY_NAME_TOKEN = '.account.';\n\nconst DBMS_LIST_ORDER = {\n  [DbmsType.ORACLE]: 50,\n  [DbmsType.MSSQL]: 40,\n  [DbmsType.MYSQL]: 30,\n  [DbmsType.POSTGRES]: 20,\n  [DbmsType.OTHER]: 10,\n};\n\nconst OBJECTS_DATA_MAPPERS = {\n  [DbmsType.MSSQL]: (item) => {\n    return {\n      OBJECT_NAME: item.name,\n      CREATED: item.create_date,\n      OBJECT_ID: item.object_id,\n      LAST_DDL_TIME: item.modify_date,\n    };\n  },\n};\n\nexport class SystemExplorerFeatureUtil {\n  static isFeatureAllowed(dbmsType, feature) {\n    if (!dbmsType || !feature || !FEATURE_BY_TYPE_MAP[dbmsType]) {\n      return false;\n    }\n    return FEATURE_BY_TYPE_MAP[dbmsType].includes(feature);\n  }\n\n  static isWorkloadAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.WORKLOAD);\n  }\n\n  static isSessionsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.SESSIONS);\n  }\n\n  static isTopSqlAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.TOP_SQL);\n  }\n\n  static isObjectsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.OBJECTS);\n  }\n\n  static isObjectsSidebarDisabled(dbmsType) {\n    return OBJECTS_SIDEBAR_DISABLED.includes(dbmsType);\n  }\n\n  static isStorageAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.STORAGE);\n  }\n\n  static isLicenseReportingAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.LICENSE_REPORTING);\n  }\n\n  static splitAccountName(fullName) {\n    fullName = fullName || '';\n    if (!fullName.startsWith(ACCOUNT_ENTITY_PREFIX)) {\n      return '';\n    }\n    const startIdx = fullName.lastIndexOf(ACCOUNT_ENTITY_NAME_TOKEN);\n    if (startIdx === -1) {\n      return '';\n    }\n    return fullName.substr(startIdx + ACCOUNT_ENTITY_NAME_TOKEN.length);\n  }\n\n  static shouldLoadSessionsByProcess(dbmsType) {\n    return LOAD_SESSIONS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadObjectsByProcess(dbmsType) {\n    return LOAD_OBJECTS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadStorageByProcess(dbmsType) {\n    return LOAD_STORAGE_BY_PROCESS.includes(dbmsType);\n  }\n\n  static getSessionsEndpoint(dbmsType) {\n    return SESSIONS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsEndpoint(dbmsType) {\n    return OBJECTS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsDataMapper(dbmsType) {\n    return OBJECTS_DATA_MAPPERS[dbmsType];\n  }\n\n  static getListOrder(dbmsType) {\n    return DBMS_LIST_ORDER[dbmsType] || 0;\n  }\n}\n","export const LOAD_ALL_GROUPS = 'LOAD_ALL_GROUPS';\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GRANT_PRIVILEGE = 'GRANT_GROUP_PRIVILEGE';\nexport const REVOKE_PRIVILEGE = 'REVOKE_GROUP_PRIVILEGE';\nexport const ADD_USERS_TO_GROUP = 'ADD_USERS_TO_GROUP';\nexport const REMOVE_USERS_FROM_GROUP = 'REMOVE_USERS_FROM_GROUP';\nexport const ADD_GROUPS_TO_GROUP = 'ADD_GROUPS_TO_GROUP';\nexport const REMOVE_GROUPS_FROM_GROUP = 'REMOVE_GROUPS_FROM_GROUP';\nexport const PATCH_SELECTED_GROUP = 'PATCH_SELECTED_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n","const MONTH_LIST = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\nconst WEEKDAYS_LIST = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nconst MAX_MINUTES_VALUE = 59;\nconst MAX_HOUR_VALUE = 23;\nconst MAX_DAY_VALUE = 31;\nconst MAX_MONTH_VALUE = 12;\nconst MAX_WEEKDAY_VALUE = 7;\n\nexport class CronValidator {\n  // public methods\n  static isValidMinutes(minutes) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(minutes), MAX_MINUTES_VALUE);\n  }\n\n  static isValidHours(hours) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(hours), MAX_HOUR_VALUE);\n  }\n\n  static isValidDays(days) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(days), MAX_DAY_VALUE);\n  }\n\n  static isValidMonth(month) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(month), MAX_MONTH_VALUE, false)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(month), MONTH_LIST);\n  }\n\n  static isValidWeekDay(weekDay) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(weekDay), MAX_WEEKDAY_VALUE)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(weekDay), WEEKDAYS_LIST);\n  }\n\n  static FORMAT_MSG = {\n    MINUTES: 'Minute value is required',\n    HOURS: 'Hour values must be between 0 and 23 and can contain special symbols: , - *',\n    DAYS: 'Day values must be between 0 and 31 and can contain special symbols: , - *',\n    MONTH: 'Month values must be between 1 and 12, or JAN-DEC, and can contain special symbols: , - *',\n    DAY_OF_WEEK: 'Day-of-Week values must be between 0 and 7, or SUN-SAT, and can contain special symbols: , - *',\n    EVERY_HOUR_WARNING: 'You have selected a process to run every hour. This may not be advisable for processes that consume significant storage resources, like backup processes.'\n  };\n\n  static ALLOWED_MINUTES_OPTIONS = ['0', '10', '20', '30', '40', '50'];\n\n  // private methods\n  static isValidNumberValue(time, maxVal, zeroAllowed = true) {\n    if (time === '*' || (zeroAllowed && time === '0')) {\n      return true;\n    }\n\n    if (time.includes(',')) {\n      return time.split(',').every((part) => {\n        return CronValidator.isValidNumberPart(part, maxVal, zeroAllowed);\n      });\n    }\n\n    return CronValidator.isValidNumberPart(time, maxVal, zeroAllowed);\n  }\n\n  static isValidNumberPart(time, maxVal, zeroAllowed = true) {\n    if (time.includes('/')) {\n      return false;\n    }\n    // Uncomment if we should allow a `/` symbol for Cron schedule\n    /*\n    if (time.includes('/')) {\n      const stepParts = time.split('/');\n      if (stepParts.length !== 2) {\n        return false;\n      }\n\n      const stepPartsValid = CronValidator.isValidNumberPart(stepParts[0], maxVal, zeroAllowed)\n        && CronValidator.isValidNumberPart(stepParts[1], maxVal, zeroAllowed);\n\n      return stepPartsValid || (stepParts[0] === '*' && CronValidator.isValidNumberPart([stepParts[1]], maxVal, zeroAllowed));\n    }\n    */\n\n    if (time.includes('-')) {\n      const rangeNumbersArr = time.split('-').map((el) => parseInt(el, 10));\n      return CronValidator.isValidNumberRange(rangeNumbersArr, maxVal) && rangeNumbersArr.length === 2 && rangeNumbersArr[0] <= rangeNumbersArr[1];\n    }\n\n    const timeNumber = parseInt(time, 10);\n    if (zeroAllowed) {\n      return timeNumber >= 0 && timeNumber <= maxVal;\n    }\n    return timeNumber > 0 && timeNumber <= maxVal;\n  }\n\n  static cleanValue(value) {\n    return (value || '').trim().toLowerCase();\n  }\n\n  static isValidNumberRange(dataArray, maxVal, zeroAllowed = true) {\n    return dataArray.every((element) => {\n      if (zeroAllowed) {\n        return element >= 0 && element <= maxVal;\n      }\n      return element > 0 && element <= maxVal;\n    });\n  }\n\n  static isValidAlternativeValue(value, allowedValues) {\n    if (value.includes(',')) {\n      return value.split(',').every((part) => {\n        return CronValidator.isValidAlternativePart(part, allowedValues);\n      });\n    }\n\n    return CronValidator.isValidAlternativePart(value, allowedValues);\n  }\n\n  static isValidAlternativePart(value, allowedValues) {\n    if (value.includes('/')) {\n      return false;\n      /*\n      const stepValues = value.split('/');\n      return CronValidator.isValidAlternativeRange(stepValues, allowedValues);\n      */\n    }\n\n    if (value.includes('-')) {\n      const rangeValues = value.split('-');\n      return CronValidator.isValidAlternativeRange(rangeValues, allowedValues) && rangeValues.length === 2\n        && allowedValues.indexOf(rangeValues[0]) <= allowedValues.indexOf(rangeValues[1]);\n    }\n\n    return CronValidator.isValidAlternativeRange([value], allowedValues);\n  }\n\n  static isValidAlternativeRange(values, allowedValues) {\n    return values.every((value) => {\n      return allowedValues.includes(CronValidator.cleanValue(value));\n    });\n  }\n}\n","export const LOAD_ALL_USERS = 'LOAD_ALL_USERS';\nexport const SELECT_USER = 'SELECT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const REVOKE_PRIVILEGE = 'REVOKE_PRIVILEGE';\nexport const GRANT_PRIVILEGE = 'GRANT_PRIVILEGE';\n\nexport const ADD_USER_TO_GROUPS = 'ADD_USER_TO_GROUPS';\nexport const REMOVE_USER_FROM_GROUPS = 'REMOVE_USER_FROM_GROUPS';\nexport const DEACTIVATE_USER = 'DEACTIVATE_USER';\nexport const CREATE_USER = 'CREATE_USER';\n","import { RestClient } from 'shared/lib/rest';\nimport { ENTITY_TYPES_FETCH } from './selectors';\n\nexport function fetchEntities() {\n  return function thunk(dispatch) {\n    const promises = ENTITY_TYPES_FETCH.map(({ type, query }) => {\n      let url = `${type}`;\n      if (query) {\n        url = url.concat(`/${encodeURIComponent(query)}`);\n      }\n      const promise = RestClient.get(url, { page_size: 2147483645 });\n      dispatch({\n        type: 'FETCH_ENTITIES',\n        promise,\n        entityType: type\n      });\n      return promise;\n    });\n\n    dispatch({\n      type: 'FETCH_ENTITIES_ALL',\n      promise: promises\n    });\n  };\n}\n\nexport function fetchEntity(eType) {\n  const definition = ENTITY_TYPES_FETCH.find(desc => eType === desc.type);\n\n  if (!definition) {\n    return function notFound() {\n      console.warn('[fetchEntity] invalid entity type:', eType); // eslint-disable-line\n    };\n  }\n\n  return function thunk(dispatch) {\n    const promise = RestClient.get(\n      `${definition.type}${definition.query ? `/${definition.query}` : ''}?page_size=2147483645`\n    );\n\n    dispatch({\n      type: 'FETCH_ENTITIES',\n      promise,\n      entityType: definition.type\n    });\n\n    return promise;\n  };\n}\n\nexport function selectEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'SELECT_ENTITY'\n  };\n}\n\nexport function clearSelectedEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'CLEAR_SELECTED_ENTITY'\n  };\n}\n\nexport function setFilterType(value) {\n  return {\n    name: 'type',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function setFilterSearch(value) {\n  return {\n    name: 'search',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function openModal(name) {\n  return {\n    type: 'OPEN_ENTITIES_MODAL',\n    name\n  };\n}\n","import { sessionActions } from './session.action';\n\nexport const actions = {\n  ...sessionActions,\n};\n","import { jobsActions } from './jobs.action';\nimport { processActions } from './process.action';\nimport { globalFiltersActions } from './global-filters.action';\n\nexport const actions = {\n  ...jobsActions,\n  ...processActions,\n  ...globalFiltersActions,\n};\n","// function Node(payload) {\n//   const data = payload;\n//   const edges = [];\n\n//   return {\n//     getEdges() {\n//       return edges;\n//     },\n//     getData() {\n//       return data;\n//     },\n//     addEdge(edge) {\n//       edges.push(edge);\n//       return edges;\n//     }\n//   };\n// }\n\nimport _ from 'lodash';\nimport { createSelector } from 'reselect';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nfunction pipe(...fns) {\n  return arg => fns.reduce((prev, fn) => fn(prev), arg);\n}\n\nfunction filterBy(selector, equalityFn, value) {\n  return data => {\n    if (value) {\n      return data.filter(el => equalityFn(selector(el), value));\n    }\n\n    return data;\n  };\n}\n\nexport function retrieveFilteredAccounts(protocol, server) {\n  return state => {\n    const { accounts } = state.explorer;\n\n    const filterByProtocol = filterBy(\n      el => (el.nodes[0] ? el.nodes[0].protocol : ''),\n      (stateValue, currentValue) => stateValue === currentValue,\n      protocol\n    );\n\n    const filterByServer = filterBy(\n      el => Object.keys(el.servers),\n      (servers, currentServer) => servers.includes(currentServer),\n      server\n    );\n\n    return pipe(filterByProtocol, filterByServer)(accounts);\n  };\n}\n\nexport function retrieveServerEntry({ protocol, address }, structure) {\n  const dbms = structure.dbms.find(entry => entry.protocol === protocol);\n  return dbms && dbms.servers.find(server => server.address === address);\n}\n\nexport function retrieveDatabaseEntry({ database, protocol, address }, structure) {\n  const server = retrieveServerEntry({ protocol, address }, structure);\n\n  return server.databases.find(db => db.special.database === database);\n}\n\nconst getStatePath = state => state.explorer.state.path;\nconst getStructured = state => state.explorer.structured.dbms;\nconst getSessions = state => state.explorer.sessions;\nconst getSessionsFlags = state => state.explorer.flags.sessions;\nconst getTopSqlStatements = state => state.explorer.topSqlStatements;\nconst getTopSqlStatementsFlags = state => state.explorer.flags.topSqlStatements;\nconst getStoragePointsLoadingFlag = state => state.explorer.flags.storage.loadingPoints;\nconst getStorageDetailsLoadingFlag = state => state.explorer.flags.storage.loadingDetails;\nconst getSelectedStorage = state => state.explorer.storage.selected;\nconst getStoredEntries = state => state.explorer.storage.storedEntries;\nconst getSelectedObject = state => state.explorer.objects.selectedObject;\nconst getSelectedOwner = state => state.explorer.objects.selectedOwner;\nconst getObjectsEntries = state => state.explorer.objects.storedEntries;\nconst getObjectsLoadingFlag = state => state.explorer.flags.objects.loading;\nconst getMssqlDiskIO = state => state.explorer.storage.mssqlDiskIO;\nconst getMssqlStorageUsed = state => state.explorer.storage.mssqlStorageUsed;\nconst getMssqlFileStorage = state => state.explorer.storage.mssqlFileStorage;\n\nexport const getFullPath = createSelector([getStatePath, getStructured], (fullPath, dbms) => {\n  const pathArr = fullPath.split('--');\n  return dbms\n    .find(({ path }) => path === pathArr[0])\n    ?.servers.find(({ address }) => address === pathArr[1])\n    ?.databases.find(({ special }) => special.database === pathArr[2])?.name;\n});\n\nexport const haveStorageData = createSelector(\n  [getFullPath, getStoredEntries],\n  (fullPath, storedEntries) => {\n    const selectedStorage = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedStorage).length > 0;\n  }\n);\n\nexport const getFormattedStorage = createSelector(\n  [getFullPath, getStoredEntries, getStoragePointsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    const points = storedEntries[fullPath]?.points;\n    if (isLoading || !_.isArray(points)) {\n      return [];\n    }\n    const factor = 1024;\n    return points.map(point => {\n      let usage = (point.Used_MB / point.Total_MB) * 100;\n      if (usage < 0) {\n        usage = 0;\n      }\n      return {\n        ns: point.Tablespace,\n        freePerc: point['Pct._Free'],\n        freeGB: point.Free_MB / factor,\n        totalGB: point.Total_MB / factor,\n        usedGB: point.Used_MB / factor,\n        usage\n      };\n    });\n  }\n);\n\nexport const haveObjectsData = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const selectedObjects = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedObjects).length > 0;\n  }\n);\n\nexport const getStorageDetailsData = createSelector(\n  [\n    getFullPath,\n    getStoredEntries,\n    getFormattedStorage,\n    getStorageDetailsLoadingFlag,\n    getSelectedStorage\n  ],\n  (fullPath, storedEntries, list, isLoading, selectedNS) => {\n    const details = storedEntries[fullPath]?.details;\n    if (isLoading || !_.isArray(details)) {\n      return {\n        tablespace: {},\n        files: []\n      };\n    }\n    return {\n      tablespace: list.find(({ ns }) => ns === selectedNS),\n      files: details.filter(({ TABLESPACE_NAME }) => TABLESPACE_NAME === selectedNS)\n    };\n  }\n);\n\nexport const getMssqlStorageDetails = createSelector(\n  [\n    getMssqlDiskIO,\n    getMssqlStorageUsed,\n    getMssqlFileStorage,\n  ],\n  (diskIO, storageUsed, fileStorage) => {\n    return { diskIO, storageUsed, fileStorage };\n  }\n);\n\nexport const getStructuredObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n\n    const objects = storedEntries[fullPath] || {};\n    const tree = Object.keys(objects).reduce((acc, key) => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          if (acc[object.OWNER] && !acc[object.OWNER].includes(key)) {\n            acc[object.OWNER].push(key);\n          } else {\n            acc[object.OWNER] = [key];\n          }\n        });\n      return acc;\n    }, []);\n    return Object.keys(tree).map(key => ({ owner: key, objects: tree[key] }));\n  }\n);\n\nexport const getInvalidObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const invalidObjects = [];\n    const objects = storedEntries[fullPath] || {};\n    Object.keys(objects).forEach(key => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          const included = invalidObjects.findIndex(\n            ({ owner, object: name }) => owner === object?.OWNER && name === key\n          );\n          if (object && object.STATUS !== 'VALID' && included === -1) {\n            invalidObjects.push({ owner: object.OWNER, object: key });\n          }\n        });\n    });\n    return invalidObjects;\n  }\n);\n\nexport const getSelectedObjectData = createSelector(\n  [getSelectedObject, getSelectedOwner, getFullPath, getObjectsEntries],\n  (object, owner, fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!object || !owner || !_.isObject(objects) || !_.isArray(objects[object])) {\n      return [];\n    }\n    return objects[object].filter(({ OWNER }) => OWNER === owner);\n  }\n);\n\nexport const getObjectsDataByProcess = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!_.isObject(objects)) {\n      return [];\n    }\n    return Object.values(objects);\n  }\n);\n\nexport function objectsSelectorResolver(state, protocol) {\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return getObjectsDataByProcess(state);\n  }\n  return getSelectedObjectData(state);\n}\n\nexport const getSortedSessions = createSelector(\n  [getSessions, getSessionsFlags],\n  (sessions, { loading, sort }) => {\n    if (loading || !_.isArray(sessions)) {\n      return [];\n    }\n    if (sort === undefined) {\n      return sessions;\n    }\n    let sortFunction;\n    // Backend doesn't support sorting at this time. Consider moving sort to backend though\n    if (sort.order === 'asc') {\n      sortFunction = (a, b) => {\n        return new Date(a[sort.sortKey]).getTime() - new Date(b[sort.sortKey]).getTime();\n      };\n    } else {\n      sortFunction = (a, b) => {\n        return new Date(b[sort.sortKey]).getTime() - new Date(a[sort.sortKey]).getTime();\n      };\n    }\n    return sessions.slice().sort(sortFunction);\n  }\n);\n\nexport const selectTopSqlStatements = createSelector(\n  [getTopSqlStatements, getTopSqlStatementsFlags],\n  (statementsTxt, { loading }) => {\n    if (loading || !statementsTxt) {\n      return [];\n    }\n\n    const statementsJson = (statementsTxt || '').split('\\n')[1];\n    return statementsJson ? JSON.parse(statementsJson) : [];\n  }\n);\n\nexport const getBackup = (database, backups) => {\n  const backup = backups.find(db => db.name === database.name)?.backup;\n\n  return backup;\n};\n\nexport const getDBStatus = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n\n  return status;\n};\n\nexport const getDBStatusInfo = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n  const info = statuses.find(db => db.name === database.name)?.message;\n\n  return dbMessage(status, info);\n};\n\nexport const STATUS_TYPES = {\n  down: 'down',\n  up: 'up',\n  error: 'error',\n  notConnected: 'not-connected',\n  notFound: 'not found',\n};\n\nexport const getDBMSStatus = (dbms, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n\n  const allStatuses = {};\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n\nexport const getDBMSStatusInfo = (dbms, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const dbmsStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': []\n  };\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      dbmsStatus[entry.status] && dbmsStatus[entry.status].push({\n        server: entry.server,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (dbmsStatus.down.length > 0) {\n    if (dbmsStatus.down.length === 1) {\n      message += `${dbmsStatus.down[0].server} has a database down. `;\n    } else {\n      message += `The following servers: ${dbmsStatus.down.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database down. `;\n    }\n  }\n\n  if (dbmsStatus.error.length > 0) {\n    if (dbmsStatus.error.length === 1) {\n      message += `${dbmsStatus.error[0].server} has a database with error. `;\n    } else {\n      message += `\\n The following servers: ${dbmsStatus.error.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database with error. `;\n    }\n  }\n\n  if (dbmsStatus['not-connected'].length > 0) {\n    if (dbmsStatus['not-connected'].length === 1) {\n      message += `${dbmsStatus['not-connected'][0].server} server has a database which status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases from servers: (${dbmsStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    dbmsStatus.down.length === 0 &&\n    dbmsStatus.error.length === 0 &&\n    dbmsStatus['not-connected'].length === 0 &&\n    dbmsStatus.up.length > 0\n  ) {\n    message = 'All servers are up.';\n  }\n\n  return message;\n};\n\nexport const getServerStatus = (server, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n  const allStatuses = {};\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.notFound]) return 'not found';\n\n  return 'not-connected';\n};\n\nexport const getServerStatusInfo = (server, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const serverStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': [],\n  };\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      serverStatus[entry.status] && serverStatus[entry.status].push({\n        dbName: entry.dbName,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (serverStatus.down.length > 0) {\n    if (serverStatus.down.length === 1) {\n      message += `${serverStatus.down[0].dbName} database is down. `;\n    } else {\n      message += `The following databases: ${serverStatus.down.map(sv => sv.dbName)} are down. `;\n    }\n  }\n\n  if (serverStatus.error.length > 0) {\n    if (serverStatus.error.length === 1) {\n      message += `${serverStatus.error[0].dbName} database has errors. `;\n    } else {\n      message += `Errors reported in databases: (${serverStatus.error.map(sv => sv.dbName)}). `;\n    }\n  }\n\n  if (serverStatus['not-connected'].length > 0) {\n    if (serverStatus['not-connected'].length === 1) {\n      message += `${serverStatus['not-connected'][0].dbName} database status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases: (${serverStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    serverStatus.down.length === 0 &&\n    serverStatus.error.length === 0 &&\n    serverStatus['not-connected'].length === 0 &&\n    serverStatus.up.length > 0\n  ) {\n    message = 'All databases are up.';\n  }\n\n  return message;\n};\n\nexport const getEntityPendingStatus = (entity, statuses, type) => {\n  const pathArray = entity.path.split('--');\n  const dbms = pathArray[0];\n  if (statuses.length === 0) return { label: `Loading ${type} status...`, loading: true };\n\n  if (type === 'server') {\n    return statuses\n      .filter(en => en.dbms === dbms && en.server === entity.address)\n      .find(e => e.loading)\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh dbs status', loading: false };\n  }\n\n  if (type === 'db') {\n    return statuses.find(db => db.name === entity.name)?.loading\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh db status', loading: false };\n  }\n\n  return { label: 'Refresh', type: false };\n};\n\nexport const dbMessage = (status, message) => {\n  if (!message) {\n    if (status === 'up') {\n      return 'Instance is up.';\n    }\n\n    if (status === 'error') {\n      return 'An unknown error has occurred on this instance.';\n    }\n\n    if (status === 'down') {\n      return 'Instance is down.';\n    }\n\n    if (status === 'not-connected' || status === 'not found') {\n      return 'Please refresh in order to get the instance status.';\n    }\n  }\n\n  return message;\n};\n","import Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LimitlessTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n    maxWidth: 'none'\n  }\n}))(Tooltip);\n","export function hasWritePrivileges(entity) {\n  return entity?.privileges?.effective?.includes?.('write');\n}\n\nexport function hasOnlyReadPrivilege(entity) {\n  if (entity?.privileges?.effective?.length === 1 && entity?.privileges?.effective[0] === 'read') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isOnlySelectGroup(details) {\n  if (!details) return false;\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (\n    (userDetails.member_of.length === 1 && userDetails.member_of[0] === 'select') ||\n    (userDetails.member_of.length === 2 &&\n      userDetails.member_of.includes('select') &&\n      userDetails.member_of.includes('user'))\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isAdmin(details) {\n  if (!details) return false;\n\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (userDetails.member_of.includes('admin')) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function hasCreatePrivilege(user, module) {\n  if (!user) return false;\n\n  const userDetails = user.toJS();\n  return userDetails?.class_privileges?.effective[module]?.some((item) => item === 'create');\n}\n","import React, { useState, useCallback, useMemo, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { useFormikContext } from 'formik';\nimport _ from 'lodash';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { mdiArrowExpand } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Modal } from 'shared/components/overlays';\nimport { ParameterLoader } from 'shared/components/loaders';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Ensure } from 'core/components/Ensure/Ensure';\nimport { Checkbox } from '../../controls/Checkbox/Checkbox';\nimport { Text } from './Generic';\nimport { formatAccount } from './formatters';\nimport check from './field-level-validations';\nimport { ADDITIONAL_ACCOUNT_FILTERS } from './filters';\nimport { deepCopy } from 'shared/lib/deep-copy';\n\nexport const RSAKey = props => {\n  return <Text multiline {...props} />;\n};\n\nexport const FQName = ({ recieved, ...props }) => {\n  const { values } = useFormikContext();\n\n  const fqname = recieved?.fqname || recieved?.name || null;\n  let name = values[`fqname--${props?.name}`];\n  let namespace = values['fqname--namespace'];\n\n  // use the value received from the invocation\n  if (fqname && name === undefined) {\n    const parts = fqname.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  // use the value that was manually typed\n  if (name !== undefined && name.slice(-1) !== '.') {\n    const parts = name.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '30px' }}\n        value={name}\n        description=\"The relative or fully-qualified name of the process to be created.\"\n        required\n        name={`fqname--${props?.name}`}\n        label=\"name\"\n        disabled={props.disabled}\n      />\n      <NamespaceSelect\n        name=\"fqname--namespace\"\n        label=\"Parent namespace\"\n        description=\"namespace (leave blank for relative name)\"\n        value={namespace}\n        disabled={props.disabled}\n        type=\"fqname\"\n      />\n    </>\n  );\n};\n\nexport function QualifiedName(props) {\n  const validations = useMemo(() => check.merge(check.masName, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"text\" />;\n}\n\n/**\n * TODO:\n * These should be retireved through a connection\n * Platforms are protocols associated for accounts\n * For now they can be hardcoded\n */\nexport const AccountSelect = ({ protocols = [], ...props }) => {\n  const { values } = useFormikContext();\n  const [showUrls, setShowUrls] = useState(false);\n  const boxName = `${props.name}-show-urls`;\n\n  const showToggle = useCallback(e => {\n    setShowUrls(e.target.checked);\n  }, []);\n\n  return (\n    <Ensure type=\"account\" inlineLoader>\n      {({ data: accounts }) => {\n        let list = accounts;\n\n        if (protocols && protocols.length) {\n          if (ADDITIONAL_ACCOUNT_FILTERS[props.name]) {\n            const additionalFilters = ADDITIONAL_ACCOUNT_FILTERS[props.name];\n            list = additionalFilters.reduce((acc, filterFn) => {\n              acc = filterFn(deepCopy(acc), values);\n              return acc;\n            }, accounts);\n          }\n\n          list = list.filter(account => protocols.includes(account.protocol));\n        }\n\n        const options = list.map(account => ({\n          label: showUrls ? formatAccount(account) : account.name,\n          value: account.name\n        }));\n\n        /**\n          TODO: filter by protocol\n         */\n        if (protocols.length) {\n          accounts.filter(Boolean);\n        }\n\n        return (\n          <FormGroup>\n            <Text {...props} options={options} />\n            <Checkbox\n              size=\"small\"\n              id={boxName}\n              name={boxName}\n              onChange={showToggle}\n              disabled={props.disabled}\n              label=\"Show Account URLs\"\n            />\n          </FormGroup>\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const PLATFORMS = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'MariaDB', value: 'MariaDB', tester: /mariadb\\./ },\n  { label: 'MySQL', value: 'MySQL', tester: /mysql\\./ },\n  { label: 'Oracle', value: 'Oracle', tester: /oracle\\./ },\n  { label: 'PostgreSQL', value: 'PostgreSQL', tester: /pgsql\\./ },\n  {\n    label: 'Microsoft SQL Server',\n    value: 'Microsoft SQL Server',\n    tester: /microsoft\\.sqlserver\\./\n  },\n  { label: 'Oracle RDS', value: 'Oracle RDS', tester: /.rds\\.oracle\\./ }\n];\n\nexport const PROCESS_TYPES = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'Backup', value: 'backup', tester: /\\.backup\\./ },\n  { label: 'Config', value: 'config', tester: /\\.config\\./ },\n  { label: 'Import', value: 'import', tester: /\\.import\\./ },\n  { label: 'Monitor', value: 'monitor', tester: /\\.monitor\\./ },\n  { label: 'Oda', value: 'oda', tester: /\\.oda\\./ },\n  { label: 'Patch', value: 'patch', tester: /\\.patch\\./ },\n  { label: 'Patching', value: 'patching', tester: /\\.patching\\./ },\n  { label: 'RDS', value: 'rds', tester: /\\.rds\\./ },\n  { label: 'Run', value: 'run', tester: /\\.run\\./ },\n  { label: 'Security', value: 'security', tester: /\\.security\\./ },\n  { label: 'Util', value: 'util', tester: /\\.util\\./ },\n];\n\nexport const PlatformSelect = props => {\n  const { values } = useFormikContext();\n\n  let platformValue = values?.platform ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availablePlatforms = PLATFORMS.slice(1).reverse();\n    platformValue =\n      availablePlatforms.find(platform => platform.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={platformValue} name=\"platform\" {...props} options={PLATFORMS} />;\n};\n\nexport const ProcessTypeSelect = props => {\n  const { values } = useFormikContext();\n\n  let typeValue = values?.type ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availableTypes = PROCESS_TYPES.slice(1).reverse();\n    typeValue =\n      availableTypes.find(type => type.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={typeValue} name=\"type\" {...props} options={PROCESS_TYPES} />;\n};\n\nexport const ProcessSelect = props => {\n  const { values } = useFormikContext();\n  const platformValue = values?.platform ?? '';\n  const typeValue = values?.type ?? '';\n\n  let platform = PLATFORMS[0];\n  let type = PROCESS_TYPES[0];\n\n  if (platformValue) {\n    platform = PLATFORMS.find(p => p.value === platformValue);\n  }\n\n  if (typeValue) {\n    type = PROCESS_TYPES.find(p => p.value === typeValue);\n  }\n\n  return (\n    <Ensure type=\"namespace\" inlineLoader>\n      <Ensure type=\"process\" inlineLoader>\n        {({ data }) => {\n          let processes = data;\n\n          if (platform && platform.value !== 'all') {\n            processes = processes.filter(process => platform.tester.test(process.name));\n          }\n\n          if (type && type.value !== 'all') {\n            processes = processes.filter(process => type.tester.test(process.name));\n          }\n\n          /** TODO, CHECK */\n          processes = processes.filter(process => {\n            if (processes.meta && process.meta.appearance) {\n              return process.meta.appearance !== 'Hidden';\n            }\n\n            return true;\n          });\n\n          // display only processes that have the is_executable === true\n          // the others need to be compiled first\n          const OPTIONS = processes\n            .filter(p => p.is_executable)\n            .map(item => ({\n              value: item.name,\n              label: item.name,\n              description: item.description,\n              disabled: item.meta && item.meta.appearance === 'Greyed'\n            }));\n\n          return <Text type=\"text\" defaultValue=\"\" name=\"process\" {...props} options={OPTIONS} />;\n        }}\n      </Ensure>\n    </Ensure>\n  );\n};\n\nexport const NamespaceSelect = ({ value, ...props }) => {\n  const { values } = useFormikContext();\n  const defaultValue = values.namespace || '';\n  let customVal = value;\n\n  return (\n    <Ensure type=\"namespace\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading namespaces...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load namespaces.</ParameterLoader>;\n        }\n\n        let namespaces = data;\n\n        namespaces = namespaces.filter(namespace => {\n          if (namespace.meta && namespace.meta.appearance) {\n            return namespace.meta.appearance !== 'Hidden';\n          }\n\n          return true;\n        });\n\n        const OPTIONS = namespaces.map(item => ({\n          value: item.name,\n          label: item.name,\n          disabled: item.meta && item.meta.appearance === 'Greyed'\n        }));\n\n        if (props?.type === 'fqname') {\n          customVal = OPTIONS.find(o => o.value === value)?.value || '';\n        }\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            name=\"namespace\"\n            value={customVal}\n            {...props}\n            options={OPTIONS}\n            required\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const FormPrototypeSelect = props => {\n  return (\n    <Ensure type=\"prototype\" inlineLoader>\n      {({ data: prototypes }) => {\n        const list = prototypes || [];\n\n        const options = list.map(prototype => ({\n          label: prototype.name,\n          value: prototype.name\n        }));\n\n        return <Text fullWidth {...props} description=\"\" options={options} />;\n      }}\n    </Ensure>\n  );\n};\n\nexport const ModeSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.mode || '';\n\n  return (\n    <Ensure type=\"type\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading type...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load types.</ParameterLoader>;\n        }\n\n        const modes = data.filter(type => type.name === 'mas0300.sys.account.privilege_mode')[0];\n\n        if (modes.meta && modes.meta.appearance === 'Hidden') {\n          return null;\n        }\n\n        const OPTIONS =\n          modes.enumerations &&\n          modes.enumerations.map(item => ({\n            value: item.label,\n            label: item.label,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            disabled={modes.meta && modes.meta.appearance === 'Greyed'}\n            name=\"process\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nfunction variadicListReducer(list, action) {\n  switch (action.type) {\n    case 'add_new_parameter':\n      return produce(list, draft => {\n        draft.push({ name: '', type: '', deflt: undefined, description: null, value: '' });\n      });\n\n    case 'remove_parameter':\n      return produce(list, draft => {\n        draft.pop();\n      });\n\n    default:\n      return list;\n  }\n}\n\nfunction useVariadicList(recieved) {\n  const [list, dispatch] = useReducer(variadicListReducer, recieved?.replvars || []);\n\n  return { list, dispatch };\n}\n\nexport const Variadic = ({ recieved, disabled }) => {\n  const { values } = useFormikContext();\n  const displayDeftlDesc = selectedProcess !== 'vendita.oracle.rdbms.cli.sqlplus.execute';\n\n  const { list, dispatch } = useVariadicList(recieved);\n\n  const selectedProcess = values.process;\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvars</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Ensure type=\"type\">\n          {({ data: datatypes }) => {\n            const options = datatypes\n              .filter(dataType => {\n                if (\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.script' ||\n                  selectedProcess === 'mas0300.os.svc.db.data.sql.query_import' ||\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.execute' ||\n                  selectedProcess === 'dbatools.oracle.run.import_sqlplus_query'\n                ) {\n                  return dataType.name === 'string' || dataType.name === 'integer';\n                }\n                return true;\n              })\n              .map(dataType => {\n                return {\n                  label: dataType.name,\n                  value: dataType.name\n                };\n              });\n\n            return (\n              <>\n                <div>\n                  {list.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <VariadicInstance\n                        data={item}\n                        index={index}\n                        defltDesc={displayDeftlDesc}\n                        types={options}\n                        disabled={disabled}\n                      />\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  }}\n                >\n                  {list.length > 0 && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        dispatch({ type: 'remove_parameter' });\n                      }}\n                      disabled={disabled}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                  <Button\n                    onClick={() => {\n                      dispatch({ type: 'add_new_parameter' });\n                    }}\n                    disabled={disabled}\n                  >\n                    Add\n                  </Button>\n                </div>\n              </>\n            );\n          }}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nfunction VariadicInstance({ data = {}, index, defltDesc, types, disabled }) {\n  const name_base = `replvar--${index}`;\n\n  let parsedDeflt = data.deflt;\n\n  if (data.deflt) {\n    parsedDeflt = data.deflt.replace(\"str('\\\"'\", '').replace(\"'\\\"')\", '');\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Name\"\n        type=\"text\"\n        name={`${name_base}--name`}\n        value={data.name}\n        disabled={disabled}\n        validate={check.merge(check.firstCharLetter, check.masName)}\n        required\n      />\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Type\"\n        type=\"text\"\n        name={`${name_base}--type`}\n        options={types}\n        value={data.type}\n        disabled={disabled}\n        required\n      />\n      {defltDesc && (\n        <>\n          <Text\n            style={{ marginBottom: '15px' }}\n            label=\"Deflt\"\n            type=\"text\"\n            name={`${name_base}--deflt`}\n            value={parsedDeflt}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n          <Text\n            style={{ marginBottom: '30px' }}\n            label=\"Description\"\n            type=\"text\"\n            name={`${name_base}--description`}\n            value={data.description}\n            defaultValue={null}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n        </>\n      )}\n      {!defltDesc && (\n        <Text\n          style={{ marginBottom: '15px' }}\n          label=\"Value\"\n          type=\"text\"\n          name={`${name_base}--value`}\n          value={data.value}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n}\n\nexport const Multiline = props => {\n  const [open, setOpen] = useState(false);\n  const { values } = useFormikContext();\n  const value = values[props.name];\n\n  return (\n    <>\n      <Text\n        InputProps={{\n          startAdornment: (\n            <InputAdornment>\n              <LightTooltip title=\"Expand\">\n                <SvgIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    setOpen(true);\n                  }}\n                >\n                  <path d={mdiArrowExpand} />\n                </SvgIcon>\n              </LightTooltip>\n            </InputAdornment>\n          )\n        }}\n        value={value}\n        isPopup={open}\n        multiline\n        {...props}\n      />\n      <Modal open={open}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <Paper.Content>\n            <Text value={value} multiline isPopup={open} variant=\"standard\" {...props} />\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={() => setOpen(false)}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const Replvalues = ({ recieved, disabled, ...props }) => {\n  const { values } = useFormikContext();\n  const keys = Object.keys(values);\n  const replvars = keys.filter(key => key.startsWith('replvar'));\n  const valuesNr = replvars.length / 4;\n  const replvaluesParams = [];\n\n  if (valuesNr > 0) {\n    for (let i = 0; i < valuesNr; i++) {\n      const type =\n        values[`replvar--${i}--type`] === 'integer' ? 'number' : values[`replvar--${i}--type`];\n      const label = values[`replvar--${i}--name`];\n      const name = `replvalue--${i}`;\n      const value =\n        recieved?.replvalues && recieved.replvalues[values[`replvar--${i}--name`]]\n          ? recieved.replvalues[values[`replvar--${i}--name`]]\n          : values[`replvalue--${i}`];\n      replvaluesParams.push({ type, label, name, value });\n    }\n  }\n\n  if (replvaluesParams.length > 0) {\n    return (\n      <>\n        <Section>\n          <Section.Header>\n            <Section.Title>replvalues</Section.Title>\n          </Section.Header>\n        </Section>\n        {replvaluesParams.map((repl, index) => {\n          return (\n            <Text\n              key={index}\n              style={{ marginBottom: '15px' }}\n              label={repl.label}\n              type={repl.type}\n              name={repl.name}\n              value={repl.value}\n              disabled={disabled}\n              description={props.description}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvalues</Section.Title>\n      </Section.Header>\n    </Section>\n  );\n};\n\nexport const Uuid = props => {\n  return <Text validate={check.uuid} {...props} />;\n};\n","export const InvocationStatus = {\n  NEW: '__NEW__',\n  ALL: '__ALL__',\n  NOT_FETCHED: 'NOT_FETCHED',\n  ABORTED: 'ABORTED',\n  SCHEDULED: 'SCHEDULED',\n  SUCCEEDED: 'SUCCEEDED',\n  FAILED: 'FAILED',\n  EXECUTING: 'EXECUTING',\n  DELAYED: 'DELAYED',\n  KILLED: 'KILLED'\n};\n\nexport const AllowOutputFor = [\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED,\n  InvocationStatus.FAILED,\n  InvocationStatus.SUCCEEDED,\n  InvocationStatus.EXECUTING\n];\n\nexport const AllowGeneralEditingFor = [InvocationStatus.NEW];\n\nexport const CannotShowStatusFor = [\n  InvocationStatus.NEW,\n  InvocationStatus.ALL,\n  InvocationStatus.NOT_FETCHED\n];\n\nexport const FAILURES = [\n  InvocationStatus.FAILED,\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED\n];\n\nexport const SUCESSES = [InvocationStatus.SUCCEEDED];\n\nexport const WARNINGS = [InvocationStatus.DELAYED, InvocationStatus.SCHEDULED];\n","export const LOAD_LICENSES = 'LOAD_LICENSES';\nexport const LOAD_DB_LICENSES = 'LOAD_DB_LICENSES';\nexport const LOAD_LICENSE_TARGETS = 'LOAD_LICENSE_TARGETS';\nexport const LOAD_AVAILABLE_SERVERS = 'LOAD_AVAILABLE_SERVERS';\n","import React, { useState } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nexport const SubmitButton = ({ children = 'Submit', confirmation, ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating, dirty } = useFormikContext();\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        disabled={!dirty || isSubmitting || isValidating}\n        onClick={() => {\n          console.log('submitting', values); // eslint-disable-line\n          if (confirmation) {\n            setOpen(true);\n          } else {\n            submitForm();\n          }\n        }}\n        {...props}\n      >\n        {children}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '350px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n          <Paper.Content scrollable={false}>\n            <Result type=\"fail\">\n              <BodyText>Are you sure you want to save?</BodyText>\n            </Result>\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                No\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                  submitForm();\n                }}\n              >\n                Yes\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { bool, func, node, shape, object, string } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './AvatarCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nexport const AvatarCard = ({\n  label,\n  avatar = {},\n  selected,\n  data,\n  onSelect,\n  action,\n  description,\n  ...props\n}) => {\n  const focusable = {\n    ...(onSelect && {\n      onFocus: useCallback(\n        event => {\n          event.stopPropagation();\n          onSelect(data);\n        },\n        [onSelect, data]\n      ),\n      tabIndex: props.disabled ? -1 : 0\n    })\n  };\n\n  return (\n    <div\n      {...focusable}\n      className={classnames('avatar-card', { selected })}\n      data-qa={`avatar-card-of-${label}`}\n      {...props}\n    >\n      <Avatar className=\"card-avatar\" alt={label} src={avatar.src}>\n        {avatar.initial || avatar.fallback}\n      </Avatar>\n      <span className=\"card-label\">{label}</span>\n      <div className=\"right-slot\">\n        {action && (\n          <span onClick={containEvent} className=\"action-slot\">\n            {action}\n          </span>\n        )}\n        {typeof description === 'string' && (\n          <LightTooltip placement=\"right\" title={description}>\n            <SvgIcon>\n              <Icon path={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction containEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nAvatarCard.propTypes = {\n  label: node,\n  selected: bool,\n  disabled: bool,\n  avatar: shape({\n    src: string,\n    fallback: node\n  }),\n  data: object,\n  onSelect: func,\n  action: node\n};\n","import * as Yup from 'yup';\n\nexport const mergeValidations = (...callbacks) => value => {\n  let error;\n\n  callbacks.forEach(provided => {\n    if (provided && typeof provided === 'function') {\n      error = provided(value);\n    }\n  });\n\n  return error;\n};\n\nexport const checkRequired = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkRequiredNotNullable = async value => {\n  try {\n    await Yup.string()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkEmail = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .email('Invalid email format.')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkPhoneNumber = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUnsignedInt = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[-]!$/, {\n        excludeEmptyString: true,\n        message: 'The parameter must be unsigned.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkName = value => {\n  if (!/^(?:[a-z_][a-z0-9_\\\\.]*)$/i.test(value) || (value && value.substr(-1) === '.')) {\n    return 'A valid MAS relative name is required.';\n  }\n};\n\nexport const checkFirstLetter = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[a-zA-Z].*/, {\n        excludeEmptyString: true,\n        message: 'First character must be a letter'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUuid = value => {\n  if (value) {\n    if (!/^[a-fA-F0-9-]+$/.test(value)) {\n      return 'Only hexadecimal values (0-9, a-f, A-F) and hyphens (\"-\") are allowed';\n    }\n    const copy = value.replace(/-/g, '');\n    if (copy.length !== 32) {\n      return 'A string of 32 hexadecimal with hyphens (\"-\") is required (ex: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)';\n    }\n  }\n};\n\nexport const noop = () => {};\n\nexport default {\n  merge: mergeValidations,\n  required: checkRequired,\n  required_not_null: checkRequiredNotNullable,\n  email: checkEmail,\n  phone: checkPhoneNumber,\n  unsigned_int: checkUnsignedInt,\n  unsigned_float: noop,\n  signed_float: noop,\n  masName: checkName,\n  firstCharLetter: checkFirstLetter,\n  uuid: checkUuid\n};\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  DESELECT_ALL,\n  LOAD_DB_EDITION,\n  LOAD_DB_VERSION,\n  LOAD_LICENSE_DELTA,\n  LOAD_MSSQL_DB_VERSIONS,\n  LOAD_MSSQL_ENVIRONMENT_USAGE,\n  LOAD_MSSQL_NETWORK_EDGES,\n  LOAD_MSSQL_NETWORK_NODES,\n  LOAD_MSSQL_OS_TYPES,\n  LOAD_MSSQL_SERVER_DETAILS,\n  LOAD_MSSQL_USAGE,\n  LOAD_NETWORK_EDGES,\n  LOAD_NETWORK_NODES,\n  LOAD_OS_TYPE,\n  LOAD_SERVER_DETAILS,\n  LOAD_USAGE,\n  LOAD_USAGE_STAT,\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\n\nexport function loadExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function deselectAllThunk() {\n  return dispatch => {\n    dispatch(creators.action(DESELECT_ALL));\n\n    return 'done';\n  };\n}\n\nexport function selectAllThunk() {\n  return function selectAll(dispatch, getState) {\n    const { rawEntries } = getState().executiveDashboard;\n\n    dispatch(creators.action(SELECT_ALL, rawEntries));\n\n    return 'done';\n  };\n}\n\nexport function toggleServerThunk(server) {\n  return function toggleServer(dispatch, getState) {\n    const { allServers } = getState().executiveDashboard;\n    let { selectedServers } = getState().executiveDashboard;\n\n    const svIndex = allServers.findIndex(sv => sv.name === server.name);\n\n    if (selectedServers.find(sv => sv.name === server.name)) {\n      selectedServers = selectedServers.filter(sv => sv.name !== server.name);\n    } else {\n      selectedServers = [...selectedServers, allServers[svIndex]];\n    }\n\n    selectedServers.sort((a, b) => a.nrCores - b.nrCores);\n\n    dispatch(creators.action(TOGGLE_SERVER, selectedServers));\n    return 'done';\n  };\n}\n\nexport function loadVirtualExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.VIRTUAL_EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function loadNetworkNodesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_NETWORK_NODES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/network/nodes`;\n      if (serverId) {\n        url = `${url}/dd?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_NETWORK_NODES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_NETWORK_NODES, error));\n    }\n  };\n}\n\nexport function loadNetworkEdgesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_NETWORK_EDGES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/network/edges`;\n      if (serverId) {\n        url = `${url}/dd?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_NETWORK_EDGES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_NETWORK_EDGES, error));\n    }\n  };\n}\n\nexport function loadServerDetailsThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SERVER_DETAILS));\n\n    try {\n      const response = await RestClient.get(`/dbpollster/dd_server?s_id=${serverId}`);\n      dispatch(creators.success(LOAD_SERVER_DETAILS, response.data.data[0]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SERVER_DETAILS, error));\n    }\n  };\n}\n\nexport function loadOSTypeThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OS_TYPE));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/os_type`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_os_type?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_OS_TYPE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OS_TYPE, error));\n    }\n  };\n}\n\nexport function loadDBEditionThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_EDITION));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/db_edition`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_db_edition?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_DB_EDITION, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_EDITION, error));\n    }\n  };\n}\n\nexport function loadDBVersionThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_VERSION));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/db_version`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_db_version?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_DB_VERSION, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_VERSION, error));\n    }\n  };\n}\n\nexport function loadUsageThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USAGE));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/usage`);\n      dispatch(creators.success(LOAD_USAGE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USAGE, error));\n    }\n  };\n}\n\nexport function loadUsageStat(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USAGE_STAT));\n\n    const serverPrefix = serverId ? 'dd_' : '';\n    const serverSuffix = serverId ? `?s_id=${serverId}` : '';\n    try {\n      const usageStatResponse = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/${serverPrefix}license_usage_stat${serverSuffix}`);\n      const data = (usageStatResponse.data.data || []).reduce((obj, item) => {\n        return Object.assign(obj, item);\n      }, {});\n      const payload = {\n        totalRisk: data.total_risk,\n        licenseCost: data.license_cost,\n        supportCost: data.support_cost,\n        unallocatedLicenses: data.unallocated_licenses,\n      };\n\n      dispatch(creators.success(LOAD_USAGE_STAT, payload));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USAGE_STAT, error));\n    }\n  };\n}\n\nexport function loadLicenseDeltaThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSE_DELTA));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/license_delta`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_license_delta?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_LICENSE_DELTA, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSE_DELTA, error));\n    }\n  };\n}\n\nexport function loadMssqlUsageThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_USAGE));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/license_used`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_license_used?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_USAGE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_USAGE, error));\n    }\n  };\n}\n\nexport function loadMssqlNetworkNodesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_NETWORK_NODES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/network_nodes`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_network_nodes?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_NETWORK_NODES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_NETWORK_NODES, error));\n    }\n  };\n}\n\nexport function loadMssqlNetworkEdgesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_NETWORK_EDGES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/network_edges`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_network_edges?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_NETWORK_EDGES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_NETWORK_EDGES, error));\n    }\n  };\n}\n\nexport function loadMssqlServerDetailsThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_SERVER_DETAILS));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_network_server?s_id=${serverId}`);\n      dispatch(creators.success(LOAD_MSSQL_SERVER_DETAILS, response.data.data[0]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_SERVER_DETAILS, error));\n    }\n  };\n}\n\nexport function loadMssqlEnvironmentUsageThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_ENVIRONMENT_USAGE));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/usage`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_usage?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_ENVIRONMENT_USAGE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_ENVIRONMENT_USAGE, error));\n    }\n  };\n}\n\nexport function loadMssqlDbVersionsThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_DB_VERSIONS));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/db_version`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_db_version?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_DB_VERSIONS, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_DB_VERSIONS, error));\n    }\n  };\n}\n\nexport function loadMssqlOsTypesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_OS_TYPES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/os_type`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_os_type?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_OS_TYPES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_OS_TYPES, error));\n    }\n  };\n}\n","const DAY = 86400000;\nconst HOUR = 3600000;\nconst MINUTE = 60000;\nconst SECOND = 1000;\n\nexport const formatTimePeriod = (timeMillis) => {\n  let millisLeft = timeMillis;\n  const days = millisLeft / DAY;\n  millisLeft %= DAY;\n  const hours = millisLeft / HOUR;\n  millisLeft %= HOUR;\n  const minutes = millisLeft / MINUTE;\n  millisLeft %= MINUTE;\n  const seconds = millisLeft / SECOND;\n  millisLeft %= SECOND;\n\n  return [\n    days >= 1 ? `${Math.floor(days)}d` : null,\n    hours >= 1 ? `${Math.floor(hours)}h` : null,\n    minutes >= 1 ? `${Math.floor(minutes)}m` : null,\n    seconds >= 1 ? `${Math.floor(seconds)}s` : null,\n    millisLeft >= 1 ? `${Math.floor(millisLeft)}ms` : null\n  ].filter(Boolean).join(' ');\n};\n","import { createSelector } from 'reselect';\n\n//\nexport const getCurrentUserName = createSelector(\n  state => state.session,\n  session => {\n    /** ImmutableJs object :( */\n    return session.get('currentUser').get('name');\n  }\n);\n\nexport const getCurrentUserDetails = createSelector(\n  state => state.session,\n  session => {\n    return session.get('currentUser').get('details');\n  }\n);\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function postInvocation(body) {\n  try {\n    const { data } = await RestClient.post('/invocation', body);\n\n    return { result: data.result, invocations: data.data.invocations };\n  } catch (e) {\n    return { result: 'fail', invocations: [], messages: e.messages };\n  }\n}\n\nexport function requestInvocation(uuid) {\n  return RestClient.get(`/invocation/${uuid}`);\n}\n\nexport async function fetchInvocation(uuid) {\n  try {\n    const response = await RestClient.get(`/invocation/${uuid}`);\n\n    return {\n      result: 'success',\n      invocation: response.data.data.invocations[0]\n    };\n  } catch (e) {\n    console.log(e); // eslint-disable-line\n    return { result: 'fail' };\n  }\n}\n\nexport async function fetchInvocationOutput(uuid) {\n  return RestClient.get(`/invocation/${uuid}/display`, {\n    page_size: 2147483645\n  });\n}\n\nexport async function invocationOutputPoller(uuid) {\n  let statusChecksCount = 0;\n  let pollerFinished = false;\n  let succeeded = false;\n\n  while (statusChecksCount < 10 && !pollerFinished) {\n    const invocationStatus = await sleep(fetchInvocation.bind(this, uuid)); // eslint-disable-line\n    statusChecksCount++;\n    succeeded = invocationStatus.invocation.status === 'SUCCEEDED';\n    pollerFinished = succeeded || invocationStatus.invocation.status === 'FAILED';\n  }\n\n  return succeeded ? fetchInvocationOutput(uuid) : Promise.resolve(null);\n}\n\nexport function parseInvocationResult(invocationOutput) {\n  const resultText = invocationOutput && invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n  const resultJsonString = (resultText || '').split('\\n')[1];\n  return resultJsonString ? JSON.parse(resultJsonString) : [];\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n","export const ROOT_NODE_ID = 1;\nexport const ROOT_NODE = { id: ROOT_NODE_ID, label: 'MAS', title: 'MAS server', color: '#2f80ed', shape: 'circle', widthConstraint: 100 };\nexport const SERVER_NODE_COLOR = '#219653';\nexport const SERVER_NODE_SHAPE = 'circle';\nexport const DB_NODE_COLOR = '#f2c94c';\nexport const DB_NODE_SHAPE = 'circle';\nexport const NODE_SIZE_MULTIPLIER = 10;\nexport const BASE_NETWORK_GRAPH_OPTIONS = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: '#000000'\n  },\n  height: '500px'\n};\n","export const LINUX_OS_PRIMARY_COLOR = '#f69636';\nexport const LINUX_OS_SECONDARY_COLOR = '#8f5922';\nexport const WINDOWS_OS_PRIMARY_COLOR = '#0c86f1';\nexport const WINDOWS_OS_SECONDARY_COLOR = '#0461b3';\n\nexport const SE_DB_PRIMARY_COLOR = '#55c667';\nexport const SE_DB_SECONDARY_COLOR = '#3c8b48';\nexport const EE_DB_PRIMARY_COLOR = '#fde725';\nexport const EE_DB_SECONDARY_COLOR = '#a98d35';\n\nexport const DB_VERSION_COLOR_PALETTE = [\n  {\n    color: '#404788',\n    secondaryColor: '#3c416f'\n  }, {\n    color: '#238a8d',\n    secondaryColor: '#287072'\n  }, {\n    color: '#71bbef',\n    secondaryColor: '#67aada'\n  }, {\n    color: '#d7b4f8',\n    secondaryColor: '#c4a7e0'\n  }, {\n    color: '#fdc300',\n    secondaryColor: '#cda10d'\n  }, {\n    color: '#fd3725',\n    secondaryColor: '#cd291a'\n  }, {\n    color: '#d525fd',\n    secondaryColor: '#b91edc'\n  }, {\n    color: '#25a7fd',\n    secondaryColor: '#2085c7'\n  }\n];\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.shared;\n\nexport const jobsSelector = createSelector(localState, state => state.get('jobs'));\n\nexport const connectionsSelector = createSelector(localState, state => state.get('connections'));\n\nexport const jobsSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('jobs')\n); // eslint-disable-line\n\nexport const processesSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('processes')\n); // eslint-disable-line\n\nexport const globalFiltersSelector = createSelector(localState, state =>\n  state.get('globalFilters')\n); // eslint-disable-line\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nexport function loadAllUsersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_USERS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_USERS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadUserThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USER, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USER, error));\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(GRANT_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(REVOKE_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function addUserToGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/grant`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, allUsers.data));\n\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function removeUserFromGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function deactivateUserThunk(user) {\n  return async dispatch => {\n    dispatch(creators.loading(DEACTIVATE_USER, user));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}/revoke`, {\n        groups: user.member_of\n      });\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(DEACTIVATE_USER, allUsers.data));\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DEACTIVATE_USER, error));\n\n      return error.data;\n    }\n  };\n}\n\nexport function createUserThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.username,\n      password: values.password,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_USER, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, refreshed.data));\n\n      dispatch(creators.success(CREATE_USER));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_USER, error));\n      return error?.response?.data;\n    }\n  };\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport function loadAllGroupsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_GROUPS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_GROUPS, error.data));\n\n      return error.data;\n    }\n  };\n}\n\nexport function loadGroupThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_GROUP, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${name}`);\n      dispatch(creators.success(LOAD_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_GROUP, error.data));\n    }\n  };\n}\n\nexport function createGroupThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.groupname,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_GROUP, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, refreshed.data));\n\n      dispatch(creators.success(CREATE_GROUP));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_GROUP, error));\n      return error?.response?.data;\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(GRANT_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(REVOKE_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function removeUsersFromGroupThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_USERS_FROM_GROUP, params));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`, {\n        groups: [params.group]\n      });\n\n      const group = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(REMOVE_USERS_FROM_GROUP, group.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_USERS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeSubGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_GROUPS_FROM_GROUP, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(REMOVE_GROUPS_FROM_GROUP, response.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_GROUPS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function addUsersToGroupThunk(params) {\n  return async dispatch => {\n    const { group, users } = params;\n\n    dispatch(creators.loading(ADD_USERS_TO_GROUP, params));\n\n    try {\n      await Promise.all(\n        users.map(async user => {\n          return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant`, {\n            groups: [group]\n          });\n        })\n      );\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(ADD_USERS_TO_GROUP, response.data));\n\n      return response.data;\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USERS_TO_GROUP, errorMsg));\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeGroupThunk(group) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_GROUP, group));\n\n    try {\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}`);\n      dispatch(creators.success(DELETE_GROUP));\n\n      dispatch(loadAllGroupsThunk());\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DELETE_GROUP, error));\n\n      return error.data;\n    }\n  };\n}\n","export const LICENSABLE_FEATURE_DEFAULT_COLOR = '#176BA0';\nexport const LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR = '#E8F9F5';\n\nexport const LICENSABLE_FEATURES_COLORS = [\n  {\n    color: '#176BA0',\n    secondaryColor: '#E8F9F5',\n    type: 'DCO'\n  },\n  {\n    color: '#1AC9E6',\n    secondaryColor: '#e8fafc',\n    type: 'AC'\n  },\n  {\n    color: '#6DF0D2',\n    secondaryColor: '#f0fdfb',\n    type: 'AS'\n  },\n  {\n    color: '#7D3AC1',\n    secondaryColor: '#f2ebf9',\n    type: 'DV'\n  },\n  {\n    color: '#EA7369',\n    secondaryColor: '#fbedf7',\n    type: 'MT'\n  },\n  {\n    color: '#1DE4BD',\n    secondaryColor: '#e8fcf8',\n    type: 'DD'\n  },\n  {\n    color: '#EF7E32',\n    secondaryColor: '#fdf2eb',\n    type: 'DT'\n  },\n  {\n    color: '#F0A58F',\n    secondaryColor: '#fdf6f4',\n    type: 'SE2'\n  },\n  {\n    color: '#C02323',\n    secondaryColor: '#f9e9e9',\n    type: 'P'\n  },\n  {\n    color: '#DB4CB2',\n    secondaryColor: '#fbedf7',\n    type: 'IMD'\n  },\n  {\n    color: '#4c6bdb',\n    secondaryColor: '#a8d1f1',\n    type: 'EE'\n  },\n  {\n    color: '#399137',\n    secondaryColor: '#a6eaa5',\n    type: 'RAT'\n  },\n  {\n    color: '#e846f3',\n    secondaryColor: '#e68bee',\n    type: 'DDM'\n  },\n  {\n    color: '#f31414',\n    secondaryColor: '#f85959',\n    type: 'LS'\n  },\n  {\n    color: '#0872fd',\n    secondaryColor: '#589dfa',\n    type: 'AA'\n  },\n  {\n    color: '#217303',\n    secondaryColor: '#3f722c',\n    type: 'SP'\n  }\n];\n","import * as Yup from 'yup';\n\nexport function getInitialValues(parameters) {\n  const initialValues = {};\n\n  parameters.map(parameter => {\n    initialValues[parameter.name] = parameter.deflt !== null ? parameter.deflt : '';\n    return null;\n  });\n\n  return initialValues;\n}\n\nexport function getValidationSchema(parameters) {\n  const validationSchema = {};\n\n  parameters.map(parameter => {\n    validationSchema[parameter.name] = Yup.string();\n\n    if (parameter.is_required) {\n      validationSchema[parameter.name].required('A value is required');\n    }\n\n    return null;\n  });\n}\n\nexport function formatParameters(values) {\n  const parameters = {};\n\n  Object.keys(values).map(value => {\n    if (typeof values[value] === 'string') {\n      if (values[value].length > 0 || values[value].trim()) {\n        parameters[value] = values[value];\n      }\n    } else if (typeof values[value] === 'object') {\n      if (values[value].name && (values[value].name.length > 0 || values[value].name.trim())) {\n        parameters[value] = values[value].name;\n      }\n    }\n\n    return null;\n  });\n\n  return parameters;\n}\n","import React from 'react';\n\nimport { Text, Email, Integer, Password, PhoneNumber, BooleanSelect } from '../editors/Generic';\nimport {\n  ProcessSelect,\n  AccountSelect,\n  RSAKey,\n  FQName,\n  Variadic,\n  Multiline,\n  Replvalues,\n  Uuid\n} from '../editors/Custom';\n\nfunction extractParameter({ parameter, recieved, ...others }) {\n  const { type, ...additional } = parameter.editor;\n\n  return {\n    key: parameter.name,\n    label: parameter.label || parameter.name,\n    name: parameter.field_name || parameter.name,\n    required: parameter.is_required,\n    defaultValue: parameter.deflt || parameter.value,\n    description: parameter.description,\n    ...additional,\n    ...others\n  };\n}\n\nexport const TextParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Text {...passable} />;\n};\n\nexport const PasswordParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Password {...passable} />;\n};\n\nexport const PhoneNumberParameter = props => {\n  const passable = extractParameter(props);\n\n  return <PhoneNumber {...passable} />;\n};\n\nexport const BooleanParameter = props => {\n  const passable = extractParameter(props);\n\n  return <BooleanSelect {...passable} />;\n};\n\nexport const IntegerParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Integer {...passable} />;\n};\n\nexport const EmailParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Email {...passable} />;\n};\n\nexport const ProcessParameter = props => {\n  const passable = extractParameter(props);\n\n  return <ProcessSelect {...passable} />;\n};\n\nexport const AccountParameter = props => {\n  const passable = extractParameter(props);\n\n  return <AccountSelect protocols={[]} {...passable} />;\n};\n\nexport const VariadicParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Variadic recieved={props.recieved} {...passable} />;\n};\n\nexport const ReplvaluesParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Replvalues recieved={props.recieved} {...passable} />;\n};\n\nexport const FQNameParameter = props => {\n  const passable = extractParameter(props);\n\n  return <FQName recieved={props.recieved} {...passable} />;\n};\n\nexport const RSAKeyParameter = props => {\n  const passable = extractParameter(props);\n\n  return <RSAKey {...passable} />;\n};\n\nexport const MultilineParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Multiline {...passable} />;\n};\n\nexport const UuidParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Uuid {...passable} />;\n};\n","import { createSelector } from 'reselect';\n\nexport const getQuery = createSelector(\n  state => state.invocation_viewer.query,\n  query => query\n);\n\nexport const getInvocation = createSelector(\n  state => state.invocation_viewer.invocation,\n  invocation => invocation\n);\n\nexport const getInvocationStatus = createSelector(getInvocation, invocation => invocation.status);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../../entities/actions';\nimport { entitySelectors } from '../../../entities/selectors';\n\nimport { Loader, ParameterLoader } from 'shared/components/loaders';\nimport { Center } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nexport const Ensure = connect(\n  (state, { type }) => {\n    const selector = entitySelectors[type];\n\n    return selector(state);\n  },\n  {\n    request: fetchEntity\n  }\n)(Ensurer);\n\nfunction Ensurer({ children, fresh, pipe = false, type, inlineLoader, data, status, request }) {\n  useEffect(() => {\n    if (status === 'fetching') return;\n    if (status === 'fetching') return;\n\n    if (status === 'fetched' && !fresh) return;\n\n    request(type);\n  }, []);\n\n  if (!status || status === 'not-fetched') {\n    return null;\n  }\n\n  if (status === 'fetching' && !pipe) {\n    const Loading = inlineLoader ? ParameterLoader : Loader;\n\n    return (\n      <Center>\n        <Loading>Loading {type}...</Loading>\n      </Center>\n    );\n  }\n\n  if (status === 'failed' && !pipe) {\n    return (\n      <Result type=\"fail\">\n        <Result.Text>Could not fetch {type} data!</Result.Text>\n      </Result>\n    );\n  }\n\n  if (typeof children === 'function') {\n    return <>{children({ status, data, request: () => request(type) })}</>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Ensure;\n","import React, { useState, useCallback } from 'react';\n\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { array, func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SearchableList.local.scss';\n\nexport const SearchableList = ({ items, children, filter, variant, visibleScroll }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const [query, setQuery] = useState('');\n  const filtered = items.filter(item => filter(item, query));\n\n  return (\n    <>\n      <div className=\"search-input-slot\">\n        <SimpleSearchInput\n          data-qa=\"users-search-input\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <div\n        className={classnames('searchable-list-slot', {\n          visibleScroll,\n          scrolled,\n          [variant]: variant\n        })}\n      >\n        <ul\n          className={classnames('list', {\n            [variant]: variant\n          })}\n          onWheel={onWheel}\n        >\n          {filtered.map((item, index, list) => (\n            <li key={index} className=\"list-item\">\n              {children(item, index, list)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nSearchableList.propTypes = {\n  items: array,\n  children: func,\n  filter: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nSearchableList.defaultProps = {\n  items: [],\n  filter: (item, query) => item === query\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.session;\n\nexport const authorizationSelector = createSelector(localState, state =>\n  state.get('authorization')\n);\n\nexport const currentUserSelector = createSelector(localState, state => state.get('currentUser'));\n\nexport const loginSelector = createSelector(localState, state => state.get('login'));\n\nexport const beVersionSelector = createSelector(localState, state => state.get('beVersion'));\nexport const beLicenceSelector = createSelector(localState, state => state.get('beLicence'));\nexport const beHealthSelector = createSelector(localState, state => state.get('beHealth'));\n","import { createSelector } from 'reselect';\n\nexport const ENTITY_TYPES = [\n  {\n    type: 'account',\n    title: 'CONNECTION',\n    dataEnclosure: 'accounts',\n    query: '*'\n  },\n  {\n    type: 'constant',\n    title: 'CONSTANT',\n    dataEnclosure: 'constants',\n    query: '*'\n  },\n  {\n    type: 'exception',\n    title: 'EXCEPTION',\n    dataEnclosure: 'exceptions',\n    query: '*'\n  },\n  {\n    type: 'form',\n    title: 'FORM',\n    dataEnclosure: 'forms',\n    query: '*'\n  },\n  {\n    type: 'namespace',\n    title: 'NAMESPACE',\n    query: '*',\n    dataEnclosure: 'namespaces'\n  },\n  {\n    type: 'process',\n    query: '*',\n    title: 'PROCESS',\n    dataEnclosure: 'processes'\n  },\n  {\n    type: 'prototype',\n    query: '*',\n    title: 'PROTOTYPE',\n    dataEnclosure: 'prototypes'\n  },\n  {\n    type: 'schedule',\n    title: 'SCHEDULE',\n    dataEnclosure: 'schedules',\n    query: '*'\n  },\n  {\n    type: 'type',\n    query: '*',\n    title: 'TYPE',\n    dataEnclosure: 'data_types'\n  }\n];\n\nexport const ENTITY_TYPES_FETCH = ENTITY_TYPES.concat({\n  type: 'alias'\n});\n\nconst ROOT_ENTITY = {\n  name: 'root',\n  entity: 'root',\n  description: 'Main container for all of the entities within MAS.'\n};\n\nexport const getBreadcrumbs = state => state.entities.breadcrumbs;\n\nfunction collectData(data, { type, dataEnclosure }, namespacesWithMeta) {\n  let collection = data[type]?.data?.data?.[dataEnclosure];\n\n  if (collection) {\n    const aliases = data.alias?.data?.data.aliases\n      .filter(item => item.alias_type === type)\n      .map(item => {\n        const { entity, alias, alias_type, ...props } = item;\n\n        /**\n         * Merging properties that the alias does not have,\n         * with properties the entity it aliases, has.\n         * Will avoid having to reconcile this at the usage level.\n         * And keep aliases viewable here.\n         */\n        const aliasedEntity = data[type]?.data?.data[dataEnclosure].find(e => e.name === alias);\n\n        return { ...(aliasedEntity && aliasedEntity), alias, ...props, entity: alias_type };\n      });\n\n    if (aliases) {\n      /** Concat the aliases for this collection with the collection itself */\n      collection = data[type]?.data?.data[dataEnclosure].concat(aliases);\n    }\n\n    /* filter out colllection items where appearance meta is hidden */\n\n    /** FIXME:\n     *  what about aliases ? If their aliasing root entity would have meta apearance hidden, should it as well ?\n     *  */\n    if (Array.isArray(namespacesWithMeta)) {\n      collection = collection.reduce((acc, dataItem) => {\n        const ownNamespace = namespacesWithMeta.find(ns => dataItem.name.startsWith(ns.name));\n\n        if (ownNamespace) {\n          if (ownNamespace?.meta?.appearance === 'Hidden') {\n            return acc;\n          }\n\n          return acc.concat([\n            {\n              ...dataItem,\n              meta: {\n                ...dataItem.meta,\n                ...ownNamespace.meta\n              }\n            }\n          ]);\n        }\n\n        return acc.concat(dataItem);\n      }, []);\n    }\n  }\n\n  return collection;\n}\n\nexport const entitySelectors = ENTITY_TYPES.reduce((selectors, def) => {\n  selectors[def.type] = createSelector(\n    state => state.entities.data,\n    state => state.entities.fetch_status,\n    state => namespaceWithMetaSelector(state),\n    (data, status, namespacesWithMeta) => {\n      return {\n        data: collectData(data, def, namespacesWithMeta),\n        status: status?.[def.type]\n      };\n    }\n  );\n\n  return selectors;\n}, {});\n\nexport const namespaceWithMetaSelector = createSelector(\n  state => state.entities.data,\n  data => {\n    const dataNamespaces = data.namespace?.data?.data?.namespaces;\n    if (Array.isArray(dataNamespaces)) {\n      return dataNamespaces.filter(\n        item => item.meta && item.meta.appearance && item.meta.appearance !== 'Normal'\n      );\n    }\n    return [];\n  }\n);\n\nexport const getFilteredEntities = createSelector(\n  state => state.entities.data,\n  state => state.entities.filters,\n  state => namespaceWithMetaSelector(state),\n  (data, filters, namespacesWithMeta) => {\n    const types =\n      filters.type === 'all'\n        ? ENTITY_TYPES\n        : ENTITY_TYPES.filter(type => type.type === filters.type || type.type === 'namespace');\n    return types\n      .reduce((accumulator, type) => {\n        return accumulator.concat(collectData(data, type, namespacesWithMeta));\n      }, [])\n      .filter(Boolean);\n  }\n);\n\nexport const getEntitiesAsHashMap = createSelector(\n  getFilteredEntities,\n  state => state.entities.filters,\n  (entities, filters) => {\n    let filteredEntities = entities;\n    if (filters.type !== 'all' && filters.type !== 'namespace') {\n      filteredEntities = entities.filter(item => item.entity !== 'namespace');\n    }\n    if (filters.search) {\n      filteredEntities = filteredEntities.filter(item => {\n        if (filters.type !== 'all' && filters.type !== 'namespace') {\n          const domainArray = item.name.split('.');\n          const shortName = domainArray[domainArray.length - 1];\n          return shortName.includes(filters.search);\n        }\n        return item.name.includes(filters.search);\n      });\n    }\n    return filteredEntities.reduce((accumulator, entity) => {\n      const paths = entity.name.includes('.') ? entity.name.split('.') : [];\n      paths.forEach((path, index) => {\n        const key = paths.slice(0, index).join('.');\n        if (!accumulator[key]) {\n          const findEntity = entities.find(item => item.name === key);\n          accumulator[key] = findEntity || {\n            name: key,\n            notPersisted: true\n          };\n        }\n      });\n      accumulator[entity.name] = entity;\n\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const getEntities = createSelector(\n  getBreadcrumbs,\n  getEntitiesAsHashMap,\n  (breadcrumbs, entitiesMap) => {\n    const entities = Object.values(entitiesMap);\n    const roots = Object.keys(entitiesMap)\n      .filter((entityName, index, names) => {\n        return (\n          !entityName.includes('.') &&\n          (names.find(name => name.startsWith(`${entityName}.`)) ||\n            entitiesMap[entityName].entity === 'namespace')\n        );\n      })\n      .map(key => ({\n        ...entitiesMap[key],\n        isSelected: breadcrumbs.includes(entitiesMap[key].name)\n      }));\n    const columns = breadcrumbs.map((breadcrumb, index) => {\n      return {\n        level: index,\n        path: index === 0 ? '.' : breadcrumbs.slice(0, index).join('.'),\n        rows: []\n      };\n    });\n    columns.push({\n      level: breadcrumbs.length,\n      path: `${breadcrumbs.join('.')}.`,\n      rows: []\n    });\n\n    return entities.reduce((accumulator, entity) => {\n      const path = entity.name.split('.');\n      if (accumulator.length < path.length) {\n        return accumulator;\n      }\n      const bucket = accumulator[path.length - 1];\n      if (!bucket) {\n        return accumulator;\n      }\n      if (bucket.path === '.') {\n        bucket.rows = roots;\n        return accumulator;\n      }\n\n      if (!entity.name.startsWith(bucket.path)) {\n        return accumulator;\n      }\n      const name = entity.name.replace(bucket.path, '').replace('.', '');\n      const entityLevel = entity.name.split('.').length - 1;\n      bucket.rows.push({\n        ...entity,\n        name,\n        isSelected: breadcrumbs[entityLevel] ? breadcrumbs[entityLevel] === name : false\n      });\n\n      return accumulator;\n    }, columns);\n  }\n);\n\nexport const getSelectedEntity = createSelector(\n  getEntitiesAsHashMap,\n  getBreadcrumbs,\n  (entities, breadcrumbs) => {\n    const path = breadcrumbs.join('.');\n    const entity = entities[path];\n    return entity?.notPersisted ? ROOT_ENTITY : entity;\n  }\n);\n\nexport const namespaceChildrenListSelector = createSelector(\n  getSelectedEntity,\n  getEntitiesAsHashMap,\n  (selectedEntity, entities) => {\n    const list = Object.keys(entities);\n    const namespace = `${selectedEntity.name}.`;\n\n    return list.filter(name => name.startsWith(namespace) && name !== namespace);\n  }\n);\n","export function mapUsersData(payload) {\n  return payload.data.users;\n}\n\nexport function mapLoadedUser(payload) {\n  return payload.data.users[0]; // the first returned user is the one in question\n}\n\nexport function mapSortInsensitive(payload) {\n  return payload.slice().sort(function sortInsensitive(a, b) {\n    return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n  });\n}\n","import { getOutputText } from './getOutputText';\n\nexport const copyTextToClipboard = (textToCopy) => {\n  makeCopyToClipboard(textToCopy);\n};\n\nexport const copyToClipboard = (output, invocation) => {\n  const text = getOutputText(output, invocation);\n  makeCopyToClipboard(text);\n};\n\nfunction makeCopyToClipboard(text) {\n  navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\n    if (result.state === 'granted' || result.state === 'prompt') {\n      /* write to the clipboard */\n      navigator.clipboard.writeText(text).then(\n        () => {\n          /* successful */\n          console.log('[copyTextToClipboard] Copied:', text); // eslint-disable-line\n        },\n        () => {\n          /* write failed */\n          console.warn('[copyTextToClipboard] --- unable to write to clipboard!'); // eslint-disable-line\n        }\n      );\n    } else {\n      legacyMethod(text);\n    }\n  }, legacyMethod.bind(this, text));\n}\n\nfunction legacyMethod(text) {\n  const textArea = document.createElement('textarea');\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.classList.add('copyToClipboardInput');\n  textArea.focus();\n  textArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textArea);\n  console.log('[copyTextToClipboard-legacy] Copied:', text); // eslint-disable-line\n}\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, tabs } = this.props;\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={tabs.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func,\n  tabs: array\n};\n\nNavigationTab.defaultProps = {\n  tabs: []\n};\n\nexport default NavigationTab;\n","export const getGroupDescription = (name, allGroups) => {\n  const groupDetails = allGroups.find(group => group.name === name);\n\n  return groupDetails?.description || '';\n};\n","import React from 'react';\nimport { func, string } from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './NavigationTab.local.scss';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, protocol } = this.props;\n\n    const data = [\n      { label: 'Workload', value: 'workload' },\n      TopSqlStatementsUtil.isAllowedProtocol(protocol) ? { label: 'Top SQL statements', value: 'topsql' } : false,\n      SystemExplorerFeatureUtil.isSessionsAllowed(protocol) ? { label: 'Sessions', value: 'sessions' } : false,\n      SystemExplorerFeatureUtil.isObjectsAllowed(protocol) ? { label: 'Objects', value: 'objects' } : false,\n      SystemExplorerFeatureUtil.isStorageAllowed(protocol) ? { label: 'Storage', value: 'storage' } : false\n    ].filter(Boolean);\n\n    if (protocol === 'ORACLE') {\n      data.push({ label: 'License reporting', value: 'license' });\n    }\n\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={data.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {data.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func\n};\n\nexport default NavigationTab;\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function postAccount(body) {\n  try {\n    const { data } = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function patchAccount(name, body) {\n  try {\n    const { data } = await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function deleteAccount(name) {\n  try {\n    const { data } = await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`);\n    return { result: data.result, messages: data.messages };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport function getConnection(name) {\n  return RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchConnection(name, body) {\n  return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postFile(file) {\n  return RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_ACCOUNTS, file);\n}\n","import { DbmsType } from '../../SystemExplorerFeatureUtil';\n\nconst ALLOWED_DBMS = [DbmsType.ORACLE, DbmsType.POSTGRES, DbmsType.MYSQL, DbmsType.MSSQL];\nconst ALLOWED_FOR_CHARTS = [DbmsType.ORACLE];\n\nconst PROCESS_ENDPOINT_MAP = {\n    [DbmsType.ORACLE]: 'vendita.oracle.rdbms.util.monitor.session.performance.topsql',\n    [DbmsType.POSTGRES]: 'vendita.pgsql.rdbms.session.topsql_postgres',\n    [DbmsType.MYSQL]: 'vendita.mysql.rdbms.session.topsql_mysql',\n    [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.tuning.top50longrunningsql',\n};\n\nconst DBMS_PROPERTY_NAME_MAP = {\n    [DbmsType.ORACLE]: 'dbms',\n    [DbmsType.POSTGRES]: 'dbms',\n    [DbmsType.MYSQL]: 'dbms',\n    [DbmsType.MSSQL]: 'dbconn',\n};\n\nexport class TopSqlStatementsUtil {\n  static isAllowedProtocol(dbms) {\n    return ALLOWED_DBMS.includes(dbms);\n  }\n\n  static isChartSupported(dbms) {\n    return ALLOWED_FOR_CHARTS.includes(dbms);\n  }\n\n  static getEndpoint(dbms) {\n    return PROCESS_ENDPOINT_MAP[dbms] || '';\n  }\n\n  static getDbmsPropertyName(dbms) {\n    return DBMS_PROPERTY_NAME_MAP[dbms] || '';\n  }\n}\n","import React from 'react';\n\nimport { OptionItem } from '../OptionItem/OptionItem';\n\nexport const OptionsList = ({ options }) => {\n  return options.map(option => <OptionItem key={option.name} option={option} />);\n};\n","import React from 'react';\nimport { LightTooltip } from '../../../shared/components';\nimport './ChartTooltip.local.scss';\n\nexport const ChartTooltip = (data) => {\n  if (!data || !data.payload || !data.payload.length) {\n    return '';\n  }\n\n  const { name, value } = data.payload[0];\n  return (\n    <div className=\"exec-dashboard-chart-tooltip\">\n      <LightTooltip placement=\"bottom-end\">\n        <div className=\"exec-dashboard-chart-tooltip-row\">\n          <div className=\"exec-dashboard-chart-tooltip-name\">{name}</div>\n          <div className=\"exec-dashboard-chart-tooltip-value\">{value}</div>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiSourceRepository,\n  mdiFolderHome,\n  mdiLanConnect,\n  mdiHexagonMultipleOutline,\n  mdiCubeOutline\n} from '@mdi/js';\n\nimport extractDefault from './extractDefault';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'float',\n  'integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter',\n  'string',\n  'unsigned_float',\n  'unsigned_integer'\n];\n\nexport default (parameter, dataTypes, prototypes) => {\n  parameter = { ...parameter };\n  parameter.position = parameter.meta.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    parameter.is_supported = false;\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.value = 'TEXT';\n  }\n\n  parameter.label = getLabel(parameter.name);\n  parameter.icon = getIcon(parameter.name);\n\n  return parameter;\n};\n\nconst getLabel = name => {\n  return labels[name] || name;\n};\n\nconst getIcon = name => {\n  return icons[name] || null;\n};\n\nconst labels = {\n  target_working_dir: 'Working directory',\n  target_shell: 'Target server SSH',\n  repo_shell: 'Repo server SSH',\n  repo_working_dir: 'Repo directory',\n  form: 'Database form',\n  dbms: 'Target DBMS',\n  vsphere_account: 'vSphere account',\n  vcenterservername: 'vCenter server name',\n  partitioning_methods: 'Virtualization Partitioning Technologies'\n};\n\nconst icons = {\n  target_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  target_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiSourceRepository} />\n    </SvgIcon>\n  ),\n  dbms: (\n    <SvgIcon>\n      <Icon path={mdiHexagonMultipleOutline} />\n    </SvgIcon>\n  ),\n  form: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  vsphere_account: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  ),\n  vcenterservername: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  )\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Field } from 'formik';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiLanConnect } from '@mdi/js';\n\nimport './TextField.local.scss';\n\nexport const TextField = ({ parameter, disabled }) => {\n  const validate = value => {\n    if (parameter.is_required) {\n      if (!value) {\n        return 'This Field is Required';\n      }\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <MUITextField\n            className={disabled ? 'disabled' : ''}\n            {...field}\n            variant=\"outlined\"\n            type=\"text\"\n            fullWidth\n            disabled={disabled}\n            error={meta.error && meta.touched}\n            helperText={meta.touched && meta.error ? meta.error : undefined}\n            label={parameter.label}\n            placeholder={parameter.label}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {parameter.icon ? (\n                    parameter.icon\n                  ) : (\n                    <SvgIcon>\n                      <Icon path={mdiLanConnect} />\n                    </SvgIcon>\n                  )}\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <LightTooltip placement=\"bottom-end\" title={parameter.description}>\n                  <InputAdornment position=\"end\">\n                    <SvgIcon>\n                      <Icon path={mdiHelpCircleOutline} />\n                    </SvgIcon>\n                  </InputAdornment>\n                </LightTooltip>\n              )\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Field } from 'formik';\nimport { array, object } from 'prop-types';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { mdiLanConnect } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport { Dropdown } from 'shared/components';\n\nimport './DropdownField.local.scss';\n\nfunction filterDbmsByShell(options, formValues) {\n  options = options || [];\n  if (!formValues || !formValues.target_shell) {\n    return options;\n  }\n\n  const shellAccount = formValues.target_shell;\n  return options.filter(dbmsAccount => dbmsAccount.address === shellAccount.address);\n}\n\nconst ADDITIONAL_OPTIONS_FILTERS = {\n  dbms: filterDbmsByShell,\n};\n\nexport const DropdownField = ({\n  parameter,\n  datatypes,\n  rawAccounts,\n  forms,\n  prototypes,\n  disabled,\n  currentFormValues\n}) => {\n  const dataType = datatypes.find(datatype => datatype.name === parameter.data_type);\n  let protocols = null;\n\n  if (dataType) {\n    if (\n      dataType.name.startsWith('mas0000.sys.account.conn.') ||\n      dataType.name === 'mas0000.sys.account.vsphere'\n    ) {\n      if (Array.isArray(dataType.protocol) && dataType.protocol.length > 0) {\n        protocols = [];\n        dataType.protocol.forEach(protocol => {\n          if (protocol === 'DBMS') {\n            // This is quick and dirty until we have a configuration-driven solution\n            // in the UI.\n            protocols = [...protocols, 'MSSQL', 'MYSQL', 'ORACLE', 'PGSQL'];\n          } else {\n            protocols.push(protocol);\n          }\n        });\n\n        if (currentFormValues && ADDITIONAL_OPTIONS_FILTERS[parameter.name]) {\n          const additionalFilter = ADDITIONAL_OPTIONS_FILTERS[parameter.name];\n          rawAccounts = additionalFilter(rawAccounts, currentFormValues);\n        }\n\n        const options = rawAccounts\n          .map(account => ({ name: account.name, value: account }))\n          .filter(option => protocols === null || protocols.includes(option.value.protocol));\n\n        const validate = value => {\n          if (parameter.is_required) {\n            if (!value) {\n              return 'This Field is Required';\n            }\n          }\n        };\n\n        return (\n          <Field name={parameter.name} validate={validate}>\n            {({ field, meta }) => {\n              return (\n                <Dropdown\n                  onSelect={(index, opt) => {\n                    field.onChange({ target: { name: parameter.name, value: opt.value } });\n                  }}\n                  disabled={disabled}\n                  target={(meta2, actions) => (\n                    <MUITextField\n                      className={disabled ? 'disabled' : ''}\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      variant=\"outlined\"\n                      fullWidth\n                      label={parameter.label}\n                      placeholder={parameter.label}\n                      {...field}\n                      value={field.value ? field.value.name : ''}\n                      onChange={() => {}}\n                      onClick={actions.toggle}\n                      ref={meta2.ref}\n                      error={meta.error && meta.touched}\n                      helperText={meta.touched && meta.error ? meta.error : undefined}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {parameter.icon ? (\n                              parameter.icon\n                            ) : (\n                              <SvgIcon>\n                                <Icon path={mdiLanConnect} />\n                              </SvgIcon>\n                            )}\n                          </InputAdornment>\n                        ),\n\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <ArrowDropDownIcon />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                  )}\n                  items={options}\n                />\n              );\n            }}\n          </Field>\n        );\n      }\n    }\n  } else {\n    const prototype = prototypes.find(p => p.name === parameter.data_type);\n\n    if (prototype) {\n      const options = forms\n        .filter(form => form.prototype === prototype.name)\n        .map(form => ({ name: form.name, value: form.name }));\n\n      const validate = value => {\n        if (parameter.is_required) {\n          if (!value) {\n            return 'This Field is Required';\n          }\n        }\n      };\n\n      return (\n        <Field name={parameter.name} validate={validate}>\n          {({ field, meta }) => {\n            return (\n              <Dropdown\n                onSelect={(index, opt) => {\n                  field.onChange({ target: { name: parameter.name, value: opt.value } });\n                }}\n                disabled={disabled}\n                target={(meta2, actions) => (\n                  <MUITextField\n                    className={disabled ? 'disabled' : ''}\n                    type=\"text\"\n                    readOnly\n                    disabled\n                    variant=\"outlined\"\n                    fullWidth\n                    label={parameter.label}\n                    placeholder={parameter.label}\n                    {...field}\n                    value={field.value ? field.value : ''}\n                    onChange={() => {}}\n                    onClick={actions.toggle}\n                    ref={meta2.ref}\n                    error={meta.error && meta.touched}\n                    helperText={meta.touched && meta.error ? meta.error : undefined}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          {parameter.icon ? (\n                            parameter.icon\n                          ) : (\n                            <SvgIcon>\n                              <Icon path={mdiLanConnect} />\n                            </SvgIcon>\n                          )}\n                        </InputAdornment>\n                      ),\n\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <ArrowDropDownIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                )}\n                items={options}\n              />\n            );\n          }}\n        </Field>\n      );\n    }\n  }\n\n  return <div>Currently not supported input</div>;\n};\n\nDropdownField.propTypes = {\n  parameter: object,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  prototypes: array\n};\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport { ListOutput } from '../ListOutput/ListOutput';\nimport { sendToEmail } from '../../utils/sendToEmail';\nimport { copyToClipboard } from '../../utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './OutputModal.local.scss';\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const OutputModal = ({\n  open,\n  actions,\n  output,\n  invocation,\n  modalDetails,\n  processName,\n  messages\n}) => {\n  let content;\n\n  const [message, setMessage] = useState(messages[0]);\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  let interval;\n\n  useEffect(() => {\n    if (messages && messages.length > 1) {\n      if (!open) {\n        clearInterval(interval);\n      } else {\n        let index = 1;\n        interval = setInterval(() => {\n          setMessage(messages[index]);\n          if (index + 1 < messages.length) {\n            index += 1;\n          }\n        }, 4000);\n\n        return () => clearInterval(interval);\n      }\n    }\n  }, [open]);\n\n  if (!output && invocation.status !== 'SUCCEEDED' && invocation.status !== 'FAILED') {\n    content = (\n      <>\n        <Center>\n          <Loader>{message}</Loader>\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (invocation.status === 'FAILED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput type=\"fail\" output={output} errors={invocation.errors} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'SUCCEEDED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput output={output} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n        <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '75vh',\n          minHeight: '75vh',\n          width: '75vh',\n          height: '75vh'\n        }}\n      >\n        <ModalHeader\n          title={modalDetails.title}\n          desc={invocation.status === 'FAILED' ? 'An error orccured!' : 'Output'}\n          avatar={\n            <Avatar\n              className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n            >\n              {modalDetails.icon}\n            </Avatar>\n          }\n        />\n        {content}\n      </Paper>\n    </Modal>\n  );\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postSchedule(body) {\n  return RestClient.post('schedule', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function getSchedule(name) {\n  return RestClient.get(`schedule/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchSchedule(name, body) {\n  return RestClient.patch(`schedule/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","export function mapAccountsTree(data) {\n  // data is split into 3 levels,\n  // first level is defined by `protocol`\n  // we find root nodes by matching protocols.\n  const roots = data.reduce(splitIntoRootsByProtocol, []);\n  roots.forEach(root => {\n    // define the servers map\n    // all server and database objects for this protocol\n    root.servers = root.nodes.reduce(splitIntoRootsByAddress, {});\n    const servers = Object.keys(root.servers);\n    servers.forEach(name => {\n      const server = root.servers[name];\n      server.databases = server.nodes.reduce(splitIntoRootsByDatabase, {});\n    });\n  });\n  return roots;\n}\nexport function splitIntoRootsByProtocol(acc, item) {\n  const protocolBlacklist = ['SSH'];\n  const { protocol } = item;\n  if (protocolBlacklist.includes(protocol)) {\n    return acc;\n  }\n  if (!(item.special && item.special.database)) {\n    return acc;\n  }\n  const root = acc.find(r => r.name === protocol);\n  if (root) {\n    root.nodes = [...root.nodes, item];\n  } else {\n    acc.push({\n      name: item.protocol,\n      path: item.protocol,\n      type: 'dbms',\n      nodes: [item],\n      servers: []\n    });\n  }\n  return acc;\n}\nfunction splitIntoRootsByAddress(serversMap, item) {\n  const { address } = item;\n  const existingEntry = serversMap[address];\n  if (existingEntry) {\n    existingEntry.nodes = [...existingEntry.nodes, item];\n  } else {\n    serversMap[address] = {\n      name: item.address,\n      path: `${item.protocol}--${item.address}`,\n      type: 'server',\n      nodes: [item]\n    };\n  }\n  return serversMap;\n}\nfunction splitIntoRootsByDatabase(databaseMap, item) {\n  const {\n    special: { database: name }\n  } = item;\n  databaseMap[name] = {\n    name,\n    path: `${item.protocol}--${item.address}--${name}`,\n    node: item\n  };\n  return databaseMap;\n}\n\n/**\n *\n * @param {*} content // /account call data\n *\n * This will resturcture the list of accounts into a list of dbms entries with servers and databases.\n */\n\nexport function mapAccountsNewStructure(content, protocols) {\n  const accounts = { raw: content };\n\n  let protocolsArr = protocols.map(p => p.name);\n\n  if (protocolsArr.length === 0) {\n    protocolsArr = ['CREDENTIAL', 'ILOM', 'SSH'];\n  }\n\n  accounts.databases = content.filter(account => account.special.database);\n  accounts.dbms = [];\n\n  /* eslint-disable */\n  accounts.databases.forEach(function resolver(entry) {\n    /**\n     * Add a path def to the database entry\n     * path descriptions are made here, to mimic somewhat the old mapping.\n     * Keep other properties.\n     */\n    const database = {\n      ...entry,\n      path: `${entry.protocol}--${entry.address}--${entry.special.database}`\n    };\n\n    let dbms = accounts.dbms.find(dbms => dbms.name === database.protocol);\n\n    const dbServer = accounts.raw.find(\n      account => protocolsArr.includes(account.protocol) && account.address === database.address\n    );\n\n    let server;\n\n    // a server entry exists\n    if (dbServer) {\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        ...dbServer,\n        databases: [database]\n      };\n    } else {\n      // db does not have an associated server connection so create a 'placeholder' for server\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        address: database.address,\n        databases: [database]\n      };\n    }\n\n    if (!dbms) {\n      /**\n       * Add a new dbms entry\n       *\n       * path descriptions are made here, to mimic somewhat the old mapping.\n       */\n      accounts.dbms.push({\n        name: database.protocol,\n        protocol: database.protocol,\n        path: database.protocol,\n        databases: [database],\n        servers: [server]\n      });\n\n      return;\n    }\n\n    /**\n     * DBMS exists. Update it\n     */\n    dbms.databases.push(database);\n\n    // find server entr\n    let dbmsServerEntry = dbms.servers.find(sv => sv.address === database.address);\n\n    if (!dbmsServerEntry) {\n      dbms.servers.push({ ...server, databases: [database] });\n    } else {\n      if (dbmsServerEntry.databases) {\n        dbmsServerEntry.databases.push(database);\n      } else {\n        dbmsServerEntry.databases = [database];\n      }\n    }\n  }, accounts);\n\n  // find all existing servers\n  const allServers = content.filter(entry => protocolsArr.includes(entry.protocol));\n\n  // check if servers have a database\n  // if they don't add them in a DBMS called \"OTHER\".\n  // will be removed from there as soon as they get a database\n  allServers.forEach(server => {\n    const exists = accounts.databases.find(db => db.address === server.address);\n\n    if (!exists) {\n      const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n\n      if (otherIndex > -1) {\n        accounts.dbms[otherIndex].servers.push({\n          path: `OTHER--${server.address}`,\n          ...server,\n          databases: []\n        });\n      } else {\n        accounts.dbms.push({\n          name: 'OTHER',\n          path: 'OTHER',\n          protocol: 'OTHER',\n          servers: [{ path: `OTHER--${server.address}`, ...server, databases: [] }]\n        });\n      }\n    }\n  });\n\n  const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n  if (otherIndex > -1 && accounts.dbms[otherIndex].servers.length === 0) {\n    accounts.dbms.splice(otherIndex, 1);\n  }\n  return accounts;\n}\n\nexport function mapProtocols(protocols) {\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return allowedProtocols;\n}\n\nexport function mapUpdateDBStatus(existingDb, databases, isLoading) {\n  let statuses = [...existingDb];\n\n  databases.forEach(function(db) {\n    const index = existingDb.findIndex(d => d.name === db.name);\n    if (index > -1) {\n      statuses[index] = { ...db, loading: isLoading };\n    } else {\n      statuses = [...statuses, { ...db, loading: isLoading }];\n    }\n  });\n\n  return statuses;\n}\n\nexport function mapLicenseReport(reportData) {\n  const result = (reportData || []).reduce((acc, currentItem) => {\n    if (currentItem.DETECTED_USAGES > 0) {\n      acc.USED[currentItem.NAME] = _mapUsedLicense(currentItem);\n    } else {\n      acc.UNUSED[currentItem.NAME] = currentItem;\n    }\n    acc.FEATURES.push(currentItem);\n    return acc;\n  }, { UNUSED: {}, USED: {}, FEATURES: [] });\n  console.log(result);\n  return result;\n}\n\nfunction _mapUsedLicense(license) {\n  return {\n    USAGES: license.DETECTED_USAGES,\n    VERSION: license.VERSION,\n    LAST_USE: license.LAST_USAGE_DATE,\n    FIRST_USE: license.FIRST_USAGE_DATE\n  }\n}\n","export const SystemExplorerViewMode = {\n  TILES: 'TILES',\n  TABLE: 'TABLE',\n};\n","/**\n * This file will be updated with any new module (adding the module reducer)\n */\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { sessionEffects, sessionReducer } from 'session';\nimport { dashboardReducer } from 'dashboard';\nimport { sharedEffects, sharedReducer } from 'shared/store/';\nimport { createReducer } from 'shared/lib/redux-utils';\n\nimport usersManagerReducer from 'users-manager/store/reducers';\nimport groupsReducer from 'users-manager/groups/store/reducer';\nimport explorerReducer from 'explorer/store/reducers';\nimport executiveDashboardReducer from 'executive-dashboard/store/reducers';\nimport licenseAllocationReducer from 'license-allocation/store/reducers';\nimport * as entities from 'entities/reducer';\nimport * as daemon from 'dashboard/store/reducers/daemon';\n\nimport * as invocations from 'job-process/store/reducer';\n\nimport { api } from './middlewares';\nimport { reducer as core } from './reducers';\n\nconst saga = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n  whitelist: ['entities']\n  /*\n  //Well I just whitelist entities,\n  since it's the one that has all expensive network requests\n  */\n};\n\nexport const configStore = () => {\n  const appReducer = persistReducer(persistConfig, combineReducers({\n    core,\n    session: sessionReducer,\n    dashboard: dashboardReducer,\n    shared: sharedReducer,\n    usersManager: usersManagerReducer,\n    groups: groupsReducer,\n    entities: createReducer(entities),\n    explorer: explorerReducer,\n    invocation_viewer: createReducer(invocations),\n    executiveDashboard: executiveDashboardReducer,\n    daemon: createReducer(daemon),\n    licenseAllocation: licenseAllocationReducer,\n  }));\n\n  const reducer = (state, action) => {\n    // clear redux store on logout action\n    if (action.type === '[session] LOGOUT__SUCCESS') {\n      const { routing } = state;\n      state = { routing };\n      window.location.reload();\n    }\n    return appReducer(state, action);\n  };\n\n  const effects = [...sessionEffects, ...sharedEffects];\n\n  const store = createStore(reducer, composeWithDevTools(applyMiddleware(saga, thunk, api)));\n\n  effects.forEach(effect => {\n    saga.run(effect);\n  });\n\n  return store;\n};\n\nexport default configStore();\n","import React, { createContext, useContext } from 'react';\n\nconst Context = createContext();\n\nexport default function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nSwitch.Case = Case;\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchProtocols() {\n  try {\n    const { data } = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n    return { result: data.result, protocols: data.data.protocols };\n  } catch (e) {\n    return { result: 'fail', protocols: [] };\n  }\n}\n","import React from 'react';\nimport { Switch } from 'shared/components';\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { useFormikContext } from 'formik';\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { chunk } from 'lodash';\n\n/** accepts recived parameters for invocations that are already scheduled */\nexport const ProcessParameters = ({ recieved = {}, editable }) => {\n  const { values } = useFormikContext();\n\n  /**\n   * Returns a parameter list from a given list of parameters, and a Process name\n   * This could be turned into a connected component that can take the processes from entities for itself.\n   * */\n  function selectParametersForProcess(processName, processes) {\n    const process = processes.find(item => item.name === processName);\n\n    if (process) {\n      return process.parameters.map(p => ({ ...p, value: recieved[p.name], disabled: !editable }));\n    }\n    return [];\n  }\n\n  function currentValue(allValues, parameter) {\n    if (allValues[parameter.name] !== undefined) {\n      return allValues[parameter.name];\n    }\n\n    if (allValues?.parameters && allValues?.parameters[parameter.name] !== undefined) {\n      return allValues?.parameters[parameter.name];\n    }\n\n    return undefined;\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Parameters</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Switch value={!!values.process}>\n          <Switch.Case value={false}>\n            <Column xs={12}>\n              <p>Select a process to edit parameters</p>\n            </Column>\n          </Switch.Case>\n          <Switch.Case value>\n            <Ensure type=\"form\">\n              {({ data: forms }) => (\n                <Ensure type=\"type\">\n                  {({ data: datatypes }) => (\n                    <Ensure type=\"prototype\">\n                      {({ data: prototypes }) => (\n                        <Ensure type=\"process\">\n                          {({ data }) => {\n                            const parameters = selectParametersForProcess(values.process, data);\n\n                            const normalized = parameters.map(parameter => {\n                              return normalize(parameter, datatypes, prototypes, forms);\n                            });\n\n                            /*  << +- 1 of '/' to toggle\n                            const notSupported = false;\n                            /* /\n\n                            // In old app, if at least one normalized parameter exists that is not supported,\n                            // the whole process is disregarded.\n\n                            const notSupported = normalized.some(p => !p.is_supported);\n                            // */\n\n                            const filtered = normalized\n                              .filter(p => p.editor.type !== 'hidden')\n                              .sort((a, b) => a.position - b.position); // sort parameters based on the meta.position\n\n                            // if (notSupported || filtered.length === 0) {\n                            if (filtered.length === 0) {\n                              return (\n                                <Row>\n                                  <Column>\n                                    <p>\n                                      This process contains unsuported parameters with no defaults,\n                                      and cannot be run from the web interface.\n                                    </p>\n                                  </Column>\n                                </Row>\n                              );\n                            }\n\n                            const chunks = chunk(filtered, 2);\n\n                            return chunks.map((params, index) => (\n                              <Row key={index} spacing={3}>\n                                {params.map(parameter => (\n                                  <Column key={parameter.name} xs={6}>\n                                    <Parameter\n                                      normalized={parameter}\n                                      value={currentValue(values, parameter)}\n                                      disabled={!editable}\n                                      recieved={recieved}\n                                    />\n                                  </Column>\n                                ))}\n                              </Row>\n                            ));\n                          }}\n                        </Ensure>\n                      )}\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          </Switch.Case>\n        </Switch>\n      </Section.Content>\n    </Section>\n  );\n};\n","import extractDefault from './extractDefault';\n\nimport { sortBy } from 'lodash';\n\nimport check from '../editors/field-level-validations';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'string',\n  'integer',\n  'float',\n  'uuid',\n  'unsigned_float',\n  'unsigned_integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter'\n];\n\nexport function space_begone(name) {\n  return name.replace(/\\s/g, '___');\n}\n\nexport function space_summon(name) {\n  return name.replace(/___/g, ' ');\n}\n\nexport default function normalize(param, dataTypes, prototypes, forms) {\n  const parameter = { ...param };\n\n  defaults(parameter, dataTypes, prototypes, forms);\n\n  parameter.editor = defineEditor(parameter, dataTypes, prototypes, forms);\n\n  parameter.field_name = space_begone(parameter.name);\n\n  maybeDisabled(parameter);\n\n  return parameter;\n}\n\nfunction maybeDisabled(parameter) {\n  const { appearance } = parameter.meta;\n\n  if (appearance === 'Grayed' && parameter.editor) {\n    parameter.editor.disabled = true;\n  }\n}\n\nfunction defaults(parameter, dataTypes, prototypes) {\n  parameter.position = parameter.meta?.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n\n  // hardcode stuff for replvalues params\n  if (parameter.data_type === 'optional_dict' && parameter.name === 'replvalues') {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n  } else if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    /**\n     * TODO: this was done to help exclude parameters like, any\n     * Or other stuff that cannot be parsed correctly\n     *\n     * Will remove them for now.\n     * Any types mostly are multiline input data, so we'll default them to that.\n     */\n    parameter.is_supported = false;\n\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          /**\n           * Allow support for all types of parameters, defaulting to a Text multiline.\n           */\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n\n          parameter.editor = {\n            type: 'string',\n            multiline: true,\n            deflt: ''\n          };\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.deflt = 'TEXT';\n  }\n\n  // hardcode default value for oformat parameter to \"TEXT\"\n  // was decided to be done on the UI because for the BE alot of processess had to be manually changed\n  // and at the moment we are pressed on time\n  if (parameter.name === 'oformat') {\n    parameter.deflt = parameter.value ? parameter.value : 'TEXT';\n  }\n}\n\nfunction parseProtocols(protocols) {\n  if (!protocols) {\n    return [];\n  }\n\n  if (!Array.isArray(protocols)) {\n    return [protocols];\n  }\n\n  return protocols.reduce((bucket, protocol) => {\n    // quick and dirty (as he said)\n    if (protocol === 'DBMS') {\n      bucket.push('MSSQL', 'MYSQL', 'ORACLE', 'PGSQL');\n    } else {\n      bucket.push(protocol);\n    }\n\n    return bucket;\n  }, []);\n}\n\nfunction defineEditor(parameter, dataTypes, prototypes, forms) {\n  if (!parameter.is_supported) {\n    return { type: 'hidden', disabled: true, value: '' };\n    // return { type: 'text', disabled: true, value: '' };\n  }\n\n  const { meta } = parameter;\n  const { editor: metaEditor, appearance } = meta;\n\n  if (appearance === 'Hidden') {\n    return { type: 'hidden' };\n  }\n\n  if (metaEditor === 'Hidden') {\n    return { type: 'text', disabled: true };\n  }\n\n  const prototype = prototypes.find(proto => proto.name === parameter.data_type);\n\n  if (prototype) {\n    const options = forms\n      .filter(form => form.prototype === prototype.name)\n      .map(form => ({ label: form.name, value: form.name }));\n    return {\n      type: 'select',\n      options\n    };\n  }\n\n  const dataType = dataTypes.find(type => type.name === parameter.data_type);\n\n  if (!dataType) {\n    return { type: 'text', disabled: true, readOnly: true };\n  }\n\n  if (dataType.enumerations !== null && dataType.enumerations.length > 0) {\n    const enumerations = sortBy(dataType.enumerations, 'weight');\n    const options = enumerations.map(({ label }) => ({ label, value: label }));\n\n    return { type: 'select', options };\n  }\n\n  if (\n    dataType.name.startsWith('mas0000.sys.account.conn.') ||\n    dataType.name === 'mas0000.sys.account.vsphere'\n  ) {\n    return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n  }\n\n  switch (dataType.name) {\n    case 'ename':\n      switch (metaEditor) {\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'fqname' };\n      }\n    case 'string':\n      switch (metaEditor) {\n        case 'password':\n          return { type: 'password' };\n        case 'fqname':\n        case 'ename':\n          return { type: 'fqname' };\n        case 'multiline':\n          // return { type: 'text', multiline: true };\n          return { type: 'multiline' };\n        case 'key':\n          return { type: 'rsa', multiline: true };\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'text' };\n      }\n    case 'boolean':\n      return { type: 'boolean' };\n    case 'integer':\n      return { type: 'number' };\n    case 'float':\n      return { type: 'number', validate: [check.signed_float] };\n    case 'uuid':\n      return { type: 'uuid' };\n    case 'unsigned_float':\n      return { type: 'number', validate: [check.unsigned_float] };\n    case 'unsigned_integer':\n      return { type: 'number', validate: [check.unsigned_int] };\n    case 'mas0000.os.exec.system_user':\n      return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n    case 'mas0000.sys.email_address':\n      return { type: 'email' };\n    case 'mas0000.sys.phone_number':\n      return { type: 'phone' };\n    case 'mas0000.sys.process.process':\n      return { type: 'process' };\n    case 'mas0000.sys.process.variadic_parameter':\n      return { type: 'variadic_parameter' /** needsSelectedProcessName */ };\n    case 'optional_dict':\n      // hardcord for replvalues\n      if (parameter.name === 'replvalues') {\n        return { type: 'replvalues' };\n      }\n      return { type: 'text', multiline: true };\n    default:\n      return { type: 'text', multiline: true };\n  }\n\n  // return { type: 'hidden' };\n}\n","import React from 'react';\nimport Groups from '../../components/notification-groups/notification-groups';\nimport Users from '../../components/notification-users/notification-users';\nimport Events from '../../components/notification-events/notification-events';\nimport NotificationList from '../../components/notification-list/notification-list';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport { Button } from 'shared/components/controls';\n\nimport classnames from 'classnames';\n\nimport './notifications.scss';\nimport { RestClient } from 'shared/lib/rest';\n\nexport class Notifications extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { recievedData } = props;\n\n    const startFullLog = [1, 3, 5, 7];\n    const completionFullLog = [2, 3, 6, 7];\n    const abnormalFullLog = [4, 6, 7];\n\n    this.state = {\n      groupsData: [],\n      usersData: [],\n      jobStart: {\n        notice: false,\n        fullLog: startFullLog.includes(recievedData.events)\n      },\n      jobCompletion: {\n        notice: false,\n        fullLog: completionFullLog.includes(recievedData.events)\n      },\n      abnormalEvent: {\n        notice: false,\n        fullLog: abnormalFullLog.includes(recievedData.events)\n      },\n      isEditing: false\n    };\n  }\n\n  async componentDidMount() {\n    const { recievedData = { users: [] } } = this.props;\n\n    RestClient.get('/group', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.groups) {\n        this.setState({\n          groupsData: res.data.data.groups.map(item => {\n            return { data: item, selected: false, displayIcons: false };\n          })\n        });\n      }\n    });\n    RestClient.get('/user', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.users) {\n        this.setState({\n          usersData: res.data.data.users.map(item => {\n            return {\n              data: item,\n              selected: recievedData.users.includes(item.name),\n              display: false\n            };\n          })\n        });\n      }\n    });\n  }\n\n  render() {\n    const { usersData, groupsData, jobStart, jobCompletion, abnormalEvent, isEditing } = this.state;\n    const selectedGroup = this.getSelectedGroup();\n    const areUsersSelected = usersData.find(item => item.selected);\n    const isClearActionAvailable = this.checkIfAllUsersSelectedCurrentGroup();\n    return (\n      <div\n        className={classnames('monitor-and-notifications', {\n          disabled: this.props.disabled\n        })}\n      >\n        {isEditing ? (\n          <div className=\"notifications-editor\">\n            <Groups onSelect={this.onSelectGroup} groups={groupsData} />\n            <Users\n              onSelect={this.onSelectUser}\n              onSelectUserAction={this.onSelectUserAction}\n              isClearActionAvailable={isClearActionAvailable}\n              users={usersData}\n              isGroupSelected={!!selectedGroup}\n              eventTypeIcons={this.getEventTypeIcons()}\n            />\n            <div className=\"right-side-container\">\n              <Events\n                jobStart={jobStart}\n                jobCompletion={jobCompletion}\n                abnormalEvent={abnormalEvent}\n                onSelect={this.onSelectEventType}\n                areUsersSelected={areUsersSelected}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  this.props.onApply(mappedState(this.state));\n                  this.toggleApplyButton();\n                }}\n              >\n                Apply\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <NotificationList\n            users={usersData}\n            eventTypeIcons={this.getEventTypeIcons()}\n            toggleApplyButton={this.toggleApplyButton}\n            disabled={this.props.disabled}\n          />\n        )}\n      </div>\n    );\n  }\n\n  getEventTypeIcons = () => {\n    const { jobStart, jobCompletion, abnormalEvent } = this.state;\n    const icons = [];\n    if (jobStart.notice || jobStart.fullLog) {\n      icons.push(<PlayCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (jobCompletion.notice || jobCompletion.fullLog) {\n      icons.push(<CheckCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (abnormalEvent.notice || abnormalEvent.fullLog) {\n      icons.push(<ErrorOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    return icons;\n  };\n\n  toggleApplyButton = () => {\n    this.setState(state => ({ isEditing: !state.isEditing }));\n  };\n\n  checkIfAllUsersSelectedCurrentGroup = () => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      return this.state.usersData\n        .filter(item => selectedGroup.data.users.indexOf(item.data.name) !== -1)\n        .every(item => item.selected);\n    }\n  };\n\n  onSelectGroup = group => {\n    this.setState(state => ({\n      groupsData: state.groupsData.map(item => ({\n        ...item,\n        selected: group.data.name === item.data.name\n      })),\n      usersData: state.usersData.map(item => ({\n        ...item,\n        display: group.data.users.indexOf(item.data.name) !== -1\n      }))\n    }));\n  };\n\n  onSelectUser = user => {\n    /* eslint-disable react/no-access-state-in-setstate */\n    const usersData = this.state.usersData.map(item => {\n      if (item.data.name === user.data.name) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    this.setState({ usersData, groupsData: this.setFlagGroupsIfContainSelectedUser(usersData) });\n  };\n\n  onSelectUserAction = shouldClear => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      const usersData = this.state.usersData.map(item => {\n        if (selectedGroup.data.users.indexOf(item.data.name) !== -1) {\n          return { ...item, selected: !shouldClear };\n        }\n        return item;\n      });\n      this.setState({\n        usersData,\n        groupsData: this.setFlagGroupsIfContainSelectedUser(usersData)\n      });\n    }\n  };\n\n  setFlagGroupsIfContainSelectedUser = usersData => {\n    return this.state.groupsData.map(group => ({\n      ...group,\n      displayIcons: !!usersData.find(user => {\n        return user.selected && user.data.member_of.indexOf(group.data.name) !== -1;\n      })\n    }));\n  };\n\n  onSelectEventType = (type, key) => {\n    this.setState(state => ({ [type]: { ...state[type], [key]: !state[type][key] } }));\n  };\n\n  getSelectedGroup() {\n    return this.state.groupsData.find(item => item.selected);\n  }\n}\n\nexport default Notifications;\n\n/**\n * State mapper for backend request.\n *\n * events is a composite number,\n *\n * notice unsuported for now\n * groups are redundant now that the ui preselects all users in a group.\n */\n/* eslint-disable no-unused-vars */\nfunction mappedState({ groupsData, usersData, jobStart, jobCompletion, abnormalEvent }) {\n  const users = usersData.filter(user => user.selected).map(user => user.data.name);\n\n  let events = 0;\n\n  if (jobStart.fullLog) {\n    events += 1;\n  }\n\n  if (jobCompletion.fullLog) {\n    events += 2;\n  }\n\n  if (abnormalEvent.fullLog) {\n    events += 4;\n  }\n\n  return { users, events };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getProcess(name) {\n  return RestClient.get(`/process/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchProcess(name, body) {\n  return RestClient.patch(`/process/${name}`, body);\n}\n","export const DISPLAY_FORMAT = 'L';\nexport const ISO_FORMAT = 'YYYY-MM-DD';\nexport const ISO_MONTH_FORMAT = 'YYYY-MM'; // TODO delete this line of dead code on next breaking change\n\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const VERTICAL_ORIENTATION = 'vertical';\nexport const VERTICAL_SCROLLABLE = 'verticalScrollable';\n\nexport const NAV_POSITION_BOTTOM = 'navPositionBottom';\nexport const NAV_POSITION_TOP = 'navPositionTop';\n\nexport const ICON_BEFORE_POSITION = 'before';\nexport const ICON_AFTER_POSITION = 'after';\n\nexport const INFO_POSITION_TOP = 'top';\nexport const INFO_POSITION_BOTTOM = 'bottom';\nexport const INFO_POSITION_BEFORE = 'before';\nexport const INFO_POSITION_AFTER = 'after';\n\nexport const ANCHOR_LEFT = 'left';\nexport const ANCHOR_RIGHT = 'right';\n\nexport const OPEN_DOWN = 'down';\nexport const OPEN_UP = 'up';\n\nexport const DAY_SIZE = 39;\nexport const BLOCKED_MODIFIER = 'blocked';\nexport const WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nexport const FANG_WIDTH_PX = 20;\nexport const FANG_HEIGHT_PX = 10;\nexport const DEFAULT_VERTICAL_SPACING = 22;\n\nexport const MODIFIER_KEY_NAMES = new Set(['Shift', 'Control', 'Alt', 'Meta']);\n","import React from 'react';\n\nimport { WantParameter } from './wishes';\n\nexport function RepeatableParameter({ normalized, ...others }) {\n  return <WantParameter parameter={normalized} {...others} />;\n}\n\nexport const Parameter = ({ normalized, ...others }) => {\n  if (normalized.is_repeatable) {\n    return <RepeatableParameter {...others} normalized={normalized} />;\n  }\n\n  return <WantParameter {...others} parameter={normalized} />;\n};\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './simple-search-input.local.scss';\n\nexport const SimpleSearchInput = ({ value, onChange, ...props }) => {\n  return (\n    <div className=\"search-input\">\n      <i className=\"search-icon-slot\">\n        <SearchIcon fontSize=\"default\" />\n      </i>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"search-input-control\"\n        placeholder=\"Search\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nSimpleSearchInput.propTypes = {\n  value: string,\n  onChange: func\n};\n\nexport default SimpleSearchInput;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport './Header.local.scss';\n\nexport const Header = ({ title, children, stretchContent }) => (\n  <header className={`header ${stretchContent ? 'stretched-content' : ''}`}>\n    { title && <h1 className=\"header-title\">{title}</h1>}\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.dashboard;\n\nexport const filterStatusSelector = createSelector(localState, state => state.get('filterStatus'));\n","import { filterStatusActions } from './filter-status.action';\n\nimport { checkDaemon } from 'shared/api/daemon';\n\nexport const actions = {\n  ...filterStatusActions\n};\n\n/** TODO: The Above actions should be expanded to the new structure at some point */\n\nexport function checkDeamonStatus() {\n  return function daemon_thunk(dispatch) {\n    dispatch({\n      type: 'DAEMON_STATUS',\n      promise: checkDaemon()\n    });\n  };\n}\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDns } from '@mdi/js';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport './AddServerCard.local.scss';\n\nexport const AddServerCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Server\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewServerContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewServer = ({ server = { protocol: 'SSH' }, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const { actions } = useContext(ModalContext);\n  const formRef = useRef();\n\n  useEffect(() => {\n    fetchProtocols().then(resp => {\n      setState({\n        loading: false,\n        result: resp.result,\n        protocols: resp.protocols || []\n      });\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Add New Server\"\n        desc=\"Input the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading protocols list</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <ServerForm\n                server={server}\n                handleSubmission={reloadAccounts}\n                protocols={state.protocols}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Paper.Content>\n                <Result>\n                  <Result.Text>Could not load protocols list.</Result.Text>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button color=\"primary\" onClick={actions.close}>\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewServerContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewServer);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDatabase } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Paper, Center } from 'shared/components/layout';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport './AddDatabaseCard.local.scss';\n\nexport const AddDatabaseCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Database\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewDatabaseContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewDatabase = ({ account, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Add New Database\"\n        desc=\"Input the database connection information\"\n        formikRef={formRef}\n      />\n\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading Required Protocols and Privilege Modes</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <DatabaseForm\n                protocols={state.protocols}\n                modes={state.modes}\n                account={account}\n                handleSubmission={reloadAccounts}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Center>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load required protocols or privilege modes list.\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewDatabaseContainer = connect(\n  state => () => {\n    const path = state.explorer.state.path.split('--');\n    return {\n      account: {\n        protocol: path[0],\n        address: path[1]\n      }\n    };\n  },\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewDatabase);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { postFile } from 'shared/api/accounts';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { downloadFile } from 'shared/lib/download-file/download-file';\nimport { CONSTANTS } from '../../../config';\n\nimport './ImportCSV.local.scss';\n\nexport const ImportCSV = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Import from CSV\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <ImportCSVContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const ImportCSVFile = ({ reloadAccounts }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState('');\n  const fileName = selectedFile?.name || 'No file chosen';\n\n  const onChangeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadFile = () => {\n    if (!selectedFile) {\n      setResult('error');\n\n      return;\n    }\n    setResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedFile);\n\n    postFile(data)\n      .then(() => {\n        setResult('');\n        reloadAccounts();\n      })\n      .catch(() => {\n        // at the current BE version, even though the call is a success\n        // a \"false\" error is returned, so the reload account call should be made\n        setResult('');\n        reloadAccounts();\n      });\n  };\n\n  return (\n    <Paper\n      style={{\n        width: '50vw',\n        height: '50vh'\n      }}\n    >\n      <ModalHeader icon={<PostAddIcon />} title=\"Import CSV\" />\n      <Switch value={result}>\n        <Switch.Case value=\"\">\n          <div className=\"container\">\n            <label htmlFor=\"file-upload\" className=\"csv-file-upload\">\n              Choose file\n              <input type=\"file\" id=\"file-upload\" name=\"csv\" accept=\".csv\" onChange={onChangeHandler} />\n            </label>\n            <LimitlessTooltip placement=\"bottom\" title={fileName}>\n              <span className=\"file-name\">{fileName}</span>\n            </LimitlessTooltip>\n          </div>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => downloadFile(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_CSV_TEMPLATE)}>\n                Download template\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button onClick={uploadFile}>Upload</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"loading\">\n          <Center>\n            <Loader>Uploading file...</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value=\"error\">\n          <Result type=\"fail\">\n            <Result.Text>You forgot to select a file</Result.Text>\n          </Result>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => setResult('')}>Back</Button>\n            </Paper.Footer.Left>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const ImportCSVContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(ImportCSVFile);\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function deleteEntity(name, type) {\n  try {\n    const { data } = await RestClient.delete(`/${type}/${name}`);\n\n    return { result: data.result };\n  } catch (e) {\n    return { result: 'fail' };\n  }\n}\n\nexport function deleteInvocation(uuid) {\n  return RestClient.delete(`/invocation/${uuid}`);\n}\n","export function mapScheduledNames(allScheduled = []) {\n  const names = allScheduled.reduce((acc, entry) => {\n    const nameArr = entry.name.split('.');\n    const name = nameArr[nameArr.length - 1];\n    acc.push(name);\n    return acc;\n  }, []);\n\n  return names;\n}\n","export const SecurityAreas = {\n  SCHEDULE: 'schedule',\n};\n","import React from 'react';\nimport { bool, node, string, array, func } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiContentSave } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport './ActionCard.local.scss';\n\nexport class ActionCard extends React.PureComponent {\n  render() {\n    const {\n      settings,\n      status,\n      icon,\n      label,\n      addOnly,\n      options,\n      onClick,\n      readOnlyOptions,\n      lastBackup,\n      type = '',\n      statusInfo = ''\n    } = this.props;\n\n    return (\n      <div className={classnames('action-card', { addable: addOnly })}>\n        <header>\n          {lastBackup && (\n            <div className=\"last-backup\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiContentSave} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{lastBackup}</span>\n            </div>\n          )}\n          {settings && <div className=\"settings\">{settings}</div>}\n        </header>\n        <div className=\"main-icon\" onClick={onClick} role=\"presentation\">\n          {status && (\n            <LightTooltip placement=\"bottom\" title={capitalizeFirstLetter(statusInfo)}>\n              <div className={`status ${status} ${type}`} />\n            </LightTooltip>\n          )}\n          {icon}\n        </div>\n        <div className=\"main-label\">{label}</div>\n        {options &&\n          options.map((option, index) => (\n            <div\n              className={classnames('option', { disabled: option.disabled })}\n              key={`${option.label}-${index}`}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n            </div>\n          ))}\n        {readOnlyOptions &&\n          readOnlyOptions.map(option => (\n            <div\n              className=\"option presentation\"\n              key={option.label}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              {option.fillable && option.percentage && (\n                <div className=\"filled\" style={{ width: `${option.percentage}%` }} />\n              )}\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n              {option.percentage && <div className=\"end-icon\">{option.percentage}%</div>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nActionCard.propTypes = {\n  settings: node,\n  icon: node,\n  label: string,\n  addOnly: bool,\n  options: array,\n  onClick: func,\n  status: string,\n  readOnlyOptions: array\n};\n\nexport default ActionCard;\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './CardsLayout.local.scss';\n\nexport class CardsLayout extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"container\">{children}</div>;\n  }\n}\n\nCardsLayout.propTypes = {\n  children: node\n};\n\nexport default CardsLayout;\n","import React from 'react';\n\nexport function want(map, Unresolved = () => null, keygen = key => key) {\n  function settler(props) {\n    const key = keygen(props);\n    return map[key] ?? Unresolved;\n  }\n\n  return settler;\n}\n\nexport function wantComponent(settler) {\n  function Picker(props) {\n    const Picked = settler(props);\n\n    return <Picked {...props} />;\n  }\n\n  return Picker;\n}\n","import React, { useRef, useState } from 'react';\nimport { string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, Form, Formik } from 'formik';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, Input } from 'shared/components/controls';\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Center } from 'shared/components';\nimport './ChangePassword.local.scss';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const ChangePassword = ({ user, useLinkTrigger }) => {\n  const [open, setOpen] = useState(false);\n  /**\n   * Backend call result\n   */\n  const [result, setResult] = useState({ done: false, error: undefined });\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult({ done: false, error: undefined });\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const parseError = error => {\n    if (\n      error?.response?.data?.messages &&\n      error.response.data.messages.length > 0 &&\n      error.response.data.messages[0]?.text\n    ) {\n      return error.response.data.messages[0]?.text.split('\\n')[0];\n    }\n\n    return 'Password Change Failed!';\n  };\n\n  return (\n    <>\n      {!useLinkTrigger && (\n        <Button color=\"primary\" onClick={modalActions.open}>\n          Change Password\n        </Button>\n      )}\n      {useLinkTrigger && (\n        <a role=\"presentation\" onClick={modalActions.open}>\n          Change Password\n        </a>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '600px',\n            height: '450px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-password\">\n                <GroupIcon />\n              </Avatar>\n            }\n            title=\"Change Password\"\n            formikRef={formRef}\n          />\n          {result.done ? (\n            <>\n              <Center>\n                <Result type={result.error ? 'fail' : 'success'}>\n                  <Result.Text>{result.error ? result.error : 'Password Changed!'}</Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </>\n          ) : (\n            <Formik\n              initialValues={{\n                password: '',\n                confirm: ''\n              }}\n              validate={values => {\n                const errors = {};\n\n                if (!values.password) {\n                  errors.password = 'Field is required';\n                }\n\n                if (!values.confirm) {\n                  errors.confirm = 'Please reenter your new password';\n                }\n\n                if (values.password !== values.confirm) {\n                  errors.confirm = 'Passwords do not match';\n                }\n\n                if (values.password) {\n                  if (/[$\\\\/\":;']/.test(values.password)) {\n                    errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n                  } else if (values.password.length < 8) {\n                    errors.password = 'Password must contain at least eight characters';\n                  } else if (!/[a-z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a lower case letter (ex: a, b, etc.)';\n                  } else if (!/[A-Z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a upper case letter (ex: A, B, etc.)';\n                  } else if (!/[0-9]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n                  } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n                  }\n                }\n\n                return errors;\n              }}\n              onSubmit={async (values, actions) => {\n                actions.setSubmitting(true);\n\n                try {\n                  await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`, {\n                    password: values.password\n                  });\n\n                  actions.setSubmitting(false);\n                  setResult({ done: true });\n                } catch (e) {\n                  actions.setSubmitting(false);\n                  setResult({ done: true, error: parseError(e) });\n                }\n              }}\n              innerRef={formRef}\n            >\n              {({ dirty, isSubmitting, isValid, handleSubmit }) => (\n                <>\n                  <Paper.Content scrollable>\n                    <Form className=\"password-form\">\n                      <Row>\n                        <Field name=\"password\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                required\n                                label=\"Password\"\n                                placeholder=\"New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                      <Row>\n                        <Field name=\"confirm\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                required\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                label=\"Confirm Password\"\n                                placeholder=\"Confirm New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                    </Form>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        disabled={!dirty || !isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </>\n              )}\n            </Formik>\n          )}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nChangePassword.propTypes = {\n  user: string\n};\n\nexport const ChangePasswordContainer = connect(state => {\n  const user = selectedUser(state);\n\n  return { user: user.name };\n})(ChangePassword);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import { creators } from 'shared/lib/redux-utils';\nimport { LOAD_AVAILABLE_SERVERS, LOAD_DB_LICENSES, LOAD_LICENSE_TARGETS, LOAD_LICENSES } from '../actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nconst licensesInfoMock = {\n  license_id: 1,\n  product_name: 'Oracle ADV',\n  product_id: 1,\n  metric: 1,\n  lic_total: 5,\n  lic_assigned: 3,\n  lic_avail: 2,\n};\n\nconst licenseTargetsMock = {\n  server_id: 1,\n  server: 'Oracle Base',\n  database: 'ORA112SE',\n  quantity: 5,\n};\n\nexport function loadLicenseAllocationThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSES));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO);\n      dispatch(creators.success(LOAD_LICENSES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSES, error));\n    }\n  };\n}\n\nexport function loadDbLicensesThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_LICENSES));\n    try {\n      // const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO, { db });\n      // const licenseData = JSON.parse(response.data.data);\n      dispatch(creators.success(LOAD_DB_LICENSES, [licensesInfoMock]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_LICENSES, error));\n    }\n  };\n}\n\nexport function loadLicenseTargetsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSE_TARGETS));\n    try {\n      // const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO, { db });\n      // const licenseData = JSON.parse(response.data.data);\n      dispatch(creators.success(LOAD_LICENSE_TARGETS, [licenseTargetsMock]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSE_TARGETS, error));\n    }\n  };\n}\n\nexport function loadAvailableServersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_AVAILABLE_SERVERS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.AVAILABLE_SERVERS);\n      const availableServersData = response.data.data;\n      dispatch(creators.success(LOAD_AVAILABLE_SERVERS, availableServersData));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_AVAILABLE_SERVERS, error));\n    }\n  };\n}\n\nexport function updateLicenseAssignmentThunk(isInitialAssignment, payload) {\n  return async () => {\n    try {\n      if (isInitialAssignment) {\n        await RestClient.post(CONSTANTS.BASE.ENDPOINTS.SUBMIT_LICENSE_ASSIGNMENT, payload);\n      } else {\n        await RestClient.put(CONSTANTS.BASE.ENDPOINTS.UPDATE_LICENSE_ASSIGNMENT, payload);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(error);\n    }\n  };\n}\n","import { createSelector } from 'reselect';\n\nexport const getLicensesData = createSelector(\n  [(state) => state.licenseAllocation.licenses],\n  (licenses) => licenses\n);\n\nexport const licensesLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.licenses.loading],\n  (isLoading) => isLoading\n);\n\nexport const getDbLicensesData = createSelector(\n  [(state) => state.licenseAllocation.dbLicenses],\n  (licenses) => licenses\n);\n\nexport const dbLicensesLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.dbLicenses.loading],\n  (isLoading) => isLoading\n);\n\nexport const getLicenseTargetsData = createSelector(\n  [(state) => state.licenseAllocation.licenseTargets],\n  (licenses) => licenses\n);\n\nexport const licenseTargetsLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.licenseTargets.loading],\n  (isLoading) => isLoading\n);\n\nexport const getAvailableServersData = createSelector(\n  [(state) => state.licenseAllocation.availableServers],\n  (licenses) => licenses\n);\n\nexport const availableServersLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.availableServers.loading],\n  (isLoading) => isLoading\n);\n","import React, { createContext } from 'react';\nimport uuid from 'uuid';\nimport MUIModal from '@material-ui/core/Modal';\nimport { bool, string, oneOfType, node, func, shape } from 'prop-types';\n\nimport './Modal.local.scss';\n\nimport { ModalHeader } from '../ModalHeader/ModalHeader';\n\nexport const ModalContext = createContext({});\n\nexport const Modal = ({ open, actions, id: providedId, children }) => {\n  const id = providedId || uuid();\n  const aria = {\n    'aria-labelledby': `${id}-modal-title`,\n    'aria-describedby': `${id}-modal-description`\n  };\n\n  return (\n    <ModalContext.Provider value={{ aria, actions }}>\n      <MUIModal {...aria} open={open} onClose={actions?.close} disableBackdropClick>\n        <div className=\"overlay\">\n          {typeof children === 'function' ? children({ id, aria, open, actions }) : children}\n        </div>\n      </MUIModal>\n    </ModalContext.Provider>\n  );\n};\n\nModal.propTypes = {\n  actions: shape({\n    open: func,\n    close: func\n  }),\n  children: oneOfType([node, func]),\n  open: bool,\n  id: string\n};\n\nModal.ModalHeader = ModalHeader;\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getNamespace(name) {\n  return RestClient.get(`/namespace/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchNamespace(name, body) {\n  return RestClient.patch(`/namespace/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postNamespace(body) {\n  return RestClient.post('/namespace', body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postForm(name, body) {\n  return RestClient.post(`/form/${name}/clone`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function createForm(body) {\n  return RestClient.post('/form', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function updateForm(name, body) {\n  return RestClient.patch(`/form/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useReducer, createContext } from 'react';\n\nimport _ from 'lodash';\n\nimport { produce } from 'immer';\n\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { QualifiedName, FormPrototypeSelect } from 'shared/components/form/editors/Custom';\n\nimport { space_summon } from 'shared/components/form/parameters/normalizeParameter';\n\nimport { FormParameters } from './FormParameters';\n\nimport { groupForm, ungroupForm } from './utils';\n\nimport { createForm, updateForm } from 'shared/api/form';\n\nconst groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_GROUP_INSTANCE': {\n      return produce(state, draft => {\n        draft.groups[action.pointers.group].instances.push(action.instance);\n      });\n    }\n\n    case 'REMOVE_GROUP_INSTANCE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances.splice(pointers.instance, 1);\n      });\n    }\n    case 'ADD_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        const field =\n          draft.groups[pointers.group].instances[pointers.instance].fields[pointers.field];\n\n        field.values.push({ instance: field.values.length, value: null });\n      });\n    }\n    case 'REMOVE_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances[pointers.instance].fields[\n          pointers.field\n        ].values.splice(action.index, 1);\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const PackedContext = createContext({ groups: [] });\n\nexport function FormEditor({ isNew, form, prototype, setResult, formRef }) {\n  const initialPacked = groupForm(prototype, _.cloneDeep(form));\n  /** Prepare initial relative name */\n  const split_name = form?.name?.split?.('.') || [''];\n\n  initialPacked.name = _.last(split_name);\n\n  const [packed, dispatch] = useReducer(groupsReducer, initialPacked);\n\n  const contextValue = { packed, dispatch };\n\n  return (\n    <PackedContext.Provider value={contextValue}>\n      <Formik\n        initialValues={{}}\n        validateOnChange={false}\n        onSubmit={(values, actions) =>\n          handleSubmit({\n            form,\n            packed,\n            isNew,\n            prototype,\n            values,\n            actions,\n            setResult\n          })}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Form details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <QualifiedName name=\"form_name\" label=\"Name\" value={packed.name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"description\"\n                          label=\"Description\"\n                          value={packed.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column>\n                          <FormPrototypeSelect\n                            value={prototype?.name}\n                            disabled\n                            label=\"Form\"\n                            name=\"prototype\"\n                          />\n                        </Column>\n                      </Row>\n                      <FormParameters packed={packed} prototype={prototype} />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </PackedContext.Provider>\n  );\n}\n\nasync function handleSubmit({\n  prototype,\n  packed,\n  values,\n  setResult,\n  isNew,\n  form\n}) {\n  const { form_name, description, prototype: protoName, ...fields } = values;\n\n  const extracted = extractFieldInfo(fields);\n\n  const exclusions = [null, 'None', ''];\n\n  const filteredExtractions = extracted.filter(entry => !exclusions.includes(entry.val));\n\n  const packedCopy = _.cloneDeep(packed);\n\n  /**\n   * Update name and description\n   */\n\n  /**\n   * extract and remap field values.\n   */\n  filteredExtractions.forEach(entry => {\n    const path = `groups[${entry.group}].instances[${entry.instance}].fields[${entry.field}].values[${entry.index}].value`;\n\n    _.set(packedCopy, path, entry.value);\n  });\n\n  /**\n   * unpack and prepare for sending\n   */\n  const unpacked = ungroupForm(packedCopy);\n\n  /**\n   * Very Important!\n   * Please read.\n   * Another cleanup process is needed.\n   * So there cannot be values for repeatable parameters where there is an empty array.\n   * It requires for some DAMNED reason, to have at least one null value.\n   */\n  unpacked.values = unpacked.values.map(value => {\n    if (Array.isArray(value.value)) {\n      /** for some reason, it's not removed from the first iteration for values. */\n      const filtered = { ...value, value: value.value.filter(v => !!v) };\n\n      if (filtered.value.length === 0) {\n        filtered.value = [null];\n      }\n\n      return filtered;\n    }\n\n    return value;\n  });\n\n  const name = form_name;\n\n  unpacked.name = name;\n\n  if (!isNew) {\n    const rename = [..._.initial(form.name.split('.')), form_name].join('.');\n    if (rename !== form.name) {\n      unpacked.rename = rename;\n      delete unpacked.name;\n    }\n  }\n\n  unpacked.description = description;\n  unpacked.prototype = protoName;\n  unpacked.version = prototype.version;\n\n  const request = isNew ? createForm : updateForm;\n\n  const request_args = [unpacked];\n\n  if (!isNew) {\n    // prepend name to request arguments.\n    request_args.unshift(form.name);\n  }\n\n  try {\n    await request(...request_args);\n    setResult('success');\n  } catch (e) {\n    setResult('fail');\n  }\n}\n\n// /** berry important :) */\nfunction extractFieldInfo(all) {\n  const key_struct = /^group-(\\d+)-instance-(\\d+)-field-(\\d+)-value-(\\d+)---(\\w+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      name: space_summon(matched[5]),\n      index: matched[4],\n      field: matched[3],\n      instance: matched[2],\n      lower: matched[1],\n      group: matched[1],\n      value\n    };\n  });\n}\n","import moment from 'moment';\n\nexport function mapAllServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const entryInfo = {\n      name: entry.srvname,\n      model: entry.model,\n      version: entry.version,\n      sid: entry.sid,\n      collDate: entry.collDate,\n      nrCores: entry.Ncore,\n      totalDBs: 1,\n      eelic_count: entry.eelic_count,\n      selic_count: entry.selic_count,\n      sids: [entry],\n      installedOptions: {\n        aa_count: entry.aa_count ? 1 : 0,\n        ac_count: entry.ac_count ? 1 : 0,\n        as_count: entry.as_count ? 1 : 0,\n        dv_count: entry.dv_count ? 1 : 0,\n        mt_count: entry.mt_count ? 1 : 0,\n        adg_count: entry.adg_count ? 1 : 0,\n        rac_count: entry.rac_count ? 1 : 0,\n        olap_count: entry.olap_count ? 1 : 0,\n        part_count: entry.part_count ? 1 : 0,\n        in_mem_db_count: entry.in_mem_db_count ? 1 : 0,\n        rac_one_node_count: entry.rac_one_node_count ? 1 : 0,\n        real_app_test_count: entry.real_app_test_count ? 1 : 0\n      }\n    };\n\n    const totalInstalledOptions = Object.values(entryInfo.installedOptions).reduce((a, b) => a + b);\n    entryInfo.sids = [{ ...entry, totalInstalledOptions }];\n    entryInfo.totalInstalledOptions = totalInstalledOptions;\n\n    acc.push(entryInfo);\n    return acc;\n  }, []);\n\n  return groupServers(serversInfo).sort((a, b) => a.nrCores - b.nrCores);\n}\n\nexport function mapVirtualServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const index = acc.findIndex(sv => sv.vcenterservername === entry.vcenterservername);\n\n    if (index > -1) {\n      if (\n        entry.vmname !== null ||\n        entry.vmguesthostname !== null ||\n        entry.vmguestos !== null ||\n        entry.vmipaddress !== null\n      ) {\n        acc[index].hosts_nr += 1;\n      }\n    } else {\n      acc.push({\n        vcenterservername: entry.vcenterservername,\n        cpu: entry.cpu,\n        cpucores: entry.cpucores,\n        hosts_nr:\n          entry.vmname !== null ||\n          entry.vmguesthostname !== null ||\n          entry.vmguestos !== null ||\n          entry.vmipaddress !== null\n            ? 1\n            : 0\n      });\n    }\n    return acc;\n  }, []);\n\n  return serversInfo;\n}\n\nfunction groupServers(servers) {\n  return Object.values(servers.reduce((acc, entry) => {\n    if (!acc[entry.name]) {\n      acc[entry.name] = entry;\n    } else {\n      const allSids = [...acc[entry.name].sids, ...entry.sids]\n        .sort((o1, o2) => -moment(o1.collDate).diff(moment(o2.collDate)));\n\n      acc[entry.name] = entry;\n      acc[entry.name].sids = allSids;\n      acc[entry.name].collDate = allSids[0].collDate;\n    }\n    return acc;\n  }, {}));\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './center.local.scss';\n\nexport class CenterComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport default CenterComponent;\n\nCenterComponent.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nCenterComponent.defaultProps = {\n  className: 'center-container'\n};\n","import moment from 'moment';\n\nexport function isBeforeDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n\n  const aYear = a.year();\n  const aMonth = a.month();\n\n  const bYear = b.year();\n  const bMonth = b.month();\n\n  const isSameYear = aYear === bYear;\n  const isSameMonth = aMonth === bMonth;\n\n  if (isSameYear && isSameMonth) return a.date() < b.date();\n  if (isSameYear) return aMonth < bMonth;\n  return aYear < bYear;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { string, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Overflow.scss';\n\nexport const Overflow = ({ className, component, children, variant }) => {\n  const nodeRef = useRef(null);\n  const [scrollableX, setScrollableX] = useState(false);\n  const [scrollableY, setScrollableY] = useState(false);\n  const [scrolledX, setScrolledX] = useState(false);\n  const [scrolledY, setScrolledY] = useState(false);\n\n  const Tag = component || 'div';\n\n  const onScroll = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolledY) {\n          setScrolledY(true);\n        }\n      } else if (scrolledY) {\n        setScrolledY(false);\n      }\n\n      if (event.currentTarget.scrollLeft) {\n        if (!scrolledX) {\n          setScrolledX(true);\n        }\n      } else if (scrolledX) {\n        setScrolledX(false);\n      }\n    },\n    [scrollableX, scrollableY, scrolledX, scrolledY]\n  );\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const element = nodeRef.current;\n      const box = {\n        width: element.clientWidth,\n        height: element.clientHeight,\n        scrollHeight: element.scrollHeight,\n        scrollWidth: element.scrollWidth\n      };\n\n      if (box.width < box.scrollWidth && !scrollableX) {\n        setScrollableX(true);\n      }\n\n      if (box.height < box.scrollHeight && !scrollableY) {\n        setScrollableY(true);\n      }\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={classnames(\n        'overflow-container',\n\n        {\n          [variant]: variant,\n          scrollableX,\n          scrollableY,\n          scrolledX,\n          scrolledY\n        },\n        className\n      )}\n    >\n      <Tag ref={nodeRef} className={classnames('overflow-scroller')} onScroll={onScroll}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nOverflow.propTypes = {\n  children: node,\n  className: string,\n  variant: oneOf(['white'])\n};\n\nOverflow.defaultProps = {};\n","import React, { useContext, useState } from 'react';\nimport { string, node, func, shape, bool } from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { ModalContext } from '../Modal/Modal';\n\nimport { Modal } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport './ModalHeader.local.scss';\n\nexport const ModalHeader = ({\n  avatar,\n  icon,\n  title,\n  desc,\n  closeable,\n  onClose,\n  aria: providedAria,\n  formikRef,\n  changedForm = false\n}) => {\n  const context = useContext(ModalContext);\n  const aria = context.aria || providedAria;\n  const actions = context.actions || { close: onClose };\n  const [open, setOpen] = useState(false);\n\n  const close = () => {\n    if (changedForm || (formikRef?.current?.dirty && fieldChanged(formikRef?.current?.touched))) {\n      setOpen(true);\n    } else {\n      actions.close();\n    }\n  };\n\n  const fieldChanged = fields => {\n    let changed = false;\n    const fieldsArr = Object.keys(fields);\n\n    fieldsArr.map(field => {\n      if (fields[field]) {\n        changed = true;\n      }\n\n      return null;\n    });\n\n    return changed;\n  };\n\n  return (\n    <header className=\"modal-header\">\n      {avatar && <div className=\"icon-slot\">{avatar}</div>}\n      {/** TODO: this should actually be avatar :((( ... don't have time to refactor now need to patch through */}\n      {icon && (\n        <div className=\"icon-slot\">\n          <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n            {icon}\n          </Avatar>\n        </div>\n      )}\n      <div className=\"modal-title-slot\" id={aria['aria-labelledby']}>\n        <h1 className=\"modal-title\">{title}</h1>\n        {desc && (\n          <p className=\"modal-desc\" id={aria['aria-describedby']}>\n            {desc}\n          </p>\n        )}\n      </div>\n      {closeable && actions.close && (\n        <>\n          <div className=\"modal-close-button-slot\">\n            <button className=\"modal-close-button\" onClick={close}>\n              <CloseIcon fontSize=\"large\" />\n            </button>\n          </div>\n\n          <Modal open={open}>\n            <Paper\n              style={{\n                minWidth: '350px',\n                maxHeight: '368px',\n                maxWidth: '65vw'\n              }}\n            >\n              <Paper.Header>\n                <div className=\"modal-header\">\n                  <div className=\"icon-slot\">\n                    <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n                      <WarningIcon />\n                    </Avatar>\n                  </div>\n                  <div className=\"modal-title-slot\">\n                    <h1 className=\"modal-title\">Warning</h1>\n                  </div>\n                  <div className=\"modal-close-button-slot\">\n                    <button\n                      className=\"modal-close-button\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"large\" />\n                    </button>\n                  </div>\n                </div>\n              </Paper.Header>\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Exit without saving?</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    No\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                      actions.close();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Paper>\n          </Modal>\n        </>\n      )}\n    </header>\n  );\n};\n\nModalHeader.propTypes = {\n  title: node,\n  desc: node,\n  onClose: func,\n  closeable: bool,\n  avatar: node,\n  icon: node,\n  aria: shape({\n    'aria-labelledby': string,\n    'aria-describedby': string\n  })\n};\n\nModalHeader.defaultProps = {\n  closeable: true\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nimport './Checkbox.local.scss';\n\nexport const Checkbox = ({ label, disabled, ...rest }) => {\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className=\"checkbox-label\"\n      control={\n        <MUICheckbox\n          className=\"checkbox\"\n          color=\"primary\"\n          icon={<CheckBoxOutlineBlankIcon />}\n          checkedIcon={<CheckBoxIcon />}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  label: node,\n  disabled: bool\n};\n","export default (task, duration = 10000) => {\n  let running = false;\n\n  async function runTask() {\n    if (!running) {\n      return;\n    }\n\n    try {\n      await task();\n      running = false;\n    } catch (e) {\n      setTimeout(() => runTask(), duration);\n    }\n  }\n\n  return {\n    start() {\n      if (running) {\n        return;\n      }\n      running = true;\n      runTask();\n    },\n    stop() {\n      running = false;\n    }\n  };\n};\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nexport const ServerForm = ({\n  server = {},\n  protocols,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [submission, setSubmission] = useState({});\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [showRSA, setShowRSA] = useState(false);\n  const handleAccountCreation = getCreateAccountHandler({\n    showRSA,\n    passwordEditable,\n    setSubmission,\n    isNew,\n    server\n  });\n\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapServerValues(entry) {\n    return {\n      name: entry.name || '',\n      description: entry.description || '',\n      host: entry.address || '',\n      port: entry.port || availablePorts[entry.protocol || 'SSH'],\n      user: entry.user || '',\n      server_password: entry.user_key || '',\n      confirm_server_password: '',\n      rsa_key: entry.user_key || '',\n      protocol: entry.protocol || 'SSH'\n    };\n  }\n\n  const initialValues = mapServerValues(server);\n\n  const extraValidations = values => {\n    const errors = {};\n    if (passwordEditable && !showRSA) {\n      if (values.server_password !== values.confirm_server_password) {\n        errors.confirm_server_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column>\n                          <Row>\n                            <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                          </Row>\n                          <Row>\n                            <Column>\n                              <Text\n                                name=\"protocol\"\n                                required\n                                label=\"Protocol\"\n                                disabled={!isNew}\n                                options={allowedProtocols.map(p => ({\n                                  value: p.name,\n                                  label: p.name\n                                }))}\n                                value={initialValues.protocol}\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue('port', availablePorts[value]);\n                                }}\n                              />\n                            </Column>\n                          </Row>\n                        </Column>\n                        <Column>\n                          <Text\n                            name=\"description\"\n                            multiline\n                            required\n                            label=\"Description\"\n                            value={initialValues.description}\n                          />\n                        </Column>\n                      </Row>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column style={{ maxWidth: '80%', width: '80%' }}>\n                          <Text\n                            name=\"host\"\n                            label=\"Host\"\n                            required\n                            value={initialValues.host}\n                            disabled={editing}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column>\n                          <Text\n                            name=\"server_user\"\n                            label=\"User\"\n                            required\n                            value={initialValues.user}\n                          />\n                        </Column>\n                        {passwordEditable && <PasswordOrRSA allowed showRSA={showRSA} />}\n                      </Row>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" required label=\"RSA Key\" />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row>\n          <Password name=\"server_password\" label=\"Password\" required />\n        </Row>\n        <Row>\n          <Password name=\"confirm_server_password\" label=\"Confirm Password\" required />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ showRSA, passwordEditable, setSubmission, isNew, server }) {\n  return function handleAccountCreation(values) {\n    const request_body = {\n      protocol: values.protocol,\n      user: values.server_user,\n      description: values.description,\n      address: values.host,\n      ...(passwordEditable && {\n        user_key: showRSA ? values.rsa_key : values.server_password\n      }),\n      port: Number.parseInt(values.port, 10)\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(server.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handleSubmission) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    // add this entry to redux structure\n    // addNewAccount(newAccount);\n    handleSubmission();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchDataTypes(type = '') {\n  try {\n    const { data } = await RestClient.get(\n      `${CONSTANTS.BASE.ENDPOINTS.DATATYPES}${type ? `/${type}` : ''}`\n    );\n\n    return { result: data.result, data_types: data.data.data_types };\n  } catch (e) {\n    return { result: 'fail', data_types: [] };\n  }\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport _ from 'lodash';\n\nexport const DatabaseForm = ({\n  account = {},\n  protocols = [],\n  modes,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [submission, setSubmission] = useState({});\n  const allowedProtocols = protocols.filter(p => {\n    const special = p?.special_required;\n\n    return special && special.includes('database');\n  });\n  const [showRSA, setShowRSA] = useState(false);\n\n  const handleAccountCreation = getCreateAccountHandler({\n    protocols: allowedProtocols,\n    modes,\n    showRSA,\n    isNew,\n    setSubmission,\n    account\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapAccountValues(entry = {}) {\n    return {\n      name: _.get(entry, 'name', ''),\n      protocol: _.get(entry, 'protocol', ''),\n      description: _.get(entry, 'description', ''),\n\n      host: _.get(entry, 'address', ''),\n\n      port: _.get(entry, 'port', availablePorts[_.get(entry, 'protocol')]),\n\n      database: _.get(entry, 'special.database', ''),\n      user: _.get(entry, 'user', ''),\n      mode: _.get(entry, 'special.mode', '')\n    };\n  }\n\n  const initialValues = mapAccountValues(account);\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (passwordEditable && !showRSA) {\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {({ values }) => {\n            const selectedProtocol =\n              values.protocol && protocols.find(protocol => protocol.name === values.protocol);\n            const allowRSA = !!selectedProtocol?.allow_rsa_key;\n            const withDatabase = selectedProtocol?.special_required?.includes('database');\n            const withMode = selectedProtocol?.name === 'ORACLE';\n\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column>\n                            <Row padded>\n                              <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                            </Row>\n                            <Row padded>\n                              <Column>\n                                <Text\n                                  name=\"protocol\"\n                                  required\n                                  label=\"Protocol\"\n                                  reactToChange={(value, formik) => {\n                                    formik.setFieldValue('port', availablePorts[value]);\n                                  }}\n                                  options={allowedProtocols.map(p => ({\n                                    value: p.name,\n                                    label: p.name\n                                  }))}\n                                  value={initialValues.protocol}\n                                />\n                              </Column>\n                            </Row>\n                          </Column>\n                          <Column>\n                            <Text\n                              multiline\n                              name=\"description\"\n                              label=\"Description\"\n                              required\n                              value={initialValues.description}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column style={{ maxWidth: '80%', width: '80%' }}>\n                            <Text name=\"host\" required label=\"Host\" value={initialValues.host} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                          </Column>\n                        </Row>\n                        <Row>\n                          {withDatabase && (\n                            <Column style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}>\n                              <Text\n                                name=\"database\"\n                                required\n                                label=\"Database\"\n                                value={initialValues.database}\n                              />\n                            </Column>\n                          )}\n                          {withMode && (\n                            <Column style={{ maxWidth: '20%' }}>\n                              <Text\n                                name=\"mode\"\n                                label=\"Mode\"\n                                required\n                                options={modes.map(mode => ({\n                                  value: mode.label,\n                                  label: mode.label\n                                }))}\n                                value={initialValues.mode}\n                              />\n                            </Column>\n                          )}\n                        </Row>\n                        <Row>\n                          <Column>\n                            <Text\n                              name=\"user\"\n                              label=\"User\"\n                              required\n                              value={initialValues.user || ''}\n                            />\n                          </Column>\n                          {passwordEditable && (\n                            <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                          )}\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && allowRSA && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && allowRSA && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" label=\"RSA Key\" required />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row padded>\n          <Password name=\"password\" required label=\"Password\" />\n        </Row>\n        <Row padded>\n          <Password name=\"confirm_password\" required label=\"Confirm Password\" />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ protocols, showRSA, setSubmission, isNew, account }) {\n  return function handleAccountCreation(values) {\n    const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n    const allowRSA = !!selectedProtocol?.allow_rsa_key;\n    const withDatabase = selectedProtocol?.special_required?.includes('database');\n    const withMode = selectedProtocol?.name === 'ORACLE';\n\n    const request_body = {\n      user: values.user,\n      description: values.description,\n      protocol: values.protocol,\n      address: values.host,\n      user_key: allowRSA && showRSA ? values.rsa_key : values.password,\n      port: Number.parseInt(values.port, 10),\n      special: {\n        ...(withDatabase && { database: values.database }),\n        ...(withMode && { mode: values.mode })\n      }\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(account.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handler) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    handler();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async (url) => {\n  try {\n    const response = await RestClient.get(url);\n\n    const fileName = 'CSV_Template.csv';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { deleteInvocation } from 'shared/api/delete';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions as sharedActions } from 'shared/store/actions';\nimport './DeleteJobModal.local.scss';\n\nexport const ConnectedDeleteJobModal = connect(\n  state => {\n    return {\n      globalFilters: globalFiltersSelector(state)\n    };\n  },\n  dispatch => {\n    return {\n      getJobs: data => {\n        dispatch(sharedActions.getJobs.dispatchLoading(data));\n      }\n    };\n  }\n)(DeleteJobModal);\n\nfunction DeleteJobModal({ open, actions, uuid, filters, globalFilters, getJobs }) {\n  const [result, setResult] = useState('attempt');\n  const getQSP = () => {\n    if (!filters || !Object.keys(filters).length) {\n      const startDate = moment.unix(globalFilters.get('startDate'));\n      const endDate = moment.unix(globalFilters.get('endDate'));\n      const start = moment(startDate.format('YYYY-MM-DD'));\n      const end = moment(endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n      const payload = {\n        date_invoke: startDate.format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      };\n\n      return payload;\n    }\n    return filters;\n  };\n\n  const terminator = useCallback(() => {\n    deleteInvocation(uuid)\n      .then(() => {\n        setResult('success');\n        if (filters) {\n          getJobs(getQSP());\n        }\n      })\n      .catch(() => {\n        setResult('fail');\n      });\n  }, uuid);\n  return (\n    <>\n      <Modal open={open} actions={actions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Delete\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <div className=\"container\">\n                    <p>Are you sure you want to delete this invocation and future invocations of this job?</p>\n                  </div>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('loading');\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <h2 className=\"container\">Invocation successfully deleted!</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <h2 className=\"container\">Invocation could not be deleted.</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"loading\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button } from 'shared/components/controls';\nimport { ScheduleModal } from './components/ScheduleModal/ScheduleModal';\nimport { hasCreatePrivilege } from '../../../entities/utils/privileges';\nimport { SecurityAreas } from '../../../entities/utils/security-areas';\n\nexport const Schedule = ({ invocation, userDetails }) => {\n  const canCreateSchedule = hasCreatePrivilege(userDetails, SecurityAreas.SCHEDULE);\n  if (!canCreateSchedule) {\n    return '';\n  }\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setFilledValues({});\n      setResult('');\n      setOpen(false);\n    }\n  };\n  const [filledValues, setFilledValues] = useState({});\n  const [result, setResult] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [canSelectProcess, setCanSelectProcess] = useState(true);\n\n  const onClickHandler = option => {\n    setSelectedOption(option);\n    setCanSelectProcess(!invocation);\n    setOpen(true);\n  };\n\n  const btnLabel = invocation ? 'Schedule' : 'New Schedule';\n  const isScheduled = invocation?.status === 'SCHEDULED' && invocation?.schedule;\n\n  return (\n    <>\n      {isScheduled && (\n        <Button style={{ minWidth: '140px' }} onClick={() => onClickHandler('edit-schedule')}>\n          Edit Schedule\n        </Button>\n      )}\n      <Button\n        onClick={() => {\n          onClickHandler('schedule');\n        }}\n      >\n        {btnLabel}\n      </Button>\n      <ScheduleModal\n        open={open}\n        actions={modalActions}\n        invocation={invocation}\n        isScheduled={isScheduled}\n        selectedOption={selectedOption}\n        canSelectProcess={canSelectProcess}\n        result={result}\n        setResult={setResult}\n        filledValues={filledValues}\n        setFilledValues={setFilledValues}\n      />\n    </>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { postNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\n\nexport const ConnectedNewNamespace = connect(null, {\n  request: fetchEntity\n})(NewNamespace);\n\nfunction NewNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Namespace\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: namespace ? namespace.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  postNamespace(body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButtonNoDirty = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { FormEditor } from './FormEditor';\n\nexport const ConnectedFormModal = connect(null, {\n  refresh: fetchEntity\n})(FormModal);\n\nfunction FormModal({ disabled, form = null, prototype, refresh }) {\n  const isNew = form === null;\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('use_form');\n  const formRef = useRef();\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult('use_form');\n      setOpen(false);\n      // should refresh be here as well?\n      // refresh('form');\n    }\n  };\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        {isNew ? 'New Form' : 'Edit'}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title={`${isNew ? 'New' : 'Edit'} Form`}\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"use_form\">\n              <FormEditor\n                isNew={isNew}\n                form={form}\n                prototype={prototype}\n                setResult={setResult}\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was {isNew ? 'created' : 'updated'} successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      refresh('form');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ConfirmationModal } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\nimport { mdiSettings, mdiDatabase, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { deleteAccount } from 'shared/api/accounts';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nexport const DatabaseSettings = ({ database, disabled, reloadAccounts, editDbTrigger, deleteDbTrigger }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteDbOpen, setDeleteDbOpen] = useState(false);\n  const [deleteDbErrorOpen, setDeleteDbErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteDbModalActions = {\n    open: () => {\n      setDeleteDbOpen(true);\n    },\n    close: () => {\n      setDeleteDbOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(database.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteDbErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteDbErrorModalActions = {\n    open: () => {\n      setDeleteDbErrorOpen(true);\n    },\n    close: () => {\n      setDeleteDbErrorOpen(false);\n    }\n  };\n\n  if (disabled && !editDbTrigger && !deleteDbTrigger) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      {editDbTrigger && editDbTrigger(modalActions.open, disabled)}\n      {!editDbTrigger && (\n        <IconButton onClick={modalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiSettings} />\n          </SvgIcon>\n        </IconButton>\n      )}\n      {deleteDbTrigger && deleteDbTrigger(deleteDbModalActions.open, disabled)}\n      {!deleteDbTrigger && (\n        <IconButton onClick={deleteDbModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditDatabaseContainer database={database} />\n      </Modal>\n\n      <ConfirmationModal open={deleteDbOpen} actions={deleteDbModalActions} message=\"Are you sure you want to delete database?\" />\n      <ErrorModal open={deleteDbErrorOpen} actions={deleteDbErrorModalActions} message=\"Failed to delete Database. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditDatabase = ({ database, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [], modes: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Edit Database\"\n        desc=\"Edit the database connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <DatabaseForm\n            account={database}\n            protocols={state.protocols}\n            modes={state.modes}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditDatabaseContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditDatabase);\n","export const getOutputText = (output, invocation) => {\n  if (!invocation || (!output && invocation.status !== 'FAILED')) return '';\n\n  let outputText = '';\n\n  if (invocation.status === 'FAILED') {\n    outputText = `The following error(s) occurred:\n      ${invocation.errors.map(error => `• ${error}`).join('\\n')}\\n ${\n      output && output.length > 0 ? `Output: \\n${output.map(row => row.data.text).join('\\n')}` : ''\n    }`;\n  } else {\n    outputText = output.map(row => row.data.text).join('\\n');\n  }\n\n  return outputText;\n};\n","import { requestInvocation } from 'shared/api/invocation';\n\nexport function processQuery(uuid, process) {\n  return {\n    type: 'PROCESS_QUERY',\n    uuid,\n    process\n  };\n}\n\nexport function fetchInvocation(uuid, process) {\n  return function thunk(dispatch) {\n    dispatch({\n      type: 'FETCH_INVOCATION',\n      uuid,\n      process,\n      promise: requestInvocation(uuid)\n    });\n  };\n}\n\nexport function updateInvocation(invocation) {\n  return {\n    type: 'UPDATE_INVOCATION',\n    invocation\n  };\n}\n","import moment from 'moment';\nimport { getOutputText } from './getOutputText';\n\nconst EMAIL_BODY_MAX_LENGTH = 2000;\n\nexport const sendToEmail = (invocation, output, processName) => {\n  const text = getOutputText(output, invocation);\n  if (text.length > EMAIL_BODY_MAX_LENGTH) {\n    return false; // Max allowed body length exceeded\n  }\n\n  const date = moment(invocation.date_invoke).format('MMM DD YYYY, H:mm:ss');\n  const subject = processName ? `${processName} output` : 'Job output';\n  const body = `PROCESS: ${processName}\\nDATE: ${date}\\nSTATUS: ${invocation.status}\\n\\nOUTPUT:\\n\\n${text}`;\n  window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(body)}`;\n  return true;\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* getBeVersion() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_VERSION);\n    yield put(actions.getBeVersion.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeVersion.dispatchFail());\n  }\n}\n\nfunction* getBeLicence() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_LICENCE);\n    yield put(actions.getBeLicence.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeLicence.dispatchFail());\n  }\n}\n\nfunction* getBeHeath() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_HEALTH);\n    yield put(actions.getBeHealth.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeHealth.dispatchFail());\n  }\n}\n\nexport function* BeLicenceEffect() {\n  yield takeEvery(actions.getBeLicence.getLoadingAction(), getBeLicence);\n}\n\nexport function* BeHealthEffect() {\n  yield takeEvery(actions.getBeHealth.getLoadingAction(), getBeHeath);\n}\n\nexport function* BeVersionEffect() {\n  yield takeEvery(actions.getBeVersion.getLoadingAction(), getBeVersion);\n}\n","import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './TotalJobsCount.local.scss';\n\nexport const TotalJobsCount = ({ jobs, status }) => {\n  const jobsTotal = () => {\n    return (\n      <div className=\"tooltip-container\">\n        <div className=\"row executing\">\n          <span className=\"label\"> EXECUTING:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'EXECUTING').length}</span>\n        </div>\n        <div className=\"row succeeded\">\n          <span className=\"label\"> SUCCEEDED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SUCCEEDED').length}</span>\n        </div>\n        <div className=\"row scheduled\">\n          <span className=\"label\"> SCHEDULED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SCHEDULED').length}</span>\n        </div>\n        <div className=\"row delayed\">\n          <span className=\"label\">DELAYED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'DELAYED').length}</span>\n        </div>\n        <div className=\"row aborted\">\n          <span className=\"label\">ABORTED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'ABORTED').length}</span>\n        </div>\n        <div className=\"row failed\">\n          <span className=\"label\">FAILED: </span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'FAILED').length}</span>\n        </div>\n        <div className=\"row killed\">\n          <span className=\"label\">KILLED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'KILLED').length}</span>\n        </div>\n      </div>\n    );\n  };\n\n  if (status) {\n    return (\n      <div className=\"count-jobs\">\n        {jobs.length} {status} {jobs.length === 1 ? 'job' : 'jobs'}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"count-jobs\">\n      <LightTooltip placement=\"bottom\" title={jobsTotal()}>\n        <span>{jobs.length}</span>\n      </LightTooltip>{' '}\n      total jobs\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    backgroundColor: '#fff',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: '700',\n    fontFamily: 'Open Sans',\n    boxShadow: '0px 4px 8px rgba(4, 17, 37, 0.1)',\n    borderRadius: '8px'\n  }\n}))(Tooltip);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getAlias(name) {\n  return RestClient.get(`/alias/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchAlias(name, body) {\n  return RestClient.patch(`/alias/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postAlias(body) {\n  return RestClient.post('/alias', body, {\n    page_size: 2147483645\n  });\n}\n","import { actions } from 'session/store/actions';\nimport { actionStates } from 'shared/lib';\nimport { fromJS } from 'immutable';\n\nexport const initialState = {\n  login: {\n    status: '',\n    errors: []\n  },\n  authorization: {\n    status: actionStates.LOADING\n  },\n  currentUser: {\n    name: '',\n    details: {}\n  },\n  beVersion: ''\n};\n\nexport const reducerActions = {\n  // authorization Check\n  [actions.checkAuthorization.getLoadingAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.LOADING),\n  [actions.checkAuthorization.getSuccessAction()]: (state, payload) =>\n    state\n      .set(\n        'currentUser',\n        fromJS({\n          name: payload.name,\n          details: payload.details\n        })\n      )\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.checkAuthorization.getFailAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.FAIL),\n\n  // login\n  [actions.login.getLoadingAction()]: state =>\n    state.setIn(['login', 'status'], actionStates.LOADING),\n  [actions.login.getSuccessAction()]: state =>\n    state\n      .setIn(['login', 'status'], actionStates.SUCCESS)\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.login.getFailAction()]: (state, errors) =>\n    state.setIn(['login', 'status'], actionStates.FAIL).setIn(['login', 'errors'], fromJS(errors)),\n  [actions.getBeVersion.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beVersion', payload.data);\n    return nextState;\n  },\n  [actions.getBeLicence.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beLicence', payload.data);\n    return nextState;\n  },\n  [actions.getBeHealth.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beHealth', payload.data);\n    return nextState;\n  }\n};\n","import { checkDeamonStatus } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  await store.dispatch(checkDeamonStatus());\n\n  throw new Error('polling-daemon');\n}\n\nexport const daemonPoller = withPolling(task, 60000);\n","import { actions } from 'dashboard/store/actions';\n\nexport const initialState = {\n  filterStatus: 'ALL'\n};\n\nexport const reducerActions = {\n  [actions.setFilterStatus.getEventAction()]: (state, status) => {\n    const nextState = state.set('filterStatus', status);\n    return nextState;\n  }\n};\n","import { actions } from 'shared/store/actions';\nimport { actions as sessionActions } from 'session/store/actions';\nimport { fromJS } from 'immutable';\nimport moment from 'moment';\n\nlet sessionGlobalFilters = {\n  startDate: moment()\n    .subtract(7, 'd')\n    .startOf('day')\n    .unix(),\n  endDate: moment()\n    .add(1, 'days')\n    .startOf('day')\n    .unix()\n};\n\nsessionGlobalFilters = JSON.parse(localStorage.getItem('global-filters')) || sessionGlobalFilters;\n\nexport const initialState = {\n  globalFilters: sessionGlobalFilters,\n  jobs: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false,\n    callFailed: false,\n    reason: ''\n  },\n  connections: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  searchResults: {\n    jobs: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    },\n    processes: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    }\n  }\n};\n\nexport const reducerActions = {\n  [actions.setGlobalFilters.getSuccessAction()]: (state, payload) => {\n    const nextState = state\n      .setIn(['globalFilters', 'startDate'], payload.startDate.unix())\n      .setIn(['globalFilters', 'endDate'], payload.endDate.unix());\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.login.getSuccessAction()]: state => {\n    const nextState = state\n      .setIn(\n        ['globalFilters', 'startDate'],\n        moment()\n          .subtract(7, 'd')\n          .startOf('day')\n          .unix()\n      )\n      .setIn(\n        ['globalFilters', 'endDate'],\n        moment()\n          .add(1, 'days')\n          .startOf('day')\n          .unix()\n      );\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.logout.getSuccessAction()]: state => {\n    localStorage.removeItem('global-filters');\n    return state;\n  },\n  [actions.getJobs.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        content: payload.data.invocations,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false,\n        callFailed: false,\n        reason: ''\n      })\n    ),\n  [actions.getJobs.getFailAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        callFailed: true,\n        fetching: false,\n        page_count: 1,\n        content: [],\n        total_count: 0,\n        reason: payload.reason\n      })\n    ),\n  [actions.getJobs.getLoadingAction()]: state => state.setIn(['jobs', 'fetching'], true),\n  [actions.getConnections.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'connections',\n      fromJS({\n        content: payload.data.accounts,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getConnections.getLoadingAction()]: state =>\n    state.setIn(['connections', 'fetching'], true),\n  [actions.searchJobs.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'jobs'],\n      fromJS({\n        content: payload.data.invocations,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchJobs.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], true),\n  [actions.searchJobs.getFailAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], false),\n  [actions.searchProcesses.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'processes'],\n      fromJS({\n        content: payload.data.processes,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchProcesses.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], true),\n  [actions.searchProcesses.getFailAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], false)\n};\n","import { actions } from 'core/store/actions';\n\nexport const initialState = {\n  notifications: [],\n};\n\nexport const reducerActions = {\n  [actions.addNotifications.getEventAction()]: (state, payload) => state\n    .merge('notifications', payload),\n  [actions.removeNotification.getEventAction()]: (state, notificationIndex) => state\n    .removeIn(['notifications', notificationIndex]),\n};\n","import { notificationActions } from './notification.action';\n\nexport const actions = {\n  ...notificationActions,\n};\n","import {\n  TextParameter,\n  BooleanParameter,\n  IntegerParameter,\n  EmailParameter,\n  PhoneNumberParameter,\n  ProcessParameter,\n  VariadicParameter,\n  AccountParameter,\n  FQNameParameter,\n  PasswordParameter,\n  MultilineParameter,\n  ReplvaluesParameter,\n  UuidParameter\n} from './variants';\n\nimport { want, wantComponent } from 'shared/lib/want';\n\n/**\n * Main switcher for Parameter fields.\n */\nexport const WantParameter = wantComponent(\n  want(\n    {\n      text: TextParameter,\n      number: IntegerParameter,\n      select: TextParameter,\n      phone: PhoneNumberParameter,\n      boolean: BooleanParameter,\n      email: EmailParameter,\n      fqname: FQNameParameter,\n      account: AccountParameter,\n      process: ProcessParameter,\n      variadic_parameter: VariadicParameter,\n      password: PasswordParameter,\n      multiline: MultilineParameter,\n      replvalues: ReplvaluesParameter,\n      uuid: UuidParameter\n    },\n    TextParameter,\n    props => {\n      const { editor } = props.parameter;\n\n      return editor.type;\n    }\n  )\n);\n\nexport default WantParameter;\n","import { mapAccountsTree } from '../../../../explorer/store/mappers';\n\nexport const ADDITIONAL_ACCOUNT_FILTERS = {\n  dbms: [\n    filterDbmsByShell.bind(null, 'shell'),\n    filterDbmsByShell.bind(null, 'target_shell'),\n  ],\n  target_shell: [filterShellByPlatform],\n  shell: [filterShellByPlatform],\n};\n\nfunction filterDbmsByShell(shellFieldName, accounts, formValues) {\n  accounts = accounts || [];\n  if (!formValues || !formValues[shellFieldName]) {\n    return accounts;\n  }\n\n  const shellAccount = accounts.find((account) => account.name === formValues[shellFieldName]);\n  if (!shellAccount) {\n    return accounts;\n  }\n\n  return accounts.filter(account => account.address === shellAccount.address);\n}\n\nconst PLATFORM_VALUE_TO_TYPE = {\n  Oracle: 'ORACLE',\n  PostgreSQL: 'PGSQL',\n  MySQL: 'MYSQL',\n  'Microsoft SQL Server': 'MSSQL',\n};\n\nfunction filterShellByPlatform(accounts, formValues) {\n  accounts = accounts || [];\n\n  if (!formValues || !formValues.platform) {\n    return accounts;\n  }\n\n  const accountsTree = mapAccountsTree(accounts);\n  const platformTree = accountsTree.find((platform) => platform.name === PLATFORM_VALUE_TO_TYPE[formValues.platform]);\n  if (!platformTree) {\n    return accounts;\n  }\n\n  const platformAddresses = Object.keys(platformTree.servers);\n  return accounts.filter(account => platformAddresses.indexOf(account.address) !== -1);\n}\n","/* eslint-disable */\n\nimport _ from 'lodash';\n\nexport const groupForm = (prototype, form = null) => {\n  if (form === null) {\n    form = {\n      name: null,\n      description: null,\n      prototype: prototype.name,\n      version: prototype.version,\n      groups: [...prototype.groups],\n      values: prototype.fields.map(field => {\n        return { ...field, value: field.deflt };\n      })\n    };\n  }\n\n  if (!form.hasOwnProperty('groups')) {\n    form.groups = [...prototype.groups];\n    form.values = prototype.fields.map(field => {\n      const value = form.values.find(value => value.position === field.position);\n      return {\n        ...value,\n        ...field\n      };\n    });\n  }\n\n  if (form.hasOwnProperty('values')) {\n    const maxPosition = _.max(form.values.map(value => value.position));\n\n    // important point\n    if (form.groups.length > 0) {\n      // Mark any existing groups as non-virtual\n      form.groups = form.groups.map(group => {\n        return { ...group, virtual: false };\n      });\n      // Make sure groups are properly sorted\n      form.groups = _.sortBy(form.groups, 'lower');\n      // First we need to create any virtual groups, if needed\n      let position = 0;\n      while (position <= maxPosition) {\n        // First, find the group of which this value is a member, if any\n        const currentGroup = form.groups.find(\n          group => group.lower <= position && group.upper > position\n        );\n        if (!!currentGroup) {\n          // We already have a group for this position. Leapfrog to the next\n          position = currentGroup.upper;\n        } else {\n          // OK, we couldn't find the current group, so find the next one\n          const nextGroup = form.groups.find(group => group.lower > position);\n          if (!!nextGroup) {\n            // Add a new virtual group that covers this position up to the next group\n            form.groups = [\n              {\n                name: null,\n                virtual: true,\n                lower: position,\n                upper: nextGroup.lower,\n                iteration_limit: 1\n              },\n              ...form.groups\n            ];\n            // Leapfrog\n            position = nextGroup.upper;\n          } else {\n            // We're at the end. Add a covering virtual group\n            form.groups.push({\n              name: null,\n              virtual: true,\n              lower: position,\n              upper: maxPosition + 1,\n              iteration_limit: 1\n            });\n          }\n        }\n      }\n    } else {\n      // We have no groups at all. Create a single virtual group for all values.\n      form.groups.push({\n        name: null,\n        virtual: true,\n        lower: 0,\n        upper: maxPosition + 1,\n        iteration_limit: 1\n      });\n    }\n\n    form.groups = _.sortBy(form.groups, 'lower').map(group => {\n      group.instances = [];\n      return group;\n    });\n    form.values = _.sortBy(form.values, 'position');\n    // OK, we have the groups, now we need to add the instances and fields\n    for (let group of form.groups) {\n      const values = form.values.filter(\n        value => value.position >= group.lower && value.position < group.upper\n      );\n      if (!group.virtual || group.iteration_limit > 1) {\n        // How many instances do we need?\n        const instanceCount = Math.max(\n          1,\n          _.max(values.map(value => (value.value === null ? 1 : value.value.length)))\n        );\n        for (let g = 0; g < instanceCount; g++) {\n          let instance = {\n            instance: g,\n            fields: values.map(value => {\n              let field = {\n                name: value.name,\n                description: value.description,\n                meta: value.meta,\n                position: value.position,\n                data_type: value.data_type,\n                is_repeatable: value.is_repeatable,\n                is_required: value.is_required,\n                values: []\n              };\n              if (Array.isArray(value.value) && value.value.length > g) {\n                if (value.is_repeatable) {\n                  for (let f = 0; f < value.value[g].length; f++) {\n                    field.values.push({\n                      instance: f,\n                      value: value.value[g][f]\n                    });\n                  }\n                } else {\n                  field.values.push({\n                    instance: 0,\n                    value: value.value[g]\n                  });\n                }\n              }\n              return field;\n            })\n          };\n          group.instances.push(instance);\n        }\n      } else {\n        // Iteration limit is 1\n        let instance = {\n          instance: 0,\n          fields: values.map(value => {\n            let field = {\n              name: value.name,\n              description: value.description,\n              meta: value.meta,\n              position: value.position,\n              data_type: value.data_type,\n              is_repeatable: value.is_repeatable,\n              is_required: value.is_required,\n              values: []\n            };\n            if (field.is_repeatable) {\n              if (Array.isArray(value.value)) {\n                for (let f = 0; f < value.value.length; f++) {\n                  field.values.push({\n                    instance: f,\n                    value: value.value[f]\n                  });\n                }\n              }\n            } else {\n              field.values.push({\n                instance: 0,\n                value: value.value\n              });\n            }\n            return field;\n          })\n        };\n        group.instances.push(instance);\n      }\n    }\n    delete form.values;\n  }\n  // For repeating groups and fields, there must always be one \"empty\" group and/or field at the end.\n  for (let group of form.groups) {\n    // if (group.iteration_limit > 1) {\n    //     const instance = _.last(group.instances)\n    //     const values = _.flatten(instance.fields.map(field => field.values.map(value => value.value)))\n    //     // If at least one value is non-null, then we need to add a new empty group at the end.\n    //     if (!_.every(values, value => value === null)) {\n    //         // OK, we need to add another empty instance\n    //         group.instances.push({\n    //             instance: instance.instance + 1,\n    //             fields: instance.fields.map(field => {\n    //                 return {\n    //                     ...field,\n    //                     values: []\n    //                 }\n    //             })\n    //         })\n    //     }\n    // }\n\n    // Now we check the individual fields\n    // Each field must have at least one value.\n    // For repeating fields, there must always be a final empty instance.\n    for (let instance of group.instances) {\n      for (let field of instance.fields) {\n        if (field.values.length === 0) {\n          field.values.push({\n            instance: 0,\n            value: null\n          });\n          // } else if (field.is_repeatable) {\n          //     const value = _.last(field.values)\n          //     if (value.value !== null) {\n          //         field.values.push({\n          //             instance: value.instance + 1,\n          //             value: null\n          //         })\n          //     }\n        }\n      }\n    }\n  }\n  return form;\n};\n\nexport const ungroupForm = form => {\n  let packed = {\n    description: form.description,\n    values: []\n  };\n  let names = {};\n  for (const group of form.groups) {\n    for (const instance of group.instances) {\n      for (const field of instance.fields) {\n        names[field.name] = {\n          position: field.position,\n          grouped: !group.virtual || group.iteration_limit > 1,\n          is_repeatable: field.is_repeatable\n        };\n      }\n    }\n  }\n  for (const name in names) {\n    const info = names[name];\n    const group = form.groups.find(\n      group => group.lower <= info.position && group.upper > info.position\n    );\n    if (info.grouped && info.is_repeatable) {\n      // Array of arrays\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        if (_.last(subvalues) === null) {\n          subvalues = _.dropRight(subvalues, 1);\n        }\n        values.push(subvalues);\n        while (Array.isArray(_.last(values)) && _.last(values).length === 0) {\n          values = _.dropRight(values, 1);\n        }\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.grouped) {\n      // Just a plain array\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        values.push(subvalues[0]);\n      }\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.is_repeatable) {\n      // Just a plain array\n      const instance = group.instances[0];\n      let values = instance.fields\n        .find(field => field.name === name)\n        .values.map(value => value.value);\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else {\n      // Simple value\n      const instance = group.instances[0];\n      const value = instance.fields.find(field => field.name === name).values[0].value;\n      packed.values.push({ name, value });\n    }\n  }\n  packed.values = packed.values.filter(value => value.value !== null);\n  return packed;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getPrivileges(name, isAlias) {\n  return RestClient.get(`/entity/${name}/privileges`, {\n    ...(isAlias && { cls: 'alias' }),\n    page_size: 2147483645\n  });\n}\n\n/**\n    privilege: type,\n    enitity_name: entityName,\n    alias: isAlias\n    role: user_or_group.role,\n    role_type: user_or_group.is_group ? 'group' : 'user',\n    explicit_grant: user_or_group.granted.includes(type),\n    explicit_denied: user_or_group.denied.includes(type),\n    action: granted ? 'revoke' : 'grant'\n  }}\n */\nexport async function setPrivileges(data) {\n  const { granted, alias } = data;\n\n  const actions = granted ? ['revoke', 'deny'] : ['grant', 'allow'];\n\n  try {\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[0]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[1]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    return getPrivileges(data.enitity_name, data.alias);\n  } catch (e) {\n    throw new Error('failed');\n  }\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  mdiFileTableBox,\n  mdiDatabase,\n  mdiFileTree,\n  mdiTable,\n  mdiAlertOutline,\n  mdiTableColumnWidth,\n  mdiAlphaPBox,\n  mdiInboxFull,\n  mdiInbox\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nimport './root.local.scss';\n\nconst VerticalUsageBar = ({ usage, className }) => {\n  let fill;\n  if (usage > 75) {\n    fill = '#ED3A4A';\n  } else if (usage > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  return (\n    <div className={className}>\n      <svg viewBox=\"-2 -2 62 102\">\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" height=\"100\" width=\"60\" fill=\"rgba(12, 50, 110, 0.38)\" />\n        <rect x=\"0\" y={100 - usage} rx=\"8\" ry=\"8\" height={usage} width=\"60\" fill={fill} />\n      </svg>\n    </div>\n  );\n};\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nconst SidebarStorageItem = ({ ns, usage, setItem, isSelected }) => (\n  <div\n    className={classnames('sidebar-item', { selected: isSelected })}\n    role=\"button\"\n    onClick={() => setItem(ns)}\n  >\n    <VerticalUsageBar usage={usage} className=\"usage-icon\" />\n    {ns}\n  </div>\n);\n\nexport const StorageSidebar = ({ list, setItem, selectedItem, isLoading }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiFileTableBox} />\n        </SvgIcon>\n        Tablespaces\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          list.map((element, index) => (\n            <SidebarStorageItem\n              isSelected={selectedItem === element.ns}\n              key={index}\n              {...element}\n              setItem={setItem}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst iconMapper = {\n  triggers: { icon: mdiAlertOutline, label: 'Triggers' },\n  tables: { icon: mdiTable, label: 'Tables' },\n  indexes: { icon: mdiTableColumnWidth, label: 'Indexes' },\n  procedures: { icon: mdiAlphaPBox, label: 'Procedures' },\n  packages: { icon: mdiInbox, label: 'Packages' },\n  packageBodies: { icon: mdiInboxFull, label: 'Package Bodies' }\n};\n\nconst objectsSidebarMapper = (setItem, selectedItem, invalidObjects) => (\n  { owner, objects },\n  index\n) => {\n  const isSelected = owner === selectedItem.owner;\n  const invalidChildren = invalidObjects.filter(({ owner: name }) => name === owner);\n  return (\n    <React.Fragment key={index}>\n      <div\n        className={classnames('sidebar-item', {\n          selected: isSelected,\n          'rotate-cw': !isSelected,\n          'rotate-ccw': isSelected\n        })}\n        role=\"button\"\n        onClick={() => setItem({ owner: isSelected ? null : owner, object: null })}\n      >\n        <SvgIcon>\n          <path d={mdiFileTree} />\n        </SvgIcon>\n        {owner}\n      </div>\n      {isSelected &&\n        objects.map((object, i) => {\n          const isObjectSelected = object === selectedItem.object;\n          const isInvalid = invalidChildren.findIndex(({ object: name }) => name === object) !== -1;\n          return (\n            <div\n              key={`${index}_${i}`}\n              className={classnames('child', 'sidebar-item', {\n                selected: isObjectSelected,\n                invalid: isInvalid\n              })}\n              role=\"button\"\n              onClick={() => setItem({ owner, object })}\n            >\n              <SvgIcon>\n                <path d={iconMapper[object].icon} />\n              </SvgIcon>\n              {iconMapper[object].label}\n            </div>\n          );\n        })}\n    </React.Fragment>\n  );\n};\n\nexport const ObjectsSidebar = ({\n  setItem,\n  selectedItem,\n  list,\n  isLoading,\n  invalidObjects\n}) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiDatabase} />\n        </SvgIcon>\n        Schema\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          <div className=\"sidebar-container\">\n            {list.map(objectsSidebarMapper(setItem, selectedItem, invalidObjects))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/jsx-indent-props */\nimport React from 'react';\nimport { mdiArrangeBringToFront, mdiFileTableBox, mdiFlashCircle, mdiHelpRhombusOutline, mdiTable } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Chart } from 'react-google-charts';\nimport classnames from 'classnames';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nconst KPIDisplay = ({ value, suffix, colorFormatting = false }) => {\n  let fill;\n  if (value > 75) {\n    fill = '#ED3A4A';\n  } else if (value > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  const digits = value > 10 ? 0 : 2;\n  const valueString = value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: digits\n  });\n  return (\n    <span style={colorFormatting ? { color: fill } : {}}>\n      {valueString}\n      {suffix}\n    </span>\n  );\n};\n\nconst NoDataComponent = ({ name }) => (\n  <div className=\"content dashed-and-centered\">\n    <SvgIcon>\n      <path d={mdiHelpRhombusOutline} />\n    </SvgIcon>\n    <p>Please select a {name} in order to view its children</p>\n  </div>\n);\n\nconst StorageDetailsList = ({ data, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <Loader>Loading data...</Loader>\n      </Center>\n    );\n  }\n\n  const { tablespace, files } = data;\n\n  if (!tablespace || !tablespace.ns) {\n    return <NoDataComponent name=\"tablespace\" />;\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"detail-row\">\n        <div className=\"ts-name\">\n          <SvgIcon>\n            <path d={mdiFileTableBox} />\n          </SvgIcon>\n          {tablespace.ns}\n        </div>\n        <div className=\"details\">\n          <div className=\"block\">\n            <div className=\"top\">Total:</div>\n            <div>\n              <KPIDisplay value={tablespace.totalGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used size:</div>\n            <div>\n              <KPIDisplay value={tablespace.usedGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used %:</div>\n            <div>\n              <KPIDisplay value={tablespace.usage} suffix=\"%\" colorFormatting />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free size:</div>\n            <div>\n              <KPIDisplay value={tablespace.freeGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free %:</div>\n            <div>\n              <KPIDisplay value={tablespace.freePerc} suffix=\"%\" />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {files.map(({ PCT_USED, FILE_NAME, SIZE_MB, MAXSIZE_MB }, index) => {\n        const filePath = FILE_NAME.split('/');\n        const [fileName, extension] = filePath[filePath.length - 1].split('.');\n        return (\n          <div key={index} className=\"detail-row\">\n            <div className=\"file-name\">\n              <SvgIcon>\n                <path d={mdiTable} />\n              </SvgIcon>\n              {fileName}\n              <span className=\"extension\">.{extension}</span>\n            </div>\n            <div className=\"details\">\n              <div className=\"block\">\n                <div className=\"top\">Used %:</div>\n                <div>\n                  <KPIDisplay value={PCT_USED} suffix=\"%\" colorFormatting />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Size:</div>\n                <div>\n                  <KPIDisplay value={SIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Max size:</div>\n                <div>\n                  <KPIDisplay value={MAXSIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n      <div>\n        <Center>\n          <Chart\n            width=\"700px\"\n            height=\"400px\"\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n              ['Task', 'Hours per Day'],\n              [`Free  ${tablespace.freeGB.toFixed(2)} GB`, tablespace.freePerc],\n              [`Used  ${tablespace.usedGB.toFixed(2)} GB`, tablespace.usage]\n            ]}\n            options={{\n              backgroundColor: 'transparent',\n              is3D: true,\n              colors: ['rgb(52, 204, 136)', 'rgb(237, 58, 74)']\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n        </Center>\n      </div>\n    </div>\n  );\n};\n\nexport const StorageViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiTable} />\n        </SvgIcon>\n        Data Files\n      </div>\n      <StorageDetailsList data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport const ObjectsViewer = ({ data, isLoading, sidebarDisabled, protocol }) => {\n  const objectsDataMapper = SystemExplorerFeatureUtil.getObjectsDataMapper(protocol);\n  if (!!objectsDataMapper && data && data.length > 0) {\n    data = data.slice().map(objectsDataMapper);\n  }\n\n  return (\n    <div className={classnames('viewer', {\n        'sidebar-disabled': sidebarDisabled\n      })}\n    >\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiArrangeBringToFront} />\n        </SvgIcon>\n        Objects\n      </div>\n      {isLoading ? (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      ) : (\n        <div className=\"content\">\n          <Overflow>\n            {!data || data.length === 0 ? (\n              <NoDataComponent name=\"object\" />\n            ) : (\n              data.map(({ OBJECT_NAME, CREATED, OBJECT_ID, LAST_DDL_TIME }) => {\n                return (\n                  <div key={OBJECT_ID} className=\"detail-row\">\n                    <div className=\"file-name\">\n                      <SvgIcon>\n                        <path d={mdiFlashCircle} />\n                      </SvgIcon>\n                      {OBJECT_NAME}\n                    </div>\n                    <div className=\"details\">\n                      <div className=\"object-block\">\n                        <div className=\"top\">Last DDL Time</div>\n                        <div>{LAST_DDL_TIME}</div>\n                      </div>\n                      <div className=\"object-block\">\n                        <div className=\"top\">Created</div>\n                        <div>{CREATED}</div>\n                      </div>\n                      {/* Designs have some buttons here */}\n                    </div>\n                  </div>\n                );\n              })\n            )}\n          </Overflow>\n        </div>\n      )}\n    </div>\n  );\n};\n","const GB_MULTIPLIER = 1024 * 1024 * 1024;\n\nexport const formatMemorySizeGb = (bytes) => {\n  return (bytes / GB_MULTIPLIER).toFixed(3);\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { STATUS_TYPES } from '../../store/selectors';\n\nimport './StatusLabel.local.scss';\n\nconst STATUS_LABEL_MAP = {\n  [STATUS_TYPES.down]: 'Down',\n  [STATUS_TYPES.up]: 'Up',\n  [STATUS_TYPES.error]: 'Has errors',\n  [STATUS_TYPES.notConnected]: 'Not connected',\n  [STATUS_TYPES.notFound]: 'Not found',\n};\n\nexport class StatusLabel extends React.PureComponent {\n  render() {\n    const {\n      status\n    } = this.props;\n\n    return (\n      <div className={`status ${status.replace(/\\s/g, '-')}`} role=\"presentation\">{STATUS_LABEL_MAP[status]}</div>\n    );\n  }\n}\n\nStatusLabel.propTypes = {\n  status: string\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LayersOutlinedIcon from '@material-ui/icons/LayersOutlined';\nimport { mdiClipboardPlayMultipleOutline, mdiShieldCheckOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nexport const navigationItems = [\n  {\n    title: <FormattedMessage id=\"navigation.dashboard\" />,\n    to: '/dashboard',\n    id: 'dashboard',\n    icon: <DashboardOutlinedIcon />,\n    qaClass: 'qa-nav-dashboard'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.jobs\" />,\n    to: '/jobs',\n    id: 'jobs',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiClipboardPlayMultipleOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-jobs'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.system\" />,\n    to: '/system',\n    id: 'system',\n    icon: <LayersOutlinedIcon />,\n    qaClass: 'qa-nav-system',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.entitites\" />,\n        to: '/system/entities',\n        qaClass: 'qa-nav-entities'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.explorer\" />,\n        to: '/system/explorer',\n        qaClass: 'qa-nav-explorer'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.user.and.groups\" />,\n        to: '/system/mas-accounts/users',\n        qaClass: 'qa-nav-mas-accounts'\n      }\n    ]\n  },\n  {\n    title: <FormattedMessage id=\"navigation.compliance\" />,\n    to: '/compliance',\n    id: 'compliance',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiShieldCheckOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-compliance',\n    items: [\n      {\n        group: true,\n        title: 'Oracle'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.collection\" />,\n        to: '/compliance/licensing',\n        qaClass: 'qa-nav-licensing'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.usage\" />,\n        to: '/compliance/license-collection',\n        qaClass: 'qa-nav-license-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.allocation\" />,\n        to: '/compliance/license-allocation',\n        qaClass: 'qa-nav-license-allocation'\n      },\n      {\n        group: true,\n        title: 'Microsoft'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/mssql-executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      },\n    ]\n  }\n];\n","import { getQuery, getInvocationStatus } from './selectors';\n\nimport { InvocationStatus } from './constants';\n\nimport { fetchInvocation } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  const { uuid, process } = getQuery(store.getState());\n\n  if (uuid) {\n    await store.dispatch(fetchInvocation(uuid, process));\n  }\n\n  const STATUS = getInvocationStatus(store.getState());\n\n  switch (STATUS) {\n    case InvocationStatus.EXECUTING:\n    case InvocationStatus.SCHEDULED:\n    case InvocationStatus.DELAYED:\n    case 'NOT_FETCHED':\n      console.log('[invocation-poller] - polling', STATUS); // eslint-disable-line\n      throw new Error('need to poll invocation...');\n    default:\n      break;\n  }\n\n  console.log('[invocation-poller] - done'); // eslint-disable-line\n\n  return Promise.resolve();\n}\n\nexport const invocationPoller = withPolling(task, 5000);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Center, Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Header } from 'core/components/Header/Header';\nimport { ToggleSelection } from './containers/ToggleSelection/ToggleSelection';\nimport { ConnectedServersNetworkTile } from './components/ServersNetworkTile/ServersNetworkTile';\nimport { ConnectedLicensableFeaturesTile } from './components/LicensableFeaturesGraph/LicensableFeaturesTile';\nimport { ConnectedOperatingSystemsTile } from './components/OperatingSystemsTile/OperatingSystemsTile';\nimport { ConnectedLicenseDeltaTile } from './components/LicenseDeltaTile/LicenseDeltaTile';\nimport { DbmsType } from '../explorer/SystemExplorerFeatureUtil';\nimport { MssqlConnectedLicenseUsageTile } from './components/MSSQL/LicenseUsageTile/LicenseUsageTile';\nimport { MssqlConnectedServersNetworkTile } from './components/MSSQL/ServersNetworkTile/ServersNetworkTile';\nimport { MssqlConnectedEnvironmentUsageTile } from './components/MSSQL/EnvironmentUsageTile/EnvironmentUsageTile';\nimport { MssqlConnectedDbVersionAndOsTile } from './components/MSSQL/DbVersionAndOsTile/DbVersionAndOsTile';\n\nimport './ExecutiveDashboard.local.scss';\n\nconst prepareDashboardTitle = (dbType) => {\n  switch (dbType) {\n    case DbmsType.ORACLE: {\n      return 'Compliance / Oracle / Executive Dashboard';\n    }\n    case DbmsType.MSSQL: {\n      return 'Compliance / Microsoft / Executive Dashboard';\n    }\n    default: return '';\n  }\n};\n\nfunction ExecutiveDashboard({\n  isLoading,\n  callFailed,\n  dbType,\n}) {\n  dbType = dbType || DbmsType.ORACLE;\n  const [selectedServer, setSelectedServer] = useState(null);\n  const dashboardTitle = prepareDashboardTitle(dbType);\n\n  return (\n    <>\n      <Header title={dashboardTitle}>\n        {!isLoading && !callFailed && (\n          <div className=\"header-actions-container\">\n            <ToggleSelection hasSelectedServer={!!selectedServer} deselectServer={() => setSelectedServer(null)} />\n            {/*\n              <RefreshDashboard onClickCallback={refreshDashboard} />\n              <div className=\"separator\" />\n              <ToggleDashboard active={dashboardType} onClickCallback={changeDashboard} />\n            */}\n          </div>\n        )}\n      </Header>\n      <Main mdPage>\n        <Switch value={isLoading}>\n          <Switch.Case value>\n            <Center>\n              <Loader>Loading Executive Dashboard...</Loader>\n            </Center>\n          </Switch.Case>\n          <Switch.Case value={false}>\n            <Switch value={callFailed}>\n              <Switch.Case value>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load Executive Dashboard data. Please refresh the page and try again.\n                  </Result.Text>\n                </Result>\n              </Switch.Case>\n              <Switch.Case value={false}>\n                <div className=\"widgets-container\">\n                  <div className=\"widget\">\n                    <Switch value={dbType}>\n                      <Switch.Case value={DbmsType.ORACLE}>\n                        <ConnectedLicensableFeaturesTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                      <Switch.Case value={DbmsType.MSSQL}>\n                        <MssqlConnectedLicenseUsageTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                    </Switch>\n                  </div>\n                  <div className=\"widget\">\n                    <Switch value={dbType}>\n                      <Switch.Case value={DbmsType.ORACLE}>\n                        <ConnectedServersNetworkTile selectedServer={selectedServer} onServerChanged={(serverId) => setSelectedServer(serverId)} />\n                      </Switch.Case>\n                      <Switch.Case value={DbmsType.MSSQL}>\n                        <MssqlConnectedServersNetworkTile selectedServer={selectedServer} onServerChanged={(serverId) => setSelectedServer(serverId)} />\n                      </Switch.Case>\n                    </Switch>\n                  </div>\n                  <div className=\"widget\">\n                    <Switch value={dbType}>\n                      <Switch.Case value={DbmsType.ORACLE}>\n                        <ConnectedLicenseDeltaTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                      <Switch.Case value={DbmsType.MSSQL}>\n                        <MssqlConnectedEnvironmentUsageTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                    </Switch>\n                  </div>\n                  <div className=\"widget\">\n                    <Switch value={dbType}>\n                      <Switch.Case value={DbmsType.ORACLE}>\n                        <ConnectedOperatingSystemsTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                      <Switch.Case value={DbmsType.MSSQL}>\n                        <MssqlConnectedDbVersionAndOsTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                    </Switch>\n                  </div>\n                </div>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Main>\n    </>\n  );\n}\n\nexport const ConnectedExecutiveDashboard = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.dashboard.loading ||\n        state.executiveDashboard.flags.virtual.loading,\n      callFailed: state.executiveDashboard.flags.dashboard.callFailed,\n      selected: state.executiveDashboard.selectedServers.length,\n      rawEntries: state.executiveDashboard.rawEntries,\n      rawVirtualServers: state.executiveDashboard.rawVirtualServers,\n      virtualServers: state.executiveDashboard.virtualServers\n    };\n  }\n)(ExecutiveDashboard);\n","import React from 'react';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors }) => {\n  let content;\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          {errors.map((error, index) => {\n            return <p key={index}>• {error}</p>;\n          })}\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              {output.map((row, index) => {\n                return (\n                  <p className=\"row\" key={`${row.data.text}-${index}`}>\n                    {row.data.text}\n                  </p>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        {output.map((row, index) => {\n          return (\n            <p className=\"row\" key={index}>\n              {row.data.text}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return content;\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { fromJS } from 'immutable';\n\nexport const bindReducer = (initialState, actions) => (state = fromJS(initialState), action) => {\n  if (typeof actions[action.type] === 'function') {\n    return actions[action.type](state, action.payload);\n  }\n\n  return state;\n};\n","export const actionStates = {\n  LOADING: 'LOADING',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS',\n};\n","import { actionStates } from 'shared/lib';\n\nexport class ActionCreatorHandler {\n  constructor(action) {\n    this.action = action;\n  }\n\n  getEventAction() {\n    return this.action;\n  }\n\n  getLoadingAction() {\n    return `${this.action}__${actionStates.LOADING}`;\n  }\n\n  getFailAction() {\n    return `${this.action}__${actionStates.FAIL}`;\n  }\n\n  getSuccessAction() {\n    return `${this.action}__${actionStates.SUCCESS}`;\n  }\n\n  dispatchLoading(payload) {\n    return {\n      type: this.getLoadingAction(),\n      payload,\n    };\n  }\n\n  dispatchFail(payload) {\n    return {\n      type: this.getFailAction(),\n      payload,\n    };\n  }\n\n  dispatchSuccess(payload) {\n    return {\n      type: this.getSuccessAction(),\n      payload,\n    };\n  }\n\n  dispatchEvent(payload) {\n    return {\n      type: this.action,\n      payload,\n    };\n  }\n}\n","export const slugify = (text) => text.toString().toLowerCase()\n  .trim()\n  .replace(/[^a-z0-9 -]/g, '')\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-');\n","export const createUrl = (url, params = {}) => {\n  if (typeof params !== 'object' || !params) {\n    return url;\n  }\n  let path = url;\n  const query = { ...params };\n  Object.keys(query).forEach((key) => {\n    if (typeof query[key] !== 'undefined' && path.includes(`:${key}`)) {\n      path = path.replace(`:${key}`, query[key]);\n      delete query[key];\n    }\n  });\n\n  if (!Object.keys(query).length || !Object.keys(query).find(((key) => typeof query[key] !== 'undefined'))) {\n    return path;\n  }\n\n  const paramsUrl = Object.keys(query).filter((key) => query[key])\n    .map((key) => `${key}=${encodeURIComponent(query[key])}`)\n    .join('&');\n  return `${path}${'?'.concat(...paramsUrl)}`;\n};\n","export const numberPretty = (number) => {\n  if (!number) {\n    return number;\n  }\n  const parts = number.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n","const formatNumber = (number, pow, decimals = 1) => (number / (10 ** pow)).toFixed(decimals);\n\nexport const smartNumber = (number, decimals = false) => {\n  if (typeof number !== 'number') {\n    return number;\n  }\n  if (number < 10 ** 3) {\n    if (typeof decimals === 'number') {\n      return +number.toFixed(+decimals);\n    }\n    return number;\n  }\n\n  if (number < 10 ** 6) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 3, decimals)} K`;\n    }\n    return `${formatNumber(number, 3)} K`;\n  }\n\n  if (number < 10 ** 9) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 6, decimals)} M`;\n    }\n    return `${formatNumber(number, 6)} M`;\n  }\n\n  if (typeof decimals === 'number') {\n    return `${formatNumber(number, 9, decimals)} B`;\n  }\n  return `${formatNumber(number, 9)} B`;\n};\n","export const capitalizeFirstLetter = (s) => s.toString().charAt(0).toUpperCase() + s.slice(1);\n","export const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n","/* eslint-disable */\nexport const phoneNumberPattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n","export const urlPattern = /^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)$/;\n","export const randomStringGenerator = (length = 5) => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n  for (let i = 0; i < length; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n","export const generateUniqueId = () => btoa(Math.floor(new Date().valueOf() * Math.random())).replace(/=/g, '').slice(0, 16);\n","export const emptyFunc = () => null;\n","export const delay = (timer) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve();\n  }, timer);\n});\n","import moment from 'moment';\n\nimport { isBeforeDay } from './isBeforeDay';\n\nexport function isInclusivelyAfterDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n  return !isBeforeDay(a, b);\n}\n","const STATES = {\n  loading: 'LOADING',\n  fail: 'FAIL',\n  success: 'SUCCESS'\n};\n\nexport const SEPARATOR = '__';\n\nexport function type(name, stateKey) {\n  const state = STATES[stateKey];\n\n  if (state) {\n    return name + SEPARATOR + state;\n  }\n\n  return name;\n}\n\n/**\n *\n * These could be written as classes with static methods.\n *\n * */\n\nexport const types = {\n  action: type,\n  loading: function loadingType(name) {\n    return type(name, 'loading');\n  },\n  success: function successType(name) {\n    return type(name, 'success');\n  },\n  fail: function failType(name) {\n    return type(name, 'fail');\n  }\n};\n\nexport const creators = {\n  action: function action(name, payload) {\n    return { type: name, payload };\n  },\n  loading: function loadingAction(name, payload) {\n    return { type: type(name, 'loading'), payload };\n  },\n  success: function successAction(name, payload) {\n    return { type: type(name, 'success'), payload };\n  },\n  fail: function failAction(name, payload) {\n    return { type: type(name, 'fail'), payload };\n  }\n};\n","import { produce } from 'immer';\n\nfunction unchanged(state) {\n  return state;\n}\n\nexport function createReducer(reducers, initialState = {}) {\n  const reducerInitialState = reducers.initialState || initialState;\n\n  return function r(state = reducerInitialState, action) {\n    const { type } = action;\n\n    if (!type) {\n      console.error('[createReducer] action does not have a type', action); // eslint-disable-line\n      return unchanged(state);\n    }\n\n    const reducer = reducers[action.type];\n\n    if (reducer) {\n      return produce(state, nextState => {\n        reducer(nextState, action, state);\n      });\n    }\n\n    return unchanged(state);\n  };\n}\n","import moment from 'moment';\nimport _ from 'lodash';\n\nexport function getWorkloadData(jobs, dateRange) {\n  const isSingleDay =\n    moment(dateRange.currentDate).format('MMM D YY') ===\n    moment(dateRange.endDate).format('MMM D YY');\n\n  if (jobs.length === 0) return [];\n\n  const jobsWithFormattedInvokedDate = _.orderBy(jobs, ['date_invoke'], ['asc']).map(job => ({\n    ...job,\n    date_invoke: isSingleDay\n      ? `${moment(job.date_invoke).format('H')}:00`\n      : moment(job.date_invoke).format('MMM D YY')\n  }));\n  const groupJobsByDate = _.groupBy(jobsWithFormattedInvokedDate, 'date_invoke');\n  const data = [];\n\n  // if no process was executed during selected interval, simply return an empty array\n  if (Object.keys(groupJobsByDate).length === 0) {\n    return [];\n  }\n\n  Object.keys(groupJobsByDate).forEach(date => {\n    const item = { name: date, SUCCEEDED: 0, FAILED: 0, ABORTED: 0, total: 0 };\n    groupJobsByDate[date].forEach(el => {\n      item[el.status]++;\n      if (el.status === 'SUCCEEDED' || el.status === 'FAILED' || el.status === 'ABORTED') {\n        item.total++;\n      }\n    });\n\n    data.push(item);\n  });\n\n  // display all days between the first one that run a process and the last one\n  // or all hours from 0->23\n  const intervalArray = [];\n  const daylist = isSingleDay ? getHoursArray(dateRange) : getDaysArray(dateRange);\n  const totalDays = daylist.reduce((o, key) => ({ ...o, [key]: '' }), {});\n\n  // update the total days from the interval array with the days that have some processes executed\n  data.forEach(day => {\n    totalDays[day.name] = day;\n  });\n\n  Object.keys(totalDays).forEach(date => {\n    // for the days in the interval that have no executed process, add an empty entry\n    if (typeof totalDays[date] === 'string') {\n      totalDays[date] = {\n        name: date,\n        SUCCEEDED: 0,\n        FAILED: 0,\n        ABORTED: 0,\n        total: 0\n      };\n    }\n    intervalArray.push(totalDays[date]);\n  });\n\n  return intervalArray;\n}\n/**\n * Creates an array for the selected interval of days\n */\nfunction getDaysArray(dateRange) {\n  let { currentDate } = dateRange;\n  const { endDate } = dateRange;\n  const dateArray = [];\n\n  while (currentDate <= endDate) {\n    dateArray.push(moment(currentDate).format('MMM D YY'));\n    currentDate = moment(currentDate).add(1, 'days');\n  }\n\n  return dateArray;\n}\n\n/**\n *\n * Creates an array for all the hours in a day 0 -> 23\n */\nfunction getHoursArray() {\n  const dateArray = [];\n\n  for (let i = 0; i < 24; i++) {\n    dateArray.push(`${i}:00`);\n  }\n  return dateArray;\n}\n","import { CheckAuthorizationEffect } from './check-authorization/check-authorization.effect';\nimport { LoginEffect } from './login/login.effect';\nimport { LogoutEffect } from './logout/logout.effect';\nimport { BeHealthEffect, BeLicenceEffect, BeVersionEffect } from './be-version/be-version.effect';\n\nexport const sessionEffects = [\n  CheckAuthorizationEffect,\n  LoginEffect,\n  LogoutEffect,\n  BeVersionEffect,\n  BeLicenceEffect,\n  BeHealthEffect,\n];\n","import { emptyFunc } from 'shared/lib';\n\nexport const tryAsync = async (action, onError = emptyFunc) => {\n  try {\n    await action();\n  } catch (e) {\n    onError(e);\n  }\n};\n","import Cookie from 'js-cookie';\nimport axios from 'axios';\n\nimport { CONSTANTS } from 'config';\nimport { createUrl } from 'shared/lib';\n\nclass RestClientClass {\n  constructor() {\n    this.authentications = {\n      basicAuth: {\n        name: 'Authorization',\n        accessToken: '',\n      },\n    };\n\n    this.baseUrl = CONSTANTS.BASE.HOST;\n\n    if (CONSTANTS.BASE.VERSION) {\n      this.baseUrl = `${CONSTANTS.BASE.HOST}/${CONSTANTS.BASE.VERSION}`;\n    }\n\n    this.client = axios.create({\n      timeout: CONSTANTS.BASE.TIMEOUT,\n      baseURL: this.baseUrl,\n      // withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.get = this.get.bind(this);\n    this.delete = this.delete.bind(this);\n    this.head = this.head.bind(this);\n    this.post = this.post.bind(this);\n    this.put = this.put.bind(this);\n    this.patch = this.patch.bind(this);\n  }\n\n  setBasicAuth() {\n    this.authentications.basicAuth.accessToken = `Basic ${Cookie.get('Authorization')}`;\n  }\n\n  removeBasicAuth() {\n    this.authentications.basicAuth.accessToken = Cookie.remove('Authorization');\n  }\n\n  getRequestConfig() {\n    return {\n      headers: {\n        [this.authentications.basicAuth.name]: this.authentications.basicAuth.accessToken,\n      },\n    };\n  }\n\n  get(path, query) {\n    const url = createUrl(path, query);\n    return this.client.get(url, this.getRequestConfig());\n  }\n\n  delete(path, query) {\n    const url = createUrl(path, query);\n    return this.client.delete(url, this.getRequestConfig());\n  }\n\n  head(path, query) {\n    const url = createUrl(path, query);\n    return this.client.head(url, this.getRequestConfig());\n  }\n\n  post(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.post(url, body, this.getRequestConfig());\n  }\n\n  put(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.put(url, body, this.getRequestConfig());\n  }\n\n  patch(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.patch(url, body, this.getRequestConfig());\n  }\n}\n\nexport const RestClient = new RestClientClass();\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\n\nimport { actionStates } from 'shared/lib';\nimport { loginSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nimport { Form } from './components';\n\nexport class LoginPage extends React.PureComponent {\n  componentDidMount() {\n    Cookie.remove('Authorization');\n  }\n\n  componentDidUpdate() {\n    if (this.props.status === actionStates.SUCCESS) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.login.title\"\n        isLoading={this.props.status === actionStates.LOADING}\n      >\n        <Form\n          isLoading={this.props.status === actionStates.LOADING}\n          errors={this.props.errors}\n          submit={this.props.login}\n          resetErrors={this.props.resetErrors}\n        />\n      </Container>\n    );\n  }\n\n  static path = '/login';\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  errors: PropTypes.object.isRequired,\n  status: PropTypes.oneOf([actionStates.LOADING, actionStates.SUCCESS, actionStates.FAIL, '']).isRequired,\n  login: PropTypes.func.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  errors: loginSelector(state).get('errors'),\n  status: loginSelector(state).get('status'),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (data) => dispatch(actions.login.dispatchLoading(data)),\n  resetErrors: () => dispatch(actions.login.dispatchFail([])),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport LoginGraphic from '../../../../assets/images/login_graphic.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_blue.svg';\nimport MasLogo from '../../../../assets/images/mas_logo_blue.svg';\n\nimport './container.local.scss';\n\nexport class ContainerComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={`${className} flex`}>\n        <div className={`${className}__wrapper`}>\n          <div className=\"header\">\n            <div className=\"mas-logo-container\">\n              <img className=\"img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n            </div>\n            <Typography className={`${className}__title`} variant=\"h3\" component=\"h2\">\n              <FormattedMessage id={this.props.title} />\n            </Typography>\n            {!!this.props.description && (\n              <div className={`${className}__description`}>\n                {this.props.description}\n              </div>\n            )}\n          </div>\n          {this.props.children}\n        </div>\n        <div className={`${className}__graphics`}>\n          <div className=\"logo-container\">\n            <img className=\"img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          </div>\n          <div className=\"graphic-container\">\n            <img className=\"img-responsive\" src={LoginGraphic} alt=\"Login graphic\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  description: PropTypes.string,\n  className: PropTypes.string,\n};\n\nContainerComponent.defaultProps = {\n  className: 'container',\n  description: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { RestErrors } from 'shared/components';\n\nimport './form.local.scss';\n\nexport class FormComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  render() {\n    const { className } = this.props;\n    const restErrors = this.getRestErrors();\n\n    return (\n      <div className={className}>\n        <form onSubmit={this.submitHandler} noValidate autoComplete=\"off\">\n          <div className=\"flex direction-column\">\n            <TextField\n              autoFocus\n              className={`${className}__field`}\n              helperText={this.getError('username')}\n              onChange={this.valueChangeHandler('username')}\n              variant=\"outlined\"\n              label={<FormattedMessage id=\"general.form.username\" />}\n              inputProps={{\n                className: 'qa-login-username',\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n              InputLabelProps={{\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n            />\n\n            <FormControl className={`${className}__field`} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={this.state.showPassword ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.valueChangeHandler('password')}\n                inputProps={{\n                  className: 'qa-login-password',\n                  style: { fontSize: '14px', fontFamily: 'Lato' }\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <div className=\"password-icon\">\n                      <IconButton\n                        className=\"qa-login-toggle-password-visibility\"\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.setShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                        edge=\"end\"\n                        color=\"inherit\"\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </div>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          {restErrors.size > 0 && (\n            <div className={`${className}__errors`}>\n              <RestErrors errors={restErrors} />\n            </div>\n          )}\n          <div className={`${className}__actions flex`}>\n            <Button\n              className=\"qa-login-btn\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                this.props.isLoading || this.state.username === '' || this.state.password === ''\n              }\n            >\n              <FormattedMessage id=\"session.login.button\" />\n            </Button>\n            {/* <div className=\"forgot-password qa-forgot-password\">\n              <FormattedMessage id=\"session.login.forgot-password\" />\n            </div> */}\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  setShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  getError(field) {\n    const error = this.props.errors.find(item => item.get('path') === `.${field}`);\n    if (!error) {\n      return '';\n    }\n\n    return error.get('message') || 'This field is invalid';\n  }\n\n  getRestErrors() {\n    return this.props.errors.filter(\n      item => item.get('path') !== '.username' && item.get('path') !== '.password'\n    );\n  }\n\n  resetErrors() {\n    if (this.props.errors.size) {\n      this.props.resetErrors();\n    }\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    this.props.submit({\n      username: this.state.username,\n      password: this.state.password\n    });\n  }\n\n  valueChangeHandler(name) {\n    return event => {\n      this.resetErrors();\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n}\n\nFormComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nFormComponent.defaultProps = {\n  className: 'form'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { slugify } from 'shared/lib';\n\nimport './rest-errors.local.scss';\n\nexport class RestErrorsComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        {this.props.errors.map((error) => (\n          <div key={slugify(error.get('message'))}>\n            {error.get('message')}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRestErrorsComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nRestErrorsComponent.defaultProps = {\n  className: 'rest-errors',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport './job-item.local.scss';\n\nexport class JobItemComponent extends React.PureComponent {\n  render() {\n    const { extended } = this.props;\n    if (extended) {\n      return (\n        <div className={`${this.props.className} ${this.jobStatus()}`}>\n          <div className=\"status-icon\">{this.props.statusChild}</div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {this.props.job.get('process')}</p>\n                    {this.props.job.get('schedule') && (\n                      <p>Schedule: {this.props.job.get('schedule')}</p>\n                    )}\n                  </>\n                }\n              >\n                <div className=\"name\">{this.formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {this.props.job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"date\">\n                  {moment(this.props.job.get('date_invoke'))\n                    .local()\n                    .format('MMM DD YYYY')}\n                </div>\n              </LimitlessTooltip>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${this.props.className} ${this.jobStatus()}`}>\n        <Link to={`/jobs/job?invocation=${this.props.job.get('uuid')}`}>\n          <div className=\"first-row\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {this.props.job.get('process')}</p>\n                  {this.props.job.get('schedule') && (\n                    <p>Schedule: {this.props.job.get('schedule')}</p>\n                  )}\n                </>\n              }\n            >\n              <div className=\"name\">{this.formatName()}</div>\n            </LimitlessTooltip>\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"time\">\n                {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n          <div className=\"second-row\">\n            {this.props.job.get('user_owner') && (\n              <div className=\"run-by\">\n                <AccountCircleOutlinedIcon />\n                {this.props.job.get('user_owner')}\n              </div>\n            )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('name') && (\n                <div className=\"dbms\">\n                  <SvgIcon>\n                    <Icon path={mdiHexagonMultipleOutline} />\n                  </SvgIcon>\n                  {this.props.job\n                    .get('connections')\n                    .get('dbms')\n                    .get('name')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('shell') &&\n              this.props.job\n                .get('connections')\n                .get('shell')\n                .get('host_address') && (\n                <div className=\"server\">\n                  <StorageIcon />\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('shell') &&\n                    this.props.job\n                      .get('connections')\n                      .get('shell')\n                      .get('host_address')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special')\n                .get('database') && (\n                <div className=\"database\">\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('dbms') &&\n                    this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('protocol_special')\n                      .get('database')}\n                </div>\n              )}\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"date\">\n                {moment(this.props.job.get('date_invoke')).format('MMM DD YYYY')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n\n  jobStatus = () => {\n    switch (this.props.job.get('status')) {\n      case 'EXECUTING':\n        return 'executing';\n      case 'SUCCEEDED':\n        return 'succeeded';\n      case 'SCHEDULED':\n        return 'scheduled';\n      case 'DELAYED':\n        return 'delayed';\n      case 'ABORTED':\n        return 'aborted';\n      case 'FAILED':\n        return 'failed';\n      case 'KILLED':\n        return 'killed';\n      default:\n        return '';\n    }\n  };\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItemComponent.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired,\n  extended: PropTypes.bool,\n  statusChild: PropTypes.element\n};\n\nJobItemComponent.defaultProps = {\n  className: 'job-item',\n  extended: false,\n  statusChild: null\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Center } from 'shared/components';\n\nimport { CustomTooltip, CustomAxisTick } from './components';\n\nimport './workload-graph.local.scss';\n\nexport class WorkloadGraphComponent extends React.PureComponent {\n  render() {\n    if (this.props.data.length === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ResponsiveContainer>\n          <AreaChart\n            data={this.props.data}\n            margin={{ top: 16, right: 5, left: 5, bottom: 16 }}\n            onClick={this.setSingleDay}\n          >\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0.16} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"chartStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0} />\n                <stop offset=\"5%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"95%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickSize={false}\n              axisLine={false}\n              interval=\"preserveStartEnd\"\n              tick={<CustomAxisTick />}\n            />\n            <Tooltip\n              content={<CustomTooltip isSingleDay={this.props.isSingleDay} />}\n              offset={0}\n              cursor={false}\n              viewBox={{ width: 750, height: 144 }}\n              position={{ x: 'auto', y: 0 }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"total\"\n              stroke=\"url(#chartStroke)\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#gradient)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n\n  setSingleDay = e => {\n    if (!this.props.isSingleDay && e && this.props.setSingleDay) {\n      this.props.setSingleDay({\n        startDate: moment(e.activeLabel),\n        endDate: moment(e.activeLabel)\n      });\n    }\n  };\n}\n\nexport default WorkloadGraphComponent;\n\nWorkloadGraphComponent.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nWorkloadGraphComponent.defaultProps = {\n  className: 'workload-graph'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport './custom-tooltip.local.scss';\n\nexport class CustomTooltipComponent extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.label !== this.props.label) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    if (!this.props.active || !this.props.payload || !this.props.payload.length) return null;\n\n    const label = this.props.isSingleDay\n      ? this.props.payload[0].payload.name\n      : moment(this.props.payload[0].payload.name).format('MMM DD YYYY');\n\n    return (\n      <div className={this.props.className} position={{ x: '100%', y: '-100%' }}>\n        {this.props.payload && (\n          <>\n            <div className=\"date\">{label}</div>\n            <div className=\"info-container\">\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.succeeded\" />\n                </div>\n                <div className=\"value success\">{this.props.payload[0].payload.SUCCEEDED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.aborted\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.ABORTED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.failed\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.FAILED}</div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomTooltipComponent;\n\nCustomTooltipComponent.propTypes = {\n  className: PropTypes.string,\n  payload: PropTypes.array,\n  active: PropTypes.bool,\n  label: PropTypes.string\n};\n\nCustomTooltipComponent.defaultProps = {\n  className: 'custom-tooltip',\n  payload: [],\n  active: false,\n  label: ''\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './custom-axis-tick.local.scss';\n\nexport class CustomAxisTickComponent extends React.PureComponent {\n  render() {\n    return (\n      <g transform={`translate(${this.props.x},${this.props.y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill=\"rgba(12, 50, 110, 0.38)\">{this.props.payload.value}</text>\n      </g>\n    );\n  }\n}\n\nexport default CustomAxisTickComponent;\n\nCustomAxisTickComponent.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  payload: PropTypes.object,\n};\n\nCustomAxisTickComponent.defaultProps = {\n  x: null,\n  y: null,\n  payload: {},\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './circle-img.local.scss';\n\nexport class CircleImgComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.image}\n      </div>\n    );\n  }\n}\n\nexport default CircleImgComponent;\n\nCircleImgComponent.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nCircleImgComponent.defaultProps = {\n  className: 'circle-img',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './number-label.local.scss';\n\nexport class NumberLabelComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n\nexport default NumberLabelComponent;\n\nNumberLabelComponent.propTypes = {\n  className: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nNumberLabelComponent.defaultProps = {\n  className: 'number-label',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './string-label.local.scss';\n\nexport class StringLabelComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.text}</div>;\n  }\n}\n\nexport default StringLabelComponent;\n\nStringLabelComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.node.isRequired\n};\n\nStringLabelComponent.defaultProps = {\n  className: 'string-label'\n};\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport './search-input.local.scss';\n\nexport class SearchInputComponent extends PureComponent {\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <>\n        <div className=\"search-icon\">\n          <SearchIcon />\n        </div>\n        <InputBase\n          className=\"search-input-container\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={onChange}\n          inputProps={{\n            className: 'search qa-search',\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchInputComponent;\n\nSearchInputComponent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport classnames from 'classnames';\n\nimport './dropdown.local.scss';\n\nexport class DropdownComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDropdownOpen: false\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isDropdownOpen) {\n      this.setState({ isDropdownOpen: true });\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    let parentWidth;\n\n    if (this.anchorRef && this.anchorRef.current && this.anchorRef.current.offsetWidth) {\n      parentWidth = this.anchorRef.current.offsetWidth;\n    }\n    return (\n      <>\n        {this.props.target(\n          { isOpen: this.state.isDropdownOpen, ref: this.anchorRef },\n          { toggle: this.handleToggle }\n        )}\n        {items && (\n          <Popover\n            open={this.state.isDropdownOpen}\n            anchorEl={this.anchorRef.current}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList className=\"dropdown-menu-container\" style={{ width: parentWidth }}>\n                {items.map((item, index) => (\n                  <MenuItem\n                    className={classnames('', { disabled: item.disabled })}\n                    key={index}\n                    onClick={() => this.onClickCallback(index)}\n                  >\n                    {item.icon && <ListItemIcon className=\"icon\">{item.icon}</ListItemIcon>}\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Popover>\n        )}\n      </>\n    );\n  }\n\n  handleToggle = () => {\n    if (this.props.disabled) {\n      return false;\n    }\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen\n    }));\n  };\n\n  setCloseDropdown = event => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ isDropdownOpen: false });\n  };\n\n  onClickCallback = itemIndex => {\n    this.props.onSelect(itemIndex, this.props.items[itemIndex]);\n    this.setState({ isDropdownOpen: false });\n  };\n}\n\nexport default DropdownComponent;\n\nDropdownComponent.propTypes = {\n  onSelect: PropTypes.func,\n  target: PropTypes.func,\n  items: PropTypes.array,\n  isDropdownOpen: PropTypes.bool\n};\n\nDropdownComponent.defaultProps = {\n  onSelect: () => {},\n  items: [],\n  target: (meta, actions) => (\n    <Button ref={meta.ref} onClick={actions.toggle}>\n      {meta.isOpen ? 'Close' : 'Dropdown'}\n    </Button>\n  ),\n  isDropdownOpen: false\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './small-input.local.scss';\n\nexport const SmallInputComponent = forwardRef(({ value, icon, disabled, ...others }, ref) => (\n  <div\n    ref={ref}\n    className={classnames('small-input', { disabled, active: value.length })}\n  >\n    { icon && <div className=\"icon\">{icon}</div> }\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      {...others}\n    />\n  </div>\n));\n\nSmallInputComponent.propTypes = {\n  icon: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nSmallInputComponent.defaultProps = {\n  icon: null,\n  value: '',\n  disabled: false,\n};\n\nexport default SmallInputComponent;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SingleDatePicker } from 'react-dates';\nimport { mdiCalendarBlank, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './single-date-picker.local.scss';\n\nexport class SingleDatePickerComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: true\n    };\n  }\n\n  render() {\n    const { date, onDateChange, ...others } = this.props;\n\n    return (\n      <div className=\"date-picker-container\">\n        <SingleDatePicker\n          date={date}\n          onDateChange={onDateChange}\n          focused={this.state.focused}\n          onFocusChange={({ focused }) => this.setState({ focused })}\n          id=\"date-picker\"\n          numberOfMonths={1}\n          customInputIcon={\n            <SvgIcon>\n              <Icon path={mdiCalendarBlank} />\n            </SvgIcon>\n          }\n          placeholder=\"Select Date\"\n          isOutsideRange={() => false}\n          readOnly\n          hideKeyboardShortcutsPanel\n          displayFormat=\"MMM DD YYYY\"\n          /** TODO: @Razvan, look at this please. */\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          {...others}\n        />\n      </div>\n    );\n  }\n}\n\nSingleDatePickerComponent.propTypes = {\n  date: PropTypes.object,\n  onDateChange: PropTypes.func.isRequired\n};\n\nSingleDatePickerComponent.defaultProps = {\n  date: null\n};\n\nexport default SingleDatePickerComponent;\n","import React from 'react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArrowLeftRight, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\n\nimport DateRangePickerWrapper from './range-date-range-picker.container';\nimport 'react-dates/initialize'; // necessary for latest version\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport './range-date-picker.local.scss';\n\nexport class RangeDatePicker extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"date-picker-container\">\n        <DateRangePickerWrapper\n          anchorDirection=\"left\"\n          autoFocus={false}\n          block={false}\n          readOnly\n          customArrowIcon={\n            <SvgIcon>\n              <Icon path={mdiArrowLeftRight} />\n            </SvgIcon>\n          }\n          customCloseIcon={null}\n          customInputIcon={null}\n          disabled={false}\n          displayFormat=\"MMM D YYYY\"\n          enableOutsideDays={false}\n          endDateId=\"endDate\"\n          endDatePlaceholderText=\"End Date\"\n          horizontalMargin={0}\n          initialEndDate={null}\n          initialStartDate={moment()}\n          initialVisibleMonth={null}\n          isDayBlocked={() => false}\n          isDayHighlighted={() => false}\n          isOutsideRange={() => false}\n          isRTL={false}\n          keepOpenOnDateSelect={false}\n          minimumNights={0}\n          monthFormat=\"MMMM YYYY\"\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navPosition=\"navPositionTop\"\n          numberOfMonths={2}\n          onClose={() => false}\n          onNextMonthClick={() => false}\n          onPrevMonthClick={() => false}\n          orientation=\"horizontal\"\n          phrases={{\n            calendarLabel: 'Calendar',\n            chooseAvailableEndDate: function noRefCheck() {},\n            chooseAvailableStartDate: function noRefCheck() {},\n            clearDates: 'Clear Dates',\n            closeDatePicker: 'Close',\n            dateIsSelected: function noRefCheck() {},\n            dateIsSelectedAsEndDate: function noRefCheck() {},\n            dateIsSelectedAsStartDate: function noRefCheck() {},\n            dateIsUnavailable: function noRefCheck() {},\n            enterKey: 'Enter key',\n            escape: 'Escape key',\n            focusStartDate: 'Interact with the calendar and add the check-in date for your trip.',\n            hideKeyboardShortcutsPanel: 'Close the shortcuts panel.',\n            homeEnd: 'Home and end keys',\n            jumpToNextMonth: 'Move forward to switch to the next month.',\n            jumpToPrevMonth: 'Move backward to switch to the previous month.',\n            keyboardBackwardNavigationInstructions:\n              'Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardForwardNavigationInstructions:\n              'Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardShortcuts: 'Keyboard Shortcuts',\n            leftArrowRightArrow: 'Right and left arrow keys',\n            moveFocusByOneDay: 'Move backward (left) and forward (right) by one day.',\n            moveFocusByOneMonth: 'Switch months.',\n            moveFocusByOneWeek: 'Move backward (up) and forward (down) by one week.',\n            moveFocustoStartAndEndOfWeek: 'Go to the first or last day of a week.',\n            openThisPanel: 'Open this panel.',\n            pageUpPageDown: 'page up and page down keys',\n            questionMark: 'Question mark',\n            returnFocusToInput: 'Return to the date input field.',\n            roleDescription: 'datepicker',\n            selectFocusedDate: 'Select the date in focus.',\n            showKeyboardShortcutsPanel: 'Open the keyboard shortcuts panel.',\n            upArrowDownArrow: 'up and down arrow keys'\n          }}\n          regular={false}\n          renderCalendarDay={undefined}\n          renderDayContents={text => this.renderDayContents(text)}\n          renderMonthText={null}\n          reopenPickerOnClearDates={false}\n          required={false}\n          screenReaderInputMessage=\"\"\n          showClearDates={false}\n          showDefaultInputIcon={false}\n          small={false}\n          startDateId=\"startDate\"\n          startDatePlaceholderText=\"Start Date\"\n          stateDateWrapper={() => false}\n          withFullScreenPortal={false}\n          withPortal={false}\n          onDatesChange={this.props.onDatesChange}\n          endDate={this.props.endDate}\n          startDate={this.props.startDate}\n          focusedInput={null}\n          hideKeyboardShortcutsPanel\n        />\n      </div>\n    );\n  }\n\n  renderDayContents = text => (\n    <div className=\"wrapper-custom-date\">\n      <div className=\"custom-date\">{text.date()}</div>\n    </div>\n  );\n}\n\nRangeDatePicker.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onDatesChange: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { array, object, oneOfType } from 'prop-types';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline,\n  mdiCancel,\n  mdiHexagonMultipleOutline,\n  mdiDatabase\n} from '@mdi/js';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { LightTooltip, LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Center } from 'shared/components';\n\nimport './JobResults.local.scss';\n\nexport class JobResults extends React.PureComponent {\n  render() {\n    const { jobs, fromSearch } = this.props;\n\n    if (jobs && jobs.size === 0) {\n      if (fromSearch) {\n        return <></>;\n      }\n      return <Center>Job list is empty</Center>;\n    }\n    return <>{this.renderJobsResults(jobs)}</>;\n  }\n\n  renderJobsResults = jobs =>\n    jobs.map((job, index) => (\n      <Link key={index} to={`/jobs/job?invocation=${job.get('uuid')}`}>\n        <div className=\"result-job-row\">\n          <LightTooltip placement=\"bottom-start\" title={job.get('status').toUpperCase()}>\n            <div className=\"job-status-container\">{this.jobStatus(job.get('status'))}</div>\n          </LightTooltip>\n          <div className=\"job-content\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {job.get('process')}</p>\n                  {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                </>\n              }\n            >\n              <div className=\"first-row\">{this.formatName(job.get('process'))}</div>\n            </LimitlessTooltip>\n\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  <ScheduleIcon />\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    ));\n\n  jobStatus = status => {\n    switch (status) {\n      case 'EXECUTING':\n        return (\n          <div className=\"job-status executing\">\n            <SvgIcon>\n              <Icon path={mdiProgressClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SUCCEEDED':\n        return (\n          <div className=\"job-status succeeded\">\n            <SvgIcon>\n              <Icon path={mdiCheckCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SCHEDULED':\n        return (\n          <div className=\"job-status scheduled\">\n            <SvgIcon>\n              <Icon path={mdiCalendarArrowRight} />\n            </SvgIcon>\n          </div>\n        );\n      case 'ABORTED':\n        return (\n          <div className=\"job-status aborted\">\n            <SvgIcon>\n              <Icon path={mdiStopCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'DELAYED':\n        return (\n          <div className=\"job-status delayed\">\n            <SvgIcon>\n              <Icon path={mdiTimelineClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'FAILED':\n        return (\n          <div className=\"job-status failed\">\n            <SvgIcon>\n              <Icon path={mdiAlertRhombusOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'KILLED':\n        return (\n          <div className=\"job-status killed\">\n            <SvgIcon>\n              <Icon path={mdiCancel} />\n            </SvgIcon>\n          </div>\n        );\n      default:\n        return '';\n    }\n  };\n\n  formatName = jobName => {\n    const formattedName = [];\n    const name = jobName.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    return formattedName;\n  };\n}\n\nJobResults.propTypes = {\n  jobs: oneOfType([array, object])\n};\n\nexport default JobResults;\n","import React, { createContext, useContext } from 'react';\nimport { any, node } from 'prop-types';\n\nconst Context = createContext();\n\nexport function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nSwitch.propTypes = {\n  value: any,\n  children: node\n};\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nCase.propTypes = {\n  value: any,\n  children: node\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUITable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport './Table.local.scss';\n\nexport const Table = ({ columns, children, sortBehavior, changeSort, className }) => {\n  return (\n    <MUITable stickyHeader className={className}>\n      <TableHead className=\"sticky-head\">\n        <TableRow>\n          {columns.map(HeaderCell(sortBehavior, changeSort))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {children}\n      </TableBody>\n    </MUITable>\n  );\n};\n\nconst HeaderCell = (sortBehavior, changeSort) => (column, index) => (\n  <TableCell\n    key={`header_column_${index}`}\n    align={column.align}\n    padding={column.padding}\n    sortDirection={sortBehavior ? sortBehavior.order : false}\n    variant={column.variant}\n  >\n    {column.sortKey && (\n      <TableSortLabel\n        active={sortBehavior.sortKey === column.sortKey}\n        direction={sortBehavior.order}\n        onClick={changeSort(column.sortKey, sortBehavior.order === 'asc' ? 'desc' : 'asc')}\n      >\n        {column.component ? column.component() : column.label}\n      </TableSortLabel>\n    )}\n    {!column.sortKey && (\n      column.component ? column.component() : column.label\n    )}\n  </TableCell>\n);\n\nTable.Row = TableRow;\nTable.Cell = TableCell;\n\nTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  sortBehavior: PropTypes.shape({\n    order: PropTypes.string,\n    sortKey: PropTypes.string\n  }),\n  changeSort: PropTypes.func\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nexport class LogoutPage extends React.PureComponent {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.logout.title\"\n        isLoading\n      >\n        <div />\n      </Container>\n    );\n  }\n\n  static path = '/logout';\n}\n\nLogoutPage.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: (data) => dispatch(actions.logout.dispatchLoading(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartTimelineVariant } from '@mdi/js';\n\nimport {\n  Center,\n  CircleImg,\n  JobItem,\n  NumberLabel,\n  RangeDatePicker,\n  StringLabel,\n  WorkloadGraph\n} from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Main, Paper } from 'shared/components/layout';\nimport { filterStatusSelector } from './store/state';\nimport { Header } from 'core/components/Header';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { fetchEntity } from 'entities/actions';\nimport { Search, StatusContainer } from './containers';\n\nimport './root.module.scss';\nimport { ConnectedServersList } from './containers/servers-list/ServersList';\n\nexport class RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n\n    this.onChangeDatesHandler = this.onChangeDatesHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n\n    if (\n      this.props.entitiesStatus.process === 'not-fetched' ||\n      this.props.entitiesStatus.process === 'failed'\n    ) {\n      this.props.request('process');\n    }\n  }\n\n  render() {\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Dashboard\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const averageJobs = Math.round(parseInt(this.props.jobs.get('total_count'), 10) / (days + 1));\n\n    return (\n      <div className={this.props.className}>\n        <Header>\n          <h1 className=\"header-title\">Dashboard</h1>\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Search />\n        <StatusContainer />\n        <div className=\"summary-container\">\n          <div className=\"jobs-container\">\n            {this.props.jobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <>\n                <div className=\"jobs-content\" id=\"jobs-content\">\n                  {this.filteredJobs(this.props.storeFilterStatus)}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"workload-container\">\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Generating Workload Chart</Loader>\n                </Center>\n              ) : (\n                <>\n                  <div className=\"workload-header\">\n                    <CircleImg\n                      image={\n                        <SvgIcon>\n                          <Icon path={mdiChartTimelineVariant} />\n                        </SvgIcon>\n                      }\n                    />\n                    <NumberLabel number={averageJobs} />\n                    <StringLabel\n                      text={\n                        <>\n                          <FormattedMessage id=\"dashboard.jobs\" />/\n                          <FormattedMessage id=\"dashboard.day\" />\n                        </>\n                      }\n                    />\n                  </div>\n                  <div className=\"workload-content\">\n                    <WorkloadGraph\n                      data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                        currentDate: moment.unix(\n                          this.props.globalFilters.get('startDate'),\n                          'YYYY-MM-DD'\n                        ),\n                        endDate: moment.unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                      })}\n                      isSingleDay={\n                        moment\n                          .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD') ===\n                        moment\n                          .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD')\n                      }\n                      setSingleDay={this.onChangeDatesHandler}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"servers-usage-container\">\n              <ConnectedServersList />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  filteredJobs = status => {\n    const { jobs } = this.props;\n\n    if (status === 'ALL') {\n      if (jobs.get('content').size === 0) {\n        return <Center>There are no jobs available with the selected filters</Center>;\n      }\n\n      return (\n        <>\n          {jobs\n            .get('content')\n            .slice(0, 20)\n            .map((item, index) => (\n              <JobItem key={index} job={item} />\n            ))}\n          {jobs.get('total_count') > 20 && (\n            <Button className=\"full-log center qa-view-full-log\">\n              <Link to=\"/jobs\">\n                <FormattedMessage id=\"dashboard.view-full-log\" />\n              </Link>\n            </Button>\n          )}\n        </>\n      );\n    }\n\n    const totalFilteredJobs = jobs.get('content').filter(job => job.get('status') === status).size;\n\n    if (totalFilteredJobs === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <>\n        {jobs\n          .get('content')\n          .filter(job => job.get('status') === status)\n          .slice(0, 20)\n          .map((item, index) => (\n            <JobItem key={index} job={item} />\n          ))}\n        {totalFilteredJobs > 20 && (\n          <Button className=\"full-log center qa-view-full-log\">\n            <Link to={`/jobs?status=${status}`}>\n              <FormattedMessage id=\"dashboard.view-full-log\" />\n            </Link>\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  onChangeDatesHandler(range) {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n\n      const start = moment(range.startDate.format('YYYY-MM-DD'));\n      const end = moment(range.endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n      this.props.getJobs({\n        date_invoke: moment(range.startDate).format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      });\n    }\n  }\n}\n\nRootModule.propTypes = {\n  className: PropTypes.string,\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nRootModule.defaultProps = {\n  className: 'dashboard'\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  storeFilterStatus: filterStatusSelector(state),\n  entitiesStatus: state.entities.fetch_status\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  request: data => dispatch(fetchEntity(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { node } from 'prop-types';\nimport classnames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.local.scss';\n\nexport const Loader = ({ children, inline, left, ...props }) => {\n  return (\n    <div className={classnames('loader', { inline, left })}>\n      <CircularProgress {...props} />\n      {children && <div className=\"loader-text\">{children}</div>}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  children: node\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './ParameterLoader.local.scss';\n\nexport const ParameterLoader = ({ children }) => {\n  return (\n    <div className=\"loader\">\n      {children && <div className=\"loader-text\">{children}</div>}\n      <div className=\"loader-slot\">\n        <LinearProgress variant=\"indeterminate\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { bool, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Overflow } from '../Overflow/Overflow';\n\nimport './Paper.local.scss';\n\nexport const Paper = ({ padded, flex, children, ...rest }) => (\n  <div className={classnames('paper', { padded, [flex]: flex })} {...rest}>\n    {children}\n  </div>\n);\n\nPaper.propTypes = {\n  children: node,\n  padded: bool,\n  flex: oneOf(['column', 'row'])\n};\n\nPaper.defaultProps = {\n  padded: true,\n  flex: 'column'\n};\n\nexport const PaperHeader = ({ children, ...rest }) => (\n  <header className=\"paper-header\" {...rest}>\n    {children}\n  </header>\n);\n\nPaperHeader.propTypes = {\n  children: node\n};\n\nexport const PaperContent = ({ children, scrollable }) => {\n  if (scrollable) {\n    return (\n      <Overflow className=\"paper-content\" variant=\"white\">\n        {children}\n      </Overflow>\n    );\n  }\n\n  return <main className=\"paper-content\">{children}</main>;\n};\n\nPaperContent.propTypes = {\n  scrollable: bool,\n  children: node\n};\n\nPaperContent.defaultProps = {\n  scrollable: true\n};\n\nexport const PaperFooter = ({ children }) => <footer className=\"paper-footer\">{children}</footer>;\n\nPaperFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nPaperFooter.Left = LeftSideSlot;\nPaperFooter.Right = RightSideSlot;\n\nexport const PaperTitle = ({ children, ...rest }) => (\n  <h2 className=\"paper-title\" {...rest}>\n    {children}\n  </h2>\n);\n\nPaperTitle.propTypes = {\n  children: node\n};\n\nPaper.Header = PaperHeader;\nPaper.Title = PaperTitle;\nPaper.Content = PaperContent;\nPaper.Footer = PaperFooter;\n","import React from 'react';\nimport { node, bool } from 'prop-types';\nimport classnames from 'classnames';\nimport './Main.local.scss';\n\nexport const Main = ({ flex, mdPage, children }) => (\n  <main\n    className={classnames('page-main', { flex, 'md-page': mdPage })}\n  >\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: node,\n  flex: bool,\n  mdPage: bool,\n};\n\nMain.defaultProps = {\n  flex: true,\n  mdPage: false\n};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Section.local.scss';\n\nexport const Section = ({ children, full }) => (\n  <section\n    className={classnames('section-block', {\n      full\n    })}\n  >\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  children: node,\n  full: bool\n};\n\nexport const SectionTitle = ({ children, info }) => (\n  <>\n    <h3 className=\"section-title\">{children}</h3>\n    {info && <h4 className=\"section-title-info\">{info}</h4>}\n  </>\n);\n\nSectionTitle.propTypes = {\n  children: node,\n  info: node\n};\n\nexport const SectionHeader = ({ children }) => (\n  <>\n    <header className=\"section-header\">{children}</header>\n  </>\n);\n\nSectionHeader.propTypes = {\n  children: node\n};\n\nexport const SectionInfo = ({ children }) => (\n  <>\n    <h4 className=\"section-title-info\">{children}</h4>\n  </>\n);\n\nSectionInfo.propTypes = {\n  children: node\n};\n\nexport const SectionContent = ({ children }) => (\n  <>\n    <main className=\"section-content\">{children}</main>\n  </>\n);\n\nSection.Header = SectionHeader;\nSection.Content = SectionContent;\nSection.Title = SectionTitle;\nSection.Info = SectionInfo;\n","import React, { useState, useCallback } from 'react';\n\nimport { func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './ScrollableContainer.local.scss';\n\nexport const ScrollableContainer = ({ children, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  return (\n    <div\n      className={classnames('scrollable-container', {\n        scrolled,\n        [variant]: variant\n      })}\n    >\n      {children({\n        className: classnames('scrollable-element', {\n          [variant]: variant\n        }),\n        onWheel\n      })}\n    </div>\n  );\n};\n\nScrollableContainer.propTypes = {\n  children: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nScrollableContainer.defaultProps = {};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport './Column.local.scss';\n\nexport const Column = ({ children, ...rest }) => {\n  return (\n    <div className=\"column\" {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Row.local.scss';\n\nexport const Row = ({ children, compact, ...rest }) => {\n  return (\n    <div className={classnames('row', { compact })} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { jobsSelector } from 'shared/store/state';\nimport { filterStatusSelector } from '../../store/state';\n\nimport { Daemon, JobStatus } from './components';\n\nimport './status.local.scss';\n\nexport class StatusContainer extends React.PureComponent {\n  render() {\n    const { className, jobs } = this.props;\n    return (\n      <Paper className={className}>\n        <Daemon />\n        <div className=\"jobs-status-container\">\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader inline>Loading jobs</Loader>\n            </Center>\n          ) : (\n            this.filterJobs(jobs.toJS().content)\n          )}\n        </div>\n      </Paper>\n    );\n  }\n\n  filterJobs = jobs => {\n    const { active } = this.props;\n    const count = {\n      executing: 0,\n      succeeded: 0,\n      scheduled: 0,\n      aborted: 0,\n      failed: 0\n    };\n    count.executing = jobs.filter(job => job.status === 'EXECUTING')?.length;\n    count.succeeded = jobs.filter(job => job.status === 'SUCCEEDED')?.length;\n    count.scheduled = jobs.filter(job => job.status === 'SCHEDULED')?.length;\n    count.aborted = jobs.filter(job => job.status === 'ABORTED')?.length;\n    count.failed = jobs.filter(job => job.status === 'FAILED')?.length;\n\n    return (\n      <>\n        <JobStatus count={count.executing} status=\"EXECUTING\" active={active} />\n        <JobStatus count={count.succeeded} status=\"SUCCEEDED\" active={active} />\n        <JobStatus count={count.scheduled} status=\"SCHEDULED\" active={active} />\n        <JobStatus count={count.aborted} status=\"ABORTED\" active={active} />\n        <JobStatus count={count.failed} status=\"FAILED\" active={active} />\n      </>\n    );\n  };\n}\n\nStatusContainer.propTypes = {\n  className: PropTypes.string,\n  jobs: PropTypes.object.isRequired\n};\n\nStatusContainer.defaultProps = {\n  className: 'status-container'\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  active: filterStatusSelector(state)\n});\n\nexport default connect(mapStateToProps)(StatusContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { daemonPoller } from '../../../../store/tasks';\nimport { isDaemonRunning } from '../../../../store/selectors';\n\nimport './daemon.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const Daemon = () => {\n  const running = useSelector(isDaemonRunning);\n\n  useEffect(() => {\n    daemonPoller.start();\n\n    return () => {\n      daemonPoller.stop();\n    };\n  }, []);\n\n  return (\n    <div className=\"daemon qa-daemon-status\">\n      {running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.running\" />}>\n          <div className=\"status running\">\n            <PlayCircleOutlineIcon />\n          </div>\n        </LightTooltip>\n      )}\n\n      {!running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.not.running\" />}>\n          <div className=\"status not-running\">\n            <ErrorOutlineIcon className=\"not-running\" />\n          </div>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport { actions } from 'dashboard/store/actions';\nimport { filterStatusSelector } from 'dashboard/store/state';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-status.local.scss';\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return <>{this.renderContent()}</>;\n  }\n\n  filterByStatus = status => {\n    if (this.props.storeStatus === status.toUpperCase()) {\n      this.props.setStatus('ALL');\n    } else {\n      this.props.setStatus(status.toUpperCase());\n    }\n  };\n\n  renderContent() {\n    let icon = null;\n    let status = '';\n    switch (this.props.status) {\n      case 'EXECUTING':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiProgressClock} />\n          </SvgIcon>\n        );\n        status = 'executing';\n        break;\n      case 'SUCCEEDED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCheckCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'succeeded';\n        break;\n      case 'SCHEDULED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCalendarArrowRight} />\n          </SvgIcon>\n        );\n        status = 'scheduled';\n        break;\n      case 'ABORTED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiStopCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'aborted';\n        break;\n      case 'FAILED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiAlertRhombusOutline} />\n          </SvgIcon>\n        );\n        status = 'failed';\n        break;\n      default:\n        // error message\n        break;\n    }\n\n    if (icon) {\n      return (\n        <div\n          className={classnames(`job-status ${status}`, {\n            active: this.props.status === this.props.active\n          })}\n          role=\"presentation\"\n          onClick={() => this.filterByStatus(status)}\n        >\n          <div className=\"header\">\n            <div className=\"icon\">{icon}</div>\n            <div className=\"count\">\n              {this.props.count}\n              {this.props.status === this.props.active && (\n                <LightTooltip placement=\"right\" title=\"Active filter\">\n                  <CheckCircleIcon className=\"active-filter\" />\n                </LightTooltip>\n              )}\n            </div>\n          </div>\n          <div className=\"status\">{this.props.status}</div>\n        </div>\n      );\n    }\n    // error case\n    return null;\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setStatus: PropTypes.func\n};\n\nexport const mapStateToProps = state => ({\n  storeStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setStatus: status => dispatch(actions.setFilterStatus.dispatchEvent(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobStatus);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector } from 'shared/store/state';\n\nimport { FormattedMessage } from 'react-intl';\nimport { debounce } from 'lodash';\nimport { mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport Paper from '@material-ui/core/Paper';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { SearchInput } from 'shared/components';\nimport { SearchResults } from '../../components';\nimport { setFilterSearch, setFilterType } from 'entities/actions';\n\nimport './search-area.local.scss';\n\nexport class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSearchResults: false,\n      searchTerm: ''\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    if (this.state.showSearchResults) {\n      this.getSearchResults(searchedTerm);\n    }\n  }, 500);\n\n  render() {\n    const {\n      className,\n      getSearchedJobs,\n      entitiesStatus,\n      setSearchFilter,\n      setTypeFilter\n    } = this.props;\n    return (\n      <Paper\n        className={`${className} ${this.state.showSearchResults ? 'no-bottom-radius' : ''}\n        `}\n      >\n        <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n\n        {this.state.searchTerm.length > 0 && (\n          <div className=\"clear-search\">\n            <ClearIcon onClick={this.clearSearch} />\n          </div>\n        )}\n        {this.state.showSearchResults && (\n          <div className=\"search-results-container\">\n            <SearchResults\n              category=\"jobs\"\n              totalResults={getSearchedJobs.get('total_count')}\n              content={getSearchedJobs.get('content')}\n              isLoading={getSearchedJobs.get('fetching')}\n              displayedResults={3}\n              filters={{\n                nameFilter: this.state.searchTerm\n              }}\n            />\n            <SearchResults\n              category=\"processes\"\n              totalResults={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).count\n              }\n              content={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).processes\n              }\n              isLoading={entitiesStatus.process === 'fetching'}\n              displayedResults={3}\n              searchedTerm={this.state.searchTerm}\n              setFilterSearch={setSearchFilter}\n              setFilterType={setTypeFilter}\n            />\n            <div className=\"full-results-container qa-full-search-results\">\n              <div className=\"icon-container\">\n                <SearchIcon />\n              </div>\n              <div className=\"content\">\n                <FormattedMessage id=\"dashboard.view-full-search-results\" />\n              </div>\n              <div className=\"open qa-open-full-results\">\n                <SvgIcon>\n                  <Icon path={mdiChevronRight} />\n                </SvgIcon>\n              </div>\n            </div>\n          </div>\n        )}\n      </Paper>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: 3,\n      page: 1,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n  };\n\n  filterProcesses = (processStatus, searchedTerm) => {\n    if (processStatus === 'fetching' || !searchedTerm) {\n      return { processes: [], count: 0 };\n    }\n    if (this.props.storedProcesses && this.props.storedProcesses.length > 0) {\n      const results = this.props.storedProcesses.filter(p => p.name.includes(searchedTerm));\n\n      return { processes: results.slice(0, 3), count: results.length };\n    }\n    return { processes: [], count: 0 };\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length < 3 && this.state.showSearchResults) {\n      this.setState({ showSearchResults: false });\n    } else if (searchedTerm.length === 3) {\n      if (!this.state.showSearchResults) {\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    } else if (searchedTerm.length > 3) {\n      if (!this.state.showSearchResults) {\n        // used for pasted value\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({\n      showSearchResults: false,\n      searchTerm: ''\n    });\n  };\n}\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  searchJobs: PropTypes.func.isRequired,\n  getSearchedJobs: PropTypes.object.isRequired\n};\n\nSearch.defaultProps = {\n  className: 'search-container'\n};\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state),\n  entitiesStatus: state.entities.fetch_status,\n  storedProcesses: state.entities.data?.process?.data?.data?.processes\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data)),\n  setSearchFilter: data => dispatch(setFilterSearch(data)),\n  setTypeFilter: data => dispatch(setFilterType(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed } from '@mdi/js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport { JobResults } from 'shared/components/JobResults';\nimport { createUrl } from 'shared/lib';\n\nimport './search-results.local.scss';\n\nexport class SearchResultsComponent extends React.PureComponent {\n  render() {\n    const {\n      className,\n      category,\n      totalResults,\n      isLoading,\n      displayedResults,\n      content,\n      searchedTerm = '',\n      setFilterSearch,\n      setFilterType\n    } = this.props;\n    return (\n      <div className={className}>\n        {isLoading ? (\n          <div className=\"header-area\">\n            <div className=\"category-name\">{category}</div>\n            <div className=\"loading\">\n              <CircularProgress size=\"20px\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"header-area\">\n              <div className=\"category-name\">{category}</div>\n              <div className=\"separator\">-</div>\n              <div className=\"total-results\">\n                {totalResults} <FormattedMessage id=\"dashboard.results\" />\n              </div>\n              {totalResults > displayedResults && (\n                <Button className=\"all-results qa-view-all-results\">\n                  {category === 'jobs' && (\n                    <Link to={() => this.createURLLink()}>\n                      <FormattedMessage id=\"dashboard.view-all-results\" />\n                    </Link>\n                  )}\n                  {category === 'processes' && (\n                    <div\n                      role=\"presentation\"\n                      onClick={() => {\n                        setFilterSearch(searchedTerm);\n                        setFilterType('process');\n                      }}\n                    >\n                      <Link to=\"/system/entities\">\n                        <FormattedMessage id=\"dashboard.view-all-results\" />\n                      </Link>\n                    </div>\n                  )}\n                </Button>\n              )}\n            </div>\n            <div className=\"content-area\">\n              {category === 'jobs' && <JobResults jobs={content} fromSearch />}\n              {category === 'processes' && this.renderProcessesResults()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderProcessesResults = () =>\n    this.props.content.map((process, index) => (\n      <div key={index} className=\"result-process-row\">\n        <div className=\"icon-container\">\n          <SvgIcon>\n            <Icon path={mdiPlaySpeed} />\n          </SvgIcon>\n        </div>\n        <div className=\"process-container\">{process.name}</div>\n      </div>\n    ));\n\n  createURLLink = () => {\n    let url = '/jobs';\n    const params = {};\n\n    if (this.props.filters.nameFilter) {\n      params.name_filter = this.props.filters.nameFilter;\n    }\n\n    url = createUrl(url, params);\n    return url;\n  };\n}\n\nexport default SearchResultsComponent;\n\nSearchResultsComponent.propTypes = {\n  className: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  category: PropTypes.string,\n  totalResults: PropTypes.number,\n  isLoading: PropTypes.bool,\n  displayedResults: PropTypes.number\n};\n\nSearchResultsComponent.defaultProps = {\n  className: 'results-container',\n  content: [],\n  category: '',\n  totalResults: 0,\n  isLoading: false,\n  displayedResults: 3\n};\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport { bool } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MUITextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from '../../LightTooltip/LightTooltip';\n\nimport './Input.local.scss';\n\nexport const Input = forwardRef(function InputFw(\n  { inline, error, size, children, description, multiline, variant, ...rest },\n  ref\n) {\n  const InputProps = { ...(rest.InputProps && rest.InputProps) };\n\n  const nrRows = rest?.isPopup ? 9999 : 7;\n\n  if (description) {\n    InputProps.endAdornment = (\n      <>\n        <InputAdornment position=\"end\">\n          <LightTooltip title={description}>\n            <SvgIcon>\n              <path d={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        </InputAdornment>\n        {InputProps.endAdornment}\n      </>\n    );\n  }\n\n  return (\n    <MUITextField\n      ref={ref}\n      fullWidth\n      className={classnames('input-field', { inline, error })}\n      variant={variant || 'outlined'}\n      error={error}\n      {...(multiline && {\n        multiline: true,\n        rows: nrRows\n      })}\n      {...rest}\n      InputProps={InputProps} // eslint-disable-line\n      size={size}\n    >\n      {children}\n    </MUITextField>\n  );\n});\n\nInput.propTypes = {\n  inline: bool,\n  error: bool\n};\n","import React from 'react';\nimport MUIButton from '@material-ui/core/Button';\n\nimport './Button.local.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nexport const Button = ({ to, href, ...props }) => {\n  const link = to || href;\n\n  if (link) {\n    return <MUIButton color=\"primary\" {...props} component={LinkBehavior} to={link} />;\n  }\n\n  return <MUIButton color=\"primary\" {...props} />;\n};\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './ModalFooter.local.scss';\n\nexport const ModalFooter = ({ children }) => {\n  return <footer className=\"modal-footer\">{children}</footer>;\n};\n\nModalFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nModalFooter.Left = LeftSideSlot;\nModalFooter.Right = RightSideSlot;\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ErrorModal.local.scss';\n\nexport const ErrorModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ConfirmationModal.local.scss';\n\nexport const ConfirmationModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '400px',\n          maxHeight: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              No\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.confirm();\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { JobsEffect } from './jobs/jobs.effect';\nimport { JobsConnectionsEffect } from './connections/connections.effect';\nimport { SearchJobsEffect } from './search-jobs/search-jobs.effect';\nimport { SearchProcessesEffect } from './search-processes/search-processes.effect';\nimport { GlobalFiltersEffect } from './global-filters/global-filters.effect';\n\nexport const sharedEffects = [\n  JobsEffect,\n  JobsConnectionsEffect,\n  SearchJobsEffect,\n  SearchProcessesEffect,\n  GlobalFiltersEffect\n];\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Cookie from 'js-cookie';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\n\nimport { Login, Logout } from 'session';\nimport { actionStates } from 'shared/lib/action-creator';\nimport { authorizationSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Layout } from './core';\n\nimport './scoped-css-mui-compatibility';\n\nexport class RootModule extends React.PureComponent {\n  componentDidMount() {\n    if (!Cookie.get('Authorization')) {\n      this.props.history.listen((newLocation, action) => {\n        if (action === 'PUSH') {\n          if (\n            newLocation.pathname !== this.currentPathname ||\n            newLocation.search !== this.currentSearch\n          ) {\n            this.currentPathname = newLocation.pathname;\n            this.currentSearch = newLocation.search;\n            this.props.history.push({\n              pathname: newLocation.pathname,\n              search: newLocation.search\n            });\n          }\n        } else {\n          this.props.history.go(1);\n        }\n      });\n      this.props.history.push('/login');\n      this.props.setAuthorization();\n      return;\n    }\n\n    const username = JSON.parse(localStorage.getItem('username')) || 'mas';\n\n    this.props.checkAuthorization(username);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.authorizationStatus !== prevProps.authorizationStatus &&\n      this.props.authorizationStatus === actionStates.FAIL\n    ) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    if (this.props.authorizationStatus === actionStates.LOADING) {\n      return (\n        <Center>\n          <CircularProgress />\n        </Center>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path={Login.path} component={Login} />\n        <Route exact path={Logout.path} component={Logout} />\n        <Route path=\"/\" component={Layout} />\n      </Switch>\n    );\n  }\n}\n\nRootModule.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  authorizationStatus: PropTypes.oneOf([\n    '',\n    actionStates.SUCCESS,\n    actionStates.LOADING,\n    actionStates.FAIL\n  ]).isRequired,\n  setAuthorization: PropTypes.func.isRequired,\n  checkAuthorization: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  authorizationStatus: authorizationSelector(state).get('status')\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  checkAuthorization: user => dispatch(actions.checkAuthorization.dispatchLoading(user)),\n  setAuthorization: () => dispatch(actions.checkAuthorization.dispatchFail())\n});\n\nexport default hot(connect(mapStateToProps, mapDispatchToProps)(RootModule));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Dashboard } from 'dashboard';\nimport { Jobs } from 'jobs';\nimport { Entities } from 'entities';\nimport { UsersAndGroups } from 'users-manager';\nimport { Explorer } from 'explorer';\nimport { Sidebar } from './containers';\nimport { JobProcess } from '../job-process';\nimport { ConnectedExecutiveDashboard } from 'executive-dashboard/ExecutiveDashboard';\nimport { LicenseCollection } from 'license-collection/LicenseCollection';\nimport { LicenseAllocation } from '../license-allocation/LicenseAllocation';\nimport { Licensing } from '../licensing/Licensing';\nimport { DbmsType } from '../explorer/SystemExplorerFeatureUtil';\n\nimport './root.local.scss';\n\nexport class RootLayout extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Sidebar />\n        <div className=\"app-container\">\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/jobs/job\" component={JobProcess} />\n            <Route exact path=\"/system/entities\" component={Entities} />\n            <Route path=\"/system/mas-accounts\" component={UsersAndGroups} />\n            <Route exact path=\"/system/explorer\" component={Explorer} />\n            <Route\n              exact\n              path=\"/compliance/executive-dashboard\"\n              component={ConnectedExecutiveDashboard}\n            />\n            <Route\n              exact\n              path=\"/compliance/mssql-executive-dashboard\"\n              render={() => (\n                <ConnectedExecutiveDashboard dbType={DbmsType.MSSQL} />\n              )}\n            />\n            <Route exact path=\"/compliance/license-collection\" component={LicenseCollection} />\n            <Route exact path=\"/compliance/license-allocation\" component={LicenseAllocation} />\n            <Route exact path=\"/compliance/licensing\" component={Licensing} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nRootLayout.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from 'users-manager/store/thunks';\nimport { Header } from 'core/components/Header';\nimport { Center, RangeDatePicker, SimpleSearchInput, Switch, WorkloadGraph } from 'shared/components';\nimport { Main, Paper } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { ConnectedJobList } from './components/job-list/job-list.component';\nimport { JobItem } from './components/job-item';\nimport { Filters } from './containers/filters';\nimport { JobsInvocations } from './containers/jobs-invocations';\nimport { Schedule } from './containers/Schedule/Schedule';\nimport { TotalJobsCount } from './components/total-jobs-count/TotalJobsCount';\nimport { getCurrentUserDetails } from '../session/store/selectors';\nimport { hasCreatePrivilege } from '../entities/utils/privileges';\nimport { SecurityAreas } from '../entities/utils/security-areas';\n\nimport './jobs.local.scss';\n\nfunction renderJobItem(item, index, filters, loggedUser) {\n  return <JobItem extended key={index} job={item} filters={filters} loggedUser={loggedUser} />;\n}\n\nclass RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      },\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_filter: {\n        dbms: query.get('platform_filter_dbms') || '',\n        name: query.get('platform_filter_name') || ''\n      }, // will have the platform_name_filter and platform_dbms_filter\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      name_filter: query.get('name_filter') || '',\n      user_filter: query.get('user_filter') || '',\n      selectedTab: 'all',\n      isWorkloadDisplayed: false,\n      pageFilters: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.allUsers.length === 0) {\n      this.props.loadAllUsers();\n    }\n  }\n\n  render() {\n    const {\n      shell_host_address_filter,\n      platform_filter,\n      status,\n      database_name_filter,\n      user_filter,\n      selectedTab,\n      isWorkloadDisplayed\n    } = this.state;\n\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n    const canCreateSchedule = hasCreatePrivilege(this.props.userDetails, SecurityAreas.SCHEDULE);\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Jobs\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    return (\n      <JobsInvocations>\n        <Header title=\"Jobs\">\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <NavigationTab\n                tabs={[\n                  { label: 'All jobs', value: 'all' },\n                  { label: 'Current jobs', value: 'current-jobs' },\n                  { label: 'Scheduled', value: 'scheduled' }\n                ]}\n                active={selectedTab}\n                onClick={this.handleOnTabChange}\n              />\n              {(selectedTab === 'all' || selectedTab === 'current-jobs') && (\n                <Button\n                  style={{\n                    whiteSpace: 'nowrap',\n                    lineHeight: '20px',\n                    height: '20px',\n                    paddingTop: '0'\n                  }}\n                  onClick={this.toggleWorkloadDisplay}\n                >\n                  {isWorkloadDisplayed ? 'Hide Workload' : 'Display workload'}\n                </Button>\n              )}\n            </Paper.Header>\n            <Switch value={selectedTab}>\n              <Switch.Case value=\"all\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount jobs={this.props.jobs.get('content').toJS()} status={status} />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"current-jobs\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount\n                    jobs={this.props.jobs\n                      .get('content')\n                      .filter(item => item.get('status') !== 'SCHEDULED')\n                      .toJS()}\n                    status={status}\n                  />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"scheduled\">\n                <TotalJobsCount\n                  jobs={this.props.jobs\n                    .get('content')\n                    .filter(item => item.get('status') === 'SCHEDULED')\n                    .toJS()}\n                  status=\"SCHEDULED\"\n                />\n              </Switch.Case>\n            </Switch>\n            <Paper.Content scrollable={false}>\n              <div className=\"jobs-filters-controllers\">\n                <div className=\"job-search\">\n                  <SimpleSearchInput\n                    value={this.state.name_filter}\n                    onChange={this.onSearchInputChange}\n                    onKeyDown={this.onKeyDown}\n                  />\n                </div>\n                <Filters\n                  selections={{\n                    shell_host_address_filter,\n                    platform_filter,\n                    status,\n                    database_name_filter,\n                    user_filter\n                  }}\n                  onChange={this.handleOnFilterChange}\n                  excludeStatus={selectedTab === 'scheduled'}\n                  currentTab={selectedTab}\n                />\n              </div>\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Loading jobs list</Loader>\n                </Center>\n              ) : (\n                <ConnectedJobList items={this.returnListBasedOnTab()} filters={this.state.pageFilters}>\n                  {renderJobItem}\n                </ConnectedJobList>\n              )}\n            </Paper.Content>\n            {canCreateSchedule && (\n              <Paper.Footer>\n                <Schedule userDetails={this.props.userDetails} />\n                <Button to=\"/jobs/job\">New Job</Button>\n              </Paper.Footer>\n            )}\n          </Paper>\n        </Main>\n      </JobsInvocations>\n    );\n  }\n\n  toggleWorkloadDisplay = () => {\n    this.setState(prevState => ({\n      isWorkloadDisplayed: !prevState.isWorkloadDisplayed\n    }));\n  };\n\n  updateQSP = (filter, value) => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (typeof value === 'object') {\n      const keys = Object.keys(value);\n\n      keys.forEach(key => {\n        if (!value[key]) {\n          query.delete(`${filter}_${key}`);\n        } else if (query.has(`${filter}_${key}`) && query.get(`${filter}_${key}`) !== value[key]) {\n          query.set(`${filter}_${key}`, value[key]);\n        } else {\n          query.append(`${filter}_${key}`, value[key]);\n        }\n      });\n    } else if (!value) {\n      query.delete(filter);\n    } else if (query.has(filter) && query.get(filter) !== value) {\n      query.set(filter, value);\n    } else {\n      query.append(filter, value);\n    }\n\n    query.toString();\n\n    this.props.history.push({ search: `?${query}` });\n  };\n\n  handleOnTabChange = tab => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (query.get('status')) {\n      query.delete('status');\n      query.toString();\n\n      this.props.history.push({ search: `?${query}` });\n      this.setState({ status: '', selectedTab: tab }, () => {\n        this.performFilter(this.state);\n      });\n    } else {\n      this.setState({ selectedTab: tab });\n    }\n  };\n\n  handleOnFilterChange = (filter, value) => {\n    this.updateQSP(filter, value);\n\n    this.setState(\n      {\n        [filter]: value\n      },\n      () => {\n        this.performFilter(this.state);\n      }\n    );\n  };\n\n  returnListBasedOnTab = () => {\n    const { selectedTab, status } = this.state;\n    const list = this.props.jobs.get('content');\n\n    if (status) {\n      return list.filter(item => item.get('status') === status);\n    }\n\n    if (selectedTab === 'scheduled') {\n      return list.filter(item => item.get('status') === 'SCHEDULED');\n    }\n\n    if (selectedTab === 'current-jobs') {\n      return list.filter(item => item.get('status') !== 'SCHEDULED');\n    }\n\n    return list;\n  };\n\n  performFilter = ({\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter,\n    name_filter,\n    range\n  }) => {\n    if (range.startDate === null || range.endDate === null) return;\n\n    const start = moment(range.startDate.format('YYYY-MM-DD'));\n    const end = moment(range.endDate.format('YYYY-MM-DD'));\n    const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n    const payload = {\n      date_invoke: range.startDate.format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    };\n\n    if (shell_host_address_filter) {\n      payload.shell_host_address_filter = shell_host_address_filter;\n    }\n\n    if (platform_filter) {\n      payload.platform_name_filter = platform_filter.name;\n      payload.platform_dbms_filter = platform_filter.dbms;\n    }\n\n    if (status) {\n      payload.status = status;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (name_filter) {\n      payload.name_filter = name_filter;\n    }\n\n    if (user_filter) {\n      payload.owner = user_filter;\n    }\n\n    this.props.getJobs(payload);\n    this.setState({ pageFilters: payload });\n  };\n\n  onSearchInputChange = event => {\n    this.setState({\n      name_filter: event.target.value\n    });\n  };\n\n  onKeyDown = event => {\n    if (event.key === 'Enter' && !this.props.jobs.get('fetching')) {\n      this.updateQSP('name_filter', event.target.value);\n      this.performFilter(this.state);\n    }\n  };\n\n  onChangeDatesHandler = range => {\n    this.setState(\n      {\n        range: {\n          startDate: range.startDate,\n          endDate: range.endDate\n        }\n      },\n      () => {\n        this.props.setGlobalFilters(range);\n        this.performFilter(this.state);\n      }\n    );\n  };\n}\nRootModule.propTypes = {\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  allUsers: state.usersManager.users.all,\n  userDetails: getCurrentUserDetails(state),\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n  },\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  loadAllUsers: () => dispatch(loadAllUsersThunk())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiClockOutline, mdiDatabase, mdiHexagonMultipleOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { ConnectedDeleteJobModal } from '../../actions/delete/DeleteJobModal';\nimport { JobStatus } from '../job-status';\nimport { InvocationStatus } from '../../../job-process/store/constants';\nimport './job-item.local.scss';\n\nconst ALLOWED_FOR_DELETE = [\n  InvocationStatus.SCHEDULED,\n  InvocationStatus.EXECUTING,\n  InvocationStatus.DELAYED\n];\n\nexport const JobItem = ({ job, filters, loggedUser }) => {\n  const [open, setOpen] = useState(false);\n  const canDelete = loggedUser.get('name') === 'mas' && ALLOWED_FOR_DELETE.includes(job.get('status'));\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n  const [uuid, setUuid] = useState('');\n\n  const formatName = () => {\n    let name = job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas = formatName.canvas || (formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n  return (\n    <>\n      <Link to={`/jobs/job/?invocation=${job.get('uuid')}`}>\n        <div className=\"job-item\">\n          <div className=\"status-icon\">\n            <JobStatus status={job.get('status')} />\n          </div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {job.get('process')}</p>\n                    {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                  </>\n                }\n              >\n                <div className=\"name\">{formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"metadata-element time\">\n                  <SvgIcon>\n                    <path d={mdiClockOutline} />\n                  </SvgIcon>\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"metadata-element run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"metadata-element dbms\">\n                    <SvgIcon>\n                      <path d={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"metadata-element server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"metadata-element database\">\n                    <SvgIcon>\n                      <path d={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n          {canDelete && (\n            <div className=\"job-actions\">\n              <Button\n                color=\"secondary\"\n                onClick={event => {\n                  event.preventDefault();\n                  setOpen(true);\n                  setUuid(job.get('uuid'));\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          )}\n        </div>\n      </Link>\n\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={uuid} filters={filters} />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiCancel,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport './job-status.local.scss';\n\nconst statusMap = {\n  EXECUTING: mdiProgressClock,\n  SUCCEEDED: mdiCheckCircleOutline,\n  SCHEDULED: mdiCalendarArrowRight,\n  DELAYED: mdiTimelineClock,\n  ABORTED: mdiStopCircleOutline,\n  FAILED: mdiAlertRhombusOutline,\n  KILLED: mdiCancel\n};\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return (\n      <LightTooltip placement=\"bottom-start\" title={this.props.status.toUpperCase()}>\n        <div className=\"daemon qa-daemon-status\">\n          <div className={`status ${this.props.status.toLowerCase()}`}>\n            <SvgIcon>\n              <path d={statusMap[this.props.status]} />\n            </SvgIcon>\n          </div>\n        </div>\n      </LightTooltip>\n    );\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string\n};\nJobStatus.defaultProps = {\n  status: ''\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { mapSortInsensitive } from 'users-manager/store/mappers';\nimport { getJobsFiltersOptions } from 'shared/store/selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiHexagonMultipleOutline, mdiDatabase, mdiServer, mdiCircleSlice5 } from '@mdi/js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\nimport { Input } from 'shared/components/controls';\n\nimport './filters.scss';\n\nexport const PLATFORM = [\n  { label: 'MariaDB', name: 'mariadb', dbms: 'mysql', value: { name: 'mariadb', dbms: 'mysql' } },\n  {\n    label: 'MySQL',\n    name: 'mysql',\n    dbms: 'mysql',\n    value: { name: 'mysql', dbms: 'mysql' }\n  },\n  { label: 'Oracle', name: 'oracle', dbms: 'oracle', value: { name: 'oracle', dbms: 'oracle' } },\n  { label: 'PostgreSQL', name: 'pgsql', dbms: 'pgsql', value: { name: 'pgsql', dbms: 'pgsql' } },\n  {\n    label: 'Microsoft SQL Server',\n    name: 'microsoft.sqlserver',\n    dbms: 'mssql',\n    value: { name: 'microsoft.sqlserver', dbms: 'mssql' }\n  },\n  {\n    label: 'Oracle RDS',\n    name: 'rds.oracle',\n    dbms: 'oracle',\n    value: { name: 'rds.oracle', dbms: 'oracle' }\n  }\n];\n\nconst Filters = props => {\n  const { filters, selections, onChange, excludeStatus, allUsers, currentTab } = props;\n  const {\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter\n  } = selections;\n\n  const users = [\n    { value: '', label: 'All' },\n    ...allUsers.map(user => ({ label: user.name, value: user.name }))\n  ];\n  const selectedUser = users.find(u => u.value && u.value === user_filter) ?? '';\n  const platforms = [\n    { value: { name: '', dbms: '' }, label: 'All' },\n    ...PLATFORM.map(el => ({ value: el.value, label: el.label }))\n  ];\n  const selectedPlatform =\n    platforms.find(p => p?.value?.name && p.value.name === platform_filter?.name) ?? '';\n  const servers = [\n    { value: '', label: 'All' },\n    ...filters.address.map(el => ({ value: el, label: el }))\n  ];\n  const selectedServer =\n    servers.find(sv => sv.value && sv.value === shell_host_address_filter) ?? '';\n  const databases = [\n    { value: '', label: 'All' },\n    ...filters.database.map(el => ({ value: el, label: el }))\n  ];\n  const selectedDb = databases.find(db => db.value && db.value === database_name_filter) ?? '';\n  let statuses = [\n    { value: '', label: 'All' },\n    ...filters.status.map(el => ({ value: el, label: el }))\n  ];\n\n  if (currentTab === 'current-jobs') {\n    statuses = statuses.filter(s => s.value !== 'SCHEDULED');\n  }\n\n  const selectedStatus = statuses.find(s => s.value && s.value === status) ?? '';\n\n  return (\n    <div className=\"job-filters\">\n      <Autocomplete\n        disableClearable\n        id=\"users-filter\"\n        options={users}\n        value={selectedUser}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('user_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <AccountCircleOutlinedIcon />\n                <span className=\"job-filter-select-label\">Users</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"platform-filter\"\n        options={platforms}\n        value={selectedPlatform}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('platform_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Platform</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"server-filter\"\n        options={servers}\n        value={selectedServer}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('shell_host_address_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiServer} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Server</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"database-filter\"\n        options={databases}\n        value={selectedDb}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('database_name_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiDatabase} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Database</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      {!excludeStatus && (\n        <Autocomplete\n          disableClearable\n          id=\"status-filter\"\n          options={statuses}\n          value={selectedStatus}\n          getOptionLabel={opt => opt.label || ''}\n          onChange={(e, option) => {\n            onChange('status', option?.value || '');\n          }}\n          style={{ color: 'red' }}\n          renderInput={params => (\n            <Input\n              {...params}\n              size=\"small\"\n              label={\n                <span className=\"job-filter-select-label-wrap\">\n                  <SvgIcon>\n                    <path d={mdiCircleSlice5} />\n                  </SvgIcon>\n                  <span className=\"job-filter-select-label\">Status</span>\n                </span>\n              }\n              variant=\"outlined\"\n            />\n          )}\n        />\n      )}\n    </div>\n  );\n};\nFilters.propTypes = {\n  filters: PropTypes.object.isRequired,\n  selections: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  excludeStatus: PropTypes.bool\n};\n\nexport const mapStateToProps = state => ({\n  filters: getJobsFiltersOptions(state),\n  allUsers: mapSortInsensitive(state.usersManager.users.all)\n});\n\nexport default connect(mapStateToProps)(Filters);\n","import { createSelector } from 'reselect';\n\nimport { connectionsSelector } from '../state';\n\nexport const getJobsFiltersOptions = createSelector(connectionsSelector, connections => {\n  const filters = {\n    address: [], // connections - server\n    protocol: [], // connections - dbms\n    status: ['EXECUTING', 'SUCCEEDED', 'SCHEDULED', 'ABORTED', 'FAILED', 'DELAYED', 'KILLED'], // hardcoded\n    database: [] // connections -  database\n  };\n\n  connections.get('content').forEach(connection => {\n    const address = connection.get('address');\n    const protocol = connection.get('protocol');\n    const database = connection.getIn(['special', 'database']);\n\n    if (address && !filters.address.includes(address)) {\n      filters.address.push(address);\n    }\n\n    if (protocol && !filters.protocol.includes(protocol)) {\n      if (protocol !== 'SSH') {\n        filters.protocol.push(protocol);\n      }\n    }\n\n    if (database && !filters.database.includes(database)) {\n      filters.database.push(database);\n    }\n  });\n  return filters;\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector } from 'shared/store/state';\n\nexport const JobsInvocations = ({ children }) => {\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n\n  const dispatch = useDispatch();\n  const getJobs = data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n    dispatch(actions.getConnections.dispatchLoading(data));\n  };\n  const globalFilters = useSelector(globalFiltersSelector);\n\n  React.useEffect(() => {\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    getJobs({\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_name_filter: query.get('platform_filter_name') || '',\n      platform_dbms_filter: query.get('platform_filter_dbms') || '',\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      owner: query.get('user_filter') || '',\n      name_filter: query.get('name_filter') || ''\n    });\n  }, []);\n\n  return children;\n};\nJobsInvocations.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","export const deepCopy = (value) => {\n  return JSON.parse(JSON.stringify(value));\n};\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport Container from '@material-ui/core/Container';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MenuItem } from '@material-ui/core';\nimport { fetchEntity, openModal, selectEntity, setFilterSearch, setFilterType } from './actions';\nimport { ENTITY_TYPES, getBreadcrumbs, getEntities, getSelectedEntity } from './selectors';\nimport Entity from './components/Entity';\nimport SelectedEntity from './containers/SelectedEntity';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport debounce from 'lodash/debounce';\n\nimport './root.local.scss';\n\n/* eslint-disable */\n\n\nconst ENTITY_ICONS = {\n  root: <FolderIcon />,\n  namespace: <FolderIcon />,\n  constant: <FilterCenterFocusIcon />,\n  form: <AssignmentTurnedInIcon />,\n  schedule: <EventNoteIcon />,\n  account: <VpnKeyIcon />,\n  process: <SlowMotionVideoIcon />,\n  type: <DeveloperModeIcon />,\n  exception: <WarningIcon />,\n  prototype: <AssignmentIcon />,\n  CachedIcon:<CachedIcon />\n};\n\nlet searchWithDebounce = () => {};\n\nfunction RootModule({\n  fetchEntity,\n  selectEntity,\n  columns,\n  breadcrumbs,\n  filters,\n  setFilterType,\n  setFilterSearch,\n  selectedEntity,\n  entitiesStatus,\n  job\n}) {\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'not-fetched' || entitiesStatus[key] === 'failed') {\n        fetchEntity(key);\n      }\n    }\n\n    searchWithDebounce = debounce(value => {\n      setFilterSearch(value);\n    }, 700);\n    if (filters.search) {\n      setSearchInput(filters.search);\n    }\n  }, []);\n\n  function renderBreadcrumb(breadcrumb) {\n    return (\n      <span key={breadcrumb}>\n        <span className=\"breadcrumb\">{breadcrumb}</span> /{' '}\n      </span>\n    );\n  }\n\n  function renderColumn(columns, colNum) {\n    return (\n      <div key={colNum}>\n        {columns.rows.map(entity => (\n          <Entity\n            key={entity.name}\n            entity={entity}\n            selectEntity={selectEntity}\n            columns={columns}\n            entityIcons={ENTITY_ICONS}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function handleSearchChange(e) {\n    const val = e.target.value;\n    searchWithDebounce(val);\n    setSearchInput(val);\n  }\n\n  function loadingData() {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'fetching') {\n        return (\n          <div className=\"loading\">\n            <CircularProgress size={15} />\n            <span>Loading {key} entities...</span>\n          </div>\n        );\n      }\n    }\n\n    return null;\n  }\n\n\n  function renderColumns() {\n    if (Array.isArray(columns) && columns[0]?.rows?.length) {\n      return columns.map(renderColumn);\n    }\n\n    if (Object.values(entitiesStatus).find(e => e === 'fetching')) {\n      return null;\n    } else {\n      return 'No Entities Found.';\n    }\n  }\n\n  function clearCach(){\n     window.location.reload(false);\n     sessionStorage.removeItem(\"persist:root\");\n    \n  }\n\n  return (\n    <>\n      <Header title=\"System / Entities\" />\n      <Container maxWidth={false} classes={{ root: 'define-height-container' }}>\n        <div className=\"entities-breadcrumb\">{['root', ...breadcrumbs].map(renderBreadcrumb)}</div> \n        <br />\n        {sessionStorage.getItem(\"persist:root\") && <div><CachedIcon style={{ color: 'green',cursor: 'pointer' }}  onClick={e => clearCach()} /><span onClick={e => clearCach()} style={{fontSize: \"13px\",color: \"#047f04\",fontWeight: \"bolder\",cursor: 'pointer'}}>Clear cache </span> </div> }\n        <div className=\"entities-filters\">\n          <Select value={filters.type} onChange={ev => setFilterType(ev.target.value)}>\n            {[{ type: 'all', title: 'ALL' }, ...ENTITY_TYPES].map(type => (\n              <MenuItem key={type.type} value={type.type}>\n                {type.title}\n              </MenuItem>\n            ))}\n          </Select>\n          <div className=\"entities-search-wrap\">\n            <SimpleSearchInput value={searchInput} onChange={handleSearchChange} />\n          </div>\n        </div>\n        {loadingData()}\n        <div className=\"grid-container define-height-grid-root\">\n          <div className=\"entities-list-container define-height\">\n            <div className=\"columns\">{renderColumns()}</div>\n          </div>\n          <div className=\"selected-entity-container\">\n            <SelectedEntity selectedEntity={selectedEntity} entityIcons={ENTITY_ICONS} />\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nRootModule.propTypes = {\n  fetchEntity: PropTypes.func,\n  selectEntity: PropTypes.func,\n  setFilterType: PropTypes.func,\n  setFilterSearch: PropTypes.func,\n  columns: PropTypes.array,\n  breadcrumbs: PropTypes.array,\n  filters: PropTypes.object,\n  selectedEntity: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    columns: getEntities(state),\n    breadcrumbs: getBreadcrumbs(state),\n    filters: state.entities.filters,\n    selectedEntity: getSelectedEntity(state),\n    entitiesStatus: state.entities.fetch_status\n  }),\n  { fetchEntity, selectEntity, setFilterType, setFilterSearch, openModal }\n)(RootModule);\n","import React from 'react';\nimport { Route, Link, Switch, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header/Header';\n\nimport { Button } from 'shared/components/controls';\n\nimport { HeaderPageSwitch } from './components/HeaderPageSwitch/HeaderPageSwitch';\n\nimport { UsersPage } from './users';\n\nimport { GroupsPage } from './groups';\n\nexport const UsersAndGroupsPage = () => {\n  return (\n    <>\n      <Header>\n        <UserManagementHeaderLinks />\n        <RightSideControls />\n      </Header>\n      <UserManagementSwitch />\n    </>\n  );\n};\n\nexport const UserManagementHeaderLinks = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  const routes = [\n    { to: `${url}/users`, label: 'Users' },\n    { to: `${url}/groups`, label: 'Groups' }\n  ];\n\n  return <HeaderPageSwitch active={location.pathname} routes={routes} />;\n};\n\nexport const RightSideControls = () => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  if (location.pathname.includes('create-new')) {\n    return null;\n  }\n\n  if (location.pathname.includes('users')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/users/create-new`} component={Link}>\n          Create User\n        </Button>\n      </div>\n    );\n  }\n\n  if (location.pathname.includes('groups')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/groups/create-new`} component={Link}>\n          Create Group\n        </Button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const UserManagementSwitch = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${url}`}>\n        <UsersPage />\n      </Route>\n      <Route path={`${url}/groups`}>\n        <GroupsPage />\n      </Route>\n      <Route path={`${url}/users`}>\n        <UsersPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default UsersAndGroupsPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { array, func, object } from 'prop-types';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Center, Main } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from '../store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\nimport { loadAllGroupsThunk } from '../groups/store/thunks';\nimport { ConnectedUserLoader } from './containers/UserLoader';\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { UserCard } from '../components/UserCard/UserCard';\nimport { NoUserSelectedPage } from './pages/NoUsersSelected';\nimport { CreateNewUserPage } from './pages/CreateNewUser/CreateNewUser';\n\nimport './root.scss';\n\nexport const UsersPage = ({\n  allUsers,\n  selectedUser,\n  loadAllUsers,\n  allGroups,\n  loadAllGroups,\n  isLoading\n}) => {\n  useEffect(() => {\n    loadAllUsers();\n    if (allGroups.length === 0) {\n      loadAllGroups();\n    }\n  }, []);\n\n  function filterUserByQuery(user, query) {\n    return user.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const userLink = user => {\n    return `${match.url}/${user.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading users...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"users-search-section\">\n        <SearchableList items={allUsers} filter={filterUserByQuery}>\n          {user => <UserCard selected={selectedUser} user={user} href={userLink(user)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <UserSwitch />\n      </section>\n    </Main>\n  );\n};\n\nUsersPage.propTypes = {\n  allUsers: array,\n  selectedUser: object,\n  loadAllUsers: func\n};\n\nexport const UserSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewUserPage />\n      </Route>\n      <Route path={`${path}/:userName`}>\n        <ConnectedUserLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoUserSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allUsers: mapSortInsensitive(state.usersManager.users.all),\n    selectedUser: state.usersManager.users.selected,\n    allGroups: state.groups.all,\n    isLoading: state.usersManager.flags.users.loading\n  }),\n  dispatch => ({\n    loadAllUsers: () => dispatch(loadAllUsersThunk()),\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(UsersPage);\n","import React, { useEffect } from 'react';\nimport { func, array } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadAllGroupsThunk } from './store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { GroupCard } from './components/GroupCard/GroupCard';\n\nimport { ConnectedGroupLoader } from './pages/GroupView/GroupView';\nimport { CreateNewGroupPage } from './pages/CreateNewGroup/CreateNewGroup';\nimport { NoGroupSelectedPage } from './pages/NoGroupSelected';\n\nimport './root.local.scss';\n\nexport const GroupsPage = ({ allGroups, loadAllGroups, isLoading }) => {\n  useEffect(() => {\n    loadAllGroups();\n  }, []);\n\n  function filterGroupByQuery(group, query) {\n    return group.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const groupLink = group => {\n    return `${match.url}/${group.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading groups...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"search-list-section\">\n        <SearchableList items={allGroups} filter={filterGroupByQuery}>\n          {group => <GroupCard group={group} href={groupLink(group)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <GroupsPagesSwitch />\n      </section>\n    </Main>\n  );\n};\n\nGroupsPage.propTypes = {\n  allGroups: array,\n  loadAllGroups: func\n};\n\nexport const GroupsPagesSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewGroupPage />\n      </Route>\n      <Route path={`${path}/:groupName`}>\n        <ConnectedGroupLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoGroupSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allGroups: mapSortInsensitive(state.groups.all.filter(g => g.name !== 'user')),\n    isLoading: state.groups.ops.all.loading\n  }),\n  dispatch => ({\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(GroupsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func, object } from 'prop-types';\nimport moment from 'moment';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddIcon from '@material-ui/icons/Add';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Center, RangeDatePicker } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper } from 'shared/components/layout';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions } from 'shared/store/actions';\nimport { Button } from 'shared/components/controls';\nimport { Header } from 'core/components/Header';\nimport { loadAllAccountsThunk, loadProtocolsThunk } from './store/thunks';\nimport { Treeview } from './treeview';\nimport { ConnectedBreadcrumbsTitle } from './containers/Breadcrumbs/Breadcrumbs';\nimport { ContentSwitch } from './components/ContentSwitch/ContentSwitch';\nimport { AddServerCard } from './containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from './containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from './containers/ImportCSV/ImportCSV';\nimport { ToggleSystemExplorerView } from './components/ToggleSystemExplorerView/ToggleSystemExplorerView';\nimport { SystemExplorerViewMode } from './components/ToggleSystemExplorerView/SystemExplorerViewMode';\nimport { ConnectedSystemExplorerTable } from './components/TableView/SystemExplorerTable';\n\nimport './root.local.scss';\n\nexport class ExplorerPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      anchorElement: null,\n      viewMode: SystemExplorerViewMode.TABLE\n    };\n  }\n\n  componentDidMount() {\n    const { loadProtocols, loadAllAccounts } = this.props;\n\n    loadProtocols();\n    loadAllAccounts();\n  }\n\n  render() {\n    const {\n      treeviewData,\n      isLoading,\n      storeState: { level }\n    } = this.props;\n\n    const { viewMode } = this.state;\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    return (\n      <>\n        <Header stretchContent>\n          <h1 className=\"header-title\">System / Explorer</h1>\n          {level === 'workload' || level === 'license' ? (\n            <RangeDatePicker\n              onDatesChange={this.onChangeDatesHandler}\n              startDate={moment.unix(this.props.globalFilters.get('startDate'))}\n              endDate={moment.unix(this.props.globalFilters.get('endDate'))}\n            />\n          ) : null}\n\n          <ToggleSystemExplorerView active={viewMode} onClickCallback={(newMode) => this.setState({ viewMode: newMode })} />\n        </Header>\n        <Main mdPage>\n          {isLoading ? (\n            <Center>\n              <Loader>Loading accounts...</Loader>\n            </Center>\n          ) : (\n            viewMode === SystemExplorerViewMode.TILES && (\n              <>\n                <Treeview data={treeviewData} />\n                <Paper className=\"tiles-view-container\">\n                  <Paper.Header>\n                    <h1 className=\"breadcrumbs-title\">\n                      <ConnectedBreadcrumbsTitle />\n                    </h1>\n                    <div className=\"action-container\">\n                      <Button\n                        startIcon={<AddIcon />}\n                        className=\"action-btn\"\n                        aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\"\n                        onClick={this.handleClick}\n                        disabled={isDisabled}\n                      >\n                        Add connection\n                      </Button>\n                      <Menu\n                        id=\"connections-menu\"\n                        keepMounted\n                        anchorEl={this.state.anchorElement}\n                        open={Boolean(this.state.anchorElement)}\n                        onClose={this.handleClose}\n                      >\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <AddServerCard disabled={isDisabled} />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <AddDatabaseCard disabled={isDisabled} />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <ImportCSV disabled={isDisabled} />\n                        </MenuItem>\n                      </Menu>\n                    </div>\n                  </Paper.Header>\n                  <ContentSwitch activePage={level} />\n                </Paper>\n              </>\n            )\n          )}\n          {!isLoading && viewMode === SystemExplorerViewMode.TABLE && (\n            <>\n              <ConnectedSystemExplorerTable\n                data={treeviewData}\n                switchToTileView={() => this.setState({ viewMode: SystemExplorerViewMode.TILES })}\n              />\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n\n  handleClick = event => {\n    this.setState({ anchorElement: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorElement: null });\n  };\n\n  onChangeDatesHandler = range => {\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n    }\n  };\n}\n\nExplorerPage.propTypes = {\n  treeviewData: array,\n  loadAllAccounts: func,\n  isLoading: bool,\n  storeState: object,\n  globalFilters: object,\n  setGlobalFilters: func\n};\n\nexport default connect(\n  state => ({\n    treeviewData: state.explorer.structured?.dbms || [],\n    isLoading: state.explorer.flags.accounts.loading || state.explorer.flags.protocols.loading,\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    loadAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    loadProtocols: () => dispatch(loadProtocolsThunk()),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(ExplorerPage);\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { ConnectedDBMS } from './layers/Dbms/Dbms';\n\nimport './root.local.scss';\n\nexport class Treeview extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <ul className=\"treeview-container\">\n        {data.map(dbms => (\n          <ConnectedDBMS key={dbms.protocol} data={dbms} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTreeview.propTypes = {\n  data: array\n};\n\nexport default Treeview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StorageSidebar, ObjectsSidebar } from './Sidebar';\nimport { StorageViewer, ObjectsViewer } from './Viewer';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport const DbObjects = ({\n  type,\n  data,\n  list,\n  dbName,\n  protocol,\n  selectedItem,\n  setItem,\n  loadingFlags,\n  invalidObjects\n}) => {\n  const { loadingPoints, loadingDetails, loading } = loadingFlags;\n  const sidebarDisabled = SystemExplorerFeatureUtil.isObjectsSidebarDisabled(protocol);\n  if (type === 'storage') {\n    return (\n      <div className=\"db-objects-tabs\">\n        <StorageSidebar\n          dbName={dbName}\n          isLoading={loadingPoints}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n        <StorageViewer data={data} isLoading={loadingDetails} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"db-objects-tabs\">\n      {!sidebarDisabled && (\n        <ObjectsSidebar\n          dbName={dbName}\n          invalidObjects={invalidObjects}\n          isLoading={loading}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n      )}\n      <ObjectsViewer data={data} isLoading={loading} sidebarDisabled={sidebarDisabled} protocol={protocol} />\n    </div>\n  );\n};\n\nDbObjects.propTypes = {\n  type: PropTypes.string,\n  data: PropTypes.object,\n  list: PropTypes.array,\n  selectedItem: PropTypes.object,\n  setItem: PropTypes.func,\n  dbName: PropTypes.string,\n  protocol: PropTypes.string\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { actions } from 'session/store/actions';\nimport { beHealthSelector, beLicenceSelector, beVersionSelector, currentUserSelector } from 'session/store/state';\nimport { Compile, Navigation, UserMenu } from './components';\nimport pkg from '../../../../../package.json';\nimport MasLogo from '../../../../assets/images/mas_logo_white.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_white.svg';\nimport './sidebar.local.scss';\n\nconst RUNNING = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'rgb(79, 219, 70)',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nconst STATUS_SPAN = {\n  color: '#fff',\n  fontSize: '11px',\n  marginLeft: '14px',\n  textShadow: '1px 1px 1px #3765af3b',\n  position: 'relative',\n  top: '-2px'\n};\n\nconst STOPPED = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'red',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nexport class SidebarContainer extends React.PureComponent {\n  componentDidMount() {\n    this.props.getBeVersion();\n    this.props.getBeLicence();\n    this.props.getBeHealth();\n  }\n\n  render() {\n    const postgresStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.postgresStatus : null;\n    const masDaemonStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.masDaemonStatus : null;\n    const uptime1Minute = this.props.beHealth\n      ? `${this.props.beHealth.masSystemsMonitor.uptime1Minute},${this.props.beHealth.masSystemsMonitor.uptime5Minutes},${this.props.beHealth.masSystemsMonitor.uptime15Minutes}`\n      : null;\n\n    const daysUntilExpire = this.props.beLicence ? this.props.beLicence.licensed_feature[1].daysUntilExpire : null;\n    const expirationDate = this.props.beLicence ? this.props.beLicence.licensed_feature[1].expirationDate : null;\n    const licenseStatus = this.props.beLicence ? this.props.beLicence.licensed_feature[1].licenseStatus : null;\n\n    return (\n      <div className={this.props.className}>\n        <div className=\"logo-container\">\n          <img className=\"vendita-logo img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          <LightTooltip\n            placement=\"right\"\n            title={\n              <>\n                <div>\n                  <span style={{ paddingRight: '2px' }}>UI </span>version:&nbsp;\n                  {pkg.version}\n                </div>\n                <div>\n                  <span>BE </span>version:&nbsp;\n                  {this.props.beVersion}\n                </div>\n\n                <div>\n                <span>BE </span>License: {(licenseStatus ? 'MAS Lite' : 'MAS Full')} <br />\n                  Expiration Date: {expirationDate} <br />\n                  Days Until Expire: {daysUntilExpire} <br />\n                </div>\n              </>\n            }\n          >\n            <img className=\"mas-logo img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n          </LightTooltip>\n        </div>\n        <div className=\"nav-area\">\n          <div style={{ position: 'relative', bottom: '17px', right: '2px' }}>\n          {masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {!masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {!postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {uptime1Minute && (\n            <div style={{ top: '23px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          {!uptime1Minute && (\n            <div style={{ top: '20px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          </div>\n          <Navigation />\n        </div>\n        <div className=\"bottom\">\n          <Compile />\n          <UserMenu user={this.props.currentUser.get('name')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebarContainer.propTypes = {\n  className: PropTypes.string,\n  currentUser: PropTypes.object.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  currentUser: currentUserSelector(state),\n  beVersion: beVersionSelector(state),\n  beLicence: beLicenceSelector(state),\n  beHealth: beHealthSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getBeVersion: data => dispatch(actions.getBeVersion.dispatchLoading(data)),\n  getBeLicence: data => dispatch(actions.getBeLicence.dispatchLoading(data)),\n  getBeHealth: data => dispatch(actions.getBeHealth.dispatchLoading(data))\n});\n\nSidebarContainer.defaultProps = {\n  className: 'sidebar'\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarContainer);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarOutline } from '@mdi/js';\n\nimport './favorites.local.scss';\n\nexport class Favorites extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-nav-favorites`}>\n        <SvgIcon>\n          <Icon path={mdiStarOutline} />\n        </SvgIcon>\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  className: PropTypes.string\n};\n\nFavorites.defaultProps = {\n  className: 'favorites'\n};\n\nexport default Favorites;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { navigationItems } from './constants';\n\nimport './navigation.local.scss';\n\nexport class Navigation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      navId: '',\n      anchorElement: null\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setCurrentNavItem();\n  }\n\n  componentDidUpdate() {\n    this.setCurrentNavItem();\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {navigationItems.map((item, index) => {\n          if (item.items && item.items.length > 0) {\n            return (\n              <div key={index}>\n                <div\n                  role=\"presentation\"\n                  key={index}\n                  className={`nav-item ${\n                    this.state.activeTab === index || this.state.navId === item.id ? ' active ' : ''\n                  } ${item.qaClass ? item.qaClass : ''}`}\n                  onMouseEnter={(event) => this.handlePopoverOpen(event, item.id)}\n                  onMouseLeave={() => this.handlePopoverClose(item.id)}\n                >\n                  <IconButton className=\"icon\">{item.icon}</IconButton>\n                  <p>{item.title}</p>\n                </div>\n                <Popover\n                  className=\"nav-sublist-container\"\n                  anchorEl={this.state.anchorElement}\n                  open={this.state.navId === item.id}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={this.setCloseDropdown}>\n                      <MenuList className=\"nav-sublist-menu\" id=\"menu-list-grow\">\n                        {item.items.map(subItem => (\n                          subItem.group ? (\n                            <div className=\"menu-group-item\">{subItem.title}</div>\n                          ) : (\n                            <MenuItem\n                              key={subItem.to}\n                              className={subItem.qaClass}\n                              to={subItem.to}\n                              component={Link}\n                              onClick={this.setCloseDropdown}\n                            >\n                              {subItem.title}\n                            </MenuItem>\n                          )\n                        ))}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Popover>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              role=\"presentation\"\n              key={item.to}\n              className={`nav-item ${this.state.activeTab === index ? 'active' : ''} ${\n                item.qaClass ? item.qaClass : ''\n              }`}\n              onClick={() => this.setActiveTab(index, item.to)}\n              onMouseEnter={() => this.handlePopoverClose(item.id)}\n            >\n              <IconButton className=\"icon\">{item.icon}</IconButton>\n              <p>{item.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page) {\n      this.props.history.push(page);\n    }\n    this.setState({ navId: '' });\n  };\n\n  handlePopoverOpen = (event, name) => {\n    this.setState({ navId: name, anchorElement: event.target });\n  };\n\n  handlePopoverClose = (name) => {\n    if (this.state.navId !== name) {\n      this.setState({ navId: '', anchorElement: null });\n    }\n  };\n\n  setActiveTab = (newActiveTab, page) => {\n    this.props.history.push(page);\n    this.setState({ activeTab: newActiveTab, navId: '' });\n  };\n\n  setCurrentNavItem() {\n    const index = navigationItems.findIndex(\n      item =>\n        item.to === this.props.location.pathname || this.props.location.pathname.startsWith(item.to)\n    );\n\n    if (this.state.activeTab !== index) {\n      this.setState({ activeTab: index });\n    }\n  }\n}\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nNavigation.defaultProps = {\n  className: 'navigation'\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nimport './notification.local.scss';\n\nexport class Notification extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-notification`}>\n        <NotificationsNoneIcon />\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  className: PropTypes.string\n};\n\nNotification.defaultProps = {\n  className: 'notification'\n};\n\nexport default Notification;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Logout } from 'session/pages';\n\nimport './user-menu.local.scss';\nimport { ChangePassword } from '../../../../../users-manager/users/pages/UserView/containers/ChangePassword';\n\nexport class UserMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n\n    this.menuAnchorRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"user-menu qa-user-menu\"\n          ref={this.menuAnchorRef}\n          onClick={this.setToggleDropdown}\n          role=\"presentation\"\n        >\n          <LightTooltip placement=\"right\" title={this.props.user}>\n            <Avatar className=\"user-avatar\">{this.props.user.substring(0, 2).toUpperCase()}</Avatar>\n          </LightTooltip>\n        </div>\n\n        <Popover\n          className=\"user-menu-list-container\"\n          anchorEl={this.menuAnchorRef.current}\n          open={this.state.isVisible}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList\n                className=\"user-menu-list\"\n                autoFocusItem={this.state.isVisible}\n                id=\"menu-list-grow\"\n              >\n                {this.props.user === 'mas' && (\n                  <MenuItem\n                    className=\"qa-user-menu-admin\"\n                    onClick={event => this.openAdminPage(event)}\n                  >\n                    <FormattedMessage id=\"navigation.admin\" />\n                  </MenuItem>\n                )}\n                <MenuItem\n                  className=\"qa-user-menu-groups\"\n                  onClick={event => this.setCloseDropdown(event, 'help')}\n                >\n                  <FormattedMessage id=\"navigation.help\" />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-change-pwd\" onKeyDown={event => event.stopPropagation()}>\n                  <ChangePassword\n                    user={this.props.user}\n                    useLinkTrigger=\"true\"\n                  />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-logout\" to={Logout.path} component={Link}>\n                  <FormattedMessage id=\"navigation.logout\" />\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popover>\n      </>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page === 'help') {\n      window.open(\n        'https://masmanual.venditabeta.com/index.php/Vendita_MAS_Documentation_Library#User_Guides_MAS_3.0',\n        '_blank'\n      );\n    }\n\n    this.setState({ isVisible: false });\n  };\n\n  openAdminPage = (event) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    window.open(\n      `https://${window.location.host}/admin/`,\n      '_blank'\n    );\n\n    this.setState({ isVisible: false });\n  };\n\n  setToggleDropdown = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible\n    }));\n  };\n}\n\nUserMenu.propTypes = {\n  user: PropTypes.string.isRequired\n};\n\nexport default withRouter(UserMenu);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\n\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { postCompile } from 'shared/api/compile';\n\nimport { fetchEntity } from '../../../../../entities/actions';\n\nimport './compile.local.scss';\nimport { useDispatch } from 'react-redux';\n\nexport const Compile = () => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => setOpen(true),\n    close: () => {\n      setOpen(false);\n      setStep('confirmation');\n    }\n  };\n  const [step, setStep] = useState('confirmation');\n\n  return (\n    <>\n      <div className=\"compile\">\n        <Tooltip title=\"Compile\">\n          <VideoLibraryOutlinedIcon onClick={modalActions.open} />\n        </Tooltip>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {step === 'confirmation' && <Confirmation setStep={setStep} />}\n        {step === 'compiler' && <Compiler />}\n      </Modal>\n    </>\n  );\n};\n\nconst Confirmation = ({ setStep }) => {\n  const { actions } = useContext(ModalContext);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '350px',\n        maxHeight: '368px',\n        maxWidth: '65vw'\n      }}\n    >\n      <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n      <Paper.Content scrollable={false}>\n        <Result type=\"fail\">\n          <BodyText>\n            <p style={{ fontWeight: 'normal' }}>\n              This command will recompile all the processes and refresh the process list. This\n              usually takes about 1 to 2 minutes.\n            </p>\n            <p style={{ textAlign: 'center' }}>Do you want to proceed?</p>\n          </BodyText>\n        </Result>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            onClick={() => {\n              actions.close();\n            }}\n          >\n            No\n          </Button>\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            onClick={() => {\n              setStep('compiler');\n            }}\n          >\n            Yes\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </Paper>\n  );\n};\n\nconst Compiler = () => {\n  const [compilation, setCompilation] = useState('compiling');\n  const dispatch = useDispatch();\n\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    console.log('[started compilation'); // eslint-disable-line\n    postCompile()\n      .then(() => {\n        setCompilation('refreshing');\n\n        Promise.all([dispatch(fetchEntity('process')), dispatch(fetchEntity('namespace'))])\n          .then(() => {\n            setCompilation('success');\n            console.log('[succeded compilation'); // eslint-disable-line\n          })\n          .catch(() => {\n            setCompilation('success-no-reload');\n            console.log(results, '[succeded compilation. failed to reload entities.'); // eslint-disable-line\n          });\n      })\n      .catch(() => {\n        setCompilation('failed');\n        console.log('[failed compilation'); // eslint-disable-line\n      });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '430px',\n        minHeight: '330px'\n      }}\n    >\n      <ModalHeader icon={<VideoLibraryOutlinedIcon />} title=\"Compile\" />\n      <Switch value={compilation}>\n        <Switch.Case value=\"compiling\">\n          <Center>\n            <Loader>Running compilation...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"refreshing\">\n          <Center>\n            <Loader>Loading processes...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"failed\">\n          <Center>\n            <Result type=\"fail\">\n              <Result.Text compact>Compilation failed.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success-no-reload\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded</Result.Text>\n              <Result.Text compact>Could not refresh processes list.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header';\n\nimport { Main, Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-process.local.scss';\nimport { Breadcrumbs, Link } from '@material-ui/core';\n\nimport ConnectedJobView from './job-view';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getQuery, getInvocationStatus, getInvocation } from './store/selectors';\nimport { processQuery } from './store/actions';\nimport { InvocationStatus } from './store/constants';\n\nimport './root.local.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\n\nconst JobProcess = () => {\n  const query = useQuery();\n\n  const uuid = query.get('invocation');\n  const processName = query.get('process');\n  const redirected = query.get('redirected');\n\n  return (\n    <>\n      <Header>\n        <Breadcrumbs classes={{ root: 'job-main-breadcrumbs' }} aria-label=\"breadcrumb\">\n          <LinkRouter to=\"/jobs\">Jobs</LinkRouter>\n          <OtherMainLinks />\n        </Breadcrumbs>\n      </Header>\n      <Main>\n        <Paper>\n          <PrepareFlow uuid={uuid} process={processName}>\n            <ConnectedJobView redirected={redirected === 'true'} />\n          </PrepareFlow>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n\nexport default JobProcess;\n\nfunction PrepareFlow({ children, uuid, process }) {\n  const query = useSelector(getQuery);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(processQuery(uuid, process));\n  }, [uuid]);\n\n  if (query.uuid !== uuid) {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Setting up invocation viewer</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return children;\n}\n\nfunction OtherMainLinks() {\n  const status = useSelector(getInvocationStatus);\n  const invocation = useSelector(getInvocation);\n\n  if (status === InvocationStatus.NEW) {\n    return <div className=\"current-job\">New Job</div>;\n  }\n\n  if (invocation && invocation.designation) {\n    return (\n      <LimitlessTooltip\n        placement=\"bottom-start\"\n        title={\n          <>\n            <p>Invocation: {invocation.designation}</p>\n            {invocation.schedule && <p>Schedule: {invocation.schedule}</p>}\n          </>\n        }\n      >\n        <div className=\"current-job\">{invocation.designation}</div>\n      </LimitlessTooltip>\n    );\n  }\n\n  return null;\n}\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  CHECK_AUTHORIZATION: '[session] CHECK_AUTHORIZATION',\n  LOGIN: '[session] LOGIN',\n  LOGOUT: '[session] LOGOUT',\n  BE_VERSION: '[session] BE_VERSION',\n  BE_LICENCE: '[session] BE_LICENCE',\n  BE_HEALTH: '[session] BE_HEALTH'\n};\n\nexport const sessionActions = {\n  checkAuthorization: new ActionCreator(actionsTypes.CHECK_AUTHORIZATION),\n  login: new ActionCreator(actionsTypes.LOGIN),\n  logout: new ActionCreator(actionsTypes.LOGOUT),\n  getBeVersion: new ActionCreator(actionsTypes.BE_VERSION),\n  getBeLicence: new ActionCreator(actionsTypes.BE_LICENCE),\n  getBeHealth: new ActionCreator(actionsTypes.BE_HEALTH)\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* checkAuthorization({ payload }) {\n  RestClient.setBasicAuth();\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_USER(payload), {\n      page_size: 2147483645\n    });\n\n    const userDetails = {\n      name: response.data.data.source.user\n    };\n\n    if (response.data.data.users && response.data.data.users[0]) {\n      [userDetails.details] = response.data.data.users;\n    }\n\n    yield put(actions.checkAuthorization.dispatchSuccess(userDetails));\n  } catch (errors) {\n    yield put(actions.checkAuthorization.dispatchFail());\n  }\n}\n\nexport function* CheckAuthorizationEffect() {\n  yield takeEvery(actions.checkAuthorization.getLoadingAction(), checkAuthorization);\n}\n","export default {\n  INTL: 'en',\n  BASE: {\n    HOST: '/mas',\n    VERSION: '',\n    TIMEOUT: 2000 * 60,\n    ENDPOINTS: {\n      LOGIN: '/authenticate',\n      CURRENT_USER: name => `user/${name}`,\n      CURRENT_TIME: '/current/time',\n      DAEMON_STATUS: 'daemon/status',\n      JOB_COUNT: '/invocation/dashboard/job_count',\n      JOBS: '/invocation',\n      PROCESSES: '/process',\n      USERS: '/user',\n      DATATYPES: '/type',\n      PROTOTYPES: '/prototype',\n      GROUPS: '/group',\n      ACCOUNTS: '/account',\n      FORMS: '/form',\n      FORM: '/form',\n      PROTOCOLS: '/protocol',\n      DOWNLOAD_PACKAGING: '/download/oracle_report',\n      SESSIONS: name => `/system/explorer/${name}/all_sessions`,\n      DB_LAST_BACKUP: '/system/explorer/backup_last_24hr',\n      DB_STATUS: '/system/explorer/dbstate',\n      EXECUTIVE_DASHBOARD: '/nexecdash',\n      MSSQL_EXECUTIVE_DASHBOARD: '/ms_dash',\n      VIRTUAL_EXECUTIVE_DASHBOARD: 'execdashboard/virtual',\n      STORAGE_DF: name => `/system/explorer/${name}/df_free_space`,\n      STORAGE_TS: '/system/explorer/ts_usage',\n      BE_VERSION: '/version',\n      BE_LICENCE: '/mondata?id_montype=1',\n      BE_HEALTH: '/mondata?id_montype=2',\n      UPLOAD_ACCOUNTS: '/account/batch',\n      DOWNLOAD_CSV_TEMPLATE: '/download/csv_batch_import_sample',\n      LICENSES_INFO: '/dbpollster/license_data_fetch',\n      AVAILABLE_SERVERS: '/dbpollster/servers',\n      SUBMIT_LICENSE_ASSIGNMENT: '/dbpollster/license_data_insert',\n      UPDATE_LICENSE_ASSIGNMENT: '/dbpollster/license_data_update',\n      DELETE_LICENSE_ASSIGNMENT: '/dbpollster/license_data_delete',\n      UPLOAD_SUPPORT_RENEWAL_FILE: '/dbpollster/supportrenewals',\n      UPLOAD_MAS_LICENSE_FILE: '/dbpollster/licenses',\n    }\n  }\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\nimport Cookie from 'js-cookie';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* login(action) {\n  try {\n    Cookie.set(\n      'Authorization',\n      Buffer.from(`${action.payload.username}:${action.payload.password}`).toString('base64')\n    );\n    RestClient.setBasicAuth();\n    yield RestClient.post(CONSTANTS.BASE.ENDPOINTS.LOGIN);\n    yield put(actions.login.dispatchSuccess());\n    yield put(actions.checkAuthorization.dispatchLoading(action.payload.username));\n    localStorage.setItem('username', JSON.stringify(action.payload.username));\n  } catch (errors) {\n    if (!errors.response) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: 'Unknown Error. Please contact the administrator!'\n          }\n        ])\n      );\n      return;\n    }\n\n    if (errors.response.data.status === 422) {\n      yield put(actions.login.dispatchFail(errors.response.data.error.details));\n      return;\n    }\n\n    if (errors.response.data.status === 401) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors.response.data.status === 500) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors?.response?.statusText) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    throw errors;\n  }\n}\n\nexport function* LoginEffect() {\n  yield takeEvery(actions.login.getLoadingAction(), login);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { Login } from 'session/pages';\n\nfunction loginPath() {\n  return process.env.NODE_ENV === 'development'\n    ? window.location.replace(Login.path)\n    : window.location.replace(`/ui/#${Login.path}`);\n}\n\nfunction* logout() {\n  localStorage.removeItem('username');\n  RestClient.removeBasicAuth();\n  loginPath();\n  yield put(actions.logout.dispatchSuccess());\n}\n\nexport function* LogoutEffect() {\n  yield takeEvery(actions.logout.getLoadingAction(), logout);\n}\n","module.exports = __webpack_public_path__ + \"svgs/ae6021ac50f5c1e93465ff63ea3769d4.svg\";","module.exports = __webpack_public_path__ + \"svgs/0e998e182da8161761cd7209592a7dae.svg\";","module.exports = __webpack_public_path__ + \"svgs/fc315038f28eb52f1b1228e70e8919d6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { isInclusivelyAfterDay } from 'shared/lib';\n\nimport { DateRangePicker, DateRangePickerPhrases, DateRangePickerShape } from 'react-dates';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n} from './constants';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  // initialStartDate: momentPropTypes.momentObj,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  startDateId: PropTypes.string,\n  startDatePlaceholderText: PropTypes.string,\n  endDateId: PropTypes.string,\n  endDatePlaceholderText: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDates: PropTypes.bool,\n  showDefaultInputIcon: PropTypes.bool,\n  customInputIcon: PropTypes.object,\n  customArrowIcon: PropTypes.node,\n  customCloseIcon: PropTypes.object,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: PropTypes.string,\n  orientation: PropTypes.string,\n  anchorDirection: PropTypes.string,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.string,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDates: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  // navigation related props\n  navPosition: PropTypes.string,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.string,\n  renderDayContents: PropTypes.func,\n  minimumNights: PropTypes.number,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization\n  displayFormat: PropTypes.func,\n  monthFormat: PropTypes.string,\n  phrases: DateRangePickerPhrases,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: (day) => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: (date) => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  render() {\n    const { focusedInput } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={this.props.startDate}\n          endDate={this.props.endDate}\n        />\n      </div>\n    );\n  }\n\n  onDatesChange(range) {\n    this.props.onDatesChange(range);\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  GET_JOBS: '[jobs] GET_JOBS',\n  GET_CONNECTIONS: '[jobs] GET_CONNECTIONS',\n  SEARCH_JOBS: '[jobs] SEARCH_JOBS'\n};\n\nexport const jobsActions = {\n  getJobs: new ActionCreator(actionsTypes.GET_JOBS),\n  getConnections: new ActionCreator(actionsTypes.GET_CONNECTIONS),\n  searchJobs: new ActionCreator(actionsTypes.SEARCH_JOBS)\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SEARCH_PROCESSES: '[processes] SEARCH_PROCESSES',\n};\n\nexport const processActions = {\n  searchProcesses: new ActionCreator(actionsTypes.SEARCH_PROCESSES),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  UPDATE_GLOBAL_FILTERS: '[shared] UPDATE_GLOBAL_FILTERS',\n};\n\nexport const globalFiltersActions = {\n  setGlobalFilters: new ActionCreator(actionsTypes.UPDATE_GLOBAL_FILTERS),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SET_FILTER_STATUS: '[dashboard] SET_FILTER_STATUS'\n};\n\nexport const filterStatusActions = {\n  setFilterStatus: new ActionCreator(actionsTypes.SET_FILTER_STATUS)\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport function checkDaemon() {\n  return RestClient.get(CONSTANTS.BASE.ENDPOINTS.DAEMON_STATUS);\n}\n","import { createSelector } from 'reselect';\n\nexport const isDaemonRunning = createSelector(\n  state => state.daemon,\n  daemon => {\n    return daemon.running;\n  }\n);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Loader } from 'shared/components/loaders';\nimport { Center, Switch } from 'shared/components';\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiServer } from '@mdi/js';\nimport { CircleImg, NumberLabel } from '../../../shared/components';\nimport './ServersList.local.scss';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AddServerCard } from '../../../explorer/containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../../explorer/containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../../explorer/containers/ImportCSV/ImportCSV';\nimport Button from '@material-ui/core/Button';\n\nexport const ServersList = ({ loading, dbms, getAllAccounts }) => {\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  useEffect(() => {\n    getAllAccounts();\n  }, []);\n\n  const handleClick = (event) => {\n    event.stopPropagation();\n    setAnchorElement(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorElement(null);\n  };\n\n  const serversNumber = dbms.reduce((acc, el) => acc + el.servers.length, 0);\n\n  return (\n    <Switch value={loading}>\n      <Switch.Case value>\n        <Center>\n          <Loader>Loading Servers</Loader>\n        </Center>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <header onClick={handleClose} role=\"presentation\">\n          <div className=\"widget-title\">\n            <CircleImg\n              image={\n                <SvgIcon>\n                  <Icon path={mdiServer} />\n                </SvgIcon>\n              }\n            />\n            <NumberLabel number={serversNumber} />\n            <Link className=\"servers-link\" to=\"/system/explorer\">Servers</Link>\n          </div>\n\n          <div>\n            <Button\n              startIcon={<AddIcon />}\n              className=\"action-btn\"\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              Add connection\n            </Button>\n            <Menu\n              id=\"connections-menu\"\n              keepMounted\n              anchorEl={anchorElement}\n              open={Boolean(anchorElement)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddServerCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddDatabaseCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <ImportCSV />\n              </MenuItem>\n            </Menu>\n          </div>\n        </header>\n        <div className=\"servers-list\">\n          {dbms.map(el => (\n            <>\n              {el.servers.map(server => (\n                <div className=\"server-item\">\n                  <div className=\"icon-container\">\n                    <SvgIcon>\n                      <Icon path={mdiDns} />\n                    </SvgIcon>\n                  </div>\n                  <div className=\"name-container\">\n                    <span className=\"name\">\n                      <span className=\"dbms\">{el.name}</span>\n                      <span className=\"separator\">/</span>\n                      <span className=\"server\">{server.address}</span>\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </>\n          ))}\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nexport const ConnectedServersList = connect(\n  state => {\n    return {\n      loading: state.explorer.flags.serversUsage.loading,\n      dbms: state.explorer.structured?.dbms || []\n    };\n  },\n  dispatch => ({\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'dashboard' }))\n  })\n)(ServersList);\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\n// import mock from './_mock.json';\n\nfunction* jobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    // yield put(actions.getJobs.dispatchSuccess(mock));\n    yield put(actions.getJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    let reason = '';\n\n    if (\n      errors &&\n      errors.response &&\n      errors.response.data &&\n      errors.response.data.messages &&\n      errors.response.data.messages[0] &&\n      errors.response.data.messages[0].text &&\n      errors.response.data.messages[0].text.startsWith('permission denied')\n    ) {\n      reason = 'rights';\n    }\n\n    yield put(actions.getJobs.dispatchFail({ reason }));\n  }\n}\n\nexport function* JobsEffect() {\n  yield takeEvery(actions.getJobs.getLoadingAction(), jobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* connections() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n      page_size: 2147483645\n    });\n\n    yield put(actions.getConnections.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getConnections.dispatchFail(errors));\n  }\n}\n\nexport function* JobsConnectionsEffect() {\n  yield takeEvery(actions.getConnections.getLoadingAction(), connections);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchJobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    yield put(actions.searchJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchJobs.dispatchFail(errors));\n  }\n}\n\nexport function* SearchJobsEffect() {\n  yield takeEvery(actions.searchJobs.getLoadingAction(), searchJobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchProcesses(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROCESSES, query.payload);\n\n    yield put(actions.searchProcesses.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchProcesses.dispatchFail(errors));\n  }\n}\n\nexport function* SearchProcessesEffect() {\n  yield takeEvery(actions.searchProcesses.getLoadingAction(), searchProcesses);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\n\nfunction* globalFilters(filters) {\n  yield put(actions.setGlobalFilters.dispatchSuccess(filters.payload));\n}\n\nexport function* GlobalFiltersEffect() {\n  yield takeEvery(actions.setGlobalFilters.getLoadingAction(), globalFilters);\n}\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  SELECT_USER,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  REMOVE_USER_FROM_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nimport { mapUsersData, mapLoadedUser } from '../mappers';\n\nexport const initialState = {\n  users: {\n    all: [],\n    selected: null\n  },\n  flags: {\n    users: { loading: false },\n    user: { loading: false, deactivating: false },\n    privileges: { disabled: false }\n  },\n  debug: {\n    user: {},\n    groups_update: {},\n    privileges: {}\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_USERS)]: draft => {\n    draft.flags.users.loading = true;\n  },\n  [types.success(LOAD_ALL_USERS)]: (draft, { payload }) => {\n    draft.users.all = mapUsersData(payload);\n\n    draft.flags.users.loading = false;\n  },\n  [types.action(SELECT_USER)]: (draft, { payload }) => {\n    draft.users.selected = payload;\n  },\n  [types.loading(LOAD_USER)]: draft => {\n    draft.flags.user.loading = true;\n    draft.users.selected = null;\n  },\n  [types.success(LOAD_USER)]: (draft, { payload }) => {\n    draft.flags.user.loading = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.loading(DEACTIVATE_USER)]: draft => {\n    draft.flags.user.deactivating = true;\n  },\n  [types.success(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.users.all = mapUsersData(payload);\n  },\n  [types.fail(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.action(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.loading(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(REMOVE_USER_FROM_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(CREATE_USER)]: draft => {\n    draft.flags.user.creating = true;\n  },\n  [types.success(CREATE_USER)]: draft => {\n    draft.flags.user.creating = false;\n  },\n  [types.fail(CREATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.creating = false;\n    draft.debug.user.errors = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  PATCH_SELECTED_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport const initialState = {\n  all: [],\n  ops: {\n    all: { done: false, loading: false },\n    selected: { done: false, loading: false },\n    privileges: { done: false, loading: false },\n    remove: { loading: false },\n    create: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_GROUPS)]: draft => {\n    draft.ops.all = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.loading(LOAD_GROUP)]: draft => {\n    draft.ops.selected = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_GROUP)]: (draft, { payload }) => {\n    const response = payload;\n    draft.selected = response.data.groups[0]; //eslint-disable-line\n    draft.ops.selected = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_GROUP)]: (draft, { payload }) => {\n    draft.selected = null;\n    draft.ops.selected = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.action(PATCH_SELECTED_GROUP)]: (draft, { payload }) => {\n    draft.selected = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REMOVE_USERS_FROM_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(REMOVE_GROUPS_FROM_GROUP)]: draft => {\n    draft.ops.group_subgroups = { loading: true };\n  },\n  [types.success(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(ADD_USERS_TO_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: true };\n  },\n  [types.success(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: false };\n  },\n  [types.fail(CREATE_GROUP)]: (draft, { payload }) => {\n    draft.ops.create = {\n      loading: false,\n      errors: payload\n    };\n  },\n  [types.loading(DELETE_GROUP)]: draft => {\n    draft.ops.remove = { loading: true };\n  },\n  [types.success(DELETE_GROUP)]: draft => {\n    draft.selected = null;\n    draft.ops.remove = { loading: false };\n  },\n  [types.fail(DELETE_GROUP)]: (draft, { payload }) => {\n    draft.ops.remove = { loading: false, errors: payload };\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_MSSQL_DISK_IO,\n  LOAD_MSSQL_FILE_STORAGE,\n  LOAD_MSSQL_STORAGE_USED,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  mapAccountsNewStructure,\n  mapAccountsTree,\n  mapLicenseReport,\n  mapProtocols,\n  mapUpdateDBStatus\n} from '../mappers';\n\nexport const initialState = {\n  accounts: [],\n  rawAccounts: [],\n  flags: {\n    accounts: { loading: false },\n    protocols: { loading: false },\n    sessions: { loading: false },\n    storage: { loadingPoints: false, loadingDetails: false },\n    objects: { loading: false },\n    license: { loading: false },\n    topSqlStatements: { loading: false },\n    reports: { loading: false },\n    serversUsage: { loading: true },\n    collectionProcesses: {\n      hardware: { loading: false, wasExecuted: false },\n      preSoftware: { loading: false, wasExecuted: false },\n      software: { loading: false, wasExecuted: false },\n      vmware: { loading: false },\n      packaging: { loading: false }\n    }\n  },\n  sessions: [],\n  storage: {\n    storedEntries: {},\n    selected: null\n  },\n  objects: {\n    selectedOwner: null,\n    selectedObject: null,\n    storedEntries: {}\n  },\n  licenses: [],\n  reports: {},\n  protocols: [],\n  state: {\n    path: '',\n    level: 'all-dbms'\n  },\n  serversUsage: {},\n  dbLastBackup: [],\n  dbStatus: [],\n  collectionProcesses: {\n    hardware: null,\n    preSoftware: null,\n    software: null,\n    vmware: null,\n    packaging: null\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_ACCOUNTS)]: draft => {\n    draft.flags.accounts.loading = true;\n  },\n  [types.success(LOAD_ALL_ACCOUNTS)]: (draft, { payload }) => {\n    draft.accounts = mapAccountsTree(payload.data.accounts);\n    draft.structured = mapAccountsNewStructure(payload.data.accounts, payload.protocols);\n    draft.rawAccounts = payload.data.accounts;\n\n    draft.state.path = '';\n    draft.state.level = 'all-dbms';\n\n    draft.flags.accounts.loading = false;\n  },\n  [types.loading(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = true;\n  },\n  [types.success(LOAD_PROTOCOLS)]: (draft, { payload }) => {\n    draft.protocols = mapProtocols(payload.data.protocols);\n    draft.flags.protocols.loading = false;\n  },\n  [types.fail(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = false;\n  },\n  [CHANGE_STATE]: (draft, { payload }, base) => {\n    draft.state = { ...base.state, ...payload };\n  },\n  [types.loading(LOAD_ALL_LICENSES)]: draft => {\n    draft.flags.license.loading = true;\n  },\n  [types.success(LOAD_ALL_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload.data.invocations;\n    draft.flags.license.loading = false;\n  },\n  [types.loading(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = true;\n  },\n  [types.success(LOAD_TOP_SQL_STATEMENTS)]: (draft, { payload }) => {\n    draft.topSqlStatements = payload;\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.fail(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.loading(LICENSE_FULL_REPORT)]: draft => {\n    draft.flags.reports.loading = true;\n  },\n  [types.success(LICENSE_FULL_REPORT)]: (draft, { payload }) => {\n    const { reportData } = payload;\n    draft.reports.data = mapLicenseReport(reportData);\n    draft.flags.reports.loading = false;\n  },\n  [types.loading(PROVIDE_SERVERS_USAGE)]: draft => {\n    draft.flags.serversUsage.loading = true;\n  },\n  [types.success(PROVIDE_SERVERS_USAGE)]: (draft, { payload }) => {\n    draft.flags.serversUsage.loading = false;\n    draft.serversUsage = payload;\n  },\n  [types.loading(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = true;\n  },\n  [types.fail(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.success(LOAD_STORAGE_POINTS)]: (draft, { payload }, base) => {\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      points: payload.data\n    };\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.loading(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = true;\n  },\n  [types.fail(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = false;\n  },\n  [types.success(LOAD_STORAGE_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.storage.loadingDetails = false;\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      details: payload.data\n    };\n  },\n  [types.loading(LOAD_MSSQL_DISK_IO)]: draft => {\n    draft.flags.storage.loadingDiskIO = true;\n  },\n  [types.fail(LOAD_MSSQL_DISK_IO)]: draft => {\n    draft.flags.storage.loadingDiskIO = false;\n  },\n  [types.success(LOAD_MSSQL_DISK_IO)]: (draft, { payload }) => {\n    draft.flags.storage.loadingDiskIO = false;\n    draft.storage.mssqlDiskIO = payload.data;\n  },\n  [types.loading(LOAD_MSSQL_STORAGE_USED)]: draft => {\n    draft.flags.storage.loadingStorageUsed = true;\n  },\n  [types.fail(LOAD_MSSQL_STORAGE_USED)]: draft => {\n    draft.flags.storage.loadingStorageUsed = false;\n  },\n  [types.success(LOAD_MSSQL_STORAGE_USED)]: (draft, { payload }) => {\n    draft.flags.storage.loadingStorageUsed = false;\n    draft.storage.mssqlStorageUsed = payload.data;\n  },\n  [types.loading(LOAD_MSSQL_FILE_STORAGE)]: draft => {\n    draft.flags.storage.loadingFileStorage = true;\n  },\n  [types.fail(LOAD_MSSQL_FILE_STORAGE)]: draft => {\n    draft.flags.storage.loadingFileStorage = false;\n  },\n  [types.success(LOAD_MSSQL_FILE_STORAGE)]: (draft, { payload }) => {\n    draft.flags.storage.loadingFileStorage = false;\n    draft.storage.mssqlFileStorage = payload.data;\n  },\n  [types.success(SET_STORAGE_NS)]: (draft, { payload }) => {\n    draft.storage.selected = payload;\n  },\n  [types.loading(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = true;\n  },\n  [types.fail(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = false;\n  },\n  [types.success(LOAD_OBJECT_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.objects.loading = false;\n    draft.objects.storedEntries[payload.key] = { ...base.objects.storedEntries[payload.key] };\n    payload.data.forEach(({ name, res }) => {\n      draft.objects.storedEntries[payload.key][name] = res;\n    });\n  },\n  [types.success(SET_SELECTED_OBJECT)]: (draft, { payload }) => {\n    draft.objects.selectedObject = payload.object;\n    draft.objects.selectedOwner = payload.owner;\n  },\n  [types.loading(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = true;\n  },\n  [types.success(LOAD_SESSIONS)]: (draft, { payload }) => {\n    draft.flags.sessions.loading = false;\n    // sort flags should be sent to backend and not stored on state.\n    draft.flags.sessions.sort = payload.sort;\n    draft.sessions = payload.data;\n  },\n  [types.fail(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = false;\n  },\n  [types.success(PROVIDE_DB_LAST_BACKUP)]: (draft, { payload }) => {\n    draft.dbLastBackup = payload;\n  },\n  [types.success(PROVIDE_DB_STATUS)]: (draft, { payload }) => {\n    draft.dbStatus = payload;\n  },\n  [types.success(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, true);\n  },\n  [types.fail(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = true;\n  },\n  [types.success(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n    draft.collectionProcesses[payload.name] = payload.data;\n  },\n  [types.fail(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n  },\n  [EXECUTE_COLLECTION_PROCESS]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].wasExecuted = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport {\n  DESELECT_ALL,\n  LOAD_DB_EDITION,\n  LOAD_DB_VERSION,\n  LOAD_LICENSE_DELTA,\n  LOAD_MSSQL_DB_VERSIONS,\n  LOAD_MSSQL_ENVIRONMENT_USAGE,\n  LOAD_MSSQL_NETWORK_EDGES,\n  LOAD_MSSQL_NETWORK_NODES,\n  LOAD_MSSQL_OS_TYPES,\n  LOAD_MSSQL_SERVER_DETAILS,\n  LOAD_MSSQL_USAGE,\n  LOAD_NETWORK_EDGES,\n  LOAD_NETWORK_NODES,\n  LOAD_OS_TYPE,\n  LOAD_SERVER_DETAILS,\n  LOAD_USAGE,\n  LOAD_USAGE_STAT,\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\nimport { mapAllServers, mapVirtualServers } from '../mappers';\n\nexport const initialState = {\n  rawEntries: [],\n  allServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  selectedServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  rawVirtualServers: [],\n  virtualServers: [],\n  flags: {\n    dashboard: { loading: false, callFailed: false },\n    virtual: { loading: false },\n    network: {\n      nodesLoading: false,\n      edgesLoading: false,\n      serverDetailsLoading: false,\n    },\n    techDetails: {\n      osTypeLoading: false,\n      dbEditionLoading: false,\n      dbVersionLoading: false,\n    },\n    licensableFeatures: {\n      loading: false,\n    },\n    usageStat: {\n      loading: false,\n    },\n    licenseDelta: {\n      loading: false,\n    },\n    mssqlLicenseUsage: {\n      loading: false,\n    },\n    mssqlNetwork: {\n      nodesLoading: false,\n      edgesLoading: false,\n      serverDetailsLoading: false,\n    },\n    mssqlEnvironmentUsage: {\n      loading: false,\n    },\n    mssqlDbVersions: {\n      loading: false,\n    },\n    mssqlOsTypes: {\n      loading: false,\n    },\n  },\n  networkNodes: [],\n  networkEdges: [],\n  networkServerDetails: {},\n  techDetails: {\n    osType: [],\n    dbEdition: [],\n    dbVersion: [],\n  },\n  licensableFeatures: [],\n  usageStat: {},\n  licenseDelta: [],\n  mssqlLicenseUsage: [],\n  mssqlNetworkNodes: [],\n  mssqlNetworkEdges: [],\n  mssqlNetworkServerDetails: {},\n  mssqlEnvironmentUsage: [],\n  mssqlDbVersions: [],\n  mssqlOsTypes: []\n};\n\nexport const producers = {\n  [types.loading(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = true;\n  },\n  [types.success(PROVIDE_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawEntries = payload.execdashboard;\n    draft.allServers = mapAllServers(payload.execdashboard);\n    draft.selectedServers = mapAllServers(payload.execdashboard);\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [DESELECT_ALL]: draft => {\n    draft.selectedServers = [];\n  },\n  [SELECT_ALL]: (draft, { payload }) => {\n    draft.selectedServers = mapAllServers(payload);\n  },\n  [TOGGLE_SERVER]: (draft, { payload }) => {\n    draft.selectedServers = payload;\n  },\n  [types.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = true;\n  },\n  [types.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawVirtualServers = payload?.execdashboard_virtual;\n    draft.virtualServers = mapVirtualServers(payload?.execdashboard_virtual);\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [types.loading(LOAD_NETWORK_NODES)]: draft => {\n    draft.flags.network.nodesLoading = true;\n  },\n  [types.success(LOAD_NETWORK_NODES)]: (draft, { payload }) => {\n    draft.networkNodes = payload;\n    draft.flags.network.nodesLoading = false;\n  },\n  [types.fail(LOAD_NETWORK_NODES)]: draft => {\n    draft.flags.network.nodesLoading = false;\n    draft.networkNodes = [];\n  },\n  [types.loading(LOAD_NETWORK_EDGES)]: draft => {\n    draft.flags.network.edgesLoading = true;\n  },\n  [types.success(LOAD_NETWORK_EDGES)]: (draft, { payload }) => {\n    draft.networkEdges = payload;\n    draft.flags.network.edgesLoading = false;\n  },\n  [types.fail(LOAD_NETWORK_EDGES)]: draft => {\n    draft.flags.network.edgesLoading = false;\n    draft.networkEdges = [];\n  },\n  [types.loading(LOAD_SERVER_DETAILS)]: draft => {\n    draft.flags.network.serverDetailsLoading = true;\n  },\n  [types.success(LOAD_SERVER_DETAILS)]: (draft, { payload }) => {\n    draft.networkServerDetails = payload;\n    draft.flags.network.serverDetailsLoading = false;\n  },\n  [types.fail(LOAD_SERVER_DETAILS)]: draft => {\n    draft.flags.network.serverDetailsLoading = false;\n    draft.networkServerDetails = {};\n  },\n  [types.loading(LOAD_OS_TYPE)]: draft => {\n    draft.flags.network.osTypeLoading = true;\n  },\n  [types.success(LOAD_OS_TYPE)]: (draft, { payload }) => {\n    draft.techDetails.osType = payload;\n    draft.flags.techDetails.osTypeLoading = false;\n  },\n  [types.fail(LOAD_OS_TYPE)]: draft => {\n    draft.flags.network.osTypeLoading = false;\n    draft.techDetails.osType = [];\n  },\n  [types.loading(LOAD_DB_EDITION)]: draft => {\n    draft.flags.network.dbEditionLoading = true;\n  },\n  [types.success(LOAD_DB_EDITION)]: (draft, { payload }) => {\n    draft.techDetails.dbEdition = payload;\n    draft.flags.techDetails.dbEditionLoading = false;\n  },\n  [types.fail(LOAD_DB_EDITION)]: draft => {\n    draft.flags.network.dbEditionLoading = false;\n    draft.techDetails.dbEdition = [];\n  },\n  [types.loading(LOAD_DB_VERSION)]: draft => {\n    draft.flags.network.dbVersionLoading = true;\n  },\n  [types.success(LOAD_DB_VERSION)]: (draft, { payload }) => {\n    draft.techDetails.dbVersion = payload;\n    draft.flags.techDetails.dbVersionLoading = false;\n  },\n  [types.fail(LOAD_DB_VERSION)]: draft => {\n    draft.flags.network.dbVersionLoading = false;\n    draft.techDetails.dbVersion = [];\n  },\n  [types.loading(LOAD_USAGE)]: draft => {\n    draft.flags.licensableFeatures.loading = true;\n  },\n  [types.success(LOAD_USAGE)]: (draft, { payload }) => {\n    draft.licensableFeatures = payload;\n    draft.flags.licensableFeatures.loading = false;\n  },\n  [types.fail(LOAD_USAGE)]: draft => {\n    draft.flags.licensableFeatures.loading = false;\n    draft.licensableFeatures = [];\n  },\n  [types.loading(LOAD_USAGE_STAT)]: draft => {\n    draft.flags.usageStat.loading = true;\n  },\n  [types.success(LOAD_USAGE_STAT)]: (draft, { payload }) => {\n    draft.usageStat = payload;\n    draft.flags.usageStat.loading = false;\n  },\n  [types.fail(LOAD_USAGE_STAT)]: draft => {\n    draft.flags.usageStat.loading = false;\n    draft.usageStat = {};\n  },\n  [types.loading(LOAD_LICENSE_DELTA)]: draft => {\n    draft.flags.licenseDelta.loading = true;\n  },\n  [types.success(LOAD_LICENSE_DELTA)]: (draft, { payload }) => {\n    draft.licenseDelta = payload;\n    draft.flags.licenseDelta.loading = false;\n  },\n  [types.fail(LOAD_LICENSE_DELTA)]: draft => {\n    draft.flags.licenseDelta.loading = false;\n    draft.licenseDelta = [];\n  },\n  [types.loading(LOAD_MSSQL_USAGE)]: draft => {\n    draft.flags.mssqlLicenseUsage.loading = true;\n  },\n  [types.success(LOAD_MSSQL_USAGE)]: (draft, { payload }) => {\n    draft.mssqlLicenseUsage = payload;\n    draft.flags.mssqlLicenseUsage.loading = false;\n  },\n  [types.fail(LOAD_MSSQL_USAGE)]: draft => {\n    draft.flags.mssqlLicenseUsage.loading = false;\n    draft.mssqlLicenseUsage = [];\n  },\n  [types.loading(LOAD_MSSQL_NETWORK_NODES)]: draft => {\n    draft.flags.mssqlNetwork.nodesLoading = true;\n  },\n  [types.success(LOAD_MSSQL_NETWORK_NODES)]: (draft, { payload }) => {\n    draft.mssqlNetworkNodes = payload;\n    draft.flags.mssqlNetwork.nodesLoading = false;\n  },\n  [types.fail(LOAD_MSSQL_NETWORK_NODES)]: draft => {\n    draft.flags.mssqlNetwork.nodesLoading = false;\n    draft.mssqlNetworkNodes = [];\n  },\n  [types.loading(LOAD_MSSQL_NETWORK_EDGES)]: draft => {\n    draft.flags.mssqlNetwork.edgesLoading = true;\n  },\n  [types.success(LOAD_MSSQL_NETWORK_EDGES)]: (draft, { payload }) => {\n    draft.mssqlNetworkEdges = payload;\n    draft.flags.mssqlNetwork.edgesLoading = false;\n  },\n  [types.fail(LOAD_MSSQL_NETWORK_EDGES)]: draft => {\n    draft.flags.mssqlNetwork.edgesLoading = false;\n    draft.mssqlNetworkEdges = [];\n  },\n  [types.loading(LOAD_MSSQL_SERVER_DETAILS)]: draft => {\n    draft.flags.mssqlNetwork.serverDetailsLoading = true;\n  },\n  [types.success(LOAD_MSSQL_SERVER_DETAILS)]: (draft, { payload }) => {\n    draft.mssqlNetworkServerDetails = payload;\n    draft.flags.mssqlNetwork.serverDetailsLoading = false;\n  },\n  [types.fail(LOAD_MSSQL_SERVER_DETAILS)]: draft => {\n    draft.flags.mssqlNetwork.serverDetailsLoading = false;\n    draft.mssqlNetworkServerDetails = {};\n  },\n  [types.loading(LOAD_MSSQL_ENVIRONMENT_USAGE)]: draft => {\n    draft.flags.mssqlEnvironmentUsage.loading = true;\n  },\n  [types.success(LOAD_MSSQL_ENVIRONMENT_USAGE)]: (draft, { payload }) => {\n    draft.mssqlEnvironmentUsage = payload;\n    draft.flags.mssqlEnvironmentUsage.loading = false;\n  },\n  [types.fail(LOAD_MSSQL_ENVIRONMENT_USAGE)]: draft => {\n    draft.flags.mssqlEnvironmentUsage.loading = false;\n    draft.mssqlEnvironmentUsage = [];\n  },\n  [types.loading(LOAD_MSSQL_DB_VERSIONS)]: draft => {\n    draft.flags.mssqlDbVersions.loading = true;\n  },\n  [types.success(LOAD_MSSQL_DB_VERSIONS)]: (draft, { payload }) => {\n    draft.mssqlDbVersions = payload;\n    draft.flags.mssqlDbVersions.loading = false;\n  },\n  [types.fail(LOAD_MSSQL_DB_VERSIONS)]: draft => {\n    draft.flags.mssqlDbVersions.loading = false;\n    draft.mssqlDbVersions = [];\n  },\n  [types.loading(LOAD_MSSQL_OS_TYPES)]: draft => {\n    draft.flags.mssqlOsTypes.loading = true;\n  },\n  [types.success(LOAD_MSSQL_OS_TYPES)]: (draft, { payload }) => {\n    draft.mssqlOsTypes = payload;\n    draft.flags.mssqlOsTypes.loading = false;\n  },\n  [types.fail(LOAD_MSSQL_OS_TYPES)]: draft => {\n    draft.flags.mssqlOsTypes.loading = false;\n    draft.mssqlOsTypes = [];\n  },\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport { LOAD_AVAILABLE_SERVERS, LOAD_DB_LICENSES, LOAD_LICENSE_TARGETS, LOAD_LICENSES } from '../actions';\n\nexport const initialState = {\n  licenses: [],\n  dbLicenses: [],\n  licenseTargets: [],\n  availableServers: [],\n  flags: {\n    licenses: { loading: false },\n    dbLicenses: { loading: false },\n    licenseTargets: { loading: false },\n    availableServers: { loading: false },\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_LICENSES)]: draft => {\n    draft.flags.licenses.loading = true;\n  },\n  [types.success(LOAD_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload;\n    draft.flags.licenses.loading = false;\n  },\n  [types.fail(LOAD_LICENSES)]: draft => {\n    draft.flags.licenses.loading = false;\n  },\n\n  [types.loading(LOAD_DB_LICENSES)]: draft => {\n    draft.flags.dbLicenses.loading = true;\n  },\n  [types.success(LOAD_DB_LICENSES)]: (draft, { payload }) => {\n    draft.dbLicenses = payload;\n    draft.flags.dbLicenses.loading = false;\n  },\n  [types.fail(LOAD_DB_LICENSES)]: draft => {\n    draft.flags.dbLicenses.loading = false;\n  },\n\n  [types.loading(LOAD_LICENSE_TARGETS)]: draft => {\n    draft.flags.licenseTargets.loading = true;\n  },\n  [types.success(LOAD_LICENSE_TARGETS)]: (draft, { payload }) => {\n    draft.licenseTargets = payload;\n    draft.flags.licenseTargets.loading = false;\n  },\n  [types.fail(LOAD_LICENSE_TARGETS)]: draft => {\n    draft.flags.licenseTargets.loading = false;\n  },\n\n  [types.loading(LOAD_AVAILABLE_SERVERS)]: draft => {\n    draft.flags.availableServers.loading = true;\n  },\n  [types.success(LOAD_AVAILABLE_SERVERS)]: (draft, { payload }) => {\n    draft.availableServers = payload;\n    draft.flags.availableServers.loading = false;\n  },\n  [types.fail(LOAD_AVAILABLE_SERVERS)]: draft => {\n    draft.flags.availableServers.loading = false;\n  },\n};\n\nexport default createReducer(producers, initialState);\n","export const initialState = {\n  data: {},\n  fetch_status: {\n    account: 'not-fetched',\n    constant: 'not-fetched',\n    exception: 'not-fetched',\n    form: 'not-fetched',\n    namespace: 'not-fetched',\n    process: 'not-fetched',\n    prototype: 'not-fetched',\n    schedule: 'not-fetched',\n    type: 'not-fetched',\n    alias: 'not-fetched'\n  },\n  isLoading: true,\n  breadcrumbs: [],\n  filters: {\n    type: 'all',\n    search: ''\n  }\n};\n\nexport function FETCH_ENTITIES_REQUEST(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'fetching';\n}\n\nexport function FETCH_ENTITIES_SUCCESS(nextState, { entityType, result }) {\n  nextState.data[entityType] = result;\n  nextState.fetch_status[entityType] = 'fetched';\n}\n\nexport function FETCH_ENTITIES_FAILURE(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'failed';\n}\n\nexport function FETCH_ENTITIES_ALL_REQUEST(nextState) {\n  nextState.isLoading = true;\n}\n\nexport function FETCH_ENTITIES_ALL_SUCCESS(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function FETCH_ENTITIES_ALL_FAILURE(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function SELECT_ENTITY(nextState, { entity, index }, state) {\n  nextState.breadcrumbs.splice(index, state.breadcrumbs.length - 1);\n  nextState.breadcrumbs[index] = entity.name.split('.').pop();\n}\n\nexport function CLEAR_SELECTED_ENTITY(nextState) {\n  nextState.breadcrumbs = [];\n}\n\nexport function UPDATE_FILTERS(nextState, { name, value }) {\n  nextState.filters[name] = value;\n  if (name === 'type' || name === 'search') {\n    nextState.breadcrumbs = [];\n  }\n}\n","export const initialState = {\n  running: true\n};\n\nexport function DAEMON_STATUS_REQUEST() {}\n\nexport function DAEMON_STATUS_SUCCESS(nextState, { result }) {\n  nextState.running = !!result?.data?.data?.running;\n}\n\nexport function DAEMON_STATUS_FAILURE(nextState) {\n  nextState.running = false;\n}\n","import { InvocationStatus } from './constants';\n\nexport const initialState = {\n  loading: true,\n  query: { processed: false },\n  fetchedInvocation: false,\n  invocation: { status: 'NOT_FETCHED' }\n};\n\nexport function PROCESS_QUERY(nextState, { uuid, process }) {\n  nextState.query = { processed: true, uuid, process };\n  if (uuid) {\n    nextState.invocation = { status: 'NOT_FETCHED' };\n  } else {\n    nextState.invocation = { status: '__NEW__', process: process || '' };\n  }\n}\n\nexport function FETCH_INVOCATION_SUCCESS(nextState, { result }) {\n  const [recieved] = result.data.data.invocations;\n  nextState.invocation = recieved;\n}\n\nexport function FETCH_INVOCATION_FAILURE(nextState, { process }) {\n  nextState.invocation = { status: InvocationStatus.NEW, process };\n}\n\nexport function REPLACE_INVOCATION(nextState, { invocation }) {\n  nextState.invocation = invocation;\n}\n","export const api = () => next => async action => {\n  const { type, promise, schema, ...rest } = action;\n  const isPromise = promise instanceof Promise;\n  if (!isPromise || !type) {\n    next(action);\n    return;\n  }\n\n  next({ type: `${type}_REQUEST`, ...rest });\n  try {\n    const result = await promise;\n    if (schema) {\n      next({ type, ...rest, data: result, schema });\n    }\n    next({ type: `${type}_SUCCESS`, ...rest, result });\n  } catch (error) {\n    console.error('[middlewares] error: ', error); // eslint-disable-line\n    next({ type: `${type}_FAILURE`, ...rest, error });\n  }\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  ADD_NOTIFICATIONS: '[core] ADD_NOTIFICATIONS',\n  REMOVE_NOTIFICATION: '[core] REMOVE_NOTIFICATION',\n};\n\nexport const notificationActions = {\n  addNotifications: new ActionCreator(actionsTypes.ADD_NOTIFICATIONS),\n  removeNotification: new ActionCreator(actionsTypes.REMOVE_NOTIFICATION),\n};\n","import React from 'react';\nimport { any, func } from 'prop-types';\nimport { Center } from 'shared/components/layout';\nimport './job-list.local.scss';\nimport { connect } from 'react-redux';\nimport { currentUserSelector } from 'session/store/state';\n\nconst JobList = ({ items, filters, children, loggedUser }) => {\n  const noneAvailable = items.size === 0;\n\n  if (noneAvailable) {\n    return <NoJobs />;\n  }\n\n  return (\n    <div className=\"list-container\">\n      <ul>\n        {items.map((item, index, list) => (\n          <li key={index} className=\"list-item\">\n            {children(item, index, filters, loggedUser, list)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nJobList.propTypes = {\n  items: any,\n  children: func\n};\n\nJobList.defaultProps = {\n  items: []\n};\n\nfunction NoJobs() {\n  return (\n    <Center>\n      <p>There are no jobs available with the selected filters</p>\n    </Center>\n  );\n}\n\nexport const ConnectedJobList = connect(\n  state => {\n    return {\n      loggedUser: currentUserSelector(state),\n    };\n  }\n)(JobList);\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { ViewTabs } from '../ViewTabs/ViewTabs';\nimport { Documentation } from '../Documentation/Documentation';\nimport { ConnectedScheduleForm } from '../../containers/ScheduleForm/ScheduleForm';\nimport { getProcess } from 'shared/api/process';\nimport { getSchedule } from 'shared/api/schedule';\n\nexport const ScheduleModal = ({\n  open,\n  actions,\n  invocation,\n  isScheduled,\n  result,\n  setResult,\n  selectedOption,\n  canSelectProcess,\n  filledValues,\n  setFilledValues\n}) => {\n  const [tab, setTab] = useState('schedule');\n  const [processDetails, setProcessDetails] = useState({});\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const newSchedule = selectedOption === 'edit-schedule';\n  const formRef = useRef();\n  useEffect(() => {\n    if (isScheduled && invocation?.schedule) {\n      getSchedule(invocation.schedule)\n        .then(data => {\n          if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n            setScheduleDetails(data.data.data.schedules[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n    if (invocation && invocation.process) {\n      getProcess(invocation.process)\n        .then(data => {\n          if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n            setProcessDetails(data.data.data.processes[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n  }, []);\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '85vw',\n          minHeight: '85vh',\n          maxWidth: '85vw',\n          maxHeight: '85vh'\n        }}\n      >\n        <ModalHeader\n          title=\"New Schedule\"\n          icon={\n            <SvgIcon>\n              <SlowMotionVideoIcon />\n            </SvgIcon>\n          }\n          formikRef={formRef}\n        />\n        <Switch value={result}>\n          <Switch.Case value=\"success\">\n            <Result type=\"success\">\n              <Result.Text>Schedule was added successfully!</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Done\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"fail\">\n            <Result type=\"fail\">\n              <Result.Text>\n                <p>An error occurred and the new schedule could not be added.</p>{' '}\n                <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                  <a\n                    role=\"presentation\"\n                    onClick={() => {\n                      setResult('');\n                    }}\n                  >\n                    Go back to form\n                  </a>\n                </p>\n              </Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Close\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"\">\n            <Paper.Header>\n              <ViewTabs active={tab} changeTab={setTab} invocation={invocation} />\n            </Paper.Header>\n            <Switch value={tab}>\n              <Switch.Case value=\"schedule\">\n                <ConnectedScheduleForm\n                  setResult={setResult}\n                  invocation={newSchedule ? scheduleDetails : invocation}\n                  filledValues={filledValues}\n                  setFilledValues={setFilledValues}\n                  formRef={formRef}\n                  selectedOption={selectedOption}\n                  canSelectProcess={canSelectProcess}\n                  isScheduled={isScheduled}\n                />\n              </Switch.Case>\n              <Switch.Case value=\"documentation\">\n                <Paper.Content>\n                  <Documentation process={processDetails} />\n                </Paper.Content>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nexport function ViewTabs({ active, changeTab, invocation }) {\n  const tabs = [{ label: 'Schedule', value: 'schedule', active: true }];\n\n  if (invocation) {\n    tabs.push({ label: 'Documentation', value: 'documentation' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React from 'react';\n\nimport { Section } from 'shared/components/layout';\n\nexport const Documentation = ({ process }) => {\n  if (!process) {\n    return <Section>Select a process in order to see its documentation</Section>;\n  }\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { fetchEntity } from 'entities/actions';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport {\n  PLATFORMS,\n  PlatformSelect,\n  PROCESS_TYPES,\n  ProcessSelect,\n  ProcessTypeSelect\n} from 'shared/components/form/editors/Custom';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { patchSchedule, postSchedule } from 'shared/api/schedule';\nimport { mapScheduledNames } from 'entities/mappers';\nimport { isEmpty, pickBy } from 'lodash';\nimport { CronValidator } from '../../../../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../../../../shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport moment from 'moment';\n\nimport './ScheduleForm.scss';\n\nclass ScheduleFormComp extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { invocation } = this.props;\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    this.state = {\n      monitor: derivedMonitor,\n      serverTime: null,\n      everyHourWarningShown: false\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n\n    const { wasSCheduleCallDone, request } = this.props;\n    if (!wasSCheduleCallDone) {\n      request('schedule');\n    }\n  }\n\n  render() {\n    const {\n      setResult,\n      request,\n      allScheduledNames,\n      invocation,\n      isScheduled,\n      filledValues,\n      setFilledValues,\n      selectedOption,\n      canSelectProcess,\n      formRef\n    } = this.props;\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    const isEditing = selectedOption === 'edit-schedule';\n\n    const availableProcess = (platformVal, typeVal, processVal) => {\n      const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n      const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n      const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n      const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n      return (platformMatches && typeMatches) ? processVal : '';\n    };\n\n    const nameValue = () => {\n      if (isScheduled && invocation?.name) {\n        const splittedName = invocation.name.split('.');\n        const name = splittedName[splittedName.length - 1];\n\n        return name;\n      }\n\n      return invocation?.name || undefined;\n    };\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          if (isScheduled && invocation?.name) {\n            const splittedName = invocation.name.split('.');\n            const name = splittedName[splittedName.length - 1];\n\n            if (name !== sch_name) {\n              errors.sch_name = 'A schedule with this name already exists';\n            }\n          } else {\n            errors.sch_name = 'A schedule with this name already exists';\n          }\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{}}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, invocation, isEditing, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <PlatformSelect\n                                name=\"platform\"\n                                label=\"Platform\"\n                                description=\"Select a platform to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(value, formik.values.type, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <ProcessTypeSelect\n                                name=\"type\"\n                                label=\"Type\"\n                                description=\"Select a type to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(formik.values.platform, value, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          <Column xs={4}>\n                            <ProcessSelect\n                              name=\"process\"\n                              label=\"Process\"\n                              value={filledValues?.process || invocation?.process}\n                              disabled={invocation !== undefined}\n                              required\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || nameValue()}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || invocation?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || invocation?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_hr\"\n                              label=\"T_hr\"\n                              value={filledValues?.t_hr || invocation?.t_hr || '*'}\n                              description={CronValidator.FORMAT_MSG.HOURS}\n                            />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_day\"\n                              label=\"T_Day\"\n                              value={filledValues?.t_day || invocation?.t_day || '*'}\n                              description={CronValidator.FORMAT_MSG.DAYS}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_mon\"\n                              label=\"T_mon\"\n                              value={filledValues?.t_mon || invocation?.t_mon || '*'}\n                              description={CronValidator.FORMAT_MSG.MONTH}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_wkd\"\n                              label=\"T_wkd\"\n                              value={filledValues?.t_wkd || invocation?.t_wkd || '*'}\n                              description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || invocation?.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nexport const ConnectedScheduleForm = connect(\n  state => {\n    return {\n      wasSCheduleCallDone: state.entities?.data?.schedule,\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(ScheduleFormComp);\n\nasync function handleSubmit(\n  monitor,\n  setResult,\n  request,\n  setFilledValues,\n  invocation,\n  isEditing,\n  values\n) {\n  const {\n    platform,\n    type,\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  if (isEditing) {\n    body.rename = sch_name;\n  } else {\n    body.name = sch_name;\n  }\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  if (isEditing) {\n    patchSchedule(invocation.name, body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  } else {\n    postSchedule(body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  }\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n","export const formatAccount = account => {\n  const prefix = `${account.protocol.toLowerCase()}://${account.user}:******@${account.address}:${\n    account.port\n  }`;\n  const { special } = account;\n\n  if (special?.database) {\n    return `${prefix}/${special.database}`;\n  }\n\n  return prefix;\n};\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default: {\n      const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n      const matches = regex.exec(deflt);\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return Number.parseInt(matches[2]); // eslint-disable-line\n          case 'str': {\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            // const json = `[${matches[2]}]`;\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          }\n\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n    }\n  }\n  return null;\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst Groups = ({ groups, onSelect, eventTypeIcons = [] }) => {\n  const renderGroupsList = () => {\n    if (Array.isArray(groups) && groups.length) {\n      return groups.map(item => {\n        return (\n          <ListItem\n            onClick={() => onSelect(item)}\n            selected={item.selected}\n            key={item.data.name}\n            button\n          >\n            <ListItemIcon>\n              <GroupIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n            </ListItemIcon>\n            <ListItemText primary={item.data.name} />\n            <ListItemSecondaryAction>\n              {item.displayIcons && eventTypeIcons.map(icon => icon)}\n              <SvgIcon size=\"small\" edge=\"end\" color=\"primary\">\n                <path d={item.selected ? mdiChevronLeft : mdiChevronRight} />\n              </SvgIcon>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Groups:</div>\n      </div>\n      <List dense disablePadding>\n        {renderGroupsList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Button } from 'shared/components/controls';\n\nimport './users.scss';\n\nconst Users = ({\n  users,\n  onSelect,\n  onSelectUserAction,\n  isClearActionAvailable,\n  isGroupSelected,\n  eventTypeIcons\n}) => {\n  const renderUsersList = () => {\n    if (Array.isArray(users) && users.length) {\n      let emptyListMessage = '';\n      if (!isGroupSelected) {\n        emptyListMessage = 'Please select a group to view its users.';\n      } else if (!users.find(item => item.display)) {\n        emptyListMessage = 'No users available in the group.';\n      }\n      if (emptyListMessage) {\n        return (\n          <div className=\"notifications-users-empty-list\">\n            <PermIdentityIcon size=\"small\" />\n            <span>{emptyListMessage}</span>\n          </div>\n        );\n      }\n      return users\n        .filter(user => user.display)\n        .map(user => {\n          return (\n            <ListItem\n              onClick={() => onSelect(user)}\n              selected={user.selected}\n              key={user.data.name}\n              button\n            >\n              <ListItemIcon>\n                <PersonIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n              </ListItemIcon>\n              <ListItemText primary={user.data.name} />\n              <ListItemSecondaryAction classes={{ root: 'notifications-users-check-wrap' }}>\n                {user.selected && eventTypeIcons.map(icon => icon)}\n                <Checkbox\n                  onChange={() => onSelect(user)}\n                  edge=\"end\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  checked={user.selected}\n                  classes={{ root: 'checkbox-custom' }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n    }\n    return null;\n  };\n\n  const currentActionLabel = isClearActionAvailable ? 'Clear' : 'Select all';\n  const shouldDisplayAction = isGroupSelected && users.find(item => item.display);\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Users:</div>\n        {shouldDisplayAction && (\n          <Button role=\"presentation\" onClick={() => onSelectUserAction(isClearActionAvailable)}>\n            {currentActionLabel}\n          </Button>\n        )}\n      </div>\n      <List dense disablePadding>\n        {renderUsersList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport classnames from 'classnames';\nimport './events.scss';\n\nconst Events = ({ jobStart, jobCompletion, abnormalEvent, onSelect, areUsersSelected }) => {\n  const classes = classnames('notification-events', { 'events-wrap-disabled': !areUsersSelected });\n  return (\n    <div className={classes}>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-title\">Event type:</div>\n        </div>\n        <span>\n          <PlayCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job start</span>\n        </span>\n        <span>\n          <CheckCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job completion</span>\n        </span>\n        <span>\n          <ErrorOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">abnormal event</span>\n        </span>\n      </div>\n      <div className=\"notification-events-col old-notice\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n      </div>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Center } from 'shared/components/layout';\n\nimport { Button } from 'shared/components/controls';\n\nimport './notification-list.scss';\nimport { withStyles } from '@material-ui/core';\n\nconst UserChip = withStyles({\n  root: {\n    background: 'rgba(55, 101, 175, 0.08)',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '& > svg': {\n      marginLeft: '8px'\n    }\n  }\n})(Chip);\n\nconst NotificationList = ({ users, eventTypeIcons, toggleApplyButton, disabled }) => {\n  const filteredUsers = users.filter(user => user.selected);\n  const renderUserList = () => {\n    if (!filteredUsers.length) {\n      return <Center>No notifications applied</Center>;\n    }\n    return filteredUsers.map(user => {\n      return (\n        <UserChip\n          classes={{ root: 'notification-list-item' }}\n          label={\n            <>\n              <span>{user.data.name}</span>\n              {eventTypeIcons}\n            </>\n          }\n          color=\"default\"\n          icon={<PersonIcon size=\"small\" />}\n        />\n      );\n    });\n  };\n\n  let buttonLabel = 'Add';\n  let buttonIcon = <NotificationsNoneIcon />;\n  if (filteredUsers.length) {\n    buttonLabel = 'Edit';\n    buttonIcon = <EditIcon />;\n  }\n\n  return (\n    <div className=\"notification-list-wrapper\">\n      <div>{renderUserList()}</div>\n      <div className=\"notification-list-edit-section\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={toggleApplyButton}\n          startIcon={buttonIcon}\n          endIcon={<ArrowDropDownIcon />}\n          classes={{ root: 'notifications-add-edit' }}\n          disabled={disabled}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport GroupIcon from '@material-ui/icons/Group';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './Entity.scss';\n\n/* eslint-disable */\nconst Entity = ({ entity, selectEntity, columns, entityIcons }) => {\n  const cls = classnames('entity', {\n    '--isSelected': entity.isSelected,\n    'account-entity': entity.entity === 'account'\n  });\n  const user = entity.user_owner;\n  const aliasStr = entity.alias;\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={cls}\n      onClick={event => {\n        selectEntity(entity, columns.level);\n\n        const target = event.currentTarget;\n        const box = target.getBoundingClientRect();\n        const parent = target.parentNode.parentNode;\n\n        setTimeout(function() {\n          parent.scrollTo({ left: box.right, behavior: 'smooth' });\n        }, 200);\n      }}\n    >\n      <LightTooltip placement=\"bottom\" title={entity.entity || ''}>\n        <div className=\"entity-icon-wrap\">{entityIcons[entity.entity]}</div>\n      </LightTooltip>\n      <div className=\"entity-details\">\n        <div className=\"entity-name\">\n          {!!aliasStr && (\n            <div title={`Alias of ${aliasStr}`}>\n              <FilterNoneIcon />\n            </div>\n          )}\n          <LightTooltip placement=\"bottom\" title={entity.name}>\n            <span>{entity.name}</span>\n          </LightTooltip>\n        </div>\n        <div className=\"entity-user\">\n          <GroupIcon />\n          <span>{user}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/* eslint-enable */\n\nexport default Entity;\n","import React from 'react';\nimport Switch from '../components/Switch';\nimport ActionsNamespace from '../components/ActionsNamespace';\nimport ActionsConstant from '../components/ActionsConstant';\nimport ActionsProcess from '../components/ActionsProcess';\nimport ActionsForm from '../components/ActionsForm';\nimport ActionsRoot from '../components/ActionsRoot';\nimport ActionsPrototype from '../components/ActionsPrototype';\nimport ActionsSchedule from '../components/ActionsSchedule';\nimport ActionsCommon from '../components/ActionsCommon';\nimport GroupIcon from '@material-ui/icons/Group';\nimport './SelectedEntity.scss';\n\nconst SelectedEntity = ({ selectedEntity, entityIcons }) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  return (\n    <div className=\"selected-entity\">\n      <div className=\"selected-entity-title\">\n        <div className=\"selected-entity-title-icon\">{entityIcons[selectedEntity.entity]}</div>\n        <div className=\"selected-entity-title-details\">\n          {selectedEntity.name}\n          <div className=\"selected-entity-title-user\">\n            <GroupIcon />\n            <span>{selectedEntity.user_owner}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"entity-detail-wrap\">\n        <div className=\"entity-description-wrap\">{selectedEntity.description}</div>\n\n        <Switch value={selectedEntity.entity}>\n          <Switch.Case value=\"root\">\n            <ActionsRoot />\n          </Switch.Case>\n\n          <Switch.Case value=\"namespace\">\n            <ActionsNamespace entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"constant\">\n            <ActionsConstant entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"form\">\n            <ActionsForm entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"process\">\n            <ActionsProcess entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"prototype\">\n            <ActionsPrototype entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"schedule\">\n            <ActionsSchedule entity={selectedEntity} />\n          </Switch.Case>\n        </Switch>\n        <ActionsCommon entity={selectedEntity} />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedEntity;\n","import React from 'react';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nimport { ConnectedEditNamespace } from './namespace-actions/EditNamespace';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\nimport { ConnectedDeleteNamespace } from './namespace-actions/DeleteNamespace';\n\nconst ActionsNamespace = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const hasWrite = hasWritePrivileges(entity);\n\n  return (\n    <>\n      <ConnectedNewNamespace namespace={entity} />\n      {hasWrite && <ConnectedEditNamespace namespace={entity} />}\n      {deleteRights(entity, hasWrite) && (\n        <ConnectedDeleteNamespace entity={entity} disabled={disableActions} />\n      )}\n    </>\n  );\n};\n\nfunction deleteRights(entity, hasWrite) {\n  return hasWrite && entity.owner !== 'postgres';\n}\n\nexport default ActionsNamespace;\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { getNamespace, patchNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nfunction parseName(namespace) {\n  const split = namespace.name.split('.');\n  const tail = split.length - 1;\n  const parsed = {\n    name: split[tail],\n    fq: namespace.name\n  };\n\n  if (split.length > 1) {\n    parsed.parent = split.slice(0, tail).join('.');\n  } else {\n    parsed.parent = '';\n  }\n\n  return parsed;\n}\n\nexport const ConnectedEditNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    request: fetchEntity\n  }\n)(EditNamespace);\n\nfunction EditNamespace({ namespace, request, nestedNames }) {\n  const canUpdateName = nestedNames.length === 0;\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const split_name = parseName(namespace);\n\n  const getInitialValues = () => {\n    const values = {};\n\n    values.name = split_name.name || '';\n    values.namespace = split_name.parent;\n    values.description = description;\n\n    return values;\n  };\n\n  const getNamespaceDetails = name => {\n    getNamespace(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.namespaces &&\n          data.data.data.namespaces[0] &&\n          data.data.data.namespaces[0].description\n        ) {\n          setDescription(data.data.data.namespaces[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get namespace] error getting namespace details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getNamespaceDetails(namespace.name);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values, split_name);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              {canUpdateName && (\n                                <Text name=\"name\" label=\"Name\" value={values.name} required />\n                              )}\n                              {!canUpdateName && (\n                                <Text\n                                  name=\"name\"\n                                  label=\"Name\"\n                                  value={values.name}\n                                  required\n                                  disabled\n                                  description=\"To update a namespace name, namespace must be empty!\"\n                                />\n                              )}\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                {canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                  />\n                                )}\n                                {!canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                    disabled\n                                    description=\"To update a namespace parent name, namespace must be empty!\"\n                                  />\n                                )}\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values, split_name) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    description: values.description\n  };\n\n  /*\n    If the old entity fully-qualified name does not match with the form value,\n    then we need to add a rename key with the new name.\n   */\n  if (name !== split_name.fq) {\n    body.rename = name;\n  }\n\n  patchNamespace(split_name.fq, body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    refresh: fetchEntity\n  }\n)(DeleteNamespace);\n\nfunction DeleteNamespace({ disabled, entity, refresh, nestedNames }) {\n  const canDelete = nestedNames.length === 0;\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={canDelete}>\n            <Switch.Case value>\n              <Switch value={result}>\n                <Switch.Case value=\"attempt\">\n                  <Paper.Content scrollable={false}>\n                    <Result type=\"fail\">\n                      <BodyText>\n                        Are you sure you want to remove this {type} ? This could affect the way the\n                        user will be able to interact with the app.\n                      </BodyText>\n                    </Result>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          terminator();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"success\">\n                  <Result type=\"success\">\n                    <BodyText>{name} successfully deleted!</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                          refresh(type);\n                        }}\n                      >\n                        Done\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"fail\">\n                  <Result type=\"fail\">\n                    <BodyText>You do not have permissions to delete this entity.</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                        }}\n                      >\n                        Close\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n            <Switch.Case value={false}>\n              <Result type=\"fail\">\n                <BodyText>To delete a namespace it must be empty!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { patchConstant } from 'shared/api/constant';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsConstant = ({ entity }) => {\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConstant constant={entity} />;\n};\n\nexport default ActionsConstant;\n\nexport const ConnectedEditConstant = connect(null, {\n  request: fetchEntity\n})(EditConstant);\n\nfunction EditConstant({ constant, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = constant?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Constant\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Constant was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the constant could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: constant.name, value: constant.value }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" disabled value={constant.name} />\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"value\"\n                                label=\"Value\"\n                                value={constant.value}\n                                description={constant.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const body = {\n    value: values.value\n  };\n\n  patchConstant(values.name, body)\n    .then(() => {\n      setResult('success');\n      request('constant');\n    })\n    .catch(error => {\n      console.log('[edit constant] patch constant error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function patchConstant(name, body) {\n  return RestClient.patch(`/constant/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { ErrorModal, Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { postSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\nimport { isEmpty, pickBy } from 'lodash';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport { EditProcessModal } from './process-actions/EditProcessModal';\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../shared/lib/rest';\nimport moment from 'moment';\nimport { CONSTANTS } from 'config';\n\nimport './ActionsSchedule.scss';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nconst ActionsProcess = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new job.';\n\n  return (\n    <>\n      {entity?.is_executable === false && (\n        <Button\n          classes={{ root: 'entity-button' }}\n          onClick={() => setOpen(true)}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      {entity?.is_executable && (\n        <Button\n          component={LinkBehavior}\n          classes={{ root: 'entity-button' }}\n          to={`/jobs/job?process=${entity.name}&redirected=true`}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      <ConnectedNewSchedule process={entity} isDisabled={isDisabled} />\n      {hasWritePrivileges(entity) && <EditProcessModal process={entity} />}\n      <ErrorModal open={open} actions={modalActions} message={message} />\n    </>\n  );\n};\n\nexport default ActionsProcess;\n\nexport const ConnectedNewSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(NewSchedule);\n\nfunction NewSchedule({ process, isDisabled, request, allScheduledNames }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const [openErrorModal, setOpenErrorModal] = useState(false);\n  const errorModalActions = {\n    open: () => {\n      setOpenErrorModal(true);\n    },\n    close: () => {\n      setOpenErrorModal(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new schedule.';\n\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  // processDetails might be used at a later date\n  const [processDetails, setProcessDetails] = useState({}); // eslint-disable-line\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n\n  const onClickHandler = () => {\n    if (process.is_executable) {\n      setOpen(true);\n    } else {\n      setOpenErrorModal(true);\n    }\n\n    getProcess(process.name)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        New Schedule\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"New Schedule\"\n            icon={\n              <SvgIcon>\n                <SlowMotionVideoIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={process}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={process} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n      <ErrorModal open={openErrorModal} actions={errorModalActions} message={message} />\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nclass ScheduleForm extends React.PureComponent {\n  derivedMonitor = {\n    enabled: false,\n    events: 0,\n    users: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monitor: this.derivedMonitor,\n      serverTime: null\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n  }\n\n  render() {\n    const {\n      process,\n      setResult,\n      allScheduledNames,\n      request,\n      filledValues,\n      setFilledValues,\n      formRef\n    } = this.props;\n\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          errors.sch_name = 'A schedule with this name already exists';\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{ process: process.name }}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"process\"\n                            label=\"Process\"\n                            description={process.description}\n                            value={process.name}\n                            disabled\n                          />\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || undefined}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_hr\" label=\"T_hr\" value={filledValues?.t_hr || '*'} description={CronValidator.FORMAT_MSG.HOURS} />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_day\" label=\"T_Day\" value={filledValues?.t_day || '*'} description={CronValidator.FORMAT_MSG.DAYS} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_mon\" label=\"T_mon\" value={filledValues?.t_mon || '*'} description={CronValidator.FORMAT_MSG.MONTH} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_wkd\" label=\"T_wkd\" value={filledValues?.t_wkd || '*'} description={CronValidator.FORMAT_MSG.DAY_OF_WEEK} />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || process.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={this.derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nasync function handleSubmit(monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { ProcessEditor } from './ProcessEditor';\n\nimport { fetchEntity } from '../../actions';\n\nexport const EditProcessModal = ({ process }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('editing');\n  const formRef = useRef();\n  const modalActions = {\n    open: useCallback(() => {\n      setResult('editing');\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n\n      if (result === 'success') {\n        dispatch(fetchEntity('process'));\n      }\n    }, [result])\n  };\n\n  return (\n    <>\n      <Button classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Edit Process\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Process\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            desc={process.name}\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"editing\">\n              <ProcessEditor process={process} setResult={setResult} formRef={formRef} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Process was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Done</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the process could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Close</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { QualifiedName } from 'shared/components/form/editors/Custom';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { patchProcess } from 'shared/api/process';\n\nimport './ProcessEditor.local.scss';\n\nexport function ProcessEditor({ process, setResult, formRef }) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        saveProcessEdits(values, process, setResult);\n      }}\n      innerRef={formRef}\n    >\n      {() => {\n        return (\n          <>\n            <Paper.Content>\n              <Form>\n                <Section>\n                  <Section.Header>\n                    <Section.Title>Details</Section.Title>\n                  </Section.Header>\n                  <Section.Content>\n                    <Row>\n                      <Column>\n                        <QualifiedName\n                          name=\"process_name\"\n                          label=\"Name\"\n                          value={process.name}\n                          required\n                        />\n                      </Column>\n                    </Row>\n                  </Section.Content>\n                </Section>\n                <Section>\n                  <Section.Content>\n                    {process.steps.map((step, index) => {\n                      return <Step step={step} step_index={index} />;\n                    })}\n                  </Section.Content>\n                </Section>\n              </Form>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <SubmitButton variant=\"contained\">Save</SubmitButton>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nfunction Step({ step, step_index }) {\n  const expressions = parseEvaluatableExpressions(step, step_index);\n  const noEvaluatableExpressions = !expressions.length;\n\n  if (noEvaluatableExpressions) {\n    return null;\n  }\n\n  return (\n    <div className=\"step\">\n      <div className=\"title\">Step: {step.label}</div>\n      <div className=\"description\">{step.description}</div>\n      <div className=\"expressions\">\n        <div className=\"list\">\n          {expressions.map((exp, index) => (\n            <StepExpression key={index} {...exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction StepExpression({ expression, exp_index, step, step_index }) {\n  const name = `step-${step_index}-expression-${exp_index}`;\n  return (\n    <Row>\n      <Text\n        multiline\n        value={expression.evaluate}\n        label={`Expression ${expression.assign || exp_index} of ${step.label}`}\n        name={name}\n        required\n      />\n    </Row>\n  );\n}\n\nfunction parseEvaluatableExpressions(step, step_index) {\n  const { expressions } = step;\n\n  if (!Array.isArray(expressions) || expressions.length === 0) {\n    return [];\n  }\n\n  return expressions.reduce((acc, exp, index) => {\n    if (exp.evaluate) {\n      acc.push({\n        expression: exp,\n        exp_index: index,\n        step,\n        step_index\n      });\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction saveProcessEdits(values, process, setResult) {\n  const { process_name, ...evaluations } = values;\n  const toSend = {};\n\n  const steps = _.cloneDeep(process.steps);\n\n  /**\n   * extract and remap field values.\n   */\n  const extracted = extractFieldInfo(evaluations);\n\n  extracted.forEach(({ step, expression, value }) => {\n    const path = `[${step}].expressions[${expression}].evaluate`;\n\n    _.set(steps, path, value);\n  });\n\n  /** Prepare patch request body */\n  toSend.steps = steps;\n\n  if (process.name !== process_name) {\n    toSend.rename = values.process_name;\n  }\n\n  patchProcess(process.name, toSend)\n    .then(() => {\n      setResult('success');\n    })\n    .catch(() => {\n      setResult('fail');\n    });\n}\n\nfunction extractFieldInfo(all) {\n  const key_struct = /^step-(\\d+)-expression-(\\d+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      step: matched[1],\n      expression: matched[2],\n      value\n    };\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\nimport { postForm } from 'shared/api/form';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButtonNoDirty } from 'shared/components/form/SubmitButtonNoDirty';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { Ensure } from 'core/components/Ensure';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction findFormPrototype(form, prototypes) {\n  const name = form.prototype;\n  const found = prototypes.find(item => item.name === name);\n\n  return found;\n}\n\nfunction findFormEntry(entity, forms) {\n  if (entity.alias) {\n    return forms.find(entry => entry.name === entity.alias);\n  }\n\n  return entity;\n}\n\nconst ActionsForm = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n  return (\n    <>\n      {canWrite && (\n        <Ensure type=\"prototype\" inlineLoader>\n          {({ data: prototypes }) => (\n            <Ensure type=\"form\" inlineLoader>\n              {({ data: forms }) => (\n                <ConnectedFormModal\n                  disabled={disableActions}\n                  form={findFormEntry(entity, forms)}\n                  prototype={findFormPrototype(entity, prototypes)}\n                />\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      )}\n      <ConnectedCopyForm form={entity} />\n    </>\n  );\n};\n\nexport default ActionsForm;\n\nexport const ConnectedCopyForm = connect(null, {\n  request: fetchEntity\n})(CopyForm);\n\nfunction CopyForm({ form, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = form?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Copy\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '300px'\n          }}\n        >\n          <ModalHeader\n            title=\"Copy Form\"\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was copied successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be copied.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: `${form.name}_copy` }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, form.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              Please choose a new name for the copy of form &apos;{form.name}&apos;.\n                            </Section.Header>\n                            <Row>\n                              <Text\n                                name=\"name\"\n                                label=\"Name\"\n                                value={`${form.name}_copy`}\n                                description={form.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButtonNoDirty variant=\"contained\">Save</SubmitButtonNoDirty>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, formName, values) {\n  const body = {\n    name: values.name\n  };\n\n  postForm(formName, body)\n    .then(() => {\n      setResult('success');\n      request('form');\n    })\n    .catch(error => {\n      console.log('[copy form] put form error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useMemo, useContext } from 'react';\n\nimport { Section, Row, Column } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Ensure } from 'core/components/Ensure';\n\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { PackedContext } from './FormEditor';\n\nexport const FormParameters = ({ packed, prototype }) => {\n  return (\n    <Section>\n      <Section.Header />\n      <Section.Content>\n        <Ensure type=\"form\">\n          {({ data: forms }) => (\n            <Ensure type=\"type\">\n              {({ data: datatypes }) => (\n                <Ensure type=\"prototype\">\n                  {({ data: prototypes }) => (\n                    <Ensure type=\"process\">\n                      <FieldsAndGroupsEditor\n                        prototype={prototype}\n                        groups={packed.groups}\n                        prototypes={prototypes}\n                        datatypes={datatypes}\n                        forms={forms}\n                      />\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nconst DataContext = React.createContext({ datatypes: [], forms: [], prototypes: [] });\n\nfunction FieldsAndGroupsEditor({ groups, datatypes, prototypes, forms }) {\n  const entities = useMemo(\n    () => ({\n      datatypes,\n      prototypes,\n      forms\n    }),\n    [datatypes, prototypes, forms]\n  );\n\n  return (\n    <>\n      <DataContext.Provider value={entities}>\n        {groups.map((group, index) => (\n          <FieldGroup key={index} pointer={index} group={group} />\n        ))}\n      </DataContext.Provider>\n    </>\n  );\n}\n\nfunction FieldGroup({ group, pointer }) {\n  return (\n    <>\n      {group.instances.map((instance, index) => (\n        <GroupInstance\n          key={`${pointer}|${index}`}\n          group={group}\n          instance={instance}\n          pointers={{ group: pointer, instance: index }}\n          count={group.instances.length}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction GroupInstance({ group, instance, pointers, count }) {\n  let title = group.name ? `Group ${group.name}` : null;\n  if (group.iteration_limit > 1) {\n    title = group.name\n      ? `Group ${group.name} (${pointers.instance + 1} of ${count})`\n      : `Group (Unnamed) (${pointers.instance + 1} of ${count})`;\n  }\n\n  const canAdd =\n    group.iteration_limit > 1 && count - 1 === pointers.instance && count < group.iteration_limit;\n\n  const { dispatch } = useContext(PackedContext);\n\n  return (\n    <div>\n      <Section.Title>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}\n        >\n          {title}\n          {count !== 1 && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_GROUP_INSTANCE',\n                  pointers\n                });\n              }}\n            >\n              Remove Group\n            </Button>\n          )}\n        </div>\n      </Section.Title>\n      <div>\n        {instance.fields.map((field, index) => (\n          <Field\n            key={`${pointers.group}|${pointers.instance}|${field.name}`}\n            group={group}\n            instance={instance}\n            pointers={{ ...pointers, field: index }}\n            field={field}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {canAdd && (\n          <Button\n            onClick={() => {\n              const fields = instance.fields.map(field => {\n                return {\n                  ...field,\n                  values: [{ instance: 0, value: null }]\n                };\n              });\n              const newInstance = {\n                ...instance,\n                instance: instance.instance + 1,\n                fields\n              };\n\n              dispatch({\n                type: 'ADD_GROUP_INSTANCE',\n                pointers,\n                instance: newInstance\n              });\n            }}\n          >\n            Add Group\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Field({ field, pointers }) {\n  return (\n    <div>\n      {field.values.map((value, index) => (\n        <Value\n          key={`${pointers.group}|${pointers.instance}|${field.name}|${index}`}\n          field={field}\n          value={value.value}\n          pointers={{ ...pointers, value: index }}\n          count={field.values.length}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Value({ field, value, pointers, count }) {\n  const packet = useContext(DataContext);\n\n  const canRemove = field.is_repeatable && count !== 1;\n  const canAdd = field.is_repeatable && pointers.value + 1 === count;\n\n  const { dispatch } = useContext(PackedContext);\n\n  const label = field.is_repeatable\n    ? `${field.name} (${pointers.value + 1} of ${count})`\n    : field.name;\n\n  function uniquedName(name, idx) {\n    const string = `group-${idx.group}-instance-${idx.instance}-field-${idx.field}-value-${idx.value}---${field.name}`;\n\n    return string;\n  }\n\n  const parameter = normalize(\n    {\n      name: uniquedName(field.name, pointers),\n      provided_field_name: field.name,\n      is_required: field.is_required,\n      value,\n      data_type: field.data_type,\n      description: field.description,\n      deflt: field.deflt,\n      meta: field.meta\n    },\n    packet.datatypes,\n    packet.prototypes,\n    packet.forms\n  );\n\n  // for some reason, is_required is set as false for a supported parameter (eg: mas0300.sys.invocation.server_list prototype)\n  // FIX ME: need to investigate further, for now, will make the value the same as field\n  parameter.is_required = field.is_required;\n  // console.log(parameter, field);\n\n  const is_supported = parameter.is_supported && parameter.editor.type !== 'hidden';\n\n  if (!is_supported) {\n    return (\n      <Row key={pointers.value}>\n        <p>{field.name} (Unsuported)</p>\n        <Parameter\n          normalized={{ ...parameter, is_required: false, editor: { type: 'text' } }}\n          disabled\n          label={label}\n        />\n      </Row>\n    );\n  }\n\n  return (\n    <Row key={pointers.value}>\n      <Column key={field.name}>\n        <Parameter normalized={parameter} label={label} />\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          {canAdd && canRemove && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_FIELD_VALUE',\n                  pointers\n                });\n              }}\n            >\n              Remove\n            </Button>\n          )}\n          {canAdd && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                onClick={() => {\n                  dispatch({\n                    type: 'ADD_FIELD_VALUE',\n                    pointers\n                  });\n                }}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n        </div>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\n\nconst ActionsRoot = () => {\n  return (\n    <>\n      <ConnectedNewNamespace />\n    </>\n  );\n};\n\nexport default ActionsRoot;\n","import React from 'react';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nconst ActionsPrototype = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <ConnectedFormModal isNew prototype={entity} disabled={disableActions} />\n    </>\n  );\n};\n\nexport default ActionsPrototype;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport _, { isEmpty, pickBy } from 'lodash';\n\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { getSchedule, patchSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\n\nimport './ActionsSchedule.scss';\n\nconst ActionsSchedule = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConnectedEditSchedule schedule={entity} isDisabled={isDisabled} />\n    </>\n  );\n};\n\nexport default ActionsSchedule;\n\nexport const ConnectedEditSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(EditSchedule);\n\nfunction EditSchedule({ schedule, isDisabled, allScheduledNames, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const [processDetails, setProcessDetails] = useState({});\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n  const [everyHourWarningShown] = useState({});\n\n  useEffect(() => {\n    if (!_.isEmpty(scheduleDetails) && !_.isEmpty(processDetails)) {\n      setOpen(true);\n    }\n  }, [scheduleDetails, processDetails]);\n\n  const onClickHandler = () => {\n    /** TODO cover the case when one (or both) of the below calls fail or no data is returned from them */\n\n    getSchedule(schedule.name)\n      .then(data => {\n        if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n          setScheduleDetails(data.data.data.schedules[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n\n    getProcess(schedule.process)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Schedule\"\n            icon={\n              <SvgIcon>\n                <EventNoteIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={processDetails}\n                    schedule={scheduleDetails}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                    everyHourWarningShown={everyHourWarningShown}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={processDetails} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({\n  schedule,\n  setResult,\n  allScheduledNames,\n  request,\n  filledValues,\n  setFilledValues,\n  formRef,\n  everyHourWarningShown\n}) => {\n  const derivedMonitor = {\n    enabled: !!schedule?.parameters?.events,\n    events: schedule?.parameters?.events || 0,\n    users: schedule?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const splittedName = schedule.name.split('.');\n  const name = splittedName[splittedName.length - 1];\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name) {\n      if (sch_name.includes('.')) {\n        errors.sch_name = 'Name cannot include \".\"';\n      } else if (sch_name.includes(' ')) {\n        errors.sch_name = 'Name cannot include spaces';\n      } else if (allScheduledNames.includes(sch_name) && name !== sch_name) {\n        errors.sch_name = 'A schedule with this name already exists';\n      }\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n      errors.t_hr = 'At least one value should be populated';\n      errors.t_day = 'At least one value should be populated';\n      errors.t_mon = 'At least one value should be populated';\n      errors.t_wkd = 'At least one value should be populated';\n      return errors;\n    }\n\n    if (!CronValidator.isValidMinutes(t_min)) {\n      errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n    }\n\n    if (!CronValidator.isValidHours(t_hr)) {\n      errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n    }\n\n    if (!CronValidator.isValidDays(t_day)) {\n      errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n    }\n\n    if (!CronValidator.isValidMonth(t_mon)) {\n      errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n    }\n\n    if (!CronValidator.isValidWeekDay(t_wkd)) {\n      errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={values => {\n          handleSubmit(schedule, monitor, setResult, request, setFilledValues, values);\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={schedule.description}\n                          value={schedule.process}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"sch_name\"\n                          label=\"Name\"\n                          value={filledValues?.rename || name}\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={filledValues?.description || schedule.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_min\"\n                            label=\"T_min\"\n                            value={filledValues?.t_min || schedule.t_min}\n                            description={CronValidator.FORMAT_MSG.MINUTES}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_hr\"\n                            label=\"T_hr\"\n                            value={filledValues?.t_hr || schedule.t_hr}\n                            description={CronValidator.FORMAT_MSG.HOURS}\n                          />\n                          {everyHourWarningShown && (\n                            <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                          )}\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_day\"\n                            label=\"T_Day\"\n                            value={filledValues?.t_day || schedule.t_day}\n                            description={CronValidator.FORMAT_MSG.DAYS}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_mon\"\n                            label=\"T_mon\"\n                            value={filledValues?.t_mon || schedule.t_mon}\n                            description={CronValidator.FORMAT_MSG.MONTH}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_wkd\"\n                            label=\"T_wkd\"\n                            value={filledValues?.t_wkd || schedule.t_wkd}\n                            description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <ProcessParameters\n                    recieved={filledValues?.parameters || schedule.parameters}\n                    editable\n                  />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(schedule, monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    rename: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  patchSchedule(schedule.name, body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[edit schedule] edit schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getAlias, patchAlias, postAlias } from 'shared/api/alias';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { ConnectedDeleteEntity } from './common-actions/DeleteEntity';\nimport { PrivilegesModal } from './common-actions/privileges/PrivilegesModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction isEntityDeletable(entity) {\n  return (\n    entity.owner !== 'postgres' &&\n    (entity.entity === 'form' ||\n      entity.entity === 'process' ||\n      entity.entity === 'schedule' ||\n      entity.entity === 'account')\n  );\n}\n\nconst ActionsCommon = ({ entity }) => {\n  const displayActions = entity.entity !== 'root';\n  if (displayActions) {\n    const displayDelete = isEntityDeletable(entity);\n    const isAlias = entity.alias;\n    const disableActions = entity?.meta?.appearance === 'Greyed';\n    const canWrite = hasWritePrivileges(entity);\n\n    return (\n      <>\n        {canWrite && (\n          <PrivilegesModal entity={entity} isAlias={isAlias} disabled={disableActions} />\n        )}\n        {!isAlias && <ConnectedNewAlias entity={entity} />}\n        {isAlias && canWrite && <ConnectedEditAlias entity={entity} />}\n        {canWrite && displayDelete && (\n          <ConnectedDeleteEntity entity={entity} disabled={disableActions} />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nexport default ActionsCommon;\n\n//* These should be moved to the common-actions folder */\n\nexport const ConnectedNewAlias = connect(null, {\n  request: fetchEntity\n})(NewAlias);\n\nfunction NewAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: '',\n                  original: entity ? entity.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const alias = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name: values.original,\n    alias,\n    description: values.description\n  };\n\n  postAlias(body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedEditAlias = connect(null, {\n  request: fetchEntity\n})(EditAlias);\n\nfunction EditAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = entity.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.original = entity ? entity.alias : '';\n    values.description = description;\n\n    return values;\n  };\n\n  const getAliasDetails = name => {\n    getAlias(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.aliases &&\n          data.data.data.aliases[0] &&\n          data.data.data.aliases[0].description\n        ) {\n          setDescription(data.data.data.aliases[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get alias] error getting alias details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getAliasDetails(entity.name);\n        }}\n      >\n        Edit Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleEditSubmit(setResult, request, entity.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleEditSubmit(setResult, request, originalName, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    rename: name,\n    description: values.description\n  };\n\n  patchAlias(originalName, body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity, clearSelectedEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteEntity = connect(null, {\n  clearSelected: clearSelectedEntity,\n  refresh: fetchEntity\n})(DeleteEntity);\n\nfunction DeleteEntity({ disabled, entity, refresh, clearSelected }) {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove this {type} ? This could affect the way the user\n                    will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <BodyText>{name} successfully deleted!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                      clearSelected();\n                      refresh(type);\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <BodyText>You do not have permissions to delete this entity.</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { PrivilegesEditor } from './PrivilegesEditor';\n\nexport const PrivilegesModal = ({ disabled, entity, isAlias }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      // refresh(entity.type);\n      setOpen(false);\n    }, [])\n  };\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Privileges\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vw',\n            minHeight: '648px',\n            maxHeight: '648px'\n          }}\n        >\n          <ModalHeader\n            title=\"Privileges\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <PrivilegesEditor entity={entity} isAlias={isAlias} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\n\nimport { Paper, Center, NavigationTab } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Result, ModalContext } from 'shared/components/overlays';\nimport { Button, Checkbox as LabeledCheckbox } from 'shared/components/controls';\n\nimport { getPrivileges, setPrivileges } from 'shared/api/privileges';\n\nimport './PrivilegesEditor.local.scss';\nimport { mdiAccount } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nexport const PrivilegesEditor = ({ entity }) => {\n  const hasAlias = !!entity.alias;\n  const {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    updatePrivilege\n  } = usePrivileges(entity, hasAlias);\n  const [tab, switchTab] = useState('users');\n  const { actions } = useContext(ModalContext);\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader>Loading privileges for entity</Loader>\n      </Center>\n    );\n  }\n\n  if (!data) {\n    return (\n      <Center>\n        <Result type=\"fail\">\n          <Result.Text compact>Could not load privileges list for {entity.name}</Result.Text>\n        </Result>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab\n          active={tab}\n          tabs={[\n            { label: 'Users', value: 'users' },\n            { label: 'Groups', value: 'groups' }\n          ]}\n          onClick={switchTab}\n        />\n      </Paper.Header>\n      <PrivilegesList\n        privileges={data.privileges.filter(p => {\n          if (p.role === 'mas') {\n            return false;\n          }\n          if (p.role === 'admin') {\n            return false;\n          }\n          if (tab === 'users') {\n            return !p.is_group;\n          }\n\n          return p.is_group;\n        })}\n        updater={privilege => {\n          updatePrivilege(privilege);\n        }}\n        updating={updating}\n        entityType={entity.entity}\n        entityName={hasAlias && editAliasParent ? entity.alias : entity.name}\n        isAlias={hasAlias && !editAliasParent}\n      />\n      <Paper.Footer>\n        {!!entity.alias && (\n          <Paper.Footer.Left>\n            <LabeledCheckbox\n              color=\"primary\"\n              icon={<CheckBoxOutlineBlankIcon />}\n              checkedIcon={<CheckBoxIcon />}\n              checked={editAliasParent}\n              onChange={() => {\n                setEditAliasParent(!editAliasParent);\n              }}\n              label=\"Show parent privileges\"\n            />\n          </Paper.Footer.Left>\n        )}\n        <Paper.Footer.Right>\n          <Button color=\"primary\" variant=\"contained\" onClick={actions.close}>\n            Done\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nfunction PrivilegesList({ privileges, updating, updater, entityType, entityName, isAlias }) {\n  const types = privilegeTypes(entityType, isAlias);\n\n  function renderType(type) {\n    return (\n      <div className=\"column role\" key={type}>\n        {type}\n      </div>\n    );\n  }\n\n  function mapByEntity(user_or_group) {\n    return (\n      <div className=\"item\" key={`alias-${isAlias}-role-${user_or_group.role}`}>\n        <div className=\"column role\">\n          <SvgIcon color=\"primary\">\n            <path d={mdiAccount} />\n          </SvgIcon>\n          {user_or_group.role}\n        </div>\n        <div className=\"types\">\n          {types.map(type => {\n            const granted = user_or_group.effective.includes(type);\n            return (\n              <div\n                className=\"column type \"\n                key={`c-alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n              >\n                <Checkbox\n                  key={`alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n                  classes={{ root: 'privilege-checkbox' }}\n                  checked={granted}\n                  disabled={updating}\n                  onChange={() => {\n                    updater({\n                      privilege: type,\n                      enitity_name: entityName,\n                      alias: isAlias,\n                      role: user_or_group.role,\n                      role_type: user_or_group.is_group ? 'group' : 'user',\n                      granted\n                    });\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"privileges\">\n      <div className=\"header\">\n        {renderType('Name')}\n        <div className=\"types\">{types.map(renderType)}</div>\n      </div>\n      <div className=\"list\">\n        {privileges\n          .sort((a, b) => a?.role?.toLowerCase()?.localeCompare(b?.role?.toLowerCase()))\n          .map(mapByEntity)}\n      </div>\n    </div>\n  );\n}\n\nfunction privilegeTypes(entityType, alias = false) {\n  const type = entityType.toLowerCase();\n  const privileges = [];\n  if (!alias) {\n    if (type === 'namespace') {\n      privileges.push('affiliate');\n    } else if (['account', 'constant', 'form', 'process'].includes(type)) {\n      privileges.push('execute');\n    }\n  }\n  privileges.push('read', 'write');\n  return privileges;\n}\n\nfunction usePrivileges(entity, hasAlias) {\n  const [editAliasParent, setEditAliasParent] = useState(!hasAlias);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getPrivileges(\n      hasAlias && editAliasParent ? entity.alias : entity.name,\n      hasAlias && !editAliasParent\n    )\n      .then(resp => {\n        setData(resp?.data?.data?.entities?.[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setData(null);\n        setLoading(false);\n      });\n  }, [editAliasParent]);\n\n  const updatePrivilege = useCallback(\n    privilege => {\n      setUpdating(true);\n      setPrivileges(privilege)\n        .then(resp => {\n          setData(resp?.data?.data?.entities?.[0]);\n          setUpdating(false);\n        })\n        .catch(() => {\n          setUpdating(false);\n        });\n    },\n    [entity, editAliasParent]\n  );\n\n  return {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    setUpdating,\n    setData,\n    updatePrivilege\n  };\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { arrayOf, node, string, shape } from 'prop-types';\n\nimport './HeaderPageSwitch.local.scss';\n\nexport const HeaderPageSwitch = ({ routes }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header-page-switch\" data-qa=\"header-page-switch\">\n      {routes.map(({ to, label }) => (\n        <div\n          key={to}\n          className={classnames('header-page-switch-link', {\n            'active-link': location.pathname.includes(to)\n          })}\n        >\n          <Link key={to} to={to} data-qa={`header-page-switch-link-to-${to}`}>\n            {label}\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nHeaderPageSwitch.propTypes = {\n  routes: arrayOf(\n    shape({\n      to: string,\n      label: node\n    })\n  )\n};\n\nHeaderPageSwitch.defaultProps = {\n  routes: []\n};\n","import React, { useEffect } from 'react';\nimport { func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadUserThunk } from '../../store/thunks';\n\nimport { ConnectedUserView } from '../pages/UserView/UserView';\n\nexport const UserLoader = ({ loadUser, loading }) => {\n  const { userName } = useParams();\n  useEffect(() => {\n    if (userName) {\n      loadUser(userName);\n    }\n  }, [userName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading User <b>{userName}</b>\n        </Loader>\n      ) : (\n        <ConnectedUserView />\n      )}\n    </>\n  );\n};\n\nUserLoader.propTypes = {\n  loadUser: func,\n  loading: bool\n};\n\nexport const ConnectedUserLoader = connect(\n  state => ({\n    loading: state.usersManager.flags.user.loading\n  }),\n  dispatch => ({ loadUser: name => dispatch(loadUserThunk(name)) })\n)(UserLoader);\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { UserGroupsContainer } from './containers/UserGroups';\n\nimport './UserView.local.scss';\nimport { deactivateUserThunk } from '../../../store/thunks';\nimport { EditUserDetailsContainer } from './containers/EditUserDetails';\nimport { EditUserInfoContainer } from './containers/EditUserInfo';\n\nimport { currentUserSelector } from 'session/store/state';\nimport { getCurrentUserDetails } from 'session/store/selectors';\n\nimport { isAdmin } from 'entities/utils/privileges';\n\nexport const UserView = ({ user, deactivateUser, deactivating, loggedUser, userDetails }) => {\n  const defaultResult = () => {\n    if (loggedUser.get('name') === user?.name) {\n      return 'self';\n    }\n\n    if (!isAdmin(userDetails)) {\n      return 'not-admin';\n    }\n\n    return 'attempt';\n  };\n  const [result, setResult] = useState(defaultResult);\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult(defaultResult);\n      setOpen(false);\n    }, [])\n  };\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  const deactivate = useCallback(() => {\n    deactivateUser(user)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not deactivate user!'); // eslint-disable-line\n      });\n  }, [user]);\n  const titleStyles = { textTransform: 'none' };\n\n  if (noGroups) {\n    titleStyles.fontStyle = 'italic';\n  }\n\n  /* This needs to be written as a result check or 404 page for a user. */\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title style={titleStyles}>{user.name}</Paper.Title>\n        </Paper.Header>\n        <Paper.Content>\n          <Section>\n            <Section.Title>Global Privileges</Section.Title>\n            <PrivilegesContainer />\n          </Section>\n          <Section>\n            <Section.Title>Member of Groups</Section.Title>\n            <UserGroupsContainer />\n          </Section>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            {user?.name !== 'mas' && (\n              <Button\n                color=\"secondary\"\n                disabled={deactivating || noGroups}\n                onClick={modalActions.open}\n              >\n                Deactivate user\n              </Button>\n            )}\n            <EditUserDetailsContainer />\n            <EditUserInfoContainer />\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Deactivate user\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"self\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>You cannot deactivate yourself.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"not-admin\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Only admin users can deactivate other users.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to deactivate user {user.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('deactivating');\n                      deactivate();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"deactivating\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Deactivating...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const ConnectedUserView = connect(\n  state => ({\n    user: state.usersManager.users.selected,\n    deactivating: state.usersManager.flags.user.removing,\n    loggedUser: currentUserSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    deactivateUser: userName => dispatch(deactivateUserThunk(userName))\n  })\n)(UserView);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../../store/thunks';\n\nexport const Privileges = ({ user, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <div className=\"user-privileges\">\n      <ul className=\"privileges-list\">\n        {privileges.map(entry => {\n          return (\n            <li key={entry.key} className=\"privileges-item\">\n              <Privilege user={user} privilege={entry} actions={actions} disabled={disabled} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPrivileges.propTypes = {\n  user: string,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ user, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(user, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  user: string,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      disabled: user?.name === 'mas' || state.usersManager.flags.privileges.disabled,\n      privileges: mapPrivileges(user.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (user, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      ),\n    revoke: (user, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction mapPrivileges(data) {\n  if (!data) return [];\n\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { ScrollableContainer, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditUserGroupsContainer } from './EditUserGroups';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './UserGroups.local.scss';\nimport { removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const UserGroups = ({ user, groups, removeFromGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeFromGroups(user, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.type === 'fail') {\n          setResult('error');\n          setErrorMessage(response.message);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [user, selectedGroup]);\n\n  const isOnlySelect = groups?.length === 1 && groups[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove user ${user} from group ${selectedGroup}? This\n  could affect the way the user will be able to interact with the app`;\n\n  return (\n    <>\n      <div className=\"user-groups-block\">\n        <ScrollableContainer variant=\"row white\">\n          {passed => (\n            <ul {...passed}>\n              {groups &&\n                groups.map(group_name => (\n                  <li className=\"group-card-item\" key={group_name}>\n                    <AvatarCard\n                      label={group_name}\n                      disabled={user === 'mas'}\n                      avatar={{ fallback: <GroupIcon /> }}\n                      action={\n                        <SvgIcon\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSelectedGroup(group_name);\n                            modalActions.open();\n                          }}\n                        >\n                          <path d={mdiDeleteCircleOutline} />\n                        </SvgIcon>\n                      }\n                      description={retrieveGroupDescription(group_name)}\n                    />\n                  </li>\n                ))}\n              <li className=\"group-card-item\" key=\"add-user-to-groups\">\n                <EditUserGroupsContainer />\n              </li>\n            </ul>\n          )}\n        </ScrollableContainer>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setErrorMessage('An error occurred.');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  removeFromGroups: func\n};\n\nexport const UserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    const visibleGroups = user.member_of?.filter(group => group !== 'user');\n\n    return {\n      user: user.name,\n      groups: visibleGroups,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n  })\n)(UserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './EditUserGroups.local.scss';\nimport { addUserToGroupsThunk, removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const EditUserGroups = ({ user, groups, addToGroups, flags, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  if (user === 'mas') {\n    return null;\n  }\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard label=\"Add to group\" avatar={{ fallback: <AddIcon /> }} />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                user={user}\n                selected={groups}\n                flags={flags}\n                closeModal={closeModal}\n                onAdd={(userName, selections) => {\n                  return addToGroups(userName, selections);\n                }}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nEditUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  addToGroups: func,\n  flags: object\n};\n\nexport const EditUserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      groups: user.member_of,\n      flags: state.usersManager.flags.user,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    addToGroups: (user, groups) => dispatch(addUserToGroupsThunk({ user, groups })),\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n    /** add to group thunk here */\n    /** remove from group thunk here */\n  })\n)(EditUserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nconst GroupsList = ({\n  user,\n  selected,\n  onAdd,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    loading: true,\n    done: false,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => selected && !selected.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, selected]);\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.done && !state.all.length) {\n    return <p>Could not retrieve all groups</p>;\n  }\n\n  if (state.success) {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Added to selected groups succesfully!</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.fail) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>{capitalizeFirstLetter(state.fail)}</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? selected.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that the user is a part of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              onAdd(user, state.selections)\n                .then(response => {\n                  if (typeof response === 'object' && response.type === 'fail') {\n                    setState(\n                      produce(state, draft => {\n                        draft.fail = response.message;\n                      })\n                    );\n                  } else {\n                    setState(\n                      produce(state, draft => {\n                        draft.success = true;\n                      })\n                    );\n                  }\n                })\n                .catch(err => {\n                  setState(\n                    produce(state, draft => {\n                      draft.fail = err;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  user: string,\n  selected: array,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useRef } from 'react';\nimport { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { ChangePasswordContainer } from './ChangePassword';\nimport { UserDatesBox } from '../components/UserDatesBox';\n\n// import './EditUserDetails.local.scss';\n\nexport const EditUserDetails = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        User Details\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '370px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-details\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"User Details\"\n            formikRef={formRef}\n          />\n          <UserDetailsForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserDetails.propTypes = {\n  user: object\n};\n\nexport const EditUserDetailsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserDetails);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserDetailsForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ submitResult: undefined });\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  const initialValues = {\n    description: user.description\n  };\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          if (_.isEqual(initialValues, values)) {\n            actions.setSubmitting(false);\n            modalActions.close();\n          }\n\n          // parse and add user information form data.\n\n          /**\n            patch user description\n            */\n          RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`, {\n            description: values.description\n          })\n            .then(() => {\n              setState(prev => ({ ...prev, submitResult: 'success' }));\n            })\n            .catch(() => {\n              actions.setSubmitting(false);\n\n              setState(prev => ({ ...prev, submitResult: 'fail' }));\n            });\n        }}\n        innerRef={formRef}\n      >\n        {({ dirty, isSubmitting, submitForm }) => (\n          <>\n            <Paper.Content scrollable>\n              <Form>\n                <UserDatesBox created={user.date_created} updated={user.date_updated} />\n                <Row>\n                  <Field name=\"description\">\n                    {({ field, meta }) => {\n                      return (\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          error={meta.error && meta.touched}\n                          helperText={meta.touched ? meta.error : undefined}\n                          label=\"Short Description\"\n                        />\n                      );\n                    }}\n                  </Field>\n                </Row>\n              </Form>\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <ChangePasswordContainer />\n              </Paper.Footer.Left>\n              <Paper.Footer.Right>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || isSubmitting}\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nUserDetailsForm.propTypes = {\n  user: object,\n  modalActions: object\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { SvgIcon } from '@material-ui/core';\nimport { mdiAccountPlus, mdiAccountEdit } from '@mdi/js';\nimport moment from 'moment';\n\nimport './UserDatesBox.local.scss';\n\nexport const UserDatesBox = ({ created, updated }) => (\n  <div className=\"dates-box\">\n    {created && <DateCreated date={created} />}\n    {updated && <DateUpdated date={updated} />}\n  </div>\n);\n\nUserDatesBox.propTypes = { created: string, updated: string };\n\nexport const DateCreated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountPlus} />\n    </SvgIcon>\n    <span>Created on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateCreated.propTypes = { date: string };\n\nexport const DateUpdated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountEdit} />\n    </SvgIcon>\n    <span>Updated on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateUpdated.propTypes = { date: string };\n\nfunction parseDate(date) {\n  return moment(date).format('MMM DD YYYY');\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\n// import './EditUserInfo.local.scss';\n\nexport const EditUserInfo = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Contact Info\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '632px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"Contact Information\"\n            formikRef={formRef}\n          />\n          <UserInfoForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserInfo.propTypes = {\n  user: object\n};\n\nexport const EditUserInfoContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserInfo);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserInfoForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ loading: true });\n\n  useEffect(() => {\n    const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n    const prototypeEndpoint = 'prototype/mas0300.sys.user.information?version=1';\n\n    RestClient.get(prototypeEndpoint).then(formproto => {\n      const proto = formproto.data.data.prototypes[0];\n\n      RestClient.get(formEndpoint)\n        .then(formdata => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: false,\n            data: formdata.data.data.forms[0],\n            proto\n          });\n        })\n        .catch(() => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: true,\n            proto\n          });\n        });\n    });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <>\n        <Center>\n          <Loader />\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"primary\" onClick={modalActions.close}>\n              Cancel\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.result === 'success') {\n    const { fields, values } = mapFormValues(state.proto, state.data);\n\n    return (\n      <>\n        <Formik\n          validateOnChange={false}\n          initialValues={values}\n          onSubmit={(submited, actions) => {\n            if (_.isEqual(values, submited)) {\n              actions.setSubmitting(false);\n              modalActions.close();\n            }\n\n            const sendable_data = fields.reduce((d, entry) => {\n              /** Empty values have to be nulled to be sent in the data :( */\n              let value = submited[entry.name] || null;\n\n              /**\n                TODO: backend accepts array for is_repeatable values\n               */\n              if (entry.is_repeatable && !Array.isArray(value)) {\n                value = [value];\n              }\n\n              d.push({\n                name: entry.label, // for this particular form, the names contain spaces.\n                value\n              });\n\n              return d;\n            }, []);\n            // parse and add user information form data.\n\n            /**\n            Send user.info data to backend\n            */\n            const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n\n            if (state.create) {\n              const body = {\n                name: `mas0000.user.${user.name}.form.user_information`,\n                description: `User information for ${user.name}`,\n                values: sendable_data,\n                prototype: state.proto.name\n              };\n\n              RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.FORM}`, body)\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            } else {\n              RestClient.patch(formEndpoint, {\n                description: state.data.description,\n                rename: state.data.name,\n                values: sendable_data\n              })\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            }\n          }}\n          innerRef={formRef}\n        >\n          {({ dirty, isSubmitting, submitForm }) => (\n            <>\n              <Paper.Content scrollable>\n                <Form style={{ paddingTop: '16px' }}>\n                  {fields.map(entry => (\n                    <Row key={entry.name}>\n                      <FieldSwitch parameter={entry} />\n                    </Row>\n                  ))}\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button color=\"primary\" onClick={modalActions.close}>\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!dirty || isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          )}\n        </Formik>\n      </>\n    );\n  }\n};\n\nfunction mapFormValues(proto, provided) {\n  const { fields } = proto;\n  const data = provided && provided.values;\n\n  return fields.reduce(\n    (dict, entry, index) => {\n      const normalized = entry.name.replace(' ', '_');\n      const value = data && data[index].value;\n\n      if (entry.is_repeatable && Array.isArray(entry.value)) {\n        /**\n          TODO: array values have to be unpacked\n         */\n        dict.values[normalized] = value ? value[0] : '';\n      } else {\n        dict.values[normalized] = value || '';\n      }\n\n      dict.fields.push({\n        ...entry,\n        name: normalized,\n        label: entry.name\n      });\n\n      return dict;\n    },\n    { values: {}, fields: [] }\n  );\n}\n\nexport const TextField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    const schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAccountOff } from '@mdi/js';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './UserCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const UserCard = ({ href, user }) => {\n  const { pathname } = useLocation();\n  const { name, src } = user;\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  return (\n    <Link\n      to={href}\n      className={classnames('user-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`user-card-of-${name}`}\n    >\n      <Avatar className=\"user-avatar\" alt={name} src={src}>\n        {user.name[0].toUpperCase()}\n      </Avatar>\n      <span className={classnames('user-name', { groupless: noGroups })}>{name}</span>\n      {noGroups && (\n        <LightTooltip placement=\"bottom\" title=\"Deactivated user\">\n          <SvgIcon className=\"deactivated-icon\">\n            <Icon path={mdiAccountOff} />\n          </SvgIcon>\n        </LightTooltip>\n      )}\n    </Link>\n  );\n};\n\nUserCard.propTypes = {\n  href: string,\n  user: object\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoUserSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>User Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a user from the list to view or edit their details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n  </Paper>\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Section, Center, Row, Column } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { NewUserGroups } from './components/NewUserGroups';\n\nimport { createUserThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewUser.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmpassword: Yup.string()\n    .required('Please confim the password you entered')\n    .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  groups: Yup.array()\n});\n\nconst CreateNewUser = ({ submitUserValues, allUsers, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.username) ||\n      (values.username && values.username.substr(-1) === '.')\n    ) {\n      errors.username = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allUsers.map(user => {\n      if (exists) return;\n\n      if (user.name === values.username) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.username = 'A user with this name already exists';\n    }\n\n    if (values.password) {\n      if (/[$\\\\/\":;']/.test(values.password)) {\n        errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n      } else if (values.password.length < 8) {\n        errors.password = 'Password must contain at least eight characters';\n      } else if (!/[a-z]/.test(values.password)) {\n        errors.password = 'Password must have at least a lower case letter (ex: a, b, etc.)';\n      } else if (!/[A-Z]/.test(values.password)) {\n        errors.password = 'Password must have at least a upper case letter (ex: A, B, etc.)';\n      } else if (!/[0-9]/.test(values.password)) {\n        errors.password = 'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n      } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n        errors.password =\n          'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n      }\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /** Not used. Navigating dirrectly to new user */\n    if (operation.result === 'success') {\n      return (\n        <>\n          <Paper>\n            <Paper.Content scrollable={false}>\n              <Center>\n                <Result type={operation.result}>\n                  <Result.Text>User created successfully</Result.Text>\n                </Result>\n              </Center>\n            </Paper.Content>\n            <Paper.Footer>\n              <Button to=\"/system/mas-accounts/users\" component={Link}>\n                Go to user\n              </Button>\n            </Paper.Footer>\n          </Paper>\n        </>\n      );\n    }\n\n    let errorMessage = 'Could not create new user';\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirmpassword: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitUserValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.username));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <Paper>\n          <Form className=\"create-new-user-form\">\n            <Paper.Title>New User</Paper.Title>\n            <Paper.Content>\n              <Section>\n                <Section.Title>User Details</Section.Title>\n                <Section.Content>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"username\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"description\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            label=\"Short Description\"\n                            placeholder=\"Short description\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"password\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"confirmpassword\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            autoComplete=\"off\"\n                            required\n                            label=\"Confirm Password\"\n                            placeholder=\"Confirm Passwords\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                </Section.Content>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <NewUserGroups\n                      groups={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <div className=\"left-side-action\">\n                <Button to=\"/system/mas-accounts/users\" color=\"primary\">\n                  Cancel\n                </Button>\n              </div>\n\n              <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !isValid}>\n                Save\n              </Button>\n            </Paper.Footer>\n          </Form>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewUser.propTypes = { submitUserValues: func };\n\nexport const CreateNewUserPage = connect(\n  state => ({\n    allUsers: state.usersManager.users.all,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitUserValues: values => dispatch(createUserThunk(values))\n  })\n)(CreateNewUser);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './NewUserGroups.local.scss';\n\nexport const NewUserGroups = ({ groups, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {groups.map(group_name => (\n            <li className=\"group-card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = groups.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"group-card-item\" key=\"add-user-to-groups\">\n            <GroupsSelection\n              selected={groups}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nNewUserGroups.propTypes = {\n  username: string,\n  groups: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                selected={selected}\n                helpers={helpers}\n                closeModal={closeModal}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({\n  selected,\n  helpers,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                      setIsFormChanged(true);\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './GroupCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const GroupCard = ({ href, group }) => {\n  const { pathname } = useLocation();\n\n  const { name, src } = group;\n  return (\n    <Link\n      to={href}\n      className={classnames('group-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`group-card-of-${name}`}\n    >\n      <Avatar className=\"group-avatar\" alt={name} src={src}>\n        {group.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"group-name\">{name}</span>\n    </Link>\n  );\n};\n\nGroupCard.propTypes = {\n  href: string,\n  group: object\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { loadGroupThunk, removeGroupThunk } from '../../store/thunks';\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { GroupUsersContainer } from './containers/GroupUsers';\nimport { SubGroupsContainer } from './containers/SubGroups';\n\nimport './GroupView.local.scss';\n\nexport const GroupView = ({ group, removing, removeGroup }) => {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const deleteGroup = useCallback(() => {\n    removeGroup(group.name)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n        history.push('/system/mas-accounts/groups');\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group!'); // eslint-disable-line\n      });\n  }, [group]);\n\n  /* This needs to be written as a result check or 404 page for a group. */\n  if (!group) {\n    return <></>;\n  }\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title>{group.name}</Paper.Title>\n        </Paper.Header>\n\n        <Paper.Content scrollable>\n          <PrivilegesContainer />\n          <GroupUsersContainer />\n          <SubGroupsContainer />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"secondary\" disabled={removing} onClick={modalActions.open}>\n              Remove\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove group {group.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      deleteGroup();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupView.propTypes = {\n  group: object,\n  removing: bool,\n  removeGroup: func\n};\n\nexport const ConnectedGroupView = connect(\n  state => ({\n    group: state.groups.selected,\n    removing: state.groups.ops.remove.loading\n  }),\n  dispatch => ({\n    removeGroup: name => dispatch(removeGroupThunk(name))\n  })\n)(GroupView);\n\nexport const GroupLoader = ({ loadGroup, loading }) => {\n  const { groupName } = useParams();\n  useEffect(() => {\n    if (groupName) {\n      loadGroup(groupName);\n    }\n  }, [groupName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading Group <b>{groupName}</b>\n        </Loader>\n      ) : (\n        <ConnectedGroupView />\n      )}\n    </>\n  );\n};\n\nGroupLoader.propTypes = {\n  loadGroup: func,\n  loading: bool\n};\n\nexport const ConnectedGroupLoader = connect(\n  state => ({\n    loading: state.groups.ops.selected.loading\n  }),\n  dispatch => ({ loadGroup: name => dispatch(loadGroupThunk(name)) })\n)(GroupLoader);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { object, string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { Section } from 'shared/components/layout';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../store/thunks';\n\nexport const Privileges = ({ group, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Class privileges:</Section.Title>\n        <Section.Info>\n          Effective class privileges are calculated based on explicit grants and denies in this\n          group and in groups of which this group may be a member\n        </Section.Info>\n      </Section.Header>\n      <div className=\"user-privileges\">\n        <ul className=\"privileges-list\">\n          {privileges.map(entry => {\n            return (\n              <li key={entry.key} className=\"privileges-item\">\n                <Privilege group={group} privilege={entry} actions={actions} disabled={disabled} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nPrivileges.propTypes = {\n  group: object,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ group, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(group.name, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  group: object,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      disabled: state.groups.ops.privileges.loading,\n      privileges: mapPrivileges(group.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (group, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      ),\n    revoke: (group, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport './GroupUsers.local.scss';\nimport { EditGroupUsersContainer } from './EditGroupUsers';\n\nimport { removeUsersFromGroupThunk } from '../../../store/thunks';\n\nexport const GroupUsers = ({ group, removeUsersFromGroup }) => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeUsersFromGroup(group.name, selectedUser)\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [group, selectedUser]);\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Users in this group</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.users.map(user => (\n              <li className=\"card-item\" key={user}>\n                <AvatarCard\n                  label={user}\n                  avatar={{ initial: user.charAt(0) }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setSelectedUser(user);\n                        modalActions.open();\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"card-item\" key=\"add-user-to-groups\">\n              <EditGroupUsersContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {selectedUser} from group {group.name}?\n                    This could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupUsers.propTypes = {\n  group: object,\n  removeUsersFromGroup: func\n};\n\nexport const GroupUsersContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeUsersFromGroup: (group, user) => dispatch(removeUsersFromGroupThunk({ group, user }))\n  })\n)(GroupUsers);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { addUsersToGroupThunk } from '../../../store/thunks';\n\nimport './EditGroupUsers.local.scss';\n\nexport const EditGroupUsers = ({ group, addUsersToGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add user\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the users you want to add this group\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <UsersSelection\n                  group={group}\n                  closeModal={closeModal}\n                  onAdd={selections => {\n                    return addUsersToGroup(group.name, selections);\n                  }}\n                  setIsFormChanged={setIsFormChanged}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditGroupUsers.propTypes = {\n  group: object,\n  addUsersToGroup: func\n};\n\nexport const EditGroupUsersContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    addUsersToGroup: (group, users) => dispatch(addUsersToGroupThunk({ group, users }))\n  })\n)(EditGroupUsers);\n\nconst UsersSelection = ({ group, closeModal, onAdd, setIsFormChanged }) => {\n  const [state, setState] = useState({\n    selections: [],\n    usersFetched: false,\n    usersSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(u => !group.users.includes(u.name));\n  }, [state.all, state.showAll, group]);\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.users;\n            draft.usersFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.usersFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.usersFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>\n              {state.error ? capitalizeFirstLetter(state.error) : 'Could not retrieve user list!'}\n            </Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected users to group succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add users to group!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered.sort((a, b) =>\n              a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n            )}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? group.users.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      initial: entry.name.charAt(0)\n                    }}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show users that are members of this group\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              /**\n                NOTE: (to self)\n\n                This is lim 0 -> complete trash\n\n                Can't use redux for snippets of this operation.\n                The redux action that is required should only be to update final group entry at maximum.\n\n                Either all ops are in redux, or none are.\n               */\n              onAdd(state.selections).then(response => {\n                setState(prev =>\n                  produce(prev, draft => {\n                    draft.loading = false;\n                    draft.usersSubmitted = true;\n                    draft.result = response?.result;\n                    draft.error = response?.messages;\n                  })\n                );\n              });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nUsersSelection.propTypes = {\n  group: object,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiAccountGroup, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditSubGroupsContainer } from './EditSubGroups';\nimport { removeSubGroupsThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ group, removeSubGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeSubGroups(group.name, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group from group!'); // eslint-disable-line\n      });\n  }, [group, selectedGroup]);\n\n  const isOnlySelect = group?.member_of?.length === 1 && group?.member_of[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove group ${group.name} from group ${selectedGroup}?\n      This could affect the way the user will be able to interact with the app.`;\n\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Member of groups</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.member_of\n              .filter(g => g !== 'user')\n              .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n              .map(subgroup => (\n                <li className=\"card-item\" key={subgroup}>\n                  <AvatarCard\n                    label={subgroup}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    action={\n                      <SvgIcon\n                        onClick={e => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setSelectedGroup(subgroup);\n                          modalActions.open();\n                        }}\n                      >\n                        <path d={mdiDeleteCircleOutline} />\n                      </SvgIcon>\n                    }\n                    description={retrieveGroupDescription(subgroup)}\n                  />\n                </li>\n              ))}\n            <li className=\"card-item\" key=\"add-sub-group\">\n              <EditSubGroupsContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nSubGroups.propTypes = {\n  group: object,\n  removeSubGroups: func\n};\n\nexport const SubGroupsContainer = connect(\n  state => ({\n    group: state.groups.selected,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    removeSubGroups: (group, groups) => dispatch(removeSubGroupsThunk({ group, groups }))\n  })\n)(SubGroups);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport { PATCH_SELECTED_GROUP } from '../../../store/actions';\n\nimport './EditSubGroups.local.scss';\n\nexport const EditSubGroups = ({ group, updateGroup, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select which groups this one should be a part of\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupSelection\n                  group={group}\n                  updateGroup={updateGroup}\n                  closeModal={actions.close}\n                  setIsFormChanged={setIsFormChanged}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditSubGroups.propTypes = {\n  group: object,\n  updateGroup: func\n};\n\nexport const EditSubGroupsContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    updateGroup: group => dispatch(creators.action(PATCH_SELECTED_GROUP, group))\n  })\n)(EditSubGroups);\n\nconst GroupSelection = ({\n  group,\n  closeModal,\n  updateGroup,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    groupsFetched: false,\n    subgroupsSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => !group.member_of.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, group]);\n\n  const isDisabled = name => {\n    if (group.name === name) {\n      return true;\n    }\n\n    if (state.showAll) {\n      return group.member_of.includes(name);\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.groups;\n            draft.groupsFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.groupsFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (\n    state.groupsFetched &&\n    (!state.all.length || (state.result === 'fail' && !state.subgroupError))\n  ) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve groups list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected groups succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'fail') {\n    let errorMessage = 'Could not add selected groups!';\n\n    if (\n      state.error &&\n      state.error[0] &&\n      state.error[0].text &&\n      state.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = state.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>{errorMessage}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={isDisabled(entry.name)}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that this one already is a member of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group.name}/grant`, {\n                groups: state.selections\n              })\n                .then(({ data: resolved }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = resolved.result;\n                      draft.subgroupError = false;\n                    })\n                  );\n\n                  updateGroup(resolved.data.groups[0]);\n                })\n                .catch(error => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = 'fail';\n                      draft.error = error?.response?.data?.messages;\n                      draft.subgroupError = true;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupSelection.propTypes = {\n  group: object,\n  updateGroup: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Center } from 'shared/components';\nimport { Paper, Section, Column, Row } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { createGroupThunk } from '../../store/thunks';\n\nimport { SubGroups } from './components/SubGroups';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewGroup.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  groupname: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Group name is required'),\n  groups: Yup.array()\n});\n\nconst CreateNewGroup = ({ submitGroupValues, allGroups, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.groupname) ||\n      (values.groupname && values.groupname.substr(-1) === '.')\n    ) {\n      errors.groupname = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allGroups.map(group => {\n      if (exists) return;\n\n      if (group.name === values.groupname) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.groupname = 'A group with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /**\n     * Failed results are the ony onnes that are shown.\n     * For successfull creation, the user is navigated to the new entry\n     */\n    let errorMessage = 'Could not create new group';\n\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type=\"fail\">\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined, error: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        groupname: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitGroupValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.groupname));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid, submitForm }) => (\n        <Paper>\n          <Paper.Title>New Group</Paper.Title>\n          <Paper.Content>\n            <Form className=\"create-new-group-form\">\n              <Section>\n                <Section.Title>Group Details</Section.Title>\n                <Row>\n                  <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                    <Field name=\"groupname\">\n                      {({ field, meta }) => (\n                        <Input\n                          required\n                          {...field}\n                          label=\"Group Name\"\n                          placeholder=\"Group Name\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                  <Column style={{ maxWidth: '220px' }}>\n                    <Field name=\"description\">\n                      {({ field, meta }) => (\n                        <Input\n                          {...field}\n                          label=\"Short Description\"\n                          placeholder=\"Short Description\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                </Row>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <SubGroups\n                      selections={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Form>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button to=\"/system/mas-accounts/groups\" color=\"primary\">\n                Cancel\n              </Button>\n            </Paper.Footer.Left>\n\n            <Paper.Footer.Right>\n              <Button\n                type=\"submit\"\n                onClick={submitForm}\n                variant=\"contained\"\n                disabled={isSubmitting || !isValid}\n              >\n                Save\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewGroup.propTypes = { submitGroupValues: func };\n\nexport const CreateNewGroupPage = connect(\n  state => ({\n    allGroups: state.groups.all.filter(g => g.name !== 'user'),\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitGroupValues: values => dispatch(createGroupThunk(values))\n  })\n)(CreateNewGroup);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ selections, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {selections.map(group_name => (\n            <li className=\"card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = selections.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-group-to-groups\">\n            <GroupsSelection\n              selected={selections}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nSubGroups.propTypes = {\n  username: string,\n  selections: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    open: openModal,\n    close: closeModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"add-to-group-button\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <GroupAddIcon />\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the groups you want to add this user to\"\n                aria={aria}\n                onClose={actions.close}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupsList\n                  selected={selected}\n                  helpers={helpers}\n                  closeModal={actions.close}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal, retrieveGroupDescription }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ minWidth: '178px', maxWidth: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoGroupSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>Group Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a group from the list to view or edit its details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n    {/* <Paper.Footer /> */}\n  </Paper>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { mdiHexagonMultipleOutline } from '@mdi/js';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { changeStateThunk } from '../../../store/thunks';\n\nimport { ServerList } from '../ServerList/ServerList';\n\nimport './Dbms.local.scss';\n\nexport class DBMS extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"dbms-item\">\n        <header>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.protocol}-dbms`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiHexagonMultipleOutline} />\n              </SvgIcon>\n            </div>\n            <div\n              className={`value ${path.startsWith(data.path) ? 'active' : ''}`}\n              title={data.protocol}\n            >\n              {data.protocol}\n            </div>\n          </div>\n          <div\n            role=\"presentation\"\n            data-qa={`toggle-${data.protocol}-dbms`}\n            className={`status ${path.startsWith(data.path) ? 'active' : ''}`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <RemoveIcon /> : <AddIcon />}\n          </div>\n        </header>\n        <ul className=\"dbms-content\">{isExpanded && <ServerList servers={data.servers} />}</ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nDBMS.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDBMS = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(DBMS);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedServer } from './containers/Server/Server';\n\nexport class ServerList extends React.PureComponent {\n  render() {\n    const { servers } = this.props;\n\n    return servers.map(server => <ConnectedServer key={server.address} data={server} />);\n  }\n}\n\nServerList.propTypes = {\n  servers: array\n};\n\nexport default ServerList;\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { DatabaseList } from '../../../DatabaseList/DatabaseList';\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Server.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../../../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../../../../shared/components';\n\nexport class Server extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"server-item\">\n        <header className={this.isActive(path, data.path)}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.address}-server`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\">\n              <LightTooltip placement=\"top\" title={data.address}>\n                <span>{SystemExplorerFeatureUtil.splitAccountName(data.name) || data.address}</span>\n              </LightTooltip>\n            </div>\n          </div>\n          <div\n            className=\"status\"\n            role=\"presentation\"\n            data-qa={`toggle-${data.address}-server`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n          </div>\n        </header>\n        <ul className=\"server-content\">\n          {isExpanded && <DatabaseList databases={data.databases} />}\n        </ul>\n      </li>\n    );\n  }\n\n  isActive = (path, current) => {\n    const activePath = current.split('--');\n    const storedPath = path.split('--');\n\n    if (activePath[0] === storedPath[0] && activePath[1] === storedPath[1]) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nServer.propTypes = {\n  data: object,\n  storeState: object,\n  changeState: func\n};\n\nexport const ConnectedServer = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Server);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedDatabase } from './containers/Database/Database';\n\nexport class DatabaseList extends React.PureComponent {\n  render() {\n    const { databases } = this.props;\n\n    if (!databases) return null;\n\n    return databases.map(database => <ConnectedDatabase key={database.name} data={database} />);\n  }\n}\n\nDatabaseList.propTypes = {\n  databases: array\n};\n\nexport default DatabaseList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Database.local.scss';\n\nexport class Database extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.storeState.path === props.data.path) {\n      return { isExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n\n    const name = data.special.database;\n\n    return (\n      <li className=\"database-item\">\n        <header className={`${data.path === path ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${name}-database`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDatabase} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={name}>\n              {name}\n            </div>\n          </div>\n        </header>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nDatabase.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDatabase = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Database);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string, func, object } from 'prop-types';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport { changeStateThunk } from '../../store/thunks';\n\nimport './Breadcrumbs.local.scss';\n\nexport class BreadcrumbsTitle extends React.PureComponent {\n  render() {\n    const {\n      storeState: { path }\n    } = this.props;\n\n    return this.renderBreadcrumbs(path);\n  }\n\n  renderBreadcrumbs = path => {\n    const links = path\n      .split(this.props.separator)\n      .filter(e => e)\n      .reduce(\n        (routes, entry, index, list) => {\n          const previous = list.slice(0, index);\n          previous.push(entry);\n          const routePath = previous.join(this.props.separator);\n\n          const route = { label: entry, route: routePath };\n          routes.push(route);\n\n          return routes;\n        },\n        [{ label: 'DBMS', route: '' }]\n      );\n\n    return (\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        {links.map(link => {\n          return (\n            <div\n              data-qa={`breadcrumbs-${link.label}`}\n              className=\"path\"\n              role=\"presentation\"\n              key={link.route}\n              onClick={() => this.navigateTo(link.route)}\n            >\n              {link.label}\n            </div>\n          );\n        })}\n      </Breadcrumbs>\n    );\n  };\n\n  navigateTo = selectedLink => {\n    if (selectedLink === this.props.storeState.path) {\n      return;\n    }\n\n    this.props.changeState({ path: selectedLink });\n\n    this.setActiveLevel(selectedLink);\n  };\n\n  setActiveLevel = selectedLink => {\n    const linkElements = selectedLink.split(this.props.separator).filter(e => e);\n\n    switch (linkElements.length) {\n      case 0:\n        this.props.changeState({ level: 'all-dbms' });\n        break;\n      case 1:\n        this.props.changeState({ level: 'all-servers' });\n        break;\n      case 2:\n        this.props.changeState({ level: 'all-databases' });\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nBreadcrumbsTitle.propTypes = {\n  storeState: object,\n  changeState: func,\n  separator: string\n};\n\nBreadcrumbsTitle.defaultProps = {\n  separator: '--'\n};\n\nexport const ConnectedBreadcrumbsTitle = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(BreadcrumbsTitle);\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { ConnectedAllDbms } from '../../containers/AllDbms/AllDbms';\nimport { ConnectedAllServers } from '../../containers/AllServers/AllServers';\nimport { ConnectedAllDatabases } from '../../containers/AllDatabases/AllDatabases';\nimport { ConnectedWorkload } from '../../containers/Workload/Workload';\nimport { ConnectedLicense } from '../../containers/License/License';\nimport { ConnectedStorage } from '../../containers/Storage/Storage';\nimport { ConnectedObjects } from '../../containers/Objects/Objects';\nimport { ConnectedSessions } from '../../containers/Sessions/Sessions';\nimport { ConnectedTopSQLStatements } from '../../containers/TopSQLStatements/TopSQLStatements';\n\nexport class ContentSwitch extends React.PureComponent {\n  render() {\n    const { activePage } = this.props;\n\n    return this.renderPage(activePage);\n  }\n\n  renderPage = activePage => {\n    switch (activePage) {\n      case 'all-dbms':\n        return <ConnectedAllDbms />;\n      case 'all-servers':\n        return <ConnectedAllServers />;\n      case 'all-databases':\n        return <ConnectedAllDatabases />;\n      case 'workload':\n        return <ConnectedWorkload />;\n      case 'license':\n        return <ConnectedLicense />;\n      case 'storage':\n        return <ConnectedStorage />;\n      case 'objects':\n        return <ConnectedObjects />;\n      case 'sessions':\n        return <ConnectedSessions />;\n      case 'topsql':\n        return <ConnectedTopSQLStatements />;\n      default:\n        return <></>;\n    }\n  };\n}\n\nContentSwitch.propTypes = {\n  activePage: string\n};\n\nexport default ContentSwitch;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHexagonMultipleOutline, mdiChartTimelineVariant } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { getDBMSStatus, getDBMSStatusInfo } from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nexport class AllDbms extends React.PureComponent {\n  render() {\n    const { all, retrieveDBMSStatus, retrieveDBMSStatusInfo } = this.props;\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {all.map(dbms => (\n            <ActionCard\n              key={dbms.name}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n              }\n              status={dbms.name !== 'OTHER' ? retrieveDBMSStatus(dbms) : ''}\n              statusInfo={retrieveDBMSStatusInfo(dbms)}\n              type=\"dbms\"\n              label={dbms.name}\n              onClick={() => this.setPath(dbms.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: dbms.path, level: 'workload' })\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n  };\n}\n\nAllDbms.propTypes = {\n  all: array,\n  changeState: func\n};\n\nexport const ConnectedAllDbms = connect(\n  state => ({\n    all: state.explorer?.structured?.dbms || [],\n    allDbms: state.explorer.accounts,\n    retrieveDBMSStatus: dbms => getDBMSStatus(dbms, state.explorer.dbStatus),\n    retrieveDBMSStatusInfo: dbms => getDBMSStatusInfo(dbms, state.explorer.dbStatus)\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDbms);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiChartTimelineVariant, mdiPercent } from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshServerDbsStatusThunk } from '../../store/thunks';\nimport {\n  getServerStatus,\n  getServerStatusInfo,\n  getEntityPendingStatus\n} from '../../store/selectors';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { ServerSettings } from '../Settings/ServerSettings';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../shared/components';\n\nconst serverLabel = (serverFullName, address) => {\n  if (serverFullName) {\n    return (\n      <LightTooltip placement=\"bottom-end\" title={address}>\n        <span>{SystemExplorerFeatureUtil.splitAccountName(serverFullName)}</span>\n      </LightTooltip>\n    );\n  }\n\n  return <span>{address}</span>;\n};\n\nexport class AllServers extends React.PureComponent {\n  render() {\n    const {\n      all,\n      serversUsage,\n      retrieveServerStatus,\n      userDetails,\n      retrieveServerStatusInfo,\n      reloadAccounts\n    } = this.props;\n    const servers = all;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {servers.map((server, index) => (\n            <ActionCard\n              key={`${server.name}-${index}`}\n              settings={<ServerSettings server={server} disabled={isDisabled} reloadAccounts={reloadAccounts} hasDatabases={server.databases.length > 0} />}\n              status={server.databases.length > 0 ? retrieveServerStatus(server) : ''}\n              statusInfo={retrieveServerStatusInfo(server)}\n              type=\"server\"\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiDns} />\n                </SvgIcon>\n              }\n              label={serverLabel(server.name, server.address)}\n              onClick={() => this.setPath(server.path)}\n              options={this.renderOptions(server)}\n              readOnlyOptions={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiPercent} />\n                    </SvgIcon>\n                  ),\n                  label: 'CPU Load',\n                  fillable: true,\n                  percentage:\n                    serversUsage.find(sv => sv.address === server.address)?.usage || undefined\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n  };\n\n  renderOptions = server => {\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: server.path, level: 'workload' })\n      }\n    ];\n\n    if (server.databases.length > 0) {\n      options.push({\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(server).label,\n        disabled: this.props.retrievePendingStatus(server).loading,\n        onClick: () => this.refreshServerDBs(server)\n      });\n    }\n\n    return options;\n  };\n\n  refreshServerDBs = server => {\n    if (!this.props.retrievePendingStatus(server).loading) {\n      this.props.refreshServerDbsStatus(server);\n    }\n  };\n}\n\nAllServers.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllServers = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const dbms = structured.dbms.find(entry => entry.protocol === path);\n\n    return {\n      all: dbms?.servers || [],\n      allDbms: state.explorer.accounts,\n      storeState: state.explorer.state,\n      serversUsage: state.explorer.serversUsage?.servers || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveServerStatus: server => getServerStatus(server, state.explorer.dbStatus),\n      retrieveServerStatusInfo: server => getServerStatusInfo(server, state.explorer.dbStatus),\n      retrievePendingStatus: server =>\n        getEntityPendingStatus(server, state.explorer.dbStatus, 'server')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshServerDbsStatus: server => dispatch(refreshServerDbsStatusThunk(server)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllServers);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { ServerForm } from '../Forms/ServerForm';\nimport { mdiSettings, mdiDns, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ConfirmationModal, ErrorModal } from '../../../shared/components/overlays';\nimport { deleteAccount } from '../../../shared/api/accounts';\n\nexport const ServerSettings = ({ server, disabled, reloadAccounts, hasDatabases }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteServerOpen, setDeleteServerOpen] = useState(false);\n  const [deleteServerErrorOpen, setDeleteServerErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteServerModalActions = {\n    open: () => {\n      setDeleteServerOpen(true);\n    },\n    close: () => {\n      setDeleteServerOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(server.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteServerErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteServerErrorModalActions = {\n    open: () => {\n      setDeleteServerErrorOpen(true);\n    },\n    close: () => {\n      setDeleteServerErrorOpen(false);\n    }\n  };\n\n  if (disabled) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n      {!hasDatabases && (\n        <IconButton onClick={deleteServerModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditServerContainer server={server} />\n      </Modal>\n\n      <ConfirmationModal open={deleteServerOpen} actions={deleteServerModalActions} message=\"Are you sure you want to delete server?\" />\n      <ErrorModal open={deleteServerErrorOpen} actions={deleteServerErrorModalActions} message=\"Failed to delete Server. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditServer = ({ server, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    fetchProtocols().then(resp => {\n      if (resp.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: resp.protocols || []\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Edit Server\"\n        desc=\"Edit the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <ServerForm\n            server={server}\n            protocols={state.protocols}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditServerContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditServer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiDatabase,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { DatabaseSettings } from '../Settings/DatabaseSettings';\nimport {\n  getBackup,\n  getDBStatus,\n  getDBStatusInfo,\n  getEntityPendingStatus,\n  retrieveServerEntry\n} from '../../store/selectors';\nimport { TopSqlStatementsUtil } from '../TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class AllDatabases extends React.PureComponent {\n  render() {\n    const {\n      databases,\n      retrieveDbBackup,\n      retrieveDbStatus,\n      retrieveDbStatusInfo,\n      userDetails,\n      reloadAccounts\n    } = this.props;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <>\n        <Paper.Content>\n          <CardsLayout>\n            {databases.map(database => (\n              <ActionCard\n                key={database.name}\n                lastBackup={retrieveDbBackup(database)}\n                settings={<DatabaseSettings database={database} disabled={isDisabled} reloadAccounts={reloadAccounts} />}\n                status={retrieveDbStatus(database)}\n                statusInfo={retrieveDbStatusInfo(database)}\n                type=\"database\"\n                icon={\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                }\n                label={database.special.database}\n                onClick={() => this.setPath(database.path)}\n                options={this.renderOptions(database)}\n              />\n            ))}\n          </CardsLayout>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n\n  refreshDBStatus = db => {\n    if (!this.props.retrievePendingStatus(db).loading) {\n      this.props.refreshDatabaseStatus(db);\n    }\n  };\n\n  renderOptions = database => {\n    const [protocol] = database.path.split('--');\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: database.path, level: 'workload' })\n      },\n      {\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(database).label,\n        disabled: this.props.retrievePendingStatus(database).loading,\n        onClick: () => this.refreshDBStatus(database)\n      }\n    ];\n\n    if (SystemExplorerFeatureUtil.isSessionsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiCheckboxMultipleBlankOutline} />\n          </SvgIcon>\n        ),\n        label: 'Sessions',\n        onClick: () => this.props.changeState({ path: database.path, level: 'sessions' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isObjectsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiShape} />\n          </SvgIcon>\n        ),\n        label: 'Objects',\n        onClick: () => this.props.changeState({ path: database.path, level: 'objects' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isStorageAllowed(protocol)) {\n      options.splice(1, 0, {\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiHexagonSlice2} />\n            </SvgIcon>\n          ),\n          label: 'Storage',\n          onClick: () => this.props.changeState({ path: database.path, level: 'storage' })\n        }\n      );\n    }\n\n    if (TopSqlStatementsUtil.isAllowedProtocol(protocol)) {\n      options.splice(2, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiFormatAlignTop} />\n          </SvgIcon>\n        ),\n        label: 'Top SQL statements',\n        onClick: () => this.props.changeState({ path: database.path, level: 'topsql' })\n      });\n\n      options.splice(options.length - 1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        ),\n        label: 'License reporting',\n        onClick: () => this.props.changeState({ path: database.path, level: 'license' })\n      });\n    }\n\n    return options;\n  };\n}\n\nAllDatabases.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllDatabases = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const [protocol, address] = path.split('--');\n    const server = retrieveServerEntry({ protocol, address }, structured);\n    const backups = state.explorer.dbLastBackup;\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      databases: (server && server.databases) || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveDbBackup: database => getBackup(database, backups),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database =>\n        getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllDatabases);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Overflow, Paper } from 'shared/components/layout';\nimport { Center, WorkloadGraph } from 'shared/components';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { JobResults } from 'shared/components/JobResults';\n\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\n\nimport './Workload.local.scss';\n\nexport class Workload extends React.PureComponent {\n  componentDidMount() {\n    this.getJobsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.storeState.path !== prevProps.storeState.path ||\n      this.props.globalFilters !== prevProps.globalFilters\n    ) {\n      this.getJobsData();\n    }\n  }\n\n  render() {\n    const {\n      jobs,\n      storeState: { path, level }\n    } = this.props;\n    const pageLevel = path.split('--').filter(e => e).length;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          {pageLevel === 3 && (\n            <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n          )}\n        </Paper.Header>\n        <Paper.Content>\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader>Loading jobs</Loader>\n            </Center>\n          ) : (\n            <>\n              {jobs.get('total_count') > 0 ? (\n                <>\n                  <div className=\"container\">\n                    <div className=\"graph-container\">\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                        isSingleDay={\n                          moment\n                            .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD') ===\n                          moment\n                            .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD')\n                        }\n                        setSingleDay={this.props.setGlobalFilters}\n                      />\n                    </div>\n                    <div className=\"jobs-container\">\n                      <Overflow>\n                        <JobResults jobs={jobs.get('content')} />\n                      </Overflow>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Center>Job list is empty</Center>\n              )}\n            </>\n          )}\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getJobsData() {\n    const {\n      storeState: { path }\n    } = this.props;\n    const levelFilters = path.split('--').filter(e => e);\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      protocol_filter: levelFilters[0],\n      shell_host_address_filter: levelFilters[1],\n      database_name_filter: levelFilters[2]\n    });\n  }\n}\n\nWorkload.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  jobs: object,\n  getJobs: func,\n  changeState: func\n};\n\nexport const ConnectedWorkload = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    jobs: jobsSelector(state)\n  }),\n  dispatch => ({\n    getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(Workload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, object } from 'prop-types';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { ConnectedReport } from './Report/Report';\nimport { getFullPath } from '../../store/selectors';\n\nimport './License.local.scss';\n\nexport class License extends React.PureComponent {\n  render() {\n    const {\n      storeState: { level, path },\n    } = this.props;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          <ConnectedReport />\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n}\n\nLicense.propTypes = {\n  storeState: object,\n  changeState: func,\n};\n\nexport const ConnectedLicense = connect(\n  state => ({\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state),\n    isLoading: state.explorer.flags.license.loading\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(License);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, func, object } from 'prop-types';\nimport classnames from 'classnames';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { getLicenseReportThunk } from '../../../store/thunks';\nimport { FeaturesUsage } from '../../../components/LicenseReporting/FeaturesUsage/FeaturesUsage';\nimport { UnusedFeatures } from '../../../components/LicenseReporting/UnusedFeatures/UnusedFeatures';\nimport { getFullPath } from '../../../store/selectors';\nimport { FeaturesTable } from '../../../components/LicenseReporting/FeaturesTable/FeaturesTable';\n\nimport './Report.local.scss';\n\nexport class Report extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolled: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getLicenseReport(this.props.fullPath);\n  }\n\n  render() {\n    const { scrolled } = this.state;\n    const { isLoading, reportData, reportTwo } = this.props;\n    return isLoading ? (\n      <Center>\n        <Loader>Loading report details</Loader>\n      </Center>\n    ) : (\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled\n        })}\n      >\n        <div className=\"container\" onWheel={event => this.onWheel(event)}>\n          {reportData && Object.keys(reportData.FEATURES).length > 0 && (\n            <FeaturesTable licenseFeatures={reportData.FEATURES} />\n          )}\n          <FeaturesUsage reportOne={reportData} reportTwo={reportTwo} />\n          <UnusedFeatures reportOne={reportData} reportTwo={reportTwo} />\n        </div>\n      </div>\n    );\n  }\n\n  onWheel = event => {\n    if (event.currentTarget.scrollTop) {\n      if (!this.state.scrolled) {\n        this.setState({ scrolled: true });\n      }\n    } else if (this.state.scrolled) {\n      this.setState({ scrolled: false });\n    }\n\n    scroller(event);\n  };\n}\n\nReport.propTypes = {\n  getLicenseReport: func,\n  isLoading: bool,\n  reportData: object,\n};\n\nexport const ConnectedReport = connect((state) => {\n  const reportData = state.explorer.reports.data;\n  return {\n    isLoading: state.explorer.flags.reports.loading,\n    fullPath: getFullPath(state),\n    reportData\n  };\n}, dispatch => ({\n  getLicenseReport: fullPath => dispatch(getLicenseReportThunk(fullPath))\n}))(Report);\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { object } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './FeaturesUsage.local.scss';\n\nexport class FeaturesUsage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n    return (\n      <div className=\"features-usage-container\">\n        <header>\n          <h1>License Features Usage</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.USED ?? {});\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          <div className=\"value single\">{feature[1].USAGES}</div>\n          <div className=\"label\">{feature[0]}</div>\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const comparableFeatures = {};\n    if (reportOne.USED && reportOne && reportOne.USED) {\n      const reportOneEntries = Object.entries(reportOne.USED);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        comparableFeatures[feature[0]].usage = [parseInt(feature[1].USAGES, 10)];\n        comparableFeatures[feature[0]].usage[1] = 0;\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportTwo.USED);\n\n      reportTwoEntries.map(feature => {\n        if (feature[0] in comparableFeatures) {\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        } else {\n          comparableFeatures[feature[0]] = {};\n          comparableFeatures[feature[0]].usage = [0];\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        }\n\n        return null;\n      });\n    }\n\n    const features = Object.entries(comparableFeatures);\n    return features.map(feature => {\n      return (\n        <LightTooltip\n          key={feature[0]}\n          placement=\"top\"\n          title={\n            <>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportOne.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[0]}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportTwo.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[1]}</div>\n              </div>\n            </>\n          }\n        >\n          <div className=\"feature\">\n            {this.getFeatureValue(\n              comparableFeatures[feature[0]].usage[0],\n              comparableFeatures[feature[0]].usage[1]\n            )}\n            <div className=\"label\">{feature[0]}</div>\n          </div>\n        </LightTooltip>\n      );\n    });\n  };\n\n  getFeatureValue = (rep1, rep2) => {\n    let valueNode = <div className=\"value lower\">{rep1 - rep2}</div>;\n\n    if (rep1 === rep2) {\n      valueNode = <div className=\"value equal\">=</div>;\n    } else if (rep2 > rep1) {\n      valueNode = <div className=\"value higher\">{rep2 - rep1}</div>;\n    }\n\n    return valueNode;\n  };\n}\n\nFeaturesUsage.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesUsage;\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n\n    '& .row': {\n      display: 'flex',\n\n      '& .value': {\n        paddingLeft: '15px',\n        marginLeft: 'auto',\n        fontWeight: '600'\n      }\n    }\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\n\nimport './UnusedFeatures.local.scss';\n\nexport class UnusedFeatures extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"unused-features-container\">\n        <header>\n          <h1>Unused features</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.UNUSED ?? {});\n\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          {feature[0]}\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const features = Object.keys(reportTwo.UNUSED);\n\n    const comparableFeatures = features.filter(feature => {\n      return reportOne.UNUSED[feature] !== undefined;\n    });\n\n    return comparableFeatures.map(feature => {\n      return (\n        <div key={feature} className=\"feature\">\n          {feature}\n        </div>\n      );\n    });\n  };\n}\n\nUnusedFeatures.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default UnusedFeatures;\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheckboxMarkedCircle, mdiCloseCircle } from '@mdi/js';\nimport moment from 'moment';\n\nimport './FeaturesTable.scss';\n\nconst columns = [\n  { label: 'Feature Name', sortKey: 'NAME' },\n  { label: 'Version' },\n  { label: 'Usages', sortKey: 'USAGES' },\n  { label: 'First Usage' },\n  { label: 'Last Usage' },\n  { label: 'Status', sortKey: 'STATUS' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"license-feature-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"license-feature-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index,) => (\n  <Table.Row hover key={`${row.NAME}_${index}`} className=\"license-feature-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.NAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.VERSION}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.DETECTED_USAGES}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.FIRST_USAGE_DATE).isValid() ? moment(row.FIRST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.LAST_USAGE_DATE).isValid() ? moment(row.LAST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        <div className=\"status-container\">\n          {row.CURRENTLY_USED === 'TRUE' ? (\n            <div className=\"status available\">\n              <SvgIcon>\n                <Icon path={mdiCheckboxMarkedCircle} />\n              </SvgIcon>\n              Available\n            </div>\n          ) : (\n            <div className=\"status unavailable\">\n              <SvgIcon>\n                <Icon path={mdiCloseCircle} />\n              </SvgIcon>\n              Unavailable\n            </div>\n          )}\n        </div>\n      </span>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ licenseFeatures, tableProps }) => {\n  return <Table {...tableProps}>{licenseFeatures.map((row, index) => rowRenderer(row, index))}</Table>;\n};\n\nexport class FeaturesTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'NAME', order: 'asc' },\n    };\n  }\n\n  render() {\n    const { licenseFeatures } = this.props;\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sorted = this.sortLicenseFeatures(licenseFeatures);\n\n    return (\n      <TableRenderer\n        licenseFeatures={sorted}\n        tableProps={tableProps}\n      />\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortLicenseFeatures = (licenseFeatures) => {\n    const { sortBehavior } = this.state;\n    const key = sortBehavior.sortKey;\n    const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n    switch (key) {\n      case 'NAME': {\n        return this.sortByName(licenseFeatures, orderMultiplier);\n      }\n      case 'USAGES': {\n        return this.sortByUsages(licenseFeatures, orderMultiplier);\n      }\n      case 'STATUS': {\n        return this.sortByStatus(licenseFeatures, orderMultiplier);\n      }\n      default:\n        return licenseFeatures;\n    }\n  };\n\n  sortByName = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.NAME.localeCompare(o2.NAME)) * order;\n    });\n  };\n\n  sortByUsages = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.DETECTED_USAGES - o2.DETECTED_USAGES) * order;\n    });\n  };\n\n  sortByStatus = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      const firstUsage = o1.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      const secondUsage = o2.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      return (firstUsage - secondUsage) * order;\n    });\n  };\n}\n\nFeaturesTable.propTypes = {\n  licenseFeatures: PropTypes.array,\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  changeStateThunk,\n  loadStorageDetailsThunk,\n  loadStoragePointsThunk,\n  setStorageItemThunk\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport { getFormattedStorage, getFullPath, getStorageDetailsData, haveStorageData } from '../../store/selectors';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { ConnectedMssqlStorage } from './MSSQL/MssqlStorage';\n\nconst Storage = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getStoragePoints,\n  getStorageDetails,\n  storagePoints,\n  storageDetails,\n  selectedItem,\n  setStorageItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  const isMssql = protocol === DbmsType.MSSQL;\n\n  useEffect(() => {\n    if (!storedEntries && !isMssql) {\n      getStoragePoints({ fullPath });\n      getStorageDetails({\n        selectedItem,\n        fullPath\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        {isMssql ? (\n          <ConnectedMssqlStorage />\n        ) : (\n          <DbObjects\n            loadingFlags={loadingFlags}\n            type={level}\n            data={storageDetails}\n            list={storagePoints}\n            selectedItem={selectedItem}\n            setItem={setStorageItem}\n            dbName={dbName}\n          />\n        )}\n      </Paper.Content>\n    </>\n  );\n};\n\nStorage.propTypes = {\n  storeState: PropTypes.object,\n  storagePoints: PropTypes.array,\n  storageDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setStorageItem: PropTypes.func,\n  selectedItem: PropTypes.string,\n  getStoragePoints: PropTypes.func\n};\n\nexport const ConnectedStorage = connect(\n  state => ({\n    storeState: state.explorer.state,\n    storagePoints: getFormattedStorage(state),\n    selectedItem: state.explorer.storage.selected,\n    loadingFlags: state.explorer.flags.storage,\n    storedEntries: haveStorageData(state),\n    storageDetails: getStorageDetailsData(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setStorageItem: path => dispatch(setStorageItemThunk(path)),\n    getStorageDetails: filters => dispatch(loadStorageDetailsThunk(filters)),\n    getStoragePoints: filters => dispatch(loadStoragePointsThunk(filters))\n  })\n)(Storage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getFullPath, getMssqlStorageDetails } from '../../../store/selectors';\nimport { loadMssqlStorageDataThunk } from '../../../store/thunks';\nimport PropTypes from 'prop-types';\nimport { LOAD_MSSQL_DISK_IO, LOAD_MSSQL_FILE_STORAGE, LOAD_MSSQL_STORAGE_USED } from '../../../store/actions';\nimport { Center, Table, LightTooltip } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\n\nimport './MssqlStorage.local.scss';\nimport { formatMemorySizeGb } from '../../../../license-collection/utils/formatMemoryZiseGb';\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"storage-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"storage-cell\">{name}</span>;\n};\n\nconst diskIOColumns = [\n  { label: 'Database Name' },\n  { label: 'Physical Name' },\n  { label: 'ID' },\n  { label: 'IO Stall' },\n  { label: 'IO Stall Queued Read' },\n  { label: 'IO Stall Queued Write' },\n  { label: 'IO Stall Read' },\n  { label: 'IO Stall Write' },\n  { label: 'Number of Bytes Read' },\n  { label: 'Number of Bytes Written' },\n  { label: 'Number of Reads' },\n  { label: 'Number of Writes' },\n  { label: 'Sample' },\n  { label: 'Size On Disk (GB)' },\n  { label: 'Type Desc' },\n];\n\nconst diskIOTableProps = { columns: diskIOColumns, sortBehavior: { sortKey: 'mockedColumn', order: 'desc' }, changeSort: () => {} };\n\nconst diskIORowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"storage-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_name} />\n    </Table.Cell>\n    <Table.Cell>{row.dbid}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_queued_read_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_queued_write_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_read_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_write_ms)}</Table.Cell>\n    <Table.Cell>{row.num_of_bytes_read}</Table.Cell>\n    <Table.Cell>{row.num_of_bytes_written}</Table.Cell>\n    <Table.Cell>{row.num_of_reads}</Table.Cell>\n    <Table.Cell>{row.num_of_writes}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.sample_ms)}</Table.Cell>\n    <Table.Cell>{formatMemorySizeGb(row.size_on_disk_bytes)}</Table.Cell>\n    <Table.Cell>{row.type_desc}</Table.Cell>\n  </Table.Row>\n);\n\nconst fileStorageColumns = [\n  { label: 'Name' },\n  { label: 'Physical Name' },\n  { label: 'Data Space ID' },\n  { label: 'File ID' },\n  { label: 'Growth' },\n  { label: 'Size' },\n  { label: 'Max Size' },\n  { label: 'State' },\n  { label: 'State Desc' },\n  { label: 'Type' },\n  { label: 'Type Desc' },\n];\n\nconst fileStorageTableProps = { columns: fileStorageColumns, sortBehavior: { sortKey: 'mockedColumn', order: 'desc' }, changeSort: () => {} };\n\nconst fileStorageRowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.name}_${index}`} className=\"storage-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.name} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_name} />\n    </Table.Cell>\n    <Table.Cell>{row.data_space_id}</Table.Cell>\n    <Table.Cell>{row.file_id}</Table.Cell>\n    <Table.Cell>{row.growth}</Table.Cell>\n    <Table.Cell>{row.size}</Table.Cell>\n    <Table.Cell>{row.max_size}</Table.Cell>\n    <Table.Cell>{row.state}</Table.Cell>\n    <Table.Cell>{row.state_desc}</Table.Cell>\n    <Table.Cell>{row.type}</Table.Cell>\n    <Table.Cell>{row.type_desc}</Table.Cell>\n  </Table.Row>\n);\n\nconst PieChartColors = [\n  '#176BA0', '#A6EAA5', '#E8F9F5', '#1AC9E6', '#6DF0D2',\n  '#7D3AC1', '#EA7369', '#1DE4BD', '#EF7E32', '#F0A58F',\n  '#C02323', '#DB4CB2', '#4C6BDB', '#F1DE2C', '#399137'\n];\n\nconst PieChartTooltip = (entry) => {\n  const { payload } = entry;\n  if (!payload.length) {\n    return '';\n  }\n  const { label, value } = payload[0].payload;\n  return (\n    <span className=\"pie-chart-tooltip\">{label}: {formatMemorySizeGb(value)} GB</span>\n  );\n};\n\nclass MssqlStorage extends React.PureComponent {\n  componentDidMount() {\n    const { fullPath, getMssqlStorageData } = this.props;\n    // timeouts needed for BE to be ready to process next request\n    getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.DiskFileIO', storageKey: LOAD_MSSQL_DISK_IO });\n    setTimeout(() => {\n      getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.StorageUsed', storageKey: LOAD_MSSQL_STORAGE_USED });\n    }, 1000);\n    setTimeout(() => {\n      getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.file_storage', storageKey: LOAD_MSSQL_FILE_STORAGE });\n    }, 2000);\n  }\n\n  render() {\n    const { storageData, loadingFlags } = this.props;\n    const dataLoading = loadingFlags.loadingDiskIO || loadingFlags.loadingStorageUsed || loadingFlags.loadingFileStorage;\n    const usedStorageInfo = storageData.storageUsed && storageData.storageUsed.length ? storageData.storageUsed[0] : null;\n    const hasFileStorageInfo = storageData.fileStorage && storageData.fileStorage.length;\n    const hasDiskIOInfo = storageData.diskIO && storageData.diskIO.length;\n    const hasAnyData = !!usedStorageInfo || hasDiskIOInfo || hasFileStorageInfo;\n    let storagePieData = [];\n\n    if (dataLoading) {\n      return (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      );\n    }\n\n    if (!hasAnyData) {\n      return (\n        <Center>\n          No Storage Data Available.\n        </Center>\n      );\n    }\n\n    if (hasDiskIOInfo) {\n      storagePieData = this.prepareStorageGraphData(storageData);\n    }\n\n    return (\n      <div className=\"mssql-storage-container\">\n        {usedStorageInfo ? (\n          <div className=\"mssql-storage-used\">\n            <div className=\"mssql-storage-used-label\">Database Size:</div>\n            <div className=\"mssql-storage-used-value\">{usedStorageInfo.database_size}</div>\n            <div className=\"mssql-storage-used-label\">Unallocated Space:</div>\n            <div className=\"mssql-storage-used-value\">{usedStorageInfo.unallocated_space}</div>\n          </div>\n        ) : ''}\n        {hasFileStorageInfo ? (\n          <div>\n            <h3 className=\"mssql-table-title\">File Storage</h3>\n            <Table {...fileStorageTableProps} className=\"table\">\n              {storageData.fileStorage.map((db, index) => fileStorageRowRenderer(db, index))}\n            </Table>\n          </div>\n        ) : '' }\n        {hasDiskIOInfo ? (\n          <>\n            <h3 className=\"mssql-table-title\">Disk IO</h3>\n            <Table {...diskIOTableProps} className=\"table\">\n              {storageData.diskIO.map((db, index) => diskIORowRenderer(db, index))}\n            </Table>\n            {storagePieData.length && (\n              <ResponsiveContainer height={400}>\n                <PieChart>\n                  <Pie data={storagePieData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={0} outerRadius={150}>\n                    {storagePieData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={PieChartColors[index]} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={PieChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            )}\n          </>\n        ) : ''}\n      </div>\n    );\n  }\n\n  prepareStorageGraphData = (storageData) => {\n    const logsStorageSize = storageData.diskIO\n      .filter((item) => item.type_desc === 'LOG')\n      .map((item) => item.size_on_disk_bytes)\n      .reduce((sum, item) => {\n        sum += +item;\n        return sum;\n      }, 0);\n\n    return storageData.diskIO\n      .filter((item) => item.type_desc === 'ROWS')\n      .map((item) => {\n        return {\n          label: item.Database_name,\n          value: item.size_on_disk_bytes\n        };\n      }).concat([{\n        label: 'All logs',\n        value: logsStorageSize\n      }]);\n  }\n}\n\nMssqlStorage.propTypes = {\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  getMssqlStorageData: PropTypes.func\n};\n\nexport const ConnectedMssqlStorage = connect(\n  state => ({\n    loadingFlags: state.explorer.flags.storage,\n    fullPath: getFullPath(state),\n    storageData: getMssqlStorageDetails(state)\n  }),\n  dispatch => ({\n    getMssqlStorageData: filters => dispatch(loadMssqlStorageDataThunk(filters))\n  })\n)(MssqlStorage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, objectsLoaderResolver, setSelectedObjectThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport {\n  getFullPath,\n  getInvalidObjects,\n  getStructuredObjects,\n  haveObjectsData,\n  objectsSelectorResolver\n} from '../../store/selectors';\n\nconst Objects = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getObjects,\n  objectsData,\n  invalidObjects,\n  objectDetails,\n  selectedItem,\n  setObjectsItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  useEffect(() => {\n    if (!storedEntries) {\n      getObjects({\n        fullPath,\n        protocol\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          invalidObjects={invalidObjects}\n          data={objectDetails}\n          list={objectsData}\n          selectedItem={selectedItem}\n          setItem={setObjectsItem}\n          dbName={dbName}\n          protocol={protocol}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nObjects.propTypes = {\n  storeState: PropTypes.object,\n  objectsData: PropTypes.array,\n  objectDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setObjectsItem: PropTypes.func,\n  selectedItem: PropTypes.object,\n  getObjects: PropTypes.func\n};\n\nexport const ConnectedObjects = connect(\n  state => {\n    const { state: { path } } = state.explorer;\n    const [protocol] = path.split('--');\n\n    return {\n      storeState: state.explorer.state,\n      objectsData: getStructuredObjects(state),\n      selectedItem: {\n        owner: state.explorer.objects.selectedOwner,\n        object: state.explorer.objects.selectedObject\n      },\n      loadingFlags: state.explorer.flags.objects,\n      objectDetails: objectsSelectorResolver(state, protocol),\n      invalidObjects: getInvalidObjects(state),\n      fullPath: getFullPath(state),\n      storedEntries: haveObjectsData(state)\n    };\n  },\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setObjectsItem: object => dispatch(setSelectedObjectThunk(object)),\n    getObjects: filters => dispatch(objectsLoaderResolver(filters))\n  })\n)(Objects);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  changeStateThunk,\n  disableSessionsLoadingFlag,\n  enableSessionsLoadingFlag,\n  sessionsLoaderResolver\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { Button } from 'shared/components/controls';\nimport { FormattedMessage } from 'react-intl';\nimport { getFullPath, getSortedSessions } from '../../store/selectors';\nimport { CommonSessionsTable } from './tables/CommonSessionsTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlSessionsTable } from './tables/MssqlSessionsTable';\nimport './Sessions.local.scss';\n\nexport class Sessions extends React.PureComponent {\n  componentDidMount() {\n    this.getSessionsData();\n  }\n\n  render() {\n    const {\n      level,\n      sessions,\n      isLoading,\n      changeTab,\n      fullPath,\n      enableLoadingFlag,\n      disableLoadingFlag,\n      storeState: { path }\n    } = this.props;\n\n    const [protocol] = path.split('--');\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol !== DbmsType.MSSQL && (\n            <CommonSessionsTable isLoading={isLoading} sessions={sessions} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlSessionsTable\n              isLoading={isLoading}\n              sessions={sessions}\n              dbms={fullPath}\n              refreshSessions={this.getSessionsData}\n              enableLoadingFlag={enableLoadingFlag}\n              disableLoadingFlag={disableLoadingFlag}\n            />\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getSessionsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getSessionsData = () => {\n    const {\n      fullPath,\n      storeState: { path }\n    } = this.props;\n    const [protocol] = path.split('--');\n\n    this.props.getSessions({\n      fullPath,\n      protocol,\n      page_size: 2147483645\n    });\n  };\n}\n\nSessions.propTypes = {\n  level: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  fullPath: PropTypes.string.isRequired,\n  changeTab: PropTypes.func\n};\n\nexport const ConnectedSessions = connect(\n  state => ({\n    sessions: getSortedSessions(state),\n    level: state.explorer.state.level,\n    isLoading: state.explorer.flags.sessions.loading,\n    fullPath: getFullPath(state),\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getSessions: filters => dispatch(sessionsLoaderResolver(filters)),\n    enableLoadingFlag: () => dispatch(enableSessionsLoadingFlag()),\n    disableLoadingFlag: () => dispatch(disableSessionsLoadingFlag())\n  })\n)(Sessions);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../Sessions.local.scss';\n\nconst columns = [\n  { label: 'Serial #' },\n  { label: 'Username' },\n  { label: 'Status' },\n  { label: 'Machine' },\n  { label: 'SID' },\n  { label: 'Logon time', sortKey: 'LOGON_TIME' },\n  { label: 'Program' },\n  { label: 'Type' }\n  // { label: '' } -> disabled view details button for now...\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row['SERIAL#']} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USERNAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATUS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MACHINE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.LOGON_TIME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PROGRAM} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.TYPE} />\n    </Table.Cell>\n    {/* <Table.Cell padding=\"none\" className=\"view-details\">\n      <LightTooltip placement=\"bottom\" title={<span>View Details</span>}>\n        <SvgIcon>\n          <Icon path={mdiViewCompact} />\n        </SvgIcon>\n      </LightTooltip>\n    </Table.Cell> */}\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map(rowRenderer)}</Table>;\n};\n\nexport class CommonSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'LOGON_TIME', order: 'asc' }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          noDataMessage=\"No Sessions Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.LOGON_TIME - o2.LOGON_TIME) * orderMultiplier;\n    });\n  }\n}\n\nCommonSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDelete } from '@mdi/js';\nimport { ConfirmationModal, ErrorModal } from '../../../../shared/components/overlays';\nimport { invocationOutputPoller, postInvocation } from '../../../../shared/api/invocation';\n\nimport '../Sessions.local.scss';\nimport './MssqlSessionsTable.local.scss';\n\nconst columns = [\n  { label: 'SPID', sortKey: 'spid' },\n  { label: 'ECID' },\n  { label: 'Status' },\n  { label: 'Login Name' },\n  { label: 'Host Name' },\n  { label: 'blk' },\n  { label: 'DB Name' },\n  { label: 'CMD' },\n  { label: 'Request ID' },\n  { label: 'Kill Session' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index, killSession) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.spid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ecid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.status} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.loginame} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.hostname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.blk} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.dbname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.cmd} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.request_id} />\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"icon-cell\">\n        {(row.hostname || '').trim().length > 0 && parseInt(row.spid, 10) >= 50 && (\n          <SvgIcon onClick={() => killSession(row.spid)}>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        )}\n      </div>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps, openKillSessionConfirmation }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map((row, index) => rowRenderer(row, index, (sessionId) => openKillSessionConfirmation(sessionId)))}</Table>;\n};\n\nexport class MssqlSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'spid', order: 'asc' },\n      killSessionConfirmationOpen: false,\n      sessionIdToKill: null\n    };\n\n    this.killSessionConfirmationActions = {\n      open: (sessionId) => {\n        this.setState({ killSessionConfirmationOpen: true, sessionIdToKill: sessionId });\n      },\n      close: () => {\n        this.setState({ killSessionConfirmationOpen: false, sessionIdToKill: null });\n      },\n      confirm: () => {\n        const { sessionIdToKill } = this.state;\n        this.props.enableLoadingFlag();\n        this.killSession(sessionIdToKill).then((result) => {\n          if (result) {\n            this.props.refreshSessions();\n          } else {\n            this.props.disableLoadingFlag();\n            this.killSessionErrorModalActions.open();\n          }\n        });\n      }\n    };\n\n    this.killSessionErrorModalActions = {\n      open: () => {\n        this.setState({ killSessionErrorOpen: true });\n      },\n      close: () => {\n        this.setState({ killSessionErrorOpen: false });\n      }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading,\n    } = this.props;\n\n    const { sortBehavior, killSessionConfirmationOpen, killSessionErrorOpen } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          openKillSessionConfirmation={(sessionId) => this.killSessionConfirmationActions.open(sessionId)}\n          noDataMessage=\"No Sessions Available\"\n        />\n        <ConfirmationModal open={killSessionConfirmationOpen} actions={this.killSessionConfirmationActions} message=\"Are you sure you want to kill this session?\" />\n        <ErrorModal open={killSessionErrorOpen} actions={this.killSessionErrorModalActions} message=\"Failed to kill this session. Please refresh the page and try again.\" />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.spid - o2.spid) * orderMultiplier;\n    });\n  };\n\n  killSession = async (sessionId) => {\n    const { dbms } = this.props;\n    const payload = {\n      parameters: {\n        session_id: sessionId,\n        dbconn: dbms,\n        oformat: 'JSON',\n        compact: true\n      },\n      process: 'dbatools.mssql.security.session_kill',\n      timestamp: null\n    };\n\n    const creationResult = await postInvocation(payload);\n    if (creationResult.invocations.length) {\n      const invocationUuid = creationResult.invocations[0].uuid;\n      return invocationOutputPoller(invocationUuid);\n    }\n    return Promise.resolve(null);\n  };\n}\n\nMssqlSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array,\n  dbms: PropTypes.string,\n  refreshSessions: PropTypes.func,\n  enableLoadingFlag: PropTypes.func,\n  disableLoadingFlag: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeStateThunk, loadTopSQLStatementsThunk } from '../../store/thunks';\nimport { getFullPath, selectTopSqlStatements } from '../../store/selectors';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '../../../shared/components/controls';\nimport { ElapsedTimeChart } from './charts/ElapsedTimeChart';\nimport { TopSqlStatementsUtil } from './TopSqlStatementsUtil';\nimport { OracleTopSQLTable } from './tables/OracleTopSQLTable';\nimport { PostgresTopSQLTable } from './tables/PostgresTopSQLTable';\nimport './TopSQLStatements.local.scss';\nimport { MysqlTopSQLTable } from './tables/MysqlTopSQLTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlTopSQLTable } from './tables/MssqlTopSQLTable';\n\nexport class TopSQLStatements extends React.PureComponent {\n  componentDidMount() {\n    this.getTopSqlStatementsData();\n  }\n\n  render() {\n    const {\n      storeState: { level, path },\n      topSqlStatements,\n      isLoading,\n      changeTab\n    } = this.props;\n\n    const [protocol] = path.split('--');\n    const elapsedTimeChartData = TopSqlStatementsUtil.isChartSupported(protocol) ? this.prepareChartData(topSqlStatements) : null;\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol === DbmsType.ORACLE && (\n            <OracleTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.POSTGRES && (\n            <PostgresTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MYSQL && (\n            <MysqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {TopSqlStatementsUtil.isChartSupported(protocol) && (\n            <div className=\"graph-container\">\n              {elapsedTimeChartData.length > 0 && (\n                <ElapsedTimeChart data={elapsedTimeChartData} />\n              )}\n            </div>\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getTopSqlStatementsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getTopSqlStatementsData = () => {\n    const {\n      storeState: { path },\n      fullPath\n    } = this.props;\n    const [protocol] = path.split('--');\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: TopSqlStatementsUtil.getEndpoint(protocol),\n      timestamp: null\n    };\n\n    this.props.getTopSqlStatements(payload);\n  };\n\n  prepareChartData = (topStatementsData) => {\n    return (topStatementsData || []).map((row) => {\n      const timeMillis = Math.round(row.ELAPSED_TIME / 1000);\n      const cpuTime = Math.round((timeMillis / 100) * row.PCT_CPU);\n      const ioTime = Math.round((timeMillis / 100) * row.PCT_IO);\n      return {\n        sqlId: row.SQL_ID,\n        timeMillisFull: timeMillis,\n        timeMillis: timeMillis - cpuTime - ioTime,\n        cpuTime,\n        ioTime,\n        cpuPercent: row.PCT_CPU,\n        ioPercent: row.PCT_IO\n      };\n    });\n  }\n}\n\nTopSQLStatements.propTypes = {\n  isLoading: PropTypes.bool,\n  getTopSqlStatements: PropTypes.func,\n  storeState: PropTypes.object,\n  topSqlStatements: PropTypes.array\n};\n\nexport const ConnectedTopSQLStatements = connect(\n  state => ({\n    topSqlStatements: selectTopSqlStatements(state),\n    isLoading: state.explorer.flags.topSqlStatements.loading,\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getTopSqlStatements: filters => dispatch(loadTopSQLStatementsThunk(filters))\n  })\n)(TopSQLStatements);\n","import React from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport './ElapsedTimeChart.local.scss';\n\nconst renderCustomXAxisTick = ({ x, y, payload }) => {\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-80)\">{payload.value}</text>\n    </g>\n  );\n};\n\nconst renderLegend = ({ payload }) => {\n  return (\n    <ul className=\"elapsed-time-chart-legend\">\n      {\n        (payload || []).map((entry, index) => (\n          <li className=\"legend-item\" key={`item-${index}`}>\n            <span className=\"icon\" style={{ backgroundColor: entry.color }} />\n            <span className=\"label\" style={{ color: entry.color }}>{entry.value}</span>\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nconst renderChartTooltip = (data) => {\n  if (!data || !data.payload || !data.payload.length) {\n    return '';\n  }\n\n  const [elapsedTimeData] = data.payload;\n  const { sqlId, timeMillisFull, cpuPercent, cpuTime, ioPercent, ioTime } = elapsedTimeData.payload;\n  return (\n    <div className=\"elapsed-time-chart-tooltip\">\n      <div className=\"row\"><strong className=\"label\">SQL ID: </strong><span className=\"value\">{sqlId}</span></div>\n      <div className=\"row\"><strong className=\"label\">Elapsed Time: </strong><span className=\"value\">{formatTimePeriod(timeMillisFull)}</span></div>\n      <div className=\"row\"><strong className=\"label\">CPU: </strong><span className=\"value\">{cpuPercent}% ({formatTimePeriod(cpuTime)})</span></div>\n      <div className=\"row\"><strong className=\"label\">I/O: </strong><span className=\"value\">{ioPercent}% {ioPercent > 0 ? `(${formatTimePeriod(ioTime)})` : ''}</span></div>\n    </div>\n  );\n};\n\nexport const ElapsedTimeChart = ({ data }) => {\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data} margin={{ top: 50, right: 30, left: 70, bottom: 100 }} barGap={-10}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <Legend content={renderLegend} align=\"right\" verticalAlign=\"top\" layout=\"vertical\" width={200} />\n        <Tooltip content={renderChartTooltip} cursor={{ fill: '#eeeeee' }} />\n\n        <XAxis dataKey=\"sqlId\" axisLine=\"false\" interval={0} tick={renderCustomXAxisTick} />\n        <YAxis dataKey=\"timeMillisFull\" domain={['auto', 'auto']} tickFormatter={tick => formatTimePeriod(tick)} />\n\n        <Bar dataKey=\"cpuTime\" stackId=\"common\" name=\"CPU, %\" fill=\"#1ac9e6\" />\n        <Bar dataKey=\"ioTime\" stackId=\"common\" name=\"I/O, %\" fill=\"#c02323\" />\n        <Bar dataKey=\"timeMillis\" stackId=\"common\" name=\"Elapsed Time\" fill=\"#176BA0\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'SQL ID' },\n  { label: 'Child Number' },\n  { label: 'SQL Text' },\n  { label: 'Module' },\n  { label: 'Executions' },\n  { label: 'Elapsed Time', sortKey: 'ELAPSED_TIME' },\n  { label: 'Elapsed Per Exec' },\n  { label: 'CPU, %' },\n  { label: 'I/O, %' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESS_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SQL_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.CHILD_NUMBER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_TEXT); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_TEXT} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MODULE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.EXECUTIONS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_PER_EXEC, 10)))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_CPU} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_IO} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class OracleTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'ELAPSED_TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.ELAPSED_TIME - o2.ELAPSED_TIME) * orderMultiplier;\n    });\n  }\n}\n\nOracleTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'User ID' },\n  { label: 'Query ID' },\n  { label: 'Query' },\n  { label: 'Executions' },\n  { label: 'Average Time', sortKey: 'avg_time_ms' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.queryid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.userid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.queryid} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.query); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.query} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.calls} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.avg_time_ms, 10))} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class PostgresTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'avg_time_ms', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.avg_time_ms - o2.avg_time_ms) * orderMultiplier;\n    });\n  }\n}\n\nPostgresTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'User' },\n  { label: 'SQL Text' },\n  { label: 'Elapsed Time', sortKey: 'TIME' },\n  { label: 'State' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.SESSION_ID}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESSION_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_Text); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_Text} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATE} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MysqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.TIME - o2.TIME) * orderMultiplier;\n    });\n  }\n}\n\nMysqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Database Name' },\n  { label: 'SQL Text' },\n  { label: 'Executions' },\n  { label: 'Total CPU Time' },\n  { label: 'Avg CPU Time' },\n  { label: 'Max Elapsed Time', sortKey: 'MaxElapsedTime' },\n  { label: 'Avg Elapsed Time' },\n  { label: 'Logical Reads' },\n  { label: 'Physical Reads' },\n  { label: 'Logical Writes' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.QueryName); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.QueryName} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ExecutionCount} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row['Total_CPU_Time(second)'], 10) * 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row['Average_CPU_Time(milisecond)'], 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.MaxElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.AvgElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.Logical_Reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.logical_writes} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MssqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'MaxElapsedTime', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.MaxElapsedTime - o2.MaxElapsedTime) * orderMultiplier;\n    });\n  }\n}\n\nMssqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiTable, mdiViewComfy } from '@mdi/js';\nimport { SystemExplorerViewMode } from './SystemExplorerViewMode';\n\nimport './ToggleSystemExplorerView.local.scss';\n\nexport const ToggleSystemExplorerView = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Table View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TABLE\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TABLE)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiTable} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Tiles View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TILES\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TILES)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiViewComfy} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../shared/components';\nimport { array, func } from 'prop-types';\nimport { Paper } from '../../../shared/components/layout';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { connect } from 'react-redux';\nimport { getDBStatus, getDBStatusInfo, getEntityPendingStatus, getServerStatus } from '../../store/selectors';\nimport { StatusLabel } from '../StatusLabel/StatusLabel';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { Button } from 'shared/components/controls';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport Refresh from '@material-ui/icons/Refresh';\nimport { Loader } from '../../../shared/components/loaders';\nimport { AddServerCard } from '../../containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../containers/ImportCSV/ImportCSV';\nimport { DatabaseSettings } from '../../containers/Settings/DatabaseSettings';\n\nimport './SystemExplorerTable.local.scss';\n\nconst HostnameCellWithTooltip = ({ name }) => {\n  if (name && name.length > 15) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"hostname-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"hostname-cell\">{name}</span>;\n};\n\nconst columns = [\n  { label: 'Hostname' },\n  { label: 'Server' },\n  { label: 'Port', align: 'center' },\n  { label: 'User', align: 'center' },\n  { label: 'Server Status', align: 'center' },\n  { label: 'Database Status', align: 'center' },\n  { label: 'Workload', align: 'center' },\n  { label: 'Session', align: 'center' },\n  { label: 'Top SQL', align: 'center' },\n  { label: 'Objects', align: 'center' },\n  { label: 'Storage', align: 'center' },\n];\n\nconst rowRenderer = (database, index, isChecked, updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails) => (\n  <Table.Row hover key={`${database.name}_${index}`} className=\"statement-row\">\n    <Table.Cell padding=\"checkbox\">\n      <Checkbox\n        onChange={(event) => updateSelection(database, event.target.checked)}\n        checked={isChecked}\n        size=\"small\"\n        color=\"primary\"\n        classes={{ root: 'checkbox-custom' }}\n      />\n    </Table.Cell>\n    <Table.Cell padding=\"none\" className=\"host-cell\">\n      <HostnameCellWithTooltip name={SystemExplorerFeatureUtil.splitAccountName(database.name)} />\n    </Table.Cell>\n    <Table.Cell className=\"address-cell\">\n      {database.address}\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"centered-cell\">{database.port}</div>\n    </Table.Cell>\n    <Table.Cell className=\"user-cell\">\n      <div className=\"centered-cell\">{database.user}</div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveServerStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveDbStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isWorkloadAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'workload' })}>\n          <Icon path={mdiChartTimelineVariant} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isSessionsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'sessions' })}>\n          <Icon path={mdiCheckboxMultipleBlankOutline} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isTopSqlAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'topsql' })}>\n          <Icon path={mdiFormatAlignTop} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isObjectsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'objects' })}>\n          <Icon path={mdiShape} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isStorageAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'storage' })}>\n          <Icon path={mdiHexagonSlice2} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    {SystemExplorerFeatureUtil.isLicenseReportingAllowed(database.protocol) && (\n      <Table.Cell>\n        <div className=\"icon-cell\">\n          <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'license' })}>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        </div>\n      </Table.Cell>\n    )}\n  </Table.Row>\n);\n\nconst testConnectionsTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={clickHandler}\n      startIcon={<Refresh />}\n      classes={{ root: 'green-btn toolbar-btn' }}\n      disabled={isDisabled}\n    >\n      Test Connection\n    </Button>\n  );\n};\n\nconst addServerTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Add New Server\n    </Button>\n  );\n};\n\nconst addDatabaseTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Add New Database\n    </Button>\n  );\n};\n\nconst importCsvTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Import from CSV\n    </Button>\n  );\n};\n\nconst editDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'yellow-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled}\n    >\n      Edit Database\n    </Button>\n  );\n};\n\nconst deleteDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'red-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled}\n    >\n      Delete Database\n    </Button>\n  );\n};\n\nclass SystemExplorerTable extends React.PureComponent {\n  allGroups = [];\n\n  allDatabases = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDbs: []\n    };\n\n    const { data } = this.props;\n    this.allGroups =\n      data.filter(protocolGroup => protocolGroup.databases && protocolGroup.databases.length)\n          .sort((group1, group2) => {\n            return SystemExplorerFeatureUtil.getListOrder(group2.protocol) - SystemExplorerFeatureUtil.getListOrder(group1.protocol);\n          });\n\n    this.allDatabases = this.allGroups.reduce((acc, protocolGroup) => {\n      acc = acc.concat(protocolGroup.databases);\n      return acc;\n    }, []);\n  }\n\n  render() {\n    const {\n      switchToTileView,\n      retrieveDbStatus,\n      retrieveServerStatus,\n      retrievePendingStatus,\n      reloadAccounts,\n      changeState\n    } = this.props;\n    const { selectedDbs } = this.state;\n    const navigateToDetails = (detailsPageParams) => {\n      changeState(detailsPageParams);\n      switchToTileView();\n    };\n\n    return (\n      <Paper>\n        <Paper.Header>\n          <div className=\"system-explorer-table-view\">\n            <div className=\"system-explorer-table-toolbar\">\n              {testConnectionsTrigger(this.testConnections, !selectedDbs.length)}\n              <AddServerCard trigger={addServerTrigger} />\n              <AddDatabaseCard trigger={addDatabaseTrigger} />\n              <ImportCSV trigger={importCsvTrigger} />\n              <DatabaseSettings\n                database={this.getFirstDatabase()}\n                disabled={!this.hasSingleSelection()}\n                editDbTrigger={editDatabaseTrigger}\n                deleteDbTrigger={deleteDatabaseTrigger}\n                reloadAccounts={reloadAccounts}\n              />\n            </div>\n          </div>\n        </Paper.Header>\n        <Paper.Content>\n          <div className=\"system-explorer-table-content\">\n            {this.allGroups.map(protocolGroup => {\n              const columnsConfig = JSON.parse(JSON.stringify(columns));\n              columnsConfig.unshift({ component: this.createCheckboxHeaderColumnConfig(protocolGroup), padding: 'checkbox' });\n              if (SystemExplorerFeatureUtil.isLicenseReportingAllowed(protocolGroup.protocol)) {\n                columnsConfig.push({ label: 'License Reporting', align: 'center' });\n              }\n              const tableProps = { columns: columnsConfig };\n              return (\n                <>\n                  <h3 className=\"protocol-header\">{protocolGroup.protocol}</h3>\n                  <Table {...tableProps} className=\"table\">\n                    {(protocolGroup.databases || []).map((db, index) =>\n                      rowRenderer(db, index, this.isDbSelected(db), this.updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails))}\n                  </Table>\n                </>\n              );\n            })}\n          </div>\n        </Paper.Content>\n      </Paper>\n    );\n  }\n\n  createCheckboxHeaderColumnConfig = (protocolGroup) => {\n    return () => {\n      return (\n        <Checkbox\n          size=\"small\"\n          color=\"primary\"\n          onChange={(event) => this.toggleDbsSelectionByProtocol(event, protocolGroup)}\n          checked={this.isAllDbsByProtocolSelected(protocolGroup.protocol)}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      );\n    };\n  };\n\n  updateSelection = (database, isChecked) => {\n    const { selectedDbs } = this.state;\n    const dbIndex = selectedDbs.findIndex((db) => db.name === database.name);\n\n    if (isChecked && dbIndex === -1) {\n      selectedDbs.push(database);\n    } else if (dbIndex !== -1) {\n      selectedDbs.splice(dbIndex, 1);\n    }\n\n    this.setState({ selectedDbs });\n    this.forceUpdate();\n  };\n\n  toggleDbsSelectionByProtocol = (event, protocolGroup) => {\n    const shouldAddAll = !this.isAllDbsByProtocolSelected(protocolGroup.protocol);\n    const { selectedDbs } = this.state;\n    const allWithoutCurrent = this.clearDbsByProtocol(selectedDbs, protocolGroup.protocol);\n\n    if (shouldAddAll) {\n     this.setState({ selectedDbs: [...allWithoutCurrent, ...protocolGroup.databases] });\n    } else {\n      this.setState({ selectedDbs: [...allWithoutCurrent] });\n    }\n    this.forceUpdate();\n  };\n\n  clearDbsByProtocol = (dbs, protocol) => {\n    return dbs.filter((db) => db.protocol !== protocol);\n  };\n\n  isAllDbsByProtocolSelected = (protocol) => {\n    const allByProtocol = this.allDatabases.filter((db) => db.protocol === protocol);\n    const selectedByProtocol = (this.state.selectedDbs || []).filter((db) => db.protocol === protocol);\n    return allByProtocol.length === selectedByProtocol.length;\n  }\n\n  testConnections = () => {\n    const { selectedDbs } = this.state;\n    const { refreshDatabaseStatus } = this.props;\n    (selectedDbs || []).forEach(db => refreshDatabaseStatus(db));\n  };\n\n  isDbSelected = (db) => {\n    const { selectedDbs } = this.state;\n    return selectedDbs.some((selected) => selected.name === db.name);\n  };\n\n  hasSingleSelection = () => {\n    const { selectedDbs } = this.state;\n    return !!selectedDbs && selectedDbs.length === 1;\n  };\n\n  getFirstDatabase = () => {\n    const { selectedDbs } = this.state;\n    return this.hasSingleSelection() ? selectedDbs[0] : null;\n  };\n}\n\nSystemExplorerTable.propTypes = {\n  data: array,\n  switchToTileView: func\n};\n\nexport const ConnectedSystemExplorerTable = connect(\n  state => {\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      statuses,\n      retrieveServerStatus: server => getServerStatus(server, statuses),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database => getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(SystemExplorerTable);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postCompile() {\n  return RestClient.post('/compile');\n}\n","module.exports = __webpack_public_path__ + \"svgs/6842f8a8cfcb1999b9a1e64174e25a11.svg\";","module.exports = __webpack_public_path__ + \"svgs/727bf5a83867f2c49ff66ab6df50ae78.svg\";","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport './job-process.local.scss';\n\nimport { getInvocation } from './store/selectors';\nimport { invocationPoller } from './store/tasks';\nimport { AllowOutputFor } from './store/constants';\n\nimport JobForm from './job-form';\n\nimport { JobOutput } from './containers/output/output';\nimport { JobStatus } from './components/JobStatus/JobStatus';\n\nexport const JobView = ({ invocation, redirected }) => {\n  const [tab, setTab] = useState('details');\n\n  useEffect(() => {\n    invocationPoller.start();\n\n    return function stopPolling() {\n      invocationPoller.stop();\n    };\n  }, [invocation.status]);\n\n  if (!invocation || invocation.status === 'NOT_FETCHED') {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Fetching invocation</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <ViewTabs invocation={invocation} active={tab} changeTab={setTab} />\n        <JobStatus />\n      </Paper.Header>\n      <Switch value={tab}>\n        <Switch.Case value=\"details\">\n          <JobForm redirected={redirected} />\n        </Switch.Case>\n        <Switch.Case value=\"output\">\n          <JobOutput />\n        </Switch.Case>\n      </Switch>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    invocation: getInvocation(state)\n  };\n}, {})(JobView);\n\nfunction ViewTabs({ active, changeTab, invocation }) {\n  const withOutput = AllowOutputFor.includes(invocation.status);\n  const tabs = [{ label: 'Job Details', value: 'details', active: true }];\n  if (withOutput) {\n    tabs.push({ label: 'Output', value: 'output' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { isEmpty, pickBy } from 'lodash';\nimport moment from 'moment';\nimport { Switch } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Notifications } from './containers/notifications/notifications';\nimport { Formik, Form } from 'formik';\nimport { Text, Date, Time } from 'shared/components/form/editors/Generic';\nimport { PlatformSelect, ProcessTypeSelect, ProcessSelect, PLATFORMS, PROCESS_TYPES } from 'shared/components/form/editors/Custom';\nimport { Button } from 'shared/components/controls';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Section, Row, Column } from '../shared/components/layout';\nimport { getCurrentUserDetails, getCurrentUserName } from '../session/store/selectors';\nimport { getInvocation } from './store/selectors';\nimport { AllowGeneralEditingFor, InvocationStatus } from './store/constants';\nimport { postInvocation } from 'shared/api/invocation';\nimport { ProcessParameters } from './job-parameters';\nimport { Schedule } from 'jobs/containers/Schedule/Schedule';\nimport { ConnectedDeleteJobModal } from 'jobs/actions/delete/DeleteJobModal';\nimport { hasCreatePrivilege } from '../entities/utils/privileges';\nimport { SecurityAreas } from '../entities/utils/security-areas';\n\nimport './job-process.local.scss';\n\nconst JobForm = ({ loggedInAs, invocation, redirected, userDetails }) => {\n  const history = useHistory();\n\n  const [editable, setEditable] = useState(AllowGeneralEditingFor.includes(invocation.status));\n\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const { initialValues, disabledFields } = deriveFormState(invocation, editable);\n\n  const availableProcess = (platformVal, typeVal, processVal) => {\n    const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n    const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n    const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n    const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n    return (platformMatches && typeMatches) ? processVal : '';\n  };\n\n  const userValue = editable ? loggedInAs : invocation.user_owner;\n  const dateValue = editable\n    ? moment()\n        .utc()\n        .format('MM/DD/YYYY')\n    : moment(invocation.date_invoke).format('MM/DD/YYYY');\n  const timeValue = editable\n    ? moment()\n        .utc()\n        .format('HH:mm')\n    : moment(invocation.date_invoke).format('HH:mm');\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n\n  const extraValidations = values => {\n    const errors = {};\n    const { date_invoke, time_invoke } = values;\n\n    if (!moment(date_invoke).isValid()) {\n      errors.date_invoke = 'Invalid date format';\n    }\n\n    if (!/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/.test(time_invoke)) {\n      errors.time_invoke = 'Invalid time format';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(true);\n          handleJobCreation(values, monitor).then(({ result, invocations }) => {\n            if (result === 'success') {\n              const { uuid } = invocations[0];\n\n              history.push(`/jobs/job?invocation=${uuid}`);\n            }\n          });\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Column xs={4}>\n                          <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(value, formik.values.type, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.platform || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessTypeSelect\n                            name=\"type\"\n                            label=\"Type\"\n                            description=\"Select a type to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(formik.values.platform, value, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.type || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessSelect\n                            name=\"process\"\n                            label=\"Process\"\n                            value={invocation.process}\n                            required\n                            disabled={disabledFields.process || !editable || redirected}\n                          />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column xs={3}>\n                          <Date\n                            name=\"date_invoke\"\n                            label=\"Date\"\n                            disabled={!editable}\n                            value={dateValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Time\n                            name=\"time_invoke\"\n                            label=\"MAS system time (UTC)\"\n                            disabled={!editable}\n                            value={timeValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Text name=\"job_user\" label=\"User\" required disabled value={userValue} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation.parameters} editable={editable} />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row spacing={3}>\n                        <Column xs={12}>\n                          <Notifications\n                            name=\"notifications\"\n                            key={invocation.uuid}\n                            disabled={!editable}\n                            recievedData={derivedMonitor}\n                            onApply={n_state => {\n                              if (n_state.events === 0 || isEmpty(n_state.users)) {\n                                setMonitor({\n                                  enabled: false\n                                });\n                              }\n                              setMonitor({\n                                enabled: true,\n                                ...n_state\n                              });\n                            }}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <a href=\"/ui/#/jobs/\">\n                  <Button>Cancel</Button>\n                  </a>\n                  {invocation.status === 'DELAYED' && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setOpen(true);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  )}\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <FormVerbs\n                    status={invocation.status}\n                    editable={editable}\n                    setEditable={setEditable}\n                    monitor={monitor}\n                    invocation={invocation}\n                    userDetails={userDetails}\n                  />\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={invocation.uuid} />\n      )}\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    loggedInAs: getCurrentUserName(state),\n    invocation: getInvocation(state),\n    userDetails: getCurrentUserDetails(state),\n  };\n}, {})(JobForm);\n\n/* eslint-disable no-unused-vars */\nfunction FormVerbs({ status, editable, setEditable, monitor, invocation, userDetails }) {\n  const makeEditable = () => setEditable(true);\n  const canCreateSchedule = hasCreatePrivilege(userDetails, SecurityAreas.SCHEDULE);\n  if (!canCreateSchedule) {\n    return '';\n  }\n\n  return (\n    <Switch value={editable}>\n      <Switch.Case value>\n        <SubmitButton>{monitor.enabled ? 'Monitor' : 'Run'}</SubmitButton>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Schedule invocation={invocation} userDetails={userDetails} />\n          {canCreateSchedule && (\n            <Button onClick={makeEditable}>Edit</Button>\n          )}\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n}\n\nfunction handleJobCreation(values, monitor) {\n  const {\n    process,\n    platform,\n    type,\n    date_invoke,\n    time_invoke,\n    job_user,\n    ...params_with_maybe_replvars\n  } = values;\n  const sendable = {};\n\n  const { parameters, replvars } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (date_invoke) {\n    const dateMoment = moment(date_invoke, 'MM/DD/YYYY');\n\n    const timeMoment = time_invoke ? moment(time_invoke, 'hh:mm') : moment();\n    const currentDate = moment()\n      .utc()\n      .set('second', 0)\n      .format('YYYY-MM-DDTHH:mm:ss');\n\n    const date = dateMoment.format('YYYY-MM-DD');\n    const time = timeMoment.format('HH:mm');\n    const dateTime = moment(date + ' ' + time, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DDTHH:mm:ss'); // eslint-disable-line prefer-template\n\n    const duration = moment.duration(\n      moment(dateTime, 'YYYY-MM-DD HH:mm').diff(moment(currentDate, 'YYYY-MM-DD HH:mm'))\n    );\n    const minutes = duration.asMinutes();\n\n    if (minutes > 0) {\n      sendable.timestamp = dateTime;\n    } else {\n      sendable.timestamp = null;\n    }\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    sendable.process = 'mas.sys.invocation.notify.create';\n\n    sendable.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      when: sendable.timestamp,\n      events: monitor.events,\n      users: monitor.users\n    };\n\n    sendable.timestamp = null;\n  } else {\n    sendable.process = process;\n\n    sendable.parameters = pickBy(parameters, rejector);\n  }\n\n  return postInvocation(sendable);\n}\n\nfunction deriveFormState(invocation) {\n  const values = {\n    platform: '',\n    type: '',\n    process: invocation.process,\n    parameters: { ...invocation.parameters }\n  };\n  const disabledFields = {\n    ...(invocation.status !== InvocationStatus.NEW && {\n      platform: true,\n      type: true,\n      process: true,\n      user: true,\n      parameters: true\n    })\n  };\n\n  return { initialValues: values, disabledFields };\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  } else if (values['fqname--fqname']) {\n    if (values['fqname--namespace']) {\n      values.fqname = `${values['fqname--namespace']}.${values['fqname--fqname']}`;\n    } else {\n      values.fqname = values['fqname--fqname'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--fqname'];\n  }\n  return values;\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Paper } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\nimport { useSelector } from 'react-redux';\nimport { getInvocation } from '../../store/selectors';\nimport { InvocationStatus } from '../../store/constants';\nimport { ListOutput } from '../../components/ListOutput/ListOutput';\nimport { fetchInvocationOutput } from 'shared/api/invocation';\nimport { sendToEmail } from 'license-collection/utils/sendToEmail';\nimport { copyToClipboard } from 'license-collection/utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './output.scss';\n\nfunction noOutput(invocation = {}) {\n  return [\n    {\n      data: {\n        text: 'No output to display.\\n'\n      }\n    },\n    {\n      data: {\n        text: `Status: ${invocation.status}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Process: ${invocation.process}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Invocation: ${invocation.uuid}\\n`\n      }\n    }\n  ];\n}\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const JobOutput = () => {\n  const invocation = useSelector(getInvocation);\n\n  const [loading, setLoading] = React.useState(true);\n  const [output, setOutput] = React.useState(noOutput(invocation));\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = React.useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  React.useEffect(() => {\n    fetchInvocationOutput(invocation.uuid)\n      .then(({ data }) => {\n        const recieved = data.data.outputs;\n\n        if (recieved && recieved.length) {\n          setOutput(recieved);\n        } else {\n          setOutput(noOutput(invocation));\n        }\n\n        setLoading(false);\n      })\n      .catch(() => {\n        setOutput(noOutput(invocation));\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const outputType = invocation.status === InvocationStatus.FAILED ? 'fail' : 'normal';\n\n  const monitoring = output?.[0]?.data?.text?.match?.(\n    /{\"process\": {\"uuid\": \"([0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12})\",/\n  )?.[1];\n\n  console.log(monitoring); // eslint-disable-line\n\n  return (\n    <>\n      <Paper.Content scrollable>\n        <ListOutput\n          type={outputType}\n          output={output}\n          outputFormat={invocation.parameters.oformat}\n          errors={invocation.errors}\n          monitoring={monitoring}\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"primary\"\n            onClick={() => onSendByEmail(invocation, output, invocation.process, modalActions)}\n          >\n            Send to email\n          </Button>\n          <Button color=\"primary\" onClick={() => copyToClipboard(output, invocation)}>\n            Copy to clipboard\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n      <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n    </>\n  );\n};\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nimport './ListOutput.local.scss';\nimport ReactJson from 'react-json-view';\n\nexport const ListOutput = ({ output, type, outputFormat, errors, monitoring }) => {\n  let content;\n  let preparedJSON;\n\n  if (outputFormat === 'JSON') {\n    const [, jsonString] = (output[0].data.text || '').split('\\n');\n    try {\n      preparedJSON = JSON.parse(jsonString);\n    } catch (error) {\n      preparedJSON = null;\n    }\n  }\n\n  if (monitoring) {\n    return (\n      <div className=\"list\">\n        <h3>Monitor</h3>\n        <p>Invocation id: {monitoring}</p>\n        <Button to={`/jobs/job?invocation=${monitoring}`} color=\"primary\">\n          Go to Monitored Invocation\n        </Button>\n      </div>\n    );\n  }\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          <code>\n            <pre>{errors.join('\\n')}</pre>\n          </code>\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              <code>\n                <pre>{output.map(row => row.data.text).join('')}</pre>\n              </code>\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else if (preparedJSON) {\n    content = (\n      <div className=\"list\">\n        <ReactJson\n          src={preparedJSON}\n          enableClipboard={false}\n          displayObjectSize={false}\n          displayDataTypes={false}\n        />\n      </div>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        <code>\n          <pre>{output.map(row => row.data.text).join('')}</pre>\n        </code>\n      </div>\n    );\n  }\n\n  return content;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { want } from 'shared/lib/want';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiTimelineClock,\n  mdiCancel,\n  mdiAlertRhombusOutline,\n  mdiStopCircleOutline\n} from '@mdi/js';\n\nimport { getInvocationStatus } from '../../store/selectors';\nimport {\n  InvocationStatus,\n  CannotShowStatusFor,\n  FAILURES,\n  SUCESSES,\n  WARNINGS\n} from '../../store/constants';\n\nimport './JobStatus.local.scss';\n\nexport const JobStatus = () => {\n  const STATUS = useSelector(getInvocationStatus);\n  const ignore = CannotShowStatusFor.includes(STATUS);\n\n  if (ignore) {\n    return null;\n  }\n\n  return (\n    <div className=\"status-label\" style={{ background: wantStatusColor(STATUS) }}>\n      <SvgIcon fontSize=\"inherit\" color=\"inherit\">\n        <path d={wantStatusIcon(STATUS)} />\n      </SvgIcon>\n      <span className=\"status-label-text\">{STATUS}</span>\n    </div>\n  );\n};\n\nconst wantStatusIcon = want(\n  {\n    [InvocationStatus.EXECUTING]: mdiProgressClock,\n    [InvocationStatus.SUCCEEDED]: mdiCheckCircleOutline,\n    [InvocationStatus.DELAYED]: mdiTimelineClock,\n    [InvocationStatus.SCHEDULED]: mdiCalendarArrowRight,\n    [InvocationStatus.KILLED]: mdiCancel,\n    [InvocationStatus.FAILED]: mdiAlertRhombusOutline,\n    [InvocationStatus.ABORTED]: mdiStopCircleOutline\n  },\n  '',\n  status => status\n);\n\nconst wantStatusColor = want(\n  {\n    fail: '#ED3A4A',\n    warning: '#F1BD5C',\n    success: '#34CC88'\n  },\n  '#3765AF', // progress blue color for unresolved statuses\n  status => {\n    if (FAILURES.includes(status)) {\n      return 'fail';\n    }\n\n    if (SUCESSES.includes(status)) {\n      return 'success';\n    }\n\n    if (WARNINGS.includes(status)) {\n      return 'warning';\n    }\n  }\n);\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nexport function ToggleSelection({ hasSelectedServer, deselectServer }) {\n  if (hasSelectedServer) {\n    return (\n      <Button style={{ color: '#03A9F4' }} onClick={() => deselectServer()}>\n        Deselect\n      </Button>\n    );\n  }\n  return '';\n}\n","import React, { PureComponent } from 'react';\nimport Graph from 'react-graph-vis';\nimport {\n  BASE_NETWORK_GRAPH_OPTIONS,\n  DB_NODE_COLOR,\n  DB_NODE_SHAPE,\n  NODE_SIZE_MULTIPLIER,\n  ROOT_NODE,\n  ROOT_NODE_ID,\n  SERVER_NODE_COLOR,\n  SERVER_NODE_SHAPE\n} from './ServersNetworkConstants';\nimport { connect } from 'react-redux';\nimport { loadNetworkEdgesThunk, loadNetworkNodesThunk, loadServerDetailsThunk } from '../../store/thunks';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nimport 'vis-network/styles/vis-network.css';\nimport './ServersNetworkTile.local.scss';\n\nclass ServersNetworkTile extends PureComponent {\n  events = {\n    select: (event) => {\n      const { nodes } = event;\n      if (nodes.length) {\n        const nodeId = nodes[0];\n        const selectedNode = this.networkData.graph.nodes.find((node) => node.id === nodeId);\n        if (selectedNode && selectedNode.isServerNode) {\n          const { onServerChanged, getServerDetails } = this.props;\n          onServerChanged(selectedNode.id);\n          getServerDetails(selectedNode.id);\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    const { getNetworkNodes, getNetworkEdges } = this.props;\n    getNetworkNodes();\n    getNetworkEdges();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getNetworkNodes, getNetworkEdges } = this.props;\n      setTimeout(() => {\n        getNetworkNodes(newProps.selectedServer);\n        getNetworkEdges(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { nodes, edges, selectedServer, serverDetails, isLoading } = this.props;\n    const preparedNodes = this.mapNodes(nodes);\n    const serverNodes = preparedNodes.filter((node) => node.isServerNode);\n    if (preparedNodes.length && !selectedServer) {\n      preparedNodes.unshift(ROOT_NODE);\n    }\n    this.networkData = {\n      graph: {\n        nodes: preparedNodes,\n        edges: this.mapEdges(edges, serverNodes),\n      }\n    };\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container servers-network-graph-container\">\n            <Center>\n              <Loader>Loading Network Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const hasData = preparedNodes.length && edges.length;\n    return (\n      <div className=\"exec-dashboard-graph-container servers-network-graph-container\">\n        {hasData ? (\n          <>\n            <Graph\n              graph={this.networkData.graph}\n              options={BASE_NETWORK_GRAPH_OPTIONS}\n              events={this.events}\n            />\n            {selectedServer && serverDetails && Object.keys(serverDetails).length ? (\n              <div className=\"server-details-container\">\n                  <div className=\"server-details-row\">Manufacturer: {serverDetails.server_manufacturer}</div>\n                  <div className=\"server-details-row\">Chipset: {serverDetails.processor_identifier}</div>\n                  <div className=\"server-details-row\">Physical Cores: {serverDetails.total_physical_cores}</div>\n                  <div className=\"server-details-row\">Logical Cores: {serverDetails.total_logical_cores}</div>\n                  <div className=\"server-details-row\">Sockets: {serverDetails.physical_sockets_populated}</div>\n              </div>\n            ) : ''}\n          </>\n        ) : (\n          <Center>\n            No Network Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapNodes = (nodes) => {\n    return (nodes || [])\n      .filter((node, index, arr) => {\n        return arr.findIndex(t => (t.id === node.id)) === index;\n      })\n      .map((node) => {\n        const isServerNode = node.title === 'server';\n        const hasWarnings = node.warning === 'yes';\n        const nodeConfig = {\n          ...node,\n          isServerNode,\n          title: node.label,\n          widthConstraint: node.size * NODE_SIZE_MULTIPLIER,\n          color: {\n            background: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR,\n            border: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR\n          },\n          shape: isServerNode ? SERVER_NODE_SHAPE : DB_NODE_SHAPE,\n        };\n\n        if (hasWarnings) {\n          nodeConfig.borderWidth = 3;\n          nodeConfig.color.border = 'red';\n          nodeConfig.title += ' (There is more usage than licenses allocated)';\n        }\n\n        return nodeConfig;\n      });\n  }\n\n  mapEdges = (edges, serverNodes) => {\n    const serverEdges = serverNodes.map((node) => {\n      return { from: ROOT_NODE_ID, to: node.id, width: 5, arrows: { to: { enabled: false } } };\n    });\n    return edges.map((edge) => {\n      return { from: edge.from, to: edge.to, width: 5, arrows: { to: { enabled: false } } };\n    }).concat(serverEdges);\n  }\n}\n\nexport const ConnectedServersNetworkTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.network.nodesLoading ||\n        state.executiveDashboard.flags.network.edgesLoading,\n      nodes: state.executiveDashboard.networkNodes,\n      edges: state.executiveDashboard.networkEdges,\n      serverDetails: state.executiveDashboard.networkServerDetails,\n    };\n  },\n  dispatch => ({\n    getNetworkNodes: (serverId) => dispatch(loadNetworkNodesThunk(serverId)),\n    getNetworkEdges: (serverId) => dispatch(loadNetworkEdgesThunk(serverId)),\n    getServerDetails: (serverId) => dispatch(loadServerDetailsThunk(serverId)),\n  })\n)(ServersNetworkTile);\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from './LicensableFeaturesConstants';\nimport { OptionsList } from '../OptionsTile/components/OptionsList/OptionsList';\nimport { Overflow } from '../../../shared/components/layout';\nimport classnames from 'classnames';\nimport { ChartTooltip } from '../ChartTooltip/ChartTooltip';\nimport { connect } from 'react-redux';\nimport { loadUsageStat, loadUsageThunk } from '../../store/thunks';\nimport { Center } from '../../../shared/components';\nimport { Loader } from '../../../shared/components/loaders';\n\nimport './LicensableFeaturesTile.local.scss';\n\nconst ScoreItem = ({ clazz, label, value }) => {\n  return (\n    <div className={classnames('score-item-container', clazz)}>\n      <div className=\"score-item-title\">{label}</div>\n      <div className=\"score-item-value\">{value}</div>\n    </div>\n  );\n};\n\nclass LicensableFeaturesTile extends PureComponent {\n  componentDidMount() {\n    const { getLicensableFeatures, getUsageStat } = this.props;\n    getLicensableFeatures();\n    getUsageStat();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getLicensableFeatures, getUsageStat } = this.props;\n      setTimeout(() => {\n        getLicensableFeatures(newProps.selectedServer);\n        getUsageStat(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { licensableFeatures, usageStat, isLoading } = this.props;\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container licensable-features-graph-container\">\n            <Center>\n              <Loader>Loading License Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const licensesData = this.mapLicenses(licensableFeatures);\n    const currencyFormatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumFractionDigits: 0,\n    });\n\n    return (\n      <div className=\"exec-dashboard-graph-container licensable-features-graph-container\">\n        {licensesData.length ? (\n          <>\n            <ScoreItem clazz=\"total-risk\" label=\"Total Risk\" value={Number.isFinite(usageStat.totalRisk) ? currencyFormatter.format(usageStat.totalRisk) : '-'} />\n            <ScoreItem clazz=\"license-cost\" label=\"License Cost\" value={Number.isFinite(usageStat.licenseCost) ? currencyFormatter.format(usageStat.licenseCost) : '-'} />\n            <ScoreItem clazz=\"support-cost\" label=\"Support Cost\" value={Number.isFinite(usageStat.supportCost) ? currencyFormatter.format(usageStat.supportCost) : '-'} />\n            <ScoreItem clazz=\"unallocated-licenses\" label=\"Unallocated Licenses\" value={Number.isFinite(usageStat.unallocatedLicenses) ? usageStat.unallocatedLicenses : '-'} />\n\n            <ResponsiveContainer height={420}>\n              <PieChart>\n                <Pie data={licensesData} dataKey=\"value\" cx=\"40%\" cy=\"60%\" innerRadius={65} outerRadius={130} blendStroke>\n                  {licensesData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip content={ChartTooltip} />\n              </PieChart>\n            </ResponsiveContainer>\n\n            <div className=\"graph-legend-container\">\n              <Overflow>\n                <OptionsList options={licensesData} />\n              </Overflow>\n            </div>\n          </>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapLicenses = (licenses) => {\n    return (licenses || []).map((license) => {\n      const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => license.abbreviation === config.type);\n      return {\n        ...license,\n        name: license.product_name,\n        label: license.abbreviation,\n        color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n        secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n      };\n    });\n  }\n}\n\nexport const ConnectedLicensableFeaturesTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.licensableFeatures.loading\n        || state.executiveDashboard.flags.usageStat.loading,\n      licensableFeatures: state.executiveDashboard.licensableFeatures,\n      usageStat: state.executiveDashboard.usageStat,\n    };\n  },\n  dispatch => ({\n    getLicensableFeatures: (serverId) => dispatch(loadUsageThunk(serverId)),\n    getUsageStat: (serverId) => dispatch(loadUsageStat(serverId)),\n  })\n)(LicensableFeaturesTile);\n","import React from 'react';\nimport classnames from 'classnames';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAlert } from '@mdi/js';\nimport { LightTooltip } from 'shared/components';\n\nimport './OptionItem.local.scss';\n\nexport const OptionItem = ({ option }) => {\n  return (\n    <div className={classnames('option', { 'has-issues': option.hasIssues })}>\n      <div className=\"value\" style={{ backgroundColor: option.color }} />\n      {option.tooltip ? (\n        <LightTooltip placement=\"right-start\" title={option.tooltip}>\n          <div className=\"label\">{option.label}</div>\n        </LightTooltip>\n      ) : (\n        <div className=\"label\">{option.label}</div>\n      )}\n      {option.hasIssues && (\n        <SvgIcon className=\"alert-icon\">\n          <Icon path={mdiAlert} />\n        </SvgIcon>\n      )}\n    </div>\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport './OperatingSystemsTile.local.scss';\nimport {\n  DB_VERSION_COLOR_PALETTE,\n  EE_DB_PRIMARY_COLOR,\n  EE_DB_SECONDARY_COLOR,\n  LINUX_OS_PRIMARY_COLOR,\n  LINUX_OS_SECONDARY_COLOR,\n  SE_DB_PRIMARY_COLOR,\n  SE_DB_SECONDARY_COLOR,\n  WINDOWS_OS_PRIMARY_COLOR,\n  WINDOWS_OS_SECONDARY_COLOR\n} from './OperatingSystemsConstants';\nimport { Overflow } from 'shared/components/layout';\nimport { OptionsList } from '../OptionsTile/components/OptionsList/OptionsList';\nimport { ChartTooltip } from '../ChartTooltip/ChartTooltip';\nimport { connect } from 'react-redux';\nimport { loadDBEditionThunk, loadDBVersionThunk, loadOSTypeThunk } from '../../store/thunks';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nclass OperatingSystemsTile extends PureComponent {\n  componentDidMount() {\n    const { getOSType, getDBEdition, getDBVersion } = this.props;\n    getOSType();\n    getDBEdition();\n    getDBVersion();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getOSType, getDBEdition, getDBVersion } = this.props;\n      setTimeout(() => {\n        getOSType(newProps.selectedServer);\n        getDBEdition(newProps.selectedServer);\n        getDBVersion(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { isLoading, selectedServer, graphData } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container operating-systems-graph-container\">\n            <Center>\n              <Loader>Loading Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const preparedOSData = this.mapOS(graphData?.osType);\n    const preparedDBEditionsData = selectedServer ? this.mapDBEditionByServer(graphData?.dbEdition) : this.mapDBEdition(graphData?.dbEdition);\n    const preparedDBVersionsData = this.mapDBVersion(graphData?.dbVersion);\n    const hasData = graphData && (preparedOSData.length || preparedDBEditionsData.length || graphData.dbVersion.length);\n\n    return (\n      <div className=\"exec-dashboard-graph-container operating-systems-graph-container\">\n        {hasData ? (\n          <div className=\"charts-container\">\n            <div className=\"chart\">\n              <div className=\"chart-title\">Operating System</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedOSData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedOSData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedOSData.map((entry, index) => (\n                      <Cell key={`cell-${entry.name}-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"chart\">\n              <div className=\"chart-title\">DB Edition</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedDBEditionsData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedDBEditionsData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedDBEditionsData.map((entry, index) => (\n                      <Cell key={`cell-${entry.database_edition}-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"chart\">\n              <div className=\"chart-title\">DB Version</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedDBVersionsData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedDBVersionsData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedDBVersionsData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapOS = (osData) => {\n    return (osData || []).map((os) => {\n      const isWindowsOS = os.name.indexOf('Windows') !== -1;\n      return {\n        ...os,\n        isWindowsOS,\n        label: os.name,\n        color: isWindowsOS ? WINDOWS_OS_PRIMARY_COLOR : LINUX_OS_PRIMARY_COLOR,\n        secondaryColor: isWindowsOS ? WINDOWS_OS_SECONDARY_COLOR : LINUX_OS_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBEdition = (dbEditionData) => {\n    return (dbEditionData || []).map((dbEdition) => {\n      const isSEEdition = (dbEdition.name || dbEdition.database_edition).indexOf('SE') !== -1;\n      return {\n        ...dbEdition,\n        isSEEdition,\n        label: dbEdition.name,\n        color: isSEEdition ? SE_DB_PRIMARY_COLOR : EE_DB_PRIMARY_COLOR,\n        secondaryColor: isSEEdition ? SE_DB_SECONDARY_COLOR : EE_DB_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBEditionByServer = (dbEditionData) => {\n    return (dbEditionData || []).map((dbEdition) => {\n      const isSEEdition = (dbEdition.database_edition || dbEdition.name).indexOf('SE') !== -1;\n      return {\n        ...dbEdition,\n        isSEEdition,\n        name: dbEdition.database_edition || dbEdition.name,\n        value: dbEdition.count || dbEdition.value,\n        label: dbEdition.database_edition || dbEdition.name,\n        color: isSEEdition ? SE_DB_PRIMARY_COLOR : EE_DB_PRIMARY_COLOR,\n        secondaryColor: isSEEdition ? SE_DB_SECONDARY_COLOR : EE_DB_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBVersion = (dbVersionData) => {\n    return (dbVersionData || []).map((db, index) => {\n      const isSupported = db.is_supported === 'SUPPORTED';\n      return {\n        ...db,\n        name: db.database_version,\n        tooltip: `${db.database_version}${!isSupported ? ' (Not supported)' : ''}`,\n        value: db.qty,\n        color: DB_VERSION_COLOR_PALETTE[index].color,\n        secondaryColor: DB_VERSION_COLOR_PALETTE[index].secondaryColor,\n        label: db.db_version_short,\n        hasIssues: !isSupported\n      };\n    });\n  }\n}\n\nexport const ConnectedOperatingSystemsTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.network.nodesLoading ||\n        state.executiveDashboard.flags.network.edgesLoading,\n      graphData: state.executiveDashboard.techDetails,\n    };\n  },\n  dispatch => ({\n    getOSType: (serverId) => dispatch(loadOSTypeThunk(serverId)),\n    getDBEdition: (serverId) => dispatch(loadDBEditionThunk(serverId)),\n    getDBVersion: (serverId) => dispatch(loadDBVersionThunk(serverId)),\n  })\n)(OperatingSystemsTile);\n","import React, { PureComponent } from 'react';\nimport { Bar, BarChart, CartesianGrid, Cell, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { connect } from 'react-redux';\nimport { loadLicenseDeltaThunk } from '../../store/thunks';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from '../LicensableFeaturesGraph/LicensableFeaturesConstants';\nimport { Center, LightTooltip } from '../../../shared/components';\nimport { Loader } from '../../../shared/components/loaders';\nimport { FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\n\nimport './LicenseDeltaTile.local.scss';\n\nconst LicenseType = {\n  NUP: 'nup',\n  CPU: 'cpu',\n};\n\nexport const LicenseDeltaChartTooltip = (data) => {\n  if (!data || !data.payload || data.payload.length < 3) {\n    return '';\n  }\n\n  const assignedValue = data.payload[0].value;\n  const usedValue = data.payload[1].value;\n  const ownedValue = data.payload[2].value;\n  return (\n    <div className=\"exec-dashboard-chart-tooltip\">\n      <LightTooltip placement=\"bottom-end\">\n        <div className=\"exec-dashboard-chart-tooltip-content\">\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Assigned</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{assignedValue}</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Used</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{usedValue}</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Owned</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{ownedValue}</div>\n          </div>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n\nclass LicenseDeltaTile extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLicenseType: LicenseType.NUP,\n    };\n  }\n\n  componentDidMount() {\n    const { getLicenseDelta } = this.props;\n    getLicenseDelta();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getLicenseDelta } = this.props;\n      setTimeout(() => getLicenseDelta(newProps.selectedServer));\n    }\n  }\n\n  render() {\n    const { licenseDelta, selectedServer, isLoading } = this.props;\n    const { selectedLicenseType } = this.state;\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container license-delta-graph-container\">\n            <Center>\n              <Loader>Loading License Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const chartData = this.mapData(licenseDelta, selectedLicenseType);\n    return (\n      <div className=\"exec-dashboard-graph-container license-delta-graph-container\">\n        {chartData.length ? (\n          <>\n            <RadioGroup\n              row\n              className=\"license-type\"\n              value={selectedLicenseType}\n              onChange={(event) => this.setState({ selectedLicenseType: event.target.value })}\n            >\n              <FormControlLabel value=\"nup\" control={<Radio color=\"primary\" size=\"small\" />} label=\"NUPs\" />\n              <FormControlLabel value=\"cpu\" control={<Radio color=\"primary\" size=\"small\" />} label=\"CPUs\" />\n            </RadioGroup>\n            <div className=\"chart-title\">License Delta</div>\n            <ResponsiveContainer height={380}>\n              <BarChart data={chartData} barGap={0} margin={{ left: 20 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                <XAxis dataKey=\"label\" tickSize={false} axisLine={false} tick={this.renderCustomXAxisTick} />\n                <YAxis\n                  width={50}\n                  tickSize={false}\n                  allowDecimals={false}\n                  type=\"number\"\n                  domain={[0, selectedServer ? 2 : 'dataMax']}\n                  stroke=\"rgba(4, 17, 37, 0.87)\"\n                  label={{ value: 'Count of Feature in envt', angle: -90, position: 'left' }}\n                />\n                <Bar dataKey=\"assigned\" fill=\"#13369f\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#13369f\" />;\n                  })}\n                </Bar>\n                <Bar dataKey=\"used\" fill=\"#f2c94c\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#f2c94c\" />;\n                  })}\n                </Bar>\n                <Bar dataKey=\"owned\" fill=\"#55c667\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#55c667\" />;\n                  })}\n                </Bar>\n                <Tooltip content={LicenseDeltaChartTooltip} cursor={false} />\n                <Legend />\n              </BarChart>\n            </ResponsiveContainer>\n          </>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  renderCustomXAxisTick = ({ x, y, payload }) => {\n    const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => config.type === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"x-axis-label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={licenseConfig?.color || '#aaa'}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  mapData = (licenseData, selectedType) => {\n    const groupedData = (licenseData || [])\n      .reduce((acc, license) => {\n        const key = `${license.product_id}_${license.metric}`;\n        if (acc[key]) {\n          const updated = { ...acc[key] };\n          updated.lic_owned += license.lic_owned;\n          updated.lic_used += license.lic_used;\n          updated.lic_assigned += license.lic_assigned;\n          acc[key] = updated;\n        } else {\n          acc[key] = { ...license, type: license.metric === 'Named User Plus' ? LicenseType.NUP : LicenseType.CPU };\n        }\n        return acc;\n      }, {});\n\n    return Object.values(groupedData)\n      .filter((license) => license.type === selectedType)\n      .map((license) => {\n        const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => license.abbreviation === config.type);\n        return {\n          name: license.product_name,\n          label: license.abbreviation,\n          assigned: license.lic_assigned,\n          used: license.lic_used,\n          owned: license.lic_owned,\n          color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n          secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n        };\n      });\n  };\n}\n\nexport const ConnectedLicenseDeltaTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.licenseDelta.loading,\n      licenseDelta: state.executiveDashboard.licenseDelta,\n    };\n  },\n  dispatch => ({\n    getLicenseDelta: (serverId) => dispatch(loadLicenseDeltaThunk(serverId)),\n  })\n)(LicenseDeltaTile);\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport { connect } from 'react-redux';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from '../../LicensableFeaturesGraph/LicensableFeaturesConstants';\nimport { Overflow } from '../../../../shared/components/layout';\nimport { ChartTooltip } from '../../ChartTooltip/ChartTooltip';\nimport { loadMssqlUsageThunk } from '../../../store/thunks';\nimport { OptionsList } from '../../OptionsTile/components/OptionsList/OptionsList';\nimport { Center } from '../../../../shared/components';\nimport { Loader } from '../../../../shared/components/loaders';\n\nimport './LicenseUsageTile.local.scss';\n\nclass MssqlLicenseUsageTile extends PureComponent {\n  componentDidMount() {\n    const { getLicenseUsage } = this.props;\n    getLicenseUsage();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getLicenseUsage } = this.props;\n      setTimeout(() => {\n        getLicenseUsage(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { mssqlLicenseUsage, isLoading } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container license-usage-graph-container\">\n            <Center>\n              <Loader>Loading License Usage Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const licenseUsageData = this.mapLicenses(mssqlLicenseUsage);\n    return (\n      <div className=\"exec-dashboard-graph-container license-usage-graph-container\">\n        {licenseUsageData.length ? (\n          <>\n            <div className=\"chart-title\">License Usage</div>\n            <ResponsiveContainer height={380}>\n              <PieChart>\n                <Pie data={licenseUsageData} dataKey=\"value\" cx=\"20%\" cy=\"40%\" innerRadius={65} outerRadius={130} blendStroke>\n                  {licenseUsageData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip content={ChartTooltip} />\n              </PieChart>\n            </ResponsiveContainer>\n\n            <div className=\"graph-legend-container\">\n              <Overflow>\n                <OptionsList options={licenseUsageData} />\n              </Overflow>\n            </div>\n          </>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapLicenses = (licenses) => {\n    return (licenses || []).map((license, index) => {\n      const licenseConfig = LICENSABLE_FEATURES_COLORS[index];\n      return {\n        ...license,\n        value: license.count,\n        name: license.license_type,\n        label: license.license_type,\n        color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n        secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n      };\n    });\n  }\n}\n\nexport const MssqlConnectedLicenseUsageTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.mssqlLicenseUsage.loading,\n      mssqlLicenseUsage: state.executiveDashboard.mssqlLicenseUsage,\n    };\n  },\n  dispatch => ({\n    getLicenseUsage: (serverId) => dispatch(loadMssqlUsageThunk(serverId)),\n  })\n)(MssqlLicenseUsageTile);\n","import React, { PureComponent } from 'react';\nimport Graph from 'react-graph-vis';\nimport {\n  BASE_NETWORK_GRAPH_OPTIONS,\n  DB_NODE_COLOR,\n  DB_NODE_SHAPE,\n  NODE_SIZE_MULTIPLIER,\n  ROOT_NODE,\n  ROOT_NODE_ID,\n  SERVER_NODE_COLOR,\n  SERVER_NODE_SHAPE\n} from '../../ServersNetworkTile/ServersNetworkConstants';\nimport { connect } from 'react-redux';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport {\n  loadMssqlNetworkEdgesThunk,\n  loadMssqlNetworkNodesThunk,\n  loadMssqlServerDetailsThunk\n} from '../../../store/thunks';\n\nimport 'vis-network/styles/vis-network.css';\nimport './ServersNetworkTile.local.scss';\n\nclass MssqlServersNetworkTile extends PureComponent {\n  events = {\n    select: (event) => {\n      const { nodes } = event;\n      if (nodes.length) {\n        const nodeId = nodes[0];\n        const selectedNode = this.networkData.graph.nodes.find((node) => node.id === nodeId);\n        if (selectedNode && selectedNode.isServerNode) {\n          const { onServerChanged, getServerDetails } = this.props;\n          onServerChanged(selectedNode.id);\n          getServerDetails(selectedNode.id);\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    const { getNetworkNodes, getNetworkEdges } = this.props;\n    getNetworkNodes();\n    getNetworkEdges();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getNetworkNodes, getNetworkEdges } = this.props;\n      setTimeout(() => {\n        getNetworkNodes(newProps.selectedServer);\n        getNetworkEdges(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { nodes, edges, selectedServer, serverDetails, isLoading } = this.props;\n    const preparedNodes = this.mapNodes(nodes);\n    const serverNodes = preparedNodes.filter((node) => node.isServerNode);\n    if (preparedNodes.length && !selectedServer) {\n      preparedNodes.unshift(ROOT_NODE);\n    }\n    this.networkData = {\n      graph: {\n        nodes: preparedNodes,\n        edges: this.mapEdges(edges, serverNodes),\n      }\n    };\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container mssql-servers-network-graph-container\">\n            <Center>\n              <Loader>Loading Network Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const hasData = preparedNodes.length && edges.length;\n    return (\n      <div className=\"exec-dashboard-graph-container mssql-servers-network-graph-container\">\n        {hasData ? (\n          <>\n            <Graph\n              graph={this.networkData.graph}\n              options={BASE_NETWORK_GRAPH_OPTIONS}\n              events={this.events}\n            />\n            {selectedServer && serverDetails && Object.keys(serverDetails).length ? (\n              <div className=\"server-details-container\">\n                  <div className=\"server-details-row\">Chipset: {serverDetails.chipset}</div>\n                  <div className=\"server-details-row\">CPU Speed: {serverDetails.cpu_speed}GHz</div>\n                  <div className=\"server-details-row\">Physical Cores: {serverDetails.physical_cores}</div>\n                  <div className=\"server-details-row\">Logical Cores: {serverDetails.logical_cores}</div>\n                  <div className=\"server-details-row\">Server Name: {serverDetails.servername}</div>\n                  <div className=\"server-details-row\">Server Entity Name: {serverDetails.server_entity_name}</div>\n              </div>\n            ) : ''}\n          </>\n        ) : (\n          <Center>\n            No Network Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapNodes = (nodes) => {\n    return (nodes || [])\n      .filter((node, index, arr) => {\n        return arr.findIndex(t => (t.id === node.id)) === index;\n      })\n      .map((node) => {\n        const isServerNode = node.title === 'server';\n        const hasWarnings = node.warning === 'yes';\n        const nodeConfig = {\n          ...node,\n          isServerNode,\n          title: node.label,\n          widthConstraint: node.size * NODE_SIZE_MULTIPLIER,\n          color: {\n            background: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR,\n            border: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR\n          },\n          shape: isServerNode ? SERVER_NODE_SHAPE : DB_NODE_SHAPE,\n        };\n\n        if (hasWarnings) {\n          nodeConfig.borderWidth = 3;\n          nodeConfig.color.border = 'red';\n          nodeConfig.title += ' (There is more usage than licenses allocated)';\n        }\n\n        return nodeConfig;\n      });\n  }\n\n  mapEdges = (edges, serverNodes) => {\n    const serverEdges = serverNodes.map((node) => {\n      return { from: ROOT_NODE_ID, to: node.id, width: 5, arrows: { to: { enabled: false } } };\n    });\n    return edges.map((edge) => {\n      return { from: edge.from, to: edge.to, width: 5, arrows: { to: { enabled: false } } };\n    }).concat(serverEdges);\n  }\n}\n\nexport const MssqlConnectedServersNetworkTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.mssqlNetwork.nodesLoading ||\n        state.executiveDashboard.flags.mssqlNetwork.edgesLoading,\n      nodes: state.executiveDashboard.mssqlNetworkNodes,\n      edges: state.executiveDashboard.mssqlNetworkEdges,\n      serverDetails: state.executiveDashboard.mssqlNetworkServerDetails,\n    };\n  },\n  dispatch => ({\n    getNetworkNodes: (serverId) => dispatch(loadMssqlNetworkNodesThunk(serverId)),\n    getNetworkEdges: (serverId) => dispatch(loadMssqlNetworkEdgesThunk(serverId)),\n    getServerDetails: (serverId) => dispatch(loadMssqlServerDetailsThunk(serverId)),\n  })\n)(MssqlServersNetworkTile);\n","import React, { PureComponent } from 'react';\nimport { Bar, BarChart, CartesianGrid, Cell, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { connect } from 'react-redux';\nimport { loadMssqlEnvironmentUsageThunk } from '../../../store/thunks';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from '../../LicensableFeaturesGraph/LicensableFeaturesConstants';\nimport { Center, LightTooltip } from '../../../../shared/components';\nimport { Loader } from '../../../../shared/components/loaders';\n\nimport './EnvironmentUsageTile.local.scss';\n\nexport const EnvironmentUsageChartTooltip = (data) => {\n  if (!data || !data.payload || data.payload.length < 3) {\n    return '';\n  }\n\n  const coresValue = data.payload[0].value;\n  const maxCoresValue = data.payload[0]?.payload.maxCores;\n  const devicesCalValue = data.payload[1].value;\n  const usersCalValue = data.payload[2].value;\n  return (\n    <div className=\"exec-dashboard-chart-tooltip\">\n      <LightTooltip placement=\"bottom-end\">\n        <div className=\"exec-dashboard-chart-tooltip-content\">\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Cores</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{coresValue} (max {maxCoresValue})</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Devices CAL</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{devicesCalValue}</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Users CAL</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{usersCalValue}</div>\n          </div>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n\nclass EnvironmentUsageTile extends PureComponent {\n  componentDidMount() {\n    const { getEnvironmentUsage } = this.props;\n    getEnvironmentUsage();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getEnvironmentUsage } = this.props;\n      setTimeout(() => getEnvironmentUsage(newProps.selectedServer));\n    }\n  }\n\n  render() {\n    const { environmentUsage, selectedServer, isLoading } = this.props;\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container mssql-environment-usage-graph-container\">\n            <Center>\n              <Loader>Loading Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const chartData = this.mapData(environmentUsage);\n    return (\n      <div className=\"exec-dashboard-graph-container mssql-environment-usage-graph-container\">\n        {chartData.length ? (\n          <>\n            <div className=\"chart-title\">Cores / CALs Usage</div>\n            <ResponsiveContainer height={380}>\n              <BarChart data={chartData} barGap={0} margin={{ left: 20 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                <XAxis height={50} dataKey=\"label\" tickSize={false} axisLine={false} tick={this.renderCustomXAxisTick} />\n                <YAxis\n                  width={10}\n                  tickSize={false}\n                  allowDecimals={false}\n                  type=\"number\"\n                  domain={[0, selectedServer ? 2 : 'dataMax']}\n                  stroke=\"rgba(4, 17, 37, 0.87)\"\n                />\n                <Bar dataKey=\"cores\" fill=\"#13369f\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#13369f\" />;\n                  })}\n                </Bar>\n                <Bar dataKey=\"devicesCal\" fill=\"#f2c94c\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#f2c94c\" />;\n                  })}\n                </Bar>\n                <Bar dataKey=\"usersCal\" fill=\"#55c667\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#55c667\" />;\n                  })}\n                </Bar>\n                <Tooltip content={EnvironmentUsageChartTooltip} cursor={false} />\n                <Legend />\n              </BarChart>\n            </ResponsiveContainer>\n          </>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  renderCustomXAxisTick = ({ x, y, payload }) => {\n    const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => config.type === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"x-axis-label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={licenseConfig?.color || '#aaa'}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  mapData = (environmentUsage) => {\n    return (environmentUsage || []).map((env) => {\n      const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => env.abbreviation === config.type);\n      return {\n        ...env,\n        name: env.servername,\n        label: env.servername,\n        devicesCal: env.estimate_calcount_fordevices,\n        usersCal: env.estimate_calcount_forusers,\n        maxCores: env.max_core,\n        color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n        secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n      };\n    });\n  };\n}\n\nexport const MssqlConnectedEnvironmentUsageTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.mssqlEnvironmentUsage.loading,\n      environmentUsage: state.executiveDashboard.mssqlEnvironmentUsage,\n    };\n  },\n  dispatch => ({\n    getEnvironmentUsage: (serverId) => dispatch(loadMssqlEnvironmentUsageThunk(serverId)),\n  })\n)(EnvironmentUsageTile);\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport './DbVersionAndOsTile.local.scss';\nimport {\n  DB_VERSION_COLOR_PALETTE,\n  LINUX_OS_PRIMARY_COLOR,\n  LINUX_OS_SECONDARY_COLOR,\n  WINDOWS_OS_PRIMARY_COLOR,\n  WINDOWS_OS_SECONDARY_COLOR\n} from '../../OperatingSystemsTile/OperatingSystemsConstants';\nimport { Overflow } from 'shared/components/layout';\nimport { OptionsList } from '../../OptionsTile/components/OptionsList/OptionsList';\nimport { ChartTooltip } from '../../ChartTooltip/ChartTooltip';\nimport { connect } from 'react-redux';\nimport { loadMssqlDbVersionsThunk, loadMssqlOsTypesThunk } from '../../../store/thunks';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nclass MssqlDbVersionAndOsTile extends PureComponent {\n  componentDidMount() {\n    const { getOSType, getDBVersion } = this.props;\n    getOSType();\n    getDBVersion();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getOSType, getDBVersion } = this.props;\n      setTimeout(() => {\n        getOSType(newProps.selectedServer);\n        getDBVersion(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { isLoading, dbVersions, osTypes } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container mssql-db-version-and-os-graph-container\">\n            <Center>\n              <Loader>Loading Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const preparedOSData = this.mapOS(osTypes);\n    const preparedDBVersionsData = this.mapDBVersion(dbVersions);\n    const hasData = preparedDBVersionsData.length;\n\n    return (\n      <div className=\"exec-dashboard-graph-container mssql-db-version-and-os-graph-container\">\n        {hasData ? (\n          <div className=\"charts-container\">\n            <div className=\"chart\">\n              <div className=\"chart-title\">Operating System</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedOSData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedOSData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedOSData.map((entry, index) => (\n                      <Cell key={`cell-${entry.name}-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"chart\">\n              <div className=\"chart-title\">DB Version</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedDBVersionsData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedDBVersionsData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedDBVersionsData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapOS = (osData) => {\n    return (osData || []).map((os) => {\n      const name = os.name || os.os || '';\n      const isWindowsOS = name.indexOf('Windows') !== -1;\n      return {\n        ...os,\n        isWindowsOS,\n        value: os.value || os.count,\n        label: name,\n        color: isWindowsOS ? WINDOWS_OS_PRIMARY_COLOR : LINUX_OS_PRIMARY_COLOR,\n        secondaryColor: isWindowsOS ? WINDOWS_OS_SECONDARY_COLOR : LINUX_OS_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBVersion = (dbVersionData) => {\n    return (dbVersionData || []).map((db, index) => {\n      const isSupported = db.is_supported === 'yes';\n      return {\n        ...db,\n        name: db.version_year,\n        tooltip: `${db.version_year}${!isSupported ? ' (Not supported)' : ''}`,\n        value: db.count,\n        color: DB_VERSION_COLOR_PALETTE[index].color,\n        secondaryColor: DB_VERSION_COLOR_PALETTE[index].secondaryColor,\n        label: db.version_year,\n        hasIssues: !isSupported\n      };\n    });\n  }\n}\n\nexport const MssqlConnectedDbVersionAndOsTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.mssqlDbVersions.loading ||\n        state.executiveDashboard.flags.mssqlOsTypes.loading,\n      dbVersions: state.executiveDashboard.mssqlDbVersions,\n      osTypes: state.executiveDashboard.mssqlOsTypes,\n    };\n  },\n  dispatch => ({\n    getOSType: (serverId) => dispatch(loadMssqlOsTypesThunk(serverId)),\n    getDBVersion: (serverId) => dispatch(loadMssqlDbVersionsThunk(serverId)),\n  })\n)(MssqlDbVersionAndOsTile);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { ConnectedHardware } from './Pages/Hardware/Hardware';\nimport { ConnectedSoftware } from './Pages/Software/Software';\nimport { ConnectedVMware } from './Pages/VMware/VMware';\nimport { ConnectedPackaging } from './Pages/Packaging/Packaging';\nimport { ConnectedPreSoftware } from './Pages/PreSoftware/PreSoftware';\n\nexport const LicenseCollection = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function changeActiveTab(newActiveTab) {\n    setActiveTab(newActiveTab);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / Oracle / Usage Collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <Navigation active={activeTab} onClickCallback={changeActiveTab} />\n          </Paper.Header>\n          <Paper.Content>\n            <Switch value={activeTab}>\n              <Switch.Case value={0}>\n                <ConnectedHardware />\n              </Switch.Case>\n              <Switch.Case value={1}>\n                <ConnectedPreSoftware />\n              </Switch.Case>\n              <Switch.Case value={2}>\n                <ConnectedSoftware />\n              </Switch.Case>\n              <Switch.Case value={3}>\n                <ConnectedVMware />\n              </Switch.Case>\n              <Switch.Case value={4}>\n                <ConnectedPackaging />\n              </Switch.Case>\n            </Switch>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Navigation.local.scss';\n\nconst data = [\n  { label: '1. Hardware Data Requirements Collection' },\n  { label: '2. Pre-Software Scan Setup' },\n  { label: '3. Software Data Requirements Collection' },\n  { label: '4. vSphere Data Requirements Collection' },\n  { label: '5. Packaging Process' }\n];\n\nexport const Navigation = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"nav-chip-container\">\n      {data.map((chip, index) => (\n        <div\n          className={classnames('nav-chip', { active: active === index })}\n          key={index}\n          onClick={() => onClickCallback(index)}\n          role=\"presentation\"\n          data-qa={`chip-nav-${index}`}\n        >\n          {chip.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiMemory } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk, executeCollectionProcessThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Hardware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.hw_scan';\n\nexport class Hardware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n      request('form');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'hardware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'hardware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"hardware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Hardware scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Hardware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedHardware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.hardware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.hardware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Hardware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n  const matches = regex.exec(deflt);\n  // const json = `[${matches[2]}]`;\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default:\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return parseInt(matches[2], 10);\n          case 'str':\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n  }\n  return null;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiApplication, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Software.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.sw_scan';\n\nexport class Software extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      request,\n      entitiesStatus,\n      requestProcessData,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted\n    } = this.props;\n\n    if (wasHardwareExecuted && wasPreSoftwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'software', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    if (!wasHardwareExecuted || !wasPreSoftwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather Hardware data and Pre-Software Scan Setup before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'software' });\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting, values }) => {\n            return (\n              <Form className=\"software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Database features scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to target server, Target DBMS, Database form for the target\n                      database, SSH connection to the target host, working directory in the repo\n                      host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled, values)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Software Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiApplication} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled, formValues) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        forms={this.props.forms}\n        prototypes={this.props.prototypes}\n        disabled={disabled}\n        currentFormValues={formValues}\n      />\n    );\n  }\n}\n\nexport const ConnectedSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.software,\n    isProcessLoading: state.explorer.flags.collectionProcesses.software.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n    wasPreSoftwareExecuted: state.explorer.flags.collectionProcesses.preSoftware.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Software);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiCubeScan } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './VMware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.vsphere_scan';\n\nexport class VMware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'vmware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const { entitiesStatus, datatypes, prototypes, isProcessLoading, process } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: VMware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"vmware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>vSphere for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>SSH connection to repo server, working directory in the repo host</p>\n                  </div>\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'VMware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiCubeScan} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedVMware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.vmware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.vmware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(VMware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArchiveArrowDownOutline, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport { SuccessModal } from '../../../shared/components/overlays/SuccessModal/SuccessModal';\nimport { downloadFile } from '../../utils/downloadFile';\nimport './Packaging.local.scss';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.packager';\n\nexport class Packaging extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined,\n      successModalOpen: false,\n      failedModalOpen: false,\n      formValues: {},\n      isDownloadDisabled: true,\n      isEmailDisabled: true\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasVsphereExecuted } = this.props;\n\n    if (wasVsphereExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'packaging', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasVsphereExecuted\n    } = this.props;\n    let parameters = null;\n\n    if (!wasVsphereExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather software data before running the Packaging\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined,\n                    formValues: formatParameters(values),\n                    isDownloadDisabled: true,\n                    isEmailDisabled: true\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"packaging-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Package (HW, SW) file for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>Repo working directory, repo SSH connection</p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Paper.Footer.Left>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isDownloadDisabled}\n                      data-qa=\"download-btn\"\n                      onClick={() => {\n                        downloadFile(this.state.formValues);\n                        this.setState({ isEmailDisabled: false });\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isEmailDisabled}\n                      data-qa=\"email-btn\"\n                      onClick={() => this.sendEmail()}\n                    >\n                      Email\n                    </Button>\n                  </Paper.Footer.Left>\n                  <Paper.Footer.Right>\n                    <Button\n                      className=\"btn submit\"\n                      type=\"submit\"\n                      disabled={!dirty || isSubmitting}\n                      variant=\"contained\"\n                      data-qa=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Packaging Process ',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiArchiveArrowDownOutline} />\n            </SvgIcon>\n          )\n        })}\n        {this.renderPackagingSuccessModal()}\n        {this.renderPackagingFailedModal()}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n\n            try {\n              await RestClient.get(\n                '/execdashboard/update',\n                formatParameters({\n                  lms_repo: this.state.formValues.repo_working_dir,\n                  repo_shell: this.state.formValues.repo_shell\n                })\n              );\n\n              const isSucceeded = invocation.status === 'SUCCEEDED';\n\n              this.setState({\n                output: outputReponse.data.data.outputs,\n                invocation,\n                outputOpen: !isSucceeded,\n                successModalOpen: isSucceeded,\n                failedModalOpen: false,\n                isDownloadDisabled: !isSucceeded\n              });\n            } catch (error) {\n              console.log('[collection-packaging-exec-dashboard-update] error: ', error); // eslint-disable-line\n              this.setState({ outputOpen: false });\n              this.setState({ successModalOpen: false });\n              this.setState({ failedModalOpen: true });\n            }\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        type=\"packaging\"\n        output={this.state.output}\n        processName={processName}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        messages={['Preparing job...', 'Executing job...', 'Preparing files...']}\n      />\n    );\n  };\n\n  renderPackagingSuccessModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ successModalOpen: true });\n      },\n      close: () => {\n        this.setState({ successModalOpen: false });\n      }\n    };\n\n    return (\n      <SuccessModal open={this.state.successModalOpen} actions={actions} message=\"Packaging successfully completed!\" />\n    );\n  }\n\n  renderPackagingFailedModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ failedModalOpen: true });\n      },\n      close: () => {\n        this.setState({ failedModalOpen: false });\n      }\n    };\n\n    return (\n      <ErrorModal open={this.state.failedModalOpen} actions={actions} message=\"Packaging failed! Please check parameters and try again.\" />\n    );\n  }\n\n  sendEmail = () => {\n    const body = 'Please attach the downloaded file. It should be named \"lms-file-bundle.tar\".';\n    window.location.href = `mailto:?subject=Packaging files&body=${encodeURIComponent(body)}`;\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPackaging = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.packaging,\n    isProcessLoading: state.explorer.flags.collectionProcesses.packaging.loading,\n    wasVsphereExecuted: state.explorer.flags.collectionProcesses.software.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Packaging);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './SuccessModal.local.scss';\n\nexport const SuccessModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Success\"\n          icon={\n            <SvgIcon className=\"header-icon\">\n              <CheckCircleRoundedIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"success\">\n            <Result.Text>{message}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async query => {\n  const formatQuery = {\n    lms_repo: query.repo_working_dir,\n    repo_shell: query.repo_shell\n  };\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_PACKAGING, formatQuery);\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'lms-file-bundle.tar';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiMemory, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\nimport { Parameter } from '../../../shared/components/form/parameters';\nimport { Result } from '../../../shared/components/overlays';\n\nimport './PreSoftware.local.scss';\n\nconst PROCESS_NAME = 'vendita.oracle.rdbms.util.lms.hardcoded_hw_scan_lms';\nconst PARAMS_TO_NORMALIZE = [\n  'vendita.oracle.rdbms.util.lms.license_metric_values',\n  'vendita.oracle.rdbms.util.lms.environment_values',\n  'vendita.oracle.rdbms.util.lms.partitioning_values',\n  'vendita.oracle.rdbms.util.lms.database_edition_values',\n];\n\nexport class PreSoftware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasHardwareExecuted } = this.props;\n\n    if (wasHardwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'preSoftware', process: PROCESS_NAME });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess,\n      wasHardwareExecuted,\n    } = this.props;\n\n    if (!wasHardwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather hardware data before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    let parameters = null;\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${PROCESS_NAME} process`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {PROCESS_NAME} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: PROCESS_NAME,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'preSoftware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Pre-Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"pre-software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Pre-Software Scan Setup</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={PROCESS_NAME}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Pre-Software Scan Setup',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={PROCESS_NAME}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    if (PARAMS_TO_NORMALIZE.includes(parameter.data_type)) {\n      const normalizedParam = normalize(parameter, this.props.datatypes, this.props.prototypes, this.props.forms);\n      return <Parameter normalized={normalizedParam} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPreSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.preSoftware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.preSoftware.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(PreSoftware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { ConnectedAllocatedLicensesTable } from './components/AllocatedLicensesTable/AllocatedLicensesTable';\n\nexport class LicenseAllocation extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Header title=\"Compliance / Oracle / License allocation\" />\n        <Main>\n          <Paper>\n            <Paper.Content>\n              <ConnectedAllocatedLicensesTable />\n            </Paper.Content>\n          </Paper>\n        </Main>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadLicenseAllocationThunk } from '../../store/thunks';\nimport { getLicensesData, licensesLoading } from '../../store/selectors';\nimport { Center, LightTooltip, Table } from 'shared/components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPencil } from '@mdi/js';\nimport { AssignLicenseModal } from '../assign-license-modal/AssignLicenseModal';\n\nimport './AllocatedLicensesTable.local.scss';\n\nconst columns = [\n  { label: 'Server' },\n  { label: 'Product' },\n  { label: 'Metric' },\n  { label: 'Term' },\n  { label: 'Type' },\n  { label: 'Assigned' },\n  { label: 'Available' },\n  { label: '' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"tooltip-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"tooltip-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index, openLicenseAssignments) => (\n  <Table.Row hover key={`${row.license_id}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.host_name}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.product_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.license_metric}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.license_term}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.license_type}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.licenses_assigned}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.licenses_available}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-target-cell action-cell\">\n        <LightTooltip placement=\"top\" title=\"Edit assignment\">\n          <SvgIcon onClick={() => openLicenseAssignments(row)}>\n            <Icon path={mdiPencil} />\n          </SvgIcon>\n        </LightTooltip>\n      </span>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, licenses, noDataMessage, tableProps, openLicenseAssignments }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (licenses.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{licenses.map((row, index) => rowRenderer(row, index, openLicenseAssignments))}</Table>;\n};\n\nclass AllocatedLicensesTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'product_name', order: 'desc' },\n      assignLicenseModalOpened: false,\n      selectedAssignment: null\n    };\n  }\n\n  componentDidMount() {\n    this.props.getLicenses();\n  }\n\n  render() {\n    const { licensesData, isLoading } = this.props;\n    const { sortBehavior, assignLicenseModalOpened, selectedAssignment } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const assignLicenseModalActions = {\n      open: (assignmentToEdit) => {\n        this.setState({ assignLicenseModalOpened: true, selectedAssignment: assignmentToEdit });\n      },\n      close: () => {\n        this.setState({ assignLicenseModalOpened: false, selectedAssignment: null });\n      }\n    };\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          licenses={licensesData}\n          tableProps={tableProps}\n          openLicenseAssignments={assignLicenseModalActions.open}\n          noDataMessage=\"No License Data Available\"\n        />\n\n        <AssignLicenseModal modalActions={assignLicenseModalActions} open={assignLicenseModalOpened} selectedAssignment={selectedAssignment} />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n}\n\nexport const ConnectedAllocatedLicensesTable = connect(\n  state => ({\n    isLoading: licensesLoading(state),\n    licensesData: getLicensesData(state)\n  }),\n  dispatch => ({\n    getLicenses: () => dispatch(loadLicenseAllocationThunk())\n  })\n)(AllocatedLicensesTable);\n","import React, { useEffect, useRef } from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiLicense } from '@mdi/js';\nimport { connect } from 'react-redux';\nimport { getAvailableServersData, getLicensesData } from '../../store/selectors';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { Column, Paper, Row } from 'shared/components/layout';\nimport { Form, Formik } from 'formik';\nimport {\n  loadAvailableServersThunk,\n  loadLicenseAllocationThunk,\n  updateLicenseAssignmentThunk\n} from '../../store/thunks';\nimport { Integer } from '../../../shared/components/form/editors/Generic';\nimport { SubmitButtonNoDirty } from '../../../shared/components/form/SubmitButtonNoDirty';\n\nimport './AssignLicenseModal.local.scss';\n\nexport const AssignLicenseModal = ({ modalActions, open, selectedAssignment }) => {\n  return (\n    <>\n      <Modal open={open} actions={modalActions}>\n        <ConnectedAssignLicense closeModal={modalActions.close} selectedAssignment={selectedAssignment} />\n      </Modal>\n    </>\n  );\n};\n\nconst AssignLicense = (\n  {\n    licensesData,\n    availableServers,\n    getAvailableServers,\n    updateLicenseAssignment,\n    selectedAssignment,\n    closeModal,\n    refreshLicenses\n  }) => {\n  const formRef = useRef();\n  const initialValues = {\n    server_id: selectedAssignment.server_id || '',\n    license_id: selectedAssignment.license_id || '',\n    metric: selectedAssignment.license_metric || '',\n    term: selectedAssignment.license_term || '',\n    type: selectedAssignment.license_type || '',\n    quantity: selectedAssignment.licenses_available || '',\n  };\n\n  const extraValidations = (values) => {\n    const errors = {};\n    if (values.license_id) {\n      const selectedLicense = licensesData.find((license) => license.license_id === values.license_id);\n      if (selectedLicense) {\n        const available = selectedLicense.licenses_available || 0;\n        const assigned = selectedLicense.licenses_assigned || 0;\n\n        if (!values.quantity) {\n          errors.quantity = 'Please specify positive or negative quantity';\n        } else if (values.quantity < 0 && Math.abs(values.quantity) > assigned) {\n          errors.quantity = `You have only ${assigned} assigned licenses. You can't decrease more.`;\n        } else if (values.quantity > 0 && values.quantity > available) {\n          errors.quantity = `You have only ${available} available licenses`;\n        }\n      }\n    }\n    return errors;\n  };\n\n  const licenseOptions = (licensesData || []).map((license) => {\n    return {\n      label: license.product_name,\n      value: license.license_id,\n      disabled: license.licenses_available <= 0\n    };\n  });\n\n  const availableServersOptions = (availableServers || []).map((serverInfo) => {\n    return {\n      label: `${serverInfo.host_name} (${serverInfo.ip_address})`,\n      value: serverInfo.server_id\n    };\n  });\n\n  useEffect(() => {\n    getAvailableServers();\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '700px',\n        minHeight: '565px',\n        maxHeight: '800px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiLicense} />\n          </SvgIcon>\n        }\n        title=\"Assign Licenses\"\n        desc=\"Select target server and assign licenses to it\"\n        formikRef={formRef}\n      />\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={(values) => {\n          const isInitialAssignment = !selectedAssignment.server_id;\n          updateLicenseAssignment(isInitialAssignment, values).then(() => {\n            refreshLicenses();\n            closeModal();\n          });\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form className=\"assign-license-form\">\n                  <Row>\n                    <Column xs={12}>\n                      <Text\n                        type=\"text\"\n                        name=\"server_id\"\n                        label=\"Server\"\n                        options={availableServersOptions}\n                        value={initialValues.server_id}\n                        required\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs={12}>\n                      <Text\n                        type=\"text\"\n                        name=\"license_id\"\n                        label=\"License\"\n                        options={licenseOptions}\n                        value={initialValues.license_id}\n                        disabled\n                        required\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs=\"6\">\n                      <Text\n                        type=\"text\"\n                        name=\"term\"\n                        label=\"Term\"\n                        value={initialValues.term}\n                        disabled\n                      />\n                    </Column>\n                    <Column xs=\"6\">\n                      <Text\n                        type=\"text\"\n                        name=\"type\"\n                        label=\"Type\"\n                        value={initialValues.type}\n                        disabled\n                        required\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs=\"8\">\n                      <Text\n                        type=\"text\"\n                        name=\"metric\"\n                        label=\"Metric\"\n                        value={initialValues.metric}\n                        disabled\n                      />\n                    </Column>\n                    <Column xs=\"4\">\n                      <Integer\n                        type=\"text\"\n                        name=\"quantity\"\n                        label=\"Quantity\"\n                        value={initialValues.quantity}\n                        required\n                      />\n                    </Column>\n                  </Row>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButtonNoDirty variant=\"contained\" confirmation>\n                    Submit\n                  </SubmitButtonNoDirty>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport const ConnectedAssignLicense = connect(\n  state => ({\n    licensesData: getLicensesData(state),\n    availableServers: getAvailableServersData(state),\n  }),\n  dispatch => ({\n    getAvailableServers: () => dispatch(loadAvailableServersThunk()),\n    updateLicenseAssignment: (isInitialAssignment, payload) => dispatch(updateLicenseAssignmentThunk(isInitialAssignment, payload)),\n    refreshLicenses: () => dispatch(loadLicenseAllocationThunk())\n  })\n)(AssignLicense);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Center, Main, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\nimport { downloadFile } from 'shared/lib/download-file/download-file';\nimport { RestClient } from '../shared/lib/rest';\nimport { CONSTANTS } from '../config';\nimport { LimitlessTooltip } from '../shared/components/tooltip/Tooltip';\n\nimport './Licensing.local.scss';\n\nexport const Licensing = () => {\n  const [selectedSupportRenewalFile, setSelectedSupportRenewalFile] = useState(null);\n  const [supportRenewalFileResult, setSupportRenewalFileResult] = useState('');\n  const [uploadSupportRenewalFileDisabled, setUploadSupportRenewalFileDisabled] = useState(true);\n  const supportRenewalFileName = selectedSupportRenewalFile?.name || 'No file chosen';\n\n  const [selectedMasLicenseFile, setSelectedMasLicenseFile] = useState(null);\n  const [masLicenseFileResult, setMasLicenseFileResult] = useState('');\n  const [selectedMasLicenseFileDisabled, setSelectedMasLicenseFileDisabled] = useState(true);\n  const masLicenseFileName = selectedMasLicenseFile?.name || 'No file chosen';\n\n  // const formRef = useRef();\n\n  const uploadSupportRenewalFile = () => {\n    if (!selectedSupportRenewalFile) {\n      setSupportRenewalFileResult('error');\n\n      return;\n    }\n    setSupportRenewalFileResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedSupportRenewalFile);\n\n    RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_SUPPORT_RENEWAL_FILE, data)\n      .then(() => setSupportRenewalFileResult(''))\n      .catch(() => setSupportRenewalFileResult(''));\n  };\n\n  const uploadMasLicenseFile = () => {\n    if (!selectedMasLicenseFile) {\n      setMasLicenseFileResult('error');\n\n      return;\n    }\n    setMasLicenseFileResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedMasLicenseFile);\n\n    RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_MAS_LICENSE_FILE, data)\n      .then(() => setMasLicenseFileResult(''))\n      .catch(() => setMasLicenseFileResult(''));\n  };\n\n  return (\n    <>\n      <Header title=\"Compliance / Oracle / License Collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <span className=\"licensing-title\">\n              By providing MAS with your organization&apos;s Oracle license information,\n              we can help you optimize your Oracle investment. By comparing your Oracle product\n              usage with the licenses you purchased, we can identify any gaps in license coverage,\n              inform you of your financial exposure from an Oracle License Audit, and help identify\n              opportunities to save by reviewing your existing Oracle license strategy.\n              To get started, simply use one of the methods below to load and review\n              your Oracle license portfolio.\n            </span>\n          </Paper.Header>\n          <Paper.Content>\n            <div className=\"widgets-container\">\n              <div className=\"widget\">\n                <h3 className=\"widget-title\">Oracle Support Renewal File</h3>\n                <p className=\"widget-desc\">\n                  Use this option if you don&apos;t have, or cannot easily obtain, your organization&apos;s\n                  license information.<br /><br />\n                  This option uses the Detailed Support Renewal report that you can produce from within the\n                  Oracle Support Renewal Portal. Simply create and download the CSV file, browse to that\n                  file using the file browser below, then click Upload Support Renewal. We will determine\n                  your Oracle licenses from the file and ask you to confirm them before saving them\n                  in MAS. It&apos;s that easy!\n                </p>\n\n                <Switch value={supportRenewalFileResult}>\n                  <Switch.Case value=\"\">\n                    <div className=\"actions-container\">\n                      <label htmlFor=\"renewal-file-upload\" className=\"browse-file\">\n                        Choose file\n                        <input\n                          type=\"file\"\n                          id=\"renewal-file-upload\"\n                          name=\"csv\"\n                          accept=\".csv\"\n                          onChange={(event) => {\n                            setSelectedSupportRenewalFile(event.target.files[0]);\n                            setUploadSupportRenewalFileDisabled(!event.target.files[0]);\n                          }}\n                        />\n                      </label>\n                      <LimitlessTooltip placement=\"bottom\" title={supportRenewalFileName}>\n                        <span className=\"file-name\">{supportRenewalFileName}</span>\n                      </LimitlessTooltip>\n                      <Button className=\"upload-file-btn\" disabled={uploadSupportRenewalFileDisabled} onClick={uploadSupportRenewalFile}>\n                        Upload Support Renewal File\n                      </Button>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"loading\">\n                    <div className=\"loading-container\">\n                      <Center>\n                        <Loader>Uploading file...</Loader>\n                      </Center>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"error\">\n                    <div className=\"failed-result-container\">\n                      <Result type=\"fail\">\n                        <Result.Text>Something went wrong with uploading the file</Result.Text>\n                      </Result>\n                      <Button onClick={() => setSupportRenewalFileResult('')}>Back</Button>\n                    </div>\n                  </Switch.Case>\n                </Switch>\n              </div>\n              <div className=\"widget\">\n                <h3 className=\"widget-title\">MAS License Template</h3>\n                <p className=\"widget-desc\">\n                  Use this option if you have your organization&apos;s Oracle license information.<br /><br />\n                  This option offers a fast and accurate method for entering your Oracle license data. Simply\n                  download and complete the spreadsheet. Once all of your licenses have been added to the spreadsheet,\n                  simply select the file using the file browser, and click Upload MAS License File.\n                </p>\n                <Button className=\"download-template-btn\" onClick={() => downloadFile('/download/license')}>\n                  Download template file here\n                </Button>\n\n                <Switch value={masLicenseFileResult}>\n                  <Switch.Case value=\"\">\n                    <div className=\"actions-container\">\n                      <label htmlFor=\"mas-file-upload\" className=\"browse-file\">\n                        Choose file\n                        <input\n                          type=\"file\"\n                          id=\"mas-file-upload\"\n                          name=\"csv\"\n                          accept=\".csv\"\n                          onChange={(event) => {\n                            setSelectedMasLicenseFile(event.target.files[0]);\n                            setSelectedMasLicenseFileDisabled(!event.target.files[0]);\n                          }}\n                        />\n                      </label>\n                      <LimitlessTooltip placement=\"bottom\" title={masLicenseFileName}>\n                        <span className=\"file-name\">{masLicenseFileName}</span>\n                      </LimitlessTooltip>\n                      <Button className=\"upload-file-btn\" disabled={selectedMasLicenseFileDisabled} onClick={uploadMasLicenseFile}>\n                        Upload MAS License File\n                      </Button>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"loading\">\n                    <div className=\"loading-container\">\n                      <Center>\n                        <Loader>Uploading file...</Loader>\n                      </Center>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"error\">\n                    <div className=\"failed-result-container\">\n                      <Result type=\"fail\">\n                        <Result.Text>Something went wrong with uploading the file</Result.Text>\n                      </Result>\n                      <Button onClick={() => setMasLicenseFileResult('')}>Back</Button>\n                    </div>\n                  </Switch.Case>\n                </Switch>\n              </div>\n              {\n                /* <div className=\"widget\">\n                <h3 className=\"widget-title\">Manual License Entry</h3>\n\n                <Formik\n                  initialValues={{\n                    csiNumber: '',\n                    productName: '',\n                    licenseType: '',\n                    licenseMetric: '',\n                    licenseTerm: '',\n                    licenseQuantity: '',\n                    licenseStatus: '',\n                    licensePurchased: '',\n                    isSupported: '',\n                  }}\n                  onSubmit={values => {\n                    console.log(values);\n                  }}\n                  innerRef={formRef}\n                >\n                  {({ values }) => {\n                    return (\n                      <>\n                        <Form className=\"license-entry-form\">\n                          <Section>\n                            <Row>\n                              <Text name=\"csiNumber\" label=\"CSI Number\" value={values.csiNumber} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"productName\" label=\"Product Name\" value={values.productName} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseType\" label=\"License Type\" value={values.licenseType} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseMetric\" label=\"License Metric\" value={values.licenseMetric} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseTerm\" label=\"License Term\" value={values.licenseTerm} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseQuantity\" label=\"License Quantity\" value={values.licenseQuantity} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseStatus\" label=\"License Status\" value={values.licenseStatus} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licensePurchased\" label=\"License Purchased\" value={values.licensePurchased} required />\n                            </Row>\n                            <Text name=\"isSupported\" label=\"Is Supported\" value={values.isSupported} required />\n                          </Section>\n                        </Form>\n                        <div className=\"save-license-btn\">\n                          <SubmitButton>Save License Information</SubmitButton>\n                        </div>\n                      </>\n                    );\n                  }}\n                </Formik>\n              </div> */\n              }\n            </div>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import { en } from './en';\n\nexport const i18nMessages = {\n  en,\n};\n","import dashboard from './dashboard.json';\nimport general from './general.json';\nimport session from './session.json';\nimport header from './header.json';\n\nexport const en = {\n  ...dashboard,\n  ...general,\n  ...session,\n  ...header,\n};\n","import 'babel-polyfill';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport store from 'core/store';\nimport { App } from './app';\nimport { CONSTANTS } from './app/config';\nimport { i18nMessages } from './i18n';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport './assets/fonts/Lato-Regular.ttf';\nimport './assets/fonts/OpenSans-Regular.ttf';\nimport './style.scss';\n\nconst persistor = persistStore(store);\n\nconst provider = (\n  <IntlProvider locale={CONSTANTS.INTL} messages={i18nMessages[CONSTANTS.INTL]}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter basename={process.env.NODE_ENV === 'development' ? '/' : '/ui/#/'}>\n          <Switch>\n            <Route component={App} path=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </IntlProvider>\n);\n\nrender(provider, document.getElementById('root'));\n","var map = {\n\t\"./af\": 721,\n\t\"./af.js\": 721,\n\t\"./ar\": 722,\n\t\"./ar-dz\": 723,\n\t\"./ar-dz.js\": 723,\n\t\"./ar-kw\": 724,\n\t\"./ar-kw.js\": 724,\n\t\"./ar-ly\": 725,\n\t\"./ar-ly.js\": 725,\n\t\"./ar-ma\": 726,\n\t\"./ar-ma.js\": 726,\n\t\"./ar-sa\": 727,\n\t\"./ar-sa.js\": 727,\n\t\"./ar-tn\": 728,\n\t\"./ar-tn.js\": 728,\n\t\"./ar.js\": 722,\n\t\"./az\": 729,\n\t\"./az.js\": 729,\n\t\"./be\": 730,\n\t\"./be.js\": 730,\n\t\"./bg\": 731,\n\t\"./bg.js\": 731,\n\t\"./bm\": 732,\n\t\"./bm.js\": 732,\n\t\"./bn\": 733,\n\t\"./bn-bd\": 734,\n\t\"./bn-bd.js\": 734,\n\t\"./bn.js\": 733,\n\t\"./bo\": 735,\n\t\"./bo.js\": 735,\n\t\"./br\": 736,\n\t\"./br.js\": 736,\n\t\"./bs\": 737,\n\t\"./bs.js\": 737,\n\t\"./ca\": 738,\n\t\"./ca.js\": 738,\n\t\"./cs\": 739,\n\t\"./cs.js\": 739,\n\t\"./cv\": 740,\n\t\"./cv.js\": 740,\n\t\"./cy\": 741,\n\t\"./cy.js\": 741,\n\t\"./da\": 742,\n\t\"./da.js\": 742,\n\t\"./de\": 743,\n\t\"./de-at\": 744,\n\t\"./de-at.js\": 744,\n\t\"./de-ch\": 745,\n\t\"./de-ch.js\": 745,\n\t\"./de.js\": 743,\n\t\"./dv\": 746,\n\t\"./dv.js\": 746,\n\t\"./el\": 747,\n\t\"./el.js\": 747,\n\t\"./en-au\": 748,\n\t\"./en-au.js\": 748,\n\t\"./en-ca\": 749,\n\t\"./en-ca.js\": 749,\n\t\"./en-gb\": 750,\n\t\"./en-gb.js\": 750,\n\t\"./en-ie\": 751,\n\t\"./en-ie.js\": 751,\n\t\"./en-il\": 752,\n\t\"./en-il.js\": 752,\n\t\"./en-in\": 753,\n\t\"./en-in.js\": 753,\n\t\"./en-nz\": 754,\n\t\"./en-nz.js\": 754,\n\t\"./en-sg\": 755,\n\t\"./en-sg.js\": 755,\n\t\"./eo\": 756,\n\t\"./eo.js\": 756,\n\t\"./es\": 757,\n\t\"./es-do\": 758,\n\t\"./es-do.js\": 758,\n\t\"./es-mx\": 759,\n\t\"./es-mx.js\": 759,\n\t\"./es-us\": 760,\n\t\"./es-us.js\": 760,\n\t\"./es.js\": 757,\n\t\"./et\": 761,\n\t\"./et.js\": 761,\n\t\"./eu\": 762,\n\t\"./eu.js\": 762,\n\t\"./fa\": 763,\n\t\"./fa.js\": 763,\n\t\"./fi\": 764,\n\t\"./fi.js\": 764,\n\t\"./fil\": 765,\n\t\"./fil.js\": 765,\n\t\"./fo\": 766,\n\t\"./fo.js\": 766,\n\t\"./fr\": 767,\n\t\"./fr-ca\": 768,\n\t\"./fr-ca.js\": 768,\n\t\"./fr-ch\": 769,\n\t\"./fr-ch.js\": 769,\n\t\"./fr.js\": 767,\n\t\"./fy\": 770,\n\t\"./fy.js\": 770,\n\t\"./ga\": 771,\n\t\"./ga.js\": 771,\n\t\"./gd\": 772,\n\t\"./gd.js\": 772,\n\t\"./gl\": 773,\n\t\"./gl.js\": 773,\n\t\"./gom-deva\": 774,\n\t\"./gom-deva.js\": 774,\n\t\"./gom-latn\": 775,\n\t\"./gom-latn.js\": 775,\n\t\"./gu\": 776,\n\t\"./gu.js\": 776,\n\t\"./he\": 777,\n\t\"./he.js\": 777,\n\t\"./hi\": 778,\n\t\"./hi.js\": 778,\n\t\"./hr\": 779,\n\t\"./hr.js\": 779,\n\t\"./hu\": 780,\n\t\"./hu.js\": 780,\n\t\"./hy-am\": 781,\n\t\"./hy-am.js\": 781,\n\t\"./id\": 782,\n\t\"./id.js\": 782,\n\t\"./is\": 783,\n\t\"./is.js\": 783,\n\t\"./it\": 784,\n\t\"./it-ch\": 785,\n\t\"./it-ch.js\": 785,\n\t\"./it.js\": 784,\n\t\"./ja\": 786,\n\t\"./ja.js\": 786,\n\t\"./jv\": 787,\n\t\"./jv.js\": 787,\n\t\"./ka\": 788,\n\t\"./ka.js\": 788,\n\t\"./kk\": 789,\n\t\"./kk.js\": 789,\n\t\"./km\": 790,\n\t\"./km.js\": 790,\n\t\"./kn\": 791,\n\t\"./kn.js\": 791,\n\t\"./ko\": 792,\n\t\"./ko.js\": 792,\n\t\"./ku\": 793,\n\t\"./ku.js\": 793,\n\t\"./ky\": 794,\n\t\"./ky.js\": 794,\n\t\"./lb\": 795,\n\t\"./lb.js\": 795,\n\t\"./lo\": 796,\n\t\"./lo.js\": 796,\n\t\"./lt\": 797,\n\t\"./lt.js\": 797,\n\t\"./lv\": 798,\n\t\"./lv.js\": 798,\n\t\"./me\": 799,\n\t\"./me.js\": 799,\n\t\"./mi\": 800,\n\t\"./mi.js\": 800,\n\t\"./mk\": 801,\n\t\"./mk.js\": 801,\n\t\"./ml\": 802,\n\t\"./ml.js\": 802,\n\t\"./mn\": 803,\n\t\"./mn.js\": 803,\n\t\"./mr\": 804,\n\t\"./mr.js\": 804,\n\t\"./ms\": 805,\n\t\"./ms-my\": 806,\n\t\"./ms-my.js\": 806,\n\t\"./ms.js\": 805,\n\t\"./mt\": 807,\n\t\"./mt.js\": 807,\n\t\"./my\": 808,\n\t\"./my.js\": 808,\n\t\"./nb\": 809,\n\t\"./nb.js\": 809,\n\t\"./ne\": 810,\n\t\"./ne.js\": 810,\n\t\"./nl\": 811,\n\t\"./nl-be\": 812,\n\t\"./nl-be.js\": 812,\n\t\"./nl.js\": 811,\n\t\"./nn\": 813,\n\t\"./nn.js\": 813,\n\t\"./oc-lnc\": 814,\n\t\"./oc-lnc.js\": 814,\n\t\"./pa-in\": 815,\n\t\"./pa-in.js\": 815,\n\t\"./pl\": 816,\n\t\"./pl.js\": 816,\n\t\"./pt\": 817,\n\t\"./pt-br\": 818,\n\t\"./pt-br.js\": 818,\n\t\"./pt.js\": 817,\n\t\"./ro\": 819,\n\t\"./ro.js\": 819,\n\t\"./ru\": 820,\n\t\"./ru.js\": 820,\n\t\"./sd\": 821,\n\t\"./sd.js\": 821,\n\t\"./se\": 822,\n\t\"./se.js\": 822,\n\t\"./si\": 823,\n\t\"./si.js\": 823,\n\t\"./sk\": 824,\n\t\"./sk.js\": 824,\n\t\"./sl\": 825,\n\t\"./sl.js\": 825,\n\t\"./sq\": 826,\n\t\"./sq.js\": 826,\n\t\"./sr\": 827,\n\t\"./sr-cyrl\": 828,\n\t\"./sr-cyrl.js\": 828,\n\t\"./sr.js\": 827,\n\t\"./ss\": 829,\n\t\"./ss.js\": 829,\n\t\"./sv\": 830,\n\t\"./sv.js\": 830,\n\t\"./sw\": 831,\n\t\"./sw.js\": 831,\n\t\"./ta\": 832,\n\t\"./ta.js\": 832,\n\t\"./te\": 833,\n\t\"./te.js\": 833,\n\t\"./tet\": 834,\n\t\"./tet.js\": 834,\n\t\"./tg\": 835,\n\t\"./tg.js\": 835,\n\t\"./th\": 836,\n\t\"./th.js\": 836,\n\t\"./tk\": 837,\n\t\"./tk.js\": 837,\n\t\"./tl-ph\": 838,\n\t\"./tl-ph.js\": 838,\n\t\"./tlh\": 839,\n\t\"./tlh.js\": 839,\n\t\"./tr\": 840,\n\t\"./tr.js\": 840,\n\t\"./tzl\": 841,\n\t\"./tzl.js\": 841,\n\t\"./tzm\": 842,\n\t\"./tzm-latn\": 843,\n\t\"./tzm-latn.js\": 843,\n\t\"./tzm.js\": 842,\n\t\"./ug-cn\": 844,\n\t\"./ug-cn.js\": 844,\n\t\"./uk\": 845,\n\t\"./uk.js\": 845,\n\t\"./ur\": 846,\n\t\"./ur.js\": 846,\n\t\"./uz\": 847,\n\t\"./uz-latn\": 848,\n\t\"./uz-latn.js\": 848,\n\t\"./uz.js\": 847,\n\t\"./vi\": 849,\n\t\"./vi.js\": 849,\n\t\"./x-pseudo\": 850,\n\t\"./x-pseudo.js\": 850,\n\t\"./yo\": 851,\n\t\"./yo.js\": 851,\n\t\"./zh-cn\": 852,\n\t\"./zh-cn.js\": 852,\n\t\"./zh-hk\": 853,\n\t\"./zh-hk.js\": 853,\n\t\"./zh-mo\": 854,\n\t\"./zh-mo.js\": 854,\n\t\"./zh-tw\": 855,\n\t\"./zh-tw.js\": 855\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1503;","/**\n * A IFFE to ignore warnings of prop-types validation\n * from Material-UI components used with scoped-css-loader.\n *\n * They are invalid and will not appear in prod builds, they are\n * cumbersome for development for now.\n *\n * TODO: investigate if there is another option when there is time.\n * For now it looks like there is not.\n */\n\n/* eslint-disable */\n(function clearMUIDataVWarnings() {\n  const error = console.error.bind(console);\n  const partial = /Warning:.*data-v-/;\n\n  console.error = (message, ...args) => {\n    if (typeof message === 'string' && message.search(partial) !== -1) {\n      return;\n    }\n\n    error(message, ...args);\n  };\n})();\n\n/* eslint-enable */\n","module.exports = \"../fonts/2d36b1a925432bae7f3c53a340868c6e.ttf\";","module.exports = \"../fonts/3ed9575dcc488c3e3a5bd66620bdf5a4.ttf\";"],"sourceRoot":""}