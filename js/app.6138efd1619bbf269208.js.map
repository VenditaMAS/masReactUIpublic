{"version":3,"sources":["webpack:///./src/app/config.js","webpack:///./src/app/shared/components/form/editors/Generic.jsx","webpack:///./src/app/shared/components/overlays/Result/Result.jsx","webpack:///./src/app/explorer/store/actions/index.js","webpack:///./src/app/explorer/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/actions.js","webpack:///./src/app/users-manager/store/actions/index.js","webpack:///./src/app/entities/actions.js","webpack:///./src/app/session/store/actions/index.js","webpack:///./src/app/shared/store/actions/index.js","webpack:///./src/app/shared/components/tooltip/Tooltip.jsx","webpack:///./src/app/shared/components/form/editors/Custom.jsx","webpack:///./src/app/entities/utils/privileges.js","webpack:///./src/app/shared/components/form/SubmitButton.jsx","webpack:///./src/app/job-process/store/constants.js","webpack:///./src/app/explorer/store/selectors/index.js","webpack:///./src/app/users-manager/components/AvatarCard/AvatarCard.jsx","webpack:///./src/app/shared/components/form/editors/field-level-validations.js","webpack:///./src/app/shared/store/state/index.js","webpack:///./src/app/executive-dashboard/store/actions/index.js","webpack:///./src/app/session/store/selectors/index.js","webpack:///./src/app/users-manager/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/thunks.js","webpack:///./src/app/users-manager/components/SearchableList/SearchableList.jsx","webpack:///./src/app/shared/components/form/parameters/variants.jsx","webpack:///./src/app/job-process/store/selectors.js","webpack:///./src/app/core/components/Ensure/Ensure.jsx","webpack:///./src/app/entities/selectors.js","webpack:///./src/app/users-manager/store/mappers/index.js","webpack:///./src/app/license-collection/utils/formikFormatter.js","webpack:///./src/app/shared/components/layout/NavigationTab/NavigationTab.jsx","webpack:///./src/app/users-manager/store/selectors/index.js","webpack:///./src/app/session/store/state/index.js","webpack:///./src/app/shared/api/protocols.js","webpack:///./src/app/explorer/components/NavigationTab/NavigationTab.jsx","webpack:///./src/app/shared/api/schedule.js","webpack:///./src/app/shared/api/accounts.js","webpack:///./src/app/entities/components/Switch.jsx","webpack:///./src/app/core/store/index.js","webpack:///./src/app/shared/components/simple-search-input/simple-search-input.jsx","webpack:///./src/app/job-process/job-parameters.jsx","webpack:///./src/app/job-process/containers/notifications/notifications.jsx","webpack:///./src/app/shared/api/process.js","webpack:///./src/app/license-collection/utils/normalizeParameter.jsx","webpack:///./src/app/license-collection/controls/TextField/TextField.jsx","webpack:///./src/app/license-collection/controls/DropdownField/DropdownField.jsx","webpack:///./src/app/license-collection/components/OutputModal/OutputModal.jsx","webpack:///./src/app/executive-dashboard/store/thunks/index.js","webpack:///./src/app/shared/components/range-date-picker/constants.js","webpack:///./src/app/explorer/store/mappers/index.js","webpack:///./src/app/core/components/Header/Header.jsx","webpack:///./src/app/dashboard/store/state/index.js","webpack:///./src/app/dashboard/store/actions/index.js","webpack:///./src/app/shared/api/delete.js","webpack:///./src/app/shared/components/form/parameters/normalizeParameter.js","webpack:///./src/app/entities/mappers.js","webpack:///./src/app/explorer/components/ActionCard/ActionCard.jsx","webpack:///./src/app/explorer/components/CardsLayout/CardsLayout.jsx","webpack:///./src/app/shared/api/invocation.js","webpack:///./src/app/shared/lib/want/index.jsx","webpack:///./src/app/shared/components/overlays/Modal/Modal.jsx","webpack:///./src/app/shared/components/form/parameters/index.jsx","webpack:///./src/app/shared/api/namespace.js","webpack:///./src/app/shared/api/form.js","webpack:///./src/app/entities/components/form-actions/FormEditor.jsx","webpack:///./src/app/license-collection/utils/sendToEmail.js","webpack:///./src/app/license-collection/utils/copyToClipboard.js","webpack:///./src/app/executive-dashboard/store/mappers/index.js","webpack:///./src/app/shared/components/center/center.component.jsx","webpack:///./src/app/shared/lib/react-dates/isBeforeDay.js","webpack:///./src/app/shared/components/LightTooltip/LightTooltip.jsx","webpack:///./src/app/shared/components/layout/Overflow/Overflow.jsx","webpack:///./src/app/shared/components/controls/Checkbox/Checkbox.jsx","webpack:///./src/app/shared/components/overlays/ModalHeader/ModalHeader.jsx","webpack:///./src/app/shared/lib/polling/index.js","webpack:///./src/app/jobs/actions/delete/DeleteJobModal.jsx","webpack:///./src/app/jobs/containers/Schedule/Schedule.jsx","webpack:///./src/app/entities/components/namespace-actions/NewNamespace.jsx","webpack:///./src/app/entities/components/form-actions/FormModal.jsx","webpack:///./src/app/explorer/containers/Forms/ServerForm.jsx","webpack:///./src/app/explorer/containers/Forms/DatabaseForm.jsx","webpack:///./src/app/shared/api/datatypes.js","webpack:///./src/app/job-process/store/actions.js","webpack:///./src/app/license-collection/utils/getOutputText.js","webpack:///./src/app/executive-dashboard/components/ServerCard/ServerCard.jsx","webpack:///./src/app/executive-dashboard/components/ServersTile/ServersTile.jsx","webpack:///./src/app/executive-dashboard/utils/HorizontalStackedBar/HorizontalStackedBar.jsx","webpack:///./src/app/executive-dashboard/components/DatabasesTile/DatabasesTile.jsx","webpack:///./src/app/session/store/effects/be-version/be-version.effect.js","webpack:///./src/app/jobs/components/total-jobs-count/TotalJobsCount.jsx","webpack:///./src/app/shared/api/alias.js","webpack:///./src/app/users-manager/users/pages/UserView/containers/ChangePassword.jsx","webpack:///./src/app/session/store/reducers/reducer.js","webpack:///./src/app/dashboard/store/tasks.js","webpack:///./src/app/dashboard/store/reducers/reducer.js","webpack:///./src/app/shared/store/reducers/reducer.js","webpack:///./src/app/core/store/reducers/reducer.js","webpack:///./src/app/core/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/wishes.jsx","webpack:///./src/app/entities/components/form-actions/utils.js","webpack:///./src/app/shared/api/privileges.js","webpack:///./src/app/explorer/components/DbObjects/Sidebar.jsx","webpack:///./src/app/explorer/components/DbObjects/Viewer.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/constants.jsx","webpack:///./src/app/job-process/store/tasks.js","webpack:///./src/app/license-collection/components/ListOutput/ListOutput.jsx","webpack:///./src/app/session/store/reducers/index.js","webpack:///./src/app/shared/lib/bind-reducer/bind-reducer.js","webpack:///./src/app/shared/lib/action-creator/action-states.js","webpack:///./src/app/shared/lib/action-creator/action-creator.class.js","webpack:///./src/app/shared/lib/slugify/slugify.js","webpack:///./src/app/shared/lib/create-url/create-url.js","webpack:///./src/app/shared/lib/number-pretty/number-pretty.js","webpack:///./src/app/shared/lib/smart-number/smart-number.js","webpack:///./src/app/shared/lib/capitalize-first-letter/capitalize-first-letter.js","webpack:///./src/app/shared/lib/patterns/email.js","webpack:///./src/app/shared/lib/patterns/phone-number.js","webpack:///./src/app/shared/lib/patterns/url.js","webpack:///./src/app/shared/lib/random-generator/string.js","webpack:///./src/app/shared/lib/random-generator/unique-id.js","webpack:///./src/app/shared/lib/function-placeholder/index.js","webpack:///./src/app/shared/lib/delay/index.js","webpack:///./src/app/shared/lib/react-dates/isInclusivelyAfterDay.js","webpack:///./src/app/shared/lib/redux-utils/actions.utils.js","webpack:///./src/app/shared/lib/redux-utils/reducers.utils.js","webpack:///./src/app/shared/lib/workload/parseData.js","webpack:///./src/app/session/store/effects/index.js","webpack:///./src/app/shared/lib/rest/try-async.js","webpack:///./src/app/shared/lib/rest/rest-client.js","webpack:///./src/app/session/pages/login/login.page.jsx","webpack:///./src/app/session/components/container/container.component.jsx","webpack:///./src/app/session/pages/login/components/form/form.component.jsx","webpack:///./src/app/shared/components/rest-errors/rest-errors.component.jsx","webpack:///./src/app/shared/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/workload-graph/workload-graph.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-tooltip/custom-tooltip.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-axis-tick/custom-axis-tick.component.jsx","webpack:///./src/app/shared/components/circle-img/circle-img.component.jsx","webpack:///./src/app/shared/components/number-label/number-label.component.jsx","webpack:///./src/app/shared/components/string-label/string-label.component.jsx","webpack:///./src/app/shared/components/search-input/search-input.component.jsx","webpack:///./src/app/shared/components/dropdown/dropdown.component.jsx","webpack:///./src/app/shared/components/small-input/small-input.component.jsx","webpack:///./src/app/shared/components/single-date-picker/single-date-picker.component.jsx","webpack:///./src/app/shared/components/range-date-picker/range-date-picker.component.jsx","webpack:///./src/app/shared/components/JobResults/JobResults.jsx","webpack:///./src/app/shared/components/switch/Switch.jsx","webpack:///./src/app/shared/components/Table/Table.jsx","webpack:///./src/app/session/pages/logout/logout.page.jsx","webpack:///./src/app/dashboard/root.module.jsx","webpack:///./src/app/shared/components/loaders/Loader/Loader.jsx","webpack:///./src/app/shared/components/loaders/ParameterLoader/ParameterLoader.jsx","webpack:///./src/app/shared/components/layout/Paper/Paper.jsx","webpack:///./src/app/shared/components/layout/Main/Main.jsx","webpack:///./src/app/shared/components/layout/Section/Section.jsx","webpack:///./src/app/shared/components/layout/ScrollableContainer/ScrollableContainer.jsx","webpack:///./src/app/shared/components/layout/Column/Column.jsx","webpack:///./src/app/shared/components/layout/Row/Row.jsx","webpack:///./src/app/dashboard/containers/status/status.container.jsx","webpack:///./src/app/dashboard/containers/status/components/daemon/daemon.component.jsx","webpack:///./src/app/dashboard/containers/status/components/job-status/job-status.component.jsx","webpack:///./src/app/dashboard/containers/search-area/search-area.container.jsx","webpack:///./src/app/dashboard/components/search-results/search-results.component.jsx","webpack:///./src/app/dashboard/store/reducers/index.js","webpack:///./src/app/shared/store/reducers/index.js","webpack:///./src/app/shared/store/effects/index.js","webpack:///./src/app/root.module.jsx","webpack:///./src/app/core/root.layout.jsx","webpack:///./src/app/jobs/root.module.jsx","webpack:///./src/app/shared/components/controls/Input/Input.jsx","webpack:///./src/app/shared/components/controls/Button/Button.jsx","webpack:///./src/app/jobs/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/overlays/ModalFooter/ModalFooter.jsx","webpack:///./src/app/shared/components/overlays/ErrorModal/ErrorModal.jsx","webpack:///./src/app/jobs/components/job-status/job-status.component.jsx","webpack:///./src/app/jobs/components/job-list/job-list.component.jsx","webpack:///./src/app/jobs/containers/filters/filters.container.jsx","webpack:///./src/app/shared/store/selectors/connections.js","webpack:///./src/app/jobs/containers/jobs-invocations/jobs-invocations.container.jsx","webpack:///./src/app/entities/root.module.jsx","webpack:///./src/app/users-manager/root.jsx","webpack:///./src/app/users-manager/users/root.jsx","webpack:///./src/app/users-manager/groups/root.jsx","webpack:///./src/app/explorer/root.jsx","webpack:///./src/app/explorer/treeview/root.jsx","webpack:///./src/app/explorer/components/DbObjects/DbObjects.jsx","webpack:///./src/app/core/containers/sidebar/sidebar.container.jsx","webpack:///./src/app/core/containers/sidebar/components/favorites/favorites.component.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/navigation.component.jsx","webpack:///./src/app/core/containers/sidebar/components/notification/notification.component.jsx","webpack:///./src/app/core/containers/sidebar/components/user-menu/user-menu.component.jsx","webpack:///./src/app/core/containers/sidebar/components/compile/compile.component.jsx","webpack:///./src/app/job-process/root.module.jsx","webpack:///./src/app/session/store/actions/session.action.js","webpack:///./src/app/session/store/effects/check-authorization/check-authorization.effect.js","webpack:///./src/app/constants.js","webpack:///./src/app/session/store/effects/login/login.effect.js","webpack:///./src/app/session/store/effects/logout/logout.effect.js","webpack:///./src/assets/images/login_graphic.svg","webpack:///./src/assets/images/vendita_logo_blue.svg","webpack:///./src/assets/images/mas_logo_blue.svg","webpack:///./src/app/shared/components/range-date-picker/range-date-range-picker.container.jsx","webpack:///./src/app/shared/store/actions/jobs.action.js","webpack:///./src/app/shared/store/actions/process.action.js","webpack:///./src/app/shared/store/actions/global-filters.action.js","webpack:///./src/app/dashboard/store/actions/filter-status.action.js","webpack:///./src/app/shared/api/daemon.js","webpack:///./src/app/dashboard/store/selectors/index.js","webpack:///./src/app/dashboard/containers/ServerUsage/ServerUsage.jsx","webpack:///./src/app/dashboard/containers/ServerUsage/components/UsageListing/UsageListing.jsx","webpack:///./src/app/dashboard/containers/ServerUsage/components/UsageEntry/UsageEntry.jsx","webpack:///./src/app/shared/store/effects/jobs/jobs.effect.js","webpack:///./src/app/shared/store/effects/connections/connections.effect.js","webpack:///./src/app/shared/store/effects/search-jobs/search-jobs.effect.js","webpack:///./src/app/shared/store/effects/search-processes/search-processes.effect.js","webpack:///./src/app/shared/store/effects/global-filters/global-filters.effect.js","webpack:///./src/app/users-manager/store/reducers/index.js","webpack:///./src/app/users-manager/groups/store/reducer.js","webpack:///./src/app/explorer/store/reducers/index.js","webpack:///./src/app/executive-dashboard/store/reducers/index.js","webpack:///./src/app/entities/reducer.js","webpack:///./src/app/dashboard/store/reducers/daemon.js","webpack:///./src/app/job-process/store/reducer.js","webpack:///./src/app/core/store/middlewares.js","webpack:///./src/app/core/store/reducers/index.js","webpack:///./src/app/core/store/actions/notification.action.js","webpack:///./src/app/jobs/containers/Schedule/components/ScheduleModal/ScheduleModal.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ViewTabs/ViewTabs.jsx","webpack:///./src/app/jobs/containers/Schedule/components/Documentation/Documentation.jsx","webpack:///./src/app/jobs/containers/Schedule/containers/ScheduleForm/ScheduleForm.jsx","webpack:///./src/app/shared/components/form/editors/formatters.js","webpack:///./src/app/shared/components/form/parameters/extractDefault.js","webpack:///./src/app/job-process/components/notification-groups/notification-groups.jsx","webpack:///./src/app/job-process/components/notification-users/notification-users.jsx","webpack:///./src/app/job-process/components/notification-events/notification-events.jsx","webpack:///./src/app/job-process/components/notification-list/notification-list.jsx","webpack:///./src/app/entities/components/Entity.jsx","webpack:///./src/app/entities/containers/SelectedEntity.jsx","webpack:///./src/app/entities/components/ActionsNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/EditNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/DeleteNamespace.jsx","webpack:///./src/app/entities/components/ActionsConstant.jsx","webpack:///./src/app/shared/api/constant.js","webpack:///./src/app/entities/components/ActionsProcess.jsx","webpack:///./src/app/entities/components/process-actions/EditProcessModal.jsx","webpack:///./src/app/entities/components/process-actions/ProcessEditor.jsx","webpack:///./src/app/entities/components/ActionsForm.jsx","webpack:///./src/app/shared/components/form/SubmitButtonNoDirty.jsx","webpack:///./src/app/entities/components/form-actions/FormParameters.jsx","webpack:///./src/app/entities/components/ActionsAccount.jsx","webpack:///./src/app/entities/components/ConnectedEditConnection.jsx","webpack:///./src/app/entities/components/ActionsRoot.jsx","webpack:///./src/app/entities/components/ActionsPrototype.jsx","webpack:///./src/app/entities/components/ActionsSchedule.jsx","webpack:///./src/app/entities/components/ActionsCommon.jsx","webpack:///./src/app/entities/components/common-actions/DeleteEntity.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesModal.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesEditor.jsx","webpack:///./src/app/users-manager/components/HeaderPageSwitch/HeaderPageSwitch.jsx","webpack:///./src/app/users-manager/users/containers/UserLoader.jsx","webpack:///./src/app/users-manager/users/pages/UserView/UserView.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/Privileges.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/UserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserDetails.jsx","webpack:///./src/app/users-manager/users/pages/UserView/components/UserDatesBox.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserInfo.jsx","webpack:///./src/app/users-manager/components/UserCard/UserCard.jsx","webpack:///./src/app/users-manager/users/pages/NoUsersSelected.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/CreateNewUser.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/NewUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/components/GroupCard/GroupCard.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/GroupView.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/Privileges.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/GroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditGroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditSubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/CreateNewGroup.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/pages/NoGroupSelected.jsx","webpack:///./src/app/explorer/treeview/layers/Dbms/Dbms.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/ServerList.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/containers/Server/Server.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/DatabaseList.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/containers/Database/Database.jsx","webpack:///./src/app/explorer/containers/Breadcrumbs/Breadcrumbs.jsx","webpack:///./src/app/explorer/components/ContentSwitch/ContentSwitch.jsx","webpack:///./src/app/explorer/containers/AllDbms/AllDbms.jsx","webpack:///./src/app/explorer/containers/AllServers/AllServers.jsx","webpack:///./src/app/explorer/containers/Settings/ServerSettings.jsx","webpack:///./src/app/explorer/containers/AllDatabases/AllDatabases.jsx","webpack:///./src/app/explorer/containers/Settings/DatabaseSettings.jsx","webpack:///./src/app/explorer/containers/Workload/Workload.jsx","webpack:///./src/app/explorer/containers/License/License.jsx","webpack:///./src/app/explorer/containers/License/LicenseList/LicenseList.jsx","webpack:///./src/app/explorer/containers/License/Report/Report.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesStatus/FeaturesStatus.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesUsage/FeaturesUsage.jsx","webpack:///./src/app/explorer/components/LicenseReporting/UnusedFeatures/UnusedFeatures.jsx","webpack:///./src/app/explorer/containers/Storage/Storage.jsx","webpack:///./src/app/explorer/containers/Objects/Objects.jsx","webpack:///./src/app/explorer/containers/Sessions/Sessions.jsx","webpack:///./src/app/explorer/containers/AddServerCard/AddServerCard.jsx","webpack:///./src/app/explorer/containers/AddDatabaseCard/AddDatabaseCard.jsx","webpack:///./src/app/explorer/containers/ImportCSV/ImportCSV.jsx","webpack:///./src/app/explorer/containers/ImportCSV/downloadTemplate.js","webpack:///./src/app/shared/api/compile.js","webpack:///./src/assets/images/mas_logo_white.svg","webpack:///./src/assets/images/vendita_logo_white.svg","webpack:///./src/app/job-process/job-view.jsx","webpack:///./src/app/job-process/job-form.jsx","webpack:///./src/app/job-process/containers/output/output.jsx","webpack:///./src/app/job-process/components/ListOutput/ListOutput.jsx","webpack:///./src/app/job-process/components/JobStatus/JobStatus.jsx","webpack:///./src/app/executive-dashboard/ExecutiveDashboard.jsx","webpack:///./src/app/executive-dashboard/components/RefreshDashboard/RefreshDashboard.jsx","webpack:///./src/app/executive-dashboard/components/ToggleDashboard/ToggleDashboard.jsx","webpack:///./src/app/executive-dashboard/components/PhysicalDashboard/PhysicalDashboard.jsx","webpack:///./src/app/executive-dashboard/containers/SearchSection/SearchSection.jsx","webpack:///./src/assets/images/server_core.svg","webpack:///./src/app/executive-dashboard/components/SwitchContent/SwitchContent.jsx","webpack:///./src/app/executive-dashboard/components/EmptyContent/EmptyContent.jsx","webpack:///./src/app/executive-dashboard/containers/Dashboard/Dashboard.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/OptionsTile.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsList/OptionsList.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionItem/OptionItem.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsChart/OptionsChart.jsx","webpack:///./src/app/executive-dashboard/containers/ServerView/ServerView.jsx","webpack:///./src/app/executive-dashboard/components/UsedOptions/UsedOptions.jsx","webpack:///./src/app/executive-dashboard/components/VirtualDashboard/VirtualDashboard.jsx","webpack:///./src/app/executive-dashboard/components/NoData/NoData.jsx","webpack:///./src/app/executive-dashboard/containers/ToggleSelection/ToggleSelection.jsx","webpack:///./src/app/license-collection/LicenseCollection.jsx","webpack:///./src/app/license-collection/components/Navigation/Navigation.jsx","webpack:///./src/app/license-collection/Pages/Hardware/Hardware.jsx","webpack:///./src/app/license-collection/utils/extractDefault.js","webpack:///./src/app/license-collection/Pages/Software/Software.jsx","webpack:///./src/app/license-collection/Pages/VMware/VMware.jsx","webpack:///./src/app/license-collection/Pages/Packaging/Packaging.jsx","webpack:///./src/app/license-collection/utils/downloadFile.js","webpack:///./src/i18n/index.js","webpack:///./src/i18n/en/index.js","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/scoped-css-mui-compatibility.js","webpack:///./src/assets/fonts/Lato-Regular.ttf","webpack:///./src/assets/fonts/OpenSans-Regular.ttf"],"names":["CONSTANTS","defaultConstants","Text","forwardRef","ref","options","validate","defaultValue","value","required","reactToChange","props","useState","shouldValidate","setShouldValidate","validation","useMemo","check","useField","touched","name","field","meta","helpers","formikCtx","useFormikContext","useEffect","setValue","setTouched","multiline","isPopup","undefined","setError","length","selected","find","o","description","disableClearable","id","getOptionLabel","option","label","getOptionDisabled","disabled","onChange","e","renderInput","params","type","error","helperText","Email","validations","merge","email","PhoneNumber","phone","Integer","required_not_null","Password","BOOL_OPTIONS","BooleanSelect","Date","moment","format","utc","fullWidth","utils","MomentUtils","disableToolbar","inputVariant","KeyboardButtonProps","date","Time","ampm","mask","Select","isNamespace","getOptionSelected","desription","icons_map","success","mdiCheckDecagram","fail","mdiAlertDecagram","Result","children","className","classnames","fontSize","d","propTypes","oneOf","node","ResultText","compact","bool","ResultMessages","messages","map","msg","index","key","text","split","Messages","LOAD_ALL_ACCOUNTS","CHANGE_STATE","LOAD_ALL_LICENSES","LICENSE_FULL_REPORT","PROVIDE_SERVERS_USAGE","LOAD_STORAGE_POINTS","SET_STORAGE_NS","LOAD_STORAGE_DETAILS","LOAD_OBJECT_DETAILS","SET_SELECTED_OBJECT","LOAD_SESSIONS","PROVIDE_DB_LAST_BACKUP","PROVIDE_DB_STATUS","UPDATE_DB_STATUS","LOAD_PROTOCOLS","LOAD_COLLECTION_PROCESS","EXECUTE_COLLECTION_PROCESS","loadAllAccountsThunk","payload","dispatch","getState","creators","loading","RestClient","get","BASE","ENDPOINTS","ACCOUNTS","page_size","response","data","protocols","explorer","from","provideServersUsageThunk","provideDBLastBackupThunks","provideDBStatusThunks","loadProtocolsThunk","PROTOCOLS","changeStateThunk","newState","action","loadAllLicensesThunk","JOBS","getLicenseReportThunk","license","uuid","report","date_invoke","loadSessionsThunk","filters","SESSIONS","fullPath","sort","loadStorageDetailsThunk","STORAGE_DF","setStorageItemThunk","ns","loadStoragePointsThunk","STORAGE_TS","dbconn","loadObjectsThunk","objectApis","path","Promise","allSettled","api","dbms","allData","res","setSelectedObjectThunk","loadUsagePerDb","server","database","databases","usage","parseFloat","HOST_CPU","protocol","address","servers","structured","slice","usageResult","filter","result","status","push","highLoadCount","a","b","loadDBLastBackup","shell","s","DB_LAST_BACKUP","backup","isValid","Oracle","r","Mysql","Pgsql","Mssql","db","special","dbLastBackup","loadDBStatus","DB_STATUS","toString","toLowerCase","parseInt","message","dbName","dbStatus","refreshServerDbsStatusThunk","refreshDBStatusThunk","selectedDBMS","sv","loadProcessDetailsThunk","PROCESSES","process","details","processes","executeCollectionProcessThunk","LOAD_ALL_GROUPS","LOAD_GROUP","DELETE_GROUP","GRANT_PRIVILEGE","REVOKE_PRIVILEGE","ADD_USERS_TO_GROUP","REMOVE_USERS_FROM_GROUP","REMOVE_GROUPS_FROM_GROUP","PATCH_SELECTED_GROUP","CREATE_GROUP","LOAD_ALL_USERS","SELECT_USER","LOAD_USER","ADD_USER_TO_GROUPS","REMOVE_USER_FROM_GROUPS","DEACTIVATE_USER","CREATE_USER","fetchEntities","promises","ENTITY_TYPES_FETCH","query","url","concat","encodeURIComponent","promise","entityType","fetchEntity","eType","definition","desc","console","warn","selectEntity","entity","clearSelectedEntity","setFilterType","setFilterSearch","openModal","actions","sessionActions","jobsActions","processActions","globalFiltersActions","LightTooltip","withStyles","tooltip","color","backgroundColor","letterSpacing","lineHeight","fontFamily","Tooltip","LimitlessTooltip","maxWidth","RSAKey","FQName","recieved","values","fqname","namespace","parts","_","initial","join","last","style","marginBottom","NamespaceSelect","QualifiedName","masName","AccountSelect","showUrls","setShowUrls","boxName","showToggle","useCallback","target","checked","inlineLoader","accounts","list","account","includes","formatAccount","Boolean","size","PLATFORMS","tester","PlatformSelect","platformValue","platform","processValue","reverse","test","ProcessSelect","p","OPTIONS","appearance","is_executable","item","customVal","pipe","namespaces","FormPrototypeSelect","prototype","ModeSelect","mode","modes","enumerations","variadicListReducer","produce","draft","deflt","pop","useVariadicList","useReducer","replvars","Variadic","displayDeftlDesc","selectedProcess","Header","Title","Content","dataType","Fragment","VariadicInstance","defltDesc","types","display","alignItems","justifyContent","onClick","name_base","parsedDeflt","replace","firstCharLetter","Multiline","open","setOpen","InputProps","startAdornment","title","cursor","mdiArrowExpand","width","height","variant","Footer","Right","Replvalues","valuesNr","Object","keys","startsWith","replvaluesParams","i","replvalues","repl","Uuid","hasWritePrivileges","privileges","effective","hasOnlyReadPrivilege","isOnlySelectGroup","userDetails","toJS","member_of","isAdmin","SubmitButton","confirmation","submitForm","isSubmitting","isValidating","dirty","modalActions","close","log","minWidth","maxHeight","icon","scrollable","BodyText","Left","fontStyle","fontWeight","marginTop","InvocationStatus","NEW","ALL","NOT_FETCHED","ABORTED","SCHEDULED","SUCCEEDED","FAILED","EXECUTING","DELAYED","KILLED","AllowOutputFor","AllowGeneralEditingFor","CannotShowStatusFor","FAILURES","SUCESSES","WARNINGS","fns","arg","reduce","prev","fn","filterBy","selector","equalityFn","el","retrieveFilteredAccounts","state","nodes","stateValue","currentValue","currentServer","retrieveServerEntry","structure","entry","retrieveDatabaseEntry","getStatePath","getStructured","getSessions","sessions","getSessionsFlags","flags","getStoragePointsLoadingFlag","storage","loadingPoints","getStorageDetailsLoadingFlag","loadingDetails","getSelectedStorage","getStoredEntries","storedEntries","getSelectedObject","objects","selectedObject","getSelectedOwner","selectedOwner","getObjectsEntries","getObjectsLoadingFlag","getFullPath","createSelector","pathArr","haveStorageData","selectedStorage","getFormattedStorage","isLoading","points","isArray","point","Used_MB","Total_MB","Tablespace","freePerc","freeGB","Free_MB","totalGB","usedGB","haveObjectsData","selectedObjects","getStorageDetailsData","selectedNS","tablespace","files","TABLESPACE_NAME","getStructuredObjects","tree","acc","forEach","object","OWNER","owner","getInvalidObjects","invalidObjects","included","findIndex","STATUS","getSelectedObjectData","isObject","getSortedSessions","sortFunction","order","sortKey","getTime","getBackup","backups","getDBStatus","statuses","getDBStatusInfo","info","dbMessage","STATUS_TYPES","down","up","getDBMSStatus","allStatuses","getDBMSStatusInfo","dbmsStatus","getServerStatus","getServerStatusInfo","serverStatus","getEntityPendingStatus","en","AvatarCard","avatar","onSelect","focusable","onFocus","event","stopPropagation","tabIndex","data-qa","alt","src","fallback","containEvent","placement","mdiInformationOutline","preventDefault","shape","string","func","mergeValidations","callbacks","provided","checkRequired","Yup","nullable","checkRequiredNotNullable","checkEmail","validateSync","checkPhoneNumber","matches","excludeEmptyString","checkUnsignedInt","checkName","substr","checkFirstLetter","checkUuid","noop","unsigned_int","unsigned_float","signed_float","localState","shared","jobsSelector","connectionsSelector","jobsSearchedSelector","processesSearchedSelector","globalFiltersSelector","PROVIDE_EXECUTIVE_DASHBOARD","PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD","SELECT_ALL","DESELECT_ALL","TOGGLE_SERVER","getCurrentUserName","session","getCurrentUserDetails","loadAllUsersThunk","USERS","loadUserThunk","grantPrivilegeThunk","user","patch","revokePrivilegeThunk","addUserToGroupsThunk","groups","allUsers","errorMsg","removeUserFromGroupsThunk","deactivateUserThunk","createUserThunk","body","username","password","post","refreshed","loadAllGroupsThunk","GROUPS","loadGroupThunk","createGroupThunk","groupname","group","removeUsersFromGroupThunk","removeSubGroupsThunk","addUsersToGroupThunk","users","all","removeGroupThunk","delete","SearchableList","items","visibleScroll","scrolled","setScrolled","onWheel","currentTarget","scrollTop","scroller","setQuery","filtered","scrollBy","top","deltaY","left","deltaX","array","defaultProps","extractParameter","parameter","others","editor","additional","field_name","is_required","TextParameter","passable","PasswordParameter","PhoneNumberParameter","BooleanParameter","IntegerParameter","EmailParameter","ProcessParameter","AccountParameter","VariadicParameter","ReplvaluesParameter","FQNameParameter","RSAKeyParameter","MultilineParameter","UuidParameter","getQuery","invocation_viewer","getInvocation","invocation","getInvocationStatus","Ensure","connect","entitySelectors","request","Ensurer","fresh","Loading","ParameterLoader","Loader","ENTITY_TYPES","dataEnclosure","ROOT_ENTITY","getBreadcrumbs","entities","breadcrumbs","collectData","namespacesWithMeta","collection","aliases","alias","alias_type","aliasedEntity","Array","dataItem","ownNamespace","selectors","def","fetch_status","namespaceWithMetaSelector","dataNamespaces","getFilteredEntities","accumulator","getEntitiesAsHashMap","filteredEntities","search","domainArray","paths","findEntity","notPersisted","getEntities","entitiesMap","roots","entityName","names","isSelected","columns","breadcrumb","level","rows","bucket","entityLevel","getSelectedEntity","namespaceChildrenListSelector","selectedEntity","mapUsersData","mapLoadedUser","mapSortInsensitive","localeCompare","getInitialValues","parameters","initialValues","getValidationSchema","validationSchema","formatParameters","trim","NavigationTab","this","active","tabs","indexOf","indicatorColor","textColor","tab","React","PureComponent","getGroupDescription","allGroups","groupDetails","authorizationSelector","currentUserSelector","loginSelector","beVersionSelector","beLicenceSelector","beHealthSelector","fetchProtocols","postSchedule","getSchedule","patchSchedule","postAccount","patchAccount","getConnection","patchConnection","postFile","file","UPLOAD_ACCOUNTS","Context","createContext","Switch","Provider","Case","useContext","saga","createSagaMiddleware","persistConfig","storageSession","whitelist","configStore","appReducer","persistReducer","combineReducers","core","sessionReducer","dashboard","dashboardReducer","sharedReducer","usersManager","usersManagerReducer","groupsReducer","createReducer","explorerReducer","invocations","executiveDashboard","executiveDashboardReducer","daemon","effects","sessionEffects","sharedEffects","store","createStore","routing","window","location","reload","composeWithDevTools","applyMiddleware","thunk","effect","run","SimpleSearchInput","placeholder","ProcessParameters","editable","allValues","xs","forms","datatypes","prototypes","processName","normalize","position","chunk","spacing","normalized","Notifications","getEventTypeIcons","jobStart","jobCompletion","abnormalEvent","icons","notice","fullLog","toggleApplyButton","setState","isEditing","checkIfAllUsersSelectedCurrentGroup","selectedGroup","getSelectedGroup","usersData","every","onSelectGroup","groupsData","onSelectUser","setFlagGroupsIfContainSelectedUser","onSelectUserAction","shouldClear","displayIcons","onSelectEventType","recievedData","events","then","areUsersSelected","isClearActionAvailable","isGroupSelected","eventTypeIcons","onApply","mappedState","getProcess","patchProcess","supportedDataTypes","dataTypes","Number","MAX_SAFE_INTEGER","data_type","substring","is_supported","extractDefault","getLabel","getIcon","labels","target_working_dir","target_shell","repo_shell","repo_working_dir","form","vsphere_account","vcenterservername","mdiFolderHome","mdiLanConnect","mdiSourceRepository","mdiHexagonMultipleOutline","mdiCubeOutline","TextField","endAdornment","mdiHelpCircleOutline","DropdownField","rawAccounts","datatype","opt","meta2","readOnly","toggle","OutputModal","content","interval","output","modalDetails","setMessage","setInterval","clearInterval","errors","sendToEmail","copyToClipboard","minHeight","loadExecutiveDashboardThunk","EXECUTIVE_DASHBOARD","deselectAllThunk","selectAllThunk","rawEntries","toggleServerThunk","allServers","selectedServers","svIndex","nrCores","loadVirtualExecutiveDashboardThunk","VIRTUAL_EXECUTIVE_DASHBOARD","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","NAV_POSITION_TOP","ANCHOR_LEFT","WEEKDAYS","MODIFIER_KEY_NAMES","Set","mapAccountsTree","splitIntoRootsByProtocol","root","splitIntoRootsByAddress","splitIntoRootsByDatabase","serversMap","existingEntry","databaseMap","mapAccountsNewStructure","raw","protocolsArr","dbServer","dbmsServerEntry","otherIndex","splice","mapProtocols","is_abstract","special_required","mapUpdateDBStatus","existingDb","PropTypes","filterStatusSelector","filterStatusActions","checkDeamonStatus","checkDaemon","deleteEntity","deleteInvocation","space_begone","space_summon","param","defaults","defineEditor","maybeDisabled","parseProtocols","metaEditor","proto","sortBy","mapScheduledNames","allScheduled","nameArr","ActionCard","settings","addOnly","readOnlyOptions","lastBackup","statusInfo","addable","mdiContentSave","role","capitalizeFirstLetter","fillable","percentage","CardsLayout","postInvocation","requestInvocation","fetchInvocation","fetchInvocationOutput","want","Unresolved","keygen","settler","wantComponent","Picked","ModalContext","Modal","providedId","aria","onClose","disableBackdropClick","oneOfType","ModalHeader","RepeatableParameter","Parameter","is_repeatable","getNamespace","patchNamespace","postNamespace","postForm","createForm","updateForm","pointers","instances","instance","fields","PackedContext","FormEditor","isNew","setResult","formRef","initialPacked","groupForm","cloneDeep","split_name","packed","contextValue","validateOnChange","onSubmit","handleSubmit","innerRef","refresh","form_name","protoName","extracted","extractFieldInfo","exclusions","filteredExtractions","val","packedCopy","set","unpacked","ungroupForm","v","rename","version","request_args","unshift","key_struct","entries","matched","exec","lower","getOutputText","subject","href","navigator","permissions","clipboard","writeText","legacyMethod","bind","textArea","document","createElement","appendChild","classList","add","focus","select","execCommand","removeChild","mapAllServers","groupServers","entryInfo","srvname","sid","collDate","Ncore","totalDBs","eelic_count","selic_count","sids","installedOptions","aa_count","ac_count","as_count","dv_count","mt_count","adg_count","rac_count","olap_count","part_count","in_mem_db_count","totalInstalledOptions","mapVirtualServers","vmname","vmguesthostname","vmguestos","vmipaddress","hosts_nr","cpu","cpucores","allSids","CenterComponent","isRequired","isBeforeDay","isMoment","aYear","year","aMonth","month","bYear","bMonth","isSameYear","Overflow","component","nodeRef","useRef","scrollableX","setScrollableX","scrollableY","setScrollableY","scrolledX","setScrolledX","scrolledY","setScrolledY","Tag","onScroll","scrollLeft","current","element","box","clientWidth","clientHeight","scrollHeight","scrollWidth","Checkbox","rest","control","checkedIcon","closeable","providedAria","formikRef","changedForm","context","fieldChanged","changed","task","duration","running","runTask","setTimeout","start","stop","ConnectedDeleteJobModal","globalFilters","getJobs","sharedActions","dispatchLoading","DeleteJobModal","terminator","startDate","unix","endDate","end","days","diff","asDays","period","getQSP","catch","mdiTrashCan","Schedule","setFilledValues","filledValues","selectedOption","setSelectedOption","onClickHandler","btnLabel","isScheduled","schedule","ConnectedNewNamespace","NewNamespace","isDisabled","classes","handleSubmitNew","ConnectedFormModal","FormModal","mdiClipboardCheck","ServerForm","handleSubmission","editing","submission","setSubmission","passwordEditable","setPasswordEditable","showRSA","setShowRSA","handleAccountCreation","getCreateAccountHandler","allowedProtocols","availablePorts","default_port","host","port","server_password","user_key","confirm_server_password","rsa_key","loadNewAccountHandler","validateOnBlur","validateOnMount","formik","setFieldValue","PasswordOrRSA","allowed","onInput","request_body","server_user","DatabaseForm","mapAccountValues","confirm_password","selectedProtocol","allowRSA","allow_rsa_key","withDatabase","withMode","padded","handler","fetchDataTypes","DATATYPES","data_types","processQuery","updateInvocation","row","ServerCard","toggleSelectedCallback","mdiCubeScan","mdiMemory","Cores","mdiDns","mdiCalendarBlank","colors","1","2","4","6","8","16","24","ServersTile","isSingle","total","cores","count","padding","image","number","showTextIn","fontColor","HorizontalBar","listBars","prevProps","prevState","isEqual","getListBarWithOtherParameters","widthTotal","bar","calcWidthTotal","barWidth","assign","evt","Math","floor","random","g","showTextInsteadValue","showTextWithValue","float","showValueIn","fill","randomColor","x","y","dy","textAlign","getListTextBar","showTextUp","showValueUp","renderLabel","renderBars","showTextDown","showValueDown","Component","DatabasesTile","dbs","mdiDatabase","getBeVersion","getBeLicence","getBeHeath","BeLicenceEffect","BeHealthEffect","BeVersionEffect","BE_VERSION","put","dispatchSuccess","dispatchFail","BE_LICENCE","BE_HEALTH","getBeHealth","takeEvery","getLoadingAction","TotalJobsCount","jobs","job","boxShadow","borderRadius","getAlias","patchAlias","postAlias","ChangePassword","done","confirm","setSubmitting","ChangePasswordContainer","selectedUser","initialState","login","authorization","actionStates","LOADING","currentUser","beVersion","reducerActions","checkAuthorization","setIn","getSuccessAction","fromJS","SUCCESS","getFailAction","FAIL","Error","daemonPoller","withPolling","filterStatus","setFilterStatus","getEventAction","sessionGlobalFilters","subtract","startOf","JSON","parse","localStorage","getItem","page_count","total_count","fetching","callFailed","reason","connections","searchResults","setGlobalFilters","nextState","setItem","stringify","logout","removeItem","getConnections","searchJobs","searchProcesses","notifications","addNotifications","removeNotification","notificationIndex","removeIn","notificationActions","WantParameter","boolean","variadic_parameter","hasOwnProperty","maxPosition","max","virtual","currentGroup","upper","nextGroup","iteration_limit","instanceCount","f","grouped","subvalues","dropRight","getPrivileges","isAlias","cls","setPrivileges","granted","role_type","privilege","enitity_name","VerticalUsageBar","viewBox","rx","ry","SidebarStorageItem","StorageSidebar","selectedItem","mdiFileTableBox","iconMapper","triggers","mdiAlertOutline","tables","mdiTable","indexes","mdiTableColumnWidth","procedures","mdiAlphaPBox","packages","mdiInbox","packageBodies","mdiInboxFull","objectsSidebarMapper","invalidChildren","mdiFileTree","isObjectSelected","isInvalid","invalid","ObjectsSidebar","KPIDisplay","suffix","colorFormatting","digits","valueString","toLocaleString","minimumFractionDigits","maximumFractionDigits","NoDataComponent","mdiHelpRhombusOutline","StorageDetailsList","PCT_USED","FILE_NAME","SIZE_MB","MAXSIZE_MB","filePath","fileName","extension","chartType","loader","toFixed","is3D","rootProps","StorageViewer","ObjectsViewer","mdiArrangeBringToFront","OBJECT_NAME","CREATED","OBJECT_ID","LAST_DDL_TIME","mdiFlashCircle","navigationItems","to","qaClass","mdiClipboardPlayMultipleOutline","mdiShieldCheckOutline","resolve","invocationPoller","ListOutput","reducer","bindReducer","ActionCreatorHandler","slugify","createUrl","paramsUrl","numberPretty","formatNumber","pow","decimals","smartNumber","charAt","toUpperCase","emailPattern","phoneNumberPattern","urlPattern","randomStringGenerator","possible","generateUniqueId","btoa","valueOf","emptyFunc","delay","timer","isInclusivelyAfterDay","STATES","stateKey","unchanged","reducers","reducerInitialState","getWorkloadData","dateRange","isSingleDay","currentDate","jobsWithFormattedInvokedDate","orderBy","groupJobsByDate","groupBy","intervalArray","totalDays","getHoursArray","getDaysArray","day","dateArray","CheckAuthorizationEffect","LoginEffect","LogoutEffect","tryAsync","onError","RestClientClass","authentications","basicAuth","accessToken","baseUrl","HOST","VERSION","client","axios","create","timeout","TIMEOUT","baseURL","headers","Accept","head","Cookie","remove","getRequestConfig","LoginPage","history","submit","resetErrors","mapStateToProps","mapDispatchToProps","ContainerComponent","MasLogo","VenditaLogo","LoginGraphic","FormComponent","setShowPassword","showPassword","handleMouseDownPassword","submitHandler","restErrors","getRestErrors","noValidate","autoComplete","autoFocus","getError","valueChangeHandler","inputProps","InputLabelProps","htmlFor","aria-label","onMouseDown","edge","labelWidth","RestErrorsComponent","JobItemComponent","jobStatus","formatName","nameContainerWidth","getElementById","offsetWidth","starPath","formattedName","canvas","getContext","metrics","measureText","shift","extended","statusChild","local","WorkloadGraphComponent","setSingleDay","activeLabel","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickSize","axisLine","tick","stroke","strokeWidth","fillOpacity","CustomTooltipComponent","nextProps","CustomAxisTickComponent","transform","textAnchor","CircleImgComponent","NumberLabelComponent","StringLabelComponent","SearchInputComponent","DropdownComponent","handleToggle","isDropdownOpen","setCloseDropdown","anchorRef","contains","onClickCallback","itemIndex","createRef","parentWidth","isOpen","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClickAway","SmallInputComponent","SingleDatePickerComponent","focused","onDateChange","onFocusChange","numberOfMonths","customInputIcon","isOutsideRange","hideKeyboardShortcutsPanel","displayFormat","navPrev","mdiChevronLeft","navNext","mdiChevronRight","RangeDatePicker","renderDayContents","anchorDirection","block","customArrowIcon","mdiArrowLeftRight","customCloseIcon","enableOutsideDays","endDateId","endDatePlaceholderText","horizontalMargin","initialEndDate","initialStartDate","initialVisibleMonth","isDayBlocked","isDayHighlighted","isRTL","keepOpenOnDateSelect","minimumNights","monthFormat","navPosition","onNextMonthClick","onPrevMonthClick","orientation","phrases","calendarLabel","chooseAvailableEndDate","chooseAvailableStartDate","clearDates","closeDatePicker","dateIsSelected","dateIsSelectedAsEndDate","dateIsSelectedAsStartDate","dateIsUnavailable","enterKey","escape","focusStartDate","homeEnd","jumpToNextMonth","jumpToPrevMonth","keyboardBackwardNavigationInstructions","keyboardForwardNavigationInstructions","keyboardShortcuts","leftArrowRightArrow","moveFocusByOneDay","moveFocusByOneMonth","moveFocusByOneWeek","moveFocustoStartAndEndOfWeek","openThisPanel","pageUpPageDown","questionMark","returnFocusToInput","roleDescription","selectFocusedDate","showKeyboardShortcutsPanel","upArrowDownArrow","regular","renderCalendarDay","renderMonthText","reopenPickerOnClearDates","screenReaderInputMessage","showClearDates","showDefaultInputIcon","small","startDateId","startDatePlaceholderText","stateDateWrapper","withFullScreenPortal","withPortal","onDatesChange","focusedInput","JobResults","renderJobsResults","mdiProgressClock","mdiCheckCircleOutline","mdiCalendarArrowRight","mdiStopCircleOutline","mdiTimelineClock","mdiAlertRhombusOutline","mdiCancel","jobName","fromSearch","any","Table","sortBehavior","changeSort","stickyHeader","HeaderCell","column","align","sortDirection","direction","Row","TableRow","Cell","TableCell","LogoutPage","RootModule","filteredJobs","totalFilteredJobs","range","onChangeDatesHandler","entitiesStatus","averageJobs","round","storeFilterStatus","mdiChartTimelineVariant","inline","Paper","flex","PaperHeader","PaperContent","PaperFooter","LeftSideSlot","RightSideSlot","PaperTitle","Main","Section","full","SectionTitle","SectionHeader","SectionInfo","SectionContent","Info","ScrollableContainer","Column","StatusContainer","filterJobs","executing","succeeded","scheduled","aborted","failed","Daemon","useSelector","isDaemonRunning","JobStatus","filterByStatus","storeStatus","setStatus","renderContent","dispatchEvent","Search","apiSearchWithDebounce","debounce","searchedTerm","showSearchResults","getSearchResults","QSP","name_filter","page","filterProcesses","processStatus","storedProcesses","results","handleOnChange","searchTerm","clearSearch","getSearchedJobs","setSearchFilter","setTypeFilter","category","totalResults","displayedResults","nameFilter","SearchResultsComponent","renderProcessesResults","mdiPlaySpeed","createURLLink","JobsEffect","JobsConnectionsEffect","SearchJobsEffect","SearchProcessesEffect","GlobalFiltersEffect","listen","newLocation","pathname","currentPathname","currentSearch","go","setAuthorization","authorizationStatus","exact","Login","Logout","Layout","hot","RootLayout","Jobs","JobProcess","Entities","UsersAndGroups","Explorer","ConnectedExecutiveDashboard","LicenseCollection","renderJobItem","toggleWorkloadDisplay","isWorkloadDisplayed","updateQSP","URLSearchParams","has","append","handleOnTabChange","selectedTab","performFilter","handleOnFilterChange","returnListBasedOnTab","shell_host_address_filter","platform_filter","database_name_filter","user_filter","platform_name_filter","platform_dbms_filter","pageFilters","onSearchInputChange","onKeyDown","loadAllUsers","whiteSpace","paddingTop","selections","excludeStatus","currentTab","Input","nrRows","LinkBehavior","Button","link","JobItem","setUuid","mdiClockOutline","ModalFooter","ErrorModal","statusMap","JobList","NoJobs","PLATFORM","Filters","u","platforms","selectedPlatform","selectedServer","selectedDb","selectedStatus","mdiServer","mdiCircleSlice5","getJobsFiltersOptions","connection","getIn","JobsInvocations","useLocation","useDispatch","ENTITY_ICONS","constant","exception","CachedIcon","searchWithDebounce","searchInput","setSearchInput","renderColumn","colNum","entityIcons","clearCach","sessionStorage","ev","loadingData","container","UsersAndGroupsPage","UserManagementHeaderLinks","RightSideControls","UserManagementSwitch","useRouteMatch","routes","Link","UsersPage","loadAllGroups","match","userLink","UserSwitch","GroupsPage","groupLink","GroupsPagesSwitch","ops","ExplorerPage","handleClick","anchorElement","handleClose","loadProtocols","loadAllAccounts","treeviewData","storeState","startIcon","aria-controls","aria-haspopup","keepMounted","activePage","Treeview","DbObjects","loadingFlags","SidebarContainer","postgresStatus","masDaemonStatus","uptime1Minute","daysUntilExpire","licenseStatus","expirationDate","str","splitStr","statusSpan","marginLeft","textShadow","stopped","beHealth","masSystemsMonitor","uptime5Minutes","uptime15Minutes","beLicence","licensed_feature","paddingRight","pkg","Favorites","mdiStarOutline","Navigation","navId","handlePopoverOpen","handlePopoverClose","setActiveTab","newActiveTab","activeTab","setCurrentNavItem","onMouseEnter","onMouseLeave","subItem","withRouter","Notification","UserMenu","menuAnchorRef","isVisible","setToggleDropdown","autoFocusItem","Compile","setStep","step","Confirmation","Compiler","compilation","setCompilation","postCompile","useQuery","LinkRouter","RouterLink","redirected","OtherMainLinks","PrepareFlow","designation","actionsTypes","CHECK_AUTHORIZATION","LOGIN","LOGOUT","ActionCreator","setBasicAuth","CURRENT_USER","source","INTL","DAEMON_STATUS","JOB_COUNT","PROTOTYPES","FORMS","FORM","DOWNLOAD_PACKAGING","DOWNLOAD_CSV_TEMPLATE","Buffer","statusText","loginPath","removeBasicAuth","module","exports","autoFocusEndDate","momentPropTypes","momentObj","DateRangePickerPhrases","omit","DateRangePickerShape","localeData","longDateFormat","DateRangePickerWrapper","GET_JOBS","GET_CONNECTIONS","SEARCH_JOBS","SEARCH_PROCESSES","UPDATE_GLOBAL_FILTERS","SET_FILTER_STATUS","ServerUsage","getAllAccounts","ConnectedServerUsage","serversUsage","UsageListing","mdiPercent","UsageEntry","deactivating","debug","groups_update","producers","updating_groups","creating","group_users","group_subgroups","reports","collectionProcesses","hardware","wasExecuted","software","vmware","packaging","licenses","base","rawVirtualServers","virtualServers","execdashboard","execdashboard_virtual","FETCH_ENTITIES_REQUEST","FETCH_ENTITIES_SUCCESS","FETCH_ENTITIES_FAILURE","FETCH_ENTITIES_ALL_REQUEST","FETCH_ENTITIES_ALL_SUCCESS","FETCH_ENTITIES_ALL_FAILURE","SELECT_ENTITY","CLEAR_SELECTED_ENTITY","UPDATE_FILTERS","DAEMON_STATUS_REQUEST","DAEMON_STATUS_SUCCESS","DAEMON_STATUS_FAILURE","processed","fetchedInvocation","PROCESS_QUERY","FETCH_INVOCATION_SUCCESS","FETCH_INVOCATION_FAILURE","REPLACE_INVOCATION","next","schema","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","ScheduleModal","setTab","processDetails","setProcessDetails","scheduleDetails","setScheduleDetails","newSchedule","schedules","textDecoration","changeTab","ViewTabs","Documentation","ConnectedScheduleForm","wasSCheduleCallDone","allScheduledNames","ScheduleForm","derivedMonitor","enabled","monitor","setMonitor","nameValue","splittedName","t_min","t_hr","t_day","t_mon","t_wkd","sch_name","isNaN","platformVal","processVal","n_state","isEmpty","rejector","sch_description","params_with_maybe_replvars","extractReplVars","pickBy","rawValues","extractFQName","cleanUpReplVars","prefix","Groups","dense","disablePadding","button","primary","Users","currentActionLabel","shouldDisplayAction","emptyListMessage","renderUsersList","Events","UserChip","background","Chip","NotificationList","filteredUsers","buttonLabel","buttonIcon","endIcon","Entity","user_owner","aliasStr","getBoundingClientRect","parent","parentNode","scrollTo","behavior","SelectedEntity","ActionsNamespace","disableActions","hasWrite","deleteRights","parseName","tail","parsed","fq","ConnectedEditNamespace","nestedNames","EditNamespace","canUpdateName","setDescription","ConnectedDeleteNamespace","DeleteNamespace","canDelete","ActionsConstant","ConnectedEditConstant","EditConstant","mdiImageFilterCenterFocus","patchConstant","ActionsProcess","ConnectedNewSchedule","NewSchedule","openErrorModal","setOpenErrorModal","errorModalActions","EditProcessModal","ProcessEditor","saveProcessEdits","steps","Step","step_index","expressions","parseEvaluatableExpressions","exp","StepExpression","expression","exp_index","evaluate","process_name","evaluations","toSend","findFormPrototype","findFormEntry","ActionsForm","canWrite","ConnectedCopyForm","CopyForm","formName","SubmitButtonNoDirty","FormParameters","FieldsAndGroupsEditor","DataContext","FieldGroup","pointer","GroupInstance","canAdd","Field","newInstance","Value","packet","canRemove","idx","provided_field_name","ActionsAccount","getEntityType","CONNECTION_TYPES","SERVER","DATABASE","ConnectedEditConnection","EditConnection","setProtocols","ActionsRoot","ActionsPrototype","ActionsSchedule","ConnectedEditSchedule","EditSchedule","isEntityDeletable","ActionsCommon","displayDelete","ConnectedNewAlias","ConnectedEditAlias","NewAlias","original","EditAlias","splittedNamespace","handleEditSubmit","originalName","ConnectedDeleteEntity","clearSelected","DeleteEntity","PrivilegesModal","PrivilegesEditor","hasAlias","usePrivileges","editAliasParent","updating","setEditAliasParent","updatePrivilege","switchTab","PrivilegesList","is_group","updater","privilegeTypes","renderType","user_or_group","mdiAccount","setLoading","setUpdating","setData","resp","HeaderPageSwitch","arrayOf","UserLoader","loadUser","userName","useParams","ConnectedUserLoader","UserView","deactivateUser","loggedUser","defaultResult","noGroups","deactivate","titleStyles","textTransform","ConnectedUserView","removing","Privileges","grant","revoke","Privilege","capitalize","PrivilegesContainer","mapPrivileges","class_privileges","actual","UserGroups","removeFromGroups","retrieveGroupDescription","setSelectedGroup","errorMessage","setErrorMessage","isOnlySelect","questionMessage","passed","group_name","mdiDeleteCircleOutline","UserGroupsContainer","visibleGroups","EditUserGroups","addToGroups","isFormChanged","setIsFormChanged","closeModal","aria-labelledby","aria-describedby","GroupsList","onAdd","EditUserGroupsContainer","showAll","err","EditUserDetails","UserDetailsForm","EditUserDetailsContainer","submitResult","created","date_created","updated","date_updated","UserDatesBox","DateCreated","DateUpdated","mdiAccountPlus","parseDate","mdiAccountEdit","EditUserInfo","UserInfoForm","EditUserInfoContainer","formEndpoint","formproto","formdata","mapFormValues","submited","sendable_data","FieldSwitch","dict","EmailField","PhoneNumberField","notRequired","Field_Types","FieldComponent","getComponent","UserCard","endsWith","groupless","mdiAccountOff","NoUserSelectedPage","min","confirmpassword","CreateNewUser","submitUserValues","useHistory","operation","setOperation","exists","marginRight","CreateNewUserPage","NewUserGroups","existing","GroupsSelection","mdiAccountGroup","GroupCard","GroupView","removeGroup","deleteGroup","ConnectedGroupView","GroupLoader","loadGroup","groupName","ConnectedGroupLoader","GroupUsers","removeUsersFromGroup","setSelectedUser","GroupUsersContainer","EditGroupUsers","addUsersToGroup","mdiAccountMultiplePlus","UsersSelection","EditGroupUsersContainer","usersFetched","usersSubmitted","resolved","rejected","SubGroups","removeSubGroups","subgroup","SubGroupsContainer","EditSubGroups","updateGroup","GroupSelection","EditSubGroupsContainer","groupsFetched","subgroupsSubmitted","subgroupError","CreateNewGroup","submitGroupValues","CreateNewGroupPage","NoGroupSelectedPage","DBMS","toggleExpanded","isExpanded","setPath","changeState","autoExpanded","ConnectedDBMS","ServerList","Server","isActive","activePath","storedPath","ConnectedServer","DatabaseList","Database","ConnectedDatabase","BreadcrumbsTitle","renderBreadcrumbs","links","separator","previous","route","navigateTo","selectedLink","setActiveLevel","ConnectedBreadcrumbsTitle","ContentSwitch","renderPage","AllDbms","retrieveDBMSStatus","retrieveDBMSStatusInfo","ConnectedAllDbms","allDbms","AllServers","renderOptions","retrievePendingStatus","refreshServerDBs","refreshServerDbsStatus","retrieveServerStatus","retrieveServerStatusInfo","ConnectedAllServers","ServerSettings","mdiSettings","EditServerContainer","EditServer","reloadAccounts","AllDatabases","refreshDBStatus","refreshDatabaseStatus","mdiCheckboxMultipleBlankOutline","mdiShape","mdiHexagonSlice2","mdiLicense","retrieveDbBackup","retrieveDbStatus","retrieveDbStatusInfo","ConnectedAllDatabases","DatabaseSettings","EditDatabaseContainer","EditDatabase","pr","mr","Workload","newTab","getJobsData","pageLevel","levelFilters","protocol_filter","ConnectedWorkload","License","getLicenseData","ancestors","loadAllLicenses","setSelectedLicenses","selectedLicenses","newSelectedLicenses","compareReports","singleLicense","compareWithLatest","latestReport","selectedReport","comparable","showLicenseList","licenseReport","licenseList","setSelectedLicensesCallback","compareWithLatestCallback","licenseReportCallback","ConnectedLicense","LicenseList","hoveredLicenseUuid","setHoveredLicenseUuid","updateHoveredLicenseUuid","licenseUuid","l","mdiFileCompare","Report","getLicenseReport","reportOne","reportTwo","ownProps","ConnectedReport","FeaturesStatus","setSelectedIndex","newIndex","selectedIndex","renderSingleReport","FEATURES","TabPanel","valIndex","mdiCheckboxMarkedCircle","mdiCloseCircle","renderComparableReports","comparableFeatures","feature","other","hidden","FeaturesUsage","USED","USAGES","getFeatureValue","rep1","rep2","valueNode","needsExpansion","listRef","offsetHeight","flexDirection","paddingLeft","UnusedFeatures","UNUSED","Storage","getStoragePoints","getStorageDetails","storagePoints","storageDetails","setStorageItem","ConnectedStorage","Objects","getObjects","objectsData","objectDetails","setObjectsItem","ConnectedObjects","CellWithTooltip","rowRenderer","hover","USERNAME","MACHINE","SID","LOGON_TIME","PROGRAM","TYPE","TableRenderer","noDataMessage","tableProps","Sessions","setSortBehavior","getSessionsData","ConnectedSessions","AddServerCard","AddNewServerContainer","AddNewServer","AddDatabaseCard","AddNewDatabaseContainer","AddNewDatabase","ImportCSV","ImportCSVContainer","ImportCSVFile","selectedFile","setSelectedFile","downloadTemplate","FormData","blobData","blob","Blob","blobURL","URL","webkitURL","createObjectURL","tempLink","setAttribute","click","revokeObjectURL","JobView","JobForm","loggedInAs","setEditable","deriveFormState","disabledFields","userValue","dateValue","timeValue","time_invoke","handleJobCreation","FormVerbs","sendable","job_user","dateMoment","timeMoment","time","dateTime","minutes","asMinutes","timestamp","when","noOutput","JobOutput","setOutput","outputs","outputType","monitoring","wantStatusColor","wantStatusIcon","warning","ExecutiveDashboard","getExecutiveDashboard","getVirtualExecutiveDashboard","dashboardType","setDashboardType","RefreshDashboard","mdiChartDonut","ToggleDashboard","PhysicalDashboard","nrSelected","SearchSection","toggleServer","isServerSelected","toggleSelected","ConnectedSearchSection","SwitchContent","EmptyContent","Dashboard","ConnectedDashboard","OptionsTile","serversToGroup","filteredServers","groupedServers","serverKey","chartOptions","secondaryColor","mdiStarCircleOutline","OptionsList","OptionItem","OptionsChart","strokeDasharray","allowDecimals","domain","ServerView","ConnectedServerView","UsedOptions","selectedForComparison","visibleSids","inComparison","mdiCheck","isChecked","forceUpdate","mdiPlayCircle","compareSelected","resetSelected","optionType","updateSelection","VirtualDashboard","found","NoData","ToggleSelection","deselectAll","selectAll","ConnectedToggleSelection","chip","Hardware","poller","runPoller","pollInvocation","outputReponse","clearTimeout","renderModal","outputOpen","requestProcessData","isProcessLoading","executeCollectionProcess","loadingPrototypes","loadingDatatypes","loadingAccounts","loadingForms","normalizeParameter","chooseField","ConnectedHardware","Software","wasHardwareExecuted","mdiApplication","ConnectedSoftware","VMware","ConnectedVMware","Packaging","lms_repo","formValues","isDownloadDisabled","sendEmail","isEmailDisabled","wasVsphereExecuted","downloadFile","mdiArchiveArrowDownOutline","ConnectedPackaging","formatQuery","i18nMessages","general","header","persistor","persistStore","provider","locale","basename","App","render","webpackContext","req","webpackContextResolve","__webpack_require__","code","partial","args"],"mappings":"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","file":"js/app.6138efd1619bbf269208.js","sourcesContent":["import defaultConstants from './constants';\n\nexport const CONSTANTS = defaultConstants;\n","import React, { forwardRef, useMemo, useEffect, useState } from 'react';\n\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\n\nimport { useField, useFormikContext } from 'formik';\n\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport check from './field-level-validations';\n\nexport const Text = forwardRef(function Text(\n  { options, validate, defaultValue = '', value, required, reactToChange, ...props },\n  ref\n) {\n  const [shouldValidate, setShouldValidate] = useState(false);\n  const validation = useMemo(() => {\n    if (!shouldValidate) {\n      return null;\n    }\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required, shouldValidate]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  const formikCtx = useFormikContext();\n\n  useEffect(() => {\n    // used to allow the \"\" (empty string) value\n    if (value === undefined || value === null) {\n      helpers.setValue(defaultValue);\n    } else {\n      helpers.setValue(value);\n    }\n    helpers.setTouched(false);\n    setShouldValidate(true);\n  }, [value]);\n\n  useEffect(() => {\n    /**\n     * accepts a reaction function, ideally called when setValue is called.\n     * It should be used to update other known field names in reaction to this one changing.\n     */\n    reactToChange && reactToChange(value, formikCtx);\n  }, [value]);\n\n  useEffect(() => {\n    /** Unmount cleanup ? */\n    return () => {\n      if (!props.multiline || !props.isPopup) {\n        helpers.setValue(undefined);\n        // helpers.setTouched(false);\n        helpers.setError(undefined);\n      }\n    };\n  }, []);\n\n  if (field.value === undefined) {\n    return <ParameterLoader>Mounting Field</ParameterLoader>;\n  }\n\n  if (options && options.length) {\n    const selected = options.find(o => o.value === field.value) ?? null;\n    const description = options.find(o => o.value === field.value)?.description || undefined;\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        value={selected}\n        getOptionLabel={option => option.label || field.value}\n        getOptionDisabled={option => option.disabled}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n\n          /**\n            only on Select option changes for now. Can be modified for generic text,\n            but should be done when needed.\n            onChange from '...field' can be decorated.\n           */\n          reactToChange && reactToChange(option.value, formikCtx);\n        }}\n        disabled={props.disabled}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              description={description}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n\nexport function Email(props) {\n  const validations = useMemo(() => check.merge(check.email, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"email\" />;\n}\n\nexport function PhoneNumber(props) {\n  const validations = useMemo(() => check.merge(check.phone, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} />;\n}\n/* TODO: fix Integer required validation checks. Investigate how Yup returns the validateSync for this particular instance */\nexport function Integer({ validate, ...props }) {\n  const validations = useMemo(() => check.merge(props.required ?? check.required_not_null), [\n    props.required,\n    validate\n  ]); // validate is given by the parameter normalizer.\n  // it should be a list of check keys. TODO: map to validation functions to merge\n\n  return <Text {...props} validate={validations} type=\"number\" />;\n}\n\nexport function Password(props) {\n  return <Text {...props} type=\"password\" />;\n}\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: true },\n  { label: 'False', value: false }\n];\n\nexport const BooleanSelect = forwardRef(function Boolean({ options, ...props }, ref) {\n  return <Text type=\"text\" value defaultValue {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nexport const Date = forwardRef(function Date(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value ? moment(field.value).format('MM/DD/YYYY') : moment().utc();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date?.format('MM/DD/YYYY') || ' ')}\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Time = forwardRef(function Time(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value\n    ? moment(field.value, 'HH:mm')\n    : moment()\n        .utc()\n        .format('HH:mm');\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardTimePicker\n          ampm={false}\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"HH:mm\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => {\n            helpers.setValue(date?.format('HH:mm') || ' ');\n          }}\n          mask=\"__:__\"\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Select = forwardRef(function Select(\n  { options, validate, defaultValue, value, required, isNamespace, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue || '');\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  /**\n   * This should be moved to it's own thing.\n   * For now, it satisfies... :(((\n   */\n  if (options && options.length) {\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        getOptionSelected={option => option.value === field.value}\n        getOptionLabel={option => option.label || value || ''}\n        value={value}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              desription={undefined}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport { mdiCheckDecagram, mdiAlertDecagram } from '@mdi/js';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { node, oneOf, bool } from 'prop-types';\n\nimport './Result.local.scss';\n\nconst icons_map = {\n  success: mdiCheckDecagram,\n  fail: mdiAlertDecagram\n};\n\nexport const Result = ({ children, type }) => {\n  return (\n    <div\n      className={classnames('result-display', {\n        [type]: type\n      })}\n    >\n      <div className=\"result-icon\">\n        <SvgIcon fontSize=\"inherit\">\n          <path d={icons_map[type] || mdiAlertDecagram} />\n        </SvgIcon>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  type: oneOf(['success', 'fail']),\n  children: node\n};\n\nexport const ResultText = ({ children, compact }) => (\n  <h2 className={classnames('result-text', { compact })}>{children}</h2>\n);\n\nResultText.propTypes = {\n  compact: bool,\n  children: node\n};\n\nexport const ResultMessages = ({ messages = [] }) => (\n  <div className=\"result-messages\">\n    {messages.map((msg, index) => (\n      <div className=\"message-entry\" key={index}>\n        <p>{msg?.text?.split?.('\\n')?.[0]}</p>\n      </div>\n    ))}\n  </div>\n);\n\nResultText.propTypes = {\n  children: node\n};\n\nResult.Text = ResultText;\nResult.Messages = ResultMessages;\n","export const LOAD_ALL_ACCOUNTS = 'LOAD_ALL_ACCOUNTS';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const LOAD_ALL_LICENSES = 'LOAD_ALL_LICENSES';\nexport const LICENSE_FULL_REPORT = 'LICENSE_FULL_REPORT';\nexport const PROVIDE_SERVERS_USAGE = 'PROVIDE_SERVERS_USAGE';\nexport const LOAD_STORAGE_POINTS = 'LOAD_STORAGE_POINTS';\nexport const SET_STORAGE_NS = 'SET_STORAGE_NS';\nexport const LOAD_STORAGE_DETAILS = 'LOAD_STORAGE_DETAILS';\nexport const LOAD_OBJECT_DETAILS = 'LOAD_OBJECT_DETAILS';\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT';\nexport const LOAD_SESSIONS = 'LOAD_SESSIONS';\nexport const PROVIDE_DB_LAST_BACKUP = 'PROVIDE_DB_LAST_BACKUP';\nexport const PROVIDE_DB_STATUS = 'PROVIDE_DB_STATUS';\nexport const UPDATE_DB_STATUS = 'UPDATE_DB_STATUS';\nexport const LOAD_PROTOCOLS = 'LOAD_PROTOCOLS';\nexport const LOAD_COLLECTION_PROCESS = 'LOAD_COLLECTION_PROCESS';\nexport const EXECUTE_COLLECTION_PROCESS = 'EXECUTE_COLLECTION_PROCESS';\n","import moment from 'moment';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_ACCOUNTS,\n  CHANGE_STATE,\n  LOAD_ALL_LICENSES,\n  LICENSE_FULL_REPORT,\n  LOAD_SESSIONS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  UPDATE_DB_STATUS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_STORAGE_POINTS,\n  SET_STORAGE_NS,\n  LOAD_STORAGE_DETAILS,\n  SET_SELECTED_OBJECT,\n  PROVIDE_SERVERS_USAGE,\n  LOAD_PROTOCOLS,\n  LOAD_COLLECTION_PROCESS,\n  EXECUTE_COLLECTION_PROCESS\n} from '../actions';\n\nexport function loadAllAccountsThunk(payload) {\n  return async (dispatch, getState) => {\n    dispatch(creators.loading(LOAD_ALL_ACCOUNTS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n        page_size: 2147483645\n      });\n\n      response.data.protocols = getState().explorer.protocols;\n\n      dispatch(creators.success(LOAD_ALL_ACCOUNTS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_ACCOUNTS, error));\n      return;\n    }\n\n    if (payload?.from === 'dashboard') {\n      dispatch(provideServersUsageThunk());\n    } else {\n      dispatch(provideDBLastBackupThunks());\n      dispatch(provideDBStatusThunks());\n    }\n  };\n}\n\nexport function loadProtocolsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_PROTOCOLS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n      dispatch(creators.success(LOAD_PROTOCOLS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_PROTOCOLS, error));\n    }\n  };\n}\n\nexport function changeStateThunk(newState) {\n  return dispatch => {\n    dispatch(creators.action(CHANGE_STATE, newState));\n\n    return 'done';\n  };\n}\n\nexport function loadAllLicensesThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_LICENSES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n      dispatch(creators.success(LOAD_ALL_LICENSES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_LICENSES, error));\n    }\n  };\n}\n\nexport function getLicenseReportThunk(license) {\n  return async dispatch => {\n    dispatch(creators.loading(LICENSE_FULL_REPORT));\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${license.uuid}/display_license_full_report`\n      );\n      const report = response.data.data;\n      report.date_invoke = license.date_invoke;\n      dispatch(creators.success(LICENSE_FULL_REPORT, { [license.uuid]: report }));\n    } catch (error) {\n      dispatch(creators.fail(LICENSE_FULL_REPORT, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.SESSIONS(filters.fullPath), {\n        page_size: filters.page_size\n      });\n      dispatch(creators.success(LOAD_SESSIONS, { data: response.data, sort: filters.sort }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadStorageDetailsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_DETAILS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_DF(filters.fullPath));\n      const data =\n        response.data && response.data.length\n          ? { data: response.data, key: filters.fullPath }\n          : { data: [], key: filters.fullPath };\n      dispatch(creators.success(LOAD_STORAGE_DETAILS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_DETAILS, error));\n    }\n  };\n}\n\nexport function setStorageItemThunk(ns) {\n  return creators.success(SET_STORAGE_NS, ns);\n}\n\nexport function loadStoragePointsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_POINTS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_TS, {\n        dbconn: filters.fullPath\n      });\n      const data = { data: response.data, key: filters.fullPath } || {\n        data: {},\n        key: filters.fullPath\n      };\n      dispatch(creators.success(LOAD_STORAGE_POINTS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_POINTS, error));\n    }\n  };\n}\n\nexport function loadObjectsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n    const objectApis = [\n      { name: 'triggers', path: '/object_trigger' },\n      { name: 'tables', path: '/object_table' },\n      { name: 'indexes', path: '/object_index' },\n      { name: 'procedures', path: '/object_procedure' },\n      { name: 'packages', path: '/object_package' },\n      { name: 'packageBodies', path: '/object_package_body' }\n    ];\n    try {\n      let allData = await Promise.allSettled(\n        objectApis.map(api =>\n          RestClient.get(`/system/explorer${api.path}`, {\n            dbms: filters.fullPath,\n            page_size: 2147483645\n          })\n        )\n      );\n      allData = objectApis.map((api, index) => {\n        return {\n          res: allData[index]?.value?.data,\n          name: api.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function setSelectedObjectThunk(selected) {\n  return creators.success(SET_SELECTED_OBJECT, selected);\n}\n\nexport function provideServersUsageThunk() {\n  return async function serversUsage(dispatch, getState) {\n    let servers = [];\n\n    if (getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE')) {\n      servers = getState()\n        .explorer.structured.dbms.find(d => d.protocol === 'ORACLE')\n        .servers.slice();\n    }\n\n    async function loadUsagePerDb(server) {\n      const database = server.databases[0];\n      const response = await RestClient.get(`/system/explorer/${database.name}/cpu_load_server`);\n\n      const usage = parseFloat(response.data.HOST_CPU);\n\n      return {\n        dbms: database.protocol,\n        server: database.address,\n        usage\n      };\n    }\n\n    const usageResult = { servers: [] };\n\n    const allResults = await Promise.allSettled(\n      servers.map(server => {\n        return loadUsagePerDb(server);\n      })\n    );\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        usageResult.servers.push({\n          dbms: result.value.dbms,\n          address: result.value.server,\n          usage: result.value.usage || 0\n        });\n\n        return null;\n      });\n\n    usageResult.highLoadCount = usageResult.servers.filter(server => server.usage >= 75).length;\n    usageResult.servers.sort((a, b) => parseFloat(b.usage) - parseFloat(a.usage));\n\n    dispatch(creators.success(PROVIDE_SERVERS_USAGE, usageResult));\n\n    return usageResult;\n  };\n}\n\nexport function provideDBLastBackupThunks() {\n  return async function getDBLastBackup(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases.filter(db => db.special.database === 'mysql')];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [\n        ...databases,\n        ...Pgsql.databases.filter(db => db.special.database === 'postgres')\n      ];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases.filter(db => db.special.database === 'master')];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    async function loadDBLastBackup(database) {\n      const dbms = database.name;\n      const shell = servers.find(\n        s => s.databases && s.databases.find(d => d.name === database.name)\n      )?.name;\n\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_LAST_BACKUP, {\n        dbms,\n        shell\n      });\n\n      return {\n        name: database.name,\n        backup: moment(response.data.backup).isValid()\n          ? moment(response.data.backup).format('MMM DD YYYY')\n          : null\n      };\n    }\n\n    const dbLastBackup = [];\n\n    const allResults = await Promise.allSettled(databases.map(loadDBLastBackup));\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbLastBackup.push({\n          name: result.value.name,\n          backup: result.value.backup\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_LAST_BACKUP, dbLastBackup));\n\n    return dbLastBackup;\n  };\n}\n\nexport function provideDBStatusThunks() {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases.filter(db => db.special.database === 'mysql')];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [\n        ...databases,\n        ...Pgsql.databases.filter(db => db.special.database === 'postgres')\n      ];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases.filter(db => db.special.database === 'master')];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    async function loadDBStatus(database) {\n      const dbms = database.name;\n      const shell = servers.find(\n        s => s.databases && s.databases.find(d => d.name === database.name)\n      )?.name;\n\n      try {\n        const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n          dbms,\n          shell\n        });\n\n        let status = response.data.status?.toString().toLowerCase() || 'error';\n        // there is a case where API simply returns only 64, for not it will be treated as down\n        if (parseInt(response.data, 10) === 64) {\n          status = 'down';\n        }\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          message: response?.data?.message,\n          dbName: database?.special?.database,\n          status\n        };\n      } catch (error) {\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          message: database?.data?.message,\n          dbName: database?.special?.database,\n          status: 'error'\n        };\n      }\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(loadDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          message: result.value.message,\n          dbName: result.value.dbName\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshServerDbsStatusThunk(server) {\n  return async function refreshDbStatus(dispatch, getState) {\n    const { databases } = server;\n\n    async function loadDBStatus(database) {\n      dispatch(\n        creators.loading(UPDATE_DB_STATUS, [\n          {\n            name: database.name,\n            server: database.address,\n            dbms: database.protocol,\n            dbName: database?.special?.database,\n            status:\n              getState().explorer.dbStatus.find(db => db.name === database.name)?.status ||\n              'not-connected'\n          }\n        ])\n      );\n\n      const dbms = database.name;\n      const shell = server.name;\n      try {\n        const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, { dbms, shell });\n\n        let status = response.data.status?.toString().toLowerCase() || 'error';\n        // there is a case where API simply returns only 64, for not it will be treated as down\n        if (parseInt(response.data, 10) === 64) {\n          status = 'down';\n        }\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          message: response?.data?.message,\n          status\n        };\n      } catch (error) {\n        dispatch(\n          creators.fail(UPDATE_DB_STATUS, [\n            {\n              name: database.name,\n              server: database.address,\n              dbms: database.protocol,\n              dbName: database?.special?.database,\n              status: 'error',\n              error\n            }\n          ])\n        );\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          status: 'error',\n          error\n        };\n      }\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(loadDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          dbName: result.value.dbName,\n          message: result.value.message\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshDBStatusThunk(db) {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n\n    const selectedDBMS = structured.dbms.find(r => r.protocol === db.protocol);\n\n    const dbms = db.name;\n    const shell = selectedDBMS\n      ? selectedDBMS.servers.find(sv => sv.address === db.address)?.name\n      : undefined;\n\n    dispatch(\n      creators.loading(UPDATE_DB_STATUS, [\n        {\n          name: db.name,\n          server: db.address,\n          dbms: db.protocol,\n          status: getState().explorer.dbStatus.find(d => d.name === db.name)?.status\n        }\n      ])\n    );\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n        dbms,\n        shell\n      });\n\n      let status = response.data.status?.toString().toLowerCase() || 'error';\n      // there is a case where API simply returns only 64, for not it will be treated as down\n      if (parseInt(response.data, 10) === 64) {\n        status = 'down';\n      }\n\n      const dbStatus = [\n        {\n          name: dbms,\n          server: db.address,\n          dbms: db.protocol,\n          status\n        }\n      ];\n      dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n      return dbStatus;\n    } catch (error) {\n      dispatch(\n        creators.fail(UPDATE_DB_STATUS, [\n          {\n            name: db.name,\n            server: db.address,\n            dbms: db.protocol,\n            status: 'error',\n            error\n          }\n        ])\n      );\n    }\n  };\n}\n\nexport function loadProcessDetailsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_COLLECTION_PROCESS, { name: payload.name }));\n\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${payload.process}`\n      );\n\n      const details = {\n        name: payload.name,\n        data: response?.data?.data?.processes[0] || {}\n      };\n\n      dispatch(creators.success(LOAD_COLLECTION_PROCESS, details));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_COLLECTION_PROCESS, { name: payload.name, error }));\n    }\n  };\n}\n\nexport function executeCollectionProcessThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.action(EXECUTE_COLLECTION_PROCESS, { name: payload.name }));\n\n    return 'done';\n  };\n}\n","export const LOAD_ALL_GROUPS = 'LOAD_ALL_GROUPS';\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GRANT_PRIVILEGE = 'GRANT_GROUP_PRIVILEGE';\nexport const REVOKE_PRIVILEGE = 'REVOKE_GROUP_PRIVILEGE';\nexport const ADD_USERS_TO_GROUP = 'ADD_USERS_TO_GROUP';\nexport const REMOVE_USERS_FROM_GROUP = 'REMOVE_USERS_FROM_GROUP';\nexport const ADD_GROUPS_TO_GROUP = 'ADD_GROUPS_TO_GROUP';\nexport const REMOVE_GROUPS_FROM_GROUP = 'REMOVE_GROUPS_FROM_GROUP';\nexport const PATCH_SELECTED_GROUP = 'PATCH_SELECTED_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n","export const LOAD_ALL_USERS = 'LOAD_ALL_USERS';\nexport const SELECT_USER = 'SELECT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const REVOKE_PRIVILEGE = 'REVOKE_PRIVILEGE';\nexport const GRANT_PRIVILEGE = 'GRANT_PRIVILEGE';\n\nexport const ADD_USER_TO_GROUPS = 'ADD_USER_TO_GROUPS';\nexport const REMOVE_USER_FROM_GROUPS = 'REMOVE_USER_FROM_GROUPS';\nexport const DEACTIVATE_USER = 'DEACTIVATE_USER';\nexport const CREATE_USER = 'CREATE_USER';\n","import { RestClient } from 'shared/lib/rest';\nimport { ENTITY_TYPES_FETCH } from './selectors';\n\nexport function fetchEntities() {\n  return function thunk(dispatch) {\n    const promises = ENTITY_TYPES_FETCH.map(({ type, query }) => {\n      let url = `${type}`;\n      if (query) {\n        url = url.concat(`/${encodeURIComponent(query)}`);\n      }\n      const promise = RestClient.get(url, { page_size: 2147483645 });\n      dispatch({\n        type: 'FETCH_ENTITIES',\n        promise,\n        entityType: type\n      });\n      return promise;\n    });\n\n    dispatch({\n      type: 'FETCH_ENTITIES_ALL',\n      promise: promises\n    });\n  };\n}\n\nexport function fetchEntity(eType) {\n  const definition = ENTITY_TYPES_FETCH.find(desc => eType === desc.type);\n\n  if (!definition) {\n    return function notFound() {\n      console.warn('[fetchEntity] invalid entity type:', eType); // eslint-disable-line\n    };\n  }\n\n  return function thunk(dispatch) {\n    const promise = RestClient.get(\n      `${definition.type}${definition.query ? `/${definition.query}` : ''}?page_size=2147483645`\n    );\n\n    dispatch({\n      type: 'FETCH_ENTITIES',\n      promise,\n      entityType: definition.type\n    });\n\n    return promise;\n  };\n}\n\nexport function selectEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'SELECT_ENTITY'\n  };\n}\n\nexport function clearSelectedEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'CLEAR_SELECTED_ENTITY'\n  };\n}\n\nexport function setFilterType(value) {\n  return {\n    name: 'type',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function setFilterSearch(value) {\n  return {\n    name: 'search',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function openModal(name) {\n  return {\n    type: 'OPEN_ENTITIES_MODAL',\n    name\n  };\n}\n","import { sessionActions } from './session.action';\n\nexport const actions = {\n  ...sessionActions,\n};\n","import { jobsActions } from './jobs.action';\nimport { processActions } from './process.action';\nimport { globalFiltersActions } from './global-filters.action';\n\nexport const actions = {\n  ...jobsActions,\n  ...processActions,\n  ...globalFiltersActions,\n};\n","import Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LimitlessTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n    maxWidth: 'none'\n  }\n}))(Tooltip);\n","import React, { useState, useCallback, useMemo, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { useFormikContext } from 'formik';\nimport _ from 'lodash';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { mdiArrowExpand } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Modal } from 'shared/components/overlays';\nimport { ParameterLoader } from 'shared/components/loaders';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { Checkbox } from '../../controls/Checkbox/Checkbox';\nimport { Text } from './Generic';\nimport { formatAccount } from './formatters';\nimport check from './field-level-validations';\n\nexport const RSAKey = props => {\n  return <Text multiline {...props} />;\n};\n\nexport const FQName = ({ recieved, ...props }) => {\n  const { values } = useFormikContext();\n\n  const fqname = recieved?.fqname || recieved?.name || null;\n  let name = values[`fqname--${props?.name}`];\n  let namespace = values['fqname--namespace'];\n\n  // use the value received from the invocation\n  if (fqname && name === undefined) {\n    const parts = fqname.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  // use the value that was manually typed\n  if (name !== undefined && name.slice(-1) !== '.') {\n    const parts = name.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '30px' }}\n        value={name}\n        description=\"The relative or fully-qualified name of the process to be created.\"\n        required\n        name={`fqname--${props?.name}`}\n        label=\"name\"\n        disabled={props.disabled}\n      />\n      <NamespaceSelect\n        name=\"fqname--namespace\"\n        label=\"Parent namespace\"\n        description=\"namespace (leave blank for relative name)\"\n        value={namespace}\n        disabled={props.disabled}\n        type=\"fqname\"\n      />\n    </>\n  );\n};\n\nexport function QualifiedName(props) {\n  const validations = useMemo(() => check.merge(check.masName, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"text\" />;\n}\n\n/**\n * TODO:\n * These should be retireved through a connection\n * Platforms are protocols associated for accounts\n * For now they can be hardcoded\n */\nexport const AccountSelect = ({ protocols = [], ...props }) => {\n  const [showUrls, setShowUrls] = useState(false);\n  const boxName = `${props.name}-show-urls`;\n\n  const showToggle = useCallback(e => {\n    setShowUrls(e.target.checked);\n  }, []);\n\n  return (\n    <Ensure type=\"account\" inlineLoader>\n      {({ data: accounts }) => {\n        let list = accounts;\n\n        if (protocols && protocols.length) {\n          list = accounts.filter(account => protocols.includes(account.protocol));\n        }\n\n        const options = list.map(account => ({\n          label: showUrls ? formatAccount(account) : account.name,\n          value: account.name\n        }));\n\n        /**\n          TODO: filter by protocol\n         */\n        if (protocols.length) {\n          accounts.filter(Boolean);\n        }\n\n        return (\n          <FormGroup>\n            <Text {...props} options={options} />\n            <Checkbox\n              size=\"small\"\n              id={boxName}\n              name={boxName}\n              onChange={showToggle}\n              disabled={props.disabled}\n              label=\"Show Account URLs\"\n            />\n          </FormGroup>\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const PLATFORMS = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'MariaDB', value: 'MariaDB', tester: /mariadb\\./ },\n  { label: 'MySQL', value: 'MySQL', tester: /mysql\\./ },\n  { label: 'Oracle', value: 'Oracle', tester: /oracle\\./ },\n  { label: 'PostgreSQL', value: 'PostgreSQL', tester: /pgsql\\./ },\n  {\n    label: 'Microsoft SQL Server',\n    value: 'Microsoft SQL Server',\n    tester: /microsoft\\.sqlserver\\./\n  },\n  { label: 'Oracle RDS', value: 'Oracle RDS', tester: /.rds\\.oracle\\./ }\n];\n\nexport const PlatformSelect = props => {\n  const { values } = useFormikContext();\n\n  let platformValue = values?.platform ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availablePlatforms = PLATFORMS.slice(1).reverse();\n    platformValue =\n      availablePlatforms.find(platform => platform.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={platformValue} name=\"platform\" {...props} options={PLATFORMS} />;\n};\n\nexport const ProcessSelect = props => {\n  const { values } = useFormikContext();\n  const platformValue = values?.platform ?? '';\n\n  let platform = PLATFORMS[0];\n\n  if (platformValue) {\n    platform = PLATFORMS.find(p => p.value === platformValue);\n  }\n\n  return (\n    <Ensure type=\"namespace\" inlineLoader>\n      <Ensure type=\"process\" inlineLoader>\n        {({ data }) => {\n          let processes = data;\n\n          if (platform && platform.value !== 'all') {\n            processes = data.filter(process => platform.tester.test(process.name));\n          }\n\n          /** TODO, CHECK */\n          processes = processes.filter(process => {\n            if (processes.meta && process.meta.appearance) {\n              return process.meta.appearance !== 'Hidden';\n            }\n\n            return true;\n          });\n\n          // display only processes that have the is_executable === true\n          // the others need to be compiled first\n          const OPTIONS = processes\n            .filter(p => p.is_executable)\n            .map(item => ({\n              value: item.name,\n              label: item.name,\n              description: item.description,\n              disabled: item.meta && item.meta.appearance === 'Greyed'\n            }));\n\n          return <Text type=\"text\" defaultValue=\"\" name=\"process\" {...props} options={OPTIONS} />;\n        }}\n      </Ensure>\n    </Ensure>\n  );\n};\n\nexport const NamespaceSelect = ({ value, ...props }) => {\n  const { values } = useFormikContext();\n  const defaultValue = values.namespace || '';\n  let customVal = value;\n\n  return (\n    <Ensure type=\"namespace\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading namespaces...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load namespaces.</ParameterLoader>;\n        }\n\n        let namespaces = data;\n\n        namespaces = namespaces.filter(namespace => {\n          if (namespace.meta && namespace.meta.appearance) {\n            return namespace.meta.appearance !== 'Hidden';\n          }\n\n          return true;\n        });\n\n        const OPTIONS = namespaces.map(item => ({\n          value: item.name,\n          label: item.name,\n          disabled: item.meta && item.meta.appearance === 'Greyed'\n        }));\n\n        if (props?.type === 'fqname') {\n          customVal = OPTIONS.find(o => o.value === value)?.value || '';\n        }\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            name=\"namespace\"\n            value={customVal}\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const FormPrototypeSelect = props => {\n  return (\n    <Ensure type=\"prototype\" inlineLoader>\n      {({ data: prototypes }) => {\n        const list = prototypes || [];\n\n        const options = list.map(prototype => ({\n          label: prototype.name,\n          value: prototype.name\n        }));\n\n        return <Text fullWidth {...props} description=\"\" options={options} />;\n      }}\n    </Ensure>\n  );\n};\n\nexport const ModeSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.mode || '';\n\n  return (\n    <Ensure type=\"type\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading type...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load types.</ParameterLoader>;\n        }\n\n        const modes = data.filter(type => type.name === 'mas0300.sys.account.privilege_mode')[0];\n\n        if (modes.meta && modes.meta.appearance === 'Hidden') {\n          return null;\n        }\n\n        const OPTIONS =\n          modes.enumerations &&\n          modes.enumerations.map(item => ({\n            value: item.label,\n            label: item.label,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            disabled={modes.meta && modes.meta.appearance === 'Greyed'}\n            name=\"process\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nfunction variadicListReducer(list, action) {\n  switch (action.type) {\n    case 'add_new_parameter':\n      return produce(list, draft => {\n        draft.push({ name: '', type: '', deflt: undefined, description: null, value: '' });\n      });\n\n    case 'remove_parameter':\n      return produce(list, draft => {\n        draft.pop();\n      });\n\n    default:\n      return list;\n  }\n}\n\nfunction useVariadicList(recieved) {\n  const [list, dispatch] = useReducer(variadicListReducer, recieved?.replvars || []);\n\n  return { list, dispatch };\n}\n\nexport const Variadic = ({ recieved, disabled }) => {\n  const { values } = useFormikContext();\n  const displayDeftlDesc = selectedProcess !== 'vendita.oracle.rdbms.cli.sqlplus.execute';\n\n  const { list, dispatch } = useVariadicList(recieved);\n\n  const selectedProcess = values.process;\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvars</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Ensure type=\"type\">\n          {({ data: datatypes }) => {\n            const options = datatypes\n              .filter(dataType => {\n                if (\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.script' ||\n                  selectedProcess === 'mas0300.os.svc.db.data.sql.query_import' ||\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.execute' ||\n                  selectedProcess === 'dbatools.oracle.run.import_sqlplus_query'\n                ) {\n                  return dataType.name === 'string' || dataType.name === 'integer';\n                }\n                return true;\n              })\n              .map(dataType => {\n                return {\n                  label: dataType.name,\n                  value: dataType.name\n                };\n              });\n\n            return (\n              <>\n                <div>\n                  {list.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <VariadicInstance\n                        data={item}\n                        index={index}\n                        defltDesc={displayDeftlDesc}\n                        types={options}\n                        disabled={disabled}\n                      />\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  }}\n                >\n                  {list.length > 0 && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        dispatch({ type: 'remove_parameter' });\n                      }}\n                      disabled={disabled}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                  <Button\n                    onClick={() => {\n                      dispatch({ type: 'add_new_parameter' });\n                    }}\n                    disabled={disabled}\n                  >\n                    Add\n                  </Button>\n                </div>\n              </>\n            );\n          }}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nfunction VariadicInstance({ data = {}, index, defltDesc, types, disabled }) {\n  const name_base = `replvar--${index}`;\n\n  let parsedDeflt = data.deflt;\n\n  if (data.deflt) {\n    parsedDeflt = data.deflt.replace(\"str('\\\"'\", '').replace(\"'\\\"')\", '');\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Name\"\n        type=\"text\"\n        name={`${name_base}--name`}\n        value={data.name}\n        disabled={disabled}\n        validate={check.merge(check.firstCharLetter, check.masName)}\n        required\n      />\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Type\"\n        type=\"text\"\n        name={`${name_base}--type`}\n        options={types}\n        value={data.type}\n        disabled={disabled}\n        required\n      />\n      {defltDesc && (\n        <>\n          <Text\n            style={{ marginBottom: '15px' }}\n            label=\"Deflt\"\n            type=\"text\"\n            name={`${name_base}--deflt`}\n            value={parsedDeflt}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n          <Text\n            style={{ marginBottom: '30px' }}\n            label=\"Description\"\n            type=\"text\"\n            name={`${name_base}--description`}\n            value={data.description}\n            defaultValue={null}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n        </>\n      )}\n      {!defltDesc && (\n        <Text\n          style={{ marginBottom: '15px' }}\n          label=\"Value\"\n          type=\"text\"\n          name={`${name_base}--value`}\n          value={data.value}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n}\n\nexport const Multiline = props => {\n  const [open, setOpen] = useState(false);\n  const { values } = useFormikContext();\n  const value = values[props.name];\n\n  return (\n    <>\n      <Text\n        InputProps={{\n          startAdornment: (\n            <InputAdornment>\n              <LightTooltip title=\"Expand\">\n                <SvgIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    setOpen(true);\n                  }}\n                >\n                  <path d={mdiArrowExpand} />\n                </SvgIcon>\n              </LightTooltip>\n            </InputAdornment>\n          )\n        }}\n        value={value}\n        isPopup={open}\n        multiline\n        {...props}\n      />\n      <Modal open={open}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <Paper.Content>\n            <Text value={value} multiline isPopup={open} variant=\"standard\" {...props} />\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={() => setOpen(false)}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const Replvalues = ({ recieved, disabled, ...props }) => {\n  const { values } = useFormikContext();\n  const keys = Object.keys(values);\n  const replvars = keys.filter(key => key.startsWith('replvar'));\n  const valuesNr = replvars.length / 4;\n  const replvaluesParams = [];\n\n  if (valuesNr > 0) {\n    for (let i = 0; i < valuesNr; i++) {\n      const type =\n        values[`replvar--${i}--type`] === 'integer' ? 'number' : values[`replvar--${i}--type`];\n      const label = values[`replvar--${i}--name`];\n      const name = `replvalue--${i}`;\n      const value =\n        recieved?.replvalues && recieved.replvalues[values[`replvar--${i}--name`]]\n          ? recieved.replvalues[values[`replvar--${i}--name`]]\n          : values[`replvalue--${i}`];\n      replvaluesParams.push({ type, label, name, value });\n    }\n  }\n\n  if (replvaluesParams.length > 0) {\n    return (\n      <>\n        <Section>\n          <Section.Header>\n            <Section.Title>replvalues</Section.Title>\n          </Section.Header>\n        </Section>\n        {replvaluesParams.map((repl, index) => {\n          return (\n            <Text\n              key={index}\n              style={{ marginBottom: '15px' }}\n              label={repl.label}\n              type={repl.type}\n              name={repl.name}\n              value={repl.value}\n              disabled={disabled}\n              description={props.description}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvalues</Section.Title>\n      </Section.Header>\n    </Section>\n  );\n};\n\nexport const Uuid = props => {\n  return <Text validate={check.uuid} {...props} />;\n};\n","export function hasWritePrivileges(entity) {\n  return entity?.privileges?.effective?.includes?.('write');\n}\n\nexport function hasOnlyReadPrivilege(entity) {\n  if (entity?.privileges?.effective?.length === 1 && entity?.privileges?.effective[0] === 'read') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isOnlySelectGroup(details) {\n  if (!details) return false;\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (\n    (userDetails.member_of.length === 1 && userDetails.member_of[0] === 'select') ||\n    (userDetails.member_of.length === 2 &&\n      userDetails.member_of.includes('select') &&\n      userDetails.member_of.includes('user'))\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isAdmin(details) {\n  if (!details) return false;\n\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (userDetails.member_of.includes('admin')) {\n    return true;\n  }\n\n  return false;\n}\n","import React, { useState } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nexport const SubmitButton = ({ children = 'Submit', confirmation, ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating, dirty } = useFormikContext();\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        disabled={!dirty || isSubmitting || isValidating}\n        onClick={() => {\n          console.log('submitting', values); // eslint-disable-line\n          if (confirmation) {\n            setOpen(true);\n          } else {\n            submitForm();\n            //sessionStorage.removeItem('persist:root');\n          }\n        }}\n        {...props}\n      >\n        {children}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '350px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n          <Paper.Content scrollable={false}>\n            <Result type=\"fail\">\n              <BodyText>Are you sure you want to save?</BodyText>\n            </Result>\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                No\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                  submitForm();\n                }}\n              >\n                Yes\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","export const InvocationStatus = {\n  NEW: '__NEW__',\n  ALL: '__ALL__',\n  NOT_FETCHED: 'NOT_FETCHED',\n  ABORTED: 'ABORTED',\n  SCHEDULED: 'SCHEDULED',\n  SUCCEEDED: 'SUCCEEDED',\n  FAILED: 'FAILED',\n  EXECUTING: 'EXECUTING',\n  DELAYED: 'DELAYED',\n  KILLED: 'KILLED'\n};\n\nexport const AllowOutputFor = [\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED,\n  InvocationStatus.FAILED,\n  InvocationStatus.SUCCEEDED,\n  InvocationStatus.EXECUTING\n];\n\nexport const AllowGeneralEditingFor = [InvocationStatus.NEW];\n\nexport const CannotShowStatusFor = [\n  InvocationStatus.NEW,\n  InvocationStatus.ALL,\n  InvocationStatus.NOT_FETCHED\n];\n\nexport const FAILURES = [\n  InvocationStatus.FAILED,\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED\n];\n\nexport const SUCESSES = [InvocationStatus.SUCCEEDED];\n\nexport const WARNINGS = [InvocationStatus.DELAYED, InvocationStatus.SCHEDULED];\n","// function Node(payload) {\n//   const data = payload;\n//   const edges = [];\n\n//   return {\n//     getEdges() {\n//       return edges;\n//     },\n//     getData() {\n//       return data;\n//     },\n//     addEdge(edge) {\n//       edges.push(edge);\n//       return edges;\n//     }\n//   };\n// }\n\nimport _ from 'lodash';\nimport { createSelector } from 'reselect';\n\nfunction pipe(...fns) {\n  return arg => fns.reduce((prev, fn) => fn(prev), arg);\n}\n\nfunction filterBy(selector, equalityFn, value) {\n  return data => {\n    if (value) {\n      return data.filter(el => equalityFn(selector(el), value));\n    }\n\n    return data;\n  };\n}\n\nexport function retrieveFilteredAccounts(protocol, server) {\n  return state => {\n    const { accounts } = state.explorer;\n\n    const filterByProtocol = filterBy(\n      el => (el.nodes[0] ? el.nodes[0].protocol : ''),\n      (stateValue, currentValue) => stateValue === currentValue,\n      protocol\n    );\n\n    const filterByServer = filterBy(\n      el => Object.keys(el.servers),\n      (servers, currentServer) => servers.includes(currentServer),\n      server\n    );\n\n    return pipe(filterByProtocol, filterByServer)(accounts);\n  };\n}\n\nexport function retrieveServerEntry({ protocol, address }, structure) {\n  const dbms = structure.dbms.find(entry => entry.protocol === protocol);\n  return dbms && dbms.servers.find(server => server.address === address);\n}\n\nexport function retrieveDatabaseEntry({ database, protocol, address }, structure) {\n  const server = retrieveServerEntry({ protocol, address }, structure);\n\n  return server.databases.find(db => db.special.database === database);\n}\n\nconst getStatePath = state => state.explorer.state.path;\nconst getStructured = state => state.explorer.structured.dbms;\nconst getSessions = state => state.explorer.sessions;\nconst getSessionsFlags = state => state.explorer.flags.sessions;\nconst getStoragePointsLoadingFlag = state => state.explorer.flags.storage.loadingPoints;\nconst getStorageDetailsLoadingFlag = state => state.explorer.flags.storage.loadingDetails;\nconst getSelectedStorage = state => state.explorer.storage.selected;\nconst getStoredEntries = state => state.explorer.storage.storedEntries;\nconst getSelectedObject = state => state.explorer.objects.selectedObject;\nconst getSelectedOwner = state => state.explorer.objects.selectedOwner;\nconst getObjectsEntries = state => state.explorer.objects.storedEntries;\nconst getObjectsLoadingFlag = state => state.explorer.flags.objects.loading;\n\nexport const getFullPath = createSelector([getStatePath, getStructured], (fullPath, dbms) => {\n  const pathArr = fullPath.split('--');\n  return dbms\n    .find(({ path }) => path === pathArr[0])\n    ?.servers.find(({ address }) => address === pathArr[1])\n    ?.databases.find(({ special }) => special.database === pathArr[2])?.name;\n});\n\nexport const haveStorageData = createSelector(\n  [getFullPath, getStoredEntries],\n  (fullPath, storedEntries) => {\n    const selectedStorage = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedStorage).length > 0;\n  }\n);\n\nexport const getFormattedStorage = createSelector(\n  [getFullPath, getStoredEntries, getStoragePointsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    const points = storedEntries[fullPath]?.points;\n    if (isLoading || !_.isArray(points)) {\n      return [];\n    }\n    const factor = 1024;\n    return points.map(point => {\n      let usage = (point.Used_MB / point.Total_MB) * 100;\n      if (usage < 0) {\n        usage = 0;\n      }\n      return {\n        ns: point.Tablespace,\n        freePerc: point['Pct._Free'],\n        freeGB: point.Free_MB / factor,\n        totalGB: point.Total_MB / factor,\n        usedGB: point.Used_MB / factor,\n        usage\n      };\n    });\n  }\n);\n\nexport const haveObjectsData = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const selectedObjects = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedObjects).length > 0;\n  }\n);\n\nexport const getStorageDetailsData = createSelector(\n  [\n    getFullPath,\n    getStoredEntries,\n    getFormattedStorage,\n    getStorageDetailsLoadingFlag,\n    getSelectedStorage\n  ],\n  (fullPath, storedEntries, list, isLoading, selectedNS) => {\n    const details = storedEntries[fullPath]?.details;\n    if (isLoading || !_.isArray(details)) {\n      return {\n        tablespace: {},\n        files: []\n      };\n    }\n    return {\n      tablespace: list.find(({ ns }) => ns === selectedNS),\n      files: details.filter(({ TABLESPACE_NAME }) => TABLESPACE_NAME === selectedNS)\n    };\n  }\n);\n\nexport const getStructuredObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n\n    const objects = storedEntries[fullPath] || {};\n    const tree = Object.keys(objects).reduce((acc, key) => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          if (acc[object.OWNER] && !acc[object.OWNER].includes(key)) {\n            acc[object.OWNER].push(key);\n          } else {\n            acc[object.OWNER] = [key];\n          }\n        });\n      return acc;\n    }, []);\n    return Object.keys(tree).map(key => ({ owner: key, objects: tree[key] }));\n  }\n);\n\nexport const getInvalidObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const invalidObjects = [];\n    const objects = storedEntries[fullPath] || {};\n    Object.keys(objects).forEach(key => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          const included = invalidObjects.findIndex(\n            ({ owner, object: name }) => owner === object?.OWNER && name === key\n          );\n          if (object && object.STATUS !== 'VALID' && included === -1) {\n            invalidObjects.push({ owner: object.OWNER, object: key });\n          }\n        });\n    });\n    return invalidObjects;\n  }\n);\n\nexport const getSelectedObjectData = createSelector(\n  [getSelectedObject, getSelectedOwner, getFullPath, getObjectsEntries],\n  (object, owner, fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!object || !owner || !_.isObject(objects) || !_.isArray(objects[object])) {\n      return [];\n    }\n    return objects[object].filter(({ OWNER }) => OWNER === owner);\n  }\n);\n\nexport const getSortedSessions = createSelector(\n  [getSessions, getSessionsFlags],\n  (sessions, { loading, sort }) => {\n    if (loading || !_.isArray(sessions)) {\n      return [];\n    }\n    if (sort === undefined) {\n      return sessions;\n    }\n    let sortFunction;\n    // Backend doesn't support sorting at this time. Consider moving sort to backend though\n    if (sort.order === 'asc') {\n      sortFunction = (a, b) => {\n        return new Date(a[sort.sortKey]).getTime() - new Date(b[sort.sortKey]).getTime();\n      };\n    } else {\n      sortFunction = (a, b) => {\n        return new Date(b[sort.sortKey]).getTime() - new Date(a[sort.sortKey]).getTime();\n      };\n    }\n    return sessions.slice().sort(sortFunction);\n  }\n);\n\nexport const getBackup = (database, backups) => {\n  const backup = backups.find(db => db.name === database.name)?.backup;\n\n  return backup;\n};\n\nexport const getDBStatus = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n\n  return status;\n};\n\nexport const getDBStatusInfo = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n  const info = statuses.find(db => db.name === database.name)?.message;\n\n  return dbMessage(status, info);\n};\n\nconst STATUS_TYPES = {\n  down: 'down',\n  up: 'up',\n  error: 'error'\n};\n\nexport const getDBMSStatus = (dbms, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n\n  const allStatuses = {};\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n\nexport const getDBMSStatusInfo = (dbms, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const dbmsStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': []\n  };\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      dbmsStatus[entry.status].push({\n        server: entry.server,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (dbmsStatus.down.length > 0) {\n    if (dbmsStatus.down.length === 1) {\n      message += `${dbmsStatus.down[0].server} has a database down. `;\n    } else {\n      message += `The following servers: ${dbmsStatus.down.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database down. `;\n    }\n  }\n\n  if (dbmsStatus.error.length > 0) {\n    if (dbmsStatus.error.length === 1) {\n      message += `${dbmsStatus.error[0].server} has a database with error. `;\n    } else {\n      message += `\\n The following servers: ${dbmsStatus.error.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database with error. `;\n    }\n  }\n\n  if (dbmsStatus['not-connected'].length > 0) {\n    if (dbmsStatus['not-connected'].length === 1) {\n      message += `${dbmsStatus['not-connected'][0].server} server has a database which status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases from servers: (${dbmsStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    dbmsStatus.down.length === 0 &&\n    dbmsStatus.error.length === 0 &&\n    dbmsStatus['not-connected'].length === 0 &&\n    dbmsStatus.up.length > 0\n  ) {\n    message = 'All servers are up.';\n  }\n\n  return message;\n};\n\nexport const getServerStatus = (server, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n  const allStatuses = {};\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n\nexport const getServerStatusInfo = (server, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const serverStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': []\n  };\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      serverStatus[entry.status].push({\n        dbName: entry.dbName,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (serverStatus.down.length > 0) {\n    if (serverStatus.down.length === 1) {\n      message += `${serverStatus.down[0].dbName} database is down. `;\n    } else {\n      message += `The following databases: ${serverStatus.down.map(sv => sv.dbName)} are down. `;\n    }\n  }\n\n  if (serverStatus.error.length > 0) {\n    if (serverStatus.error.length === 1) {\n      message += `${serverStatus.error[0].dbName} database has errors. `;\n    } else {\n      message += `Errors reported in databases: (${serverStatus.error.map(sv => sv.dbName)}). `;\n    }\n  }\n\n  if (serverStatus['not-connected'].length > 0) {\n    if (serverStatus['not-connected'].length === 1) {\n      message += `${serverStatus['not-connected'][0].dbName} database status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases: (${serverStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    serverStatus.down.length === 0 &&\n    serverStatus.error.length === 0 &&\n    serverStatus['not-connected'].length === 0 &&\n    serverStatus.up.length > 0\n  ) {\n    message = 'All databases are up.';\n  }\n\n  return message;\n};\n\nexport const getEntityPendingStatus = (entity, statuses, type) => {\n  const pathArray = entity.path.split('--');\n  const dbms = pathArray[0];\n  if (statuses.length === 0) return { label: `Loading ${type} status...`, loading: true };\n\n  if (type === 'server') {\n    return statuses\n      .filter(en => en.dbms === dbms && en.server === entity.address)\n      .find(e => e.loading)\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh dbs status', loading: false };\n  }\n\n  if (type === 'db') {\n    return statuses.find(db => db.name === entity.name)?.loading\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh db status', loading: false };\n  }\n\n  return { label: 'Refresh', type: false };\n};\n\nexport const dbMessage = (status, message) => {\n  if (!message) {\n    if (status === 'up') {\n      return 'Instance is up.';\n    }\n\n    if (status === 'error') {\n      return 'An unknown error has occurred on this instance.';\n    }\n\n    if (status === 'down') {\n      return 'Instance is down.';\n    }\n\n    if (status === 'not-connected') {\n      return 'Please refresh in order to get the instance status.';\n    }\n  }\n\n  return message;\n};\n","import React, { useCallback } from 'react';\nimport { bool, func, node, shape, object, string } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './AvatarCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nexport const AvatarCard = ({\n  label,\n  avatar = {},\n  selected,\n  data,\n  onSelect,\n  action,\n  description,\n  ...props\n}) => {\n  const focusable = {\n    ...(onSelect && {\n      onFocus: useCallback(\n        event => {\n          event.stopPropagation();\n          onSelect(data);\n        },\n        [onSelect, data]\n      ),\n      tabIndex: props.disabled ? -1 : 0\n    })\n  };\n\n  return (\n    <div\n      {...focusable}\n      className={classnames('avatar-card', { selected })}\n      data-qa={`avatar-card-of-${label}`}\n      {...props}\n    >\n      <Avatar className=\"card-avatar\" alt={label} src={avatar.src}>\n        {avatar.initial || avatar.fallback}\n      </Avatar>\n      <span className=\"card-label\">{label}</span>\n      <div className=\"right-slot\">\n        {action && (\n          <span onClick={containEvent} className=\"action-slot\">\n            {action}\n          </span>\n        )}\n        {typeof description === 'string' && (\n          <LightTooltip placement=\"right\" title={description}>\n            <SvgIcon>\n              <Icon path={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction containEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nAvatarCard.propTypes = {\n  label: node,\n  selected: bool,\n  disabled: bool,\n  avatar: shape({\n    src: string,\n    fallback: node\n  }),\n  data: object,\n  onSelect: func,\n  action: node\n};\n","import * as Yup from 'yup';\n\nexport const mergeValidations = (...callbacks) => value => {\n  let error;\n\n  callbacks.forEach(provided => {\n    if (provided && typeof provided === 'function') {\n      error = provided(value);\n    }\n  });\n\n  return error;\n};\n\nexport const checkRequired = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkRequiredNotNullable = async value => {\n  try {\n    await Yup.string()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkEmail = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .email('Invalid email format.')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkPhoneNumber = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUnsignedInt = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[-]!$/, {\n        excludeEmptyString: true,\n        message: 'The parameter must be unsigned.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkName = value => {\n  if (!/^(?:[a-z_][a-z0-9_\\\\.]*)$/i.test(value) || (value && value.substr(-1) === '.')) {\n    return 'A valid MAS relative name is required.';\n  }\n};\n\nexport const checkFirstLetter = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[a-zA-Z].*/, {\n        excludeEmptyString: true,\n        message: 'First character must be a letter'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUuid = value => {\n  if (value) {\n    if (!/^[a-fA-F0-9-]+$/.test(value)) {\n      return 'Only hexadecimal values (0-9, a-f, A-F) and hyphens (\"-\") are allowed';\n    }\n    const copy = value.replace(/-/g, '');\n    if (copy.length !== 32) {\n      return 'A string of 32 hexadecimal with hyphens (\"-\") is required (ex: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)';\n    }\n  }\n};\n\nexport const noop = () => {};\n\nexport default {\n  merge: mergeValidations,\n  required: checkRequired,\n  required_not_null: checkRequiredNotNullable,\n  email: checkEmail,\n  phone: checkPhoneNumber,\n  unsigned_int: checkUnsignedInt,\n  unsigned_float: noop,\n  signed_float: noop,\n  masName: checkName,\n  firstCharLetter: checkFirstLetter,\n  uuid: checkUuid\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.shared;\n\nexport const jobsSelector = createSelector(localState, state => state.get('jobs'));\n\nexport const connectionsSelector = createSelector(localState, state => state.get('connections'));\n\nexport const jobsSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('jobs')\n); // eslint-disable-line\n\nexport const processesSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('processes')\n); // eslint-disable-line\n\nexport const globalFiltersSelector = createSelector(localState, state =>\n  state.get('globalFilters')\n); // eslint-disable-line\n","export const PROVIDE_EXECUTIVE_DASHBOARD = 'PROVIDE_EXECUTIVE_DASHBOARD';\nexport const PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD = 'PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD';\n\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const TOGGLE_SERVER = 'TOGGLE_SERVER';\n","import { createSelector } from 'reselect';\n\n//\nexport const getCurrentUserName = createSelector(\n  state => state.session,\n  session => {\n    /** ImmutableJs object :( */\n    return session.get('currentUser').get('name');\n  }\n);\n\nexport const getCurrentUserDetails = createSelector(\n  state => state.session,\n  session => {\n    return session.get('currentUser').get('details');\n  }\n);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nexport function loadAllUsersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_USERS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_USERS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadUserThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USER, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USER, error));\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(GRANT_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(REVOKE_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function addUserToGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/grant`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, allUsers.data));\n\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function removeUserFromGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function deactivateUserThunk(user) {\n  return async dispatch => {\n    dispatch(creators.loading(DEACTIVATE_USER, user));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}/revoke`, {\n        groups: user.member_of\n      });\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(DEACTIVATE_USER, allUsers.data));\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DEACTIVATE_USER, error));\n\n      return error.data;\n    }\n  };\n}\n\nexport function createUserThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.username,\n      password: values.password,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_USER, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, refreshed.data));\n\n      dispatch(creators.success(CREATE_USER));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_USER, error));\n      return error?.response?.data;\n    }\n  };\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport function loadAllGroupsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_GROUPS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_GROUPS, error.data));\n\n      return error.data;\n    }\n  };\n}\n\nexport function loadGroupThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_GROUP, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${name}`);\n      dispatch(creators.success(LOAD_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_GROUP, error.data));\n    }\n  };\n}\n\nexport function createGroupThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.groupname,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_GROUP, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, refreshed.data));\n\n      dispatch(creators.success(CREATE_GROUP));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_GROUP, error));\n      return error?.response?.data;\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(GRANT_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(REVOKE_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function removeUsersFromGroupThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_USERS_FROM_GROUP, params));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`, {\n        groups: [params.group]\n      });\n\n      const group = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(REMOVE_USERS_FROM_GROUP, group.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_USERS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeSubGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_GROUPS_FROM_GROUP, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(REMOVE_GROUPS_FROM_GROUP, response.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_GROUPS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function addUsersToGroupThunk(params) {\n  return async dispatch => {\n    const { group, users } = params;\n\n    dispatch(creators.loading(ADD_USERS_TO_GROUP, params));\n\n    try {\n      await Promise.all(\n        users.map(async user => {\n          return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant`, {\n            groups: [group]\n          });\n        })\n      );\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(ADD_USERS_TO_GROUP, response.data));\n\n      return response.data;\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USERS_TO_GROUP, errorMsg));\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeGroupThunk(group) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_GROUP, group));\n\n    try {\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}`);\n      dispatch(creators.success(DELETE_GROUP));\n\n      dispatch(loadAllGroupsThunk());\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DELETE_GROUP, error));\n\n      return error.data;\n    }\n  };\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { array, func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SearchableList.local.scss';\n\nexport const SearchableList = ({ items, children, filter, variant, visibleScroll }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const [query, setQuery] = useState('');\n  const filtered = items.filter(item => filter(item, query));\n\n  return (\n    <>\n      <div className=\"search-input-slot\">\n        <SimpleSearchInput\n          data-qa=\"users-search-input\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <div\n        className={classnames('searchable-list-slot', {\n          visibleScroll,\n          scrolled,\n          [variant]: variant\n        })}\n      >\n        <ul\n          className={classnames('list', {\n            [variant]: variant\n          })}\n          onWheel={onWheel}\n        >\n          {filtered.map((item, index, list) => (\n            <li key={index} className=\"list-item\">\n              {children(item, index, list)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nSearchableList.propTypes = {\n  items: array,\n  children: func,\n  filter: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nSearchableList.defaultProps = {\n  items: [],\n  filter: (item, query) => item === query\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport { Text, Email, Integer, Password, PhoneNumber, BooleanSelect } from '../editors/Generic';\nimport {\n  ProcessSelect,\n  AccountSelect,\n  RSAKey,\n  FQName,\n  Variadic,\n  Multiline,\n  Replvalues,\n  Uuid\n} from '../editors/Custom';\n\nfunction extractParameter({ parameter, recieved, ...others }) {\n  const { type, ...additional } = parameter.editor;\n\n  return {\n    key: parameter.name,\n    label: parameter.label || parameter.name,\n    name: parameter.field_name || parameter.name,\n    required: parameter.is_required,\n    defaultValue: parameter.deflt || parameter.value,\n    description: parameter.description,\n    ...additional,\n    ...others\n  };\n}\n\nexport const TextParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Text {...passable} />;\n};\n\nexport const PasswordParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Password {...passable} />;\n};\n\nexport const PhoneNumberParameter = props => {\n  const passable = extractParameter(props);\n\n  return <PhoneNumber {...passable} />;\n};\n\nexport const BooleanParameter = props => {\n  const passable = extractParameter(props);\n\n  return <BooleanSelect {...passable} />;\n};\n\nexport const IntegerParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Integer {...passable} />;\n};\n\nexport const EmailParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Email {...passable} />;\n};\n\nexport const ProcessParameter = props => {\n  const passable = extractParameter(props);\n\n  return <ProcessSelect {...passable} />;\n};\n\nexport const AccountParameter = props => {\n  const passable = extractParameter(props);\n\n  return <AccountSelect protocols={[]} {...passable} />;\n};\n\nexport const VariadicParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Variadic recieved={props.recieved} {...passable} />;\n};\n\nexport const ReplvaluesParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Replvalues recieved={props.recieved} {...passable} />;\n};\n\nexport const FQNameParameter = props => {\n  const passable = extractParameter(props);\n\n  return <FQName recieved={props.recieved} {...passable} />;\n};\n\nexport const RSAKeyParameter = props => {\n  const passable = extractParameter(props);\n\n  return <RSAKey {...passable} />;\n};\n\nexport const MultilineParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Multiline {...passable} />;\n};\n\nexport const UuidParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Uuid {...passable} />;\n};\n","import { createSelector } from 'reselect';\n\nexport const getQuery = createSelector(\n  state => state.invocation_viewer.query,\n  query => query\n);\n\nexport const getInvocation = createSelector(\n  state => state.invocation_viewer.invocation,\n  invocation => invocation\n);\n\nexport const getInvocationStatus = createSelector(getInvocation, invocation => invocation.status);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../../entities/actions';\nimport { entitySelectors } from '../../../entities/selectors';\n\nimport { Loader, ParameterLoader } from 'shared/components/loaders';\nimport { Center } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nexport const Ensure = connect(\n  (state, { type }) => {\n    const selector = entitySelectors[type];\n\n    return selector(state);\n  },\n  {\n    request: fetchEntity\n  }\n)(Ensurer);\n\nfunction Ensurer({ children, fresh, pipe = false, type, inlineLoader, data, status, request }) {\n  useEffect(() => {\n    if (status === 'fetching') return;\n    if (status === 'fetching') return;\n\n    if (status === 'fetched' && !fresh) return;\n\n    request(type);\n  }, []);\n\n  if (!status || status === 'not-fetched') {\n    return null;\n  }\n\n  if (status === 'fetching' && !pipe) {\n    const Loading = inlineLoader ? ParameterLoader : Loader;\n\n    return (\n      <Center>\n        <Loading>Loading {type}...</Loading>\n      </Center>\n    );\n  }\n\n  if (status === 'failed' && !pipe) {\n    return (\n      <Result type=\"fail\">\n        <Result.Text>Could not fetch {type} data!</Result.Text>\n      </Result>\n    );\n  }\n\n  if (typeof children === 'function') {\n    return <>{children({ status, data, request: () => request(type) })}</>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Ensure;\n","import { createSelector } from 'reselect';\n\nexport const ENTITY_TYPES = [\n  {\n    type: 'account',\n    title: 'CONNECTION',\n    dataEnclosure: 'accounts',\n    query: '*'\n  },\n  {\n    type: 'constant',\n    title: 'CONSTANT',\n    dataEnclosure: 'constants',\n    query: '*'\n  },\n  {\n    type: 'exception',\n    title: 'EXCEPTION',\n    dataEnclosure: 'exceptions',\n    query: '*'\n  },\n  {\n    type: 'form',\n    title: 'FORM',\n    dataEnclosure: 'forms',\n    query: '*'\n  },\n  {\n    type: 'namespace',\n    title: 'NAMESPACE',\n    query: '*',\n    dataEnclosure: 'namespaces'\n  },\n  {\n    type: 'process',\n    query: '*',\n    title: 'PROCESS',\n    dataEnclosure: 'processes'\n  },\n  {\n    type: 'prototype',\n    query: '*',\n    title: 'PROTOTYPE',\n    dataEnclosure: 'prototypes'\n  },\n  {\n    type: 'schedule',\n    title: 'SCHEDULE',\n    dataEnclosure: 'schedules',\n    query: '*'\n  },\n  {\n    type: 'type',\n    query: '*',\n    title: 'TYPE',\n    dataEnclosure: 'data_types'\n  }\n];\n\nexport const ENTITY_TYPES_FETCH = ENTITY_TYPES.concat({\n  type: 'alias'\n});\n\nconst ROOT_ENTITY = {\n  name: 'root',\n  entity: 'root',\n  description: 'Main container for all of the entities within MAS.'\n};\n\nexport const getBreadcrumbs = state => state.entities.breadcrumbs;\n\nfunction collectData(data, { type, dataEnclosure }, namespacesWithMeta) {\n  let collection = data[type]?.data?.data?.[dataEnclosure];\n\n  if (collection) {\n    const aliases = data.alias?.data?.data.aliases\n      .filter(item => item.alias_type === type)\n      .map(item => {\n        const { entity, alias, alias_type, ...props } = item;\n\n        /**\n         * Merging properties that the alias does not have,\n         * with properties the entity it aliases, has.\n         * Will avoid having to reconcile this at the usage level.\n         * And keep aliases viewable here.\n         */\n        const aliasedEntity = data[type]?.data?.data[dataEnclosure].find(e => e.name === alias);\n\n        return { ...(aliasedEntity && aliasedEntity), alias, ...props, entity: alias_type };\n      });\n\n    if (aliases) {\n      /** Concat the aliases for this collection with the collection itself */\n      collection = data[type]?.data?.data[dataEnclosure].concat(aliases);\n    }\n\n    /* filter out colllection items where appearance meta is hidden */\n\n    /** FIXME:\n     *  what about aliases ? If their aliasing root entity would have meta apearance hidden, should it as well ?\n     *  */\n    if (Array.isArray(namespacesWithMeta)) {\n      collection = collection.reduce((acc, dataItem) => {\n        const ownNamespace = namespacesWithMeta.find(ns => dataItem.name.startsWith(ns.name));\n\n        if (ownNamespace) {\n          if (ownNamespace?.meta?.appearance === 'Hidden') {\n            return acc;\n          }\n\n          return acc.concat([\n            {\n              ...dataItem,\n              meta: {\n                ...dataItem.meta,\n                ...ownNamespace.meta\n              }\n            }\n          ]);\n        }\n\n        return acc.concat(dataItem);\n      }, []);\n    }\n  }\n\n  return collection;\n}\n\nexport const entitySelectors = ENTITY_TYPES.reduce((selectors, def) => {\n  selectors[def.type] = createSelector(\n    state => state.entities.data,\n    state => state.entities.fetch_status,\n    state => namespaceWithMetaSelector(state),\n    (data, status, namespacesWithMeta) => {\n      return {\n        data: collectData(data, def, namespacesWithMeta),\n        status: status?.[def.type]\n      };\n    }\n  );\n\n  return selectors;\n}, {});\n\nexport const namespaceWithMetaSelector = createSelector(\n  state => state.entities.data,\n  data => {\n    const dataNamespaces = data.namespace?.data?.data?.namespaces;\n    if (Array.isArray(dataNamespaces)) {\n      return dataNamespaces.filter(\n        item => item.meta && item.meta.appearance && item.meta.appearance !== 'Normal'\n      );\n    }\n    return [];\n  }\n);\n\nexport const getFilteredEntities = createSelector(\n  state => state.entities.data,\n  state => state.entities.filters,\n  state => namespaceWithMetaSelector(state),\n  (data, filters, namespacesWithMeta) => {\n    const types =\n      filters.type === 'all'\n        ? ENTITY_TYPES\n        : ENTITY_TYPES.filter(type => type.type === filters.type || type.type === 'namespace');\n    return types\n      .reduce((accumulator, type) => {\n        return accumulator.concat(collectData(data, type, namespacesWithMeta));\n      }, [])\n      .filter(Boolean);\n  }\n);\n\nexport const getEntitiesAsHashMap = createSelector(\n  getFilteredEntities,\n  state => state.entities.filters,\n  (entities, filters) => {\n    let filteredEntities = entities;\n    if (filters.type !== 'all' && filters.type !== 'namespace') {\n      filteredEntities = entities.filter(item => item.entity !== 'namespace');\n    }\n    if (filters.search) {\n      filteredEntities = filteredEntities.filter(item => {\n        if (filters.type !== 'all' && filters.type !== 'namespace') {\n          const domainArray = item.name.split('.');\n          const shortName = domainArray[domainArray.length - 1];\n          return shortName.includes(filters.search);\n        }\n        return item.name.includes(filters.search);\n      });\n    }\n    return filteredEntities.reduce((accumulator, entity) => {\n      const paths = entity.name.includes('.') ? entity.name.split('.') : [];\n      paths.forEach((path, index) => {\n        const key = paths.slice(0, index).join('.');\n        if (!accumulator[key]) {\n          const findEntity = entities.find(item => item.name === key);\n          accumulator[key] = findEntity || {\n            name: key,\n            notPersisted: true\n          };\n        }\n      });\n      accumulator[entity.name] = entity;\n\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const getEntities = createSelector(\n  getBreadcrumbs,\n  getEntitiesAsHashMap,\n  (breadcrumbs, entitiesMap) => {\n    const entities = Object.values(entitiesMap);\n    const roots = Object.keys(entitiesMap)\n      .filter((entityName, index, names) => {\n        return (\n          !entityName.includes('.') &&\n          (names.find(name => name.startsWith(`${entityName}.`)) ||\n            entitiesMap[entityName].entity === 'namespace')\n        );\n      })\n      .map(key => ({\n        ...entitiesMap[key],\n        isSelected: breadcrumbs.includes(entitiesMap[key].name)\n      }));\n    const columns = breadcrumbs.map((breadcrumb, index) => {\n      return {\n        level: index,\n        path: index === 0 ? '.' : breadcrumbs.slice(0, index).join('.'),\n        rows: []\n      };\n    });\n    columns.push({\n      level: breadcrumbs.length,\n      path: `${breadcrumbs.join('.')}.`,\n      rows: []\n    });\n\n    return entities.reduce((accumulator, entity) => {\n      const path = entity.name.split('.');\n      if (accumulator.length < path.length) {\n        return accumulator;\n      }\n      const bucket = accumulator[path.length - 1];\n      if (!bucket) {\n        return accumulator;\n      }\n      if (bucket.path === '.') {\n        bucket.rows = roots;\n        return accumulator;\n      }\n\n      if (!entity.name.startsWith(bucket.path)) {\n        return accumulator;\n      }\n      const name = entity.name.replace(bucket.path, '').replace('.', '');\n      const entityLevel = entity.name.split('.').length - 1;\n      bucket.rows.push({\n        ...entity,\n        name,\n        isSelected: breadcrumbs[entityLevel] ? breadcrumbs[entityLevel] === name : false\n      });\n\n      return accumulator;\n    }, columns);\n  }\n);\n\nexport const getSelectedEntity = createSelector(\n  getEntitiesAsHashMap,\n  getBreadcrumbs,\n  (entities, breadcrumbs) => {\n    const path = breadcrumbs.join('.');\n    const entity = entities[path];\n    return entity?.notPersisted ? ROOT_ENTITY : entity;\n  }\n);\n\nexport const namespaceChildrenListSelector = createSelector(\n  getSelectedEntity,\n  getEntitiesAsHashMap,\n  (selectedEntity, entities) => {\n    const list = Object.keys(entities);\n    const namespace = `${selectedEntity.name}.`;\n\n    return list.filter(name => name.startsWith(namespace) && name !== namespace);\n  }\n);\n","export function mapUsersData(payload) {\n  return payload.data.users;\n}\n\nexport function mapLoadedUser(payload) {\n  return payload.data.users[0]; // the first returned user is the one in question\n}\n\nexport function mapSortInsensitive(payload) {\n  return payload.slice().sort(function sortInsensitive(a, b) {\n    return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n  });\n}\n","import * as Yup from 'yup';\n\nexport function getInitialValues(parameters) {\n  const initialValues = {};\n\n  parameters.map(parameter => {\n    initialValues[parameter.name] = parameter.deflt !== null ? parameter.deflt : '';\n    return null;\n  });\n\n  return initialValues;\n}\n\nexport function getValidationSchema(parameters) {\n  const validationSchema = {};\n\n  parameters.map(parameter => {\n    validationSchema[parameter.name] = Yup.string();\n\n    if (parameter.is_required) {\n      validationSchema[parameter.name].required('A value is required');\n    }\n\n    return null;\n  });\n}\n\nexport function formatParameters(values) {\n  const parameters = {};\n\n  Object.keys(values).map(value => {\n    if (typeof values[value] === 'string') {\n      if (values[value].length > 0 || values[value].trim()) {\n        parameters[value] = values[value];\n      }\n    } else if (typeof values[value] === 'object') {\n      if (values[value].name && (values[value].name.length > 0 || values[value].name.trim())) {\n        parameters[value] = values[value].name;\n      }\n    }\n\n    return null;\n  });\n\n  return parameters;\n}\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, tabs } = this.props;\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={tabs.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func,\n  tabs: array\n};\n\nNavigationTab.defaultProps = {\n  tabs: []\n};\n\nexport default NavigationTab;\n","export const getGroupDescription = (name, allGroups) => {\n  const groupDetails = allGroups.find(group => group.name === name);\n\n  return groupDetails?.description || '';\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.session;\n\nexport const authorizationSelector = createSelector(localState, state =>\n  state.get('authorization')\n);\n\nexport const currentUserSelector = createSelector(localState, state => state.get('currentUser'));\n\nexport const loginSelector = createSelector(localState, state => state.get('login'));\n\nexport const beVersionSelector = createSelector(localState, state => state.get('beVersion'));\nexport const beLicenceSelector = createSelector(localState, state => state.get('beLicence'));\nexport const beHealthSelector = createSelector(localState, state => state.get('beHealth'));\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchProtocols() {\n  try {\n    const { data } = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n    return { result: data.result, protocols: data.data.protocols };\n  } catch (e) {\n    return { result: 'fail', protocols: [] };\n  }\n}\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, protocol } = this.props;\n    const data = [\n      { label: 'Workload', value: 'workload' },\n      { label: 'Sessions', value: 'sessions' },\n      { label: 'Objects', value: 'objects' },\n      { label: 'Storage', value: 'storage' }\n    ];\n\n    if (protocol === 'ORACLE') {\n      data.push({ label: 'License reporting', value: 'license' });\n    }\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={data.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {data.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func\n};\n\nexport default NavigationTab;\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postSchedule(body) {\n  return RestClient.post('schedule', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function getSchedule(name) {\n  return RestClient.get(`schedule/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchSchedule(name, body) {\n  return RestClient.patch(`schedule/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function postAccount(body) {\n  try {\n    const { data } = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function patchAccount(name, body) {\n  try {\n    const { data } = await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport function getConnection(name) {\n  return RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchConnection(name, body) {\n  return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postFile(file) {\n  return RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_ACCOUNTS, file);\n}\n","import React, { createContext, useContext } from 'react';\n\nconst Context = createContext();\n\nexport default function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nSwitch.Case = Case;\n","/**\n * This file will be updated with any new module (adding the module reducer)\n */\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { sessionEffects, sessionReducer } from 'session';\nimport { dashboardReducer } from 'dashboard';\nimport { sharedEffects, sharedReducer } from 'shared/store/';\nimport { createReducer } from 'shared/lib/redux-utils';\n\nimport usersManagerReducer from 'users-manager/store/reducers';\nimport groupsReducer from 'users-manager/groups/store/reducer';\nimport explorerReducer from 'explorer/store/reducers';\nimport executiveDashboardReducer from 'executive-dashboard/store/reducers';\nimport * as entities from 'entities/reducer';\nimport * as daemon from 'dashboard/store/reducers/daemon';\n\nimport * as invocations from 'job-process/store/reducer';\n\nimport { api } from './middlewares';\nimport { reducer as core } from './reducers';\n\nconst saga = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage:storageSession,\n  whitelist: ['entities']\n  /*\n  //Well I just whitelist entities,\n  since it's the one that has all expensive network requests\n  */\n};\n\nexport const configStore = () => {\n  \n  const appReducer = persistReducer(persistConfig,combineReducers({\n    core,\n    session: sessionReducer,\n    dashboard: dashboardReducer,\n    shared: sharedReducer,\n    usersManager: usersManagerReducer,\n    groups: groupsReducer,\n    entities: createReducer(entities),\n    explorer: explorerReducer,\n    invocation_viewer: createReducer(invocations),\n    executiveDashboard: executiveDashboardReducer,\n    daemon: createReducer(daemon)\n  }));\n\n  const reducer = (state, action) => {\n    // clear redux store on logout action\n    if (action.type === '[session] LOGOUT__SUCCESS') {\n      const { routing } = state;\n      state = { routing };\n      window.location.reload();\n    }\n    return appReducer(state, action);\n  };\n\n  const effects = [...sessionEffects, ...sharedEffects];\n\n  const store = createStore(reducer, composeWithDevTools(applyMiddleware(saga, thunk, api)));\n\n  effects.forEach(effect => {\n    saga.run(effect);\n  });\n\n  return store;\n};\n\nexport default configStore();\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './simple-search-input.local.scss';\n\nexport const SimpleSearchInput = ({ value, onChange, ...props }) => {\n  return (\n    <div className=\"search-input\">\n      <i className=\"search-icon-slot\">\n        <SearchIcon fontSize=\"default\" />\n      </i>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"search-input-control\"\n        placeholder=\"Search\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nSimpleSearchInput.propTypes = {\n  value: string,\n  onChange: func\n};\n\nexport default SimpleSearchInput;\n","import React from 'react';\nimport { Switch } from 'shared/components';\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { useFormikContext } from 'formik';\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { chunk } from 'lodash';\n\n/** accepts recived parameters for invocations that are already scheduled */\nexport const ProcessParameters = ({ recieved = {}, editable }) => {\n  const { values } = useFormikContext();\n\n  /**\n   * Returns a parameter list from a given list of parameters, and a Process name\n   * This could be turned into a connected component that can take the processes from entities for itself.\n   * */\n  function selectParametersForProcess(processName, processes) {\n    const process = processes.find(item => item.name === processName);\n\n    if (process) {\n      return process.parameters.map(p => ({ ...p, value: recieved[p.name], disabled: !editable }));\n    }\n    return [];\n  }\n\n  function currentValue(allValues, parameter) {\n    if (allValues[parameter.name] !== undefined) {\n      return allValues[parameter.name];\n    }\n\n    if (allValues?.parameters && allValues?.parameters[parameter.name] !== undefined) {\n      return allValues?.parameters[parameter.name];\n    }\n\n    return undefined;\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Parameters</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Switch value={!!values.process}>\n          <Switch.Case value={false}>\n            <Column xs={12}>\n              <p>Select a process to edit parameters</p>\n            </Column>\n          </Switch.Case>\n          <Switch.Case value>\n            <Ensure type=\"form\">\n              {({ data: forms }) => (\n                <Ensure type=\"type\">\n                  {({ data: datatypes }) => (\n                    <Ensure type=\"prototype\">\n                      {({ data: prototypes }) => (\n                        <Ensure type=\"process\">\n                          {({ data }) => {\n                            const parameters = selectParametersForProcess(values.process, data);\n\n                            const normalized = parameters.map(parameter => {\n                              return normalize(parameter, datatypes, prototypes, forms);\n                            });\n\n                            /*  << +- 1 of '/' to toggle\n                            const notSupported = false;\n                            /* /\n\n                            // In old app, if at least one normalized parameter exists that is not supported,\n                            // the whole process is disregarded.\n\n                            const notSupported = normalized.some(p => !p.is_supported);\n                            // */\n\n                            const filtered = normalized\n                              .filter(p => p.editor.type !== 'hidden')\n                              .sort((a, b) => a.position - b.position); // sort parameters based on the meta.position\n\n                            // if (notSupported || filtered.length === 0) {\n                            if (filtered.length === 0) {\n                              return (\n                                <Row>\n                                  <Column>\n                                    <p>\n                                      This process contains unsuported parameters with no defaults,\n                                      and cannot be run from the web interface.\n                                    </p>\n                                  </Column>\n                                </Row>\n                              );\n                            }\n\n                            const chunks = chunk(filtered, 2);\n\n                            return chunks.map((params, index) => (\n                              <Row key={index} spacing={3}>\n                                {params.map(parameter => (\n                                  <Column key={parameter.name} xs={6}>\n                                    <Parameter\n                                      normalized={parameter}\n                                      value={currentValue(values, parameter)}\n                                      disabled={!editable}\n                                      recieved={recieved}\n                                    />\n                                  </Column>\n                                ))}\n                              </Row>\n                            ));\n                          }}\n                        </Ensure>\n                      )}\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          </Switch.Case>\n        </Switch>\n      </Section.Content>\n    </Section>\n  );\n};\n","import React from 'react';\nimport Groups from '../../components/notification-groups/notification-groups';\nimport Users from '../../components/notification-users/notification-users';\nimport Events from '../../components/notification-events/notification-events';\nimport NotificationList from '../../components/notification-list/notification-list';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport { Button } from 'shared/components/controls';\n\nimport classnames from 'classnames';\n\nimport './notifications.scss';\nimport { RestClient } from 'shared/lib/rest';\n\nexport class Notifications extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { recievedData } = props;\n\n    const startFullLog = [1, 3, 5, 7];\n    const completionFullLog = [2, 3, 6, 7];\n    const abnormalFullLog = [4, 6, 7];\n\n    this.state = {\n      groupsData: [],\n      usersData: [],\n      jobStart: {\n        notice: false,\n        fullLog: startFullLog.includes(recievedData.events)\n      },\n      jobCompletion: {\n        notice: false,\n        fullLog: completionFullLog.includes(recievedData.events)\n      },\n      abnormalEvent: {\n        notice: false,\n        fullLog: abnormalFullLog.includes(recievedData.events)\n      },\n      isEditing: false\n    };\n  }\n\n  async componentDidMount() {\n    const { recievedData = { users: [] } } = this.props;\n\n    RestClient.get('/group', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.groups) {\n        this.setState({\n          groupsData: res.data.data.groups.map(item => {\n            return { data: item, selected: false, displayIcons: false };\n          })\n        });\n      }\n    });\n    RestClient.get('/user', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.users) {\n        this.setState({\n          usersData: res.data.data.users.map(item => {\n            return {\n              data: item,\n              selected: recievedData.users.includes(item.name),\n              display: false\n            };\n          })\n        });\n      }\n    });\n  }\n\n  render() {\n    const { usersData, groupsData, jobStart, jobCompletion, abnormalEvent, isEditing } = this.state;\n    const selectedGroup = this.getSelectedGroup();\n    const areUsersSelected = usersData.find(item => item.selected);\n    const isClearActionAvailable = this.checkIfAllUsersSelectedCurrentGroup();\n    return (\n      <div\n        className={classnames('monitor-and-notifications', {\n          disabled: this.props.disabled\n        })}\n      >\n        {isEditing ? (\n          <div className=\"notifications-editor\">\n            <Groups onSelect={this.onSelectGroup} groups={groupsData} />\n            <Users\n              onSelect={this.onSelectUser}\n              onSelectUserAction={this.onSelectUserAction}\n              isClearActionAvailable={isClearActionAvailable}\n              users={usersData}\n              isGroupSelected={!!selectedGroup}\n              eventTypeIcons={this.getEventTypeIcons()}\n            />\n            <div className=\"right-side-container\">\n              <Events\n                jobStart={jobStart}\n                jobCompletion={jobCompletion}\n                abnormalEvent={abnormalEvent}\n                onSelect={this.onSelectEventType}\n                areUsersSelected={areUsersSelected}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  this.props.onApply(mappedState(this.state));\n                  this.toggleApplyButton();\n                }}\n              >\n                Apply\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <NotificationList\n            users={usersData}\n            eventTypeIcons={this.getEventTypeIcons()}\n            toggleApplyButton={this.toggleApplyButton}\n          />\n        )}\n      </div>\n    );\n  }\n\n  getEventTypeIcons = () => {\n    const { jobStart, jobCompletion, abnormalEvent } = this.state;\n    const icons = [];\n    if (jobStart.notice || jobStart.fullLog) {\n      icons.push(<PlayCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (jobCompletion.notice || jobCompletion.fullLog) {\n      icons.push(<CheckCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (abnormalEvent.notice || abnormalEvent.fullLog) {\n      icons.push(<ErrorOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    return icons;\n  };\n\n  toggleApplyButton = () => {\n    this.setState(state => ({ isEditing: !state.isEditing }));\n  };\n\n  checkIfAllUsersSelectedCurrentGroup = () => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      return this.state.usersData\n        .filter(item => selectedGroup.data.users.indexOf(item.data.name) !== -1)\n        .every(item => item.selected);\n    }\n  };\n\n  onSelectGroup = group => {\n    this.setState(state => ({\n      groupsData: state.groupsData.map(item => ({\n        ...item,\n        selected: group.data.name === item.data.name\n      })),\n      usersData: state.usersData.map(item => ({\n        ...item,\n        display: group.data.users.indexOf(item.data.name) !== -1\n      }))\n    }));\n  };\n\n  onSelectUser = user => {\n    /* eslint-disable react/no-access-state-in-setstate */\n    const usersData = this.state.usersData.map(item => {\n      if (item.data.name === user.data.name) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    this.setState({ usersData, groupsData: this.setFlagGroupsIfContainSelectedUser(usersData) });\n  };\n\n  onSelectUserAction = shouldClear => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      const usersData = this.state.usersData.map(item => {\n        if (selectedGroup.data.users.indexOf(item.data.name) !== -1) {\n          return { ...item, selected: !shouldClear };\n        }\n        return item;\n      });\n      this.setState({\n        usersData,\n        groupsData: this.setFlagGroupsIfContainSelectedUser(usersData)\n      });\n    }\n  };\n\n  setFlagGroupsIfContainSelectedUser = usersData => {\n    return this.state.groupsData.map(group => ({\n      ...group,\n      displayIcons: !!usersData.find(user => {\n        return user.selected && user.data.member_of.indexOf(group.data.name) !== -1;\n      })\n    }));\n  };\n\n  onSelectEventType = (type, key) => {\n    this.setState(state => ({ [type]: { ...state[type], [key]: !state[type][key] } }));\n  };\n\n  getSelectedGroup() {\n    return this.state.groupsData.find(item => item.selected);\n  }\n}\n\nexport default Notifications;\n\n/**\n * State mapper for backend request.\n *\n * events is a composite number,\n *\n * notice unsuported for now\n * groups are redundant now that the ui preselects all users in a group.\n */\n/* eslint-disable no-unused-vars */\nfunction mappedState({ groupsData, usersData, jobStart, jobCompletion, abnormalEvent }) {\n  const users = usersData.filter(user => user.selected).map(user => user.data.name);\n\n  let events = 0;\n\n  if (jobStart.fullLog) {\n    events += 1;\n  }\n\n  if (jobCompletion.fullLog) {\n    events += 2;\n  }\n\n  if (abnormalEvent.fullLog) {\n    events += 4;\n  }\n\n  return { users, events };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getProcess(name) {\n  return RestClient.get(`/process/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchProcess(name, body) {\n  return RestClient.patch(`/process/${name}`, body);\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiSourceRepository,\n  mdiFolderHome,\n  mdiLanConnect,\n  mdiHexagonMultipleOutline,\n  mdiCubeOutline\n} from '@mdi/js';\n\nimport extractDefault from './extractDefault';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'float',\n  'integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter',\n  'string',\n  'unsigned_float',\n  'unsigned_integer'\n];\n\nexport default (parameter, dataTypes, prototypes) => {\n  parameter = { ...parameter };\n  parameter.position = parameter.meta.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    parameter.is_supported = false;\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.value = 'TEXT';\n  }\n\n  parameter.label = getLabel(parameter.name);\n  parameter.icon = getIcon(parameter.name);\n\n  return parameter;\n};\n\nconst getLabel = name => {\n  return labels[name] || name;\n};\n\nconst getIcon = name => {\n  return icons[name] || null;\n};\n\nconst labels = {\n  target_working_dir: 'Working directory',\n  target_shell: 'Target server SSH',\n  repo_shell: 'Repo server SSH',\n  repo_working_dir: 'Repo directory',\n  form: 'Database form',\n  dbms: 'Target DBMS',\n  vsphere_account: 'vSphere account',\n  vcenterservername: 'vCenter server name'\n};\n\nconst icons = {\n  target_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  target_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiSourceRepository} />\n    </SvgIcon>\n  ),\n  dbms: (\n    <SvgIcon>\n      <Icon path={mdiHexagonMultipleOutline} />\n    </SvgIcon>\n  ),\n  form: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  vsphere_account: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  ),\n  vcenterservername: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  )\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Field } from 'formik';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiLanConnect } from '@mdi/js';\n\nimport './TextField.local.scss';\n\nexport const TextField = ({ parameter, disabled }) => {\n  const validate = value => {\n    if (parameter.is_required) {\n      if (!value) {\n        return 'This Field is Required';\n      }\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <MUITextField\n            className={disabled ? 'disabled' : ''}\n            {...field}\n            variant=\"outlined\"\n            type=\"text\"\n            fullWidth\n            disabled={disabled}\n            error={meta.error && meta.touched}\n            helperText={meta.touched && meta.error ? meta.error : undefined}\n            label={parameter.label}\n            placeholder={parameter.label}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {parameter.icon ? (\n                    parameter.icon\n                  ) : (\n                    <SvgIcon>\n                      <Icon path={mdiLanConnect} />\n                    </SvgIcon>\n                  )}\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <LightTooltip placement=\"bottom-end\" title={parameter.description}>\n                  <InputAdornment position=\"end\">\n                    <SvgIcon>\n                      <Icon path={mdiHelpCircleOutline} />\n                    </SvgIcon>\n                  </InputAdornment>\n                </LightTooltip>\n              )\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Field } from 'formik';\nimport { array, object } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { mdiLanConnect } from '@mdi/js';\nimport Icon from '@mdi/react';\n\nimport { Dropdown } from 'shared/components';\n\nimport './DropdownField.local.scss';\n\nexport const DropdownField = ({\n  parameter,\n  datatypes,\n  rawAccounts,\n  forms,\n  prototypes,\n  disabled\n}) => {\n  const dataType = datatypes.find(datatype => datatype.name === parameter.data_type);\n  let protocols = null;\n\n  if (dataType) {\n    if (\n      dataType.name.startsWith('mas0000.sys.account.conn.') ||\n      dataType.name === 'mas0000.sys.account.vsphere'\n    ) {\n      if (Array.isArray(dataType.protocol) && dataType.protocol.length > 0) {\n        protocols = [];\n        dataType.protocol.forEach(protocol => {\n          if (protocol === 'DBMS') {\n            // This is quick and dirty until we have a configuration-driven solution\n            // in the UI.\n            protocols = [...protocols, 'MSSQL', 'MYSQL', 'ORACLE', 'PGSQL'];\n          } else {\n            protocols.push(protocol);\n          }\n        });\n        const options = rawAccounts\n          .map(account => ({ name: account.name, value: account }))\n          .filter(option => protocols === null || protocols.includes(option.value.protocol));\n\n        const validate = value => {\n          if (parameter.is_required) {\n            if (!value) {\n              return 'This Field is Required';\n            }\n          }\n        };\n\n        return (\n          <Field name={parameter.name} validate={validate}>\n            {({ field, meta }) => {\n              return (\n                <Dropdown\n                  onSelect={(index, opt) => {\n                    field.onChange({ target: { name: parameter.name, value: opt.value } });\n                  }}\n                  disabled={disabled}\n                  target={(meta2, actions) => (\n                    <MUITextField\n                      className={disabled ? 'disabled' : ''}\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      variant=\"outlined\"\n                      fullWidth\n                      label={parameter.label}\n                      placeholder={parameter.label}\n                      {...field}\n                      value={field.value ? field.value.name : ''}\n                      onChange={() => {}}\n                      onClick={actions.toggle}\n                      ref={meta2.ref}\n                      error={meta.error && meta.touched}\n                      helperText={meta.touched && meta.error ? meta.error : undefined}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {parameter.icon ? (\n                              parameter.icon\n                            ) : (\n                              <SvgIcon>\n                                <Icon path={mdiLanConnect} />\n                              </SvgIcon>\n                            )}\n                          </InputAdornment>\n                        ),\n\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <ArrowDropDownIcon />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                  )}\n                  items={options}\n                />\n              );\n            }}\n          </Field>\n        );\n      }\n    }\n  } else {\n    const prototype = prototypes.find(p => p.name === parameter.data_type);\n\n    if (prototype) {\n      const options = forms\n        .filter(form => form.prototype === prototype.name)\n        .map(form => ({ name: form.name, value: form.name }));\n\n      const validate = value => {\n        if (parameter.is_required) {\n          if (!value) {\n            return 'This Field is Required';\n          }\n        }\n      };\n\n      return (\n        <Field name={parameter.name} validate={validate}>\n          {({ field, meta }) => {\n            return (\n              <Dropdown\n                onSelect={(index, opt) => {\n                  field.onChange({ target: { name: parameter.name, value: opt.value } });\n                }}\n                disabled={disabled}\n                target={(meta2, actions) => (\n                  <MUITextField\n                    className={disabled ? 'disabled' : ''}\n                    type=\"text\"\n                    readOnly\n                    disabled\n                    variant=\"outlined\"\n                    fullWidth\n                    label={parameter.label}\n                    placeholder={parameter.label}\n                    {...field}\n                    value={field.value ? field.value : ''}\n                    onChange={() => {}}\n                    onClick={actions.toggle}\n                    ref={meta2.ref}\n                    error={meta.error && meta.touched}\n                    helperText={meta.touched && meta.error ? meta.error : undefined}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          {parameter.icon ? (\n                            parameter.icon\n                          ) : (\n                            <SvgIcon>\n                              <Icon path={mdiLanConnect} />\n                            </SvgIcon>\n                          )}\n                        </InputAdornment>\n                      ),\n\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <ArrowDropDownIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                )}\n                items={options}\n              />\n            );\n          }}\n        </Field>\n      );\n    }\n  }\n\n  return <div>Currently not supported input</div>;\n};\n\nDropdownField.propTypes = {\n  parameter: object,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  prototypes: array\n};\n","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { ListOutput } from '../ListOutput/ListOutput';\nimport { sendToEmail } from '../../utils/sendToEmail';\nimport { copyToClipboard } from '../../utils/copyToClipboard';\n\nimport './OutputModal.local.scss';\n\nexport const OutputModal = ({\n  open,\n  actions,\n  output,\n  invocation,\n  modalDetails,\n  processName,\n  messages\n}) => {\n  let content;\n\n  const [message, setMessage] = useState(messages[0]);\n\n  let interval;\n\n  useEffect(() => {\n    if (messages && messages.length > 1) {\n      if (!open) {\n        clearInterval(interval);\n      } else {\n        let index = 1;\n        interval = setInterval(() => {\n          setMessage(messages[index]);\n          if (index + 1 < messages.length) {\n            index += 1;\n          }\n        }, 4000);\n\n        return () => clearInterval(interval);\n      }\n    }\n  }, [open]);\n\n  if (!output && invocation.status !== 'SUCCEEDED' && invocation.status !== 'FAILED') {\n    content = (\n      <>\n        <Center>\n          <Loader>{message}</Loader>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'FAILED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput type=\"fail\" output={output} errors={invocation.errors} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => sendToEmail(invocation, output, processName)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'SUCCEEDED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput output={output} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => sendToEmail(invocation, output, processName)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '75vh',\n          minHeight: '75vh',\n          width: '75vh',\n          height: '75vh'\n        }}\n      >\n        <ModalHeader\n          title={modalDetails.title}\n          desc={invocation.status === 'FAILED' ? 'An error orccured!' : 'Output'}\n          avatar={\n            <Avatar\n              className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n            >\n              {modalDetails.icon}\n            </Avatar>\n          }\n        />\n        {content}\n      </Paper>\n    </Modal>\n  );\n};\n","import { CONSTANTS } from 'config';\n\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  DESELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\n\nexport function loadExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function deselectAllThunk() {\n  return dispatch => {\n    dispatch(creators.action(DESELECT_ALL));\n\n    return 'done';\n  };\n}\n\nexport function selectAllThunk() {\n  return function selectAll(dispatch, getState) {\n    const { rawEntries } = getState().executiveDashboard;\n\n    dispatch(creators.action(SELECT_ALL, rawEntries));\n\n    return 'done';\n  };\n}\n\nexport function toggleServerThunk(server) {\n  return function toggleServer(dispatch, getState) {\n    const { allServers } = getState().executiveDashboard;\n    let { selectedServers } = getState().executiveDashboard;\n\n    const svIndex = allServers.findIndex(sv => sv.name === server.name);\n\n    if (selectedServers.find(sv => sv.name === server.name)) {\n      selectedServers = selectedServers.filter(sv => sv.name !== server.name);\n    } else {\n      selectedServers = [...selectedServers, allServers[svIndex]];\n    }\n\n    selectedServers.sort((a, b) => a.nrCores - b.nrCores);\n\n    dispatch(creators.action(TOGGLE_SERVER, selectedServers));\n    return 'done';\n  };\n}\n\nexport function loadVirtualExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.VIRTUAL_EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n","export const DISPLAY_FORMAT = 'L';\nexport const ISO_FORMAT = 'YYYY-MM-DD';\nexport const ISO_MONTH_FORMAT = 'YYYY-MM'; // TODO delete this line of dead code on next breaking change\n\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const VERTICAL_ORIENTATION = 'vertical';\nexport const VERTICAL_SCROLLABLE = 'verticalScrollable';\n\nexport const NAV_POSITION_BOTTOM = 'navPositionBottom';\nexport const NAV_POSITION_TOP = 'navPositionTop';\n\nexport const ICON_BEFORE_POSITION = 'before';\nexport const ICON_AFTER_POSITION = 'after';\n\nexport const INFO_POSITION_TOP = 'top';\nexport const INFO_POSITION_BOTTOM = 'bottom';\nexport const INFO_POSITION_BEFORE = 'before';\nexport const INFO_POSITION_AFTER = 'after';\n\nexport const ANCHOR_LEFT = 'left';\nexport const ANCHOR_RIGHT = 'right';\n\nexport const OPEN_DOWN = 'down';\nexport const OPEN_UP = 'up';\n\nexport const DAY_SIZE = 39;\nexport const BLOCKED_MODIFIER = 'blocked';\nexport const WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nexport const FANG_WIDTH_PX = 20;\nexport const FANG_HEIGHT_PX = 10;\nexport const DEFAULT_VERTICAL_SPACING = 22;\n\nexport const MODIFIER_KEY_NAMES = new Set(['Shift', 'Control', 'Alt', 'Meta']);\n","export function mapAccountsTree(data) {\n  // data is split into 3 levels,\n  // first level is defined by `protocol`\n  // we find root nodes by matching protocols.\n  const roots = data.reduce(splitIntoRootsByProtocol, []);\n  roots.forEach(root => {\n    // define the servers map\n    // all server and database objects for this protocol\n    root.servers = root.nodes.reduce(splitIntoRootsByAddress, {});\n    const servers = Object.keys(root.servers);\n    servers.forEach(name => {\n      const server = root.servers[name];\n      server.databases = server.nodes.reduce(splitIntoRootsByDatabase, {});\n    });\n  });\n  return roots;\n}\nexport function splitIntoRootsByProtocol(acc, item) {\n  const protocolBlacklist = ['SSH'];\n  const { protocol } = item;\n  if (protocolBlacklist.includes(protocol)) {\n    return acc;\n  }\n  if (!(item.special && item.special.database)) {\n    return acc;\n  }\n  const root = acc.find(r => r.name === protocol);\n  if (root) {\n    root.nodes = [...root.nodes, item];\n  } else {\n    acc.push({\n      name: item.protocol,\n      path: item.protocol,\n      type: 'dbms',\n      nodes: [item],\n      servers: []\n    });\n  }\n  return acc;\n}\nfunction splitIntoRootsByAddress(serversMap, item) {\n  const { address } = item;\n  const existingEntry = serversMap[address];\n  if (existingEntry) {\n    existingEntry.nodes = [...existingEntry.nodes, item];\n  } else {\n    serversMap[address] = {\n      name: item.address,\n      path: `${item.protocol}--${item.address}`,\n      type: 'server',\n      nodes: [item]\n    };\n  }\n  return serversMap;\n}\nfunction splitIntoRootsByDatabase(databaseMap, item) {\n  const {\n    special: { database: name }\n  } = item;\n  databaseMap[name] = {\n    name,\n    path: `${item.protocol}--${item.address}--${name}`,\n    node: item\n  };\n  return databaseMap;\n}\n\n/**\n *\n * @param {*} content // /account call data\n *\n * This will resturcture the list of accounts into a list of dbms entries with servers and databases.\n */\n\nexport function mapAccountsNewStructure(content, protocols) {\n  const accounts = { raw: content };\n\n  let protocolsArr = protocols.map(p => p.name);\n\n  if (protocolsArr.length === 0) {\n    protocolsArr = ['CREDENTIAL', 'ILOM', 'SSH'];\n  }\n\n  accounts.databases = content.filter(account => account.special.database);\n  accounts.dbms = [];\n\n  /* eslint-disable */\n  accounts.databases.forEach(function resolver(entry) {\n    /**\n     * Add a path def to the database entry\n     * path descriptions are made here, to mimic somewhat the old mapping.\n     * Keep other properties.\n     */\n    const database = {\n      ...entry,\n      path: `${entry.protocol}--${entry.address}--${entry.special.database}`\n    };\n\n    let dbms = accounts.dbms.find(dbms => dbms.name === database.protocol);\n\n    const dbServer = accounts.raw.find(\n      account => protocolsArr.includes(account.protocol) && account.address === database.address\n    );\n\n    let server;\n\n    // a server entry exists\n    if (dbServer) {\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        ...dbServer,\n        databases: [database]\n      };\n    } else {\n      // db does not have an associated server connection so create a 'placeholder' for server\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        address: database.address,\n        databases: [database]\n      };\n    }\n\n    if (!dbms) {\n      /**\n       * Add a new dbms entry\n       *\n       * path descriptions are made here, to mimic somewhat the old mapping.\n       */\n      accounts.dbms.push({\n        name: database.protocol,\n        protocol: database.protocol,\n        path: database.protocol,\n        databases: [database],\n        servers: [server]\n      });\n\n      return;\n    }\n\n    /**\n     * DBMS exists. Update it\n     */\n    dbms.databases.push(database);\n\n    // find server entr\n    let dbmsServerEntry = dbms.servers.find(sv => sv.address === database.address);\n\n    if (!dbmsServerEntry) {\n      dbms.servers.push({ ...server, databases: [database] });\n    } else {\n      if (dbmsServerEntry.databases) {\n        dbmsServerEntry.databases.push(database);\n      } else {\n        dbmsServerEntry.databases = [database];\n      }\n    }\n  }, accounts);\n\n  // find all existing servers\n  const allServers = content.filter(entry => protocolsArr.includes(entry.protocol));\n\n  // check if servers have a database\n  // if they don't add them in a DBMS called \"OTHER\".\n  // will be removed from there as soon as they get a database\n  allServers.forEach(server => {\n    const exists = accounts.databases.find(db => db.address === server.address);\n\n    if (!exists) {\n      const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n\n      if (otherIndex > -1) {\n        accounts.dbms[otherIndex].servers.push({\n          path: `OTHER--${server.address}`,\n          ...server,\n          databases: []\n        });\n      } else {\n        accounts.dbms.push({\n          name: 'OTHER',\n          path: 'OTHER',\n          protocol: 'OTHER',\n          servers: [{ path: `OTHER--${server.address}`, ...server, databases: [] }]\n        });\n      }\n    }\n  });\n\n  const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n  if (otherIndex > -1 && accounts.dbms[otherIndex].servers.length === 0) {\n    accounts.dbms.splice(otherIndex, 1);\n  }\n  return accounts;\n}\n\nexport function mapProtocols(protocols) {\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return allowedProtocols;\n}\n\nexport function mapUpdateDBStatus(existingDb, databases, isLoading) {\n  let statuses = [...existingDb];\n\n  databases.forEach(function(db) {\n    const index = existingDb.findIndex(d => d.name === db.name);\n    if (index > -1) {\n      statuses[index] = { ...db, loading: isLoading };\n    } else {\n      statuses = [...statuses, { ...db, loading: isLoading }];\n    }\n  });\n\n  return statuses;\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport './Header.local.scss';\n\nexport const Header = ({ title, children }) => (\n  <header className=\"header\">\n    { title && <h1 className=\"header-title\">{title}</h1>}\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.dashboard;\n\nexport const filterStatusSelector = createSelector(localState, state => state.get('filterStatus'));\n","import { filterStatusActions } from './filter-status.action';\n\nimport { checkDaemon } from 'shared/api/daemon';\n\nexport const actions = {\n  ...filterStatusActions\n};\n\n/** TODO: The Above actions should be expanded to the new structure at some point */\n\nexport function checkDeamonStatus() {\n  return function daemon_thunk(dispatch) {\n    dispatch({\n      type: 'DAEMON_STATUS',\n      promise: checkDaemon()\n    });\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function deleteEntity(name, type) {\n  try {\n    const { data } = await RestClient.delete(`/${type}/${name}`);\n\n    return { result: data.result };\n  } catch (e) {\n    return { result: 'fail' };\n  }\n}\n\nexport function deleteInvocation(uuid) {\n  return RestClient.delete(`/invocation/${uuid}`);\n}\n","import extractDefault from './extractDefault';\n\nimport { sortBy } from 'lodash';\n\nimport check from '../editors/field-level-validations';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'string',\n  'integer',\n  'float',\n  'uuid',\n  'unsigned_float',\n  'unsigned_integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter'\n];\n\nexport function space_begone(name) {\n  return name.replace(/\\s/g, '___');\n}\n\nexport function space_summon(name) {\n  return name.replace(/___/g, ' ');\n}\n\nexport default function normalize(param, dataTypes, prototypes, forms) {\n  const parameter = { ...param };\n\n  defaults(parameter, dataTypes, prototypes, forms);\n\n  parameter.editor = defineEditor(parameter, dataTypes, prototypes, forms);\n\n  parameter.field_name = space_begone(parameter.name);\n\n  maybeDisabled(parameter);\n\n  return parameter;\n}\n\nfunction maybeDisabled(parameter) {\n  const { appearance } = parameter.meta;\n\n  if (appearance === 'Grayed' && parameter.editor) {\n    parameter.editor.disabled = true;\n  }\n}\n\nfunction defaults(parameter, dataTypes, prototypes) {\n  parameter.position = parameter.meta?.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n\n  // hardcode stuff for replvalues params\n  if (parameter.data_type === 'optional_dict' && parameter.name === 'replvalues') {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n  } else if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    /**\n     * TODO: this was done to help exclude parameters like, any\n     * Or other stuff that cannot be parsed correctly\n     *\n     * Will remove them for now.\n     * Any types mostly are multiline input data, so we'll default them to that.\n     */\n    parameter.is_supported = false;\n\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          /**\n           * Allow support for all types of parameters, defaulting to a Text multiline.\n           */\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n\n          parameter.editor = {\n            type: 'string',\n            multiline: true,\n            deflt: ''\n          };\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.deflt = 'TEXT';\n  }\n\n  // hardcode default value for oformat parameter to \"TEXT\"\n  // was decided to be done on the UI because for the BE alot of processess had to be manually changed\n  // and at the moment we are pressed on time\n  if (parameter.name === 'oformat') {\n    parameter.deflt = parameter.value ? parameter.value : 'TEXT';\n  }\n}\n\nfunction parseProtocols(protocols) {\n  if (!protocols) {\n    return [];\n  }\n\n  if (!Array.isArray(protocols)) {\n    return [protocols];\n  }\n\n  return protocols.reduce((bucket, protocol) => {\n    // quick and dirty (as he said)\n    if (protocol === 'DBMS') {\n      bucket.push('MSSQL', 'MYSQL', 'ORACLE', 'PGSQL');\n    } else {\n      bucket.push(protocol);\n    }\n\n    return bucket;\n  }, []);\n}\n\nfunction defineEditor(parameter, dataTypes, prototypes, forms) {\n  if (!parameter.is_supported) {\n    return { type: 'hidden', disabled: true, value: '' };\n    // return { type: 'text', disabled: true, value: '' };\n  }\n\n  const { meta } = parameter;\n  const { editor: metaEditor, appearance } = meta;\n\n  if (appearance === 'Hidden') {\n    return { type: 'hidden' };\n  }\n\n  if (metaEditor === 'Hidden') {\n    return { type: 'text', disabled: true };\n  }\n\n  const prototype = prototypes.find(proto => proto.name === parameter.data_type);\n\n  if (prototype) {\n    const options = forms\n      .filter(form => form.prototype === prototype.name)\n      .map(form => ({ label: form.name, value: form.name }));\n    return {\n      type: 'select',\n      options\n    };\n  }\n\n  const dataType = dataTypes.find(type => type.name === parameter.data_type);\n\n  if (!dataType) {\n    return { type: 'text', disabled: true, readOnly: true };\n  }\n\n  if (dataType.enumerations !== null && dataType.enumerations.length > 0) {\n    const enumerations = sortBy(dataType.enumerations, 'weight');\n    const options = enumerations.map(({ label }) => ({ label, value: label }));\n\n    return { type: 'select', options };\n  }\n\n  if (\n    dataType.name.startsWith('mas0000.sys.account.conn.') ||\n    dataType.name === 'mas0000.sys.account.vsphere'\n  ) {\n    return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n  }\n\n  switch (dataType.name) {\n    case 'ename':\n      switch (metaEditor) {\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'fqname' };\n      }\n    case 'string':\n      switch (metaEditor) {\n        case 'password':\n          return { type: 'password' };\n        case 'fqname':\n        case 'ename':\n          return { type: 'fqname' };\n        case 'multiline':\n          // return { type: 'text', multiline: true };\n          return { type: 'multiline' };\n        case 'key':\n          return { type: 'rsa', multiline: true };\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'text' };\n      }\n    case 'boolean':\n      return { type: 'boolean' };\n    case 'integer':\n      return { type: 'number' };\n    case 'float':\n      return { type: 'number', validate: [check.signed_float] };\n    case 'uuid':\n      return { type: 'uuid' };\n    case 'unsigned_float':\n      return { type: 'number', validate: [check.unsigned_float] };\n    case 'unsigned_integer':\n      return { type: 'number', validate: [check.unsigned_int] };\n    case 'mas0000.os.exec.system_user':\n      return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n    case 'mas0000.sys.email_address':\n      return { type: 'email' };\n    case 'mas0000.sys.phone_number':\n      return { type: 'phone' };\n    case 'mas0000.sys.process.process':\n      return { type: 'process' };\n    case 'mas0000.sys.process.variadic_parameter':\n      return { type: 'variadic_parameter' /** needsSelectedProcessName */ };\n    case 'optional_dict':\n      // hardcord for replvalues\n      if (parameter.name === 'replvalues') {\n        return { type: 'replvalues' };\n      }\n      return { type: 'text', multiline: true };\n    default:\n      return { type: 'text', multiline: true };\n  }\n\n  // return { type: 'hidden' };\n}\n","export function mapScheduledNames(allScheduled = []) {\n  const names = allScheduled.reduce((acc, entry) => {\n    const nameArr = entry.name.split('.');\n    const name = nameArr[nameArr.length - 1];\n    acc.push(name);\n    return acc;\n  }, []);\n\n  return names;\n}\n","import React from 'react';\nimport { bool, node, string, array, func } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiContentSave } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport './ActionCard.local.scss';\n\nexport class ActionCard extends React.PureComponent {\n  render() {\n    const {\n      settings,\n      status,\n      icon,\n      label,\n      addOnly,\n      options,\n      onClick,\n      readOnlyOptions,\n      lastBackup,\n      type = '',\n      statusInfo = ''\n    } = this.props;\n\n    return (\n      <div className={classnames('action-card', { addable: addOnly })}>\n        <header>\n          {lastBackup && (\n            <div className=\"last-backup\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiContentSave} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{lastBackup}</span>\n            </div>\n          )}\n          {settings && <div className=\"settings\">{settings}</div>}\n        </header>\n        <div className=\"main-icon\" onClick={onClick} role=\"presentation\">\n          {status && (\n            <LightTooltip placement=\"bottom\" title={capitalizeFirstLetter(statusInfo)}>\n              <div className={`status ${status} ${type}`} />\n            </LightTooltip>\n          )}\n          {icon}\n        </div>\n        <div className=\"main-label\">{label}</div>\n        {options &&\n          options.map((option, index) => (\n            <div\n              className={classnames('option', { disabled: option.disabled })}\n              key={`${option.label}-${index}`}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n            </div>\n          ))}\n        {readOnlyOptions &&\n          readOnlyOptions.map(option => (\n            <div\n              className=\"option presentation\"\n              key={option.label}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              {option.fillable && option.percentage && (\n                <div className=\"filled\" style={{ width: `${option.percentage}%` }} />\n              )}\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n              {option.percentage && <div className=\"end-icon\">{option.percentage}%</div>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nActionCard.propTypes = {\n  settings: node,\n  icon: node,\n  label: string,\n  addOnly: bool,\n  options: array,\n  onClick: func,\n  status: string,\n  readOnlyOptions: array\n};\n\nexport default ActionCard;\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './CardsLayout.local.scss';\n\nexport class CardsLayout extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"container\">{children}</div>;\n  }\n}\n\nCardsLayout.propTypes = {\n  children: node\n};\n\nexport default CardsLayout;\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function postInvocation(body) {\n  try {\n    const { data } = await RestClient.post('/invocation', body);\n\n    return { result: data.result, invocations: data.data.invocations };\n  } catch (e) {\n    return { result: 'fail', invocations: [], messages: e.messages };\n  }\n}\n\nexport function requestInvocation(uuid) {\n  return RestClient.get(`/invocation/${uuid}`);\n}\n\nexport async function fetchInvocation(uuid) {\n  try {\n    const response = await RestClient.get(`/invocation/${uuid}`);\n\n    return {\n      result: 'success',\n      invocation: response.data.data.invocations[0]\n    };\n  } catch (e) {\n    console.log(e); // eslint-disable-line\n    return { result: 'fail' };\n  }\n}\n\nexport async function fetchInvocationOutput(uuid) {\n  return RestClient.get(`/invocation/${uuid}/display`, {\n    page_size: 2147483645\n  });\n}\n","import React from 'react';\n\nexport function want(map, Unresolved = () => null, keygen = key => key) {\n  function settler(props) {\n    const key = keygen(props);\n    return map[key] ?? Unresolved;\n  }\n\n  return settler;\n}\n\nexport function wantComponent(settler) {\n  function Picker(props) {\n    const Picked = settler(props);\n\n    return <Picked {...props} />;\n  }\n\n  return Picker;\n}\n","import React, { createContext } from 'react';\nimport uuid from 'uuid';\nimport MUIModal from '@material-ui/core/Modal';\nimport { bool, string, oneOfType, node, func, shape } from 'prop-types';\n\nimport './Modal.local.scss';\n\nimport { ModalHeader } from '../ModalHeader/ModalHeader';\n\nexport const ModalContext = createContext({});\n\nexport const Modal = ({ open, actions, id: providedId, children }) => {\n  const id = providedId || uuid();\n  const aria = {\n    'aria-labelledby': `${id}-modal-title`,\n    'aria-describedby': `${id}-modal-description`\n  };\n\n  return (\n    <ModalContext.Provider value={{ aria, actions }}>\n      <MUIModal {...aria} open={open} onClose={actions?.close} disableBackdropClick>\n        <div className=\"overlay\">\n          {typeof children === 'function' ? children({ id, aria, open, actions }) : children}\n        </div>\n      </MUIModal>\n    </ModalContext.Provider>\n  );\n};\n\nModal.propTypes = {\n  actions: shape({\n    open: func,\n    close: func\n  }),\n  children: oneOfType([node, func]),\n  open: bool,\n  id: string\n};\n\nModal.ModalHeader = ModalHeader;\n","import React from 'react';\n\nimport { WantParameter } from './wishes';\n\nexport function RepeatableParameter({ normalized, ...others }) {\n  return <WantParameter parameter={normalized} {...others} />;\n}\n\nexport const Parameter = ({ normalized, ...others }) => {\n  if (normalized.is_repeatable) {\n    return <RepeatableParameter {...others} normalized={normalized} />;\n  }\n\n  return <WantParameter {...others} parameter={normalized} />;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getNamespace(name) {\n  return RestClient.get(`/namespace/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchNamespace(name, body) {\n  return RestClient.patch(`/namespace/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postNamespace(body) {\n  return RestClient.post('/namespace', body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postForm(name, body) {\n  return RestClient.post(`/form/${name}/clone`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function createForm(body) {\n  return RestClient.post('/form', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function updateForm(name, body) {\n  return RestClient.patch(`/form/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useReducer, createContext } from 'react';\n\nimport _ from 'lodash';\n\nimport { produce } from 'immer';\n\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { QualifiedName, FormPrototypeSelect } from 'shared/components/form/editors/Custom';\n\nimport { space_summon } from 'shared/components/form/parameters/normalizeParameter';\n\nimport { FormParameters } from './FormParameters';\n\nimport { groupForm, ungroupForm } from './utils';\n\nimport { createForm, updateForm } from 'shared/api/form';\n\nconst groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_GROUP_INSTANCE': {\n      return produce(state, draft => {\n        draft.groups[action.pointers.group].instances.push(action.instance);\n      });\n    }\n\n    case 'REMOVE_GROUP_INSTANCE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances.splice(pointers.instance, 1);\n      });\n    }\n    case 'ADD_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        const field =\n          draft.groups[pointers.group].instances[pointers.instance].fields[pointers.field];\n\n        field.values.push({ instance: field.values.length, value: null });\n      });\n    }\n    case 'REMOVE_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances[pointers.instance].fields[\n          pointers.field\n        ].values.splice(action.index, 1);\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const PackedContext = createContext({ groups: [] });\n\nexport function FormEditor({ isNew, form, prototype, setResult, formRef }) {\n  const initialPacked = groupForm(prototype, _.cloneDeep(form));\n  /** Prepare initial relative name */\n  const split_name = form?.name?.split?.('.') || [''];\n\n  initialPacked.name = _.last(split_name);\n\n  const [packed, dispatch] = useReducer(groupsReducer, initialPacked);\n\n  const contextValue = { packed, dispatch };\n\n  return (\n    <PackedContext.Provider value={contextValue}>\n      <Formik\n        initialValues={{}}\n        validateOnChange={false}\n        onSubmit={(values, actions) =>\n          handleSubmit({\n            form,\n            packed,\n            isNew,\n            prototype,\n            values,\n            actions,\n            setResult\n          })\n        }\n        innerRef={formRef}\n      >\n        {({ values }) => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Form details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <QualifiedName name=\"form_name\" label=\"Name\" value={packed.name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"description\"\n                          label=\"Description\"\n                          value={packed.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column>\n                          <FormPrototypeSelect\n                            value={prototype?.name}\n                            disabled\n                            label=\"Form\"\n                            name=\"prototype\"\n                          />\n                        </Column>\n                      </Row>\n                      <FormParameters packed={packed} prototype={prototype} />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </PackedContext.Provider>\n  );\n}\n\nasync function handleSubmit({\n  prototype,\n  packed,\n  values,\n  actions,\n  setResult,\n  refresh,\n  isNew,\n  form\n}) {\n  const { form_name, description, prototype: protoName, ...fields } = values;\n\n  const extracted = extractFieldInfo(fields);\n\n  const exclusions = [null, 'None', ''];\n\n  const filteredExtractions = extracted.filter(entry => !exclusions.includes(entry.val));\n\n  const packedCopy = _.cloneDeep(packed);\n\n  /**\n   * Update name and description\n   */\n\n  /**\n   * extract and remap field values.\n   */\n  filteredExtractions.forEach(entry => {\n    const path = `groups[${entry.group}].instances[${entry.instance}].fields[${entry.field}].values[${entry.index}].value`;\n\n    _.set(packedCopy, path, entry.value);\n  });\n\n  /**\n   * unpack and prepare for sending\n   */\n  const unpacked = ungroupForm(packedCopy);\n\n  /**\n   * Very Important!\n   * Please read.\n   * Another cleanup process is needed.\n   * So there cannot be values for repeatable parameters where there is an empty array.\n   * It requires for some DAMNED reason, to have at least one null value.\n   */\n  unpacked.values = unpacked.values.map(value => {\n    if (Array.isArray(value.value)) {\n      /** for some reason, it's not removed from the first iteration for values. */\n      const filtered = { ...value, value: value.value.filter(v => !!v) };\n\n      if (filtered.value.length === 0) {\n        filtered.value = [null];\n      }\n\n      return filtered;\n    }\n\n    return value;\n  });\n\n  const name = form_name;\n\n  unpacked.name = name;\n\n  if (!isNew) {\n    const rename = [..._.initial(form.name.split('.')), form_name].join('.');\n    if (rename !== form.name) {\n      unpacked.rename = rename;\n      delete unpacked.name;\n    }\n  }\n\n  unpacked.description = description;\n  unpacked.prototype = protoName;\n  unpacked.version = prototype.version;\n\n  const request = isNew ? createForm : updateForm;\n\n  const request_args = [unpacked];\n\n  if (!isNew) {\n    // prepend name to request arguments.\n    request_args.unshift(form.name);\n  }\n\n  try {\n    await request(...request_args);\n    setResult('success');\n  } catch (e) {\n    setResult('fail');\n  }\n}\n\n// /** berry important :) */\nfunction extractFieldInfo(all) {\n  const key_struct = /^group-(\\d+)-instance-(\\d+)-field-(\\d+)-value-(\\d+)---(\\w+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      name: space_summon(matched[5]),\n      index: matched[4],\n      field: matched[3],\n      instance: matched[2],\n      lower: matched[1],\n      group: matched[1],\n      value\n    };\n  });\n}\n","import moment from 'moment';\n\nimport { getOutputText } from './getOutputText';\n\nexport const sendToEmail = (invocation, output, processName) => {\n  const text = getOutputText(output, invocation);\n  const date = moment(invocation.date_invoke).format('MMM DD YYYY, H:mm:ss');\n  const subject = processName ? `${processName} output` : 'Job output';\n  const body = `PROCESS: ${processName}\\nDATE: ${date}\\nSTATUS: ${invocation.status}\\n\\nOUTPUT:\\n\\n${text}`;\n  window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(body)}`;\n};\n","import { getOutputText } from './getOutputText';\n\nexport const copyToClipboard = (output, invocation) => {\n  const text = getOutputText(output, invocation);\n  navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\n    if (result.state === 'granted' || result.state === 'prompt') {\n      /* write to the clipboard */\n      navigator.clipboard.writeText(text).then(\n        () => {\n          /* successful */\n          console.log('[copyTextToClipboard] Copied:', text); // eslint-disable-line\n        },\n        () => {\n          /* write failed */\n          console.warn('[copyTextToClipboard] --- unable to write to clipboard!'); // eslint-disable-line\n        }\n      );\n    } else {\n      legacyMethod(text);\n    }\n  }, legacyMethod.bind(this, text));\n};\n\nfunction legacyMethod(text) {\n  const textArea = document.createElement('textarea');\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.classList.add('copyToClipboardInput');\n  textArea.focus();\n  textArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textArea);\n  console.log('[copyTextToClipboard-legacy] Copied:', text); // eslint-disable-line\n}\n","export function mapAllServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const entryInfo = {\n      name: entry.srvname,\n      sid: entry.sid,\n      collDate: entry.collDate,\n      nrCores: entry.Ncore,\n      totalDBs: 1,\n      eelic_count: entry.eelic_count,\n      selic_count: entry.selic_count,\n      sids: [entry],\n      installedOptions: {\n        aa_count: entry.aa_count ? 1 : 0,\n        ac_count: entry.ac_count ? 1 : 0,\n        as_count: entry.as_count ? 1 : 0,\n        dv_count: entry.dv_count ? 1 : 0,\n        mt_count: entry.mt_count ? 1 : 0,\n        adg_count: entry.adg_count ? 1 : 0,\n        rac_count: entry.rac_count ? 1 : 0,\n        olap_count: entry.olap_count ? 1 : 0,\n        part_count: entry.part_count ? 1 : 0,\n        in_mem_db_count: entry.in_mem_db_count ? 1 : 0\n      }\n    };\n\n    const totalInstalledOptions = Object.values(entryInfo.installedOptions).reduce((a, b) => a + b);\n    entryInfo.sids = [{ ...entry, totalInstalledOptions }];\n    entryInfo.totalInstalledOptions = totalInstalledOptions;\n\n    acc.push(entryInfo);\n    return acc;\n  }, []);\n\n  return groupServers(serversInfo).sort((a, b) => a.nrCores - b.nrCores);\n}\n\nexport function mapVirtualServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const index = acc.findIndex(sv => sv.vcenterservername === entry.vcenterservername);\n\n    if (index > -1) {\n      if (\n        entry.vmname !== null ||\n        entry.vmguesthostname !== null ||\n        entry.vmguestos !== null ||\n        entry.vmipaddress !== null\n      ) {\n        acc[index].hosts_nr += 1;\n      }\n    } else {\n      acc.push({\n        vcenterservername: entry.vcenterservername,\n        cpu: entry.cpu,\n        cpucores: entry.cpucores,\n        hosts_nr:\n          entry.vmname !== null ||\n          entry.vmguesthostname !== null ||\n          entry.vmguestos !== null ||\n          entry.vmipaddress !== null\n            ? 1\n            : 0\n      });\n    }\n    return acc;\n  }, []);\n\n  return serversInfo;\n}\n\nfunction groupServers(servers) {\n  return Object.values(servers.reduce((acc, entry) => {\n    if (!acc[entry.name]) {\n      acc[entry.name] = entry;\n    } else {\n      const allSids = [...acc[entry.name].sids, ...entry.sids];\n      acc[entry.name] = entry;\n      acc[entry.name].sids = allSids;\n    }\n    return acc;\n  }, {}));\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './center.local.scss';\n\nexport class CenterComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport default CenterComponent;\n\nCenterComponent.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nCenterComponent.defaultProps = {\n  className: 'center-container'\n};\n","import moment from 'moment';\n\nexport function isBeforeDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n\n  const aYear = a.year();\n  const aMonth = a.month();\n\n  const bYear = b.year();\n  const bMonth = b.month();\n\n  const isSameYear = aYear === bYear;\n  const isSameMonth = aMonth === bMonth;\n\n  if (isSameYear && isSameMonth) return a.date() < b.date();\n  if (isSameYear) return aMonth < bMonth;\n  return aYear < bYear;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { string, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Overflow.scss';\n\nexport const Overflow = ({ className, component, children, variant }) => {\n  const nodeRef = useRef(null);\n  const [scrollableX, setScrollableX] = useState(false);\n  const [scrollableY, setScrollableY] = useState(false);\n  const [scrolledX, setScrolledX] = useState(false);\n  const [scrolledY, setScrolledY] = useState(false);\n\n  const Tag = component || 'div';\n\n  const onScroll = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolledY) {\n          setScrolledY(true);\n        }\n      } else if (scrolledY) {\n        setScrolledY(false);\n      }\n\n      if (event.currentTarget.scrollLeft) {\n        if (!scrolledX) {\n          setScrolledX(true);\n        }\n      } else if (scrolledX) {\n        setScrolledX(false);\n      }\n    },\n    [scrollableX, scrollableY, scrolledX, scrolledY]\n  );\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const element = nodeRef.current;\n      const box = {\n        width: element.clientWidth,\n        height: element.clientHeight,\n        scrollHeight: element.scrollHeight,\n        scrollWidth: element.scrollWidth\n      };\n\n      if (box.width < box.scrollWidth && !scrollableX) {\n        setScrollableX(true);\n      }\n\n      if (box.height < box.scrollHeight && !scrollableY) {\n        setScrollableY(true);\n      }\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={classnames(\n        'overflow-container',\n\n        {\n          [variant]: variant,\n          scrollableX,\n          scrollableY,\n          scrolledX,\n          scrolledY\n        },\n        className\n      )}\n    >\n      <Tag ref={nodeRef} className={classnames('overflow-scroller')} onScroll={onScroll}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nOverflow.propTypes = {\n  children: node,\n  className: string,\n  variant: oneOf(['white'])\n};\n\nOverflow.defaultProps = {};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nimport './Checkbox.local.scss';\n\nexport const Checkbox = ({ label, disabled, ...rest }) => {\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className=\"checkbox-label\"\n      control={\n        <MUICheckbox\n          className=\"checkbox\"\n          color=\"primary\"\n          icon={<CheckBoxOutlineBlankIcon />}\n          checkedIcon={<CheckBoxIcon />}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  label: node,\n  disabled: bool\n};\n","import React, { useContext, useState } from 'react';\nimport { string, node, func, shape, bool } from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { ModalContext } from '../Modal/Modal';\n\nimport { Modal } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport './ModalHeader.local.scss';\n\nexport const ModalHeader = ({\n  avatar,\n  icon,\n  title,\n  desc,\n  closeable,\n  onClose,\n  aria: providedAria,\n  formikRef,\n  changedForm = false\n}) => {\n  const context = useContext(ModalContext);\n  const aria = context.aria || providedAria;\n  const actions = context.actions || { close: onClose };\n  const [open, setOpen] = useState(false);\n\n  const close = () => {\n    if (changedForm || (formikRef?.current?.dirty && fieldChanged(formikRef?.current?.touched))) {\n      setOpen(true);\n    } else {\n      actions.close();\n    }\n  };\n\n  const fieldChanged = fields => {\n    let changed = false;\n    const fieldsArr = Object.keys(fields);\n\n    fieldsArr.map(field => {\n      if (fields[field]) {\n        changed = true;\n      }\n\n      return null;\n    });\n\n    return changed;\n  };\n\n  return (\n    <header className=\"modal-header\">\n      {avatar && <div className=\"icon-slot\">{avatar}</div>}\n      {/** TODO: this should actually be avatar :((( ... don't have time to refactor now need to patch through */}\n      {icon && (\n        <div className=\"icon-slot\">\n          <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n            {icon}\n          </Avatar>\n        </div>\n      )}\n      <div className=\"modal-title-slot\" id={aria['aria-labelledby']}>\n        <h1 className=\"modal-title\">{title}</h1>\n        {desc && (\n          <p className=\"modal-desc\" id={aria['aria-describedby']}>\n            {desc}\n          </p>\n        )}\n      </div>\n      {closeable && actions.close && (\n        <>\n          <div className=\"modal-close-button-slot\">\n            <button className=\"modal-close-button\" onClick={close}>\n              <CloseIcon fontSize=\"large\" />\n            </button>\n          </div>\n\n          <Modal open={open}>\n            <Paper\n              style={{\n                minWidth: '350px',\n                maxHeight: '368px',\n                maxWidth: '65vw'\n              }}\n            >\n              <Paper.Header>\n                <div className=\"modal-header\">\n                  <div className=\"icon-slot\">\n                    <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n                      <WarningIcon />\n                    </Avatar>\n                  </div>\n                  <div className=\"modal-title-slot\">\n                    <h1 className=\"modal-title\">Warning</h1>\n                  </div>\n                  <div className=\"modal-close-button-slot\">\n                    <button\n                      className=\"modal-close-button\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"large\" />\n                    </button>\n                  </div>\n                </div>\n              </Paper.Header>\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Exit without saving?</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    No\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                      actions.close();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Paper>\n          </Modal>\n        </>\n      )}\n    </header>\n  );\n};\n\nModalHeader.propTypes = {\n  title: node,\n  desc: node,\n  onClose: func,\n  closeable: bool,\n  avatar: node,\n  icon: node,\n  aria: shape({\n    'aria-labelledby': string,\n    'aria-describedby': string\n  })\n};\n\nModalHeader.defaultProps = {\n  closeable: true\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","export default (task, duration = 10000) => {\n  let running = false;\n\n  async function runTask() {\n    if (!running) {\n      return;\n    }\n\n    try {\n      await task();\n      running = false;\n    } catch (e) {\n      setTimeout(() => runTask(), duration);\n    }\n  }\n\n  return {\n    start() {\n      if (running) {\n        return;\n      }\n      running = true;\n      runTask();\n    },\n    stop() {\n      running = false;\n    }\n  };\n};\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { deleteInvocation } from 'shared/api/delete';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions as sharedActions } from 'shared/store/actions';\nimport './DeleteJobModal.local.scss';\n\nexport const ConnectedDeleteJobModal = connect(\n  state => {\n    return {\n      globalFilters: globalFiltersSelector(state)\n    };\n  },\n  dispatch => {\n    return {\n      getJobs: data => {\n        dispatch(sharedActions.getJobs.dispatchLoading(data));\n      }\n    };\n  }\n)(DeleteJobModal);\n\nfunction DeleteJobModal({ open, actions, uuid, filters, globalFilters, getJobs }) {\n  const [result, setResult] = useState('attempt');\n  const getQSP = () => {\n    if (!filters || !Object.keys(filters).length) {\n      const startDate = moment.unix(globalFilters.get('startDate'));\n      const endDate = moment.unix(globalFilters.get('endDate'));\n      const start = moment(startDate.format('YYYY-MM-DD'));\n      const end = moment(endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n      const payload = {\n        date_invoke: startDate.format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      };\n\n      return payload;\n    }\n    return filters;\n  };\n\n  const terminator = useCallback(() => {\n    deleteInvocation(uuid)\n      .then(() => {\n        setResult('success');\n        if (filters) {\n          getJobs(getQSP());\n        }\n      })\n      .catch(() => {\n        setResult('fail');\n      });\n  }, uuid);\n  return (\n    <>\n      <Modal open={open} actions={actions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Delete\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <div className=\"container\">\n                    <p>Are you sure you want to delete invocation with uuid:</p>\n                    <p className=\"uuid\">{uuid}</p>\n                  </div>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('loading');\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <h2 className=\"container\">Invocation successfully deleted!</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <h2 className=\"container\">Invocation could not be deleted.</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"loading\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { ScheduleModal } from './components/ScheduleModal/ScheduleModal';\n\nexport const Schedule = ({ invocation }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setFilledValues({});\n      setResult('');\n      setOpen(false);\n    }\n  };\n  const [filledValues, setFilledValues] = useState({});\n  const [result, setResult] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const onClickHandler = option => {\n    setSelectedOption(option);\n    setOpen(true);\n  };\n\n  const btnLabel = invocation ? 'Schedule' : 'New Schedule';\n  const isScheduled = invocation?.status === 'SCHEDULED' && invocation?.schedule;\n\n  return (\n    <>\n      {isScheduled && (\n        <Button style={{ minWidth: '140px' }} onClick={() => onClickHandler('edit-schedule')}>\n          Edit Schedule\n        </Button>\n      )}\n      <Button\n        onClick={() => {\n          onClickHandler('schedule');\n        }}\n      >\n        {btnLabel}\n      </Button>\n      <ScheduleModal\n        open={open}\n        actions={modalActions}\n        invocation={invocation}\n        isScheduled={isScheduled}\n        selectedOption={selectedOption}\n        result={result}\n        setResult={setResult}\n        filledValues={filledValues}\n        setFilledValues={setFilledValues}\n      />\n    </>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { postNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\n\nexport const ConnectedNewNamespace = connect(null, {\n  request: fetchEntity\n})(NewNamespace);\n\nfunction NewNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Namespace\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: namespace ? namespace.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  postNamespace(body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { FormEditor } from './FormEditor';\n\nexport const ConnectedFormModal = connect(null, {\n  refresh: fetchEntity\n})(FormModal);\n\nfunction FormModal({ disabled, form = null, prototype, refresh }) {\n  const isNew = form === null;\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('use_form');\n  const formRef = useRef();\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult('use_form');\n      setOpen(false);\n      // should refresh be here as well?\n      // refresh('form');\n    }\n  };\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        {isNew ? 'New Form' : 'Edit'}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title={`${isNew ? 'New' : 'Edit'} Form`}\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"use_form\">\n              <FormEditor\n                isNew={isNew}\n                form={form}\n                prototype={prototype}\n                setResult={setResult}\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was {isNew ? 'created' : 'updated'} successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      refresh('form');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nexport const ServerForm = ({\n  server = {},\n  protocols,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [submission, setSubmission] = useState({});\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [showRSA, setShowRSA] = useState(false);\n  const handleAccountCreation = getCreateAccountHandler({\n    showRSA,\n    passwordEditable,\n    setSubmission,\n    isNew,\n    server\n  });\n\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapServerValues(entry) {\n    return {\n      name: entry.name || '',\n      description: entry.description || '',\n      host: entry.address || '',\n      port: entry.port || availablePorts[entry.protocol || 'SSH'],\n      user: entry.user || '',\n      server_password: entry.user_key || '',\n      confirm_server_password: '',\n      rsa_key: entry.user_key || '',\n      protocol: entry.protocol || 'SSH'\n    };\n  }\n\n  const initialValues = mapServerValues(server);\n\n  const extraValidations = values => {\n    const errors = {};\n    if (passwordEditable && !showRSA) {\n      if (values.server_password !== values.confirm_server_password) {\n        errors.confirm_server_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column>\n                          <Row>\n                            <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                          </Row>\n                          <Row>\n                            <Column>\n                              <Text\n                                name=\"protocol\"\n                                required\n                                label=\"Protocol\"\n                                disabled={!isNew}\n                                options={allowedProtocols.map(p => ({\n                                  value: p.name,\n                                  label: p.name\n                                }))}\n                                value={initialValues.protocol}\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue('port', availablePorts[value]);\n                                }}\n                              />\n                            </Column>\n                          </Row>\n                        </Column>\n                        <Column>\n                          <Text\n                            name=\"description\"\n                            multiline\n                            required\n                            label=\"Description\"\n                            value={initialValues.description}\n                          />\n                        </Column>\n                      </Row>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column style={{ maxWidth: '80%', width: '80%' }}>\n                          <Text\n                            name=\"host\"\n                            label=\"Host\"\n                            required\n                            value={initialValues.host}\n                            disabled={editing}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column>\n                          <Text\n                            name=\"server_user\"\n                            label=\"User\"\n                            required\n                            value={initialValues.user}\n                          />\n                        </Column>\n                        {passwordEditable && <PasswordOrRSA allowed showRSA={showRSA} />}\n                      </Row>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" required label=\"RSA Key\" />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row>\n          <Password name=\"server_password\" label=\"Password\" required />\n        </Row>\n        <Row>\n          <Password name=\"confirm_server_password\" label=\"Confirm Password\" required />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ showRSA, passwordEditable, setSubmission, isNew, server }) {\n  return function handleAccountCreation(values) {\n    const request_body = {\n      protocol: values.protocol,\n      user: values.server_user,\n      description: values.description,\n      address: values.host,\n      ...(passwordEditable && {\n        user_key: showRSA ? values.rsa_key : values.server_password\n      }),\n      port: Number.parseInt(values.port, 10)\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(server.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handleSubmission) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    // add this entry to redux structure\n    // addNewAccount(newAccount);\n    handleSubmission();\n  };\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport _ from 'lodash';\n\nexport const DatabaseForm = ({\n  account = {},\n  protocols = [],\n  modes,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [submission, setSubmission] = useState({});\n  const allowedProtocols = protocols.filter(p => {\n    const special = p?.special_required;\n\n    return special && special.includes('database');\n  });\n  const [showRSA, setShowRSA] = useState(false);\n\n  const handleAccountCreation = getCreateAccountHandler({\n    protocols: allowedProtocols,\n    modes,\n    showRSA,\n    isNew,\n    setSubmission,\n    account\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapAccountValues(entry = {}) {\n    return {\n      name: _.get(entry, 'name', ''),\n      protocol: _.get(entry, 'protocol', ''),\n      description: _.get(entry, 'description', ''),\n\n      host: _.get(entry, 'address', ''),\n\n      port: _.get(entry, 'port', availablePorts[_.get(entry, 'protocol')]),\n\n      database: _.get(entry, 'special.database', ''),\n      user: _.get(entry, 'user', ''),\n      mode: _.get(entry, 'special.mode', '')\n    };\n  }\n\n  const initialValues = mapAccountValues(account);\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (passwordEditable && !showRSA) {\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {({ values }) => {\n            const selectedProtocol =\n              values.protocol && protocols.find(protocol => protocol.name === values.protocol);\n            const allowRSA = !!selectedProtocol?.allow_rsa_key;\n            const withDatabase = selectedProtocol?.special_required?.includes('database');\n            const withMode = selectedProtocol?.name === 'ORACLE';\n\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column>\n                            <Row padded>\n                              <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                            </Row>\n                            <Row padded>\n                              <Column>\n                                <Text\n                                  name=\"protocol\"\n                                  required\n                                  label=\"Protocol\"\n                                  reactToChange={(value, formik) => {\n                                    formik.setFieldValue('port', availablePorts[value]);\n                                  }}\n                                  options={allowedProtocols.map(p => ({\n                                    value: p.name,\n                                    label: p.name\n                                  }))}\n                                  value={initialValues.protocol}\n                                />\n                              </Column>\n                            </Row>\n                          </Column>\n                          <Column>\n                            <Text\n                              multiline\n                              name=\"description\"\n                              label=\"Description\"\n                              required\n                              value={initialValues.description}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column style={{ maxWidth: '80%', width: '80%' }}>\n                            <Text name=\"host\" required label=\"Host\" value={initialValues.host} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                          </Column>\n                        </Row>\n                        <Row>\n                          {withDatabase && (\n                            <Column style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}>\n                              <Text\n                                name=\"database\"\n                                required\n                                label=\"Database\"\n                                value={initialValues.database}\n                              />\n                            </Column>\n                          )}\n                          {withMode && (\n                            <Column style={{ maxWidth: '20%' }}>\n                              <Text\n                                name=\"mode\"\n                                label=\"Mode\"\n                                required\n                                options={modes.map(mode => ({\n                                  value: mode.label,\n                                  label: mode.label\n                                }))}\n                                value={initialValues.mode}\n                              />\n                            </Column>\n                          )}\n                        </Row>\n                        <Row>\n                          <Column>\n                            <Text\n                              name=\"user\"\n                              label=\"User\"\n                              required\n                              value={initialValues.user || ''}\n                            />\n                          </Column>\n                          {passwordEditable && (\n                            <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                          )}\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && allowRSA && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && allowRSA && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" label=\"RSA Key\" required />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row padded>\n          <Password name=\"password\" required label=\"Password\" />\n        </Row>\n        <Row padded>\n          <Password name=\"confirm_password\" required label=\"Confirm Password\" />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ protocols, showRSA, setSubmission, isNew, account }) {\n  return function handleAccountCreation(values) {\n    const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n    const allowRSA = !!selectedProtocol?.allow_rsa_key;\n    const withDatabase = selectedProtocol?.special_required?.includes('database');\n    const withMode = selectedProtocol?.name === 'ORACLE';\n\n    const request_body = {\n      user: values.user,\n      description: values.description,\n      protocol: values.protocol,\n      address: values.host,\n      user_key: allowRSA && showRSA ? values.rsa_key : values.password,\n      port: Number.parseInt(values.port, 10),\n      special: {\n        ...(withDatabase && { database: values.database }),\n        ...(withMode && { mode: values.mode })\n      }\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(account.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handler) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    handler();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchDataTypes(type = '') {\n  try {\n    const { data } = await RestClient.get(\n      `${CONSTANTS.BASE.ENDPOINTS.DATATYPES}${type ? `/${type}` : ''}`\n    );\n\n    return { result: data.result, data_types: data.data.data_types };\n  } catch (e) {\n    return { result: 'fail', data_types: [] };\n  }\n}\n","import { requestInvocation } from 'shared/api/invocation';\n\nexport function processQuery(uuid, process) {\n  return {\n    type: 'PROCESS_QUERY',\n    uuid,\n    process\n  };\n}\n\nexport function fetchInvocation(uuid, process) {\n  return function thunk(dispatch) {\n    dispatch({\n      type: 'FETCH_INVOCATION',\n      uuid,\n      process,\n      promise: requestInvocation(uuid)\n    });\n  };\n}\n\nexport function updateInvocation(invocation) {\n  return {\n    type: 'UPDATE_INVOCATION',\n    invocation\n  };\n}\n","export const getOutputText = (output, invocation) => {\n  if (!invocation || (!output && invocation.status !== 'FAILED')) return '';\n\n  let outputText = '';\n\n  if (invocation.status === 'FAILED') {\n    outputText = `The following error(s) occurred:\n      ${invocation.errors.map(error => `• ${error}`).join('\\n')}\\n ${\n      output && output.length > 0 ? `Output: \\n${output.map(row => row.data.text).join('\\n')}` : ''\n    }`;\n  } else {\n    outputText = output.map(row => row.data.text).join('\\n');\n  }\n\n  return outputText;\n};\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiCubeOutline, mdiCubeScan, mdiMemory, mdiCalendarBlank } from '@mdi/js';\nimport Cores from '../../../../assets/images/server_core.svg';\n\nimport './ServerCard.local.scss';\n\nexport const ServerCard = ({ server, selected, toggleSelectedCallback, type }) => {\n  if (type === 'virtual') {\n    return (\n      <div className=\"virtual-server-card\">\n        <Avatar className=\"server-avatar\">\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </Avatar>\n        <div className=\"server-info\">\n          <span className=\"name\">{server.vcenterservername}</span>\n          <div className=\"details\">\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiCubeScan} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.hosts_nr}</span>\n              <span className=\"label\">Hosts</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiMemory} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.cpu}</span>\n              <span className=\"label\">CPUs</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <img className=\"img-responsive\" src={Cores} alt=\"server core icon\" />\n              </span>\n              <span className=\"value\">{server.cpucores}</span>\n              <span className=\"label\">Cores</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classnames('server-card', { selected })}\n      onClick={() => toggleSelectedCallback(server)}\n      role=\"presentation\"\n    >\n      <Avatar className=\"server-avatar\">\n        <SvgIcon>\n          <Icon path={mdiDns} />\n        </SvgIcon>\n      </Avatar>\n      <LightTooltip placement=\"bottom\" title={server.name}>\n        <span className=\"server-name\">{server.name}</span>\n      </LightTooltip>\n      <LightTooltip\n        placement=\"bottom\"\n        title={`Last updated: ${moment(server.collDate).format('MMM DD YYYY')}`}\n      >\n        <span className=\"calendar-icon\">\n          <SvgIcon>\n            <Icon path={mdiCalendarBlank} />\n          </SvgIcon>\n        </span>\n      </LightTooltip>\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './ServersTile.local.scss';\n\nconst colors = {\n  1: '#6DF0D2',\n  2: '#1DE4BD',\n  4: '#1AC9E6',\n  6: '#7D3AC1',\n  8: '#EA7369',\n  16: '#EF7E32',\n  24: '#EABD3B'\n};\n\nexport const ServersTile = ({ servers, isSingle }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.nrCores;\n  }, 0);\n\n  const cores = [];\n  servers.map(sv => {\n    const index = cores.findIndex(core => core.nrCores === sv.nrCores);\n    if (index > -1) {\n      cores[index].count += 1;\n    } else {\n      cores.push({ count: 1, nrCores: sv.nrCores });\n    }\n\n    return null;\n  });\n\n  function getData() {\n    const data = [];\n\n    cores.map(core => {\n      data.push({\n        value: core.count,\n        description: `${core.nrCores}C`,\n        color: colors[core.nrCores]\n      });\n\n      return null;\n    });\n\n    return data;\n  }\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDns} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={servers.length} />\n        <StringLabel text={isSingle ? 'Server' : 'Total servers'} />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"first-column\">\n          <div className=\"value\">{total}</div>\n          <div className=\"label\">Cores</div>\n        </div>\n\n        <div className=\"second-column\">\n          <div className=\"bar-chart\">\n            <HorizontalBar\n              height={36}\n              showTextIn\n              fontColor=\"#fff\"\n              fontWeight=\"bold\"\n              data={getData()}\n            />\n          </div>\n          <div className=\"label\">Server Cores Distribution</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nexport default class HorizontalBar extends Component {\n  constructor(props) {\n    super(props);\n    //\n    this.state = {\n      listBars: [],\n      data: this.props.data\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!_.isEqual(this.props, prevProps)) {\n      this.setState(state => ({\n        ...state,\n        listBars: this.getListBarWithOtherParameters(),\n        data: this.props.data\n      }));\n    }\n  }\n\n  componentDidMount() {\n    this.setState(state => ({\n      ...state,\n      listBars: this.getListBarWithOtherParameters(),\n      data: this.props.data\n    }));\n  }\n\n  /**\n   * Make the calculus of total width\n   */\n  calcWidthTotal() {\n    let widthTotal = 0;\n    this.props.data.forEach(bar => {\n      widthTotal = widthTotal + bar.value;\n    });\n    return widthTotal;\n  }\n\n  /**\n   * Returns the same list of bars with position and barWidth\n   */\n  getListBarWithOtherParameters() {\n    const widthTotal = this.calcWidthTotal();\n    let position = 0;\n    let barWidth = 0;\n    const listBars = this.props.data.map(bar => {\n      position = position + barWidth;\n      barWidth = (bar.value * 100) / widthTotal;\n      bar = Object.assign({ position: position, barWidth: barWidth }, bar);\n      return bar;\n    });\n    return listBars;\n  }\n\n  /**\n   * OnClick Event\n   */\n  onClick(evt, bar) {\n    Object.assign(evt, { bar: bar });\n    if (this.props.onClick) {\n      this.props.onClick(evt);\n    }\n  }\n\n  /**\n   * Returns a new calculated rgb color\n   */\n  randomColor() {\n    const r = Math.floor(Math.random() * 255);\n    const g = Math.floor(Math.random() * 255);\n    const b = Math.floor(Math.random() * 255);\n\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  /**\n   * Returns a list of texts of the bars into a div component\n   */\n  getListTextBar(showTextInsteadValue) {\n    const { showTextWithValue } = this.props;\n    const listText = this.state.listBars.map((bar, index) => {\n      return (\n        <div\n          key={index}\n          style={{\n            position: 'relative',\n            float: 'left',\n            width: `${bar.barWidth}%`,\n            fontSize: '90%'\n          }}\n          onClick={e => this.onClick(e, bar)}\n        >\n          {showTextInsteadValue && bar.name}\n          {showTextInsteadValue && bar.name && showTextWithValue ? ': ' : ''}\n          {(!showTextInsteadValue || showTextWithValue) && (bar.description || bar.value || '')}\n        </div>\n      );\n    });\n    return listText;\n  }\n\n  renderBars() {\n    const listBars = [];\n    const { showTextWithValue, showTextIn, showValueIn } = this.props;\n\n    listBars.push(\n      this.state.listBars.map((bar, index) => {\n        return (\n          <g key={index} onClick={e => this.onClick(e, bar)}>\n            <rect\n              width={`${bar.barWidth + 0.1}%`}\n              height={this.props.height}\n              style={{\n                fill: bar.color || this.randomColor()\n              }}\n              x={`${bar.position}%`}\n            />\n            {(this.props.showTextIn || this.props.showValueIn) && (\n              <text\n                style={{ fill: this.props.fontColor, fontSize: '90%' }}\n                fontWeight={this.props.fontWeight || 'normal'}\n                x={`${bar.position + (bar.barWidth + 0.1) / 2}%`}\n                y=\"50%\"\n                dy=\"0.35em\"\n              >\n                {showTextIn && bar.name}\n                {bar.name && showTextIn ? ': ' : ''}\n                {(showValueIn || showTextWithValue) && (bar.description || bar.value || '1')}\n              </text>\n            )}\n            <title>{`${bar.name || ''}${bar.name ? ': ' : ''}${bar.description ||\n              bar.value ||\n              '1'}`}</title>\n          </g>\n        );\n      })\n    );\n    return listBars;\n  }\n\n  renderLabel(showTextInsteadValue) {\n    return (\n      <div\n        id={`${this.props.id}_text`}\n        style={{\n          textAlign: 'left',\n          display: 'flex',\n          width: '100%'\n        }}\n      >\n        {this.getListTextBar(showTextInsteadValue)}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.props.showTextUp || this.props.showValueUp) &&\n          this.renderLabel(this.props.showTextUp)}\n        <svg id={this.props.id} width=\"100%\" height={this.props.height}>\n          {this.renderBars()}\n        </svg>\n        {(this.props.showTextDown || this.props.showValueDown) &&\n          this.renderLabel(this.props.showTextDown)}\n      </React.Fragment>\n    );\n  }\n}\n\nHorizontalBar.propTypes = {\n  data: PropTypes.array.isRequired,\n  id: PropTypes.string,\n  height: PropTypes.number,\n  showTextIn: PropTypes.bool,\n  showTextUp: PropTypes.bool,\n  showTextDown: PropTypes.bool,\n  showTextWithValue: PropTypes.bool,\n  showValueIn: PropTypes.bool,\n  showValueUp: PropTypes.bool,\n  showValueDown: PropTypes.bool,\n  fontColor: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nHorizontalBar.defaultProps = {\n  height: 30,\n  showTextIn: false,\n  showTextUp: false,\n  showTextDown: false,\n  showTextWithValue: true,\n  showValueIn: false,\n  showValueUp: false,\n  showValueDown: false,\n  fontColor: 'white',\n  id: 'hsbar'\n};\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport './DatabasesTile.local.scss';\n\nexport const DatabasesTile = ({ servers }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.totalDBs;\n  }, 0);\n\n  const dbs = {\n    eelic_count: 0,\n    selic_count: 0\n  };\n  servers.map(sv => {\n    dbs.eelic_count += sv.eelic_count;\n    dbs.selic_count += sv.selic_count;\n\n    return null;\n  });\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDatabase} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={total} />\n        <StringLabel text=\"Total databases\" />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"info\">\n          <div className=\"first-column\">\n            <div className=\"value-eed\">{dbs.eelic_count}</div>\n            <div className=\"label\">Enterprise Edition Databases</div>\n          </div>\n          <div className=\"second-column\">\n            <div className=\"value-sed\">{dbs.selic_count}</div>\n            <div className=\"label\">Standard Edition Databases</div>\n          </div>\n        </div>\n        <div className=\"bar-chart\">\n          <HorizontalBar\n            height={8}\n            data={[\n              { value: dbs.eelic_count, color: '#19AADE' },\n              { value: dbs.selic_count, color: '#7D3AC1' }\n            ]}\n          />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* getBeVersion() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_VERSION);\n    yield put(actions.getBeVersion.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeVersion.dispatchFail());\n  }\n}\n\nfunction* getBeLicence() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_LICENCE);\n    yield put(actions.getBeLicence.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeLicence.dispatchFail());\n  }\n}\n\nfunction* getBeHeath() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_HEALTH);\n    yield put(actions.getBeHealth.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeHealth.dispatchFail());\n  }\n}\n\nexport function* BeLicenceEffect() {\n  yield takeEvery(actions.getBeLicence.getLoadingAction(), getBeLicence);\n}\n\n\n\nexport function* BeHealthEffect() {\n  yield takeEvery(actions.getBeHealth.getLoadingAction(), getBeHeath);\n}\n\n\n\nexport function* BeVersionEffect() {\n  yield takeEvery(actions.getBeVersion.getLoadingAction(), getBeVersion);\n}\n","import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './TotalJobsCount.local.scss';\n\nexport const TotalJobsCount = ({ jobs, status }) => {\n  const jobsTotal = () => {\n    return (\n      <div className=\"tooltip-container\">\n        <div className=\"row executing\">\n          <span className=\"label\"> EXECUTING:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'EXECUTING').length}</span>\n        </div>\n        <div className=\"row succeeded\">\n          <span className=\"label\"> SUCCEEDED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SUCCEEDED').length}</span>\n        </div>\n        <div className=\"row scheduled\">\n          <span className=\"label\"> SCHEDULED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SCHEDULED').length}</span>\n        </div>\n        <div className=\"row delayed\">\n          <span className=\"label\">DELAYED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'DELAYED').length}</span>\n        </div>\n        <div className=\"row aborted\">\n          <span className=\"label\">ABORTED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'ABORTED').length}</span>\n        </div>\n        <div className=\"row failed\">\n          <span className=\"label\">FAILED: </span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'FAILED').length}</span>\n        </div>\n        <div className=\"row killed\">\n          <span className=\"label\">KILLED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'KILLED').length}</span>\n        </div>\n      </div>\n    );\n  };\n\n  if (status) {\n    return (\n      <div className=\"count-jobs\">\n        {jobs.length} {status} {jobs.length === 1 ? 'job' : 'jobs'}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"count-jobs\">\n      <LightTooltip placement=\"bottom\" title={jobsTotal()}>\n        <span>{jobs.length}</span>\n      </LightTooltip>{' '}\n      total jobs\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    backgroundColor: '#fff',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: '700',\n    fontFamily: 'Open Sans',\n    boxShadow: '0px 4px 8px rgba(4, 17, 37, 0.1)',\n    borderRadius: '8px'\n  }\n}))(Tooltip);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getAlias(name) {\n  return RestClient.get(`/alias/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchAlias(name, body) {\n  return RestClient.patch(`/alias/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postAlias(body) {\n  return RestClient.post('/alias', body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\n\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Input, Button } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Center } from 'shared/components';\n\nimport './ChangePassword.local.scss';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const ChangePassword = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  /**\n   * Backend call result\n   */\n  const [result, setResult] = useState({ done: false, error: undefined });\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult({ done: false, error: undefined });\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const parseError = error => {\n    if (\n      error?.response?.data?.messages &&\n      error.response.data.messages.length > 0 &&\n      error.response.data.messages[0]?.text\n    ) {\n      return error.response.data.messages[0]?.text.split('\\n')[0];\n    }\n\n    return 'Password Change Failed!';\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Change Password\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '600px',\n            height: '450px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-password\">\n                <GroupIcon />\n              </Avatar>\n            }\n            title=\"Change Password\"\n            formikRef={formRef}\n          />\n          {result.done ? (\n            <>\n              <Center>\n                <Result type={result.error ? 'fail' : 'success'}>\n                  <Result.Text>{result.error ? result.error : 'Password Changed!'}</Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer></Paper.Footer>\n            </>\n          ) : (\n            <Formik\n              initialValues={{\n                password: '',\n                confirm: ''\n              }}\n              validate={values => {\n                const errors = {};\n\n                if (!values.password) {\n                  errors.password = 'Field is required';\n                }\n\n                if (!values.confirm) {\n                  errors.confirm = 'Please reenter your new password';\n                }\n\n                if (values.password !== values.confirm) {\n                  errors.confirm = 'Passwords do not match';\n                }\n\n                if (values.password) {\n                  if (/[$\\\\/\":;']/.test(values.password)) {\n                    errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n                  } else if (values.password.length < 8) {\n                    errors.password = 'Password must contain at least eight characters';\n                  } else if (!/[a-z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a lower case letter (ex: a, b, etc.)';\n                  } else if (!/[A-Z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a upper case letter (ex: A, B, etc.)';\n                  } else if (!/[0-9]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n                  } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n                  }\n                }\n\n                return errors;\n              }}\n              onSubmit={async (values, actions) => {\n                actions.setSubmitting(true);\n\n                try {\n                  await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`, {\n                    password: values.password\n                  });\n\n                  actions.setSubmitting(false);\n                  setResult({ done: true });\n                } catch (e) {\n                  actions.setSubmitting(false);\n                  setResult({ done: true, error: parseError(e) });\n                }\n              }}\n              innerRef={formRef}\n            >\n              {({ dirty, isSubmitting, isValid, handleSubmit }) => (\n                <>\n                  <Paper.Content scrollable>\n                    <Form className=\"password-form\">\n                      <Row>\n                        <Field name=\"password\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                required\n                                label=\"Password\"\n                                placeholder=\"New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                      <Row>\n                        <Field name=\"confirm\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                required\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                label=\"Confirm Password\"\n                                placeholder=\"Confirm New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                    </Form>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        disabled={!dirty || !isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </>\n              )}\n            </Formik>\n          )}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nChangePassword.propTypes = {\n  user: string\n};\n\nexport const ChangePasswordContainer = connect(state => {\n  const user = selectedUser(state);\n\n  return { user: user.name };\n})(ChangePassword);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import { actions } from 'session/store/actions';\nimport { actionStates } from 'shared/lib';\nimport { fromJS } from 'immutable';\n\nexport const initialState = {\n  login: {\n    status: '',\n    errors: []\n  },\n  authorization: {\n    status: actionStates.LOADING\n  },\n  currentUser: {\n    name: '',\n    details: {}\n  },\n  beVersion: ''\n};\n\nexport const reducerActions = {\n  // authorization Check\n  [actions.checkAuthorization.getLoadingAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.LOADING),\n  [actions.checkAuthorization.getSuccessAction()]: (state, payload) =>\n    state\n      .set(\n        'currentUser',\n        fromJS({\n          name: payload.name,\n          details: payload.details\n        })\n      )\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.checkAuthorization.getFailAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.FAIL),\n\n  // login\n  [actions.login.getLoadingAction()]: state =>\n    state.setIn(['login', 'status'], actionStates.LOADING),\n  [actions.login.getSuccessAction()]: state =>\n    state\n      .setIn(['login', 'status'], actionStates.SUCCESS)\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.login.getFailAction()]: (state, errors) =>\n    state.setIn(['login', 'status'], actionStates.FAIL).setIn(['login', 'errors'], fromJS(errors)),\n  [actions.getBeVersion.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beVersion', payload.data);\n    return nextState;\n  },\n  [actions.getBeLicence.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beLicence', payload.data);\n    return nextState;\n  },\n  [actions.getBeHealth.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beHealth', payload.data);\n    return nextState;\n  }\n};\n","import { checkDeamonStatus } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  await store.dispatch(checkDeamonStatus());\n\n  throw new Error('polling-daemon');\n}\n\nexport const daemonPoller = withPolling(task, 60000);\n","import { actions } from 'dashboard/store/actions';\n\nexport const initialState = {\n  filterStatus: 'ALL'\n};\n\nexport const reducerActions = {\n  [actions.setFilterStatus.getEventAction()]: (state, status) => {\n    const nextState = state.set('filterStatus', status);\n    return nextState;\n  }\n};\n","import { actions } from 'shared/store/actions';\nimport { actions as sessionActions } from 'session/store/actions';\nimport { fromJS } from 'immutable';\nimport moment from 'moment';\n\nlet sessionGlobalFilters = {\n  startDate: moment()\n    .subtract(7, 'd')\n    .startOf('day')\n    .unix(),\n  endDate: moment()\n    .add(1, 'days')\n    .startOf('day')\n    .unix()\n};\n\nsessionGlobalFilters = JSON.parse(localStorage.getItem('global-filters')) || sessionGlobalFilters;\n\nexport const initialState = {\n  globalFilters: sessionGlobalFilters,\n  jobs: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false,\n    callFailed: false,\n    reason: ''\n  },\n  connections: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  searchResults: {\n    jobs: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    },\n    processes: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    }\n  }\n};\n\nexport const reducerActions = {\n  [actions.setGlobalFilters.getSuccessAction()]: (state, payload) => {\n    const nextState = state\n      .setIn(['globalFilters', 'startDate'], payload.startDate.unix())\n      .setIn(['globalFilters', 'endDate'], payload.endDate.unix());\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.login.getSuccessAction()]: state => {\n    const nextState = state\n      .setIn(\n        ['globalFilters', 'startDate'],\n        moment()\n          .subtract(7, 'd')\n          .startOf('day')\n          .unix()\n      )\n      .setIn(\n        ['globalFilters', 'endDate'],\n        moment()\n          .add(1, 'days')\n          .startOf('day')\n          .unix()\n      );\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.logout.getSuccessAction()]: state => {\n    localStorage.removeItem('global-filters');\n    return state;\n  },\n  [actions.getJobs.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        content: payload.data.invocations,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false,\n        callFailed: false,\n        reason: ''\n      })\n    ),\n  [actions.getJobs.getFailAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        callFailed: true,\n        fetching: false,\n        page_count: 1,\n        content: [],\n        total_count: 0,\n        reason: payload.reason\n      })\n    ),\n  [actions.getJobs.getLoadingAction()]: state => state.setIn(['jobs', 'fetching'], true),\n  [actions.getConnections.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'connections',\n      fromJS({\n        content: payload.data.accounts,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getConnections.getLoadingAction()]: state =>\n    state.setIn(['connections', 'fetching'], true),\n  [actions.searchJobs.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'jobs'],\n      fromJS({\n        content: payload.data.invocations,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchJobs.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], true),\n  [actions.searchJobs.getFailAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], false),\n  [actions.searchProcesses.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'processes'],\n      fromJS({\n        content: payload.data.processes,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchProcesses.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], true),\n  [actions.searchProcesses.getFailAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], false)\n};\n","import { actions } from 'core/store/actions';\n\nexport const initialState = {\n  notifications: [],\n};\n\nexport const reducerActions = {\n  [actions.addNotifications.getEventAction()]: (state, payload) => state\n    .merge('notifications', payload),\n  [actions.removeNotification.getEventAction()]: (state, notificationIndex) => state\n    .removeIn(['notifications', notificationIndex]),\n};\n","import { notificationActions } from './notification.action';\n\nexport const actions = {\n  ...notificationActions,\n};\n","import {\n  TextParameter,\n  BooleanParameter,\n  IntegerParameter,\n  EmailParameter,\n  PhoneNumberParameter,\n  ProcessParameter,\n  VariadicParameter,\n  AccountParameter,\n  FQNameParameter,\n  PasswordParameter,\n  MultilineParameter,\n  ReplvaluesParameter,\n  UuidParameter\n} from './variants';\n\nimport { want, wantComponent } from 'shared/lib/want';\n\n/**\n * Main switcher for Parameter fields.\n */\nexport const WantParameter = wantComponent(\n  want(\n    {\n      text: TextParameter,\n      number: IntegerParameter,\n      select: TextParameter,\n      phone: PhoneNumberParameter,\n      boolean: BooleanParameter,\n      email: EmailParameter,\n      fqname: FQNameParameter,\n      account: AccountParameter,\n      process: ProcessParameter,\n      variadic_parameter: VariadicParameter,\n      password: PasswordParameter,\n      multiline: MultilineParameter,\n      replvalues: ReplvaluesParameter,\n      uuid: UuidParameter\n    },\n    TextParameter,\n    props => {\n      const { editor } = props.parameter;\n\n      return editor.type;\n    }\n  )\n);\n\nexport default WantParameter;\n","/* eslint-disable */\n\nimport _ from 'lodash';\n\nexport const groupForm = (prototype, form = null) => {\n  if (form === null) {\n    form = {\n      name: null,\n      description: null,\n      prototype: prototype.name,\n      version: prototype.version,\n      groups: [...prototype.groups],\n      values: prototype.fields.map(field => {\n        return { ...field, value: field.deflt };\n      })\n    };\n  }\n\n  if (!form.hasOwnProperty('groups')) {\n    form.groups = [...prototype.groups];\n    form.values = prototype.fields.map(field => {\n      const value = form.values.find(value => value.position === field.position);\n      return {\n        ...value,\n        ...field\n      };\n    });\n  }\n\n  if (form.hasOwnProperty('values')) {\n    const maxPosition = _.max(form.values.map(value => value.position));\n\n    // important point\n    if (form.groups.length > 0) {\n      // Mark any existing groups as non-virtual\n      form.groups = form.groups.map(group => {\n        return { ...group, virtual: false };\n      });\n      // Make sure groups are properly sorted\n      form.groups = _.sortBy(form.groups, 'lower');\n      // First we need to create any virtual groups, if needed\n      let position = 0;\n      while (position <= maxPosition) {\n        // First, find the group of which this value is a member, if any\n        const currentGroup = form.groups.find(\n          group => group.lower <= position && group.upper > position\n        );\n        if (!!currentGroup) {\n          // We already have a group for this position. Leapfrog to the next\n          position = currentGroup.upper;\n        } else {\n          // OK, we couldn't find the current group, so find the next one\n          const nextGroup = form.groups.find(group => group.lower > position);\n          if (!!nextGroup) {\n            // Add a new virtual group that covers this position up to the next group\n            form.groups = [\n              {\n                name: null,\n                virtual: true,\n                lower: position,\n                upper: nextGroup.lower,\n                iteration_limit: 1\n              },\n              ...form.groups\n            ];\n            // Leapfrog\n            position = nextGroup.upper;\n          } else {\n            // We're at the end. Add a covering virtual group\n            form.groups.push({\n              name: null,\n              virtual: true,\n              lower: position,\n              upper: maxPosition + 1,\n              iteration_limit: 1\n            });\n          }\n        }\n      }\n    } else {\n      // We have no groups at all. Create a single virtual group for all values.\n      form.groups.push({\n        name: null,\n        virtual: true,\n        lower: 0,\n        upper: maxPosition + 1,\n        iteration_limit: 1\n      });\n    }\n\n    form.groups = _.sortBy(form.groups, 'lower').map(group => {\n      group.instances = [];\n      return group;\n    });\n    form.values = _.sortBy(form.values, 'position');\n    // OK, we have the groups, now we need to add the instances and fields\n    for (let group of form.groups) {\n      const values = form.values.filter(\n        value => value.position >= group.lower && value.position < group.upper\n      );\n      if (!group.virtual || group.iteration_limit > 1) {\n        // How many instances do we need?\n        const instanceCount = Math.max(\n          1,\n          _.max(values.map(value => (value.value === null ? 1 : value.value.length)))\n        );\n        for (let g = 0; g < instanceCount; g++) {\n          let instance = {\n            instance: g,\n            fields: values.map(value => {\n              let field = {\n                name: value.name,\n                description: value.description,\n                meta: value.meta,\n                position: value.position,\n                data_type: value.data_type,\n                is_repeatable: value.is_repeatable,\n                is_required: value.is_required,\n                values: []\n              };\n              if (Array.isArray(value.value) && value.value.length > g) {\n                if (value.is_repeatable) {\n                  for (let f = 0; f < value.value[g].length; f++) {\n                    field.values.push({\n                      instance: f,\n                      value: value.value[g][f]\n                    });\n                  }\n                } else {\n                  field.values.push({\n                    instance: 0,\n                    value: value.value[g]\n                  });\n                }\n              }\n              return field;\n            })\n          };\n          group.instances.push(instance);\n        }\n      } else {\n        // Iteration limit is 1\n        let instance = {\n          instance: 0,\n          fields: values.map(value => {\n            let field = {\n              name: value.name,\n              description: value.description,\n              meta: value.meta,\n              position: value.position,\n              data_type: value.data_type,\n              is_repeatable: value.is_repeatable,\n              is_required: value.is_required,\n              values: []\n            };\n            if (field.is_repeatable) {\n              if (Array.isArray(value.value)) {\n                for (let f = 0; f < value.value.length; f++) {\n                  field.values.push({\n                    instance: f,\n                    value: value.value[f]\n                  });\n                }\n              }\n            } else {\n              field.values.push({\n                instance: 0,\n                value: value.value\n              });\n            }\n            return field;\n          })\n        };\n        group.instances.push(instance);\n      }\n    }\n    delete form.values;\n  }\n  // For repeating groups and fields, there must always be one \"empty\" group and/or field at the end.\n  for (let group of form.groups) {\n    // if (group.iteration_limit > 1) {\n    //     const instance = _.last(group.instances)\n    //     const values = _.flatten(instance.fields.map(field => field.values.map(value => value.value)))\n    //     // If at least one value is non-null, then we need to add a new empty group at the end.\n    //     if (!_.every(values, value => value === null)) {\n    //         // OK, we need to add another empty instance\n    //         group.instances.push({\n    //             instance: instance.instance + 1,\n    //             fields: instance.fields.map(field => {\n    //                 return {\n    //                     ...field,\n    //                     values: []\n    //                 }\n    //             })\n    //         })\n    //     }\n    // }\n\n    // Now we check the individual fields\n    // Each field must have at least one value.\n    // For repeating fields, there must always be a final empty instance.\n    for (let instance of group.instances) {\n      for (let field of instance.fields) {\n        if (field.values.length === 0) {\n          field.values.push({\n            instance: 0,\n            value: null\n          });\n          // } else if (field.is_repeatable) {\n          //     const value = _.last(field.values)\n          //     if (value.value !== null) {\n          //         field.values.push({\n          //             instance: value.instance + 1,\n          //             value: null\n          //         })\n          //     }\n        }\n      }\n    }\n  }\n  return form;\n};\n\nexport const ungroupForm = form => {\n  let packed = {\n    description: form.description,\n    values: []\n  };\n  let names = {};\n  for (const group of form.groups) {\n    for (const instance of group.instances) {\n      for (const field of instance.fields) {\n        names[field.name] = {\n          position: field.position,\n          grouped: !group.virtual || group.iteration_limit > 1,\n          is_repeatable: field.is_repeatable\n        };\n      }\n    }\n  }\n  for (const name in names) {\n    const info = names[name];\n    const group = form.groups.find(\n      group => group.lower <= info.position && group.upper > info.position\n    );\n    if (info.grouped && info.is_repeatable) {\n      // Array of arrays\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        if (_.last(subvalues) === null) {\n          subvalues = _.dropRight(subvalues, 1);\n        }\n        values.push(subvalues);\n        while (Array.isArray(_.last(values)) && _.last(values).length === 0) {\n          values = _.dropRight(values, 1);\n        }\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.grouped) {\n      // Just a plain array\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        values.push(subvalues[0]);\n      }\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.is_repeatable) {\n      // Just a plain array\n      const instance = group.instances[0];\n      let values = instance.fields\n        .find(field => field.name === name)\n        .values.map(value => value.value);\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else {\n      // Simple value\n      const instance = group.instances[0];\n      const value = instance.fields.find(field => field.name === name).values[0].value;\n      packed.values.push({ name, value });\n    }\n  }\n  packed.values = packed.values.filter(value => value.value !== null);\n  return packed;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getPrivileges(name, isAlias) {\n  return RestClient.get(`/entity/${name}/privileges`, {\n    ...(isAlias && { cls: 'alias' }),\n    page_size: 2147483645\n  });\n}\n\n/**\n    privilege: type,\n    enitity_name: entityName,\n    alias: isAlias\n    role: user_or_group.role,\n    role_type: user_or_group.is_group ? 'group' : 'user',\n    explicit_grant: user_or_group.granted.includes(type),\n    explicit_denied: user_or_group.denied.includes(type),\n    action: granted ? 'revoke' : 'grant'\n  }}\n */\nexport async function setPrivileges(data) {\n  const { granted, alias } = data;\n\n  const actions = granted ? ['revoke', 'deny'] : ['grant', 'allow'];\n\n  try {\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[0]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[1]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    return getPrivileges(data.enitity_name, data.alias);\n  } catch (e) {\n    throw new Error('failed');\n  }\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  mdiFileTableBox,\n  mdiDatabase,\n  mdiFileTree,\n  mdiTable,\n  mdiAlertOutline,\n  mdiTableColumnWidth,\n  mdiAlphaPBox,\n  mdiInboxFull,\n  mdiInbox\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nimport './root.local.scss';\n\nconst VerticalUsageBar = ({ usage, className }) => {\n  let fill;\n  if (usage > 75) {\n    fill = '#ED3A4A';\n  } else if (usage > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  return (\n    <div className={className}>\n      <svg viewBox=\"-2 -2 62 102\">\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" height=\"100\" width=\"60\" fill=\"rgba(12, 50, 110, 0.38)\" />\n        <rect x=\"0\" y={100 - usage} rx=\"8\" ry=\"8\" height={usage} width=\"60\" fill={fill} />\n      </svg>\n    </div>\n  );\n};\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nconst SidebarStorageItem = ({ ns, usage, setItem, isSelected }) => (\n  <div\n    className={classnames('sidebar-item', { selected: isSelected })}\n    role=\"button\"\n    onClick={() => setItem(ns)}\n  >\n    <VerticalUsageBar usage={usage} className=\"usage-icon\" />\n    {ns}\n  </div>\n);\n\nexport const StorageSidebar = ({ list, setItem, selectedItem, isLoading }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiFileTableBox} />\n        </SvgIcon>\n        Tablespaces\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          list.map((element, index) => (\n            <SidebarStorageItem\n              isSelected={selectedItem === element.ns}\n              key={index}\n              {...element}\n              setItem={setItem}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst iconMapper = {\n  triggers: { icon: mdiAlertOutline, label: 'Triggers' },\n  tables: { icon: mdiTable, label: 'Tables' },\n  indexes: { icon: mdiTableColumnWidth, label: 'Indexes' },\n  procedures: { icon: mdiAlphaPBox, label: 'Procedures' },\n  packages: { icon: mdiInbox, label: 'Packages' },\n  packageBodies: { icon: mdiInboxFull, label: 'Package Bodies' }\n};\n\nconst objectsSidebarMapper = (setItem, selectedItem, invalidObjects) => (\n  { owner, objects },\n  index\n) => {\n  const isSelected = owner === selectedItem.owner;\n  const invalidChildren = invalidObjects.filter(({ owner: name }) => name === owner);\n  return (\n    <React.Fragment key={index}>\n      <div\n        className={classnames('sidebar-item', {\n          selected: isSelected,\n          'rotate-cw': !isSelected,\n          'rotate-ccw': isSelected\n        })}\n        role=\"button\"\n        onClick={() => setItem({ owner: isSelected ? null : owner, object: null })}\n      >\n        <SvgIcon>\n          <path d={mdiFileTree} />\n        </SvgIcon>\n        {owner}\n      </div>\n      {isSelected &&\n        objects.map((object, i) => {\n          const isObjectSelected = object === selectedItem.object;\n          const isInvalid = invalidChildren.findIndex(({ object: name }) => name === object) !== -1;\n          return (\n            <div\n              key={`${index}_${i}`}\n              className={classnames('child', 'sidebar-item', {\n                selected: isObjectSelected,\n                invalid: isInvalid\n              })}\n              role=\"button\"\n              onClick={() => setItem({ owner, object })}\n            >\n              <SvgIcon>\n                <path d={iconMapper[object].icon} />\n              </SvgIcon>\n              {iconMapper[object].label}\n            </div>\n          );\n        })}\n    </React.Fragment>\n  );\n};\n\nexport const ObjectsSidebar = ({\n  setItem,\n  selectedItem,\n  list,\n  isLoading,\n  invalidObjects\n}) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiDatabase} />\n        </SvgIcon>\n        Schema\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          <div className=\"sidebar-container\">\n            {list.map(objectsSidebarMapper(setItem, selectedItem, invalidObjects))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/jsx-indent-props */\nimport React from 'react';\nimport {\n  mdiHelpRhombusOutline,\n  mdiTable,\n  mdiFileTableBox,\n  mdiArrangeBringToFront,\n  mdiFlashCircle\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Chart } from 'react-google-charts';\n\nimport './root.local.scss';\n\nconst KPIDisplay = ({ value, suffix, colorFormatting = false }) => {\n  let fill;\n  if (value > 75) {\n    fill = '#ED3A4A';\n  } else if (value > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  const digits = value > 10 ? 0 : 2;\n  const valueString = value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: digits\n  });\n  return (\n    <span style={colorFormatting ? { color: fill } : {}}>\n      {valueString}\n      {suffix}\n    </span>\n  );\n};\n\nconst NoDataComponent = ({ name }) => (\n  <div className=\"content dashed-and-centered\">\n    <SvgIcon>\n      <path d={mdiHelpRhombusOutline} />\n    </SvgIcon>\n    <p>Please select a {name} in order to view its children</p>\n  </div>\n);\n\nconst StorageDetailsList = ({ data, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <Loader>Loading data...</Loader>\n      </Center>\n    );\n  }\n\n  const { tablespace, files } = data;\n\n  if (!tablespace || !tablespace.ns) {\n    return <NoDataComponent name=\"tablespace\" />;\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"detail-row\">\n        <div className=\"ts-name\">\n          <SvgIcon>\n            <path d={mdiFileTableBox} />\n          </SvgIcon>\n          {tablespace.ns}\n        </div>\n        <div className=\"details\">\n          <div className=\"block\">\n            <div className=\"top\">Total:</div>\n            <div>\n              <KPIDisplay value={tablespace.totalGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used size:</div>\n            <div>\n              <KPIDisplay value={tablespace.usedGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used %:</div>\n            <div>\n              <KPIDisplay value={tablespace.usage} suffix=\"%\" colorFormatting />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free size:</div>\n            <div>\n              <KPIDisplay value={tablespace.freeGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free %:</div>\n            <div>\n              <KPIDisplay value={tablespace.freePerc} suffix=\"%\" />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {files.map(({ PCT_USED, FILE_NAME, SIZE_MB, MAXSIZE_MB }, index) => {\n        const filePath = FILE_NAME.split('/');\n        const [fileName, extension] = filePath[filePath.length - 1].split('.');\n        return (\n          <div key={index} className=\"detail-row\">\n            <div className=\"file-name\">\n              <SvgIcon>\n                <path d={mdiTable} />\n              </SvgIcon>\n              {fileName}\n              <span className=\"extension\">.{extension}</span>\n            </div>\n            <div className=\"details\">\n              <div className=\"block\">\n                <div className=\"top\">Used %:</div>\n                <div>\n                  <KPIDisplay value={PCT_USED} suffix=\"%\" colorFormatting />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Size:</div>\n                <div>\n                  <KPIDisplay value={SIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Max size:</div>\n                <div>\n                  <KPIDisplay value={MAXSIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n            </div>\n            <div style={{ position: 'absolute', top: '70px' }}>\n            <Center>\n            <Chart\n  width={'500px'}\n  height={'300px'}\n  chartType=\"PieChart\"\n  loader={<div>Loading Chart</div>}\n  data={[\n    ['Task', 'Hours per Day'],\n    [`Free  ${tablespace.freeGB.toFixed(2)} GB`, tablespace.freePerc],\n    [`Used  ${tablespace.usedGB.toFixed(2)} GB`, tablespace.usage]\n  ]}\n  options={{\n      'backgroundColor': 'transparent',\n      is3D: true,\n      colors: ['rgb(52, 204, 136)', 'rgb(237, 58, 74)']\n\n      }}\n  rootProps={{ 'data-testid': '1' }}\n/>\n            </Center>\n            </div>\n          </div>\n        );\n      })}\n\n    </div>\n  );\n};\n\nexport const StorageViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiTable} />\n        </SvgIcon>\n        Data Files\n      </div>\n      <StorageDetailsList data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport const ObjectsViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiArrangeBringToFront} />\n        </SvgIcon>\n        Objects\n      </div>\n      {!data || data.length === 0 ? (\n        <NoDataComponent name=\"object\" />\n      ) : (\n        <div className=\"content\">\n          <Overflow>\n            {!isLoading ? (\n              data.map(({ OBJECT_NAME, CREATED, OBJECT_ID, LAST_DDL_TIME }) => {\n                return (\n                  <div key={OBJECT_ID} className=\"detail-row\">\n                    <div className=\"file-name\">\n                      <SvgIcon>\n                        <path d={mdiFlashCircle} />\n                      </SvgIcon>\n                      {OBJECT_NAME}\n                    </div>\n                    <div className=\"details\">\n                      <div className=\"object-block\">\n                        <div className=\"top\">Last DDL Time</div>\n                        <div>{LAST_DDL_TIME}</div>\n                      </div>\n                      <div className=\"object-block\">\n                        <div className=\"top\">Created</div>\n                        <div>{CREATED}</div>\n                      </div>\n                      {/* Designs have some buttons here */}\n                    </div>\n                  </div>\n                );\n              })\n            ) : (\n              <Center>\n                <Loader>Loading data...</Loader>\n              </Center>\n            )}\n          </Overflow>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LayersOutlinedIcon from '@material-ui/icons/LayersOutlined';\nimport { mdiClipboardPlayMultipleOutline, mdiShieldCheckOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nexport const navigationItems = [\n  {\n    title: <FormattedMessage id=\"navigation.dashboard\" />,\n    to: '/dashboard',\n    id: 'dashboard',\n    icon: <DashboardOutlinedIcon />,\n    qaClass: 'qa-nav-dashboard'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.jobs\" />,\n    to: '/jobs',\n    id: 'jobs',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiClipboardPlayMultipleOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-jobs'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.system\" />,\n    to: '/system',\n    id: 'system',\n    icon: <LayersOutlinedIcon />,\n    qaClass: 'qa-nav-system',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.entitites\" />,\n        to: '/system/entities',\n        qaClass: 'qa-nav-entities'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.explorer\" />,\n        to: '/system/explorer',\n        qaClass: 'qa-nav-explorer'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.user.and.groups\" />,\n        to: '/system/mas-accounts/users',\n        qaClass: 'qa-nav-mas-accounts'\n      }\n    ]\n  },\n  {\n    title: <FormattedMessage id=\"navigation.compliance\" />,\n    to: '/compliance',\n    id: 'compliance',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiShieldCheckOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-compliance',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.license.collection\" />,\n        to: '/compliance/license-collection',\n        qaClass: 'qa-nav-license-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      }\n    ]\n  }\n];\n","import { getQuery, getInvocationStatus } from './selectors';\n\nimport { InvocationStatus } from './constants';\n\nimport { fetchInvocation } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  const { uuid, process } = getQuery(store.getState());\n\n  if (uuid) {\n    await store.dispatch(fetchInvocation(uuid, process));\n  }\n\n  const STATUS = getInvocationStatus(store.getState());\n\n  switch (STATUS) {\n    case InvocationStatus.EXECUTING:\n    case InvocationStatus.SCHEDULED:\n    case InvocationStatus.DELAYED:\n    case 'NOT_FETCHED':\n      console.log('[invocation-poller] - polling', STATUS); // eslint-disable-line\n      throw new Error('need to poll invocation...');\n    default:\n      break;\n  }\n\n  console.log('[invocation-poller] - done'); // eslint-disable-line\n\n  return Promise.resolve();\n}\n\nexport const invocationPoller = withPolling(task, 5000);\n","import React from 'react';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors }) => {\n  let content;\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          {errors.map((error, index) => {\n            return <p key={index}>• {error}</p>;\n          })}\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              {output.map((row, index) => {\n                return (\n                  <p className=\"row\" key={`${row.data.text}-${index}`}>\n                    {row.data.text}\n                  </p>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        {output.map((row, index) => {\n          return (\n            <p className=\"row\" key={index}>\n              {row.data.text}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return content;\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { fromJS } from 'immutable';\n\nexport const bindReducer = (initialState, actions) => (state = fromJS(initialState), action) => {\n  if (typeof actions[action.type] === 'function') {\n    return actions[action.type](state, action.payload);\n  }\n\n  return state;\n};\n","export const actionStates = {\n  LOADING: 'LOADING',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS',\n};\n","import { actionStates } from 'shared/lib';\n\nexport class ActionCreatorHandler {\n  constructor(action) {\n    this.action = action;\n  }\n\n  getEventAction() {\n    return this.action;\n  }\n\n  getLoadingAction() {\n    return `${this.action}__${actionStates.LOADING}`;\n  }\n\n  getFailAction() {\n    return `${this.action}__${actionStates.FAIL}`;\n  }\n\n  getSuccessAction() {\n    return `${this.action}__${actionStates.SUCCESS}`;\n  }\n\n  dispatchLoading(payload) {\n    return {\n      type: this.getLoadingAction(),\n      payload,\n    };\n  }\n\n  dispatchFail(payload) {\n    return {\n      type: this.getFailAction(),\n      payload,\n    };\n  }\n\n  dispatchSuccess(payload) {\n    return {\n      type: this.getSuccessAction(),\n      payload,\n    };\n  }\n\n  dispatchEvent(payload) {\n    return {\n      type: this.action,\n      payload,\n    };\n  }\n}\n","export const slugify = (text) => text.toString().toLowerCase()\n  .trim()\n  .replace(/[^a-z0-9 -]/g, '')\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-');\n","export const createUrl = (url, params = {}) => {\n  if (typeof params !== 'object' || !params) {\n    return url;\n  }\n  let path = url;\n  const query = { ...params };\n  Object.keys(query).forEach((key) => {\n    if (typeof query[key] !== 'undefined' && path.includes(`:${key}`)) {\n      path = path.replace(`:${key}`, query[key]);\n      delete query[key];\n    }\n  });\n\n  if (!Object.keys(query).length || !Object.keys(query).find(((key) => typeof query[key] !== 'undefined'))) {\n    return path;\n  }\n\n  const paramsUrl = Object.keys(query).filter((key) => query[key])\n    .map((key) => `${key}=${encodeURIComponent(query[key])}`)\n    .join('&');\n  return `${path}${'?'.concat(...paramsUrl)}`;\n};\n","export const numberPretty = (number) => {\n  if (!number) {\n    return number;\n  }\n  const parts = number.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n","const formatNumber = (number, pow, decimals = 1) => (number / (10 ** pow)).toFixed(decimals);\n\nexport const smartNumber = (number, decimals = false) => {\n  if (typeof number !== 'number') {\n    return number;\n  }\n  if (number < 10 ** 3) {\n    if (typeof decimals === 'number') {\n      return +number.toFixed(+decimals);\n    }\n    return number;\n  }\n\n  if (number < 10 ** 6) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 3, decimals)} K`;\n    }\n    return `${formatNumber(number, 3)} K`;\n  }\n\n  if (number < 10 ** 9) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 6, decimals)} M`;\n    }\n    return `${formatNumber(number, 6)} M`;\n  }\n\n  if (typeof decimals === 'number') {\n    return `${formatNumber(number, 9, decimals)} B`;\n  }\n  return `${formatNumber(number, 9)} B`;\n};\n","export const capitalizeFirstLetter = (s) => s.toString().charAt(0).toUpperCase() + s.slice(1);\n","export const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n","/* eslint-disable */\nexport const phoneNumberPattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n","export const urlPattern = /^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)$/;\n","export const randomStringGenerator = (length = 5) => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n  for (let i = 0; i < length; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n","export const generateUniqueId = () => btoa(Math.floor(new Date().valueOf() * Math.random())).replace(/=/g, '').slice(0, 16);\n","export const emptyFunc = () => null;\n","export const delay = (timer) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve();\n  }, timer);\n});\n","import moment from 'moment';\n\nimport { isBeforeDay } from './isBeforeDay';\n\nexport function isInclusivelyAfterDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n  return !isBeforeDay(a, b);\n}\n","const STATES = {\n  loading: 'LOADING',\n  fail: 'FAIL',\n  success: 'SUCCESS'\n};\n\nexport const SEPARATOR = '__';\n\nexport function type(name, stateKey) {\n  const state = STATES[stateKey];\n\n  if (state) {\n    return name + SEPARATOR + state;\n  }\n\n  return name;\n}\n\n/**\n *\n * These could be written as classes with static methods.\n *\n * */\n\nexport const types = {\n  action: type,\n  loading: function loadingType(name) {\n    return type(name, 'loading');\n  },\n  success: function successType(name) {\n    return type(name, 'success');\n  },\n  fail: function failType(name) {\n    return type(name, 'fail');\n  }\n};\n\nexport const creators = {\n  action: function action(name, payload) {\n    return { type: name, payload };\n  },\n  loading: function loadingAction(name, payload) {\n    return { type: type(name, 'loading'), payload };\n  },\n  success: function successAction(name, payload) {\n    return { type: type(name, 'success'), payload };\n  },\n  fail: function failAction(name, payload) {\n    return { type: type(name, 'fail'), payload };\n  }\n};\n","import { produce } from 'immer';\n\nfunction unchanged(state) {\n  return state;\n}\n\nexport function createReducer(reducers, initialState = {}) {\n  const reducerInitialState = reducers.initialState || initialState;\n\n  return function r(state = reducerInitialState, action) {\n    const { type } = action;\n\n    if (!type) {\n      console.error('[createReducer] action does not have a type', action); // eslint-disable-line\n      return unchanged(state);\n    }\n\n    const reducer = reducers[action.type];\n\n    if (reducer) {\n      return produce(state, nextState => {\n        reducer(nextState, action, state);\n      });\n    }\n\n    return unchanged(state);\n  };\n}\n","import moment from 'moment';\nimport _ from 'lodash';\n\nexport function getWorkloadData(jobs, dateRange) {\n  const isSingleDay =\n    moment(dateRange.currentDate).format('MMM D YY') ===\n    moment(dateRange.endDate).format('MMM D YY');\n\n  if (jobs.length === 0) return [];\n\n  const jobsWithFormattedInvokedDate = _.orderBy(jobs, ['date_invoke'], ['asc']).map(job => ({\n    ...job,\n    date_invoke: isSingleDay\n      ? `${moment(job.date_invoke).format('H')}:00`\n      : moment(job.date_invoke).format('MMM D YY')\n  }));\n  const groupJobsByDate = _.groupBy(jobsWithFormattedInvokedDate, 'date_invoke');\n  const data = [];\n\n  // if no process was executed during selected interval, simply return an empty array\n  if (Object.keys(groupJobsByDate).length === 0) {\n    return [];\n  }\n\n  Object.keys(groupJobsByDate).forEach(date => {\n    const item = { name: date, SUCCEEDED: 0, FAILED: 0, ABORTED: 0, total: 0 };\n    groupJobsByDate[date].forEach(el => {\n      item[el.status]++;\n      if (el.status === 'SUCCEEDED' || el.status === 'FAILED' || el.status === 'ABORTED') {\n        item.total++;\n      }\n    });\n\n    data.push(item);\n  });\n\n  // display all days between the first one that run a process and the last one\n  // or all hours from 0->23\n  const intervalArray = [];\n  const daylist = isSingleDay ? getHoursArray(dateRange) : getDaysArray(dateRange);\n  const totalDays = daylist.reduce((o, key) => ({ ...o, [key]: '' }), {});\n\n  // update the total days from the interval array with the days that have some processes executed\n  data.forEach(day => {\n    totalDays[day.name] = day;\n  });\n\n  Object.keys(totalDays).forEach(date => {\n    // for the days in the interval that have no executed process, add an empty entry\n    if (typeof totalDays[date] === 'string') {\n      totalDays[date] = {\n        name: date,\n        SUCCEEDED: 0,\n        FAILED: 0,\n        ABORTED: 0,\n        total: 0\n      };\n    }\n    intervalArray.push(totalDays[date]);\n  });\n\n  return intervalArray;\n}\n/**\n * Creates an array for the selected interval of days\n */\nfunction getDaysArray(dateRange) {\n  let { currentDate } = dateRange;\n  const { endDate } = dateRange;\n  const dateArray = [];\n\n  while (currentDate <= endDate) {\n    dateArray.push(moment(currentDate).format('MMM D YY'));\n    currentDate = moment(currentDate).add(1, 'days');\n  }\n\n  return dateArray;\n}\n\n/**\n *\n * Creates an array for all the hours in a day 0 -> 23\n */\nfunction getHoursArray() {\n  const dateArray = [];\n\n  for (let i = 0; i < 24; i++) {\n    dateArray.push(`${i}:00`);\n  }\n  return dateArray;\n}\n","import { CheckAuthorizationEffect } from './check-authorization/check-authorization.effect';\nimport { LoginEffect } from './login/login.effect';\nimport { LogoutEffect } from './logout/logout.effect';\nimport { BeVersionEffect,BeLicenceEffect,BeHealthEffect } from './be-version/be-version.effect';\n\nexport const sessionEffects = [\n  CheckAuthorizationEffect,\n  LoginEffect,\n  LogoutEffect,\n  BeVersionEffect,\n  BeLicenceEffect,\n  BeHealthEffect,\n];\n","import { emptyFunc } from 'shared/lib';\n\nexport const tryAsync = async (action, onError = emptyFunc) => {\n  try {\n    await action();\n  } catch (e) {\n    onError(e);\n  }\n};\n","import Cookie from 'js-cookie';\nimport axios from 'axios';\n\nimport { CONSTANTS } from 'config';\nimport { createUrl } from 'shared/lib';\n\n\nclass RestClientClass {\n  constructor() {\n    this.authentications = {\n      basicAuth: {\n        name: 'Authorization',\n        accessToken: '',\n      },\n    };\n\n    this.baseUrl = CONSTANTS.BASE.HOST;\n\n    if (CONSTANTS.BASE.VERSION) {\n      this.baseUrl = `${CONSTANTS.BASE.HOST}/${CONSTANTS.BASE.VERSION}`;\n    }\n\n    this.client = axios.create({\n      timeout: CONSTANTS.BASE.TIMEOUT,\n      baseURL: this.baseUrl,\n      // withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.get = this.get.bind(this);\n    this.delete = this.delete.bind(this);\n    this.head = this.head.bind(this);\n    this.post = this.post.bind(this);\n    this.put = this.put.bind(this);\n    this.patch = this.patch.bind(this);\n  }\n\n  setBasicAuth() {\n    this.authentications.basicAuth.accessToken = `Basic ${Cookie.get('Authorization')}`;\n  }\n\n  removeBasicAuth() {\n    this.authentications.basicAuth.accessToken = Cookie.remove('Authorization');\n  }\n\n  getRequestConfig() {\n    return {\n      headers: {\n        [this.authentications.basicAuth.name]: this.authentications.basicAuth.accessToken,\n      },\n    };\n  }\n\n  get(path, query) {\n    const url = createUrl(path, query);\n    return this.client.get(url, this.getRequestConfig());\n  }\n\n  delete(path, query) {\n    const url = createUrl(path, query);\n    return this.client.delete(url, this.getRequestConfig());\n  }\n\n  head(path, query) {\n    const url = createUrl(path, query);\n    return this.client.head(url, this.getRequestConfig());\n  }\n\n  post(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.post(url, body, this.getRequestConfig());\n  }\n\n  put(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.put(url, body, this.getRequestConfig());\n  }\n\n  patch(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.patch(url, body, this.getRequestConfig());\n  }\n}\n\nexport const RestClient = new RestClientClass();\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\n\nimport { actionStates } from 'shared/lib';\nimport { loginSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nimport { Form } from './components';\n\nexport class LoginPage extends React.PureComponent {\n  componentDidMount() {\n    Cookie.remove('Authorization');\n  }\n\n  componentDidUpdate() {\n    if (this.props.status === actionStates.SUCCESS) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.login.title\"\n        isLoading={this.props.status === actionStates.LOADING}\n      >\n        <Form\n          isLoading={this.props.status === actionStates.LOADING}\n          errors={this.props.errors}\n          submit={this.props.login}\n          resetErrors={this.props.resetErrors}\n        />\n      </Container>\n    );\n  }\n\n  static path = '/login';\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  errors: PropTypes.object.isRequired,\n  status: PropTypes.oneOf([actionStates.LOADING, actionStates.SUCCESS, actionStates.FAIL, '']).isRequired,\n  login: PropTypes.func.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  errors: loginSelector(state).get('errors'),\n  status: loginSelector(state).get('status'),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (data) => dispatch(actions.login.dispatchLoading(data)),\n  resetErrors: () => dispatch(actions.login.dispatchFail([])),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport LoginGraphic from '../../../../assets/images/login_graphic.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_blue.svg';\nimport MasLogo from '../../../../assets/images/mas_logo_blue.svg';\n\nimport './container.local.scss';\n\nexport class ContainerComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={`${className} flex`}>\n        <div className={`${className}__wrapper`}>\n          <div className=\"header\">\n            <div className=\"mas-logo-container\">\n              <img className=\"img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n            </div>\n            <Typography className={`${className}__title`} variant=\"h3\" component=\"h2\">\n              <FormattedMessage id={this.props.title} />\n            </Typography>\n            {!!this.props.description && (\n              <div className={`${className}__description`}>\n                {this.props.description}\n              </div>\n            )}\n          </div>\n          {this.props.children}\n        </div>\n        <div className={`${className}__graphics`}>\n          <div className=\"logo-container\">\n            <img className=\"img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          </div>\n          <div className=\"graphic-container\">\n            <img className=\"img-responsive\" src={LoginGraphic} alt=\"Login graphic\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  description: PropTypes.string,\n  className: PropTypes.string,\n};\n\nContainerComponent.defaultProps = {\n  className: 'container',\n  description: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { RestErrors } from 'shared/components';\n\nimport './form.local.scss';\n\nexport class FormComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  render() {\n    const { className } = this.props;\n    const restErrors = this.getRestErrors();\n\n    return (\n      <div className={className}>\n        <form onSubmit={this.submitHandler} noValidate autoComplete=\"off\">\n          <div className=\"flex direction-column\">\n            <TextField\n              autoFocus\n              className={`${className}__field`}\n              helperText={this.getError('username')}\n              onChange={this.valueChangeHandler('username')}\n              variant=\"outlined\"\n              label={<FormattedMessage id=\"general.form.username\" />}\n              inputProps={{\n                className: 'qa-login-username',\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n              InputLabelProps={{\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n            />\n\n            <FormControl className={`${className}__field`} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={this.state.showPassword ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.valueChangeHandler('password')}\n                inputProps={{\n                  className: 'qa-login-password',\n                  style: { fontSize: '14px', fontFamily: 'Lato' }\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <div className=\"password-icon\">\n                      <IconButton\n                        className=\"qa-login-toggle-password-visibility\"\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.setShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                        edge=\"end\"\n                        color=\"inherit\"\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </div>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          {restErrors.size > 0 && (\n            <div className={`${className}__errors`}>\n              <RestErrors errors={restErrors} />\n            </div>\n          )}\n          <div className={`${className}__actions flex`}>\n            <Button\n              className=\"qa-login-btn\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                this.props.isLoading || this.state.username === '' || this.state.password === ''\n              }\n            >\n              <FormattedMessage id=\"session.login.button\" />\n            </Button>\n            {/* <div className=\"forgot-password qa-forgot-password\">\n              <FormattedMessage id=\"session.login.forgot-password\" />\n            </div> */}\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  setShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  getError(field) {\n    const error = this.props.errors.find(item => item.get('path') === `.${field}`);\n    if (!error) {\n      return '';\n    }\n\n    return error.get('message') || 'This field is invalid';\n  }\n\n  getRestErrors() {\n    return this.props.errors.filter(\n      item => item.get('path') !== '.username' && item.get('path') !== '.password'\n    );\n  }\n\n  resetErrors() {\n    if (this.props.errors.size) {\n      this.props.resetErrors();\n    }\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    this.props.submit({\n      username: this.state.username,\n      password: this.state.password\n    });\n  }\n\n  valueChangeHandler(name) {\n    return event => {\n      this.resetErrors();\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n}\n\nFormComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nFormComponent.defaultProps = {\n  className: 'form'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { slugify } from 'shared/lib';\n\nimport './rest-errors.local.scss';\n\nexport class RestErrorsComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        {this.props.errors.map((error) => (\n          <div key={slugify(error.get('message'))}>\n            {error.get('message')}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRestErrorsComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nRestErrorsComponent.defaultProps = {\n  className: 'rest-errors',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport './job-item.local.scss';\n\nexport class JobItemComponent extends React.PureComponent {\n  render() {\n    const { extended } = this.props;\n    if (extended) {\n      return (\n        <div className={`${this.props.className} ${this.jobStatus()}`}>\n          <div className=\"status-icon\">{this.props.statusChild}</div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {this.props.job.get('process')}</p>\n                    {this.props.job.get('schedule') && (\n                      <p>Schedule: {this.props.job.get('schedule')}</p>\n                    )}\n                  </>\n                }\n              >\n                <div className=\"name\">{this.formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {this.props.job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"date\">\n                  {moment(this.props.job.get('date_invoke'))\n                    .local()\n                    .format('MMM DD YYYY')}\n                </div>\n              </LimitlessTooltip>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${this.props.className} ${this.jobStatus()}`}>\n        <Link to={`/jobs/job?invocation=${this.props.job.get('uuid')}`}>\n          <div className=\"first-row\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {this.props.job.get('process')}</p>\n                  {this.props.job.get('schedule') && (\n                    <p>Schedule: {this.props.job.get('schedule')}</p>\n                  )}\n                </>\n              }\n            >\n              <div className=\"name\">{this.formatName()}</div>\n            </LimitlessTooltip>\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"time\">\n                {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n          <div className=\"second-row\">\n            {this.props.job.get('user_owner') && (\n              <div className=\"run-by\">\n                <AccountCircleOutlinedIcon />\n                {this.props.job.get('user_owner')}\n              </div>\n            )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('name') && (\n                <div className=\"dbms\">\n                  <SvgIcon>\n                    <Icon path={mdiHexagonMultipleOutline} />\n                  </SvgIcon>\n                  {this.props.job\n                    .get('connections')\n                    .get('dbms')\n                    .get('name')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('shell') &&\n              this.props.job\n                .get('connections')\n                .get('shell')\n                .get('host_address') && (\n                <div className=\"server\">\n                  <StorageIcon />\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('shell') &&\n                    this.props.job\n                      .get('connections')\n                      .get('shell')\n                      .get('host_address')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special')\n                .get('database') && (\n                <div className=\"database\">\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('dbms') &&\n                    this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('protocol_special')\n                      .get('database')}\n                </div>\n              )}\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"date\">\n                {moment(this.props.job.get('date_invoke')).format('MMM DD YYYY')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n\n  jobStatus = () => {\n    switch (this.props.job.get('status')) {\n      case 'EXECUTING':\n        return 'executing';\n      case 'SUCCEEDED':\n        return 'succeeded';\n      case 'SCHEDULED':\n        return 'scheduled';\n      case 'DELAYED':\n        return 'delayed';\n      case 'ABORTED':\n        return 'aborted';\n      case 'FAILED':\n        return 'failed';\n      case 'KILLED':\n        return 'killed';\n      default:\n        return '';\n    }\n  };\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItemComponent.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired,\n  extended: PropTypes.bool,\n  statusChild: PropTypes.element\n};\n\nJobItemComponent.defaultProps = {\n  className: 'job-item',\n  extended: false,\n  statusChild: null\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Center } from 'shared/components';\n\nimport { CustomTooltip, CustomAxisTick } from './components';\n\nimport './workload-graph.local.scss';\n\nexport class WorkloadGraphComponent extends React.PureComponent {\n  render() {\n    if (this.props.data.length === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ResponsiveContainer>\n          <AreaChart\n            data={this.props.data}\n            margin={{ top: 16, right: 5, left: 5, bottom: 16 }}\n            onClick={this.setSingleDay}\n          >\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0.16} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"chartStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0} />\n                <stop offset=\"5%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"95%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickSize={false}\n              axisLine={false}\n              interval=\"preserveStartEnd\"\n              tick={<CustomAxisTick />}\n            />\n            <Tooltip\n              content={<CustomTooltip isSingleDay={this.props.isSingleDay} />}\n              offset={0}\n              cursor={false}\n              viewBox={{ width: 750, height: 144 }}\n              position={{ x: 'auto', y: 0 }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"total\"\n              stroke=\"url(#chartStroke)\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#gradient)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n\n  setSingleDay = e => {\n    if (!this.props.isSingleDay && e && this.props.setSingleDay) {\n      this.props.setSingleDay({\n        startDate: moment(e.activeLabel),\n        endDate: moment(e.activeLabel)\n      });\n    }\n  };\n}\n\nexport default WorkloadGraphComponent;\n\nWorkloadGraphComponent.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nWorkloadGraphComponent.defaultProps = {\n  className: 'workload-graph'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport './custom-tooltip.local.scss';\n\nexport class CustomTooltipComponent extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.label !== this.props.label) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    if (!this.props.active) return null;\n\n    const label = this.props.isSingleDay\n      ? this.props.payload[0].payload.name\n      : moment(this.props.payload[0].payload.name).format('MMM DD YYYY');\n\n    return (\n      <div className={this.props.className} position={{ x: '100%', y: '-100%' }}>\n        {this.props.payload && (\n          <>\n            <div className=\"date\">{label}</div>\n            <div className=\"info-container\">\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.succeeded\" />\n                </div>\n                <div className=\"value success\">{this.props.payload[0].payload.SUCCEEDED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.aborted\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.FAILED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.failed\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.ABORTED}</div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomTooltipComponent;\n\nCustomTooltipComponent.propTypes = {\n  className: PropTypes.string,\n  payload: PropTypes.array,\n  active: PropTypes.bool,\n  label: PropTypes.string\n};\n\nCustomTooltipComponent.defaultProps = {\n  className: 'custom-tooltip',\n  payload: [],\n  active: false,\n  label: ''\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './custom-axis-tick.local.scss';\n\nexport class CustomAxisTickComponent extends React.PureComponent {\n  render() {\n    return (\n      <g transform={`translate(${this.props.x},${this.props.y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill=\"rgba(12, 50, 110, 0.38)\">{this.props.payload.value}</text>\n      </g>\n    );\n  }\n}\n\nexport default CustomAxisTickComponent;\n\nCustomAxisTickComponent.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  payload: PropTypes.object,\n};\n\nCustomAxisTickComponent.defaultProps = {\n  x: null,\n  y: null,\n  payload: {},\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './circle-img.local.scss';\n\nexport class CircleImgComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.image}\n      </div>\n    );\n  }\n}\n\nexport default CircleImgComponent;\n\nCircleImgComponent.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nCircleImgComponent.defaultProps = {\n  className: 'circle-img',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './number-label.local.scss';\n\nexport class NumberLabelComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n\nexport default NumberLabelComponent;\n\nNumberLabelComponent.propTypes = {\n  className: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nNumberLabelComponent.defaultProps = {\n  className: 'number-label',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './string-label.local.scss';\n\nexport class StringLabelComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.text}</div>;\n  }\n}\n\nexport default StringLabelComponent;\n\nStringLabelComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.node.isRequired\n};\n\nStringLabelComponent.defaultProps = {\n  className: 'string-label'\n};\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport './search-input.local.scss';\n\nexport class SearchInputComponent extends PureComponent {\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <>\n        <div className=\"search-icon\">\n          <SearchIcon />\n        </div>\n        <InputBase\n          className=\"search-input-container\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={onChange}\n          inputProps={{\n            className: 'search qa-search',\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchInputComponent;\n\nSearchInputComponent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport classnames from 'classnames';\n\nimport './dropdown.local.scss';\n\nexport class DropdownComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDropdownOpen: false\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isDropdownOpen) {\n      this.setState({ isDropdownOpen: true });\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    let parentWidth;\n\n    if (this.anchorRef && this.anchorRef.current && this.anchorRef.current.offsetWidth) {\n      parentWidth = this.anchorRef.current.offsetWidth;\n    }\n    return (\n      <>\n        {this.props.target(\n          { isOpen: this.state.isDropdownOpen, ref: this.anchorRef },\n          { toggle: this.handleToggle }\n        )}\n        {items && (\n          <Popover\n            open={this.state.isDropdownOpen}\n            anchorEl={this.anchorRef.current}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList className=\"dropdown-menu-container\" style={{ width: parentWidth }}>\n                {items.map((item, index) => (\n                  <MenuItem\n                    className={classnames('', { disabled: item.disabled })}\n                    key={index}\n                    onClick={() => this.onClickCallback(index)}\n                  >\n                    {item.icon && <ListItemIcon className=\"icon\">{item.icon}</ListItemIcon>}\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Popover>\n        )}\n      </>\n    );\n  }\n\n  handleToggle = () => {\n    if (this.props.disabled) {\n      return false;\n    }\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen\n    }));\n  };\n\n  setCloseDropdown = event => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ isDropdownOpen: false });\n  };\n\n  onClickCallback = itemIndex => {\n    this.props.onSelect(itemIndex, this.props.items[itemIndex]);\n    this.setState({ isDropdownOpen: false });\n  };\n}\n\nexport default DropdownComponent;\n\nDropdownComponent.propTypes = {\n  onSelect: PropTypes.func,\n  target: PropTypes.func,\n  items: PropTypes.array,\n  isDropdownOpen: PropTypes.bool\n};\n\nDropdownComponent.defaultProps = {\n  onSelect: () => {},\n  items: [],\n  target: (meta, actions) => (\n    <Button ref={meta.ref} onClick={actions.toggle}>\n      {meta.isOpen ? 'Close' : 'Dropdown'}\n    </Button>\n  ),\n  isDropdownOpen: false\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './small-input.local.scss';\n\nexport const SmallInputComponent = forwardRef(({ value, icon, disabled, ...others }, ref) => (\n  <div\n    ref={ref}\n    className={classnames('small-input', { disabled, active: value.length })}\n  >\n    { icon && <div className=\"icon\">{icon}</div> }\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      {...others}\n    />\n  </div>\n));\n\nSmallInputComponent.propTypes = {\n  icon: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nSmallInputComponent.defaultProps = {\n  icon: null,\n  value: '',\n  disabled: false,\n};\n\nexport default SmallInputComponent;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SingleDatePicker } from 'react-dates';\nimport { mdiCalendarBlank, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './single-date-picker.local.scss';\n\nexport class SingleDatePickerComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: true\n    };\n  }\n\n  render() {\n    const { date, onDateChange, ...others } = this.props;\n\n    return (\n      <div className=\"date-picker-container\">\n        <SingleDatePicker\n          date={date}\n          onDateChange={onDateChange}\n          focused={this.state.focused}\n          onFocusChange={({ focused }) => this.setState({ focused })}\n          id=\"date-picker\"\n          numberOfMonths={1}\n          customInputIcon={\n            <SvgIcon>\n              <Icon path={mdiCalendarBlank} />\n            </SvgIcon>\n          }\n          placeholder=\"Select Date\"\n          isOutsideRange={() => false}\n          readOnly\n          hideKeyboardShortcutsPanel\n          displayFormat=\"MMM DD YYYY\"\n          /** TODO: @Razvan, look at this please. */\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          {...others}\n        />\n      </div>\n    );\n  }\n}\n\nSingleDatePickerComponent.propTypes = {\n  date: PropTypes.object,\n  onDateChange: PropTypes.func.isRequired\n};\n\nSingleDatePickerComponent.defaultProps = {\n  date: null\n};\n\nexport default SingleDatePickerComponent;\n","import React from 'react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArrowLeftRight, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\n\nimport DateRangePickerWrapper from './range-date-range-picker.container';\nimport 'react-dates/initialize'; // necessary for latest version\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport './range-date-picker.local.scss';\n\nexport class RangeDatePicker extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"date-picker-container\">\n        <DateRangePickerWrapper\n          anchorDirection=\"left\"\n          autoFocus={false}\n          block={false}\n          readOnly\n          customArrowIcon={\n            <SvgIcon>\n              <Icon path={mdiArrowLeftRight} />\n            </SvgIcon>\n          }\n          customCloseIcon={null}\n          customInputIcon={null}\n          disabled={false}\n          displayFormat=\"MMM D YYYY\"\n          enableOutsideDays={false}\n          endDateId=\"endDate\"\n          endDatePlaceholderText=\"End Date\"\n          horizontalMargin={0}\n          initialEndDate={null}\n          initialStartDate={moment()}\n          initialVisibleMonth={null}\n          isDayBlocked={() => false}\n          isDayHighlighted={() => false}\n          isOutsideRange={() => false}\n          isRTL={false}\n          keepOpenOnDateSelect={false}\n          minimumNights={0}\n          monthFormat=\"MMMM YYYY\"\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navPosition=\"navPositionTop\"\n          numberOfMonths={2}\n          onClose={() => false}\n          onNextMonthClick={() => false}\n          onPrevMonthClick={() => false}\n          orientation=\"horizontal\"\n          phrases={{\n            calendarLabel: 'Calendar',\n            chooseAvailableEndDate: function noRefCheck() {},\n            chooseAvailableStartDate: function noRefCheck() {},\n            clearDates: 'Clear Dates',\n            closeDatePicker: 'Close',\n            dateIsSelected: function noRefCheck() {},\n            dateIsSelectedAsEndDate: function noRefCheck() {},\n            dateIsSelectedAsStartDate: function noRefCheck() {},\n            dateIsUnavailable: function noRefCheck() {},\n            enterKey: 'Enter key',\n            escape: 'Escape key',\n            focusStartDate: 'Interact with the calendar and add the check-in date for your trip.',\n            hideKeyboardShortcutsPanel: 'Close the shortcuts panel.',\n            homeEnd: 'Home and end keys',\n            jumpToNextMonth: 'Move forward to switch to the next month.',\n            jumpToPrevMonth: 'Move backward to switch to the previous month.',\n            keyboardBackwardNavigationInstructions:\n              'Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardForwardNavigationInstructions:\n              'Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardShortcuts: 'Keyboard Shortcuts',\n            leftArrowRightArrow: 'Right and left arrow keys',\n            moveFocusByOneDay: 'Move backward (left) and forward (right) by one day.',\n            moveFocusByOneMonth: 'Switch months.',\n            moveFocusByOneWeek: 'Move backward (up) and forward (down) by one week.',\n            moveFocustoStartAndEndOfWeek: 'Go to the first or last day of a week.',\n            openThisPanel: 'Open this panel.',\n            pageUpPageDown: 'page up and page down keys',\n            questionMark: 'Question mark',\n            returnFocusToInput: 'Return to the date input field.',\n            roleDescription: 'datepicker',\n            selectFocusedDate: 'Select the date in focus.',\n            showKeyboardShortcutsPanel: 'Open the keyboard shortcuts panel.',\n            upArrowDownArrow: 'up and down arrow keys'\n          }}\n          regular={false}\n          renderCalendarDay={undefined}\n          renderDayContents={text => this.renderDayContents(text)}\n          renderMonthText={null}\n          reopenPickerOnClearDates={false}\n          required={false}\n          screenReaderInputMessage=\"\"\n          showClearDates={false}\n          showDefaultInputIcon={false}\n          small={false}\n          startDateId=\"startDate\"\n          startDatePlaceholderText=\"Start Date\"\n          stateDateWrapper={() => false}\n          withFullScreenPortal={false}\n          withPortal={false}\n          onDatesChange={this.props.onDatesChange}\n          endDate={this.props.endDate}\n          startDate={this.props.startDate}\n          focusedInput={null}\n          hideKeyboardShortcutsPanel\n        />\n      </div>\n    );\n  }\n\n  renderDayContents = text => (\n    <div className=\"wrapper-custom-date\">\n      <div className=\"custom-date\">{text.date()}</div>\n    </div>\n  );\n}\n\nRangeDatePicker.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onDatesChange: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { array, object, oneOfType } from 'prop-types';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline,\n  mdiCancel,\n  mdiHexagonMultipleOutline,\n  mdiDatabase\n} from '@mdi/js';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { LightTooltip, LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Center } from 'shared/components';\n\nimport './JobResults.local.scss';\n\nexport class JobResults extends React.PureComponent {\n  render() {\n    const { jobs, fromSearch } = this.props;\n\n    if (jobs && jobs.size === 0) {\n      if (fromSearch) {\n        return <></>;\n      }\n      return <Center>Job list is empty</Center>;\n    }\n    return <>{this.renderJobsResults(jobs)}</>;\n  }\n\n  renderJobsResults = jobs =>\n    jobs.map((job, index) => (\n      <Link key={index} to={`/jobs/job?invocation=${job.get('uuid')}`}>\n        <div className=\"result-job-row\">\n          <LightTooltip placement=\"bottom-start\" title={job.get('status').toUpperCase()}>\n            <div className=\"job-status-container\">{this.jobStatus(job.get('status'))}</div>\n          </LightTooltip>\n          <div className=\"job-content\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {job.get('process')}</p>\n                  {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                </>\n              }\n            >\n              <div className=\"first-row\">{this.formatName(job.get('process'))}</div>\n            </LimitlessTooltip>\n\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  <ScheduleIcon />\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    ));\n\n  jobStatus = status => {\n    switch (status) {\n      case 'EXECUTING':\n        return (\n          <div className=\"job-status executing\">\n            <SvgIcon>\n              <Icon path={mdiProgressClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SUCCEEDED':\n        return (\n          <div className=\"job-status succeeded\">\n            <SvgIcon>\n              <Icon path={mdiCheckCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SCHEDULED':\n        return (\n          <div className=\"job-status scheduled\">\n            <SvgIcon>\n              <Icon path={mdiCalendarArrowRight} />\n            </SvgIcon>\n          </div>\n        );\n      case 'ABORTED':\n        return (\n          <div className=\"job-status aborted\">\n            <SvgIcon>\n              <Icon path={mdiStopCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'DELAYED':\n        return (\n          <div className=\"job-status delayed\">\n            <SvgIcon>\n              <Icon path={mdiTimelineClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'FAILED':\n        return (\n          <div className=\"job-status failed\">\n            <SvgIcon>\n              <Icon path={mdiAlertRhombusOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'KILLED':\n        return (\n          <div className=\"job-status killed\">\n            <SvgIcon>\n              <Icon path={mdiCancel} />\n            </SvgIcon>\n          </div>\n        );\n      default:\n        return '';\n    }\n  };\n\n  formatName = jobName => {\n    const formattedName = [];\n    const name = jobName.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    return formattedName;\n  };\n}\n\nJobResults.propTypes = {\n  jobs: oneOfType([array, object])\n};\n\nexport default JobResults;\n","import React, { createContext, useContext } from 'react';\nimport { any, node } from 'prop-types';\n\nconst Context = createContext();\n\nexport function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nSwitch.propTypes = {\n  value: any,\n  children: node\n};\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nCase.propTypes = {\n  value: any,\n  children: node\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUITable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport './Table.local.scss';\n\nexport const Table = ({ columns, children, sortBehavior, changeSort, className }) => {\n  return (\n    <MUITable stickyHeader className={className}>\n      <TableHead className=\"sticky-head\">\n        <TableRow>\n          {columns.map(HeaderCell(sortBehavior, changeSort))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {children}\n      </TableBody>\n    </MUITable>\n  );\n};\n\nconst HeaderCell = (sortBehavior, changeSort) => (column, index) => (\n  <TableCell\n    key={`header_column_${index}`}\n    align={column.align}\n    component={column.component}\n    padding={column.padding}\n    sortDirection={sortBehavior.order}\n    variant={column.variant}\n  >\n    { column.sortKey ? (\n      <TableSortLabel\n        active={sortBehavior.sortKey === column.sortKey}\n        direction={sortBehavior.order}\n        onClick={changeSort(column.sortKey, sortBehavior.order === 'asc' ? 'desc' : 'asc')}\n      >\n        {column.label}\n      </TableSortLabel>\n    ) : column.label }\n  </TableCell>\n);\n\nTable.Row = TableRow;\nTable.Cell = TableCell;\n\nTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  sortBehavior: PropTypes.shape({\n    order: PropTypes.string,\n    sortKey: PropTypes.string\n  }),\n  changeSort: PropTypes.func\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nexport class LogoutPage extends React.PureComponent {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.logout.title\"\n        isLoading\n      >\n        <div />\n      </Container>\n    );\n  }\n\n  static path = '/logout';\n}\n\nLogoutPage.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: (data) => dispatch(actions.logout.dispatchLoading(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartTimelineVariant } from '@mdi/js';\n\nimport {\n  JobItem,\n  WorkloadGraph,\n  CircleImg,\n  NumberLabel,\n  StringLabel,\n  Center,\n  RangeDatePicker\n} from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper, Main } from 'shared/components/layout';\nimport { filterStatusSelector } from './store/state';\nimport { Header } from 'core/components/Header';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { fetchEntity } from 'entities/actions';\nimport { StatusContainer, Search } from './containers';\nimport { ConnectedServerUsage } from './containers/ServerUsage/ServerUsage';\n\nimport './root.module.scss';\n\nexport class RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n\n    this.onChangeDatesHandler = this.onChangeDatesHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n\n    if (\n      this.props.entitiesStatus.process === 'not-fetched' ||\n      this.props.entitiesStatus.process === 'failed'\n    ) {\n      this.props.request('process');\n    }\n  }\n\n  render() {\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Dashboard\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const averageJobs = Math.round(parseInt(this.props.jobs.get('total_count'), 10) / (days + 1));\n\n    return (\n      <div className={this.props.className}>\n        <Header>\n          <h1 className=\"header-title\">Dashboard</h1>\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Search />\n        <StatusContainer />\n        <div className=\"summary-container\">\n          <div className=\"jobs-container\">\n            {this.props.jobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <>\n                <div className=\"jobs-content\" id=\"jobs-content\">\n                  {this.filteredJobs(this.props.storeFilterStatus)}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"workload-container\">\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Generating Workload Chart</Loader>\n                </Center>\n              ) : (\n                <>\n                  <div className=\"workload-header\">\n                    <CircleImg\n                      image={\n                        <SvgIcon>\n                          <Icon path={mdiChartTimelineVariant} />\n                        </SvgIcon>\n                      }\n                    />\n                    <NumberLabel number={averageJobs} />\n                    <StringLabel\n                      text={\n                        <>\n                          <FormattedMessage id=\"dashboard.jobs\" />/\n                          <FormattedMessage id=\"dashboard.day\" />\n                        </>\n                      }\n                    />\n                  </div>\n                  <div className=\"workload-content\">\n                    <WorkloadGraph\n                      data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                        currentDate: moment.unix(\n                          this.props.globalFilters.get('startDate'),\n                          'YYYY-MM-DD'\n                        ),\n                        endDate: moment.unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                      })}\n                      isSingleDay={\n                        moment\n                          .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD') ===\n                        moment\n                          .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD')\n                      }\n                      setSingleDay={this.onChangeDatesHandler}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"servers-usage-container\">\n              <ConnectedServerUsage />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  filteredJobs = status => {\n    const { jobs } = this.props;\n\n    if (status === 'ALL') {\n      if (jobs.get('content').size === 0) {\n        return <Center>There are no jobs available with the selected filters</Center>;\n      }\n\n      return (\n        <>\n          {jobs\n            .get('content')\n            .slice(0, 20)\n            .map((item, index) => (\n              <JobItem key={index} job={item} />\n            ))}\n          {jobs.get('total_count') > 20 && (\n            <Button className=\"full-log center qa-view-full-log\">\n              <Link to=\"/jobs\">\n                <FormattedMessage id=\"dashboard.view-full-log\" />\n              </Link>\n            </Button>\n          )}\n        </>\n      );\n    }\n\n    const totalFilteredJobs = jobs.get('content').filter(job => job.get('status') === status).size;\n\n    if (totalFilteredJobs === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <>\n        {jobs\n          .get('content')\n          .filter(job => job.get('status') === status)\n          .slice(0, 20)\n          .map((item, index) => (\n            <JobItem key={index} job={item} />\n          ))}\n        {totalFilteredJobs > 20 && (\n          <Button className=\"full-log center qa-view-full-log\">\n            <Link to={`/jobs?status=${status}`}>\n              <FormattedMessage id=\"dashboard.view-full-log\" />\n            </Link>\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  onChangeDatesHandler(range) {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n\n      const start = moment(range.startDate.format('YYYY-MM-DD'));\n      const end = moment(range.endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n      this.props.getJobs({\n        date_invoke: moment(range.startDate).format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      });\n    }\n  }\n}\n\nRootModule.propTypes = {\n  className: PropTypes.string,\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nRootModule.defaultProps = {\n  className: 'dashboard'\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  storeFilterStatus: filterStatusSelector(state),\n  entitiesStatus: state.entities.fetch_status\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  request: data => dispatch(fetchEntity(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport classnames from 'classnames';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.local.scss';\n\nexport const Loader = ({ children, inline }) => {\n  return (\n    <div className={classnames('loader', { inline })}>\n      <CircularProgress />\n      {children && <div className=\"loader-text\">{children}</div>}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  children: node\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './ParameterLoader.local.scss';\n\nexport const ParameterLoader = ({ children }) => {\n  return (\n    <div className=\"loader\">\n      {children && <div className=\"loader-text\">{children}</div>}\n      <div className=\"loader-slot\">\n        <LinearProgress variant=\"indeterminate\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { bool, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Overflow } from '../Overflow/Overflow';\n\nimport './Paper.local.scss';\n\nexport const Paper = ({ padded, flex, children, ...rest }) => (\n  <div className={classnames('paper', { padded, [flex]: flex })} {...rest}>\n    {children}\n  </div>\n);\n\nPaper.propTypes = {\n  children: node,\n  padded: bool,\n  flex: oneOf(['column', 'row'])\n};\n\nPaper.defaultProps = {\n  padded: true,\n  flex: 'column'\n};\n\nexport const PaperHeader = ({ children, ...rest }) => (\n  <header className=\"paper-header\" {...rest}>\n    {children}\n  </header>\n);\n\nPaperHeader.propTypes = {\n  children: node\n};\n\nexport const PaperContent = ({ children, scrollable }) => {\n  if (scrollable) {\n    return (\n      <Overflow className=\"paper-content\" variant=\"white\">\n        {children}\n      </Overflow>\n    );\n  }\n\n  return <main className=\"paper-content\">{children}</main>;\n};\n\nPaperContent.propTypes = {\n  scrollable: bool,\n  children: node\n};\n\nPaperContent.defaultProps = {\n  scrollable: true\n};\n\nexport const PaperFooter = ({ children }) => <footer className=\"paper-footer\">{children}</footer>;\n\nPaperFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nPaperFooter.Left = LeftSideSlot;\nPaperFooter.Right = RightSideSlot;\n\nexport const PaperTitle = ({ children, ...rest }) => (\n  <h2 className=\"paper-title\" {...rest}>\n    {children}\n  </h2>\n);\n\nPaperTitle.propTypes = {\n  children: node\n};\n\nPaper.Header = PaperHeader;\nPaper.Title = PaperTitle;\nPaper.Content = PaperContent;\nPaper.Footer = PaperFooter;\n","import React from 'react';\nimport { node, bool } from 'prop-types';\nimport classnames from 'classnames';\nimport './Main.local.scss';\n\nexport const Main = ({ flex, children }) => (\n  <main\n    className={classnames('page-main', {\n      flex\n    })}\n  >\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: node,\n  flex: bool\n};\n\nMain.defaultProps = {\n  flex: true\n};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Section.local.scss';\n\nexport const Section = ({ children, full }) => (\n  <section\n    className={classnames('section-block', {\n      full\n    })}\n  >\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  children: node,\n  full: bool\n};\n\nexport const SectionTitle = ({ children, info }) => (\n  <>\n    <h3 className=\"section-title\">{children}</h3>\n    {info && <h4 className=\"section-title-info\">{info}</h4>}\n  </>\n);\n\nSectionTitle.propTypes = {\n  children: node,\n  info: node\n};\n\nexport const SectionHeader = ({ children }) => (\n  <>\n    <header className=\"section-header\">{children}</header>\n  </>\n);\n\nSectionHeader.propTypes = {\n  children: node\n};\n\nexport const SectionInfo = ({ children }) => (\n  <>\n    <h4 className=\"section-title-info\">{children}</h4>\n  </>\n);\n\nSectionInfo.propTypes = {\n  children: node\n};\n\nexport const SectionContent = ({ children }) => (\n  <>\n    <main className=\"section-content\">{children}</main>\n  </>\n);\n\nSection.Header = SectionHeader;\nSection.Content = SectionContent;\nSection.Title = SectionTitle;\nSection.Info = SectionInfo;\n","import React, { useState, useCallback } from 'react';\n\nimport { func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './ScrollableContainer.local.scss';\n\nexport const ScrollableContainer = ({ children, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  return (\n    <div\n      className={classnames('scrollable-container', {\n        scrolled,\n        [variant]: variant\n      })}\n    >\n      {children({\n        className: classnames('scrollable-element', {\n          [variant]: variant\n        }),\n        onWheel\n      })}\n    </div>\n  );\n};\n\nScrollableContainer.propTypes = {\n  children: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nScrollableContainer.defaultProps = {};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport './Column.local.scss';\n\nexport const Column = ({ children, ...rest }) => {\n  return (\n    <div className=\"column\" {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Row.local.scss';\n\nexport const Row = ({ children, compact, ...rest }) => {\n  return (\n    <div className={classnames('row', { compact })} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { jobsSelector } from 'shared/store/state';\nimport { filterStatusSelector } from '../../store/state';\n\nimport { Daemon, JobStatus } from './components';\n\nimport './status.local.scss';\n\nexport class StatusContainer extends React.PureComponent {\n  render() {\n    const { className, jobs } = this.props;\n    return (\n      <Paper className={className}>\n        <Daemon />\n        <div className=\"jobs-status-container\">\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader inline>Loading jobs</Loader>\n            </Center>\n          ) : (\n            this.filterJobs(jobs.toJS().content)\n          )}\n        </div>\n      </Paper>\n    );\n  }\n\n  filterJobs = jobs => {\n    const { active } = this.props;\n    const count = {\n      executing: 0,\n      succeeded: 0,\n      scheduled: 0,\n      aborted: 0,\n      failed: 0\n    };\n    count.executing = jobs.filter(job => job.status === 'EXECUTING')?.length;\n    count.succeeded = jobs.filter(job => job.status === 'SUCCEEDED')?.length;\n    count.scheduled = jobs.filter(job => job.status === 'SCHEDULED')?.length;\n    count.aborted = jobs.filter(job => job.status === 'ABORTED')?.length;\n    count.failed = jobs.filter(job => job.status === 'FAILED')?.length;\n\n    return (\n      <>\n        <JobStatus count={count.executing} status=\"EXECUTING\" active={active} />\n        <JobStatus count={count.succeeded} status=\"SUCCEEDED\" active={active} />\n        <JobStatus count={count.scheduled} status=\"SCHEDULED\" active={active} />\n        <JobStatus count={count.aborted} status=\"ABORTED\" active={active} />\n        <JobStatus count={count.failed} status=\"FAILED\" active={active} />\n      </>\n    );\n  };\n}\n\nStatusContainer.propTypes = {\n  className: PropTypes.string,\n  jobs: PropTypes.object.isRequired\n};\n\nStatusContainer.defaultProps = {\n  className: 'status-container'\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  active: filterStatusSelector(state)\n});\n\nexport default connect(mapStateToProps)(StatusContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { daemonPoller } from '../../../../store/tasks';\nimport { isDaemonRunning } from '../../../../store/selectors';\n\nimport './daemon.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const Daemon = () => {\n  const running = useSelector(isDaemonRunning);\n\n  useEffect(() => {\n    daemonPoller.start();\n\n    return () => {\n      daemonPoller.stop();\n    };\n  }, []);\n\n  return (\n    <div className=\"daemon qa-daemon-status\">\n      {running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.running\" />}>\n          <div className=\"status running\">\n            <PlayCircleOutlineIcon />\n          </div>\n        </LightTooltip>\n      )}\n\n      {!running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.not.running\" />}>\n          <div className=\"status not-running\">\n            <ErrorOutlineIcon className=\"not-running\" />\n          </div>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport { actions } from 'dashboard/store/actions';\nimport { filterStatusSelector } from 'dashboard/store/state';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-status.local.scss';\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return <>{this.renderContent()}</>;\n  }\n\n  filterByStatus = status => {\n    if (this.props.storeStatus === status.toUpperCase()) {\n      this.props.setStatus('ALL');\n    } else {\n      this.props.setStatus(status.toUpperCase());\n    }\n  };\n\n  renderContent() {\n    let icon = null;\n    let status = '';\n    switch (this.props.status) {\n      case 'EXECUTING':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiProgressClock} />\n          </SvgIcon>\n        );\n        status = 'executing';\n        break;\n      case 'SUCCEEDED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCheckCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'succeeded';\n        break;\n      case 'SCHEDULED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCalendarArrowRight} />\n          </SvgIcon>\n        );\n        status = 'scheduled';\n        break;\n      case 'ABORTED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiStopCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'aborted';\n        break;\n      case 'FAILED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiAlertRhombusOutline} />\n          </SvgIcon>\n        );\n        status = 'failed';\n        break;\n      default:\n        // error message\n        break;\n    }\n\n    if (icon) {\n      return (\n        <div\n          className={classnames(`job-status ${status}`, {\n            active: this.props.status === this.props.active\n          })}\n          role=\"presentation\"\n          onClick={() => this.filterByStatus(status)}\n        >\n          <div className=\"header\">\n            <div className=\"icon\">{icon}</div>\n            <div className=\"count\">\n              {this.props.count}\n              {this.props.status === this.props.active && (\n                <LightTooltip placement=\"right\" title=\"Active filter\">\n                  <CheckCircleIcon className=\"active-filter\" />\n                </LightTooltip>\n              )}\n            </div>\n          </div>\n          <div className=\"status\">{this.props.status}</div>\n        </div>\n      );\n    }\n    // error case\n    return null;\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setStatus: PropTypes.func\n};\n\nexport const mapStateToProps = state => ({\n  storeStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setStatus: status => dispatch(actions.setFilterStatus.dispatchEvent(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobStatus);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector } from 'shared/store/state';\n\nimport { FormattedMessage } from 'react-intl';\nimport { debounce } from 'lodash';\nimport { mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport Paper from '@material-ui/core/Paper';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { SearchInput } from 'shared/components';\nimport { SearchResults } from '../../components';\nimport { setFilterSearch, setFilterType } from 'entities/actions';\n\nimport './search-area.local.scss';\n\nexport class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSearchResults: false,\n      searchTerm: ''\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    if (this.state.showSearchResults) {\n      this.getSearchResults(searchedTerm);\n    }\n  }, 500);\n\n  render() {\n    const {\n      className,\n      getSearchedJobs,\n      entitiesStatus,\n      setSearchFilter,\n      setTypeFilter\n    } = this.props;\n    return (\n      <Paper\n        className={`${className} ${this.state.showSearchResults ? 'no-bottom-radius' : ''}\n        `}\n      >\n        <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n\n        {this.state.searchTerm.length > 0 && (\n          <div className=\"clear-search\">\n            <ClearIcon onClick={this.clearSearch} />\n          </div>\n        )}\n        {this.state.showSearchResults && (\n          <div className=\"search-results-container\">\n            <SearchResults\n              category=\"jobs\"\n              totalResults={getSearchedJobs.get('total_count')}\n              content={getSearchedJobs.get('content')}\n              isLoading={getSearchedJobs.get('fetching')}\n              displayedResults={3}\n              filters={{\n                nameFilter: this.state.searchTerm\n              }}\n            />\n            <SearchResults\n              category=\"processes\"\n              totalResults={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).count\n              }\n              content={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).processes\n              }\n              isLoading={entitiesStatus.process === 'fetching'}\n              displayedResults={3}\n              searchedTerm={this.state.searchTerm}\n              setFilterSearch={setSearchFilter}\n              setFilterType={setTypeFilter}\n            />\n            <div className=\"full-results-container qa-full-search-results\">\n              <div className=\"icon-container\">\n                <SearchIcon />\n              </div>\n              <div className=\"content\">\n                <FormattedMessage id=\"dashboard.view-full-search-results\" />\n              </div>\n              <div className=\"open qa-open-full-results\">\n                <SvgIcon>\n                  <Icon path={mdiChevronRight} />\n                </SvgIcon>\n              </div>\n            </div>\n          </div>\n        )}\n      </Paper>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: 3,\n      page: 1,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n  };\n\n  filterProcesses = (processStatus, searchedTerm) => {\n    if (processStatus === 'fetching' || !searchedTerm) {\n      return { processes: [], count: 0 };\n    }\n    if (this.props.storedProcesses && this.props.storedProcesses.length > 0) {\n      const results = this.props.storedProcesses.filter(p => p.name.includes(searchedTerm));\n\n      return { processes: results.slice(0, 3), count: results.length };\n    }\n    return { processes: [], count: 0 };\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length < 3 && this.state.showSearchResults) {\n      this.setState({ showSearchResults: false });\n    } else if (searchedTerm.length === 3) {\n      if (!this.state.showSearchResults) {\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    } else if (searchedTerm.length > 3) {\n      if (!this.state.showSearchResults) {\n        // used for pasted value\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({\n      showSearchResults: false,\n      searchTerm: ''\n    });\n  };\n}\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  searchJobs: PropTypes.func.isRequired,\n  getSearchedJobs: PropTypes.object.isRequired\n};\n\nSearch.defaultProps = {\n  className: 'search-container'\n};\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state),\n  entitiesStatus: state.entities.fetch_status,\n  storedProcesses: state.entities.data?.process?.data?.data?.processes\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data)),\n  setSearchFilter: data => dispatch(setFilterSearch(data)),\n  setTypeFilter: data => dispatch(setFilterType(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed } from '@mdi/js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport { JobResults } from 'shared/components/JobResults';\nimport { createUrl } from 'shared/lib';\n\nimport './search-results.local.scss';\n\nexport class SearchResultsComponent extends React.PureComponent {\n  render() {\n    const {\n      className,\n      category,\n      totalResults,\n      isLoading,\n      displayedResults,\n      content,\n      searchedTerm = '',\n      setFilterSearch,\n      setFilterType\n    } = this.props;\n    return (\n      <div className={className}>\n        {isLoading ? (\n          <div className=\"header-area\">\n            <div className=\"category-name\">{category}</div>\n            <div className=\"loading\">\n              <CircularProgress size=\"20px\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"header-area\">\n              <div className=\"category-name\">{category}</div>\n              <div className=\"separator\">-</div>\n              <div className=\"total-results\">\n                {totalResults} <FormattedMessage id=\"dashboard.results\" />\n              </div>\n              {totalResults > displayedResults && (\n                <Button className=\"all-results qa-view-all-results\">\n                  {category === 'jobs' && (\n                    <Link to={() => this.createURLLink()}>\n                      <FormattedMessage id=\"dashboard.view-all-results\" />\n                    </Link>\n                  )}\n                  {category === 'processes' && (\n                    <div\n                      role=\"presentation\"\n                      onClick={() => {\n                        setFilterSearch(searchedTerm);\n                        setFilterType('process');\n                      }}\n                    >\n                      <Link to=\"/system/entities\">\n                        <FormattedMessage id=\"dashboard.view-all-results\" />\n                      </Link>\n                    </div>\n                  )}\n                </Button>\n              )}\n            </div>\n            <div className=\"content-area\">\n              {category === 'jobs' && <JobResults jobs={content} fromSearch />}\n              {category === 'processes' && this.renderProcessesResults()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderProcessesResults = () =>\n    this.props.content.map((process, index) => (\n      <div key={index} className=\"result-process-row\">\n        <div className=\"icon-container\">\n          <SvgIcon>\n            <Icon path={mdiPlaySpeed} />\n          </SvgIcon>\n        </div>\n        <div className=\"process-container\">{process.name}</div>\n      </div>\n    ));\n\n  createURLLink = () => {\n    let url = '/jobs';\n    const params = {};\n\n    if (this.props.filters.nameFilter) {\n      params.name_filter = this.props.filters.nameFilter;\n    }\n\n    url = createUrl(url, params);\n    return url;\n  };\n}\n\nexport default SearchResultsComponent;\n\nSearchResultsComponent.propTypes = {\n  className: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  category: PropTypes.string,\n  totalResults: PropTypes.number,\n  isLoading: PropTypes.bool,\n  displayedResults: PropTypes.number\n};\n\nSearchResultsComponent.defaultProps = {\n  className: 'results-container',\n  content: [],\n  category: '',\n  totalResults: 0,\n  isLoading: false,\n  displayedResults: 3\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { JobsEffect } from './jobs/jobs.effect';\nimport { JobsConnectionsEffect } from './connections/connections.effect';\nimport { SearchJobsEffect } from './search-jobs/search-jobs.effect';\nimport { SearchProcessesEffect } from './search-processes/search-processes.effect';\nimport { GlobalFiltersEffect } from './global-filters/global-filters.effect';\n\nexport const sharedEffects = [\n  JobsEffect,\n  JobsConnectionsEffect,\n  SearchJobsEffect,\n  SearchProcessesEffect,\n  GlobalFiltersEffect\n];\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Cookie from 'js-cookie';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\n\nimport { Login, Logout } from 'session';\nimport { actionStates } from 'shared/lib/action-creator';\nimport { authorizationSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Layout } from './core';\n\nimport './scoped-css-mui-compatibility';\n\nexport class RootModule extends React.PureComponent {\n  componentDidMount() {\n    if (!Cookie.get('Authorization')) {\n      this.props.history.listen((newLocation, action) => {\n        if (action === 'PUSH') {\n          if (\n            newLocation.pathname !== this.currentPathname ||\n            newLocation.search !== this.currentSearch\n          ) {\n            this.currentPathname = newLocation.pathname;\n            this.currentSearch = newLocation.search;\n            this.props.history.push({\n              pathname: newLocation.pathname,\n              search: newLocation.search\n            });\n          }\n        } else {\n          this.props.history.go(1);\n        }\n      });\n      this.props.history.push('/login');\n      this.props.setAuthorization();\n      return;\n    }\n\n    const username = JSON.parse(localStorage.getItem('username')) || 'mas';\n\n    this.props.checkAuthorization(username);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.authorizationStatus !== prevProps.authorizationStatus &&\n      this.props.authorizationStatus === actionStates.FAIL\n    ) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    if (this.props.authorizationStatus === actionStates.LOADING) {\n      return (\n        <Center>\n          <CircularProgress />\n        </Center>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path={Login.path} component={Login} />\n        <Route exact path={Logout.path} component={Logout} />\n        <Route path=\"/\" component={Layout} />\n      </Switch>\n    );\n  }\n}\n\nRootModule.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  authorizationStatus: PropTypes.oneOf([\n    '',\n    actionStates.SUCCESS,\n    actionStates.LOADING,\n    actionStates.FAIL\n  ]).isRequired,\n  setAuthorization: PropTypes.func.isRequired,\n  checkAuthorization: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  authorizationStatus: authorizationSelector(state).get('status')\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  checkAuthorization: user => dispatch(actions.checkAuthorization.dispatchLoading(user)),\n  setAuthorization: () => dispatch(actions.checkAuthorization.dispatchFail())\n});\n\nexport default hot(connect(mapStateToProps, mapDispatchToProps)(RootModule));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Dashboard } from 'dashboard';\nimport { Jobs } from 'jobs';\nimport { Entities } from 'entities';\nimport { UsersAndGroups } from 'users-manager';\nimport { Explorer } from 'explorer';\nimport { Sidebar } from './containers';\nimport { JobProcess } from '../job-process';\nimport { ConnectedExecutiveDashboard } from 'executive-dashboard/ExecutiveDashboard';\nimport { LicenseCollection } from 'license-collection/LicenseCollection';\n\nimport './root.local.scss';\n\nexport class RootLayout extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Sidebar />\n        <div className=\"app-container\">\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/jobs/job\" component={JobProcess} />\n            <Route exact path=\"/system/entities\" component={Entities} />\n            <Route path=\"/system/mas-accounts\" component={UsersAndGroups} />\n            <Route exact path=\"/system/explorer\" component={Explorer} />\n            <Route\n              exact\n              path=\"/compliance/executive-dashboard\"\n              component={ConnectedExecutiveDashboard}\n            />\n            <Route exact path=\"/compliance/license-collection\" component={LicenseCollection} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nRootLayout.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { connect } from 'react-redux';\n\nimport { getWorkloadData } from 'shared/lib/workload';\n\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from 'users-manager/store/thunks';\n\nimport { Header } from 'core/components/Header';\nimport {\n  WorkloadGraph,\n  Center,\n  RangeDatePicker,\n  SimpleSearchInput,\n  Switch\n} from 'shared/components';\nimport { Main, Paper } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { JobItem } from './components/job-item';\nimport { JobList } from './components/job-list';\n\nimport { Filters } from './containers/filters';\nimport { JobsInvocations } from './containers/jobs-invocations';\n\nimport { Schedule } from './containers/Schedule/Schedule';\nimport { TotalJobsCount } from './components/total-jobs-count/TotalJobsCount';\n\nimport './jobs.local.scss';\n\nfunction renderJobItem(item, index, filters) {\n  return <JobItem extended key={index} job={item} filters={filters} />;\n}\n\nclass RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      },\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_filter: {\n        dbms: query.get('platform_filter_dbms') || '',\n        name: query.get('platform_filter_name') || ''\n      }, // will have the platform_name_filter and platform_dbms_filter\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      name_filter: query.get('name_filter') || '',\n      user_filter: query.get('user_filter') || '',\n      selectedTab: 'all',\n      isWorkloadDisplayed: false,\n      pageFilters: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.allUsers.length === 0) {\n      this.props.loadAllUsers();\n    }\n  }\n\n  render() {\n    const {\n      shell_host_address_filter,\n      platform_filter,\n      status,\n      database_name_filter,\n      user_filter,\n      selectedTab,\n      isWorkloadDisplayed\n    } = this.state;\n\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Jobs\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    return (\n      <JobsInvocations>\n        <Header title=\"Jobs\">\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <NavigationTab\n                tabs={[\n                  { label: 'All jobs', value: 'all' },\n                  { label: 'Current jobs', value: 'current-jobs' },\n                  { label: 'Scheduled', value: 'scheduled' }\n                ]}\n                active={selectedTab}\n                onClick={this.handleOnTabChange}\n              />\n              {(selectedTab === 'all' || selectedTab === 'current-jobs') && (\n                <Button\n                  style={{\n                    whiteSpace: 'nowrap',\n                    lineHeight: '20px',\n                    height: '20px',\n                    paddingTop: '0'\n                  }}\n                  onClick={this.toggleWorkloadDisplay}\n                >\n                  {isWorkloadDisplayed ? 'Hide Workload' : 'Display workload'}\n                </Button>\n              )}\n            </Paper.Header>\n            <Switch value={selectedTab}>\n              <Switch.Case value=\"all\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount jobs={this.props.jobs.get('content').toJS()} status={status} />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"current-jobs\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount\n                    jobs={this.props.jobs\n                      .get('content')\n                      .filter(item => item.get('status') !== 'SCHEDULED')\n                      .toJS()}\n                    status={status}\n                  />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"scheduled\">\n                <TotalJobsCount\n                  jobs={this.props.jobs\n                    .get('content')\n                    .filter(item => item.get('status') === 'SCHEDULED')\n                    .toJS()}\n                  status=\"SCHEDULED\"\n                />\n              </Switch.Case>\n            </Switch>\n            <Paper.Content scrollable={false}>\n              <div className=\"jobs-filters-controllers\">\n                <div className=\"job-search\">\n                  <SimpleSearchInput\n                    value={this.state.name_filter}\n                    onChange={this.onSearchInputChange}\n                    onKeyDown={this.onKeyDown}\n                  />\n                </div>\n                <Filters\n                  selections={{\n                    shell_host_address_filter,\n                    platform_filter,\n                    status,\n                    database_name_filter,\n                    user_filter\n                  }}\n                  onChange={this.handleOnFilterChange}\n                  excludeStatus={selectedTab === 'scheduled'}\n                  currentTab={selectedTab}\n                />\n              </div>\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Loading jobs list</Loader>\n                </Center>\n              ) : (\n                <JobList items={this.returnListBasedOnTab()} filters={this.state.pageFilters}>\n                  {renderJobItem}\n                </JobList>\n              )}\n            </Paper.Content>\n            <Paper.Footer>\n              <Schedule />\n              <Button to=\"/jobs/job\">New Job</Button>\n            </Paper.Footer>\n          </Paper>\n        </Main>\n      </JobsInvocations>\n    );\n  }\n\n  toggleWorkloadDisplay = () => {\n    this.setState(prevState => ({\n      isWorkloadDisplayed: !prevState.isWorkloadDisplayed\n    }));\n  };\n\n  updateQSP = (filter, value) => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (typeof value === 'object') {\n      const keys = Object.keys(value);\n\n      keys.forEach(key => {\n        if (!value[key]) {\n          query.delete(`${filter}_${key}`);\n        } else if (query.has(`${filter}_${key}`) && query.get(`${filter}_${key}`) !== value[key]) {\n          query.set(`${filter}_${key}`, value[key]);\n        } else {\n          query.append(`${filter}_${key}`, value[key]);\n        }\n      });\n    } else if (!value) {\n      query.delete(filter);\n    } else if (query.has(filter) && query.get(filter) !== value) {\n      query.set(filter, value);\n    } else {\n      query.append(filter, value);\n    }\n\n    query.toString();\n\n    this.props.history.push({ search: `?${query}` });\n  };\n\n  handleOnTabChange = tab => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (query.get('status')) {\n      query.delete('status');\n      query.toString();\n\n      this.props.history.push({ search: `?${query}` });\n      this.setState({ status: '', selectedTab: tab }, () => {\n        this.performFilter(this.state);\n      });\n    } else {\n      this.setState({ selectedTab: tab });\n    }\n  };\n\n  handleOnFilterChange = (filter, value) => {\n    this.updateQSP(filter, value);\n\n    this.setState(\n      {\n        [filter]: value\n      },\n      () => {\n        this.performFilter(this.state);\n      }\n    );\n  };\n\n  returnListBasedOnTab = () => {\n    const { selectedTab, status } = this.state;\n    const list = this.props.jobs.get('content');\n\n    if (status) {\n      return list.filter(item => item.get('status') === status);\n    }\n\n    if (selectedTab === 'scheduled') {\n      return list.filter(item => item.get('status') === 'SCHEDULED');\n    }\n\n    if (selectedTab === 'current-jobs') {\n      return list.filter(item => item.get('status') !== 'SCHEDULED');\n    }\n\n    return list;\n  };\n\n  performFilter = ({\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter,\n    name_filter,\n    range\n  }) => {\n    if (range.startDate === null || range.endDate === null) return;\n\n    const start = moment(range.startDate.format('YYYY-MM-DD'));\n    const end = moment(range.endDate.format('YYYY-MM-DD'));\n    const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n    const payload = {\n      date_invoke: range.startDate.format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    };\n\n    if (shell_host_address_filter) {\n      payload.shell_host_address_filter = shell_host_address_filter;\n    }\n\n    if (platform_filter) {\n      payload.platform_name_filter = platform_filter.name;\n      payload.platform_dbms_filter = platform_filter.dbms;\n    }\n\n    if (status) {\n      payload.status = status;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (name_filter) {\n      payload.name_filter = name_filter;\n    }\n\n    if (user_filter) {\n      payload.owner = user_filter;\n    }\n\n    this.props.getJobs(payload);\n    this.setState({ pageFilters: payload });\n  };\n\n  onSearchInputChange = event => {\n    this.setState({\n      name_filter: event.target.value\n    });\n  };\n\n  onKeyDown = event => {\n    if (event.key === 'Enter' && !this.props.jobs.get('fetching')) {\n      this.updateQSP('name_filter', event.target.value);\n      this.performFilter(this.state);\n    }\n  };\n\n  onChangeDatesHandler = range => {\n    this.setState(\n      {\n        range: {\n          startDate: range.startDate,\n          endDate: range.endDate\n        }\n      },\n      () => {\n        this.props.setGlobalFilters(range);\n        this.performFilter(this.state);\n      }\n    );\n  };\n}\nRootModule.propTypes = {\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  allUsers: state.usersManager.users.all\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n  },\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  loadAllUsers: () => dispatch(loadAllUsersThunk())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport { bool } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MUITextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from '../../LightTooltip/LightTooltip';\n\nimport './Input.local.scss';\n\nexport const Input = forwardRef(function InputFw(\n  { inline, error, size, children, description, multiline, variant, ...rest },\n  ref\n) {\n  const InputProps = { ...(rest.InputProps && rest.InputProps) };\n\n  const nrRows = rest?.isPopup ? 9999 : 7;\n\n  if (description) {\n    InputProps.endAdornment = (\n      <>\n        <InputAdornment position=\"end\">\n          <LightTooltip title={description}>\n            <SvgIcon>\n              <path d={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        </InputAdornment>\n        {InputProps.endAdornment}\n      </>\n    );\n  }\n\n  return (\n    <MUITextField\n      ref={ref}\n      fullWidth\n      className={classnames('input-field', { inline, error })}\n      variant={variant || 'outlined'}\n      error={error}\n      {...(multiline && {\n        multiline: true,\n        rows: nrRows\n      })}\n      {...rest}\n      InputProps={InputProps} // eslint-disable-line\n      size={size}\n    >\n      {children}\n    </MUITextField>\n  );\n});\n\nInput.propTypes = {\n  inline: bool,\n  error: bool\n};\n","import React from 'react';\nimport MUIButton from '@material-ui/core/Button';\n\nimport './Button.local.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nexport const Button = ({ to, href, ...props }) => {\n  const link = to || href;\n\n  if (link) {\n    return <MUIButton color=\"primary\" {...props} component={LinkBehavior} to={link} />;\n  }\n\n  return <MUIButton color=\"primary\" {...props} />;\n};\n","import React, { useState, useCallback } from 'react';\nimport moment from 'moment';\n\nimport { Link } from 'react-router-dom';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiClockOutline, mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { ConnectedDeleteJobModal } from '../../actions/delete/DeleteJobModal';\nimport { JobStatus } from '../job-status';\n\nimport './job-item.local.scss';\n\nexport const JobItem = ({ job, filters }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n  const [uuid, setUuid] = useState('');\n\n  const formatName = () => {\n    let name = job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas = formatName.canvas || (formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n  return (\n    <>\n      <Link to={`/jobs/job/?invocation=${job.get('uuid')}`}>\n        <div className=\"job-item\">\n          <div className=\"status-icon\">\n            <JobStatus status={job.get('status')} />\n          </div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {job.get('process')}</p>\n                    {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                  </>\n                }\n              >\n                <div className=\"name\">{formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"metadata-element time\">\n                  <SvgIcon>\n                    <path d={mdiClockOutline} />\n                  </SvgIcon>\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"metadata-element run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"metadata-element dbms\">\n                    <SvgIcon>\n                      <path d={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"metadata-element server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"metadata-element database\">\n                    <SvgIcon>\n                      <path d={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n          {job.get('status') === 'DELAYED' && (\n            <div className=\"job-actions\">\n              <Button\n                color=\"secondary\"\n                onClick={event => {\n                  event.preventDefault();\n                  setOpen(true);\n                  setUuid(job.get('uuid'));\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          )}\n        </div>\n      </Link>\n\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={uuid} filters={filters} />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './ModalFooter.local.scss';\n\nexport const ModalFooter = ({ children }) => {\n  return <footer className=\"modal-footer\">{children}</footer>;\n};\n\nModalFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nModalFooter.Left = LeftSideSlot;\nModalFooter.Right = RightSideSlot;\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ErrorModal.local.scss';\n\nexport const ErrorModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiCancel,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport './job-status.local.scss';\n\nconst statusMap = {\n  EXECUTING: mdiProgressClock,\n  SUCCEEDED: mdiCheckCircleOutline,\n  SCHEDULED: mdiCalendarArrowRight,\n  DELAYED: mdiTimelineClock,\n  ABORTED: mdiStopCircleOutline,\n  FAILED: mdiAlertRhombusOutline,\n  KILLED: mdiCancel\n};\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return (\n      <LightTooltip placement=\"bottom-start\" title={this.props.status.toUpperCase()}>\n        <div className=\"daemon qa-daemon-status\">\n          <div className={`status ${this.props.status.toLowerCase()}`}>\n            <SvgIcon>\n              <path d={statusMap[this.props.status]} />\n            </SvgIcon>\n          </div>\n        </div>\n      </LightTooltip>\n    );\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string\n};\nJobStatus.defaultProps = {\n  status: ''\n};\n","import React from 'react';\n\nimport { any, func } from 'prop-types';\n\nimport { Center } from 'shared/components/layout';\n\nimport './job-list.local.scss';\n\nexport const JobList = ({ items, filters, children }) => {\n  const noneAvailable = items.size === 0;\n\n  if (noneAvailable) {\n    return <NoJobs />;\n  }\n\n  return (\n    <div className=\"list-container\">\n      <ul>\n        {items.map((item, index, list) => (\n          <li key={index} className=\"list-item\">\n            {children(item, index, filters, list)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nJobList.propTypes = {\n  items: any,\n  children: func\n};\n\nJobList.defaultProps = {\n  items: []\n};\n\nfunction NoJobs() {\n  return (\n    <Center>\n      <p>There are no jobs available with the selected filters</p>\n    </Center>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { mapSortInsensitive } from 'users-manager/store/mappers';\nimport { getJobsFiltersOptions } from 'shared/store/selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiHexagonMultipleOutline, mdiDatabase, mdiServer, mdiCircleSlice5 } from '@mdi/js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\nimport { Input } from 'shared/components/controls';\n\nimport './filters.scss';\n\nexport const PLATFORM = [\n  { label: 'MariaDB', name: 'mariadb', dbms: 'mysql', value: { name: 'mariadb', dbms: 'mysql' } },\n  {\n    label: 'MySQL',\n    name: 'mysql',\n    dbms: 'mysql',\n    value: { name: 'mysql', dbms: 'mysql' }\n  },\n  { label: 'Oracle', name: 'oracle', dbms: 'oracle', value: { name: 'oracle', dbms: 'oracle' } },\n  { label: 'PostgreSQL', name: 'pgsql', dbms: 'pgsql', value: { name: 'pgsql', dbms: 'pgsql' } },\n  {\n    label: 'Microsoft SQL Server',\n    name: 'microsoft.sqlserver',\n    dbms: 'mssql',\n    value: { name: 'microsoft.sqlserver', dbms: 'mssql' }\n  },\n  {\n    label: 'Oracle RDS',\n    name: 'rds.oracle',\n    dbms: 'oracle',\n    value: { name: 'rds.oracle', dbms: 'oracle' }\n  }\n];\n\nconst Filters = props => {\n  const { filters, selections, onChange, excludeStatus, allUsers, currentTab } = props;\n  const {\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter\n  } = selections;\n\n  const users = [\n    { value: '', label: 'All' },\n    ...allUsers.map(user => ({ label: user.name, value: user.name }))\n  ];\n  const selectedUser = users.find(u => u.value && u.value === user_filter) ?? '';\n  const platforms = [\n    { value: { name: '', dbms: '' }, label: 'All' },\n    ...PLATFORM.map(el => ({ value: el.value, label: el.label }))\n  ];\n  const selectedPlatform =\n    platforms.find(p => p?.value?.name && p.value.name === platform_filter?.name) ?? '';\n  const servers = [\n    { value: '', label: 'All' },\n    ...filters.address.map(el => ({ value: el, label: el }))\n  ];\n  const selectedServer =\n    servers.find(sv => sv.value && sv.value === shell_host_address_filter) ?? '';\n  const databases = [\n    { value: '', label: 'All' },\n    ...filters.database.map(el => ({ value: el, label: el }))\n  ];\n  const selectedDb = databases.find(db => db.value && db.value === database_name_filter) ?? '';\n  let statuses = [\n    { value: '', label: 'All' },\n    ...filters.status.map(el => ({ value: el, label: el }))\n  ];\n\n  if (currentTab === 'current-jobs') {\n    statuses = statuses.filter(s => s.value !== 'SCHEDULED');\n  }\n\n  const selectedStatus = statuses.find(s => s.value && s.value === status) ?? '';\n\n  return (\n    <div className=\"job-filters\">\n      <Autocomplete\n        disableClearable\n        id=\"users-filter\"\n        options={users}\n        value={selectedUser}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('user_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <AccountCircleOutlinedIcon />\n                <span className=\"job-filter-select-label\">Users</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"platform-filter\"\n        options={platforms}\n        value={selectedPlatform}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('platform_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Platform</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"server-filter\"\n        options={servers}\n        value={selectedServer}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('shell_host_address_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiServer} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Server</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"database-filter\"\n        options={databases}\n        value={selectedDb}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('database_name_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiDatabase} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Database</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      {!excludeStatus && (\n        <Autocomplete\n          disableClearable\n          id=\"status-filter\"\n          options={statuses}\n          value={selectedStatus}\n          getOptionLabel={opt => opt.label || ''}\n          onChange={(e, option) => {\n            onChange('status', option?.value || '');\n          }}\n          style={{ color: 'red' }}\n          renderInput={params => (\n            <Input\n              {...params}\n              size=\"small\"\n              label={\n                <span className=\"job-filter-select-label-wrap\">\n                  <SvgIcon>\n                    <path d={mdiCircleSlice5} />\n                  </SvgIcon>\n                  <span className=\"job-filter-select-label\">Status</span>\n                </span>\n              }\n              variant=\"outlined\"\n            />\n          )}\n        />\n      )}\n    </div>\n  );\n};\nFilters.propTypes = {\n  filters: PropTypes.object.isRequired,\n  selections: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  excludeStatus: PropTypes.bool\n};\n\nexport const mapStateToProps = state => ({\n  filters: getJobsFiltersOptions(state),\n  allUsers: mapSortInsensitive(state.usersManager.users.all)\n});\n\nexport default connect(mapStateToProps)(Filters);\n","import { createSelector } from 'reselect';\n\nimport { connectionsSelector } from '../state';\n\nexport const getJobsFiltersOptions = createSelector(connectionsSelector, connections => {\n  const filters = {\n    address: [], // connections - server\n    protocol: [], // connections - dbms\n    status: ['EXECUTING', 'SUCCEEDED', 'SCHEDULED', 'ABORTED', 'FAILED', 'DELAYED', 'KILLED'], // hardcoded\n    database: [] // connections -  database\n  };\n\n  connections.get('content').forEach(connection => {\n    const address = connection.get('address');\n    const protocol = connection.get('protocol');\n    const database = connection.getIn(['special', 'database']);\n\n    if (address && !filters.address.includes(address)) {\n      filters.address.push(address);\n    }\n\n    if (protocol && !filters.protocol.includes(protocol)) {\n      if (protocol !== 'SSH') {\n        filters.protocol.push(protocol);\n      }\n    }\n\n    if (database && !filters.database.includes(database)) {\n      filters.database.push(database);\n    }\n  });\n  return filters;\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector } from 'shared/store/state';\n\nexport const JobsInvocations = ({ children }) => {\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n\n  const dispatch = useDispatch();\n  const getJobs = data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n    dispatch(actions.getConnections.dispatchLoading(data));\n  };\n  const globalFilters = useSelector(globalFiltersSelector);\n\n  React.useEffect(() => {\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    getJobs({\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_name_filter: query.get('platform_filter_name') || '',\n      platform_dbms_filter: query.get('platform_filter_dbms') || '',\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      owner: query.get('user_filter') || '',\n      name_filter: query.get('name_filter') || ''\n    });\n  }, []);\n\n  return children;\n};\nJobsInvocations.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './root.local.scss';\nimport { MenuItem } from '@material-ui/core';\nimport { fetchEntity, selectEntity, setFilterType, setFilterSearch, openModal } from './actions';\nimport { getEntities, getBreadcrumbs, ENTITY_TYPES, getSelectedEntity } from './selectors';\nimport Entity from './components/Entity';\nimport SelectedEntity from './containers/SelectedEntity';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport debounce from 'lodash/debounce';\n\n/* eslint-disable */\n\n\nconst ENTITY_ICONS = {\n  root: <FolderIcon />,\n  namespace: <FolderIcon />,\n  constant: <FilterCenterFocusIcon />,\n  form: <AssignmentTurnedInIcon />,\n  schedule: <EventNoteIcon />,\n  account: <VpnKeyIcon />,\n  process: <SlowMotionVideoIcon />,\n  type: <DeveloperModeIcon />,\n  exception: <WarningIcon />,\n  prototype: <AssignmentIcon />,\n  CachedIcon:<CachedIcon />\n};\n\nlet searchWithDebounce = () => {};\n\nfunction RootModule({\n  fetchEntity,\n  selectEntity,\n  columns,\n  breadcrumbs,\n  filters,\n  setFilterType,\n  setFilterSearch,\n  selectedEntity,\n  entitiesStatus,\n  job\n}) {\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'not-fetched' || entitiesStatus[key] === 'failed') {\n        fetchEntity(key);\n      }\n    }\n\n    searchWithDebounce = debounce(value => {\n      setFilterSearch(value);\n    }, 700);\n    if (filters.search) {\n      setSearchInput(filters.search);\n    }\n  }, []);\n\n  function renderBreadcrumb(breadcrumb) {\n    return (\n      <span key={breadcrumb}>\n        <span className=\"breadcrumb\">{breadcrumb}</span> /{' '}\n      </span>\n    );\n  }\n\n  function renderColumn(columns, colNum) {\n    return (\n      <div key={colNum}>\n        {columns.rows.map(entity => (\n          <Entity\n            key={entity.name}\n            entity={entity}\n            selectEntity={selectEntity}\n            columns={columns}\n            entityIcons={ENTITY_ICONS}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function handleSearchChange(e) {\n    const val = e.target.value;\n    searchWithDebounce(val);\n    setSearchInput(val);\n  }\n\n  function loadingData() {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'fetching') {\n        return (\n          <div className=\"loading\">\n            <CircularProgress size={15} />\n            <span>Loading {key} entities...</span>\n          </div>\n        );\n      }\n    }\n\n    return null;\n  }\n\n\n  function renderColumns() {\n    if (Array.isArray(columns) && columns[0]?.rows?.length) {\n      return columns.map(renderColumn);\n    }\n\n    if (Object.values(entitiesStatus).find(e => e === 'fetching')) {\n      return null;\n    } else {\n      return 'No Entities Found.';\n    }\n  }\n\n  function clearCach(){\n     window.location.reload(false);\n     sessionStorage.removeItem(\"persist:root\");\n    \n  }\n\n  return (\n    <>\n      <Header title=\"System / Entities\" />\n      <Container maxWidth={false} classes={{ root: 'define-height-container' }}>\n        <div className=\"entities-breadcrumb\">{['root', ...breadcrumbs].map(renderBreadcrumb)}</div> \n        <br />\n        {sessionStorage.getItem(\"persist:root\") && <div><CachedIcon style={{ color: 'green',cursor: 'pointer' }}  onClick={e => clearCach()} /><span onClick={e => clearCach()} style={{fontSize: \"13px\",color: \"#047f04\",fontWeight: \"bolder\",cursor: 'pointer'}}>Clear cache </span> </div> }\n        <div className=\"entities-filters\">\n          <Select value={filters.type} onChange={ev => setFilterType(ev.target.value)}>\n            {[{ type: 'all', title: 'ALL' }, ...ENTITY_TYPES].map(type => (\n              <MenuItem key={type.type} value={type.type}>\n                {type.title}\n              </MenuItem>\n            ))}\n          </Select>\n          <div className=\"entities-search-wrap\">\n            <SimpleSearchInput value={searchInput} onChange={handleSearchChange} />\n          </div>\n        </div>\n        {loadingData()}\n        <Grid container spacing={3} classes={{ root: 'define-height-grid-root' }}>\n          <Grid item xs={9} classes={{ root: 'define-height' }}>\n            <div className=\"columns\">{renderColumns()}</div>\n          </Grid>\n          <Grid item xs={3}>\n            <SelectedEntity selectedEntity={selectedEntity} entityIcons={ENTITY_ICONS} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nRootModule.propTypes = {\n  fetchEntity: PropTypes.func,\n  selectEntity: PropTypes.func,\n  setFilterType: PropTypes.func,\n  setFilterSearch: PropTypes.func,\n  columns: PropTypes.array,\n  breadcrumbs: PropTypes.array,\n  filters: PropTypes.object,\n  selectedEntity: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    columns: getEntities(state),\n    breadcrumbs: getBreadcrumbs(state),\n    filters: state.entities.filters,\n    selectedEntity: getSelectedEntity(state),\n    entitiesStatus: state.entities.fetch_status\n  }),\n  { fetchEntity, selectEntity, setFilterType, setFilterSearch, openModal }\n)(RootModule);\n","import React from 'react';\nimport { Route, Link, Switch, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header/Header';\n\nimport { Button } from 'shared/components/controls';\n\nimport { HeaderPageSwitch } from './components/HeaderPageSwitch/HeaderPageSwitch';\n\nimport { UsersPage } from './users';\n\nimport { GroupsPage } from './groups';\n\nexport const UsersAndGroupsPage = () => {\n  return (\n    <>\n      <Header>\n        <UserManagementHeaderLinks />\n        <RightSideControls />\n      </Header>\n      <UserManagementSwitch />\n    </>\n  );\n};\n\nexport const UserManagementHeaderLinks = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  const routes = [\n    { to: `${url}/users`, label: 'Users' },\n    { to: `${url}/groups`, label: 'Groups' }\n  ];\n\n  return <HeaderPageSwitch active={location.pathname} routes={routes} />;\n};\n\nexport const RightSideControls = () => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  if (location.pathname.includes('create-new')) {\n    return null;\n  }\n\n  if (location.pathname.includes('users')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/users/create-new`} component={Link}>\n          Create User\n        </Button>\n      </div>\n    );\n  }\n\n  if (location.pathname.includes('groups')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/groups/create-new`} component={Link}>\n          Create Group\n        </Button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const UserManagementSwitch = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${url}`}>\n        <UsersPage />\n      </Route>\n      <Route path={`${url}/groups`}>\n        <GroupsPage />\n      </Route>\n      <Route path={`${url}/users`}>\n        <UsersPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default UsersAndGroupsPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { func, array, object } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { Main, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadAllUsersThunk } from '../store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\nimport { loadAllGroupsThunk } from '../groups/store/thunks';\n\nimport './root.scss';\n\nimport { ConnectedUserLoader } from './containers/UserLoader';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { UserCard } from '../components/UserCard/UserCard';\n\nimport { NoUserSelectedPage } from './pages/NoUsersSelected';\nimport { CreateNewUserPage } from './pages/CreateNewUser/CreateNewUser';\n\nexport const UsersPage = ({\n  allUsers,\n  selectedUser,\n  loadAllUsers,\n  allGroups,\n  loadAllGroups,\n  isLoading\n}) => {\n  useEffect(() => {\n    loadAllUsers();\n    if (allGroups.length === 0) {\n      loadAllGroups();\n    }\n  }, []);\n\n  function filterUserByQuery(user, query) {\n    return user.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const userLink = user => {\n    return `${match.url}/${user.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading users...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main>\n      <section className=\"users-search-section\">\n        <SearchableList items={allUsers} filter={filterUserByQuery}>\n          {user => <UserCard selected={selectedUser} user={user} href={userLink(user)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <UserSwitch />\n      </section>\n    </Main>\n  );\n};\n\nUsersPage.propTypes = {\n  allUsers: array,\n  selectedUser: object,\n  loadAllUsers: func\n};\n\nexport const UserSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewUserPage />\n      </Route>\n      <Route path={`${path}/:userName`}>\n        <ConnectedUserLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoUserSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allUsers: mapSortInsensitive(state.usersManager.users.all),\n    selectedUser: state.usersManager.users.selected,\n    allGroups: state.groups.all,\n    isLoading: state.usersManager.flags.users.loading\n  }),\n  dispatch => ({\n    loadAllUsers: () => dispatch(loadAllUsersThunk()),\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(UsersPage);\n","import React, { useEffect } from 'react';\nimport { func, array } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadAllGroupsThunk } from './store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { GroupCard } from './components/GroupCard/GroupCard';\n\nimport { ConnectedGroupLoader } from './pages/GroupView/GroupView';\nimport { CreateNewGroupPage } from './pages/CreateNewGroup/CreateNewGroup';\nimport { NoGroupSelectedPage } from './pages/NoGroupSelected';\n\nimport './root.local.scss';\n\nexport const GroupsPage = ({ allGroups, loadAllGroups, isLoading }) => {\n  useEffect(() => {\n    loadAllGroups();\n  }, []);\n\n  function filterGroupByQuery(group, query) {\n    return group.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const groupLink = group => {\n    return `${match.url}/${group.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading groups...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main>\n      <section className=\"search-list-section\">\n        <SearchableList items={allGroups} filter={filterGroupByQuery}>\n          {group => <GroupCard group={group} href={groupLink(group)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <GroupsPagesSwitch />\n      </section>\n    </Main>\n  );\n};\n\nGroupsPage.propTypes = {\n  allGroups: array,\n  loadAllGroups: func\n};\n\nexport const GroupsPagesSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewGroupPage />\n      </Route>\n      <Route path={`${path}/:groupName`}>\n        <ConnectedGroupLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoGroupSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allGroups: mapSortInsensitive(state.groups.all.filter(g => g.name !== 'user')),\n    isLoading: state.groups.ops.all.loading\n  }),\n  dispatch => ({\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(GroupsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, array, bool, object } from 'prop-types';\nimport moment from 'moment';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Center, RangeDatePicker } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper } from 'shared/components/layout';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions } from 'shared/store/actions';\nimport { Button } from 'shared/components/controls';\nimport { Header } from 'core/components/Header';\nimport { loadAllAccountsThunk, loadProtocolsThunk } from './store/thunks';\nimport { Treeview } from './treeview';\nimport { ConnectedBreadcrumbsTitle } from './containers/Breadcrumbs/Breadcrumbs';\nimport { ContentSwitch } from './components/ContentSwitch/ContentSwitch';\n\nimport { AddServerCard } from './containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from './containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from './containers/ImportCSV/ImportCSV';\n\nimport './root.local.scss';\n\nexport class ExplorerPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      anchorElement: null\n    };\n  }\n\n  componentDidMount() {\n    const { loadProtocols, loadAllAccounts } = this.props;\n\n    loadProtocols();\n    loadAllAccounts();\n  }\n\n  render() {\n    const {\n      treeviewData,\n      isLoading,\n      storeState: { level }\n    } = this.props;\n\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    return (\n      <>\n        <Header>\n          <h1 className=\"header-title\">System / Explorer</h1>\n          {level === 'workload' || level === 'license' ? (\n            <RangeDatePicker\n              onDatesChange={this.onChangeDatesHandler}\n              startDate={moment.unix(this.props.globalFilters.get('startDate'))}\n              endDate={moment.unix(this.props.globalFilters.get('endDate'))}\n            />\n          ) : null}\n        </Header>\n        <Main>\n          {isLoading ? (\n            <Center>\n              <Loader>Loading accounts...</Loader>\n            </Center>\n          ) : (\n            <>\n              <Treeview data={treeviewData} />\n              <Paper style={{ width: 'calc(100% - 232px)' }}>\n                <Paper.Header>\n                  <h1 className=\"breadcrumbs-title\">\n                    <ConnectedBreadcrumbsTitle />\n                  </h1>\n                  <div className=\"action-container\">\n                    <Button\n                      startIcon={<AddIcon />}\n                      className=\"action-btn\"\n                      aria-controls=\"simple-menu\"\n                      aria-haspopup=\"true\"\n                      onClick={this.handleClick}\n                      disabled={isDisabled}\n                    >\n                      Add connection\n                    </Button>\n                    <Menu\n                      id=\"connections-menu\"\n                      keepMounted\n                      anchorEl={this.state.anchorElement}\n                      open={Boolean(this.state.anchorElement)}\n                      onClose={this.handleClose}\n                    >\n                      <MenuItem onClick={this.handleClose}>\n                        <AddServerCard disabled={isDisabled} />\n                      </MenuItem>\n                      <MenuItem onClick={this.handleClose}>\n                        <AddDatabaseCard disabled={isDisabled} />\n                      </MenuItem>\n                      <MenuItem onClick={this.handleClose}>\n                        <ImportCSV disabled={isDisabled} />\n                      </MenuItem>\n                    </Menu>\n                  </div>\n                </Paper.Header>\n                <ContentSwitch activePage={level} />\n              </Paper>\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n\n  handleClick = event => {\n    this.setState({ anchorElement: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorElement: null });\n  };\n\n  onChangeDatesHandler = range => {\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n    }\n  };\n}\n\nExplorerPage.propTypes = {\n  treeviewData: array,\n  loadAllAccounts: func,\n  isLoading: bool,\n  storeState: object,\n  globalFilters: object,\n  setGlobalFilters: func\n};\n\nexport default connect(\n  state => ({\n    treeviewData: state.explorer.structured?.dbms || [],\n    isLoading: state.explorer.flags.accounts.loading || state.explorer.flags.protocols.loading,\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    loadAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    loadProtocols: () => dispatch(loadProtocolsThunk()),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(ExplorerPage);\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { ConnectedDBMS } from './layers/Dbms/Dbms';\n\nimport './root.local.scss';\n\nexport class Treeview extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <ul className=\"treeview-container\">\n        {data.map(dbms => (\n          <ConnectedDBMS key={dbms.protocol} data={dbms} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTreeview.propTypes = {\n  data: array\n};\n\nexport default Treeview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StorageSidebar, ObjectsSidebar } from './Sidebar';\nimport { StorageViewer, ObjectsViewer } from './Viewer';\n\nimport './root.local.scss';\n\nexport const DbObjects = ({\n  type,\n  data,\n  list,\n  dbName,\n  selectedItem,\n  setItem,\n  loadingFlags,\n  invalidObjects\n}) => {\n  const { loadingPoints, loadingDetails, loading } = loadingFlags;\n  if (type === 'storage') {\n    return (\n      <div className=\"db-objects-tabs\">\n        <StorageSidebar\n          dbName={dbName}\n          isLoading={loadingPoints}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n        <StorageViewer data={data} isLoading={loadingDetails} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"db-objects-tabs\">\n      <ObjectsSidebar\n        dbName={dbName}\n        invalidObjects={invalidObjects}\n        isLoading={loading}\n        list={list}\n        selectedItem={selectedItem}\n        setItem={setItem}\n      />\n      <ObjectsViewer data={data} isLoading={loading} />\n    </div>\n  );\n};\n\nDbObjects.propTypes = {\n  type: PropTypes.string,\n  data: PropTypes.object,\n  list: PropTypes.array,\n  selectedItem: PropTypes.string,\n  setItem: PropTypes.func,\n  dbName: PropTypes.string\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { actions } from 'session/store/actions';\nimport { currentUserSelector, beVersionSelector, beLicenceSelector, beHealthSelector } from 'session/store/state';\nimport { Navigation, UserMenu, Compile } from './components';\nimport pkg from '../../../../../package.json';\n\nimport MasLogo from '../../../../assets/images/mas_logo_white.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_white.svg';\nimport './sidebar.local.scss';\n\nexport class SidebarContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postgresStatus: null,\n      masDaemonStatus: null,\n      uptime1Minute: null,\n      daysUntilExpire:null,\n      licenseStatus:null,\n      expirationDate:null\n\n\n    };\n  }\n  componentDidMount() {\n    this.props.getBeVersion();\n    this.props.getBeLicence();\n    this.props.getBeHealth();\n \n  }\n\n     titleCase(str) {\n    let splitStr = str.toLowerCase().split(' ');\n    for (let i = 0; i < splitStr.length; i++) {\n        // You do not need to check if i is larger than splitStr length, as your for does that for you\n        // Assign it back to the array\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n    }\n    // Directly return the joined string\n    return splitStr.join(' '); \n }\n  \n  render() {\n    const running = {\n      height: \"10px\",\n      width: \"10px\",\n      backgroundColor: \"rgb(79, 219, 70)\",\n      borderRadius: \"50%\",\n      position: \"relative\",\n      left: \"6px\",\n      top: \"20px\"\n    }\n\n    const statusSpan = {\n      color: \"#fff\",\n      fontSize: \"11px\",\n      marginLeft: \"14px\",\n      textShadow: \"1px 1px 1px #3765af3b\",\n      position: \"relative\",\n      top: \"-2px\"\n    }\n    const stopped = {\n      height: \"10px\",\n      width: \"10px\",\n      backgroundColor: \"red\",\n      borderRadius: \"50%\",\n      position: \"relative\",\n      left: \"6px\",\n      top: \"20px\"\n    }\n\n\n    if (this.props.beHealth) {\n      let data = this.props.beHealth;\n      this.setState({\n     postgresStatus: this.props.beHealth.masSystemsMonitor.postgresStatus,\n     masDaemonStatus: this.props.beHealth.masSystemsMonitor.masDaemonStatus,\n      uptime1Minute:this.props.beHealth.masSystemsMonitor.uptime1Minute+','+this.props.beHealth.masSystemsMonitor.uptime5Minutes+','+this.props.beHealth.masSystemsMonitor.uptime15Minutes\n\n      })\n\n\n    }\n\n    if (this.props.beLicence) {\n      let data = this.props.beLicence;\n      this.setState({\n        daysUntilExpire:data.licensed_feature[1].daysUntilExpire,\n        expirationDate:data.licensed_feature[1].expirationDate,\n        licenseStatus:data.licensed_feature[1].licenseStatus,\n        description:data.licensed_feature[1].description\n        \n      })\n\n    }\n   \n\n    return (\n      \n      <div className={this.props.className}>\n        <div className=\"logo-container\">\n          <img className=\"vendita-logo img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          <LightTooltip\n            placement=\"right\"\n            title={\n              <>\n                <div>\n                  <span style={{ paddingRight: '2px' }}>UI </span>version:&nbsp;\n                  {pkg.version}\n                </div>\n                <div>\n                  <span>BE </span>version:&nbsp;\n                  {this.props.beVersion}\n                </div>\n\n                <div>\n                <span>BE </span>License: {(this.state.licenseStatus ? 'MAS Lite' : 'MAS Full')} <br />\n                  Expiration Date: {this.state.expirationDate} <br />\n                  Days Until Expire: {this.state.daysUntilExpire} <br />\n                  \n                </div>\n              </>\n            }\n          >\n            <img className=\"mas-logo img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n          </LightTooltip>\n        </div>\n        <div className=\"nav-area\">\n          <div style={{ position: \"relative\",\n    bottom: \"17px\",\n    right: \"2px\"}}>\n          {this.state.masDaemonStatus &&\n            <div style={{top:\"14px\",position:\"relative\"}}>\n              <div style={running}>\n                <span style={statusSpan}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          }\n\n\n          {!this.state.masDaemonStatus && \n            <div style={{top:\"14px\",position:\"relative\"}}>\n            <div style={stopped}>\n                <span style={statusSpan}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n\n          }\n\n\n          {this.state.postgresStatus &&\n            <div style={{top:\"18px\",position:\"relative\"}}>\n            <div style={running}>\n                <span style={statusSpan}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          }\n          {!this.state.postgresStatus &&\n            <div style={{top:\"18px\",position:\"relative\"}}>\n            <div style={stopped}>\n                <span style={statusSpan}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          }\n\n{this.state.uptime1Minute && \n<div style={{top:\"23px\",position:\"relative\"}}>\n            <div style={running}>\n        <span style={statusSpan}><a target=\"_blank\" href=\"/masmon.html\">Load {this.state.uptime1Minute && this.state.uptime1Minute}</a></span>\n              </div>\n            </div>\n  }\n\n\n{!this.state.uptime1Minute && \n<div style={{top:\"20px\",position:\"relative\"}}>\n            <div style={stopped}>\n        <span style={statusSpan}><a target=\"_blank\" href=\"/masmon.html\">Load {this.state.uptime1Minute && this.state.uptime1Minute}</a></span>\n              </div>\n            </div>\n  }\n            </div>\n          <Navigation />\n        </div>\n        <div className=\"bottom\">\n          <Compile />\n          <UserMenu user={this.props.currentUser.get('name')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebarContainer.propTypes = {\n  className: PropTypes.string,\n  currentUser: PropTypes.object.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  currentUser: currentUserSelector(state),\n  beVersion: beVersionSelector(state),\n  beLicence: beLicenceSelector(state),\n  beHealth: beHealthSelector(state)\n});\nexport const mapDispatchToProps = dispatch => ({\n  getBeVersion: data => dispatch(actions.getBeVersion.dispatchLoading(data)),\n  getBeLicence: data => dispatch(actions.getBeLicence.dispatchLoading(data)),\n  getBeHealth: data => dispatch(actions.getBeHealth.dispatchLoading(data))\n\n});\n\nSidebarContainer.defaultProps = {\n  className: 'sidebar'\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarContainer);\n\n\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  },\n\n\n}))(Tooltip);\n\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarOutline } from '@mdi/js';\n\nimport './favorites.local.scss';\n\nexport class Favorites extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-nav-favorites`}>\n        <SvgIcon>\n          <Icon path={mdiStarOutline} />\n        </SvgIcon>\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  className: PropTypes.string\n};\n\nFavorites.defaultProps = {\n  className: 'favorites'\n};\n\nexport default Favorites;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { navigationItems } from './constants';\n\nimport './navigation.local.scss';\n\nexport class Navigation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      navId: '',\n      anchorElement: null\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setCurrentNavItem();\n  }\n\n  componentDidUpdate() {\n    this.setCurrentNavItem();\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {navigationItems.map((item, index) => {\n          if (item.items && item.items.length > 0) {\n            return (\n              <div key={index}>\n                <div\n                  role=\"presentation\"\n                  key={index}\n                  className={`nav-item ${\n                    this.state.activeTab === index || this.state.navId === item.id ? ' active ' : ''\n                  } ${item.qaClass ? item.qaClass : ''}`}\n                  onMouseEnter={(event) => this.handlePopoverOpen(event, item.id)}\n                  onMouseLeave={() => this.handlePopoverClose(item.id)}\n                >\n                  <IconButton className=\"icon\">{item.icon}</IconButton>\n                  <p>{item.title}</p>\n                </div>\n                <Popover\n                  className=\"nav-sublist-container\"\n                  anchorEl={this.state.anchorElement}\n                  open={this.state.navId === item.id}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={this.setCloseDropdown}>\n                      <MenuList className=\"nav-sublist-menu\" id=\"menu-list-grow\">\n                        {item.items.map(subItem => (\n                          <MenuItem\n                            key={subItem.to}\n                            className={subItem.qaClass}\n                            to={subItem.to}\n                            component={Link}\n                            onClick={this.setCloseDropdown}\n                          >\n                            {subItem.title}\n                          </MenuItem>\n                        ))}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Popover>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              role=\"presentation\"\n              key={item.to}\n              className={`nav-item ${this.state.activeTab === index ? 'active' : ''} ${\n                item.qaClass ? item.qaClass : ''\n              }`}\n              onClick={() => this.setActiveTab(index, item.to)}\n              onMouseEnter={() => this.handlePopoverClose(item.id)}\n            >\n              <IconButton className=\"icon\">{item.icon}</IconButton>\n              <p>{item.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.props.history.push(page);\n    this.setState({ navId: '' });\n  };\n\n  handlePopoverOpen = (event, name) => {\n    this.setState({ navId: name, anchorElement: event.target });\n  };\n\n  handlePopoverClose = (name) => {\n    if (this.state.navId !== name) {\n      this.setState({ navId: '', anchorElement: null });\n    }\n  };\n\n  setActiveTab = (newActiveTab, page) => {\n    this.props.history.push(page);\n    this.setState({ activeTab: newActiveTab, navId: '' });\n  };\n\n  setCurrentNavItem() {\n    const index = navigationItems.findIndex(\n      item =>\n        item.to === this.props.location.pathname || this.props.location.pathname.startsWith(item.to)\n    );\n\n    if (this.state.activeTab !== index) {\n      this.setState({ activeTab: index });\n    }\n  }\n}\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nNavigation.defaultProps = {\n  className: 'navigation'\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nimport './notification.local.scss';\n\nexport class Notification extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-notification`}>\n        <NotificationsNoneIcon />\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  className: PropTypes.string\n};\n\nNotification.defaultProps = {\n  className: 'notification'\n};\n\nexport default Notification;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Logout } from 'session/pages';\n\nimport './user-menu.local.scss';\n\nexport class UserMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n\n    this.menuAnchorRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"user-menu qa-user-menu\"\n          ref={this.menuAnchorRef}\n          onClick={this.setToggleDropdown}\n          role=\"presentation\"\n        >\n          <LightTooltip placement=\"right\" title={this.props.user}>\n            <Avatar className=\"user-avatar\">{this.props.user.substring(0, 2).toUpperCase()}</Avatar>\n          </LightTooltip>\n        </div>\n\n        <Popover\n          className=\"user-menu-list-container\"\n          anchorEl={this.menuAnchorRef.current}\n          open={this.state.isVisible}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList\n                className=\"user-menu-list\"\n                autoFocusItem={this.state.isVisible}\n                id=\"menu-list-grow\"\n              >\n                <MenuItem\n                  className=\"qa-user-menu-groups\"\n                  onClick={event => this.setCloseDropdown(event, 'help')}\n                >\n                  <FormattedMessage id=\"navigation.help\" />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-logout\" to={Logout.path} component={Link}>\n                  <FormattedMessage id=\"navigation.logout\" />\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popover>\n      </>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page === 'help') {\n      window.open(\n        'https://masmanual.venditabeta.com/index.php/Vendita_MAS_Documentation_Library#User_Guides_MAS_3.0',\n        '_blank'\n      );\n    }\n\n    this.setState({ isVisible: false });\n  };\n\n  setToggleDropdown = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible\n    }));\n  };\n}\n\nUserMenu.propTypes = {\n  user: PropTypes.string.isRequired\n};\n\nexport default withRouter(UserMenu);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\n\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { postCompile } from 'shared/api/compile';\n\nimport { fetchEntity } from '../../../../../entities/actions';\n\nimport './compile.local.scss';\nimport { useDispatch } from 'react-redux';\n\nexport const Compile = () => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => setOpen(true),\n    close: () => {\n      setOpen(false);\n      setStep('confirmation');\n    }\n  };\n  const [step, setStep] = useState('confirmation');\n\n  return (\n    <>\n      <div className=\"compile\">\n        <Tooltip title=\"Compile\">\n          <VideoLibraryOutlinedIcon onClick={modalActions.open} />\n        </Tooltip>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {step === 'confirmation' && <Confirmation setStep={setStep} />}\n        {step === 'compiler' && <Compiler />}\n      </Modal>\n    </>\n  );\n};\n\nconst Confirmation = ({ setStep }) => {\n  const { actions } = useContext(ModalContext);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '350px',\n        maxHeight: '368px',\n        maxWidth: '65vw'\n      }}\n    >\n      <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n      <Paper.Content scrollable={false}>\n        <Result type=\"fail\">\n          <BodyText>\n            <p style={{ fontWeight: 'normal' }}>\n              This command will recompile all the processes and refresh the process list. This\n              usually takes about 1 to 2 minutes.\n            </p>\n            <p style={{ textAlign: 'center' }}>Do you want to proceed?</p>\n          </BodyText>\n        </Result>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            onClick={() => {\n              actions.close();\n            }}\n          >\n            No\n          </Button>\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            onClick={() => {\n              setStep('compiler');\n            }}\n          >\n            Yes\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </Paper>\n  );\n};\n\nconst Compiler = () => {\n  const [compilation, setCompilation] = useState('compiling');\n  const dispatch = useDispatch();\n\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    console.log('[started compilation'); // eslint-disable-line\n    postCompile()\n      .then(() => {\n        setCompilation('refreshing');\n\n        Promise.all([dispatch(fetchEntity('process')), dispatch(fetchEntity('namespace'))])\n          .then(() => {\n            setCompilation('success');\n            console.log('[succeded compilation'); // eslint-disable-line\n          })\n          .catch(() => {\n            setCompilation('success-no-reload');\n            console.log(results, '[succeded compilation. failed to reload entities.'); // eslint-disable-line\n          });\n      })\n      .catch(() => {\n        setCompilation('failed');\n        console.log('[failed compilation'); // eslint-disable-line\n      });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '430px',\n        minHeight: '330px'\n      }}\n    >\n      <ModalHeader icon={<VideoLibraryOutlinedIcon />} title=\"Compile\" />\n      <Switch value={compilation}>\n        <Switch.Case value=\"compiling\">\n          <Center>\n            <Loader>Running compilation...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"refreshing\">\n          <Center>\n            <Loader>Loading processes...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"failed\">\n          <Center>\n            <Result type=\"fail\">\n              <Result.Text compact>Compilation failed.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success-no-reload\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded</Result.Text>\n              <Result.Text compact>Could not refresh processes list.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header';\n\nimport { Main, Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-process.local.scss';\nimport { Breadcrumbs, Link } from '@material-ui/core';\n\nimport ConnectedJobView from './job-view';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getQuery, getInvocationStatus, getInvocation } from './store/selectors';\nimport { processQuery } from './store/actions';\nimport { InvocationStatus } from './store/constants';\n\nimport './root.local.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\n\nconst JobProcess = () => {\n  const query = useQuery();\n\n  const uuid = query.get('invocation');\n  const processName = query.get('process');\n  const redirected = query.get('redirected');\n\n  return (\n    <>\n      <Header>\n        <Breadcrumbs classes={{ root: 'job-main-breadcrumbs' }} aria-label=\"breadcrumb\">\n          <LinkRouter to=\"/jobs\">Jobs</LinkRouter>\n          <OtherMainLinks />\n        </Breadcrumbs>\n      </Header>\n      <Main>\n        <Paper>\n          <PrepareFlow uuid={uuid} process={processName}>\n            <ConnectedJobView redirected={redirected === 'true'} />\n          </PrepareFlow>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n\nexport default JobProcess;\n\nfunction PrepareFlow({ children, uuid, process }) {\n  const query = useSelector(getQuery);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(processQuery(uuid, process));\n  }, [uuid]);\n\n  if (query.uuid !== uuid) {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Setting up invocation viewer</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return children;\n}\n\nfunction OtherMainLinks() {\n  const status = useSelector(getInvocationStatus);\n  const invocation = useSelector(getInvocation);\n\n  if (status === InvocationStatus.NEW) {\n    return <div className=\"current-job\">New Job</div>;\n  }\n\n  if (invocation && invocation.designation) {\n    return (\n      <LimitlessTooltip\n        placement=\"bottom-start\"\n        title={\n          <>\n            <p>Invocation: {invocation.designation}</p>\n            {invocation.schedule && <p>Schedule: {invocation.schedule}</p>}\n          </>\n        }\n      >\n        <div className=\"current-job\">{invocation.designation}</div>\n      </LimitlessTooltip>\n    );\n  }\n\n  return null;\n}\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  CHECK_AUTHORIZATION: '[session] CHECK_AUTHORIZATION',\n  LOGIN: '[session] LOGIN',\n  LOGOUT: '[session] LOGOUT',\n  BE_VERSION: '[session] BE_VERSION',\n  BE_LICENCE: '[session] BE_LICENCE',\n  BE_HEALTH: '[session] BE_HEALTH'\n};\n\nexport const sessionActions = {\n  checkAuthorization: new ActionCreator(actionsTypes.CHECK_AUTHORIZATION),\n  login: new ActionCreator(actionsTypes.LOGIN),\n  logout: new ActionCreator(actionsTypes.LOGOUT),\n  getBeVersion: new ActionCreator(actionsTypes.BE_VERSION),\n  getBeLicence: new ActionCreator(actionsTypes.BE_LICENCE),\n  getBeHealth: new ActionCreator(actionsTypes.BE_HEALTH)\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* checkAuthorization({ payload }) {\n  RestClient.setBasicAuth();\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_USER(payload), {\n      page_size: 2147483645\n    });\n\n    const userDetails = {\n      name: response.data.data.source.user\n    };\n\n    if (response.data.data.users && response.data.data.users[0]) {\n      [userDetails.details] = response.data.data.users;\n    }\n\n    yield put(actions.checkAuthorization.dispatchSuccess(userDetails));\n  } catch (errors) {\n    yield put(actions.checkAuthorization.dispatchFail());\n  }\n}\n\nexport function* CheckAuthorizationEffect() {\n  yield takeEvery(actions.checkAuthorization.getLoadingAction(), checkAuthorization);\n}\n","export default {\n  INTL: 'en',\n  BASE: {\n    HOST: '/mas',\n    VERSION: '',\n    TIMEOUT: 2000 * 60,\n    ENDPOINTS: {\n      LOGIN: '/authenticate',\n      CURRENT_USER: name => `user/${name}`,\n      DAEMON_STATUS: 'daemon/status',\n      JOB_COUNT: '/invocation/dashboard/job_count',\n      JOBS: '/invocation',\n      PROCESSES: '/process',\n      USERS: '/user',\n      DATATYPES: '/type',\n      PROTOTYPES: '/prototype',\n      GROUPS: '/group',\n      ACCOUNTS: '/account',\n      FORMS: '/form',\n      FORM: '/form',\n      PROTOCOLS: '/protocol',\n      DOWNLOAD_PACKAGING: '/download/oracle_report',\n      SESSIONS: name => `/system/explorer/${name}/all_sessions`,\n      DB_LAST_BACKUP: '/system/explorer/backup_last_24hr',\n      DB_STATUS: '/system/explorer/dbstate',\n      EXECUTIVE_DASHBOARD: '/execdashboard',\n      VIRTUAL_EXECUTIVE_DASHBOARD: 'execdashboard/virtual',\n      STORAGE_DF: name => `/system/explorer/${name}/df_free_space`,\n      STORAGE_TS: '/system/explorer/ts_usage',\n      BE_VERSION: '/version',\n      BE_LICENCE: '/mondata?id_montype=1',\n      BE_HEALTH: '/mondata?id_montype=2',\n      UPLOAD_ACCOUNTS: '/account/batch',\n      DOWNLOAD_CSV_TEMPLATE: '/download/csv_batch_import_sample'\n    }\n  }\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\nimport Cookie from 'js-cookie';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* login(action) {\n  try {\n    Cookie.set(\n      'Authorization',\n      Buffer.from(`${action.payload.username}:${action.payload.password}`).toString('base64')\n    );\n    RestClient.setBasicAuth();\n    yield RestClient.post(CONSTANTS.BASE.ENDPOINTS.LOGIN);\n    yield put(actions.login.dispatchSuccess());\n    yield put(actions.checkAuthorization.dispatchLoading(action.payload.username));\n    localStorage.setItem('username', JSON.stringify(action.payload.username));\n  } catch (errors) {\n    if (!errors.response) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: 'Unknown Error. Please contact the administrator!'\n          }\n        ])\n      );\n      return;\n    }\n\n    if (errors.response.data.status === 422) {\n      yield put(actions.login.dispatchFail(errors.response.data.error.details));\n      return;\n    }\n\n    if (errors.response.data.status === 401) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors.response.data.status === 500) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors?.response?.statusText) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    throw errors;\n  }\n}\n\nexport function* LoginEffect() {\n  yield takeEvery(actions.login.getLoadingAction(), login);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { Login } from 'session/pages';\n\nfunction loginPath() {\n  return process.env.NODE_ENV === 'development'\n    ? window.location.replace(Login.path)\n    : window.location.replace(`/ui/#${Login.path}`);\n}\n\nfunction* logout() {\n  localStorage.removeItem('username');\n  RestClient.removeBasicAuth();\n  loginPath();\n  yield put(actions.logout.dispatchSuccess());\n}\n\nexport function* LogoutEffect() {\n  yield takeEvery(actions.logout.getLoadingAction(), logout);\n}\n","module.exports = __webpack_public_path__ + \"svgs/ae6021ac50f5c1e93465ff63ea3769d4.svg\";","module.exports = __webpack_public_path__ + \"svgs/0e998e182da8161761cd7209592a7dae.svg\";","module.exports = __webpack_public_path__ + \"svgs/fc315038f28eb52f1b1228e70e8919d6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { isInclusivelyAfterDay } from 'shared/lib';\n\nimport { DateRangePicker, DateRangePickerPhrases, DateRangePickerShape } from 'react-dates';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n} from './constants';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  // initialStartDate: momentPropTypes.momentObj,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  startDateId: PropTypes.string,\n  startDatePlaceholderText: PropTypes.string,\n  endDateId: PropTypes.string,\n  endDatePlaceholderText: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDates: PropTypes.bool,\n  showDefaultInputIcon: PropTypes.bool,\n  customInputIcon: PropTypes.object,\n  customArrowIcon: PropTypes.node,\n  customCloseIcon: PropTypes.object,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: PropTypes.string,\n  orientation: PropTypes.string,\n  anchorDirection: PropTypes.string,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.string,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDates: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  // navigation related props\n  navPosition: PropTypes.string,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.string,\n  renderDayContents: PropTypes.func,\n  minimumNights: PropTypes.number,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization\n  displayFormat: PropTypes.func,\n  monthFormat: PropTypes.string,\n  phrases: DateRangePickerPhrases,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: (day) => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: (date) => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  render() {\n    const { focusedInput } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={this.props.startDate}\n          endDate={this.props.endDate}\n        />\n      </div>\n    );\n  }\n\n  onDatesChange(range) {\n    this.props.onDatesChange(range);\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  GET_JOBS: '[jobs] GET_JOBS',\n  GET_CONNECTIONS: '[jobs] GET_CONNECTIONS',\n  SEARCH_JOBS: '[jobs] SEARCH_JOBS'\n};\n\nexport const jobsActions = {\n  getJobs: new ActionCreator(actionsTypes.GET_JOBS),\n  getConnections: new ActionCreator(actionsTypes.GET_CONNECTIONS),\n  searchJobs: new ActionCreator(actionsTypes.SEARCH_JOBS)\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SEARCH_PROCESSES: '[processes] SEARCH_PROCESSES',\n};\n\nexport const processActions = {\n  searchProcesses: new ActionCreator(actionsTypes.SEARCH_PROCESSES),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  UPDATE_GLOBAL_FILTERS: '[shared] UPDATE_GLOBAL_FILTERS',\n};\n\nexport const globalFiltersActions = {\n  setGlobalFilters: new ActionCreator(actionsTypes.UPDATE_GLOBAL_FILTERS),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SET_FILTER_STATUS: '[dashboard] SET_FILTER_STATUS'\n};\n\nexport const filterStatusActions = {\n  setFilterStatus: new ActionCreator(actionsTypes.SET_FILTER_STATUS)\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport function checkDaemon() {\n  return RestClient.get(CONSTANTS.BASE.ENDPOINTS.DAEMON_STATUS);\n}\n","import { createSelector } from 'reselect';\n\nexport const isDaemonRunning = createSelector(\n  state => state.daemon,\n  daemon => {\n    return daemon.running;\n  }\n);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center, Switch } from 'shared/components';\n\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\n\nimport { UsageListing } from './components/UsageListing/UsageListing';\n\nexport const ServerUsage = ({ loading, usage, getAllAccounts }) => {\n  useEffect(() => {\n    getAllAccounts();\n  }, []);\n\n  return (\n    <Switch value={loading}>\n      <Switch.Case value>\n        <Center>\n          <Loader>Loading Usage Parameters</Loader>\n        </Center>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <UsageListing usage={usage} />\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nexport const ConnectedServerUsage = connect(\n  state => {\n    return {\n      loading: state.explorer.flags.serversUsage.loading,\n      usage: state.explorer.serversUsage\n    };\n  },\n  dispatch => ({\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'dashboard' }))\n  })\n)(ServerUsage);\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPercent } from '@mdi/js';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\n\nimport { UsageEntry } from '../UsageEntry/UsageEntry';\n\nimport './UsageListing.local.scss';\n\nexport const UsageListing = ({ usage }) => {\n  return (\n    <>\n      <header>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiPercent} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={usage.highLoadCount} />\n        <StringLabel text=\"servers with high load\" />\n      </header>\n      <div className=\"servers-list\">\n        {usage.servers.map(server => (\n          <UsageEntry key={server.address} server={server} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './UsageEntry.local.scss';\n\nexport const UsageEntry = ({ server }) => {\n  const { dbms, address, usage } = server;\n\n  const getServerUsageClass = () => {\n    if (usage <= 50) {\n      return 'low-usage';\n    }\n\n    if (usage > 50 && usage <= 75) {\n      return 'medium-usage';\n    }\n\n    return 'high-usage';\n  };\n\n  return (\n    <div className={`server-usage-item ${getServerUsageClass()}`}>\n      <div className=\"icon-container\">\n        <SvgIcon>\n          <Icon path={mdiDns} />\n        </SvgIcon>\n      </div>\n      <div className=\"name-container\">\n        <span className=\"name\">\n          <span className=\"dbms\">{dbms}</span>\n          <span className=\"separator\">/</span>\n          <span className=\"server\">{address}</span>\n        </span>\n        <div className=\"full-percentage\">\n          <div className=\"filled\" style={{ width: `${usage}%` }} />\n        </div>\n      </div>\n      <div className=\"percent-container\">\n        <span>{usage}%</span>\n      </div>\n    </div>\n  );\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\n// import mock from './_mock.json';\n\nfunction* jobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    // yield put(actions.getJobs.dispatchSuccess(mock));\n    yield put(actions.getJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    let reason = '';\n\n    if (\n      errors &&\n      errors.response &&\n      errors.response.data &&\n      errors.response.data.messages &&\n      errors.response.data.messages[0] &&\n      errors.response.data.messages[0].text &&\n      errors.response.data.messages[0].text.startsWith('permission denied')\n    ) {\n      reason = 'rights';\n    }\n\n    yield put(actions.getJobs.dispatchFail({ reason }));\n  }\n}\n\nexport function* JobsEffect() {\n  yield takeEvery(actions.getJobs.getLoadingAction(), jobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* connections() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n      page_size: 2147483645\n    });\n\n    yield put(actions.getConnections.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getConnections.dispatchFail(errors));\n  }\n}\n\nexport function* JobsConnectionsEffect() {\n  yield takeEvery(actions.getConnections.getLoadingAction(), connections);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchJobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    yield put(actions.searchJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchJobs.dispatchFail(errors));\n  }\n}\n\nexport function* SearchJobsEffect() {\n  yield takeEvery(actions.searchJobs.getLoadingAction(), searchJobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchProcesses(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROCESSES, query.payload);\n\n    yield put(actions.searchProcesses.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchProcesses.dispatchFail(errors));\n  }\n}\n\nexport function* SearchProcessesEffect() {\n  yield takeEvery(actions.searchProcesses.getLoadingAction(), searchProcesses);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\n\nfunction* globalFilters(filters) {\n  yield put(actions.setGlobalFilters.dispatchSuccess(filters.payload));\n}\n\nexport function* GlobalFiltersEffect() {\n  yield takeEvery(actions.setGlobalFilters.getLoadingAction(), globalFilters);\n}\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  SELECT_USER,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  REMOVE_USER_FROM_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nimport { mapUsersData, mapLoadedUser } from '../mappers';\n\nexport const initialState = {\n  users: {\n    all: [],\n    selected: null\n  },\n  flags: {\n    users: { loading: false },\n    user: { loading: false, deactivating: false },\n    privileges: { disabled: false }\n  },\n  debug: {\n    user: {},\n    groups_update: {},\n    privileges: {}\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_USERS)]: draft => {\n    draft.flags.users.loading = true;\n  },\n  [types.success(LOAD_ALL_USERS)]: (draft, { payload }) => {\n    draft.users.all = mapUsersData(payload);\n\n    draft.flags.users.loading = false;\n  },\n  [types.action(SELECT_USER)]: (draft, { payload }) => {\n    draft.users.selected = payload;\n  },\n  [types.loading(LOAD_USER)]: draft => {\n    draft.flags.user.loading = true;\n    draft.users.selected = null;\n  },\n  [types.success(LOAD_USER)]: (draft, { payload }) => {\n    draft.flags.user.loading = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.loading(DEACTIVATE_USER)]: draft => {\n    draft.flags.user.deactivating = true;\n  },\n  [types.success(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.users.all = mapUsersData(payload);\n  },\n  [types.fail(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.action(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.loading(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(REMOVE_USER_FROM_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(CREATE_USER)]: draft => {\n    draft.flags.user.creating = true;\n  },\n  [types.success(CREATE_USER)]: draft => {\n    draft.flags.user.creating = false;\n  },\n  [types.fail(CREATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.creating = false;\n    draft.debug.user.errors = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  PATCH_SELECTED_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport const initialState = {\n  all: [],\n  ops: {\n    all: { done: false, loading: false },\n    selected: { done: false, loading: false },\n    privileges: { done: false, loading: false },\n    remove: { loading: false },\n    create: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_GROUPS)]: draft => {\n    draft.ops.all = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.loading(LOAD_GROUP)]: draft => {\n    draft.ops.selected = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_GROUP)]: (draft, { payload }) => {\n    const response = payload;\n    draft.selected = response.data.groups[0]; //eslint-disable-line\n    draft.ops.selected = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_GROUP)]: (draft, { payload }) => {\n    draft.selected = null;\n    draft.ops.selected = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.action(PATCH_SELECTED_GROUP)]: (draft, { payload }) => {\n    draft.selected = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REMOVE_USERS_FROM_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(REMOVE_GROUPS_FROM_GROUP)]: draft => {\n    draft.ops.group_subgroups = { loading: true };\n  },\n  [types.success(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(ADD_USERS_TO_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: true };\n  },\n  [types.success(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: false };\n  },\n  [types.fail(CREATE_GROUP)]: (draft, { payload }) => {\n    draft.ops.create = {\n      loading: false,\n      errors: payload\n    };\n  },\n  [types.loading(DELETE_GROUP)]: draft => {\n    draft.ops.remove = { loading: true };\n  },\n  [types.success(DELETE_GROUP)]: draft => {\n    draft.selected = null;\n    draft.ops.remove = { loading: false };\n  },\n  [types.fail(DELETE_GROUP)]: (draft, { payload }) => {\n    draft.ops.remove = { loading: false, errors: payload };\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_ACCOUNTS,\n  CHANGE_STATE,\n  LOAD_ALL_LICENSES,\n  LICENSE_FULL_REPORT,\n  LOAD_SESSIONS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  UPDATE_DB_STATUS,\n  LOAD_STORAGE_POINTS,\n  LOAD_OBJECT_DETAILS,\n  PROVIDE_SERVERS_USAGE,\n  SET_STORAGE_NS,\n  SET_SELECTED_OBJECT,\n  LOAD_STORAGE_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_COLLECTION_PROCESS,\n  EXECUTE_COLLECTION_PROCESS\n} from '../actions';\nimport {\n  mapAccountsTree,\n  mapAccountsNewStructure,\n  mapProtocols,\n  mapUpdateDBStatus\n} from '../mappers';\n\nexport const initialState = {\n  accounts: [],\n  rawAccounts: [],\n  flags: {\n    accounts: { loading: false },\n    protocols: { loading: false },\n    sessions: { loading: false },\n    storage: { loadingPoints: false, loadingDetails: false },\n    objects: { loading: false },\n    license: { loading: false },\n    reports: { loading: false },\n    serversUsage: { loading: true },\n    collectionProcesses: {\n      hardware: { loading: false, wasExecuted: false },\n      software: { loading: false, wasExecuted: false },\n      vmware: { loading: false },\n      packaging: { loading: false }\n    }\n  },\n  sessions: [],\n  storage: {\n    storedEntries: {},\n    selected: null\n  },\n  objects: {\n    selectedOwner: null,\n    selectedObject: null,\n    storedEntries: {}\n  },\n  licenses: [],\n  reports: {},\n  protocols: [],\n  state: {\n    path: '',\n    level: 'all-dbms'\n  },\n  serversUsage: {},\n  dbLastBackup: [],\n  dbStatus: [],\n  collectionProcesses: {\n    hardware: null,\n    software: null,\n    vmware: null,\n    packaging: null\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_ACCOUNTS)]: draft => {\n    draft.flags.accounts.loading = true;\n  },\n  [types.success(LOAD_ALL_ACCOUNTS)]: (draft, { payload }) => {\n    draft.accounts = mapAccountsTree(payload.data.accounts);\n    draft.structured = mapAccountsNewStructure(payload.data.accounts, payload.protocols);\n    draft.rawAccounts = payload.data.accounts;\n\n    draft.state.path = '';\n    draft.state.level = 'all-dbms';\n\n    draft.flags.accounts.loading = false;\n  },\n  [types.loading(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = true;\n  },\n  [types.success(LOAD_PROTOCOLS)]: (draft, { payload }) => {\n    draft.protocols = mapProtocols(payload.data.protocols);\n    draft.flags.protocols.loading = false;\n  },\n  [types.fail(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = false;\n  },\n  [CHANGE_STATE]: (draft, { payload }, base) => {\n    draft.state = { ...base.state, ...payload };\n  },\n  [types.loading(LOAD_ALL_LICENSES)]: draft => {\n    draft.flags.license.loading = true;\n  },\n  [types.success(LOAD_ALL_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload.data.invocations;\n    draft.flags.license.loading = false;\n  },\n  [types.loading(LICENSE_FULL_REPORT)]: draft => {\n    draft.flags.reports.loading = true;\n  },\n  [types.success(LICENSE_FULL_REPORT)]: (draft, { payload }, base) => {\n    draft.reports = { ...base.reports, ...payload };\n    draft.flags.reports.loading = false;\n  },\n  [types.loading(PROVIDE_SERVERS_USAGE)]: draft => {\n    draft.flags.serversUsage.loading = true;\n  },\n  [types.success(PROVIDE_SERVERS_USAGE)]: (draft, { payload }) => {\n    draft.flags.serversUsage.loading = false;\n    draft.serversUsage = payload;\n  },\n  [types.loading(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = true;\n  },\n  [types.fail(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.success(LOAD_STORAGE_POINTS)]: (draft, { payload }, base) => {\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      points: payload.data\n    };\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.loading(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = true;\n  },\n  [types.fail(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = false;\n  },\n  [types.success(LOAD_STORAGE_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.storage.loadingDetails = false;\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      details: payload.data\n    };\n  },\n  [types.success(SET_STORAGE_NS)]: (draft, { payload }) => {\n    draft.storage.selected = payload;\n  },\n  [types.loading(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = true;\n  },\n  [types.fail(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = false;\n  },\n  [types.success(LOAD_OBJECT_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.objects.loading = false;\n    draft.objects.storedEntries[payload.key] = { ...base.objects.storedEntries[payload.key] };\n    payload.data.forEach(({ name, res }) => {\n      draft.objects.storedEntries[payload.key][name] = res;\n    });\n  },\n  [types.success(SET_SELECTED_OBJECT)]: (draft, { payload }) => {\n    draft.objects.selectedObject = payload.object;\n    draft.objects.selectedOwner = payload.owner;\n  },\n  [types.success(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = true;\n  },\n  [types.success(LOAD_SESSIONS)]: (draft, { payload }) => {\n    draft.flags.sessions.loading = false;\n    // sort flags should be sent to backend and not stored on state.\n    draft.flags.sessions.sort = payload.sort;\n    draft.sessions = payload.data;\n  },\n  [types.success(PROVIDE_DB_LAST_BACKUP)]: (draft, { payload }) => {\n    draft.dbLastBackup = payload;\n  },\n  [types.success(PROVIDE_DB_STATUS)]: (draft, { payload }) => {\n    draft.dbStatus = payload;\n  },\n  [types.success(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, true);\n  },\n  [types.fail(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = true;\n  },\n  [types.success(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n    draft.collectionProcesses[payload.name] = payload.data;\n  },\n  [types.fail(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n  },\n  [EXECUTE_COLLECTION_PROCESS]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].wasExecuted = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\nimport {\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  DESELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\nimport { mapAllServers, mapVirtualServers } from '../mappers';\n\nexport const initialState = {\n  rawEntries: [],\n  allServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  selectedServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  rawVirtualServers: [],\n  virtualServers: [],\n  flags: {\n    dashboard: { loading: false, callFailed: false },\n    virtual: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = true;\n  },\n  [types.success(PROVIDE_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawEntries = payload.execdashboard;\n    draft.allServers = mapAllServers(payload.execdashboard);\n    draft.selectedServers = mapAllServers(payload.execdashboard);\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [DESELECT_ALL]: draft => {\n    draft.selectedServers = [];\n  },\n  [SELECT_ALL]: (draft, { payload }) => {\n    draft.selectedServers = mapAllServers(payload);\n  },\n  [TOGGLE_SERVER]: (draft, { payload }) => {\n    draft.selectedServers = payload;\n  },\n  [types.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = true;\n  },\n  [types.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawVirtualServers = payload?.execdashboard_virtual;\n    draft.virtualServers = mapVirtualServers(payload?.execdashboard_virtual);\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","export const initialState = {\n  data: {},\n  fetch_status: {\n    account: 'not-fetched',\n    constant: 'not-fetched',\n    exception: 'not-fetched',\n    form: 'not-fetched',\n    namespace: 'not-fetched',\n    process: 'not-fetched',\n    prototype: 'not-fetched',\n    schedule: 'not-fetched',\n    type: 'not-fetched',\n    alias: 'not-fetched'\n  },\n  isLoading: true,\n  breadcrumbs: [],\n  filters: {\n    type: 'all',\n    search: ''\n  }\n};\n\nexport function FETCH_ENTITIES_REQUEST(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'fetching';\n}\n\nexport function FETCH_ENTITIES_SUCCESS(nextState, { entityType, result }) {\n  nextState.data[entityType] = result;\n  nextState.fetch_status[entityType] = 'fetched';\n}\n\nexport function FETCH_ENTITIES_FAILURE(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'failed';\n}\n\nexport function FETCH_ENTITIES_ALL_REQUEST(nextState) {\n  nextState.isLoading = true;\n}\n\nexport function FETCH_ENTITIES_ALL_SUCCESS(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function FETCH_ENTITIES_ALL_FAILURE(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function SELECT_ENTITY(nextState, { entity, index }, state) {\n  nextState.breadcrumbs.splice(index, state.breadcrumbs.length - 1);\n  nextState.breadcrumbs[index] = entity.name.split('.').pop();\n}\n\nexport function CLEAR_SELECTED_ENTITY(nextState) {\n  nextState.breadcrumbs = [];\n}\n\nexport function UPDATE_FILTERS(nextState, { name, value }) {\n  nextState.filters[name] = value;\n  if (name === 'type' || name === 'search') {\n    nextState.breadcrumbs = [];\n  }\n}\n","export const initialState = {\n  running: true\n};\n\nexport function DAEMON_STATUS_REQUEST() {}\n\nexport function DAEMON_STATUS_SUCCESS(nextState, { result }) {\n  nextState.running = !!result?.data?.data?.running;\n}\n\nexport function DAEMON_STATUS_FAILURE(nextState) {\n  nextState.running = false;\n}\n","import { InvocationStatus } from './constants';\n\nexport const initialState = {\n  loading: true,\n  query: { processed: false },\n  fetchedInvocation: false,\n  invocation: { status: 'NOT_FETCHED' }\n};\n\nexport function PROCESS_QUERY(nextState, { uuid, process }) {\n  nextState.query = { processed: true, uuid, process };\n  if (uuid) {\n    nextState.invocation = { status: 'NOT_FETCHED' };\n  } else {\n    nextState.invocation = { status: '__NEW__', process: process || '' };\n  }\n}\n\nexport function FETCH_INVOCATION_SUCCESS(nextState, { result }) {\n  const [recieved] = result.data.data.invocations;\n  nextState.invocation = recieved;\n}\n\nexport function FETCH_INVOCATION_FAILURE(nextState, { process }) {\n  nextState.invocation = { status: InvocationStatus.NEW, process };\n}\n\nexport function REPLACE_INVOCATION(nextState, { invocation }) {\n  nextState.invocation = invocation;\n}\n","export const api = () => next => async action => {\n  const { type, promise, schema, ...rest } = action;\n  const isPromise = promise instanceof Promise;\n  if (!isPromise || !type) {\n    next(action);\n    return;\n  }\n\n  next({ type: `${type}_REQUEST`, ...rest });\n  try {\n    const result = await promise;\n    if (schema) {\n      next({ type, ...rest, data: result, schema });\n    }\n    next({ type: `${type}_SUCCESS`, ...rest, result });\n  } catch (error) {\n    console.error('[middlewares] error: ', error); // eslint-disable-line\n    next({ type: `${type}_FAILURE`, ...rest, error });\n  }\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  ADD_NOTIFICATIONS: '[core] ADD_NOTIFICATIONS',\n  REMOVE_NOTIFICATION: '[core] REMOVE_NOTIFICATION',\n};\n\nexport const notificationActions = {\n  addNotifications: new ActionCreator(actionsTypes.ADD_NOTIFICATIONS),\n  removeNotification: new ActionCreator(actionsTypes.REMOVE_NOTIFICATION),\n};\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { ViewTabs } from '../ViewTabs/ViewTabs';\nimport { Documentation } from '../Documentation/Documentation';\nimport { ConnectedScheduleForm } from '../../containers/ScheduleForm/ScheduleForm';\nimport { getProcess } from 'shared/api/process';\nimport { getSchedule } from 'shared/api/schedule';\n\nexport const ScheduleModal = ({\n  open,\n  actions,\n  invocation,\n  isScheduled,\n  result,\n  setResult,\n  selectedOption,\n  filledValues,\n  setFilledValues\n}) => {\n  const [tab, setTab] = useState('schedule');\n  const [processDetails, setProcessDetails] = useState({});\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const newSchedule = selectedOption === 'edit-schedule';\n  const formRef = useRef();\n  useEffect(() => {\n    if (isScheduled && invocation?.schedule) {\n      getSchedule(invocation.schedule)\n        .then(data => {\n          if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n            setScheduleDetails(data.data.data.schedules[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n    if (invocation && invocation.process) {\n      getProcess(invocation.process)\n        .then(data => {\n          if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n            setProcessDetails(data.data.data.processes[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n  }, []);\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '85vw',\n          minHeight: '85vh',\n          maxWidth: '85vw',\n          maxHeight: '85vh'\n        }}\n      >\n        <ModalHeader\n          title=\"New Schedule\"\n          icon={\n            <SvgIcon>\n              <SlowMotionVideoIcon />\n            </SvgIcon>\n          }\n          formikRef={formRef}\n        />\n        <Switch value={result}>\n          <Switch.Case value=\"success\">\n            <Result type=\"success\">\n              <Result.Text>Schedule was added successfully!</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Done\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"fail\">\n            <Result type=\"fail\">\n              <Result.Text>\n                <p>An error occurred and the new schedule could not be added.</p>{' '}\n                <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                  <a\n                    role=\"presentation\"\n                    onClick={() => {\n                      setResult('');\n                    }}\n                  >\n                    Go back to form\n                  </a>\n                </p>\n              </Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Close\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"\">\n            <Paper.Header>\n              <ViewTabs active={tab} changeTab={setTab} invocation={invocation} />\n            </Paper.Header>\n            <Switch value={tab}>\n              <Switch.Case value=\"schedule\">\n                <ConnectedScheduleForm\n                  setResult={setResult}\n                  invocation={newSchedule ? scheduleDetails : invocation}\n                  filledValues={filledValues}\n                  setFilledValues={setFilledValues}\n                  formRef={formRef}\n                  selectedOption={selectedOption}\n                />\n              </Switch.Case>\n              <Switch.Case value=\"documentation\">\n                <Paper.Content>\n                  <Documentation process={processDetails} />\n                </Paper.Content>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nexport function ViewTabs({ active, changeTab, invocation }) {\n  const tabs = [{ label: 'Schedule', value: 'schedule', active: true }];\n\n  if (invocation) {\n    tabs.push({ label: 'Documentation', value: 'documentation' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React from 'react';\n\nimport { Section } from 'shared/components/layout';\n\nexport const Documentation = ({ process }) => {\n  if (!process) {\n    return <Section>Select a process in order to see its documentation</Section>;\n  }\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { fetchEntity } from 'entities/actions';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { PlatformSelect,ProcessSelect,PLATFORMS } from 'shared/components/form/editors/Custom';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { postSchedule, patchSchedule } from 'shared/api/schedule';\nimport { mapScheduledNames } from 'entities/mappers';\nimport { isEmpty, pickBy } from 'lodash';\n\nexport const ConnectedScheduleForm = connect(\n  state => {\n    return {\n      wasSCheduleCallDone: state.entities?.data?.schedule,\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(ScheduleForm);\n\nfunction ScheduleForm({\n  setResult,\n  request,\n  wasSCheduleCallDone,\n  allScheduledNames,\n  invocation,\n  isScheduled,\n  filledValues,\n  setFilledValues,\n  selectedOption,\n  formRef\n}) {\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  useEffect(() => {\n    if (!wasSCheduleCallDone) {\n      request('schedule');\n    }\n  }, []);\n\n  const isEditing = selectedOption === 'edit-schedule';\n\n  const availableProcess = (platformVal, processVal) => {\n    const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n\n    if (selectedPlatform.tester.test(processVal)) return processVal;\n    return '';\n  };\n\n\n  const nameValue = () => {\n    if (isScheduled && invocation?.name) {\n      const splittedName = invocation.name.split('.');\n      const name = splittedName[splittedName.length - 1];\n\n      return name;\n    }\n\n    return invocation?.name || undefined;\n  };\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name) {\n      if (sch_name.includes('.')) {\n        errors.sch_name = 'Name cannot include \".\"';\n      } else if (sch_name.includes(' ')) {\n        errors.sch_name = 'Name cannot include spaces';\n      } else if (allScheduledNames.includes(sch_name)) {\n        if (isScheduled && invocation?.name) {\n          const splittedName = invocation.name.split('.');\n          const name = splittedName[splittedName.length - 1];\n\n          if (name !== sch_name) {\n            errors.sch_name = 'A schedule with this name already exists';\n          }\n        } else {\n          errors.sch_name = 'A schedule with this name already exists';\n        }\n      }\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (t_min === '*' && t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n      errors.t_min = 'At least one value needs to be numeric';\n      errors.t_hr = 'At least one value needs to be numeric';\n      errors.t_day = 'At least one value needs to be numeric';\n      errors.t_mon = 'At least one value needs to be numeric';\n      errors.t_wkd = 'At least one value needs to be numeric';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={values => {\n          handleSubmit(monitor, setResult, request, setFilledValues, invocation, isEditing, values);\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                    <Row>\n                        <Column xs={3}>\n                    <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(value, formik.values.process)\n                              );\n                            }}\n                          />\n                            </Column>\n                        <Column xs={9}>\n                      <ProcessSelect\n                        name=\"process\"\n                        label=\"Process\"\n                        value={filledValues?.process || invocation?.process}\n                        disabled={invocation !== undefined}\n                        required\n                      />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"sch_name\"\n                          label=\"Name\"\n                          value={filledValues?.name || nameValue()}\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={filledValues?.description || invocation?.description || undefined}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_min\"\n                            label=\"T_min\"\n                            value={filledValues?.t_min || invocation?.t_min || '*'}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_hr\"\n                            label=\"T_hr\"\n                            value={filledValues?.t_hr || invocation?.t_hr || '*'}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_day\"\n                            label=\"T_Day\"\n                            value={filledValues?.t_day || invocation?.t_day || '*'}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_mon\"\n                            label=\"T_mon\"\n                            value={filledValues?.t_mon || invocation?.t_mon || '*'}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_wkd\"\n                            label=\"T_wkd\"\n                            value={filledValues?.t_wkd || invocation?.t_wkd || '*'}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters\n                    recieved={filledValues?.parameters || invocation?.parameters}\n                    editable\n                  />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n}\n\nasync function handleSubmit(\n  monitor,\n  setResult,\n  request,\n  setFilledValues,\n  invocation,\n  isEditing,\n  values\n) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  if (isEditing) {\n    body.rename = sch_name;\n  } else {\n    body.name = sch_name;\n  }\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  if (isEditing) {\n    patchSchedule(invocation.name, body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  } else {\n    postSchedule(body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  }\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n","export const formatAccount = account => {\n  const prefix = `${account.protocol.toLowerCase()}://${account.user}:******@${account.address}:${\n    account.port\n  }`;\n  const { special } = account;\n\n  if (special?.database) {\n    return `${prefix}/${special.database}`;\n  }\n\n  return prefix;\n};\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default: {\n      const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n      const matches = regex.exec(deflt);\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return Number.parseInt(matches[2]); // eslint-disable-line\n          case 'str': {\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            // const json = `[${matches[2]}]`;\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          }\n\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n    }\n  }\n  return null;\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst Groups = ({ groups, onSelect, eventTypeIcons = [] }) => {\n  const renderGroupsList = () => {\n    if (Array.isArray(groups) && groups.length) {\n      return groups.map(item => {\n        return (\n          <ListItem\n            onClick={() => onSelect(item)}\n            selected={item.selected}\n            key={item.data.name}\n            button\n          >\n            <ListItemIcon>\n              <GroupIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n            </ListItemIcon>\n            <ListItemText primary={item.data.name} />\n            <ListItemSecondaryAction>\n              {item.displayIcons && eventTypeIcons.map(icon => icon)}\n              <SvgIcon size=\"small\" edge=\"end\" color=\"primary\">\n                <path d={item.selected ? mdiChevronLeft : mdiChevronRight} />\n              </SvgIcon>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Groups:</div>\n      </div>\n      <List dense disablePadding>\n        {renderGroupsList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Button } from 'shared/components/controls';\n\nimport './users.scss';\n\nconst Users = ({\n  users,\n  onSelect,\n  onSelectUserAction,\n  isClearActionAvailable,\n  isGroupSelected,\n  eventTypeIcons\n}) => {\n  const renderUsersList = () => {\n    if (Array.isArray(users) && users.length) {\n      let emptyListMessage = '';\n      if (!isGroupSelected) {\n        emptyListMessage = 'Please select a group to view its users.';\n      } else if (!users.find(item => item.display)) {\n        emptyListMessage = 'No users available in the group.';\n      }\n      if (emptyListMessage) {\n        return (\n          <div className=\"notifications-users-empty-list\">\n            <PermIdentityIcon size=\"small\" />\n            <span>{emptyListMessage}</span>\n          </div>\n        );\n      }\n      return users\n        .filter(user => user.display)\n        .map(user => {\n          return (\n            <ListItem\n              onClick={() => onSelect(user)}\n              selected={user.selected}\n              key={user.data.name}\n              button\n            >\n              <ListItemIcon>\n                <PersonIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n              </ListItemIcon>\n              <ListItemText primary={user.data.name} />\n              <ListItemSecondaryAction classes={{ root: 'notifications-users-check-wrap' }}>\n                {user.selected && eventTypeIcons.map(icon => icon)}\n                <Checkbox\n                  onChange={() => onSelect(user)}\n                  edge=\"end\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  checked={user.selected}\n                  classes={{ root: 'checkbox-custom' }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n    }\n    return null;\n  };\n\n  const currentActionLabel = isClearActionAvailable ? 'Clear' : 'Select all';\n  const shouldDisplayAction = isGroupSelected && users.find(item => item.display);\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Users:</div>\n        {shouldDisplayAction && (\n          <Button role=\"presentation\" onClick={() => onSelectUserAction(isClearActionAvailable)}>\n            {currentActionLabel}\n          </Button>\n        )}\n      </div>\n      <List dense disablePadding>\n        {renderUsersList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport classnames from 'classnames';\nimport './events.scss';\n\nconst Events = ({ jobStart, jobCompletion, abnormalEvent, onSelect, areUsersSelected }) => {\n  const classes = classnames('notification-events', { 'events-wrap-disabled': !areUsersSelected });\n  return (\n    <div className={classes}>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-title\">Event type:</div>\n        </div>\n        <span>\n          <PlayCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job start</span>\n        </span>\n        <span>\n          <CheckCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job completion</span>\n        </span>\n        <span>\n          <ErrorOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">abnormal event</span>\n        </span>\n      </div>\n      <div className=\"notification-events-col old-notice\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n      </div>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Center } from 'shared/components/layout';\n\nimport { Button } from 'shared/components/controls';\n\nimport './notification-list.scss';\nimport { withStyles } from '@material-ui/core';\n\nconst UserChip = withStyles({\n  root: {\n    background: 'rgba(55, 101, 175, 0.08)',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '& > svg': {\n      marginLeft: '8px'\n    }\n  }\n})(Chip);\n\nconst NotificationList = ({ users, eventTypeIcons, toggleApplyButton }) => {\n  const filteredUsers = users.filter(user => user.selected);\n  const renderUserList = () => {\n    if (!filteredUsers.length) {\n      return <Center>No notifications applied</Center>;\n    }\n    return filteredUsers.map(user => {\n      return (\n        <UserChip\n          classes={{ root: 'notification-list-item' }}\n          label={\n            <>\n              <span>{user.data.name}</span>\n              {eventTypeIcons}\n            </>\n          }\n          color=\"default\"\n          icon={<PersonIcon size=\"small\" />}\n        />\n      );\n    });\n  };\n\n  let buttonLabel = 'Add';\n  let buttonIcon = <NotificationsNoneIcon />;\n  if (filteredUsers.length) {\n    buttonLabel = 'Edit';\n    buttonIcon = <EditIcon />;\n  }\n\n  return (\n    <div className=\"notification-list-wrapper\">\n      <div>{renderUserList()}</div>\n      <div className=\"notification-list-edit-section\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={toggleApplyButton}\n          startIcon={buttonIcon}\n          endIcon={<ArrowDropDownIcon />}\n          classes={{ root: 'notifications-add-edit' }}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport './Entity.scss';\nimport GroupIcon from '@material-ui/icons/Group';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\n/* eslint-disable */\nconst Entity = ({ entity, selectEntity, columns, entityIcons }) => {\n  const cls = classnames('entity', {\n    '--isSelected': entity.isSelected\n  });\n  const user = entity.user_owner;\n  const aliasStr = entity.alias;\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={cls}\n      onClick={event => {\n        selectEntity(entity, columns.level);\n\n        const target = event.currentTarget;\n        const box = target.getBoundingClientRect();\n        const parent = target.parentNode.parentNode;\n\n        setTimeout(function() {\n          parent.scrollTo({ left: box.right, behavior: 'smooth' });\n        }, 200);\n      }}\n    >\n      <LightTooltip placement=\"bottom\" title={entity.entity || ''}>\n        <div className=\"entity-icon-wrap\">{entityIcons[entity.entity]}</div>\n      </LightTooltip>\n      <div className=\"entity-details\">\n        <div className=\"entity-name\">\n          {!!aliasStr && (\n            <div title={`Alias of ${aliasStr}`}>\n              <FilterNoneIcon />\n            </div>\n          )}\n          <LightTooltip placement=\"bottom\" title={entity.name}>\n            <span>{entity.name}</span>\n          </LightTooltip>\n        </div>\n        <div className=\"entity-user\">\n          <GroupIcon />\n          <span>{user}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/* eslint-enable */\n\nexport default Entity;\n","import React from 'react';\nimport Switch from '../components/Switch';\nimport ActionsNamespace from '../components/ActionsNamespace';\nimport ActionsConstant from '../components/ActionsConstant';\nimport ActionsProcess from '../components/ActionsProcess';\nimport ActionsForm from '../components/ActionsForm';\nimport ActionsAccount from '../components/ActionsAccount';\nimport ActionsRoot from '../components/ActionsRoot';\nimport ActionsPrototype from '../components/ActionsPrototype';\nimport ActionsSchedule from '../components/ActionsSchedule';\nimport ActionsCommon from '../components/ActionsCommon';\nimport GroupIcon from '@material-ui/icons/Group';\nimport './SelectedEntity.scss';\n\nconst SelectedEntity = ({ selectedEntity, entityIcons }) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  return (\n    <div className=\"selected-entity\">\n      <div className=\"selected-entity-title\">\n        <div className=\"selected-entity-title-icon\">{entityIcons[selectedEntity.entity]}</div>\n        <div className=\"selected-entity-title-details\">\n          {selectedEntity.name}\n          <div className=\"selected-entity-title-user\">\n            <GroupIcon />\n            <span>{selectedEntity.user_owner}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"entity-detail-wrap\">\n        <div className=\"entity-description-wrap\">{selectedEntity.description}</div>\n\n        <Switch value={selectedEntity.entity}>\n          <Switch.Case value=\"root\">\n            <ActionsRoot />\n          </Switch.Case>\n\n          <Switch.Case value=\"namespace\">\n            <ActionsNamespace entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"constant\">\n            <ActionsConstant entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"form\">\n            <ActionsForm entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"process\">\n            <ActionsProcess entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"prototype\">\n            <ActionsPrototype entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"schedule\">\n            <ActionsSchedule entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"account\">\n            <ActionsAccount entity={selectedEntity} />\n          </Switch.Case>\n        </Switch>\n        <ActionsCommon entity={selectedEntity} />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedEntity;\n","import React from 'react';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nimport { ConnectedEditNamespace } from './namespace-actions/EditNamespace';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\nimport { ConnectedDeleteNamespace } from './namespace-actions/DeleteNamespace';\n\nconst ActionsNamespace = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const hasWrite = hasWritePrivileges(entity);\n\n  return (\n    <>\n      <ConnectedNewNamespace namespace={entity} />\n      {hasWrite && <ConnectedEditNamespace namespace={entity} />}\n      {deleteRights(entity, hasWrite) && (\n        <ConnectedDeleteNamespace entity={entity} disabled={disableActions} />\n      )}\n    </>\n  );\n};\n\nfunction deleteRights(entity, hasWrite) {\n  return hasWrite && entity.owner !== 'postgres';\n}\n\nexport default ActionsNamespace;\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { getNamespace, patchNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nfunction parseName(namespace) {\n  const split = namespace.name.split('.');\n  const tail = split.length - 1;\n  const parsed = {\n    name: split[tail],\n    fq: namespace.name\n  };\n\n  if (split.length > 1) {\n    parsed.parent = split.slice(0, tail).join('.');\n  } else {\n    parsed.parent = '';\n  }\n\n  return parsed;\n}\n\nexport const ConnectedEditNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    request: fetchEntity\n  }\n)(EditNamespace);\n\nfunction EditNamespace({ namespace, request, nestedNames }) {\n  const canUpdateName = nestedNames.length === 0;\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const split_name = parseName(namespace);\n\n  const getInitialValues = () => {\n    const values = {};\n\n    values.name = split_name.name || '';\n    values.namespace = split_name.parent;\n    values.description = description;\n\n    return values;\n  };\n\n  const getNamespaceDetails = name => {\n    getNamespace(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.namespaces &&\n          data.data.data.namespaces[0] &&\n          data.data.data.namespaces[0].description\n        ) {\n          setDescription(data.data.data.namespaces[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get namespace] error getting namespace details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getNamespaceDetails(namespace.name);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values, split_name);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              {canUpdateName && (\n                                <Text name=\"name\" label=\"Name\" value={values.name} required />\n                              )}\n                              {!canUpdateName && (\n                                <Text\n                                  name=\"name\"\n                                  label=\"Name\"\n                                  value={values.name}\n                                  required\n                                  disabled\n                                  description=\"To update a namespace name, namespace must be empty!\"\n                                />\n                              )}\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                {canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                  />\n                                )}\n                                {!canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                    disabled\n                                    description=\"To update a namespace parent name, namespace must be empty!\"\n                                  />\n                                )}\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values, split_name) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    description: values.description\n  };\n\n  /*\n    If the old entity fully-qualified name does not match with the form value,\n    then we need to add a rename key with the new name.\n   */\n  if (name !== split_name.fq) {\n    body.rename = name;\n  }\n\n  patchNamespace(split_name.fq, body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    refresh: fetchEntity\n  }\n)(DeleteNamespace);\n\nfunction DeleteNamespace({ disabled, entity, refresh, nestedNames }) {\n  const canDelete = nestedNames.length === 0;\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={canDelete}>\n            <Switch.Case value>\n              <Switch value={result}>\n                <Switch.Case value=\"attempt\">\n                  <Paper.Content scrollable={false}>\n                    <Result type=\"fail\">\n                      <BodyText>\n                        Are you sure you want to remove this {type} ? This could affect the way the\n                        user will be able to interact with the app.\n                      </BodyText>\n                    </Result>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          terminator();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"success\">\n                  <Result type=\"success\">\n                    <BodyText>{name} successfully deleted!</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                          refresh(type);\n                        }}\n                      >\n                        Done\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"fail\">\n                  <Result type=\"fail\">\n                    <BodyText>You do not have permissions to delete this entity.</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                        }}\n                      >\n                        Close\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n            <Switch.Case value={false}>\n              <Result type=\"fail\">\n                <BodyText>To delete a namespace it must be empty!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { patchConstant } from 'shared/api/constant';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsConstant = ({ entity }) => {\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConstant constant={entity} />;\n};\n\nexport default ActionsConstant;\n\nexport const ConnectedEditConstant = connect(null, {\n  request: fetchEntity\n})(EditConstant);\n\nfunction EditConstant({ constant, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = constant?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Constant\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Constant was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the constant could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: constant.name, value: constant.value }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" disabled value={constant.name} />\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"value\"\n                                label=\"Value\"\n                                value={constant.value}\n                                description={constant.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const body = {\n    value: values.value\n  };\n\n  patchConstant(values.name, body)\n    .then(() => {\n      setResult('success');\n      request('constant');\n    })\n    .catch(error => {\n      console.log('[edit constant] patch constant error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function patchConstant(name, body) {\n  return RestClient.patch(`/constant/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, ErrorModal } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { postSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\nimport { isEmpty, pickBy } from 'lodash';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport { EditProcessModal } from './process-actions/EditProcessModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nconst ActionsProcess = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new job.';\n\n  return (\n    <>\n      {entity?.is_executable === false && (\n        <Button\n          classes={{ root: 'entity-button' }}\n          onClick={() => setOpen(true)}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      {entity?.is_executable && (\n        <Button\n          component={LinkBehavior}\n          classes={{ root: 'entity-button' }}\n          to={`/jobs/job?process=${entity.name}&redirected=true`}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      <ConnectedNewSchedule process={entity} isDisabled={isDisabled} />\n      {hasWritePrivileges(entity) && <EditProcessModal process={entity} />}\n      <ErrorModal open={open} actions={modalActions} message={message} />\n    </>\n  );\n};\n\nexport default ActionsProcess;\n\nexport const ConnectedNewSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(NewSchedule);\n\nfunction NewSchedule({ process, isDisabled, request, allScheduledNames }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const [openErrorModal, setOpenErrorModal] = useState(false);\n  const errorModalActions = {\n    open: () => {\n      setOpenErrorModal(true);\n    },\n    close: () => {\n      setOpenErrorModal(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new schedule.';\n\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  // processDetails might be used at a later date\n  const [processDetails, setProcessDetails] = useState({}); // eslint-disable-line\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n\n  const onClickHandler = () => {\n    if (process.is_executable) {\n      setOpen(true);\n    } else {\n      setOpenErrorModal(true);\n    }\n\n    getProcess(process.name)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        New Schedule\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"New Schedule\"\n            icon={\n              <SvgIcon>\n                <SlowMotionVideoIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={process}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={process} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n      <ErrorModal open={openErrorModal} actions={errorModalActions} message={message} />\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({\n  process,\n  setResult,\n  allScheduledNames,\n  request,\n  filledValues,\n  setFilledValues,\n  formRef\n}) => {\n  const derivedMonitor = {\n    enabled: false,\n    events: 0,\n    users: []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name) {\n      if (sch_name.includes('.')) {\n        errors.sch_name = 'Name cannot include \".\"';\n      } else if (sch_name.includes(' ')) {\n        errors.sch_name = 'Name cannot include spaces';\n      } else if (allScheduledNames.includes(sch_name)) {\n        errors.sch_name = 'A schedule with this name already exists';\n      }\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (t_min === '*' && t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n      errors.t_min = 'At least one value needs to be numeric';\n      errors.t_hr = 'At least one value needs to be numeric';\n      errors.t_day = 'At least one value needs to be numeric';\n      errors.t_mon = 'At least one value needs to be numeric';\n      errors.t_wkd = 'At least one value needs to be numeric';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{ process: process.name }}\n        validate={extraValidations}\n        onSubmit={values => {\n          handleSubmit(monitor, setResult, request, setFilledValues, values);\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={process.description}\n                          value={process.name}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"sch_name\"\n                          label=\"Name\"\n                          value={filledValues?.name || undefined}\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={filledValues?.description || undefined}\n                          multiline\n                          required\n                        />\n                      </Row>\n\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_min\" label=\"T_min\" value={filledValues?.t_min || '*'} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_hr\" label=\"T_hr\" value={filledValues?.t_hr || '*'} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_day\" label=\"T_Day\" value={filledValues?.t_day || '*'} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_mon\" label=\"T_mon\" value={filledValues?.t_mon || '*'} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_wkd\" label=\"T_wkd\" value={filledValues?.t_wkd || '*'} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters\n                    recieved={filledValues?.parameters || process.parameters}\n                    editable\n                  />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { ProcessEditor } from './ProcessEditor';\n\nimport { fetchEntity } from '../../actions';\n\nexport const EditProcessModal = ({ process }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('editing');\n  const formRef = useRef();\n  const modalActions = {\n    open: useCallback(() => {\n      setResult('editing');\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n\n      if (result === 'success') {\n        dispatch(fetchEntity('process'));\n      }\n    }, [result])\n  };\n\n  return (\n    <>\n      <Button classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Edit Process\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Process\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            desc={process.name}\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"editing\">\n              <ProcessEditor process={process} setResult={setResult} formRef={formRef} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Process was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Done</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the process could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Close</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { QualifiedName } from 'shared/components/form/editors/Custom';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { patchProcess } from 'shared/api/process';\n\nimport './ProcessEditor.local.scss';\n\nexport function ProcessEditor({ process, setResult, formRef }) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        saveProcessEdits(values, process, setResult);\n      }}\n      innerRef={formRef}\n    >\n      {() => {\n        return (\n          <>\n            <Paper.Content>\n              <Form>\n                <Section>\n                  <Section.Header>\n                    <Section.Title>Details</Section.Title>\n                  </Section.Header>\n                  <Section.Content>\n                    <Row>\n                      <Column>\n                        <QualifiedName\n                          name=\"process_name\"\n                          label=\"Name\"\n                          value={process.name}\n                          required\n                        />\n                      </Column>\n                    </Row>\n                  </Section.Content>\n                </Section>\n                <Section>\n                  <Section.Content>\n                    {process.steps.map((step, index) => {\n                      return <Step step={step} step_index={index} />;\n                    })}\n                  </Section.Content>\n                </Section>\n              </Form>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <SubmitButton variant=\"contained\">Save</SubmitButton>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nfunction Step({ step, step_index }) {\n  const expressions = parseEvaluatableExpressions(step, step_index);\n  const noEvaluatableExpressions = !expressions.length;\n\n  if (noEvaluatableExpressions) {\n    return null;\n  }\n\n  return (\n    <div className=\"step\">\n      <div className=\"title\">Step: {step.label}</div>\n      <div className=\"description\">{step.description}</div>\n      <div className=\"expressions\">\n        <div className=\"list\">\n          {expressions.map((exp, index) => (\n            <StepExpression key={index} {...exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction StepExpression({ expression, exp_index, step, step_index }) {\n  const name = `step-${step_index}-expression-${exp_index}`;\n  return (\n    <Row>\n      <Text\n        multiline\n        value={expression.evaluate}\n        label={`Expression ${expression.assign || exp_index} of ${step.label}`}\n        name={name}\n        required\n      />\n    </Row>\n  );\n}\n\nfunction parseEvaluatableExpressions(step, step_index) {\n  const { expressions } = step;\n\n  if (!Array.isArray(expressions) || expressions.length === 0) {\n    return [];\n  }\n\n  return expressions.reduce((acc, exp, index) => {\n    if (exp.evaluate) {\n      acc.push({\n        expression: exp,\n        exp_index: index,\n        step,\n        step_index\n      });\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction saveProcessEdits(values, process, setResult) {\n  const { process_name, ...evaluations } = values;\n  const toSend = {};\n\n  const steps = _.cloneDeep(process.steps);\n\n  /**\n   * extract and remap field values.\n   */\n  const extracted = extractFieldInfo(evaluations);\n\n  extracted.forEach(({ step, expression, value }) => {\n    const path = `[${step}].expressions[${expression}].evaluate`;\n\n    _.set(steps, path, value);\n  });\n\n  /** Prepare patch request body */\n  toSend.steps = steps;\n\n  if (process.name !== process_name) {\n    toSend.rename = values.process_name;\n  }\n\n  patchProcess(process.name, toSend)\n    .then(() => {\n      setResult('success');\n    })\n    .catch(() => {\n      setResult('fail');\n    });\n}\n\nfunction extractFieldInfo(all) {\n  const key_struct = /^step-(\\d+)-expression-(\\d+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      step: matched[1],\n      expression: matched[2],\n      value\n    };\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\nimport { postForm } from 'shared/api/form';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButtonNoDirty } from 'shared/components/form/SubmitButtonNoDirty';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { Ensure } from 'core/components/Ensure';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction findFormPrototype(form, prototypes) {\n  const name = form.prototype;\n  const found = prototypes.find(item => item.name === name);\n\n  return found;\n}\n\nfunction findFormEntry(entity, forms) {\n  if (entity.alias) {\n    return forms.find(entry => entry.name === entity.alias);\n  }\n\n  return entity;\n}\n\nconst ActionsForm = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n  return (\n    <>\n      {canWrite && (\n        <Ensure type=\"prototype\" inlineLoader>\n          {({ data: prototypes }) => (\n            <Ensure type=\"form\" inlineLoader>\n              {({ data: forms }) => (\n                <ConnectedFormModal\n                  disabled={disableActions}\n                  form={findFormEntry(entity, forms)}\n                  prototype={findFormPrototype(entity, prototypes)}\n                />\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      )}\n      <ConnectedCopyForm form={entity} />\n    </>\n  );\n};\n\nexport default ActionsForm;\n\nexport const ConnectedCopyForm = connect(null, {\n  request: fetchEntity\n})(CopyForm);\n\nfunction CopyForm({ form, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = form?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Copy\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '300px'\n          }}\n        >\n          <ModalHeader\n            title=\"Copy Form\"\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was copied successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be copied.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: `${form.name}_copy` }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, form.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              Please choose a new name for the copy of form &apos;{form.name}&apos;.\n                            </Section.Header>\n                            <Row>\n                              <Text\n                                name=\"name\"\n                                label=\"Name\"\n                                value={`${form.name}_copy`}\n                                description={form.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButtonNoDirty variant=\"contained\">Save</SubmitButtonNoDirty>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, formName, values) {\n  const body = {\n    name: values.name\n  };\n\n  postForm(formName, body)\n    .then(() => {\n      setResult('success');\n      request('form');\n    })\n    .catch(error => {\n      console.log('[copy form] put form error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButtonNoDirty = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { Section, Row, Column } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Ensure } from 'core/components/Ensure';\n\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { PackedContext } from './FormEditor';\n\nexport const FormParameters = ({ packed, prototype }) => {\n  return (\n    <Section>\n      <Section.Header></Section.Header>\n      <Section.Content>\n        <Ensure type=\"form\">\n          {({ data: forms }) => (\n            <Ensure type=\"type\">\n              {({ data: datatypes }) => (\n                <Ensure type=\"prototype\">\n                  {({ data: prototypes }) => (\n                    <Ensure type=\"process\">\n                      <FieldsAndGroupsEditor\n                        prototype={prototype}\n                        groups={packed.groups}\n                        prototypes={prototypes}\n                        datatypes={datatypes}\n                        forms={forms}\n                      />\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nconst DataContext = React.createContext({ datatypes: [], forms: [], prototypes: [] });\n\nfunction FieldsAndGroupsEditor({ groups, datatypes, prototypes, forms }) {\n  const entities = useMemo(\n    () => ({\n      datatypes,\n      prototypes,\n      forms\n    }),\n    [datatypes, prototypes, forms]\n  );\n\n  return (\n    <>\n      <DataContext.Provider value={entities}>\n        {groups.map((group, index) => (\n          <FieldGroup key={index} pointer={index} group={group} />\n        ))}\n      </DataContext.Provider>\n    </>\n  );\n}\n\nfunction FieldGroup({ group, pointer }) {\n  return (\n    <>\n      {group.instances.map((instance, index) => (\n        <GroupInstance\n          key={`${pointer}|${index}`}\n          group={group}\n          instance={instance}\n          pointers={{ group: pointer, instance: index }}\n          count={group.instances.length}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction GroupInstance({ group, instance, pointers, count }) {\n  let title = group.name ? `Group ${group.name}` : null;\n  if (group.iteration_limit > 1) {\n    title = group.name\n      ? `Group ${group.name} (${pointers.instance + 1} of ${count})`\n      : `Group (Unnamed) (${pointers.instance + 1} of ${count})`;\n  }\n\n  const canAdd =\n    group.iteration_limit > 1 && count - 1 === pointers.instance && count < group.iteration_limit;\n\n  const { dispatch } = useContext(PackedContext);\n\n  return (\n    <div>\n      <Section.Title>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}\n        >\n          {title}\n          {count !== 1 && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_GROUP_INSTANCE',\n                  pointers\n                });\n              }}\n            >\n              Remove Group\n            </Button>\n          )}\n        </div>\n      </Section.Title>\n      <div>\n        {instance.fields.map((field, index) => (\n          <Field\n            key={`${pointers.group}|${pointers.instance}|${field.name}`}\n            group={group}\n            instance={instance}\n            pointers={{ ...pointers, field: index }}\n            field={field}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {canAdd && (\n          <Button\n            onClick={() => {\n              const fields = instance.fields.map(field => {\n                return {\n                  ...field,\n                  values: [{ instance: 0, value: null }]\n                };\n              });\n              const newInstance = {\n                ...instance,\n                instance: instance.instance + 1,\n                fields\n              };\n\n              dispatch({\n                type: 'ADD_GROUP_INSTANCE',\n                pointers,\n                instance: newInstance\n              });\n            }}\n          >\n            Add Group\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Field({ field, pointers }) {\n  return (\n    <div>\n      {field.values.map((value, index) => (\n        <Value\n          key={`${pointers.group}|${pointers.instance}|${field.name}|${index}`}\n          field={field}\n          value={value.value}\n          pointers={{ ...pointers, value: index }}\n          count={field.values.length}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Value({ field, value, pointers, count }) {\n  const packet = useContext(DataContext);\n\n  const canRemove = field.is_repeatable && count !== 1;\n  const canAdd = field.is_repeatable && pointers.value + 1 === count;\n\n  const { dispatch } = useContext(PackedContext);\n\n  const label = field.is_repeatable\n    ? `${field.name} (${pointers.value + 1} of ${count})`\n    : field.name;\n\n  function uniquedName(name, idx) {\n    const string = `group-${idx.group}-instance-${idx.instance}-field-${idx.field}-value-${idx.value}---${field.name}`;\n\n    return string;\n  }\n\n  const parameter = normalize(\n    {\n      name: uniquedName(field.name, pointers),\n      provided_field_name: field.name,\n      is_required: field.is_required,\n      value,\n      data_type: field.data_type,\n      description: field.description,\n      deflt: field.deflt,\n      meta: field.meta\n    },\n    packet.datatypes,\n    packet.prototypes,\n    packet.forms\n  );\n\n  // for some reason, is_required is set as false for a supported parameter (eg: mas0300.sys.invocation.server_list prototype)\n  // FIX ME: need to investigate further, for now, will make the value the same as field\n  parameter.is_required = field.is_required;\n  // console.log(parameter, field);\n\n  const is_supported = parameter.is_supported && parameter.editor.type !== 'hidden';\n\n  if (!is_supported) {\n    return (\n      <Row key={pointers.value}>\n        <p>{field.name} (Unsuported)</p>\n        <Parameter\n          normalized={{ ...parameter, is_required: false, editor: { type: 'text' } }}\n          disabled\n          label={label}\n        />\n      </Row>\n    );\n  }\n\n  return (\n    <Row key={pointers.value}>\n      <Column key={field.name}>\n        <Parameter normalized={parameter} label={label} />\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          {canAdd && canRemove && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_FIELD_VALUE',\n                  pointers\n                });\n              }}\n            >\n              Remove\n            </Button>\n          )}\n          {canAdd && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                onClick={() => {\n                  dispatch({\n                    type: 'ADD_FIELD_VALUE',\n                    pointers\n                  });\n                }}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n        </div>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\n\nimport { ConnectedEditConnection } from './ConnectedEditConnection';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsAccount = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const type = getEntityType(entity);\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConnection connection={entity} type={type} isDisabled={isDisabled} />;\n};\n\nexport default ActionsAccount;\n\nconst CONNECTION_TYPES = {\n  SERVER: 'server',\n  DATABASE: 'database'\n};\n\nconst getEntityType = entity => {\n  if (entity.protocol !== 'SSH' && entity.special && entity.special.database) {\n    return CONNECTION_TYPES.DATABASE;\n  }\n\n  return CONNECTION_TYPES.SERVER;\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport _ from 'lodash';\nimport { fetchEntity } from '../actions';\n\nimport { patchConnection } from 'shared/api/accounts';\n\nimport { Switch } from 'shared/components';\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { ModeSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { fetchProtocols } from 'shared/api/protocols';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nexport const ConnectedEditConnection = connect(null, {\n  request: fetchEntity\n})(EditConnection);\n\nfunction EditConnection({ connection, isDisabled, type, request }) {\n  if (type === '') return null;\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const [passwordEditable, setPasswordEditable] = useState(false);\n  const [showRSA, setShowRSA] = useState(false);\n  const [protocols, setProtocols] = useState([]);\n  const initialValues = {\n    name: connection.name || '',\n    description: connection.description || '',\n    host: connection.address || '',\n    port: connection.port || '',\n    user: connection.user || '',\n    password: connection.user_key || '',\n    confirm_password: connection.user_key || '',\n    rsa_key: connection.user_key || '',\n    protocol: connection.protocol\n  };\n\n  if (type === 'database') {\n    initialValues.database = connection.special.database || '';\n    initialValues.mode = connection.special.mode || '';\n  }\n\n  const extraValidations = values => {\n    const errors = {};\n    if (!showRSA) {\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  const getProtocols = () => {\n    fetchProtocols().then(response => {\n      if (response.result === 'success') {\n        setProtocols(response.protocols);\n      }\n    });\n  };\n\n  useEffect(() => {\n    return () => {\n      setPasswordEditable(false);\n    };\n  }, [open]);\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          if (type === 'database') {\n            getProtocols();\n          }\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Connection\"\n            icon={\n              <SvgIcon>\n                <VpnKeyIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Connection was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the connection could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={initialValues}\n                validate={extraValidations}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, protocols, showRSA, type, connection, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  const selectedProtocol =\n                    connection.protocol &&\n                    protocols.find(protocol => protocol.name === connection.protocol);\n                  const allowRSA = type === 'database' ? !!selectedProtocol?.allow_rsa_key : true;\n                  const withDatabase = selectedProtocol?.special_required?.includes('database');\n                  const withMode = selectedProtocol?.name === 'ORACLE';\n\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              <Section.Title>Details:</Section.Title>\n                            </Section.Header>\n                            <Row>\n                              <Column>\n                                <Row>\n                                  <Text name=\"name\" label=\"Name\" value={connection.name} required />\n                                </Row>\n                                <Row>\n                                  <Text\n                                    name=\"protocol\"\n                                    label=\"Protocol\"\n                                    value={connection.protocol}\n                                    disabled\n                                  />\n                                </Row>\n                              </Column>\n                              <Column>\n                                <Text\n                                  name=\"description\"\n                                  value={connection.description}\n                                  label=\"Description\"\n                                  multiline\n                                  required\n                                />\n                              </Column>\n                            </Row>\n                          </Section>\n                          <Section>\n                            <Section.Header>\n                              <Section.Title>Connection Info:</Section.Title>\n                            </Section.Header>\n                            <Row>\n                              <Column style={{ maxWidth: '80%', width: '80%' }}>\n                                <Text\n                                  name=\"host\"\n                                  label=\"Host\"\n                                  value={connection.address}\n                                  disabled\n                                  required\n                                />\n                              </Column>\n                              <Column style={{ maxWidth: '20%', width: '20%' }}>\n                                <Text name=\"port\" required label=\"Port\" value={connection.port} />\n                              </Column>\n                            </Row>\n                            {type === 'database' && (\n                              <Row>\n                                {withDatabase && (\n                                  <Column\n                                    style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}\n                                  >\n                                    <Text\n                                      name=\"database\"\n                                      label=\"Database\"\n                                      value={connection.special.database}\n                                      required\n                                    />\n                                  </Column>\n                                )}\n                                {withMode && (\n                                  <Column style={{ maxWidth: '20%' }}>\n                                    <ModeSelect name=\"mode\" label=\"Mode\" />\n                                  </Column>\n                                )}\n                              </Row>\n                            )}\n                            <Row>\n                              <Column>\n                                <Text name=\"user\" label=\"User\" value={connection.user} required />\n                              </Column>\n                              {passwordEditable && (\n                                <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                              )}\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Left>\n                          {!passwordEditable && (\n                            <Button onClick={() => setPasswordEditable(true)}>\n                              Change existing password\n                            </Button>\n                          )}\n                          {passwordEditable && allowRSA && (\n                            <Checkbox\n                              checked={showRSA}\n                              onInput={() => setShowRSA(prev => !prev)}\n                              label=\"Use RSA key\"\n                            />\n                          )}\n                        </Paper.Footer.Left>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\" confirmation>\n                            Save\n                          </SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, protocols, showRSA, type, connection, values) {\n  const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n  const allowRSA = type === 'database' ? !!selectedProtocol?.allow_rsa_key : true;\n  const withDatabase = selectedProtocol?.special_required?.includes('database');\n  const withMode = selectedProtocol?.name === 'ORACLE';\n\n  const request_body = {\n    rename: values.name,\n    user: values.user,\n    description: values.description,\n    protocol: values.protocol,\n    address: values.host,\n    user_key: (allowRSA && showRSA ? values.rsa_key : values.password) || undefined,\n    port: Number.parseInt(values.port, 10),\n    special: {\n      ...(withDatabase && { database: values.database }),\n      ...(withMode && { mode: values.mode })\n    }\n  };\n\n  if (_.isEmpty(request_body.special)) {\n    delete request_body.special;\n  }\n\n  patchConnection(connection.name, request_body)\n    .then(() => {\n      setResult('success');\n      request('account');\n    })\n    .catch(error => {\n      console.log('[edit connection] patch connection error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => {\n  return (\n    <Column>\n      <Switch value={allowed && showRSA}>\n        <Switch.Case value>\n          <Text name=\"rsa_key\" label=\"RSA Key\" multiline required />\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Row>\n            <Password name=\"password\" label=\"Password\" required />\n          </Row>\n          <Row>\n            <Password name=\"confirm_password\" label=\"Confirm Password\" required />\n          </Row>\n        </Switch.Case>\n      </Switch>\n    </Column>\n  );\n};\n","import React from 'react';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\n\nconst ActionsRoot = () => {\n  return (\n    <>\n      <ConnectedNewNamespace />\n    </>\n  );\n};\n\nexport default ActionsRoot;\n","import React from 'react';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nconst ActionsPrototype = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <ConnectedFormModal isNew prototype={entity} disabled={disableActions} />\n    </>\n  );\n};\n\nexport default ActionsPrototype;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport _, { isEmpty, pickBy } from 'lodash';\n\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { patchSchedule, getSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\n\nconst ActionsSchedule = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConnectedEditSchedule schedule={entity} isDisabled={isDisabled} />\n    </>\n  );\n};\n\nexport default ActionsSchedule;\n\nexport const ConnectedEditSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(EditSchedule);\n\nfunction EditSchedule({ schedule, isDisabled, allScheduledNames, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const [processDetails, setProcessDetails] = useState({});\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n\n  useEffect(() => {\n    if (!_.isEmpty(scheduleDetails) && !_.isEmpty(processDetails)) {\n      setOpen(true);\n    }\n  }, [scheduleDetails, processDetails]);\n\n  const onClickHandler = () => {\n    /** TODO cover the case when one (or both) of the below calls fail or no data is returned from them */\n\n    getSchedule(schedule.name)\n      .then(data => {\n        if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n          setScheduleDetails(data.data.data.schedules[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n\n    getProcess(schedule.process)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Schedule\"\n            icon={\n              <SvgIcon>\n                <EventNoteIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={processDetails}\n                    schedule={scheduleDetails}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={processDetails} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({\n  schedule,\n  setResult,\n  allScheduledNames,\n  request,\n  filledValues,\n  setFilledValues,\n  formRef\n}) => {\n  const derivedMonitor = {\n    enabled: !!schedule?.parameters?.events,\n    events: schedule?.parameters?.events || 0,\n    users: schedule?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const splittedName = schedule.name.split('.');\n  const name = splittedName[splittedName.length - 1];\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name) {\n      if (sch_name.includes('.')) {\n        errors.sch_name = 'Name cannot include \".\"';\n      } else if (sch_name.includes(' ')) {\n        errors.sch_name = 'Name cannot include spaces';\n      } else if (allScheduledNames.includes(sch_name) && name !== sch_name) {\n        errors.sch_name = 'A schedule with this name already exists';\n      }\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (t_min === '*' && t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n      errors.t_min = 'At least one value needs to be numeric';\n      errors.t_hr = 'At least one value needs to be numeric';\n      errors.t_day = 'At least one value needs to be numeric';\n      errors.t_mon = 'At least one value needs to be numeric';\n      errors.t_wkd = 'At least one value needs to be numeric';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={values => {\n          handleSubmit(schedule, monitor, setResult, request, setFilledValues, values);\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={schedule.description}\n                          value={schedule.process}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"sch_name\"\n                          label=\"Name\"\n                          value={filledValues?.rename || name}\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={filledValues?.description || schedule.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_min\"\n                            label=\"T_min\"\n                            value={filledValues?.t_min || schedule.t_min}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_hr\"\n                            label=\"T_hr\"\n                            value={filledValues?.t_hr || schedule.t_hr}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_day\"\n                            label=\"T_Day\"\n                            value={filledValues?.t_day || schedule.t_day}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_mon\"\n                            label=\"T_mon\"\n                            value={filledValues?.t_mon || schedule.t_mon}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_wkd\"\n                            label=\"T_wkd\"\n                            value={filledValues?.t_wkd || schedule.t_wkd}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <ProcessParameters\n                    recieved={filledValues?.parameters || schedule.parameters}\n                    editable\n                  />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(schedule, monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    rename: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  patchSchedule(schedule.name, body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[edit schedule] edit schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getAlias, patchAlias, postAlias } from 'shared/api/alias';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { ConnectedDeleteEntity } from './common-actions/DeleteEntity';\nimport { PrivilegesModal } from './common-actions/privileges/PrivilegesModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction isEntityDeletable(entity) {\n  return (\n    entity.owner !== 'postgres' &&\n    (entity.entity === 'form' ||\n      entity.entity === 'process' ||\n      entity.entity === 'schedule' ||\n      entity.entity === 'account')\n  );\n}\n\nconst ActionsCommon = ({ entity }) => {\n  const displayActions = entity.entity !== 'root';\n  if (displayActions) {\n    const displayDelete = isEntityDeletable(entity);\n    const isAlias = entity.alias;\n    const disableActions = entity?.meta?.appearance === 'Greyed';\n    const canWrite = hasWritePrivileges(entity);\n\n    return (\n      <>\n        {canWrite && (\n          <PrivilegesModal entity={entity} isAlias={isAlias} disabled={disableActions} />\n        )}\n        {!isAlias && <ConnectedNewAlias entity={entity} />}\n        {isAlias && canWrite && <ConnectedEditAlias entity={entity} />}\n        {canWrite && displayDelete && (\n          <ConnectedDeleteEntity entity={entity} disabled={disableActions} />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nexport default ActionsCommon;\n\n//* These should be moved to the common-actions folder */\n\nexport const ConnectedNewAlias = connect(null, {\n  request: fetchEntity\n})(NewAlias);\n\nfunction NewAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: '',\n                  original: entity ? entity.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const alias = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name: values.original,\n    alias,\n    description: values.description\n  };\n\n  postAlias(body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedEditAlias = connect(null, {\n  request: fetchEntity\n})(EditAlias);\n\nfunction EditAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = entity.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.original = entity ? entity.alias : '';\n    values.description = description;\n\n    return values;\n  };\n\n  const getAliasDetails = name => {\n    getAlias(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.aliases &&\n          data.data.data.aliases[0] &&\n          data.data.data.aliases[0].description\n        ) {\n          setDescription(data.data.data.aliases[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get alias] error getting alias details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getAliasDetails(entity.name);\n        }}\n      >\n        Edit Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleEditSubmit(setResult, request, entity.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleEditSubmit(setResult, request, originalName, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    rename: name,\n    description: values.description\n  };\n\n  patchAlias(originalName, body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity, clearSelectedEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteEntity = connect(null, {\n  clearSelected: clearSelectedEntity,\n  refresh: fetchEntity\n})(DeleteEntity);\n\nfunction DeleteEntity({ disabled, entity, refresh, clearSelected }) {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove this {type} ? This could affect the way the user\n                    will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <BodyText>{name} successfully deleted!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                      clearSelected();\n                      refresh(type);\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <BodyText>You do not have permissions to delete this entity.</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { PrivilegesEditor } from './PrivilegesEditor';\n\nexport const PrivilegesModal = ({ disabled, entity, isAlias }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      // refresh(entity.type);\n      setOpen(false);\n    }, [])\n  };\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Privileges\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vw',\n            minHeight: '648px',\n            maxHeight: '648px'\n          }}\n        >\n          <ModalHeader\n            title=\"Privileges\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <PrivilegesEditor entity={entity} isAlias={isAlias} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\n\nimport { Paper, Center, NavigationTab } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Result, ModalContext } from 'shared/components/overlays';\nimport { Button, Checkbox as LabeledCheckbox } from 'shared/components/controls';\n\nimport { getPrivileges, setPrivileges } from 'shared/api/privileges';\n\nimport './PrivilegesEditor.local.scss';\nimport { mdiAccount } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nexport const PrivilegesEditor = ({ entity }) => {\n  const hasAlias = !!entity.alias;\n  const {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    updatePrivilege\n  } = usePrivileges(entity, hasAlias);\n  const [tab, switchTab] = useState('users');\n  const { actions } = useContext(ModalContext);\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader>Loading privileges for entity</Loader>\n      </Center>\n    );\n  }\n\n  if (!data) {\n    return (\n      <Center>\n        <Result type=\"fail\">\n          <Result.Text compact>Could not load privileges list for {entity.name}</Result.Text>\n        </Result>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab\n          active={tab}\n          tabs={[\n            { label: 'Users', value: 'users' },\n            { label: 'Groups', value: 'groups' }\n          ]}\n          onClick={switchTab}\n        />\n      </Paper.Header>\n      <PrivilegesList\n        privileges={data.privileges.filter(p => {\n          if (p.role === 'mas') {\n            return false;\n          }\n          if (p.role === 'admin') {\n            return false;\n          }\n          if (tab === 'users') {\n            return !p.is_group;\n          }\n\n          return p.is_group;\n        })}\n        updater={privilege => {\n          updatePrivilege(privilege);\n        }}\n        updating={updating}\n        entityType={entity.entity}\n        entityName={hasAlias && editAliasParent ? entity.alias : entity.name}\n        isAlias={hasAlias && !editAliasParent}\n      />\n      <Paper.Footer>\n        {!!entity.alias && (\n          <Paper.Footer.Left>\n            <LabeledCheckbox\n              color=\"primary\"\n              icon={<CheckBoxOutlineBlankIcon />}\n              checkedIcon={<CheckBoxIcon />}\n              checked={editAliasParent}\n              onChange={() => {\n                setEditAliasParent(!editAliasParent);\n              }}\n              label=\"Show parent privileges\"\n            />\n          </Paper.Footer.Left>\n        )}\n        <Paper.Footer.Right>\n          <Button color=\"primary\" variant=\"contained\" onClick={actions.close}>\n            Done\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nfunction PrivilegesList({ privileges, updating, updater, entityType, entityName, isAlias }) {\n  const types = privilegeTypes(entityType, isAlias);\n\n  function renderType(type) {\n    return (\n      <div className=\"column role\" key={type}>\n        {type}\n      </div>\n    );\n  }\n\n  function mapByEntity(user_or_group) {\n    return (\n      <div className=\"item\" key={`alias-${isAlias}-role-${user_or_group.role}`}>\n        <div className=\"column role\">\n          <SvgIcon color=\"primary\">\n            <path d={mdiAccount} />\n          </SvgIcon>\n          {user_or_group.role}\n        </div>\n        <div className=\"types\">\n          {types.map(type => {\n            const granted = user_or_group.effective.includes(type);\n            return (\n              <div\n                className=\"column type \"\n                key={`c-alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n              >\n                <Checkbox\n                  key={`alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n                  classes={{ root: 'privilege-checkbox' }}\n                  checked={granted}\n                  disabled={updating}\n                  onChange={() => {\n                    updater({\n                      privilege: type,\n                      enitity_name: entityName,\n                      alias: isAlias,\n                      role: user_or_group.role,\n                      role_type: user_or_group.is_group ? 'group' : 'user',\n                      granted\n                    });\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"privileges\">\n      <div className=\"header\">\n        {renderType('Name')}\n        <div className=\"types\">{types.map(renderType)}</div>\n      </div>\n      <div className=\"list\">\n        {privileges\n          .sort((a, b) => a?.role?.toLowerCase()?.localeCompare(b?.role?.toLowerCase()))\n          .map(mapByEntity)}\n      </div>\n    </div>\n  );\n}\n\nfunction privilegeTypes(entityType, alias = false) {\n  const type = entityType.toLowerCase();\n  const privileges = [];\n  if (!alias) {\n    if (type === 'namespace') {\n      privileges.push('affiliate');\n    } else if (['account', 'constant', 'form', 'process'].includes(type)) {\n      privileges.push('execute');\n    }\n  }\n  privileges.push('read', 'write');\n  return privileges;\n}\n\nfunction usePrivileges(entity, hasAlias) {\n  const [editAliasParent, setEditAliasParent] = useState(!hasAlias);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getPrivileges(\n      hasAlias && editAliasParent ? entity.alias : entity.name,\n      hasAlias && !editAliasParent\n    )\n      .then(resp => {\n        setData(resp?.data?.data?.entities?.[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setData(null);\n        setLoading(false);\n      });\n  }, [editAliasParent]);\n\n  const updatePrivilege = useCallback(\n    privilege => {\n      setUpdating(true);\n      setPrivileges(privilege)\n        .then(resp => {\n          setData(resp?.data?.data?.entities?.[0]);\n          setUpdating(false);\n        })\n        .catch(() => {\n          setUpdating(false);\n        });\n    },\n    [entity, editAliasParent]\n  );\n\n  return {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    setUpdating,\n    setData,\n    updatePrivilege\n  };\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { arrayOf, node, string, shape } from 'prop-types';\n\nimport './HeaderPageSwitch.local.scss';\n\nexport const HeaderPageSwitch = ({ routes }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header-page-switch\" data-qa=\"header-page-switch\">\n      {routes.map(({ to, label }) => (\n        <div\n          key={to}\n          className={classnames('header-page-switch-link', {\n            'active-link': location.pathname.includes(to)\n          })}\n        >\n          <Link key={to} to={to} data-qa={`header-page-switch-link-to-${to}`}>\n            {label}\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nHeaderPageSwitch.propTypes = {\n  routes: arrayOf(\n    shape({\n      to: string,\n      label: node\n    })\n  )\n};\n\nHeaderPageSwitch.defaultProps = {\n  routes: []\n};\n","import React, { useEffect } from 'react';\nimport { func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadUserThunk } from '../../store/thunks';\n\nimport { ConnectedUserView } from '../pages/UserView/UserView';\n\nexport const UserLoader = ({ loadUser, loading }) => {\n  const { userName } = useParams();\n  useEffect(() => {\n    if (userName) {\n      loadUser(userName);\n    }\n  }, [userName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading User <b>{userName}</b>\n        </Loader>\n      ) : (\n        <ConnectedUserView />\n      )}\n    </>\n  );\n};\n\nUserLoader.propTypes = {\n  loadUser: func,\n  loading: bool\n};\n\nexport const ConnectedUserLoader = connect(\n  state => ({\n    loading: state.usersManager.flags.user.loading\n  }),\n  dispatch => ({ loadUser: name => dispatch(loadUserThunk(name)) })\n)(UserLoader);\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { UserGroupsContainer } from './containers/UserGroups';\n\nimport './UserView.local.scss';\nimport { deactivateUserThunk } from '../../../store/thunks';\nimport { EditUserDetailsContainer } from './containers/EditUserDetails';\nimport { EditUserInfoContainer } from './containers/EditUserInfo';\n\nimport { currentUserSelector } from 'session/store/state';\nimport { getCurrentUserDetails } from 'session/store/selectors';\n\nimport { isAdmin } from 'entities/utils/privileges';\n\nexport const UserView = ({ user, deactivateUser, deactivating, loggedUser, userDetails }) => {\n  const defaultResult = () => {\n    if (loggedUser.get('name') === user?.name) {\n      return 'self';\n    }\n\n    if (!isAdmin(userDetails)) {\n      return 'not-admin';\n    }\n\n    return 'attempt';\n  };\n  const [result, setResult] = useState(defaultResult);\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult(defaultResult);\n      setOpen(false);\n    }, [])\n  };\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  const deactivate = useCallback(() => {\n    deactivateUser(user)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not deactivate user!'); // eslint-disable-line\n      });\n  }, [user]);\n  const titleStyles = { textTransform: 'none' };\n\n  if (noGroups) {\n    titleStyles.fontStyle = 'italic';\n  }\n\n  /* This needs to be written as a result check or 404 page for a user. */\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title style={titleStyles}>{user.name}</Paper.Title>\n        </Paper.Header>\n        <Paper.Content>\n          <Section>\n            <Section.Title>Global Privileges</Section.Title>\n            <PrivilegesContainer />\n          </Section>\n          <Section>\n            <Section.Title>Member of Groups</Section.Title>\n            <UserGroupsContainer />\n          </Section>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            {user?.name !== 'mas' && (\n              <Button\n                color=\"secondary\"\n                disabled={deactivating || noGroups}\n                onClick={modalActions.open}\n              >\n                Deactivate user\n              </Button>\n            )}\n            <EditUserDetailsContainer />\n            <EditUserInfoContainer />\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Deactivate user\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"self\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>You cannot deactivate yourself.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer></Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"not-admin\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Only admin users can deactivate other users.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer></Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to deactivate user {user.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('deactivating');\n                      deactivate();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"deactivating\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Deactivating...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const ConnectedUserView = connect(\n  state => ({\n    user: state.usersManager.users.selected,\n    deactivating: state.usersManager.flags.user.removing,\n    loggedUser: currentUserSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    deactivateUser: userName => dispatch(deactivateUserThunk(userName))\n  })\n)(UserView);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../../store/thunks';\n\nexport const Privileges = ({ user, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <div className=\"user-privileges\">\n      <ul className=\"privileges-list\">\n        {privileges.map(entry => {\n          return (\n            <li key={entry.key} className=\"privileges-item\">\n              <Privilege user={user} privilege={entry} actions={actions} disabled={disabled} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPrivileges.propTypes = {\n  user: string,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ user, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(user, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  user: string,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      disabled: user?.name === 'mas' || state.usersManager.flags.privileges.disabled,\n      privileges: mapPrivileges(user.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (user, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      ),\n    revoke: (user, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction mapPrivileges(data) {\n  if (!data) return [];\n\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { ScrollableContainer, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditUserGroupsContainer } from './EditUserGroups';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './UserGroups.local.scss';\nimport { removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const UserGroups = ({ user, groups, removeFromGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeFromGroups(user, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.type === 'fail') {\n          setResult('error');\n          setErrorMessage(response.message);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [user, selectedGroup]);\n\n  const isOnlySelect = groups?.length === 1 && groups[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove user ${user} from group ${selectedGroup}? This\n  could affect the way the user will be able to interact with the app`;\n\n  return (\n    <>\n      <div className=\"user-groups-block\">\n        <ScrollableContainer variant=\"row white\">\n          {passed => (\n            <ul {...passed}>\n              {groups &&\n                groups.map(group_name => (\n                  <li className=\"group-card-item\" key={group_name}>\n                    <AvatarCard\n                      label={group_name}\n                      disabled={user === 'mas'}\n                      avatar={{ fallback: <GroupIcon /> }}\n                      action={\n                        <SvgIcon\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSelectedGroup(group_name);\n                            modalActions.open();\n                          }}\n                        >\n                          <path d={mdiDeleteCircleOutline} />\n                        </SvgIcon>\n                      }\n                      description={retrieveGroupDescription(group_name)}\n                    />\n                  </li>\n                ))}\n              <li className=\"group-card-item\" key=\"add-user-to-groups\">\n                <EditUserGroupsContainer />\n              </li>\n            </ul>\n          )}\n        </ScrollableContainer>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setErrorMessage('An error occurred.');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  removeFromGroups: func\n};\n\nexport const UserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    const visibleGroups = user.member_of?.filter(group => group !== 'user');\n\n    return {\n      user: user.name,\n      groups: visibleGroups,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n  })\n)(UserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './EditUserGroups.local.scss';\nimport { addUserToGroupsThunk, removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const EditUserGroups = ({ user, groups, addToGroups, flags, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  if (user === 'mas') {\n    return null;\n  }\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard label=\"Add to group\" avatar={{ fallback: <AddIcon /> }} />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                user={user}\n                selected={groups}\n                flags={flags}\n                closeModal={closeModal}\n                onAdd={(userName, selections) => {\n                  return addToGroups(userName, selections);\n                }}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nEditUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  addToGroups: func,\n  flags: object\n};\n\nexport const EditUserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      groups: user.member_of,\n      flags: state.usersManager.flags.user,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    addToGroups: (user, groups) => dispatch(addUserToGroupsThunk({ user, groups })),\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n    /** add to group thunk here */\n    /** remove from group thunk here */\n  })\n)(EditUserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nconst GroupsList = ({\n  user,\n  selected,\n  onAdd,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    loading: true,\n    done: false,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => selected && !selected.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, selected]);\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.done && !state.all.length) {\n    return <p>Could not retrieve all groups</p>;\n  }\n\n  if (state.success) {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Added to selected groups succesfully!</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.fail) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>{capitalizeFirstLetter(state.fail)}</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? selected.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that the user is a part of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              onAdd(user, state.selections)\n                .then(response => {\n                  if (typeof response === 'object' && response.type === 'fail') {\n                    setState(\n                      produce(state, draft => {\n                        draft.fail = response.message;\n                      })\n                    );\n                  } else {\n                    setState(\n                      produce(state, draft => {\n                        draft.success = true;\n                      })\n                    );\n                  }\n                })\n                .catch(err => {\n                  setState(\n                    produce(state, draft => {\n                      draft.fail = err;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  user: string,\n  selected: array,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useRef } from 'react';\nimport { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { ChangePasswordContainer } from './ChangePassword';\nimport { UserDatesBox } from '../components/UserDatesBox';\n\n// import './EditUserDetails.local.scss';\n\nexport const EditUserDetails = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        User Details\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '370px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-details\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"User Details\"\n            formikRef={formRef}\n          />\n          <UserDetailsForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserDetails.propTypes = {\n  user: object\n};\n\nexport const EditUserDetailsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserDetails);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserDetailsForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ submitResult: undefined });\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  const initialValues = {\n    description: user.description\n  };\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          if (_.isEqual(initialValues, values)) {\n            actions.setSubmitting(false);\n            modalActions.close();\n          }\n\n          // parse and add user information form data.\n\n          /**\n            patch user description\n            */\n          RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`, {\n            description: values.description\n          })\n            .then(() => {\n              setState(prev => ({ ...prev, submitResult: 'success' }));\n            })\n            .catch(() => {\n              actions.setSubmitting(false);\n\n              setState(prev => ({ ...prev, submitResult: 'fail' }));\n            });\n        }}\n        innerRef={formRef}\n      >\n        {({ dirty, isSubmitting, submitForm }) => (\n          <>\n            <Paper.Content scrollable>\n              <Form>\n                <UserDatesBox created={user.date_created} updated={user.date_updated} />\n                <Row>\n                  <Field name=\"description\">\n                    {({ field, meta }) => {\n                      return (\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          error={meta.error && meta.touched}\n                          helperText={meta.touched ? meta.error : undefined}\n                          label=\"Short Description\"\n                        />\n                      );\n                    }}\n                  </Field>\n                </Row>\n              </Form>\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <ChangePasswordContainer />\n              </Paper.Footer.Left>\n              <Paper.Footer.Right>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || isSubmitting}\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nUserDetailsForm.propTypes = {\n  user: object,\n  modalActions: object\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { SvgIcon } from '@material-ui/core';\nimport { mdiAccountPlus, mdiAccountEdit } from '@mdi/js';\nimport moment from 'moment';\n\nimport './UserDatesBox.local.scss';\n\nexport const UserDatesBox = ({ created, updated }) => (\n  <div className=\"dates-box\">\n    {created && <DateCreated date={created} />}\n    {updated && <DateUpdated date={updated} />}\n  </div>\n);\n\nUserDatesBox.propTypes = { created: string, updated: string };\n\nexport const DateCreated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountPlus} />\n    </SvgIcon>\n    <span>Created on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateCreated.propTypes = { date: string };\n\nexport const DateUpdated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountEdit} />\n    </SvgIcon>\n    <span>Updated on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateUpdated.propTypes = { date: string };\n\nfunction parseDate(date) {\n  return moment(date).format('MMM DD YYYY');\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\n// import './EditUserInfo.local.scss';\n\nexport const EditUserInfo = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Contact Info\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '632px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"Contact Information\"\n            formikRef={formRef}\n          />\n          <UserInfoForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserInfo.propTypes = {\n  user: object\n};\n\nexport const EditUserInfoContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserInfo);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserInfoForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ loading: true });\n\n  useEffect(() => {\n    const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n    const prototypeEndpoint = 'prototype/mas0300.sys.user.information?version=1';\n\n    RestClient.get(prototypeEndpoint).then(formproto => {\n      const proto = formproto.data.data.prototypes[0];\n\n      RestClient.get(formEndpoint)\n        .then(formdata => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: false,\n            data: formdata.data.data.forms[0],\n            proto\n          });\n        })\n        .catch(() => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: true,\n            proto\n          });\n        });\n    });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <>\n        <Center>\n          <Loader />\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"primary\" onClick={modalActions.close}>\n              Cancel\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.result === 'success') {\n    const { fields, values } = mapFormValues(state.proto, state.data);\n\n    return (\n      <>\n        <Formik\n          validateOnChange={false}\n          initialValues={values}\n          onSubmit={(submited, actions) => {\n            if (_.isEqual(values, submited)) {\n              actions.setSubmitting(false);\n              modalActions.close();\n            }\n\n            const sendable_data = fields.reduce((d, entry) => {\n              /** Empty values have to be nulled to be sent in the data :( */\n              let value = submited[entry.name] || null;\n\n              /**\n                TODO: backend accepts array for is_repeatable values\n               */\n              if (entry.is_repeatable && !Array.isArray(value)) {\n                value = [value];\n              }\n\n              d.push({\n                name: entry.label, // for this particular form, the names contain spaces.\n                value\n              });\n\n              return d;\n            }, []);\n            // parse and add user information form data.\n\n            /**\n            Send user.info data to backend\n            */\n            const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n\n            if (state.create) {\n              const body = {\n                name: `mas0000.user.${user.name}.form.user_information`,\n                description: `User information for ${user.name}`,\n                values: sendable_data,\n                prototype: state.proto.name\n              };\n\n              RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.FORM}`, body)\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            } else {\n              RestClient.patch(formEndpoint, {\n                description: state.data.description,\n                rename: state.data.name,\n                values: sendable_data\n              })\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            }\n          }}\n          innerRef={formRef}\n        >\n          {({ dirty, isSubmitting, submitForm }) => (\n            <>\n              <Paper.Content scrollable>\n                <Form style={{ paddingTop: '16px' }}>\n                  {fields.map(entry => (\n                    <Row key={entry.name}>\n                      <FieldSwitch parameter={entry} />\n                    </Row>\n                  ))}\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button color=\"primary\" onClick={modalActions.close}>\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!dirty || isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          )}\n        </Formik>\n      </>\n    );\n  }\n};\n\nfunction mapFormValues(proto, provided) {\n  const { fields } = proto;\n  const data = provided && provided.values;\n\n  return fields.reduce(\n    (dict, entry, index) => {\n      const normalized = entry.name.replace(' ', '_');\n      const value = data && data[index].value;\n\n      if (entry.is_repeatable && Array.isArray(entry.value)) {\n        /**\n          TODO: array values have to be unpacked\n         */\n        dict.values[normalized] = value ? value[0] : '';\n      } else {\n        dict.values[normalized] = value || '';\n      }\n\n      dict.fields.push({\n        ...entry,\n        name: normalized,\n        label: entry.name\n      });\n\n      return dict;\n    },\n    { values: {}, fields: [] }\n  );\n}\n\nexport const TextField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    const schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAccountOff } from '@mdi/js';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './UserCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const UserCard = ({ href, user }) => {\n  const { pathname } = useLocation();\n  const { name, src } = user;\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  return (\n    <Link\n      to={href}\n      className={classnames('user-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`user-card-of-${name}`}\n    >\n      <Avatar className=\"user-avatar\" alt={name} src={src}>\n        {user.name[0].toUpperCase()}\n      </Avatar>\n      <span className={classnames('user-name', { groupless: noGroups })}>{name}</span>\n      {noGroups && (\n        <LightTooltip placement=\"bottom\" title=\"Deactivated user\">\n          <SvgIcon className=\"deactivated-icon\">\n            <Icon path={mdiAccountOff} />\n          </SvgIcon>\n        </LightTooltip>\n      )}\n    </Link>\n  );\n};\n\nUserCard.propTypes = {\n  href: string,\n  user: object\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoUserSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>User Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a user from the list to view or edit their details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n  </Paper>\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Section, Center, Row, Column } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { NewUserGroups } from './components/NewUserGroups';\n\nimport { createUserThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewUser.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmpassword: Yup.string()\n    .required('Please confim the password you entered')\n    .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  groups: Yup.array()\n});\n\nconst CreateNewUser = ({ submitUserValues, allUsers, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.username) ||\n      (values.username && values.username.substr(-1) === '.')\n    ) {\n      errors.username = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allUsers.map(user => {\n      if (exists) return;\n\n      if (user.name === values.username) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.username = 'A user with this name already exists';\n    }\n\n    if (values.password) {\n      if (/[$\\\\/\":;']/.test(values.password)) {\n        errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n      } else if (values.password.length < 8) {\n        errors.password = 'Password must contain at least eight characters';\n      } else if (!/[a-z]/.test(values.password)) {\n        errors.password = 'Password must have at least a lower case letter (ex: a, b, etc.)';\n      } else if (!/[A-Z]/.test(values.password)) {\n        errors.password = 'Password must have at least a upper case letter (ex: A, B, etc.)';\n      } else if (!/[0-9]/.test(values.password)) {\n        errors.password = 'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n      } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n        errors.password =\n          'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n      }\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /** Not used. Navigating dirrectly to new user */\n    if (operation.result === 'success') {\n      return (\n        <>\n          <Paper>\n            <Paper.Content scrollable={false}>\n              <Center>\n                <Result type={operation.result}>\n                  <Result.Text>User created successfully</Result.Text>\n                </Result>\n              </Center>\n            </Paper.Content>\n            <Paper.Footer>\n              <Button to=\"/system/mas-accounts/users\" component={Link}>\n                Go to user\n              </Button>\n            </Paper.Footer>\n          </Paper>\n        </>\n      );\n    }\n\n    let errorMessage = 'Could not create new user';\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirmpassword: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitUserValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.username));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <Paper>\n          <Form className=\"create-new-user-form\">\n            <Paper.Title>New User</Paper.Title>\n            <Paper.Content>\n              <Section>\n                <Section.Title>User Details</Section.Title>\n                <Section.Content>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"username\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"description\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            label=\"Short Description\"\n                            placeholder=\"Short description\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"password\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"confirmpassword\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            autoComplete=\"off\"\n                            required\n                            label=\"Confirm Password\"\n                            placeholder=\"Confirm Passwords\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                </Section.Content>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <NewUserGroups\n                      groups={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <div className=\"left-side-action\">\n                <Button to=\"/system/mas-accounts/users\" color=\"primary\">\n                  Cancel\n                </Button>\n              </div>\n\n              <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !isValid}>\n                Save\n              </Button>\n            </Paper.Footer>\n          </Form>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewUser.propTypes = { submitUserValues: func };\n\nexport const CreateNewUserPage = connect(\n  state => ({\n    allUsers: state.usersManager.users.all,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitUserValues: values => dispatch(createUserThunk(values))\n  })\n)(CreateNewUser);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './NewUserGroups.local.scss';\n\nexport const NewUserGroups = ({ groups, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {groups.map(group_name => (\n            <li className=\"group-card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = groups.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"group-card-item\" key=\"add-user-to-groups\">\n            <GroupsSelection\n              selected={groups}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nNewUserGroups.propTypes = {\n  username: string,\n  groups: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                selected={selected}\n                helpers={helpers}\n                closeModal={closeModal}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({\n  selected,\n  helpers,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                      setIsFormChanged(true);\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './GroupCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const GroupCard = ({ href, group }) => {\n  const { pathname } = useLocation();\n\n  const { name, src } = group;\n  return (\n    <Link\n      to={href}\n      className={classnames('group-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`group-card-of-${name}`}\n    >\n      <Avatar className=\"group-avatar\" alt={name} src={src}>\n        {group.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"group-name\">{name}</span>\n    </Link>\n  );\n};\n\nGroupCard.propTypes = {\n  href: string,\n  group: object\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { loadGroupThunk, removeGroupThunk } from '../../store/thunks';\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { GroupUsersContainer } from './containers/GroupUsers';\nimport { SubGroupsContainer } from './containers/SubGroups';\n\nimport './GroupView.local.scss';\n\nexport const GroupView = ({ group, removing, removeGroup }) => {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const deleteGroup = useCallback(() => {\n    removeGroup(group.name)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n        history.push('/system/mas-accounts/groups');\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group!'); // eslint-disable-line\n      });\n  }, [group]);\n\n  /* This needs to be written as a result check or 404 page for a group. */\n  if (!group) {\n    return <></>;\n  }\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title>{group.name}</Paper.Title>\n        </Paper.Header>\n\n        <Paper.Content scrollable>\n          <PrivilegesContainer />\n          <GroupUsersContainer />\n          <SubGroupsContainer />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"secondary\" disabled={removing} onClick={modalActions.open}>\n              Remove\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove group {group.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      deleteGroup();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupView.propTypes = {\n  group: object,\n  removing: bool,\n  removeGroup: func\n};\n\nexport const ConnectedGroupView = connect(\n  state => ({\n    group: state.groups.selected,\n    removing: state.groups.ops.remove.loading\n  }),\n  dispatch => ({\n    removeGroup: name => dispatch(removeGroupThunk(name))\n  })\n)(GroupView);\n\nexport const GroupLoader = ({ loadGroup, loading }) => {\n  const { groupName } = useParams();\n  useEffect(() => {\n    if (groupName) {\n      loadGroup(groupName);\n    }\n  }, [groupName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading Group <b>{groupName}</b>\n        </Loader>\n      ) : (\n        <ConnectedGroupView />\n      )}\n    </>\n  );\n};\n\nGroupLoader.propTypes = {\n  loadGroup: func,\n  loading: bool\n};\n\nexport const ConnectedGroupLoader = connect(\n  state => ({\n    loading: state.groups.ops.selected.loading\n  }),\n  dispatch => ({ loadGroup: name => dispatch(loadGroupThunk(name)) })\n)(GroupLoader);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { object, string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { Section } from 'shared/components/layout';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../store/thunks';\n\nexport const Privileges = ({ group, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Class privileges:</Section.Title>\n        <Section.Info>\n          Effective class privileges are calculated based on explicit grants and denies in this\n          group and in groups of which this group may be a member\n        </Section.Info>\n      </Section.Header>\n      <div className=\"user-privileges\">\n        <ul className=\"privileges-list\">\n          {privileges.map(entry => {\n            return (\n              <li key={entry.key} className=\"privileges-item\">\n                <Privilege group={group} privilege={entry} actions={actions} disabled={disabled} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nPrivileges.propTypes = {\n  group: object,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ group, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(group.name, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  group: object,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      disabled: state.groups.ops.privileges.loading,\n      privileges: mapPrivileges(group.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (group, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      ),\n    revoke: (group, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport './GroupUsers.local.scss';\nimport { EditGroupUsersContainer } from './EditGroupUsers';\n\nimport { removeUsersFromGroupThunk } from '../../../store/thunks';\n\nexport const GroupUsers = ({ group, removeUsersFromGroup }) => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeUsersFromGroup(group.name, selectedUser)\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [group, selectedUser]);\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Users in this group</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.users.map(user => (\n              <li className=\"card-item\" key={user}>\n                <AvatarCard\n                  label={user}\n                  avatar={{ initial: user.charAt(0) }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setSelectedUser(user);\n                        modalActions.open();\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"card-item\" key=\"add-user-to-groups\">\n              <EditGroupUsersContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {selectedUser} from group {group.name}?\n                    This could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupUsers.propTypes = {\n  group: object,\n  removeUsersFromGroup: func\n};\n\nexport const GroupUsersContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeUsersFromGroup: (group, user) => dispatch(removeUsersFromGroupThunk({ group, user }))\n  })\n)(GroupUsers);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { addUsersToGroupThunk } from '../../../store/thunks';\n\nimport './EditGroupUsers.local.scss';\n\nexport const EditGroupUsers = ({ group, addUsersToGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add user\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the users you want to add this group\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <UsersSelection\n                  group={group}\n                  closeModal={closeModal}\n                  onAdd={selections => {\n                    return addUsersToGroup(group.name, selections);\n                  }}\n                  setIsFormChanged={setIsFormChanged}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditGroupUsers.propTypes = {\n  group: object,\n  addUsersToGroup: func\n};\n\nexport const EditGroupUsersContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    addUsersToGroup: (group, users) => dispatch(addUsersToGroupThunk({ group, users }))\n  })\n)(EditGroupUsers);\n\nconst UsersSelection = ({ group, closeModal, onAdd, setIsFormChanged }) => {\n  const [state, setState] = useState({\n    selections: [],\n    usersFetched: false,\n    usersSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(u => !group.users.includes(u.name));\n  }, [state.all, state.showAll, group]);\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.users;\n            draft.usersFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.usersFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.usersFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>\n              {state.error ? capitalizeFirstLetter(state.error) : 'Could not retrieve user list!'}\n            </Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected users to group succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add users to group!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered.sort((a, b) =>\n              a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n            )}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? group.users.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      initial: entry.name.charAt(0)\n                    }}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show users that are members of this group\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              /**\n                NOTE: (to self)\n\n                This is lim 0 -> complete trash\n\n                Can't use redux for snippets of this operation.\n                The redux action that is required should only be to update final group entry at maximum.\n\n                Either all ops are in redux, or none are.\n               */\n              onAdd(state.selections).then(response => {\n                setState(prev =>\n                  produce(prev, draft => {\n                    draft.loading = false;\n                    draft.usersSubmitted = true;\n                    draft.result = response?.result;\n                    draft.error = response?.messages;\n                  })\n                );\n              });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nUsersSelection.propTypes = {\n  group: object,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiAccountGroup, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditSubGroupsContainer } from './EditSubGroups';\nimport { removeSubGroupsThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ group, removeSubGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeSubGroups(group.name, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group from group!'); // eslint-disable-line\n      });\n  }, [group, selectedGroup]);\n\n  const isOnlySelect = group?.member_of?.length === 1 && group?.member_of[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove group ${group.name} from group ${selectedGroup}?\n      This could affect the way the user will be able to interact with the app.`;\n\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Member of groups</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.member_of\n              .filter(g => g !== 'user')\n              .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n              .map(subgroup => (\n                <li className=\"card-item\" key={subgroup}>\n                  <AvatarCard\n                    label={subgroup}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    action={\n                      <SvgIcon\n                        onClick={e => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setSelectedGroup(subgroup);\n                          modalActions.open();\n                        }}\n                      >\n                        <path d={mdiDeleteCircleOutline} />\n                      </SvgIcon>\n                    }\n                    description={retrieveGroupDescription(subgroup)}\n                  />\n                </li>\n              ))}\n            <li className=\"card-item\" key=\"add-sub-group\">\n              <EditSubGroupsContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nSubGroups.propTypes = {\n  group: object,\n  removeSubGroups: func\n};\n\nexport const SubGroupsContainer = connect(\n  state => ({\n    group: state.groups.selected,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    removeSubGroups: (group, groups) => dispatch(removeSubGroupsThunk({ group, groups }))\n  })\n)(SubGroups);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport { PATCH_SELECTED_GROUP } from '../../../store/actions';\n\nimport './EditSubGroups.local.scss';\n\nexport const EditSubGroups = ({ group, updateGroup, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select which groups this one should be a part of\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupSelection\n                  group={group}\n                  updateGroup={updateGroup}\n                  closeModal={actions.close}\n                  setIsFormChanged={setIsFormChanged}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditSubGroups.propTypes = {\n  group: object,\n  updateGroup: func\n};\n\nexport const EditSubGroupsContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    updateGroup: group => dispatch(creators.action(PATCH_SELECTED_GROUP, group))\n  })\n)(EditSubGroups);\n\nconst GroupSelection = ({\n  group,\n  closeModal,\n  updateGroup,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    groupsFetched: false,\n    subgroupsSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => !group.member_of.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, group]);\n\n  const isDisabled = name => {\n    if (group.name === name) {\n      return true;\n    }\n\n    if (state.showAll) {\n      return group.member_of.includes(name);\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.groups;\n            draft.groupsFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.groupsFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (\n    state.groupsFetched &&\n    (!state.all.length || (state.result === 'fail' && !state.subgroupError))\n  ) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve groups list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected groups succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'fail') {\n    let errorMessage = 'Could not add selected groups!';\n\n    if (\n      state.error &&\n      state.error[0] &&\n      state.error[0].text &&\n      state.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = state.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>{errorMessage}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={isDisabled(entry.name)}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that this one already is a member of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group.name}/grant`, {\n                groups: state.selections\n              })\n                .then(({ data: resolved }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = resolved.result;\n                      draft.subgroupError = false;\n                    })\n                  );\n\n                  updateGroup(resolved.data.groups[0]);\n                })\n                .catch(error => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = 'fail';\n                      draft.error = error?.response?.data?.messages;\n                      draft.subgroupError = true;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupSelection.propTypes = {\n  group: object,\n  updateGroup: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Center } from 'shared/components';\nimport { Paper, Section, Column, Row } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { createGroupThunk } from '../../store/thunks';\n\nimport { SubGroups } from './components/SubGroups';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewGroup.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  groupname: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Group name is required'),\n  groups: Yup.array()\n});\n\nconst CreateNewGroup = ({ submitGroupValues, allGroups, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.groupname) ||\n      (values.groupname && values.groupname.substr(-1) === '.')\n    ) {\n      errors.groupname = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allGroups.map(group => {\n      if (exists) return;\n\n      if (group.name === values.groupname) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.groupname = 'A group with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /**\n     * Failed results are the ony onnes that are shown.\n     * For successfull creation, the user is navigated to the new entry\n     */\n    let errorMessage = 'Could not create new group';\n\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type=\"fail\">\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined, error: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        groupname: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitGroupValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.groupname));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid, submitForm }) => (\n        <Paper>\n          <Paper.Title>New Group</Paper.Title>\n          <Paper.Content>\n            <Form className=\"create-new-group-form\">\n              <Section>\n                <Section.Title>Group Details</Section.Title>\n                <Row>\n                  <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                    <Field name=\"groupname\">\n                      {({ field, meta }) => (\n                        <Input\n                          required\n                          {...field}\n                          label=\"Group Name\"\n                          placeholder=\"Group Name\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                  <Column style={{ maxWidth: '220px' }}>\n                    <Field name=\"description\">\n                      {({ field, meta }) => (\n                        <Input\n                          {...field}\n                          label=\"Short Description\"\n                          placeholder=\"Short Description\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                </Row>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <SubGroups\n                      selections={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Form>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button to=\"/system/mas-accounts/groups\" color=\"primary\">\n                Cancel\n              </Button>\n            </Paper.Footer.Left>\n\n            <Paper.Footer.Right>\n              <Button\n                type=\"submit\"\n                onClick={submitForm}\n                variant=\"contained\"\n                disabled={isSubmitting || !isValid}\n              >\n                Save\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewGroup.propTypes = { submitGroupValues: func };\n\nexport const CreateNewGroupPage = connect(\n  state => ({\n    allGroups: state.groups.all.filter(g => g.name !== 'user'),\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitGroupValues: values => dispatch(createGroupThunk(values))\n  })\n)(CreateNewGroup);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ selections, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {selections.map(group_name => (\n            <li className=\"card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = selections.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-group-to-groups\">\n            <GroupsSelection\n              selected={selections}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nSubGroups.propTypes = {\n  username: string,\n  selections: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    open: openModal,\n    close: closeModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"add-to-group-button\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <GroupAddIcon />\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the groups you want to add this user to\"\n                aria={aria}\n                onClose={actions.close}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupsList\n                  selected={selected}\n                  helpers={helpers}\n                  closeModal={actions.close}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal, retrieveGroupDescription }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ minWidth: '178px', maxWidth: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoGroupSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>Group Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a group from the list to view or edit its details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n    {/* <Paper.Footer /> */}\n  </Paper>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { mdiHexagonMultipleOutline } from '@mdi/js';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { changeStateThunk } from '../../../store/thunks';\n\nimport { ServerList } from '../ServerList/ServerList';\n\nimport './Dbms.local.scss';\n\nexport class DBMS extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"dbms-item\">\n        <header>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.protocol}-dbms`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiHexagonMultipleOutline} />\n              </SvgIcon>\n            </div>\n            <div\n              className={`value ${path.startsWith(data.path) ? 'active' : ''}`}\n              title={data.protocol}\n            >\n              {data.protocol}\n            </div>\n          </div>\n          <div\n            role=\"presentation\"\n            data-qa={`toggle-${data.protocol}-dbms`}\n            className={`status ${path.startsWith(data.path) ? 'active' : ''}`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <RemoveIcon /> : <AddIcon />}\n          </div>\n        </header>\n        <ul className=\"dbms-content\">{isExpanded && <ServerList servers={data.servers} />}</ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nDBMS.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDBMS = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(DBMS);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedServer } from './containers/Server/Server';\n\nexport class ServerList extends React.PureComponent {\n  render() {\n    const { servers } = this.props;\n\n    return servers.map(server => <ConnectedServer key={server.address} data={server} />);\n  }\n}\n\nServerList.propTypes = {\n  servers: array\n};\n\nexport default ServerList;\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { DatabaseList } from '../../../DatabaseList/DatabaseList';\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Server.local.scss';\n\nexport class Server extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"server-item\">\n        <header className={this.isActive(path, data.path)}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.address}-server`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={data.address}>\n              {data.address}\n            </div>\n          </div>\n          <div\n            className=\"status\"\n            role=\"presentation\"\n            data-qa={`toggle-${data.address}-server`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n          </div>\n        </header>\n        <ul className=\"server-content\">\n          {isExpanded && <DatabaseList databases={data.databases} />}\n        </ul>\n      </li>\n    );\n  }\n\n  isActive = (path, current) => {\n    const activePath = current.split('--');\n    const storedPath = path.split('--');\n\n    if (activePath[0] === storedPath[0] && activePath[1] === storedPath[1]) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nServer.propTypes = {\n  data: object,\n  storeState: object,\n  changeState: func\n};\n\nexport const ConnectedServer = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Server);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedDatabase } from './containers/Database/Database';\n\nexport class DatabaseList extends React.PureComponent {\n  render() {\n    const { databases } = this.props;\n\n    if (!databases) return null;\n\n    return databases.map(database => <ConnectedDatabase key={database.name} data={database} />);\n  }\n}\n\nDatabaseList.propTypes = {\n  databases: array\n};\n\nexport default DatabaseList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Database.local.scss';\n\nexport class Database extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.storeState.path === props.data.path) {\n      return { isExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n\n    const name = data.special.database;\n\n    return (\n      <li className=\"database-item\">\n        <header className={`${data.path === path ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${name}-database`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDatabase} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={name}>\n              {name}\n            </div>\n          </div>\n        </header>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nDatabase.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDatabase = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Database);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string, func, object } from 'prop-types';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport { changeStateThunk } from '../../store/thunks';\n\nimport './Breadcrumbs.local.scss';\n\nexport class BreadcrumbsTitle extends React.PureComponent {\n  render() {\n    const {\n      storeState: { path }\n    } = this.props;\n\n    return this.renderBreadcrumbs(path);\n  }\n\n  renderBreadcrumbs = path => {\n    const links = path\n      .split(this.props.separator)\n      .filter(e => e)\n      .reduce(\n        (routes, entry, index, list) => {\n          const previous = list.slice(0, index);\n          previous.push(entry);\n          const routePath = previous.join(this.props.separator);\n\n          const route = { label: entry, route: routePath };\n          routes.push(route);\n\n          return routes;\n        },\n        [{ label: 'DBMS', route: '' }]\n      );\n\n    return (\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        {links.map(link => {\n          return (\n            <div\n              data-qa={`breadcrumbs-${link.label}`}\n              className=\"path\"\n              role=\"presentation\"\n              key={link.route}\n              onClick={() => this.navigateTo(link.route)}\n            >\n              {link.label}\n            </div>\n          );\n        })}\n      </Breadcrumbs>\n    );\n  };\n\n  navigateTo = selectedLink => {\n    if (selectedLink === this.props.storeState.path) {\n      return;\n    }\n\n    this.props.changeState({ path: selectedLink });\n\n    this.setActiveLevel(selectedLink);\n  };\n\n  setActiveLevel = selectedLink => {\n    const linkElements = selectedLink.split(this.props.separator).filter(e => e);\n\n    switch (linkElements.length) {\n      case 0:\n        this.props.changeState({ level: 'all-dbms' });\n        break;\n      case 1:\n        this.props.changeState({ level: 'all-servers' });\n        break;\n      case 2:\n        this.props.changeState({ level: 'all-databases' });\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nBreadcrumbsTitle.propTypes = {\n  storeState: object,\n  changeState: func,\n  separator: string\n};\n\nBreadcrumbsTitle.defaultProps = {\n  separator: '--'\n};\n\nexport const ConnectedBreadcrumbsTitle = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(BreadcrumbsTitle);\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { ConnectedAllDbms } from '../../containers/AllDbms/AllDbms';\nimport { ConnectedAllServers } from '../../containers/AllServers/AllServers';\nimport { ConnectedAllDatabases } from '../../containers/AllDatabases/AllDatabases';\nimport { ConnectedWorkload } from '../../containers/Workload/Workload';\nimport { ConnectedLicense } from '../../containers/License/License';\nimport { ConnectedStorage } from '../../containers/Storage/Storage';\nimport { ConnectedObjects } from '../../containers/Objects/Objects';\nimport { ConnectedSessions } from '../../containers/Sessions/Sessions';\n\nexport class ContentSwitch extends React.PureComponent {\n  render() {\n    const { activePage } = this.props;\n\n    return this.renderPage(activePage);\n  }\n\n  renderPage = activePage => {\n    switch (activePage) {\n      case 'all-dbms':\n        return <ConnectedAllDbms />;\n      case 'all-servers':\n        return <ConnectedAllServers />;\n      case 'all-databases':\n        return <ConnectedAllDatabases />;\n      case 'workload':\n        return <ConnectedWorkload />;\n      case 'license':\n        return <ConnectedLicense />;\n      case 'storage':\n        return <ConnectedStorage />;\n      case 'objects':\n        return <ConnectedObjects />;\n      case 'sessions':\n        return <ConnectedSessions />;\n      default:\n        return <></>;\n    }\n  };\n}\n\nContentSwitch.propTypes = {\n  activePage: string\n};\n\nexport default ContentSwitch;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHexagonMultipleOutline, mdiChartTimelineVariant } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { getDBMSStatus, getDBMSStatusInfo } from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nexport class AllDbms extends React.PureComponent {\n  render() {\n    const { all, retrieveDBMSStatus, retrieveDBMSStatusInfo } = this.props;\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {all.map(dbms => (\n            <ActionCard\n              key={dbms.name}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n              }\n              status={dbms.name !== 'OTHER' ? retrieveDBMSStatus(dbms) : ''}\n              statusInfo={retrieveDBMSStatusInfo(dbms)}\n              type=\"dbms\"\n              label={dbms.name}\n              onClick={() => this.setPath(dbms.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: dbms.path, level: 'workload' })\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n  };\n}\n\nAllDbms.propTypes = {\n  all: array,\n  changeState: func\n};\n\nexport const ConnectedAllDbms = connect(\n  state => ({\n    all: state.explorer?.structured?.dbms || [],\n    allDbms: state.explorer.accounts,\n    retrieveDBMSStatus: dbms => getDBMSStatus(dbms, state.explorer.dbStatus),\n    retrieveDBMSStatusInfo: dbms => getDBMSStatusInfo(dbms, state.explorer.dbStatus)\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDbms);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiChartTimelineVariant, mdiPercent } from '@mdi/js';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, refreshServerDbsStatusThunk } from '../../store/thunks';\nimport {\n  getServerStatus,\n  getServerStatusInfo,\n  getEntityPendingStatus\n} from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nimport { ServerSettings } from '../Settings/ServerSettings';\n\nexport class AllServers extends React.PureComponent {\n  render() {\n    const {\n      all,\n      serversUsage,\n      retrieveServerStatus,\n      userDetails,\n      retrieveServerStatusInfo\n    } = this.props;\n    const servers = all;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {servers.map((server, index) => (\n            <ActionCard\n              key={`${server.name}-${index}`}\n              settings={<ServerSettings server={server} disabled={isDisabled} />}\n              status={server.databases.length > 0 ? retrieveServerStatus(server) : ''}\n              statusInfo={retrieveServerStatusInfo(server)}\n              type=\"server\"\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiDns} />\n                </SvgIcon>\n              }\n              label={server.address}\n              onClick={() => this.setPath(server.path)}\n              options={this.renderOptions(server)}\n              readOnlyOptions={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiPercent} />\n                    </SvgIcon>\n                  ),\n                  label: 'CPU Load',\n                  fillable: true,\n                  percentage:\n                    serversUsage.find(sv => sv.address === server.address)?.usage || undefined\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n  };\n\n  renderOptions = server => {\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: server.path, level: 'workload' })\n      }\n    ];\n\n    if (server.databases.length > 0) {\n      options.push({\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(server).label,\n        disabled: this.props.retrievePendingStatus(server).loading,\n        onClick: () => this.refreshServerDBs(server)\n      });\n    }\n\n    return options;\n  };\n\n  refreshServerDBs = server => {\n    if (!this.props.retrievePendingStatus(server).loading) {\n      this.props.refreshServerDbsStatus(server);\n    }\n  };\n}\n\nAllServers.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllServers = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const dbms = structured.dbms.find(entry => entry.protocol === path);\n\n    return {\n      all: dbms?.servers || [],\n      allDbms: state.explorer.accounts,\n      storeState: state.explorer.state,\n      serversUsage: state.explorer.serversUsage?.servers || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveServerStatus: server => getServerStatus(server, state.explorer.dbStatus),\n      retrieveServerStatusInfo: server => getServerStatusInfo(server, state.explorer.dbStatus),\n      retrievePendingStatus: server =>\n        getEntityPendingStatus(server, state.explorer.dbStatus, 'server')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshServerDbsStatus: server => dispatch(refreshServerDbsStatusThunk(server))\n  })\n)(AllServers);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport { mdiSettings, mdiDns } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\n\nexport const ServerSettings = ({ server, disabled }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  if (disabled) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n\n      <Modal open={open} actions={modalActions}>\n        <EditServerContainer server={server} />\n      </Modal>\n    </>\n  );\n};\n\nexport const EditServer = ({ server, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    fetchProtocols().then(resp => {\n      if (resp.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: resp.protocols || []\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Edit Server\"\n        desc=\"Edit the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <ServerForm\n            server={server}\n            protocols={state.protocols}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditServerContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditServer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\n\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiDatabase,\n  mdiCheckboxMultipleBlankOutline,\n  mdiShape,\n  mdiLicense,\n  mdiHexagonSlice2\n} from '@mdi/js';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nimport { DatabaseSettings } from '../Settings/DatabaseSettings';\n\nimport {\n  retrieveServerEntry,\n  getBackup,\n  getDBStatus,\n  getDBStatusInfo,\n  getEntityPendingStatus\n} from '../../store/selectors';\n\nexport class AllDatabases extends React.PureComponent {\n  render() {\n    const {\n      databases,\n      retrieveDbBackup,\n      retrieveDbStatus,\n      retrieveDbStatusInfo,\n      userDetails\n    } = this.props;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <>\n        <Paper.Content>\n          <CardsLayout>\n            {databases.map(database => (\n              <ActionCard\n                key={database.name}\n                lastBackup={retrieveDbBackup(database)}\n                settings={<DatabaseSettings database={database} disabled={isDisabled} />}\n                status={retrieveDbStatus(database)}\n                statusInfo={retrieveDbStatusInfo(database)}\n                type=\"database\"\n                icon={\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                }\n                label={database.special.database}\n                onClick={() => this.setPath(database.path)}\n                options={this.renderOptions(database)}\n              />\n            ))}\n          </CardsLayout>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n\n  refreshDBStatus = db => {\n    if (!this.props.retrievePendingStatus(db).loading) {\n      this.props.refreshDatabaseStatus(db);\n    }\n  };\n\n  renderOptions = database => {\n    const [protocol] = database.path.split('--');\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: database.path, level: 'workload' })\n      },\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiCheckboxMultipleBlankOutline} />\n          </SvgIcon>\n        ),\n        label: 'Sessions',\n        onClick: () => this.props.changeState({ path: database.path, level: 'sessions' })\n      },\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiShape} />\n          </SvgIcon>\n        ),\n        label: 'Objects',\n        onClick: () => this.props.changeState({ path: database.path, level: 'objects' })\n      },\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiHexagonSlice2} />\n          </SvgIcon>\n        ),\n        label: 'Storage',\n        onClick: () => this.props.changeState({ path: database.path, level: 'storage' })\n      },\n      {\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(database).label,\n        disabled: this.props.retrievePendingStatus(database).loading,\n        onClick: () => this.refreshDBStatus(database)\n      }\n    ];\n\n    if (protocol === 'ORACLE') {\n      options.splice(options.length - 1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        ),\n        label: 'License reporting',\n        onClick: () => this.props.changeState({ path: database.path, level: 'license' })\n      });\n    }\n\n    return options;\n  };\n}\n\nAllDatabases.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllDatabases = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const [protocol, address] = path.split('--');\n    const server = retrieveServerEntry({ protocol, address }, structured);\n    const backups = state.explorer.dbLastBackup;\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      databases: (server && server.databases) || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveDbBackup: database => getBackup(database, backups),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database =>\n        getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db))\n  })\n)(AllDatabases);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport { mdiSettings, mdiDatabase } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\n\nexport const DatabaseSettings = ({ database, disabled }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  if (disabled) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n\n      <Modal open={open} actions={modalActions}>\n        <EditDatabaseContainer database={database} />\n      </Modal>\n    </>\n  );\n};\n\nexport const EditDatabase = ({ database, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [], modes: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Edit Database\"\n        desc=\"Edit the database connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <DatabaseForm\n            account={database}\n            protocols={state.protocols}\n            modes={state.modes}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditDatabaseContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditDatabase);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Overflow, Paper } from 'shared/components/layout';\nimport { Center, WorkloadGraph } from 'shared/components';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { JobResults } from 'shared/components/JobResults';\n\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\n\nimport './Workload.local.scss';\n\nexport class Workload extends React.PureComponent {\n  componentDidMount() {\n    this.getJobsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.storeState.path !== prevProps.storeState.path ||\n      this.props.globalFilters !== prevProps.globalFilters\n    ) {\n      this.getJobsData();\n    }\n  }\n\n  render() {\n    const {\n      jobs,\n      storeState: { path, level }\n    } = this.props;\n    const pageLevel = path.split('--').filter(e => e).length;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          {pageLevel === 3 && (\n            <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n          )}\n        </Paper.Header>\n        <Paper.Content>\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader>Loading jobs</Loader>\n            </Center>\n          ) : (\n            <>\n              {jobs.get('total_count') > 0 ? (\n                <>\n                  <div className=\"container\">\n                    <div className=\"graph-container\">\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                        isSingleDay={\n                          moment\n                            .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD') ===\n                          moment\n                            .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD')\n                        }\n                        setSingleDay={this.props.setGlobalFilters}\n                      />\n                    </div>\n                    <div className=\"jobs-container\">\n                      <Overflow>\n                        <JobResults jobs={jobs.get('content')} />\n                      </Overflow>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Center>Job list is empty</Center>\n              )}\n            </>\n          )}\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getJobsData() {\n    const {\n      storeState: { path }\n    } = this.props;\n    const levelFilters = path.split('--').filter(e => e);\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      protocol_filter: levelFilters[0],\n      shell_host_address_filter: levelFilters[1],\n      database_name_filter: levelFilters[2]\n    });\n  }\n}\n\nWorkload.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  jobs: object,\n  getJobs: func,\n  changeState: func\n};\n\nexport const ConnectedWorkload = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    jobs: jobsSelector(state)\n  }),\n  dispatch => ({\n    getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(Workload);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func, array, bool } from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\n\nimport { Paper } from 'shared/components/layout';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { changeStateThunk, loadAllLicensesThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { LicenseList } from './LicenseList/LicenseList';\nimport { ConnectedReport } from './Report/Report';\n\nimport './License.local.scss';\n\nexport class License extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLicenses: [],\n      singleLicense: null,\n      page: 1 // 1 = licenses list, 2 = license report\n    };\n  }\n\n  componentDidMount() {\n    this.getLicenseData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.globalFilters !== prevProps.globalFilters) {\n      this.getLicenseData();\n    }\n  }\n\n  render() {\n    const {\n      storeState: { level, path },\n      licenseList,\n      isLoading\n    } = this.props;\n    const { selectedLicenses, page, singleLicense } = this.state;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n        </Paper.Header>\n        {page === 1 &&\n          (isLoading ? (\n            <Paper.Content>\n              <Center>\n                <Loader>Loading reports</Loader>\n              </Center>\n            </Paper.Content>\n          ) : (\n            <>\n              <Paper.Content>\n                <LicenseList\n                  data={licenseList}\n                  selectedLicenses={selectedLicenses}\n                  setSelectedLicensesCallback={this.setSelectedLicenses}\n                  compareWithLatestCallback={this.compareWithLatest}\n                  licenseReportCallback={this.licenseReport}\n                />\n              </Paper.Content>\n              {licenseList.length > 0 && (\n                <Paper.Footer>\n                  <Button\n                    className=\"compare-btn\"\n                    disabled={selectedLicenses.length !== 2}\n                    variant=\"contained\"\n                    onClick={() => this.compareReports()}\n                    data-qa=\"compare-reports\"\n                  >\n                    Compare\n                  </Button>\n                </Paper.Footer>\n              )}\n            </>\n          ))}\n\n        {page === 2 && (\n          <>\n            <Paper.Content>\n              <ConnectedReport licenses={selectedLicenses} license={singleLicense} />\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <Button\n                  data-qa=\"back-to-licenses\"\n                  className=\"back-btn\"\n                  onClick={() => this.showLicenseList()}\n                >\n                  Back\n                </Button>\n              </Paper.Footer.Left>\n            </Paper.Footer>\n          </>\n        )}\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getLicenseData = () => {\n    const {\n      storeState: { path },\n      globalFilters\n    } = this.props;\n    const ancestors = path.split('--').filter(e => e);\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    const payload = {\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      status: 'SUCCEEDED',\n      name_filter: 'vendita.oracle.rdbms.util.monitor.licensed_feature_usage.full_report',\n      protocol_filter: ancestors[0],\n      shell_host_address_filter: ancestors[1],\n      database_name_filter: ancestors[2]\n    };\n    this.props.loadAllLicenses(payload);\n  };\n\n  setSelectedLicenses = license => {\n    const { selectedLicenses } = this.state;\n    // check if license was already selected\n    const exists = selectedLicenses.findIndex(e => e.uuid === license.uuid);\n\n    // if exists, remove it from array\n    if (exists > -1) {\n      const newSelectedLicenses = [...selectedLicenses];\n      newSelectedLicenses.splice(exists, 1);\n      this.setState({ selectedLicenses: newSelectedLicenses });\n    } else if (selectedLicenses.length < 2) {\n      // if there are less than two elements, add it\n      this.setState({ selectedLicenses: [...selectedLicenses, license] });\n    }\n  };\n\n  compareReports = () => {\n    this.setState({ page: 2, singleLicense: null });\n  };\n\n  compareWithLatest = (latestReport, selectedReport) => {\n    const comparable = [];\n    comparable.push(latestReport, selectedReport);\n    this.setState({ selectedLicenses: comparable, page: 2, singleLicense: null });\n  };\n\n  showLicenseList = () => {\n    this.setState({ page: 1, selectedLicenses: [], singleLicense: null });\n  };\n\n  licenseReport = license => {\n    this.setState({ singleLicense: license, page: 2 });\n  };\n}\n\nLicense.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  changeState: func,\n  loadAllLicenses: func,\n  licenseList: array,\n  isLoading: bool\n};\n\nexport const ConnectedLicense = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    licenseList: state.explorer.licenses,\n    isLoading: state.explorer.flags.license.loading\n  }),\n  dispatch => ({\n    loadAllLicenses: payload => dispatch(loadAllLicensesThunk(payload)),\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(License);\n","import React, { useState, useCallback } from 'react';\nimport { array, func } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiLicense, mdiFileCompare } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Center } from 'shared/components';\n\nimport './LicenseList.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LicenseList = ({\n  data,\n  selectedLicenses,\n  setSelectedLicensesCallback,\n  compareWithLatestCallback,\n  licenseReportCallback\n}) => {\n  const [hoveredLicenseUuid, setHoveredLicenseUuid] = useState(null);\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const updateHoveredLicenseUuid = licenseUuid => {\n    setHoveredLicenseUuid(licenseUuid);\n  };\n\n  const renderIcon = licenseUuid => {\n    let icon = (\n      <SvgIcon>\n        <Icon path={mdiLicense} />\n      </SvgIcon>\n    );\n\n    // license is selected\n    if (selectedLicenses.findIndex(l => l.uuid === licenseUuid) > -1) {\n      icon = <CheckIcon />;\n    } else if (hoveredLicenseUuid === licenseUuid) {\n      icon = <CheckIcon className=\"hovered-icon\" />;\n    }\n\n    return icon;\n  };\n\n  return (\n    <div\n      className={classnames('searchable-list-slot', {\n        scrolled\n      })}\n    >\n      {data.length > 0 ? (\n        <div className=\"grid\" onWheel={onWheel}>\n          {data.map((license, index) => {\n            return (\n              <div\n                data-qa={`report-${data.length - index}-details`}\n                className=\"row\"\n                key={license.uuid}\n                role=\"presentation\"\n                onMouseEnter={() => updateHoveredLicenseUuid(license.uuid)}\n                onMouseLeave={() => updateHoveredLicenseUuid(null)}\n                onClick={() => licenseReportCallback(license)}\n              >\n                <div className=\"column\">\n                  <div\n                    data-qa={`toggle-selected-report-${data.length - index}`}\n                    className={`icon-container ${\n                      selectedLicenses.findIndex(l => l.uuid === license.uuid) > -1\n                        ? 'selected'\n                        : ''\n                    }${hoveredLicenseUuid === license.uuid ? ' hovered' : ''}`}\n                    onClick={event => {\n                      event.stopPropagation();\n                      setSelectedLicensesCallback(license);\n                    }}\n                    role=\"presentation\"\n                  >\n                    {renderIcon(license.uuid)}\n                  </div>\n                </div>\n                <div className=\"column name\">\n                  {`License feature usage report ${data.length - index}`}\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Date:</div>\n                    <div className=\"value\">{moment(license.date_invoke).format('MMM DD YYYY')}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Ran at:</div>\n                    <div className=\"value\">{moment(license.date_invoke).format('HH:mm:ss')}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Ran by:</div>\n                    <div className=\"value\">{license.user_owner}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  {index > 0 && selectedLicenses.length === 0 && (\n                    <div\n                      data-qa={`compare-report${data.length - index}-to-latest`}\n                      className=\"icon\"\n                      onClick={event => {\n                        event.stopPropagation();\n                        compareWithLatestCallback(data[0], license);\n                      }}\n                      role=\"presentation\"\n                    >\n                      <LightTooltip placement=\"bottom\" title=\"Compare to latest\">\n                        <SvgIcon>\n                          <Icon path={mdiFileCompare} />\n                        </SvgIcon>\n                      </LightTooltip>\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <Center>Currently there are no license reporting available.</Center>\n      )}\n    </div>\n  );\n};\n\nLicenseList.propTypes = {\n  data: array,\n  selectedLicenses: array,\n  setSelectedLicensesCallback: func,\n  compareWithLatestCallback: func,\n  licenseReportCallback: func\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, func, array, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { getLicenseReportThunk } from '../../../store/thunks';\nimport { FeaturesStatus } from '../../../components/LicenseReporting/FeaturesStatus/FeaturesStatus';\nimport { FeaturesUsage } from '../../../components/LicenseReporting/FeaturesUsage/FeaturesUsage';\nimport { UnusedFeatures } from '../../../components/LicenseReporting/UnusedFeatures/UnusedFeatures';\n\nimport './Report.local.scss';\n\nexport class Report extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolled: false\n    };\n  }\n\n  async componentDidMount() {\n    const { license, getLicenseReport, licenses } = this.props;\n    if (license) {\n      await getLicenseReport(license);\n    } else {\n      await Promise.all([getLicenseReport(licenses[0]), getLicenseReport(licenses[1])]);\n    }\n  }\n\n  render() {\n    const { scrolled } = this.state;\n    const { isLoading, reportOne, reportTwo } = this.props;\n    return isLoading ? (\n      <Center>\n        <Loader>Loading report details</Loader>\n      </Center>\n    ) : (\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled\n        })}\n      >\n        <div className=\"container\" onWheel={event => this.onWheel(event)}>\n          <FeaturesStatus reportOne={reportOne} reportTwo={reportTwo} />\n          <FeaturesUsage reportOne={reportOne} reportTwo={reportTwo} />\n          <UnusedFeatures reportOne={reportOne} reportTwo={reportTwo} />\n        </div>\n      </div>\n    );\n  }\n\n  onWheel = event => {\n    if (event.currentTarget.scrollTop) {\n      if (!this.state.scrolled) {\n        this.setState({ scrolled: true });\n      }\n    } else if (this.state.scrolled) {\n      this.setState({ scrolled: false });\n    }\n\n    scroller(event);\n  };\n}\n\nReport.propTypes = {\n  getLicenseReport: func,\n  isLoading: bool,\n  license: object,\n  licenses: array,\n  reportOne: object,\n  reportTwo: object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let reportOne;\n  let reportTwo;\n  if (ownProps.license) {\n    // need to display details for only one report so get its details from the store\n    if (state.explorer.reports && state.explorer.reports[ownProps.license.uuid]) {\n      reportOne = state.explorer.reports[ownProps.license.uuid];\n    }\n  } else if (\n    // we have two reports to compare\n\n    state.explorer.reports &&\n    state.explorer.reports[ownProps.licenses[0].uuid] &&\n    state.explorer.reports[ownProps.licenses[1].uuid]\n  ) {\n    if (ownProps.licenses[0].date_invoke > ownProps.licenses[1].date_invoke) {\n      reportOne = state.explorer.reports[ownProps.licenses[1].uuid];\n      reportTwo = state.explorer.reports[ownProps.licenses[0].uuid];\n    } else {\n      reportOne = state.explorer.reports[ownProps.licenses[0].uuid];\n      reportTwo = state.explorer.reports[ownProps.licenses[1].uuid];\n    }\n  }\n\n  return {\n    isLoading: state.explorer.flags.reports.loading,\n    reportOne,\n    reportTwo\n  };\n};\n\nexport const ConnectedReport = connect(mapStateToProps, dispatch => ({\n  getLicenseReport: license => dispatch(getLicenseReportThunk(license))\n}))(Report);\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { object, node, any } from 'prop-types';\nimport moment from 'moment';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheckboxMarkedCircle, mdiCloseCircle } from '@mdi/js';\n\nimport './FeaturesStatus.local.scss';\n\nexport class FeaturesStatus extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0\n    };\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"features-status-container\">\n        <header>\n          <h1>License Features Status</h1>\n        </header>\n\n        {!reportTwo && <div className=\"feature-status\">{this.renderSingleReport()}</div>}\n        {reportTwo && <div className=\"feature-status\">{this.renderComparableReports()}</div>}\n      </div>\n    );\n  }\n\n  setSelectedIndex = (event, newIndex) => {\n    this.setState({ selectedIndex: newIndex });\n  };\n\n  renderSingleReport = () => {\n    const columns = Object.entries(this.props?.reportOne?.FEATURES ?? {});\n\n    return (\n      <>\n        <div className=\"feature-name\">\n          <Tabs\n            orientation=\"vertical\"\n            value={this.state.selectedIndex}\n            onChange={(event, newIndex) => this.setSelectedIndex(event, newIndex)}\n          >\n            {columns.map((column, index) => (\n              <Tab key={column[0]} label={column[0]} data-qa={`feature-column-${index}`} />\n            ))}\n          </Tabs>\n        </div>\n        <div className=\"feature-details\">\n          <header className=\"row header\">\n            <div className=\"feature\">Feature</div>\n            <div className=\"status-container\">\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportOne.date_invoke).format('MMM DD YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportOne.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n            </div>\n          </header>\n          {columns.map((column, index) => {\n            const values = Object.keys(column[1]);\n            return (\n              <TabPanel key={index} value={this.state.selectedIndex} index={index}>\n                {values.map((value, valIndex) => {\n                  return (\n                    <div key={`${index}-${valIndex}`} className=\"row\">\n                      <div className=\"feature-name\">{values[valIndex]}</div>\n                      <div className=\"status-container\">\n                        {column[1][value].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </TabPanel>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n\n  renderComparableReports = () => {\n    const comparableFeatures = {};\n    const { reportOne, reportTwo } = this.props;\n    if (reportOne.FEATURES && reportTwo && reportTwo.FEATURES) {\n      const reportOneEntries = Object.entries(reportTwo.FEATURES);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        const options = Object.keys(feature[1]);\n\n        options.map((value, index) => {\n          comparableFeatures[feature[0]][options[index]] = [\n            feature[1][value].toString() === 'true' ? 'true' : 'false'\n          ];\n          comparableFeatures[feature[0]][options[index]][1] = 'false';\n\n          return null;\n        });\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportOne.FEATURES);\n      reportTwoEntries.map(feature => {\n        const options = Object.keys(feature[1]);\n\n        if (feature[0] in comparableFeatures) {\n          options.map((value, index) => {\n            comparableFeatures[feature[0]][options[index]][1] =\n              feature[1][value].toString() === 'true' ? 'true' : 'false';\n            return null;\n          });\n        } else {\n          // current featured category was not present in previous report so we add it\n          comparableFeatures[feature[0]] = {};\n\n          options.map((value, index) => {\n            // add it as false for the previous report\n            comparableFeatures[feature[0]][options[index]] = ['false'];\n            // add it with current value for the current report\n            comparableFeatures[feature[0]][options[index]][1] =\n              feature[1][value].toString() === 'true' ? 'true' : 'false';\n\n            return null;\n          });\n        }\n        return null;\n      });\n    }\n\n    const columns = Object.entries(comparableFeatures);\n\n    return (\n      <>\n        <div className=\"feature-name\">\n          <Tabs\n            orientation=\"vertical\"\n            value={this.state.selectedIndex}\n            onChange={(event, newIndex) => this.setSelectedIndex(event, newIndex)}\n          >\n            {columns.map((column, index) => (\n              <Tab key={column[0]} label={column[0]} data-qa={`feature-column-${index}`} />\n            ))}\n          </Tabs>\n        </div>\n\n        <div className=\"feature-details\">\n          <header className=\"row header\">\n            <div className=\"feature\">Feature</div>\n            <div className=\"status-container compare\">\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportOne.date_invoke).format('MMM DD YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportOne.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportTwo.date_invoke).format('MMM DD YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportTwo.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n            </div>\n          </header>\n\n          {columns.map((column, index) => {\n            const values = Object.keys(column[1]);\n            return (\n              <TabPanel key={index} value={this.state.selectedIndex} index={index}>\n                {values.map((value, valIndex) => {\n                  return (\n                    <div key={`${index}-${valIndex}`} className=\"row\">\n                      <div className=\"feature-name\">{values[valIndex]}</div>\n                      <div className=\"status-container compare\">\n                        {column[1][value][0].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                        {column[1][value][1].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </TabPanel>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n}\n\nFeaturesStatus.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesStatus;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: node,\n  index: any.isRequired,\n  value: any.isRequired\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './FeaturesUsage.local.scss';\n\nexport class FeaturesUsage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n    return (\n      <div className=\"features-usage-container\">\n        <header>\n          <h1>License Features Usage</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.USED ?? {});\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          <div className=\"value single\">{feature[1].USAGES}</div>\n          <div className=\"label\">{feature[0]}</div>\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const comparableFeatures = {};\n    if (reportOne.USED && reportOne && reportOne.USED) {\n      const reportOneEntries = Object.entries(reportOne.USED);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        comparableFeatures[feature[0]].usage = [parseInt(feature[1].USAGES, 10)];\n        comparableFeatures[feature[0]].usage[1] = 0;\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportTwo.USED);\n\n      reportTwoEntries.map(feature => {\n        if (feature[0] in comparableFeatures) {\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        } else {\n          comparableFeatures[feature[0]] = {};\n          comparableFeatures[feature[0]].usage = [0];\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        }\n\n        return null;\n      });\n    }\n\n    const features = Object.entries(comparableFeatures);\n    return features.map(feature => {\n      return (\n        <LightTooltip\n          key={feature[0]}\n          placement=\"top\"\n          title={\n            <>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportOne.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[0]}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportTwo.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[1]}</div>\n              </div>\n            </>\n          }\n        >\n          <div className=\"feature\">\n            {this.getFeatureValue(\n              comparableFeatures[feature[0]].usage[0],\n              comparableFeatures[feature[0]].usage[1]\n            )}\n            <div className=\"label\">{feature[0]}</div>\n          </div>\n        </LightTooltip>\n      );\n    });\n  };\n\n  getFeatureValue = (rep1, rep2) => {\n    let valueNode = <div className=\"value lower\">{rep1 - rep2}</div>;\n\n    if (rep1 === rep2) {\n      valueNode = <div className=\"value equal\">=</div>;\n    } else if (rep2 > rep1) {\n      valueNode = <div className=\"value higher\">{rep2 - rep1}</div>;\n    }\n\n    return valueNode;\n  };\n}\n\nFeaturesUsage.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesUsage;\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n\n    '& .row': {\n      display: 'flex',\n\n      '& .value': {\n        paddingLeft: '15px',\n        marginLeft: 'auto',\n        fontWeight: '600'\n      }\n    }\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\n\nimport './UnusedFeatures.local.scss';\n\nexport class UnusedFeatures extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"unused-features-container\">\n        <header>\n          <h1>Unused features</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.UNUSED ?? {});\n\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          {feature[0]}\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const features = Object.keys(reportTwo.UNUSED);\n\n    const comparableFeatures = features.filter(feature => {\n      return reportOne.UNUSED[feature] !== undefined;\n    });\n\n    return comparableFeatures.map(feature => {\n      return (\n        <div key={feature} className=\"feature\">\n          {feature}\n        </div>\n      );\n    });\n  };\n}\n\nUnusedFeatures.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default UnusedFeatures;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  changeStateThunk,\n  loadStoragePointsThunk,\n  setStorageItemThunk,\n  loadStorageDetailsThunk\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport {\n  getFullPath,\n  getFormattedStorage,\n  haveStorageData,\n  getStorageDetailsData\n} from '../../store/selectors';\n\nconst Storage = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getStoragePoints,\n  getStorageDetails,\n  storagePoints,\n  storageDetails,\n  selectedItem,\n  setStorageItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n\n  useEffect(() => {\n    if (!storedEntries) {\n      getStoragePoints({\n        fullPath\n      });\n      getStorageDetails({\n        selectedItem,\n        fullPath\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          data={storageDetails}\n          list={storagePoints}\n          selectedItem={selectedItem}\n          setItem={setStorageItem}\n          dbName={dbName}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nStorage.propTypes = {\n  storeState: PropTypes.object,\n  storagePoints: PropTypes.array,\n  storageDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setStorageItem: PropTypes.func,\n  selectedItem: PropTypes.string,\n  getStoragePoints: PropTypes.func\n};\n\nexport const ConnectedStorage = connect(\n  state => ({\n    storeState: state.explorer.state,\n    storagePoints: getFormattedStorage(state),\n    selectedItem: state.explorer.storage.selected,\n    loadingFlags: state.explorer.flags.storage,\n    storedEntries: haveStorageData(state),\n    storageDetails: getStorageDetailsData(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setStorageItem: path => dispatch(setStorageItemThunk(path)),\n    getStorageDetails: filters => dispatch(loadStorageDetailsThunk(filters)),\n    getStoragePoints: filters => dispatch(loadStoragePointsThunk(filters))\n  })\n)(Storage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, setSelectedObjectThunk, loadObjectsThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport {\n  getFullPath,\n  getStructuredObjects,\n  getSelectedObjectData,\n  getInvalidObjects,\n  haveObjectsData\n} from '../../store/selectors';\n\nconst Objects = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getObjects,\n  objectsData,\n  invalidObjects,\n  objectDetails,\n  selectedItem,\n  setObjectsItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  useEffect(() => {\n    if (!storedEntries) {\n      getObjects({\n        fullPath\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          invalidObjects={invalidObjects}\n          data={objectDetails}\n          list={objectsData}\n          selectedItem={selectedItem}\n          setItem={setObjectsItem}\n          dbName={dbName}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nObjects.propTypes = {\n  storeState: PropTypes.object,\n  objectsData: PropTypes.array,\n  objectDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setObjectsItem: PropTypes.func,\n  selectedItem: PropTypes.object,\n  getObjects: PropTypes.func\n};\n\nexport const ConnectedObjects = connect(\n  state => ({\n    storeState: state.explorer.state,\n    objectsData: getStructuredObjects(state),\n    selectedItem: {\n      owner: state.explorer.objects.selectedOwner,\n      object: state.explorer.objects.selectedObject\n    },\n    loadingFlags: state.explorer.flags.objects,\n    objectDetails: getSelectedObjectData(state),\n    invalidObjects: getInvalidObjects(state),\n    fullPath: getFullPath(state),\n    storedEntries: haveObjectsData(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setObjectsItem: object => dispatch(setSelectedObjectThunk(object)),\n    getObjects: filters => dispatch(loadObjectsThunk(filters))\n  })\n)(Objects);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeStateThunk, loadSessionsThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { Table, LightTooltip, Center } from 'shared/components';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { Button } from 'shared/components/controls';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import SvgIcon from '@material-ui/core/SvgIcon';\n// import Icon from '@mdi/react';\n// import { mdiViewCompact } from '@mdi/js';\nimport { getFullPath, getSortedSessions } from '../../store/selectors';\n\nimport './Sessions.local.scss';\n\nconst columns = [\n  { label: 'Serial #' },\n  { label: 'Username' },\n  { label: 'Status' },\n  { label: 'Machine' },\n  { label: 'SID' },\n  { label: 'Logon time', sortKey: 'LOGON_TIME' },\n  { label: 'Program' },\n  { label: 'Type' }\n  // { label: '' } -> disabled view details button for now...\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row['SERIAL#']} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USERNAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATUS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MACHINE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.LOGON_TIME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PROGRAM} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.TYPE} />\n    </Table.Cell>\n    {/* <Table.Cell padding=\"none\" className=\"view-details\">\n      <LightTooltip placement=\"bottom\" title={<span>View Details</span>}>\n        <SvgIcon>\n          <Icon path={mdiViewCompact} />\n        </SvgIcon>\n      </LightTooltip>\n    </Table.Cell> */}\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map(rowRenderer)}</Table>;\n};\n\nexport const Sessions = props => {\n  const {\n    level,\n    sessions,\n    isLoading,\n    getSessions,\n    fullPath,\n    changeTab,\n    storeState: { path }\n  } = props;\n\n  const [sortBehavior, setSortBehavior] = useState({ sortKey: 'LOGON_TIME', order: 'asc' });\n  const changeSort = (sortKey, order) => () => setSortBehavior({ sortKey, order });\n  const getSessionsData = () => {\n    getSessions({\n      sort: sortBehavior,\n      fullPath,\n      page_size: 2147483645\n    });\n  };\n  const tableProps = { changeSort, columns, sortBehavior };\n  const [protocol] = path.split('--');\n  useEffect(getSessionsData, [sortBehavior]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sessions}\n          tableProps={tableProps}\n          noDataMessage=\"No Sessions Available\"\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Button className=\"qa-refresh-btn align-right\" onClick={getSessionsData}>\n          <FormattedMessage id=\"general.refresh\" />\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nSessions.propTypes = {\n  level: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  fullPath: PropTypes.string.isRequired,\n  changeTab: PropTypes.func\n};\n\nexport const ConnectedSessions = connect(\n  state => ({\n    sessions: getSortedSessions(state),\n    level: state.explorer.state.level,\n    isLoading: state.explorer.flags.sessions.loading,\n    fullPath: getFullPath(state),\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getSessions: filters => dispatch(loadSessionsThunk(filters))\n  })\n)(Sessions);\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDns } from '@mdi/js';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { fetchProtocols } from 'shared/api/protocols';\n\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport './AddServerCard.local.scss';\n\nexport const AddServerCard = ({ disabled }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n        Add New Server\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <AddNewServerContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewServer = ({ server = { protocol: 'SSH' }, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const { actions } = useContext(ModalContext);\n  const formRef = useRef();\n\n  useEffect(() => {\n    fetchProtocols().then(resp => {\n      setState({\n        loading: false,\n        result: resp.result,\n        protocols: resp.protocols || []\n      });\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Add New Server\"\n        desc=\"Input the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading protocols list</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <ServerForm\n                server={server}\n                handleSubmission={reloadAccounts}\n                protocols={state.protocols}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Paper.Content>\n                <Result>\n                  <Result.Text>Could not load protocols list.</Result.Text>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button color=\"primary\" onClick={actions.close}>\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewServerContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewServer);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDatabase } from '@mdi/js';\n\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport './AddDatabaseCard.local.scss';\n\nexport const AddDatabaseCard = ({ disabled }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n        Add New Database\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <AddNewDatabaseContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewDatabase = ({ account, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Add New Database\"\n        desc=\"Input the database connection information\"\n        formikRef={formRef}\n      />\n\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading Required Protocols and Privilege Modes</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <DatabaseForm\n                protocols={state.protocols}\n                modes={state.modes}\n                account={account}\n                handleSubmission={reloadAccounts}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Center>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load required protocols or privilege modes list.\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer></Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewDatabaseContainer = connect(\n  state => () => {\n    const path = state.explorer.state.path.split('--');\n    return {\n      account: {\n        protocol: path[0],\n        address: path[1]\n      }\n    };\n  },\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewDatabase);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport PostAddIcon from '@material-ui/icons/PostAdd';\n\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport { postFile } from 'shared/api/accounts';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { downloadTemplate } from './downloadTemplate';\n\nimport './ImportCSV.local.scss';\n\nexport const ImportCSV = ({ disabled }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n        Import from CSV\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <ImportCSVContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const ImportCSVFile = ({ reloadAccounts }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState('');\n  const fileName = selectedFile?.name || 'No file chosen';\n\n  const onChangeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadFile = () => {\n    if (!selectedFile) {\n      setResult('error');\n\n      return;\n    }\n    setResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedFile);\n\n    postFile(data)\n      .then(() => {\n        setResult('');\n        reloadAccounts();\n      })\n      .catch(() => {\n        // at the current BE version, even though the call is a success\n        // a \"false\" error is returned, so the reload account call should be made\n        setResult('');\n        reloadAccounts();\n      });\n  };\n\n  return (\n    <Paper\n      style={{\n        width: '50vw',\n        height: '50vh'\n      }}\n    >\n      <ModalHeader icon={<PostAddIcon />} title=\"Import CSV\" />\n      <Switch value={result}>\n        <Switch.Case value=\"\">\n          <div className=\"container\">\n            <label htmlFor=\"file-upload\" className=\"csv-file-upload\">\n              Choose file\n              <input type=\"file\" id=\"file-upload\" name=\"csv\" onChange={onChangeHandler} />\n            </label>\n            <LimitlessTooltip placement=\"bottom\" title={fileName}>\n              <span className=\"file-name\">{fileName}</span>\n            </LimitlessTooltip>\n          </div>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button\n                onClick={() => {\n                  downloadTemplate();\n                }}\n              >\n                Download template\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button onClick={uploadFile}>Upload</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"loading\">\n          <Center>\n            <Loader>Uploading file...</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value=\"error\">\n          <Result type=\"fail\">\n            <Result.Text>You forgot to select a file</Result.Text>\n          </Result>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => setResult('')}>Back</Button>\n            </Paper.Footer.Left>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const ImportCSVContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(ImportCSVFile);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadTemplate = async () => {\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_CSV_TEMPLATE);\n\n    const fileName = 'CSV_Template.csv';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postCompile() {\n  return RestClient.post('/compile');\n}\n","module.exports = __webpack_public_path__ + \"svgs/6842f8a8cfcb1999b9a1e64174e25a11.svg\";","module.exports = __webpack_public_path__ + \"svgs/727bf5a83867f2c49ff66ab6df50ae78.svg\";","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport './job-process.local.scss';\n\nimport { getInvocation } from './store/selectors';\nimport { invocationPoller } from './store/tasks';\nimport { AllowOutputFor } from './store/constants';\n\nimport JobForm from './job-form';\n\nimport { JobOutput } from './containers/output/output';\nimport { JobStatus } from './components/JobStatus/JobStatus';\n\nexport const JobView = ({ invocation, redirected }) => {\n  const [tab, setTab] = useState('details');\n\n  useEffect(() => {\n    invocationPoller.start();\n\n    return function stopPolling() {\n      invocationPoller.stop();\n    };\n  }, [invocation.status]);\n\n  if (!invocation || invocation.status === 'NOT_FETCHED') {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Fetching invocation</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <ViewTabs invocation={invocation} active={tab} changeTab={setTab} />\n        <JobStatus />\n      </Paper.Header>\n      <Switch value={tab}>\n        <Switch.Case value=\"details\">\n          <JobForm redirected={redirected} />\n        </Switch.Case>\n        <Switch.Case value=\"output\">\n          <JobOutput />\n        </Switch.Case>\n      </Switch>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    invocation: getInvocation(state)\n  };\n}, {})(JobView);\n\nfunction ViewTabs({ active, changeTab, invocation }) {\n  const withOutput = AllowOutputFor.includes(invocation.status);\n\n  const tabs = [\n    { label: 'Job Details', value: 'details', active: true },\n    { label: 'Output', value: 'output', disabled: !withOutput }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { isEmpty, pickBy } from 'lodash';\n\nimport moment from 'moment';\n\nimport { Switch } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { Notifications } from './containers/notifications/notifications';\n\nimport { Formik, Form } from 'formik';\n\nimport { Text, Date, Time } from 'shared/components/form/editors/Generic';\nimport { PlatformSelect, ProcessSelect, PLATFORMS } from 'shared/components/form/editors/Custom';\n\nimport { Button } from 'shared/components/controls';\n\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nimport './job-process.local.scss';\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { getCurrentUserName } from '../session/store/selectors';\n\nimport { getInvocation } from './store/selectors';\nimport { AllowGeneralEditingFor, InvocationStatus } from './store/constants';\n\nimport { postInvocation } from 'shared/api/invocation';\n\nimport { ProcessParameters } from './job-parameters';\n\nimport { Schedule } from 'jobs/containers/Schedule/Schedule';\nimport { ConnectedDeleteJobModal } from 'jobs/actions/delete/DeleteJobModal';\n\nconst JobForm = ({ loggedInAs, invocation, redirected }) => {\n  const history = useHistory();\n\n  const [editable, setEditable] = useState(AllowGeneralEditingFor.includes(invocation.status));\n\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n\n  const goBack = () => {\n    history.go(-1);\n    return false;\n    }\n\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const { initialValues, disabledFields } = deriveFormState(invocation, editable);\n\n  const availableProcess = (platformVal, processVal) => {\n    const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n\n    if (selectedPlatform.tester.test(processVal)) return processVal;\n    return '';\n  };\n\n  const userValue = editable ? loggedInAs : invocation.user_owner;\n  const dateValue = editable\n    ? moment()\n        .utc()\n        .format('MM/DD/YYYY')\n    : moment(invocation.date_invoke).format('MM/DD/YYYY');\n  const timeValue = editable\n    ? moment()\n        .utc()\n        .format('HH:mm')\n    : moment(invocation.date_invoke).format('HH:mm');\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n\n  const extraValidations = values => {\n    const errors = {};\n    const { date_invoke, time_invoke } = values;\n\n    if (!moment(date_invoke).isValid()) {\n      errors.date_invoke = 'Invalid date format';\n    }\n\n    if (!/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/.test(time_invoke)) {\n      errors.time_invoke = 'Invalid time format';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(true);\n          handleJobCreation(values, monitor).then(({ result, invocations }) => {\n            if (result === 'success') {\n              const { uuid } = invocations[0];\n\n              history.push(`/jobs/job?invocation=${uuid}`);\n            }\n          });\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Column xs={3}>\n                          <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(value, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.platform || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={9}>\n                          <ProcessSelect\n                            name=\"process\"\n                            label=\"Process\"\n                            value={invocation.process}\n                            required\n                            disabled={disabledFields.process || !editable || redirected}\n                          />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column xs={3}>\n                          <Date\n                            name=\"date_invoke\"\n                            label=\"Date\"\n                            disabled={!editable}\n                            value={dateValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Time\n                            name=\"time_invoke\"\n                            label=\"MAS system time (UTC)\"\n                            disabled={!editable}\n                            value={timeValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Text name=\"job_user\" label=\"User\" required disabled value={userValue} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation.parameters} editable={editable} />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row spacing={3}>\n                        <Column xs={12}>\n                          <Notifications\n                            name=\"notifications\"\n                            key={invocation.uuid}\n                            disabled={!editable}\n                            recievedData={derivedMonitor}\n                            onApply={n_state => {\n                              if (n_state.events === 0 || isEmpty(n_state.users)) {\n                                setMonitor({\n                                  enabled: false\n                                });\n                              }\n                              setMonitor({\n                                enabled: true,\n                                ...n_state\n                              });\n                            }}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <a href=\"/ui/#/jobs/\">\n                  <Button>Cancel</Button>\n                  </a>\n                  {invocation.status === 'DELAYED' && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setOpen(true);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  )}\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <FormVerbs\n                    status={invocation.status}\n                    editable={editable}\n                    setEditable={setEditable}\n                    monitor={monitor}\n                    invocation={invocation}\n                  />\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={invocation.uuid} />\n      )}\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    loggedInAs: getCurrentUserName(state),\n    invocation: getInvocation(state)\n  };\n}, {})(JobForm);\n\n/* eslint-disable no-unused-vars */\nfunction FormVerbs({ status, editable, setEditable, monitor, invocation }) {\n  const makeEditable = () => setEditable(true);\n\n  return (\n    <Switch value={editable}>\n      <Switch.Case value>\n        <SubmitButton>{monitor.enabled ? 'Monitor' : 'Run'}</SubmitButton>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Schedule invocation={invocation} />\n          <Button onClick={makeEditable}>Edit</Button>\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n}\n\nfunction handleJobCreation(values, monitor) {\n  const {\n    process,\n    platform,\n    date_invoke,\n    time_invoke,\n    job_user,\n    ...params_with_maybe_replvars\n  } = values;\n  const sendable = {};\n\n  const { parameters, replvars } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (date_invoke) {\n    const dateMoment = moment(date_invoke, 'MM/DD/YYYY');\n\n    const timeMoment = time_invoke ? moment(time_invoke, 'hh:mm') : moment();\n    const currentDate = moment()\n      .utc()\n      .set('second', 0)\n      .format('YYYY-MM-DDTHH:mm:ss');\n\n    const date = dateMoment.format('YYYY-MM-DD');\n    const time = timeMoment.format('HH:mm');\n    const dateTime = moment(date + ' ' + time, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DDTHH:mm:ss'); // eslint-disable-line prefer-template\n\n    const duration = moment.duration(\n      moment(dateTime, 'YYYY-MM-DD HH:mm').diff(moment(currentDate, 'YYYY-MM-DD HH:mm'))\n    );\n    const minutes = duration.asMinutes();\n\n    if (minutes > 0) {\n      sendable.timestamp = dateTime;\n    } else {\n      sendable.timestamp = null;\n    }\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    sendable.process = 'mas.sys.invocation.notify.create';\n\n    sendable.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      when: sendable.timestamp,\n      events: monitor.events,\n      users: monitor.users\n    };\n\n    sendable.timestamp = null;\n  } else {\n    sendable.process = process;\n\n    sendable.parameters = pickBy(parameters, rejector);\n  }\n\n  return postInvocation(sendable);\n}\n\nfunction deriveFormState(invocation) {\n  const values = {\n    process: invocation.process,\n    parameters: { ...invocation.parameters }\n  };\n  const disabledFields = {\n    ...(invocation.status !== InvocationStatus.NEW && {\n      platform: true,\n      process: true,\n      user: true,\n      parameters: true\n    })\n  };\n\n  return { initialValues: values, disabledFields };\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  } else if (values['fqname--fqname']) {\n    if (values['fqname--namespace']) {\n      values.fqname = `${values['fqname--namespace']}.${values['fqname--fqname']}`;\n    } else {\n      values.fqname = values['fqname--fqname'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--fqname'];\n  }\n  return values;\n}\n","import React from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { Paper } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { Center } from 'shared/components';\nimport './output.scss';\nimport { useSelector } from 'react-redux';\nimport { getInvocation } from '../../store/selectors';\nimport { InvocationStatus } from '../../store/constants';\n\nimport { ListOutput } from '../../components/ListOutput/ListOutput';\n\nimport { fetchInvocationOutput } from 'shared/api/invocation';\n\nimport { sendToEmail } from 'license-collection/utils/sendToEmail';\nimport { copyToClipboard } from 'license-collection/utils/copyToClipboard';\n\nfunction noOutput(invocation = {}) {\n  return [\n    {\n      data: {\n        text: 'No output to display.\\n'\n      }\n    },\n    {\n      data: {\n        text: `Status: ${invocation.status}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Process: ${invocation.process}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Invocation: ${invocation.uuid}\\n`\n      }\n    }\n  ];\n}\n\nexport const JobOutput = () => {\n  const invocation = useSelector(getInvocation);\n\n  const [loading, setLoading] = React.useState(true);\n  const [output, setOutput] = React.useState(noOutput(invocation));\n\n  React.useEffect(() => {\n    fetchInvocationOutput(invocation.uuid)\n      .then(({ data }) => {\n        const recieved = data.data.outputs;\n\n        if (recieved && recieved.length) {\n          setOutput(recieved);\n        } else {\n          setOutput(noOutput(invocation));\n        }\n\n        setLoading(false);\n      })\n      .catch(() => {\n        setOutput(noOutput(invocation));\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const outputType = invocation.status === InvocationStatus.FAILED ? 'fail' : 'normal';\n\n  const monitoring = output?.[0]?.data?.text?.match?.(\n    /{\"process\": {\"uuid\": \"([0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12})\",/\n  )?.[1];\n\n  console.log(monitoring); // eslint-disable-line\n\n  return (\n    <>\n      <Paper.Content scrollable>\n        <ListOutput\n          type={outputType}\n          output={output}\n          errors={invocation.errors}\n          monitoring={monitoring}\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"primary\"\n            onClick={() => sendToEmail(invocation, output, invocation.process)}\n          >\n            Send to email\n          </Button>\n          <Button color=\"primary\" onClick={() => copyToClipboard(output, invocation)}>\n            Copy to clipboard\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n    </>\n  );\n};\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors, monitoring }) => {\n  let content;\n\n  if (monitoring) {\n    return (\n      <div className=\"list\">\n        <h3>Monitor</h3>\n        <p>Invocation id: {monitoring}</p>\n        <Button to={`/jobs/job?invocation=${monitoring}`} color=\"primary\">\n          Go to Monitored Invocation\n        </Button>\n      </div>\n    );\n  }\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          <code>\n            <pre>{errors.join('\\n')}</pre>\n          </code>\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              <code>\n                <pre>{output.map(row => row.data.text).join('')}</pre>\n              </code>\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        <code>\n          <pre>{output.map(row => row.data.text).join('')}</pre>\n        </code>\n      </div>\n    );\n  }\n\n  return content;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { want } from 'shared/lib/want';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiTimelineClock,\n  mdiCancel,\n  mdiAlertRhombusOutline,\n  mdiStopCircleOutline\n} from '@mdi/js';\n\nimport { getInvocationStatus } from '../../store/selectors';\nimport {\n  InvocationStatus,\n  CannotShowStatusFor,\n  FAILURES,\n  SUCESSES,\n  WARNINGS\n} from '../../store/constants';\n\nimport './JobStatus.local.scss';\n\nexport const JobStatus = () => {\n  const STATUS = useSelector(getInvocationStatus);\n  const ignore = CannotShowStatusFor.includes(STATUS);\n\n  if (ignore) {\n    return null;\n  }\n\n  return (\n    <div className=\"status-label\" style={{ background: wantStatusColor(STATUS) }}>\n      <SvgIcon fontSize=\"inherit\" color=\"inherit\">\n        <path d={wantStatusIcon(STATUS)} />\n      </SvgIcon>\n      <span className=\"status-label-text\">{STATUS}</span>\n    </div>\n  );\n};\n\nconst wantStatusIcon = want(\n  {\n    [InvocationStatus.EXECUTING]: mdiProgressClock,\n    [InvocationStatus.SUCCEEDED]: mdiCheckCircleOutline,\n    [InvocationStatus.DELAYED]: mdiTimelineClock,\n    [InvocationStatus.SCHEDULED]: mdiCalendarArrowRight,\n    [InvocationStatus.KILLED]: mdiCancel,\n    [InvocationStatus.FAILED]: mdiAlertRhombusOutline,\n    [InvocationStatus.ABORTED]: mdiStopCircleOutline\n  },\n  '',\n  status => status\n);\n\nconst wantStatusColor = want(\n  {\n    fail: '#ED3A4A',\n    warning: '#F1BD5C',\n    success: '#34CC88'\n  },\n  '#3765AF', // progress blue color for unresolved statuses\n  status => {\n    if (FAILURES.includes(status)) {\n      return 'fail';\n    }\n\n    if (SUCESSES.includes(status)) {\n      return 'success';\n    }\n\n    if (WARNINGS.includes(status)) {\n      return 'warning';\n    }\n  }\n);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Center, Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { Header } from 'core/components/Header/Header';\nimport { RefreshDashboard } from './components/RefreshDashboard/RefreshDashboard';\nimport { ToggleDashboard } from './components/ToggleDashboard/ToggleDashboard';\nimport { PhysicalDashboard } from './components/PhysicalDashboard/PhysicalDashboard';\nimport { VirtualDashboard } from './components/VirtualDashboard/VirtualDashboard';\nimport { NoData } from './components/NoData/NoData';\nimport { ConnectedToggleSelection } from './containers/ToggleSelection/ToggleSelection';\n\nimport { loadExecutiveDashboardThunk, loadVirtualExecutiveDashboardThunk } from './store/thunks';\n\nimport './ExecutiveDashboard.local.scss';\n\nfunction ExecutiveDashboard({\n  isLoading,\n  callFailed,\n  selected,\n  rawEntries,\n  getExecutiveDashboard,\n  getVirtualExecutiveDashboard,\n  virtualServers,\n  rawVirtualServers\n}) {\n  const [dashboardType, setDashboardType] = useState('physical');\n  // const [isRefreshNeeded, setIsRefreshNeeded] = useState(false); // will update based on the new API that will be provide by the BE\n  useEffect(() => {\n    // do the new API provided by the BE\n    // set isRefreshNeeded value based on result\n\n    // if we have no data in store, do the call, else new data will be added on demand -> refresh button\n    // if (rawEntries.length === 0) {\n    if (dashboardType === 'physical' && rawEntries.length === 0) {\n      getExecutiveDashboard();\n    }\n\n    if (dashboardType === 'virtual' && rawVirtualServers.length === 0) {\n      getVirtualExecutiveDashboard();\n    }\n  }, [dashboardType]);\n\n  function refreshDashboard() {\n    if (dashboardType === 'physical') {\n      getExecutiveDashboard();\n    }\n\n    if (dashboardType === 'virtual') {\n      getVirtualExecutiveDashboard();\n    }\n  }\n\n  function changeDashboard(type) {\n    setDashboardType(type);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / Executive Dashboard\">\n        {!isLoading && !callFailed && (\n          <div className=\"header-actions-container\">\n            {dashboardType === 'physical' && <ConnectedToggleSelection />}\n            <RefreshDashboard onClickCallback={refreshDashboard} />\n            <div className=\"separator\" />\n            <ToggleDashboard active={dashboardType} onClickCallback={changeDashboard} />\n          </div>\n        )}\n      </Header>\n      <Main>\n        <Switch value={isLoading}>\n          <Switch.Case value>\n            <Center>\n              <Loader>Loading Executive Dashboard...</Loader>\n            </Center>\n          </Switch.Case>\n          <Switch.Case value={false}>\n            <Switch value={callFailed}>\n              <Switch.Case value>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load Executive Dashboard data. Please refresh the page and try again.\n                  </Result.Text>\n                </Result>\n              </Switch.Case>\n              <Switch.Case value={false}>\n                {rawEntries.length === 0 && <NoData />}\n                {rawEntries.length > 0 && (\n                  <Switch value={dashboardType}>\n                    <Switch.Case value=\"virtual\">\n                      <VirtualDashboard servers={virtualServers} />\n                    </Switch.Case>\n                    <Switch.Case value=\"physical\">\n                      <PhysicalDashboard selected={selected} />\n                    </Switch.Case>\n                  </Switch>\n                )}\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Main>\n    </>\n  );\n}\n\nexport const ConnectedExecutiveDashboard = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.dashboard.loading ||\n        state.executiveDashboard.flags.virtual.loading,\n      callFailed: state.executiveDashboard.flags.dashboard.callFailed,\n      selected: state.executiveDashboard.selectedServers.length,\n      rawEntries: state.executiveDashboard.rawEntries,\n      rawVirtualServers: state.executiveDashboard.rawVirtualServers,\n      virtualServers: state.executiveDashboard.virtualServers\n    };\n  },\n  dispatch => ({\n    getExecutiveDashboard: () => dispatch(loadExecutiveDashboardThunk()),\n    getVirtualExecutiveDashboard: () => dispatch(loadVirtualExecutiveDashboardThunk())\n  })\n)(ExecutiveDashboard);\n","import React from 'react';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartDonut } from '@mdi/js';\n\nimport './RefreshDashboard.local.scss';\n\nexport const RefreshDashboard = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"refresh-container\" onClick={() => onClickCallback()} role=\"presentation\">\n      {active && <div className=\"indicator\" />}\n      <LightTooltip placement=\"bottom\" title=\"Refresh\">\n        <SvgIcon className=\"refresh-icon\">\n          <Icon path={mdiChartDonut} />\n        </SvgIcon>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCubeOutline, mdiDns } from '@mdi/js';\n\nimport './ToggleDashboard.local.scss';\n\nexport const ToggleDashboard = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Virtual servers\">\n        <div\n          className={classnames('option', {\n            active: active === 'virtual'\n          })}\n          onClick={() => onClickCallback('virtual')}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Physical servers\">\n        <div\n          className={classnames('option', {\n            active: active === 'physical'\n          })}\n          onClick={() => onClickCallback('physical')}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiDns} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { ConnectedSearchSection } from '../../containers/SearchSection/SearchSection';\nimport { SwitchContent } from '../SwitchContent/SwitchContent';\n\nexport const PhysicalDashboard = ({ selected }) => {\n  return (\n    <>\n      <ConnectedSearchSection />\n      <SwitchContent nrSelected={selected} />\n    </>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SearchableList } from 'users-manager/components/SearchableList/SearchableList';\nimport { ServerCard } from '../../components/ServerCard/ServerCard';\n\nimport { toggleServerThunk } from '../../store/thunks';\n\nimport './SearchSection.local.scss';\n\nfunction SearchSection({ allServers, selectedServers, toggleServer }) {\n  function filterServerByQuery(server, query) {\n    return server.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  function isServerSelected(server) {\n    if (selectedServers.find(sv => sv.name === server.name)) return true;\n    return false;\n  }\n\n  function toggleSelected(server) {\n    toggleServer(server);\n  }\n\n  return (\n    <section className=\"servers-search-section\">\n      <SearchableList items={allServers} filter={filterServerByQuery}>\n        {server => (\n          <ServerCard\n            selected={isServerSelected(server)}\n            toggleSelectedCallback={toggleSelected}\n            server={server}\n          />\n        )}\n      </SearchableList>\n    </section>\n  );\n}\n\nexport const ConnectedSearchSection = connect(\n  state => {\n    return {\n      allServers: state.executiveDashboard.allServers,\n      selectedServers: state.executiveDashboard.selectedServers\n    };\n  },\n  dispatch => ({\n    toggleServer: name => dispatch(toggleServerThunk(name))\n  })\n)(SearchSection);\n","module.exports = __webpack_public_path__ + \"svgs/4b3cf735142a68d8e31e71d5905527d8.svg\";","import React from 'react';\n\nimport { Switch } from 'shared/components';\n\nimport { EmptyContent } from '../EmptyContent/EmptyContent';\nimport { ConnectedDashboard } from '../../containers/Dashboard/Dashboard';\nimport { ConnectedServerView } from '../../containers/ServerView/ServerView';\n\nimport './SwitchContent.local.scss';\n\nexport const SwitchContent = ({ nrSelected }) => {\n  let page = '';\n  if (nrSelected === 0) {\n    page = 'empty-content';\n  } else if (nrSelected === 1) {\n    page = 'server-details';\n  } else if (nrSelected > 1) {\n    page = 'dashboard';\n  }\n\n  return (\n    <section className=\"dashboard-view-section\">\n      <Switch value={page}>\n        <Switch.Case value=\"empty-content\">\n          <EmptyContent />\n        </Switch.Case>\n        <Switch.Case value=\"server-details\">\n          <ConnectedServerView />\n        </Switch.Case>\n        <Switch.Case value=\"dashboard\">\n          <ConnectedDashboard />\n        </Switch.Case>\n      </Switch>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './EmptyContent.local.scss';\n\nexport const EmptyContent = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              Please select at least a server in order to view its details\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Column } from 'shared/components/layout';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { OptionsTile } from '../../components/OptionsTile/OptionsTile';\n\nfunction Dashboard({ selected }) {\n  return (\n    <>\n      <Row>\n        <Column xs={6}>\n          <ServersTile servers={selected} />\n        </Column>\n        <Column xs={6}>\n          <DatabasesTile servers={selected} />\n        </Column>\n      </Row>\n      <OptionsTile servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedDashboard = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(Dashboard);\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarCircleOutline } from '@mdi/js';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Overflow, Paper } from 'shared/components/layout';\n\nimport { OptionsList } from './components/OptionsList/OptionsList';\nimport { OptionsChart } from './components/OptionsChart/OptionsChart';\n\nimport './OptionsTile.local.scss';\n\nexport const OptionsTile = ({ servers }) => {\n  function groupChartServers(serversToGroup) {\n    return Object.values(serversToGroup.reduce((acc, entry) => {\n      const serverKey = `${entry.name}_${entry.sid}`;\n      if (!acc[serverKey] || acc[serverKey].collDate < entry.collDate) {\n        acc[serverKey] = entry;\n      }\n      return acc;\n    }, {}));\n  }\n\n  function prepareOptions(filteredServers) {\n    return [\n      {\n        name: 'Advanced Analytics',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.aa_count;\n        }, 0),\n        color: '#176BA0',\n        secondaryColor: '#E8F9F5',\n        label: 'AA'\n      },\n      {\n        name: 'Advanced Compression',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.ac_count;\n        }, 0),\n        color: '#1AC9E6',\n        secondaryColor: '#e8fafc',\n        label: 'AC'\n      },\n      {\n        name: 'Advanced Security',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.as_count;\n        }, 0),\n        color: '#6DF0D2',\n        secondaryColor: '#f0fdfb',\n        label: 'AS'\n      },\n      {\n        name: 'Database Vault',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.dv_count;\n        }, 0),\n        color: '#7D3AC1',\n        secondaryColor: '#f2ebf9',\n        label: 'DV'\n      },\n      {\n        name: 'Multitenant',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.mt_count;\n        }, 0),\n        color: '#EA7369',\n        secondaryColor: '#fbedf7',\n        label: 'MT'\n      },\n      {\n        name: 'Active Data Guard',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.adg_count;\n        }, 0),\n        color: '#1DE4BD',\n        secondaryColor: '#e8fcf8',\n        label: 'ADG'\n      },\n      {\n        name: 'Real Application Clusters',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.rac_count;\n        }, 0),\n        color: '#EF7E32',\n        secondaryColor: '#fdf2eb',\n        label: 'RAC'\n      },\n      {\n        name: 'OLAP',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.olap_count;\n        }, 0),\n        color: '#F0A58F',\n        secondaryColor: '#fdf6f4',\n        label: 'OL'\n      },\n      {\n        name: 'Partitioning (User)',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.part_count;\n        }, 0),\n        color: '#C02323',\n        secondaryColor: '#f9e9e9',\n        label: 'P'\n      },\n      {\n        name: 'In-Memory Database',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.in_mem_db_count;\n        }, 0),\n        color: '#DB4CB2',\n        secondaryColor: '#fbedf7',\n        label: 'IMD'\n      }\n    ];\n  }\n\n  const groupedServers = groupChartServers(servers);\n  const chartOptions = prepareOptions(groupedServers);\n\n  const total = groupedServers.reduce((acc, sv) => {\n    return acc + sv.totalInstalledOptions;\n  }, 0);\n\n  return (\n    <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiStarCircleOutline} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={total} />\n        <StringLabel text=\"Options installed\" />\n      </Paper.Header>\n      <div className=\"container\">\n        <div className=\"graph-container\">\n          <OptionsChart data={chartOptions} />\n        </div>\n        <div className=\"label-container\">\n          <Overflow>\n            <OptionsList options={chartOptions} />\n          </Overflow>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\n\nimport { OptionItem } from '../OptionItem/OptionItem';\n\nexport const OptionsList = ({ options }) => {\n  return options.map(option => <OptionItem key={option.name} option={option} />);\n};\n","import React from 'react';\n\nimport './OptionItem.local.scss';\n\nexport const OptionItem = ({ option }) => {\n  return (\n    <div className=\"option\">\n      <div className=\"value\" style={{ backgroundColor: option.secondaryColor }}>\n        <span style={{ color: option.color }}>{option.value}</span>\n      </div>\n      <div style={{ color: option.color }}>{option.name}</div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { BarChart, Bar, XAxis, Cell, ResponsiveContainer, YAxis, CartesianGrid } from 'recharts';\n\nimport './OptionsChart.local.scss';\n\nexport const OptionsChart = ({ data }) => {\n  const renderCustomXAxisTick = ({ x, y, payload }) => {\n    const index = data.findIndex(sv => sv.label === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={data[index].color}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <XAxis dataKey=\"label\" tickSize={false} axisLine={false} tick={renderCustomXAxisTick} />\n        <YAxis\n          width={20}\n          tickSize={false}\n          axisLine={false}\n          allowDecimals={false}\n          type=\"number\"\n          domain={[0, 'dataMax']}\n          stroke=\"rgba(4, 17, 37, 0.87)\"\n        />\n        <Bar dataKey=\"value\">\n          {data.map((entry, index) => {\n            return <Cell key={`${entry.name}-${index}`} fill={entry.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Column } from 'shared/components/layout';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { UsedOptions } from '../../components/UsedOptions/UsedOptions';\n\nfunction ServerView({ selected }) {\n  return (\n    <>\n      <Row>\n        <Column xs={6}>\n          <ServersTile servers={selected} isSingle />\n        </Column>\n        <Column xs={6}>\n          <DatabasesTile servers={selected} />\n        </Column>\n      </Row>\n      <UsedOptions servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedServerView = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(ServerView);\n","import React from 'react';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheck, mdiPlayCircle } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport './UsedOptions.local.scss';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Button } from '../../../shared/components/controls';\n\nexport class UsedOptions extends React.PureComponent {\n  selectedForComparison = {};\n\n  allSids = [];\n\n  constructor(props) {\n    super(props);\n\n    const selectedServer = this.props.servers[0];\n    const totalInstalledOptions = selectedServer.sids.reduce((acc, sid) => acc + sid.totalInstalledOptions, 0);\n\n    this.allSids = selectedServer.sids || [];\n    this.state = {\n      visibleSids: this.allSids,\n      selectedForComparison: {},\n      inComparison: false,\n      totalInstalledOptions\n    };\n  }\n\n  optionType(type) {\n    if (type.value === 1) {\n      return (\n        <LightTooltip\n          placement=\"top\"\n          title={\n            <>\n              <span style={{ fontWeight: '600' }}>{type.name}:&nbsp;</span>\n              <span>Installed</span>\n            </>\n          }\n        >\n          <SvgIcon className=\"installed\">\n            <Icon path={mdiCheck} />\n          </SvgIcon>\n        </LightTooltip>\n      );\n    }\n\n    return null;\n  }\n\n  updateSelection(isChecked, sid) {\n    if (isChecked) {\n      this.selectedForComparison[`${sid.sid}_${sid.collDate}`] = true;\n    } else {\n      delete this.selectedForComparison[`${sid.sid}_${sid.collDate}`];\n    }\n    this.setState({ selectedForComparison: this.selectedForComparison });\n    this.forceUpdate();\n  }\n\n  compareSelected() {\n    const visibleSids = this.allSids.filter((sid) => this.selectedForComparison[`${sid.sid}_${sid.collDate}`]);\n    this.setState({ visibleSids, inComparison: true });\n  }\n\n  resetSelected() {\n    this.selectedForComparison = {};\n    this.setState({ visibleSids: this.allSids, inComparison: false, selectedForComparison: this.selectedForComparison });\n  }\n\n  render() {\n    const { visibleSids, selectedForComparison, inComparison } = this.state;\n\n    return (\n      <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n        <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n          <div className=\"grid-header\">\n            <div className=\"options-installed\">\n              <CircleImg\n                image={\n                  <SvgIcon>\n                    <Icon path={mdiPlayCircle} />\n                  </SvgIcon>\n                }\n              />\n              <NumberLabel number={this.state.totalInstalledOptions} />\n              <StringLabel text=\"Options installed\" />\n            </div>\n            {\n              (Object.keys(selectedForComparison).length > 0 && !inComparison) &&\n                <Button style={{ color: '#03A9F4' }} onClick={() => this.compareSelected()}>\n                  Compare\n                </Button>\n            }\n            {\n              inComparison &&\n                <Button style={{ color: '#03A9F4' }} onClick={() => this.resetSelected()}>\n                  Compare all\n                </Button>\n            }\n          </div>\n        </Paper.Header>\n        <Paper.Content scrollable={false}>\n          <div className=\"grid\">\n            <div className=\"column header left\" />\n            <div className=\"column header aa\">\n              <LightTooltip placement=\"top\" title=\"Advanced Analytics\">\n                <span>AA</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header ac\">\n              <LightTooltip placement=\"top\" title=\"Advanced Compression\">\n                <span>AC</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header adg\">\n              <LightTooltip placement=\"top\" title=\"Active Data Guard\">\n                <span>ADG</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header as\">\n              <LightTooltip placement=\"top\" title=\"Advanced Security\">\n                <span>AS</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header dv\">\n              <LightTooltip placement=\"top\" title=\"Database Vault\">\n                <span>DV</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header imd\">\n              <LightTooltip placement=\"top\" title=\"In-Memory Database\">\n                <span>IMD</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header mt\">\n              <LightTooltip placement=\"top\" title=\"Multitenant\">\n                <span>MT</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header ol\">\n              <LightTooltip placement=\"top\" title=\"OLAP\">\n                <span>OL</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header p\">\n              <LightTooltip placement=\"top\" title=\"Partitioning (User)\">\n                <span>P</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header aa\">Collection Date</div>\n            <div className=\"column header aa\">Select</div>\n\n            {visibleSids.map((sid, index) => {\n              return (\n                <div key={`${sid.sid}-${index}`} className=\"row\">\n                  <div className=\"column left\">{sid.sid}</div>\n                  <div className=\"column\">\n                    {this.optionType({ name: 'Advanced Analytics', value: sid.aa_count })}\n                  </div>\n                  <div className=\"column\">\n                    {this.optionType({ name: 'Advanced Compression', value: sid.ac_count })}\n                  </div>\n                  <div className=\"column\">\n                    {this.optionType({ name: 'Active Data Guard', value: sid.adg_count })}\n                  </div>\n                  <div className=\"column\">\n                    {this.optionType({ name: 'Advanced Security', value: sid.as_count })}\n                  </div>\n                  <div className=\"column\">\n                    {this.optionType({ name: 'Database Vault', value: sid.dv_count })}\n                  </div>\n                  <div className=\"column\">\n                    {this.optionType({ name: 'In-Memory Database', value: sid.in_mem_db_count })}\n                  </div>\n                  <div className=\"column\">\n                    {this.optionType({ name: 'Multitenant', value: sid.mt_count })}\n                  </div>\n                  <div className=\"column\">{this.optionType({ name: 'OLAP', value: sid.olap_count })}</div>\n                  <div className=\"column\">\n                    {this.optionType({ name: 'Partitioning (User)', value: sid.part_count })}\n                  </div>\n                  <div className=\"column\">\n                    <LightTooltip placement=\"bottom\" title={moment(sid.collDate).format('HH:mm:ss')}>\n                      <span>{moment(sid.collDate).format('MMM DD YYYY')}</span>\n                    </LightTooltip>\n                  </div>\n                  <div className=\"column\">\n                    <Checkbox\n                      onChange={(event) => this.updateSelection(event.target.checked, sid)}\n                      size=\"small\"\n                      color=\"primary\"\n                      checked={!!selectedForComparison[`${sid.sid}_${sid.collDate}`]}\n                      classes={{ root: 'checkbox-custom' }}\n                    />\n                  </div>\n                </div>\n              );\n            }).sort()}\n          </div>\n        </Paper.Content>\n      </Paper>\n    );\n  }\n}\n/*\n{(sid.rac_count ? optionType({ name: 'Partitioning (User)', value: sid.part_count }) : moment(sid.collDate).format('MMM DD YYYY'))}\n*/\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState } from 'react';\n\nimport { Center } from 'shared/components';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { ServerCard } from '../ServerCard/ServerCard';\n\nimport './VirtualDashboard.local.scss';\n\nexport const VirtualDashboard = ({ servers }) => {\n  const [query, setQuery] = useState('');\n  const filtered = servers.filter(item => filterServerByQuery(item, query));\n\n  function filterServerByQuery(server) {\n    let found = false;\n\n    Object.values(server).map(val => {\n      if (\n        val\n          .toString()\n          .toLowerCase()\n          .includes(query.toLowerCase())\n      ) {\n        found = true;\n      }\n\n      return null;\n    });\n\n    return found;\n  }\n\n  return (\n    <div className=\"container\">\n      {servers.length === 0 && <Center>Currently there are no virtual servers</Center>}\n      {servers.length > 0 && (\n        <>\n          <div className=\"search-input-slot\">\n            <SimpleSearchInput\n              data-qa=\"users-search-input\"\n              value={query}\n              onChange={e => setQuery(e.target.value)}\n            />\n          </div>\n          <div className=\"servers-container\">\n            {filtered.map(server => (\n              <ServerCard key={server.vcenterservername} server={server} type=\"virtual\" />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiShieldCheckOutline } from '@mdi/js';\n\nimport './NoData.local.scss';\n\nexport const NoData = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiShieldCheckOutline} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              In order for the Executive Dashboard to be populated, you need to run all 3 collection\n              processes. The order is also important, so you need to run the Hardware and Software\n              scans first and then the Packaging process for the data to be sent to the Executive\n              dashboard. All these steps can be performed from the{' '}\n              <Link className=\"link\" to=\"/compliance/license-collection\">\n                License Collection\n              </Link>{' '}\n              page.\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\n\nimport { deselectAllThunk, selectAllThunk } from '../../store/thunks';\n\nfunction ToggleSelection({ servers, selected, deselectAll, selectAll }) {\n  if (servers === selected) {\n    return (\n      <Button style={{ color: '#03A9F4' }} onClick={() => deselectAll()}>\n        Deselect All\n      </Button>\n    );\n  }\n  return (\n    <Button style={{ color: '#03A9F4' }} onClick={() => selectAll()}>\n      Select all\n    </Button>\n  );\n}\n\nexport const ConnectedToggleSelection = connect(\n  state => {\n    return {\n      servers: state.executiveDashboard.allServers.length,\n      selected: state.executiveDashboard.selectedServers.length\n    };\n  },\n  dispatch => ({\n    deselectAll: () => dispatch(deselectAllThunk()),\n    selectAll: () => dispatch(selectAllThunk())\n  })\n)(ToggleSelection);\n","import React, { useState } from 'react';\n\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport { Navigation } from './components/Navigation/Navigation';\nimport { ConnectedHardware } from './Pages/Hardware/Hardware';\nimport { ConnectedSoftware } from './Pages/Software/Software';\nimport { ConnectedVMware } from './Pages/VMware/VMware';\nimport { ConnectedPackaging } from './Pages/Packaging/Packaging';\n\nexport const LicenseCollection = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function changeActiveTab(newActiveTab) {\n    setActiveTab(newActiveTab);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / License collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <Navigation active={activeTab} onClickCallback={changeActiveTab} />\n          </Paper.Header>\n          <Paper.Content>\n            <Switch value={activeTab}>\n              <Switch.Case value={0}>\n                <ConnectedHardware />\n              </Switch.Case>\n              <Switch.Case value={1}>\n                <ConnectedSoftware />\n              </Switch.Case>\n              <Switch.Case value={2}>\n                <ConnectedVMware />\n              </Switch.Case>\n              <Switch.Case value={3}>\n                <ConnectedPackaging />\n              </Switch.Case>\n            </Switch>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Navigation.local.scss';\n\nconst data = [\n  { label: '1. Hardware Data Requirements Collection' },\n  { label: '2. Software Data Requirements Collection' },\n  { label: '3. vSphere Data Requirements Collection' },\n  { label: '4. Packaging Process' }\n];\n\nexport const Navigation = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"nav-chip-container\">\n      {data.map((chip, index) => (\n        <div\n          className={classnames('nav-chip', { active: active === index })}\n          key={index}\n          onClick={() => onClickCallback(index)}\n          role=\"presentation\"\n          data-qa={`chip-nav-${index}`}\n        >\n          {chip.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiMemory } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk, executeCollectionProcessThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Hardware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.hw_scan';\n\nexport class Hardware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n\n    if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n      request('form');\n    }\n\n\n    if (!process) {\n      requestProcessData({ name: 'hardware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'hardware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"hardware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Hardware scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Hardware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedHardware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.hardware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.hardware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Hardware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n  const matches = regex.exec(deflt);\n  // const json = `[${matches[2]}]`;\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default:\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return parseInt(matches[2], 10);\n          case 'str':\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n  }\n  return null;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiApplication } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk, executeCollectionProcessThunk } from 'explorer/store/thunks';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Software.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.sw_scan';\n\nexport class Software extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      request,\n      entitiesStatus,\n      requestProcessData,\n      process,\n      wasHardwareExecuted\n    } = this.props;\n\n    if (wasHardwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'software', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasHardwareExecuted,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    if (!wasHardwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather hardware data before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'software' });\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Database features scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to target server, Target DBMS, Database form for the target\n                      database, SSH connection to the target host, working directory in the repo\n                      host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Software Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiApplication} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        forms={this.props.forms}\n        prototypes={this.props.prototypes}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.software,\n    isProcessLoading: state.explorer.flags.collectionProcesses.software.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Software);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiCubeScan } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './VMware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.vsphere_scan';\n\nexport class VMware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'vmware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const { entitiesStatus, datatypes, prototypes, isProcessLoading, process } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: VMware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"vmware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>vSphere for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>SSH connection to repo server, working directory in the repo host</p>\n                  </div>\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'VMware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiCubeScan} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedVMware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.vmware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.vmware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(VMware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiArchiveArrowDownOutline } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport { downloadFile } from '../../utils/downloadFile';\n\nimport './Packaging.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.packager';\n\nexport class Packaging extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined,\n      formValues: {},\n      isDownloadDisabled: true,\n      isEmailDisabled: true\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasVsphereExecuted } = this.props;\n\n    if (wasVsphereExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'packaging', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasVsphereExecuted\n    } = this.props;\n    let parameters = null;\n\n    if (!wasVsphereExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather software data before running the Packaging\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined,\n                    formValues: formatParameters(values),\n                    isDownloadDisabled: true,\n                    isEmailDisabled: true\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"packaging-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Package (HW, SW) file for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>Repo working directory, repo SSH connection</p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Paper.Footer.Left>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isDownloadDisabled}\n                      data-qa=\"download-btn\"\n                      onClick={() => {\n                        downloadFile(this.state.formValues);\n                        this.setState({ isEmailDisabled: false });\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isEmailDisabled}\n                      data-qa=\"email-btn\"\n                      onClick={() => this.sendEmail()}\n                    >\n                      Email\n                    </Button>\n                  </Paper.Footer.Left>\n                  <Paper.Footer.Right>\n                    <Button\n                      className=\"btn submit\"\n                      type=\"submit\"\n                      disabled={!dirty || isSubmitting}\n                      variant=\"contained\"\n                      data-qa=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Packaging Process ',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiArchiveArrowDownOutline} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n\n            try {\n              await RestClient.get(\n                '/execdashboard/update',\n                formatParameters({\n                  lms_repo: this.state.formValues.repo_working_dir,\n                  repo_shell: this.state.formValues.repo_shell\n                })\n              );\n              this.setState({\n                output: outputReponse.data.data.outputs,\n                invocation,\n                outputOpen: invocation.status !== 'SUCCEEDED',\n                isDownloadDisabled: invocation.status !== 'SUCCEEDED'\n              });\n            } catch (error) {\n              console.log('[collection-packaging-exec-dashboard-update] error: ', error); // eslint-disable-line\n              this.setState({ outputOpen: false });\n            }\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        type=\"packaging\"\n        output={this.state.output}\n        processName={processName}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        messages={['Preparing job...', 'Executing job...', 'Preparing files...']}\n      />\n    );\n  };\n\n  sendEmail = () => {\n    const body = 'Please attach the downloaded file. It should be named \"lms-file-bundle.tar\".';\n    window.location.href = `mailto:?subject=Packaging files&body=${encodeURIComponent(body)}`;\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPackaging = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.packaging,\n    isProcessLoading: state.explorer.flags.collectionProcesses.packaging.loading,\n    wasVsphereExecuted: state.explorer.flags.collectionProcesses.software.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Packaging);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async query => {\n  const formatQuery = {\n    lms_repo: query.repo_working_dir,\n    repo_shell: query.repo_shell\n  };\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_PACKAGING, formatQuery);\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'lms-file-bundle.tar';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import { en } from './en';\n\nexport const i18nMessages = {\n  en,\n};\n","import dashboard from './dashboard.json';\nimport general from './general.json';\nimport session from './session.json';\nimport header from './header.json';\n\nexport const en = {\n  ...dashboard,\n  ...general,\n  ...session,\n  ...header,\n};\n","import 'babel-polyfill';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport store from 'core/store';\n\nimport { App } from './app';\nimport { CONSTANTS } from './app/config';\nimport { i18nMessages } from './i18n';\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\n\n\nimport './assets/fonts/Lato-Regular.ttf';\nimport './assets/fonts/OpenSans-Regular.ttf';\n\nimport './style.scss';\n\n\nconst persistor = persistStore(store);\n\nconst provider = (\n  <IntlProvider locale={CONSTANTS.INTL} messages={i18nMessages[CONSTANTS.INTL]}>\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter basename={process.env.NODE_ENV === 'development' ? '/' : '/ui/#/'}>\n        <Switch>\n          <Route component={App} path=\"/\" />\n        </Switch>\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </IntlProvider>\n);\n\nrender(provider, document.getElementById('root'));\n","var map = {\n\t\"./af\": 674,\n\t\"./af.js\": 674,\n\t\"./ar\": 675,\n\t\"./ar-dz\": 676,\n\t\"./ar-dz.js\": 676,\n\t\"./ar-kw\": 677,\n\t\"./ar-kw.js\": 677,\n\t\"./ar-ly\": 678,\n\t\"./ar-ly.js\": 678,\n\t\"./ar-ma\": 679,\n\t\"./ar-ma.js\": 679,\n\t\"./ar-sa\": 680,\n\t\"./ar-sa.js\": 680,\n\t\"./ar-tn\": 681,\n\t\"./ar-tn.js\": 681,\n\t\"./ar.js\": 675,\n\t\"./az\": 682,\n\t\"./az.js\": 682,\n\t\"./be\": 683,\n\t\"./be.js\": 683,\n\t\"./bg\": 684,\n\t\"./bg.js\": 684,\n\t\"./bm\": 685,\n\t\"./bm.js\": 685,\n\t\"./bn\": 686,\n\t\"./bn-bd\": 687,\n\t\"./bn-bd.js\": 687,\n\t\"./bn.js\": 686,\n\t\"./bo\": 688,\n\t\"./bo.js\": 688,\n\t\"./br\": 689,\n\t\"./br.js\": 689,\n\t\"./bs\": 690,\n\t\"./bs.js\": 690,\n\t\"./ca\": 691,\n\t\"./ca.js\": 691,\n\t\"./cs\": 692,\n\t\"./cs.js\": 692,\n\t\"./cv\": 693,\n\t\"./cv.js\": 693,\n\t\"./cy\": 694,\n\t\"./cy.js\": 694,\n\t\"./da\": 695,\n\t\"./da.js\": 695,\n\t\"./de\": 696,\n\t\"./de-at\": 697,\n\t\"./de-at.js\": 697,\n\t\"./de-ch\": 698,\n\t\"./de-ch.js\": 698,\n\t\"./de.js\": 696,\n\t\"./dv\": 699,\n\t\"./dv.js\": 699,\n\t\"./el\": 700,\n\t\"./el.js\": 700,\n\t\"./en-au\": 701,\n\t\"./en-au.js\": 701,\n\t\"./en-ca\": 702,\n\t\"./en-ca.js\": 702,\n\t\"./en-gb\": 703,\n\t\"./en-gb.js\": 703,\n\t\"./en-ie\": 704,\n\t\"./en-ie.js\": 704,\n\t\"./en-il\": 705,\n\t\"./en-il.js\": 705,\n\t\"./en-in\": 706,\n\t\"./en-in.js\": 706,\n\t\"./en-nz\": 707,\n\t\"./en-nz.js\": 707,\n\t\"./en-sg\": 708,\n\t\"./en-sg.js\": 708,\n\t\"./eo\": 709,\n\t\"./eo.js\": 709,\n\t\"./es\": 710,\n\t\"./es-do\": 711,\n\t\"./es-do.js\": 711,\n\t\"./es-mx\": 712,\n\t\"./es-mx.js\": 712,\n\t\"./es-us\": 713,\n\t\"./es-us.js\": 713,\n\t\"./es.js\": 710,\n\t\"./et\": 714,\n\t\"./et.js\": 714,\n\t\"./eu\": 715,\n\t\"./eu.js\": 715,\n\t\"./fa\": 716,\n\t\"./fa.js\": 716,\n\t\"./fi\": 717,\n\t\"./fi.js\": 717,\n\t\"./fil\": 718,\n\t\"./fil.js\": 718,\n\t\"./fo\": 719,\n\t\"./fo.js\": 719,\n\t\"./fr\": 720,\n\t\"./fr-ca\": 721,\n\t\"./fr-ca.js\": 721,\n\t\"./fr-ch\": 722,\n\t\"./fr-ch.js\": 722,\n\t\"./fr.js\": 720,\n\t\"./fy\": 723,\n\t\"./fy.js\": 723,\n\t\"./ga\": 724,\n\t\"./ga.js\": 724,\n\t\"./gd\": 725,\n\t\"./gd.js\": 725,\n\t\"./gl\": 726,\n\t\"./gl.js\": 726,\n\t\"./gom-deva\": 727,\n\t\"./gom-deva.js\": 727,\n\t\"./gom-latn\": 728,\n\t\"./gom-latn.js\": 728,\n\t\"./gu\": 729,\n\t\"./gu.js\": 729,\n\t\"./he\": 730,\n\t\"./he.js\": 730,\n\t\"./hi\": 731,\n\t\"./hi.js\": 731,\n\t\"./hr\": 732,\n\t\"./hr.js\": 732,\n\t\"./hu\": 733,\n\t\"./hu.js\": 733,\n\t\"./hy-am\": 734,\n\t\"./hy-am.js\": 734,\n\t\"./id\": 735,\n\t\"./id.js\": 735,\n\t\"./is\": 736,\n\t\"./is.js\": 736,\n\t\"./it\": 737,\n\t\"./it-ch\": 738,\n\t\"./it-ch.js\": 738,\n\t\"./it.js\": 737,\n\t\"./ja\": 739,\n\t\"./ja.js\": 739,\n\t\"./jv\": 740,\n\t\"./jv.js\": 740,\n\t\"./ka\": 741,\n\t\"./ka.js\": 741,\n\t\"./kk\": 742,\n\t\"./kk.js\": 742,\n\t\"./km\": 743,\n\t\"./km.js\": 743,\n\t\"./kn\": 744,\n\t\"./kn.js\": 744,\n\t\"./ko\": 745,\n\t\"./ko.js\": 745,\n\t\"./ku\": 746,\n\t\"./ku.js\": 746,\n\t\"./ky\": 747,\n\t\"./ky.js\": 747,\n\t\"./lb\": 748,\n\t\"./lb.js\": 748,\n\t\"./lo\": 749,\n\t\"./lo.js\": 749,\n\t\"./lt\": 750,\n\t\"./lt.js\": 750,\n\t\"./lv\": 751,\n\t\"./lv.js\": 751,\n\t\"./me\": 752,\n\t\"./me.js\": 752,\n\t\"./mi\": 753,\n\t\"./mi.js\": 753,\n\t\"./mk\": 754,\n\t\"./mk.js\": 754,\n\t\"./ml\": 755,\n\t\"./ml.js\": 755,\n\t\"./mn\": 756,\n\t\"./mn.js\": 756,\n\t\"./mr\": 757,\n\t\"./mr.js\": 757,\n\t\"./ms\": 758,\n\t\"./ms-my\": 759,\n\t\"./ms-my.js\": 759,\n\t\"./ms.js\": 758,\n\t\"./mt\": 760,\n\t\"./mt.js\": 760,\n\t\"./my\": 761,\n\t\"./my.js\": 761,\n\t\"./nb\": 762,\n\t\"./nb.js\": 762,\n\t\"./ne\": 763,\n\t\"./ne.js\": 763,\n\t\"./nl\": 764,\n\t\"./nl-be\": 765,\n\t\"./nl-be.js\": 765,\n\t\"./nl.js\": 764,\n\t\"./nn\": 766,\n\t\"./nn.js\": 766,\n\t\"./oc-lnc\": 767,\n\t\"./oc-lnc.js\": 767,\n\t\"./pa-in\": 768,\n\t\"./pa-in.js\": 768,\n\t\"./pl\": 769,\n\t\"./pl.js\": 769,\n\t\"./pt\": 770,\n\t\"./pt-br\": 771,\n\t\"./pt-br.js\": 771,\n\t\"./pt.js\": 770,\n\t\"./ro\": 772,\n\t\"./ro.js\": 772,\n\t\"./ru\": 773,\n\t\"./ru.js\": 773,\n\t\"./sd\": 774,\n\t\"./sd.js\": 774,\n\t\"./se\": 775,\n\t\"./se.js\": 775,\n\t\"./si\": 776,\n\t\"./si.js\": 776,\n\t\"./sk\": 777,\n\t\"./sk.js\": 777,\n\t\"./sl\": 778,\n\t\"./sl.js\": 778,\n\t\"./sq\": 779,\n\t\"./sq.js\": 779,\n\t\"./sr\": 780,\n\t\"./sr-cyrl\": 781,\n\t\"./sr-cyrl.js\": 781,\n\t\"./sr.js\": 780,\n\t\"./ss\": 782,\n\t\"./ss.js\": 782,\n\t\"./sv\": 783,\n\t\"./sv.js\": 783,\n\t\"./sw\": 784,\n\t\"./sw.js\": 784,\n\t\"./ta\": 785,\n\t\"./ta.js\": 785,\n\t\"./te\": 786,\n\t\"./te.js\": 786,\n\t\"./tet\": 787,\n\t\"./tet.js\": 787,\n\t\"./tg\": 788,\n\t\"./tg.js\": 788,\n\t\"./th\": 789,\n\t\"./th.js\": 789,\n\t\"./tk\": 790,\n\t\"./tk.js\": 790,\n\t\"./tl-ph\": 791,\n\t\"./tl-ph.js\": 791,\n\t\"./tlh\": 792,\n\t\"./tlh.js\": 792,\n\t\"./tr\": 793,\n\t\"./tr.js\": 793,\n\t\"./tzl\": 794,\n\t\"./tzl.js\": 794,\n\t\"./tzm\": 795,\n\t\"./tzm-latn\": 796,\n\t\"./tzm-latn.js\": 796,\n\t\"./tzm.js\": 795,\n\t\"./ug-cn\": 797,\n\t\"./ug-cn.js\": 797,\n\t\"./uk\": 798,\n\t\"./uk.js\": 798,\n\t\"./ur\": 799,\n\t\"./ur.js\": 799,\n\t\"./uz\": 800,\n\t\"./uz-latn\": 801,\n\t\"./uz-latn.js\": 801,\n\t\"./uz.js\": 800,\n\t\"./vi\": 802,\n\t\"./vi.js\": 802,\n\t\"./x-pseudo\": 803,\n\t\"./x-pseudo.js\": 803,\n\t\"./yo\": 804,\n\t\"./yo.js\": 804,\n\t\"./zh-cn\": 805,\n\t\"./zh-cn.js\": 805,\n\t\"./zh-hk\": 806,\n\t\"./zh-hk.js\": 806,\n\t\"./zh-mo\": 807,\n\t\"./zh-mo.js\": 807,\n\t\"./zh-tw\": 808,\n\t\"./zh-tw.js\": 808\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1435;","/**\n * A IFFE to ignore warnings of prop-types validation\n * from Material-UI components used with scoped-css-loader.\n *\n * They are invalid and will not appear in prod builds, they are\n * cumbersome for development for now.\n *\n * TODO: investigate if there is another option when there is time.\n * For now it looks like there is not.\n */\n\n/* eslint-disable */\n(function clearMUIDataVWarnings() {\n  const error = console.error.bind(console);\n  const partial = /Warning:.*data-v-/;\n\n  console.error = (message, ...args) => {\n    if (typeof message === 'string' && message.search(partial) !== -1) {\n      return;\n    }\n\n    error(message, ...args);\n  };\n})();\n\n/* eslint-enable */\n","module.exports = \"../fonts/2d36b1a925432bae7f3c53a340868c6e.ttf\";","module.exports = \"../fonts/3ed9575dcc488c3e3a5bd66620bdf5a4.ttf\";"],"sourceRoot":""}