{"version":3,"sources":["webpack:///./src/app/shared/components/form/editors/Generic.jsx","webpack:///./src/app/config.js","webpack:///./src/app/shared/components/overlays/Result/Result.jsx","webpack:///./src/app/explorer/store/actions/index.js","webpack:///./src/app/explorer/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/actions.js","webpack:///./src/app/users-manager/store/actions/index.js","webpack:///./src/app/shared/store/actions/index.js","webpack:///./src/app/entities/actions.js","webpack:///./src/app/session/store/actions/index.js","webpack:///./src/app/job-process/store/constants.js","webpack:///./src/app/shared/components/form/editors/Custom.jsx","webpack:///./src/app/users-manager/components/AvatarCard/AvatarCard.jsx","webpack:///./src/app/shared/store/state/index.js","webpack:///./src/app/shared/components/form/editors/field-level-validations.js","webpack:///./src/app/shared/components/form/SubmitButton.jsx","webpack:///./src/app/explorer/store/selectors/index.js","webpack:///./src/app/users-manager/components/SearchableList/SearchableList.jsx","webpack:///./src/app/users-manager/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/thunks.js","webpack:///./src/app/job-process/store/selectors.js","webpack:///./src/app/core/components/Ensure/Ensure.jsx","webpack:///./src/app/entities/utils/privileges.js","webpack:///./src/app/entities/selectors.js","webpack:///./src/app/executive-dashboard/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/variants.jsx","webpack:///./src/app/shared/components/layout/NavigationTab/NavigationTab.jsx","webpack:///./src/app/license-collection/utils/formikFormatter.js","webpack:///./src/app/shared/api/protocols.js","webpack:///./src/app/explorer/components/NavigationTab/NavigationTab.jsx","webpack:///./src/app/entities/components/Switch.jsx","webpack:///./src/app/shared/components/simple-search-input/simple-search-input.jsx","webpack:///./src/app/job-process/job-parameters.jsx","webpack:///./src/app/job-process/containers/notifications/notifications.jsx","webpack:///./src/app/shared/api/process.js","webpack:///./src/app/core/store/index.js","webpack:///./src/app/shared/api/accounts.js","webpack:///./src/app/shared/components/range-date-picker/constants.js","webpack:///./src/app/users-manager/store/mappers/index.js","webpack:///./src/app/session/store/state/index.js","webpack:///./src/app/shared/api/schedule.js","webpack:///./src/app/executive-dashboard/store/thunks/index.js","webpack:///./src/app/core/components/Header/Header.jsx","webpack:///./src/app/dashboard/store/state/index.js","webpack:///./src/app/dashboard/store/actions/index.js","webpack:///./src/app/dashboard/components/add-filter/components/day-filter-editor/day-filter-editor.jsx","webpack:///./src/app/dashboard/components/add-filter/components/user-filter-editor/user-filter-editor.jsx","webpack:///./src/app/dashboard/components/add-filter/components/status-filter-editor/status-filter-editor.jsx","webpack:///./src/app/shared/components/form/parameters/normalizeParameter.js","webpack:///./src/app/explorer/components/ActionCard/ActionCard.jsx","webpack:///./src/app/explorer/components/CardsLayout/CardsLayout.jsx","webpack:///./src/app/shared/api/invocation.js","webpack:///./src/app/license-collection/utils/normalizeParameter.jsx","webpack:///./src/app/license-collection/controls/TextField/TextField.jsx","webpack:///./src/app/license-collection/controls/DropdownField/DropdownField.jsx","webpack:///./src/app/license-collection/components/OutputModal/OutputModal.jsx","webpack:///./src/app/shared/lib/want/index.jsx","webpack:///./src/app/shared/components/overlays/Modal/Modal.jsx","webpack:///./src/app/explorer/components/DbObjects/Sidebar.jsx","webpack:///./src/app/explorer/components/DbObjects/Viewer.jsx","webpack:///./src/app/shared/components/form/parameters/index.jsx","webpack:///./src/app/shared/api/namespace.js","webpack:///./src/app/shared/api/form.js","webpack:///./src/app/entities/components/form-actions/FormEditor.jsx","webpack:///./src/app/license-collection/utils/sendToEmail.js","webpack:///./src/app/license-collection/utils/copyToClipboard.js","webpack:///./src/app/shared/components/MUIselect/index.jsx","webpack:///./src/app/shared/components/center/center.component.jsx","webpack:///./src/app/shared/lib/react-dates/isBeforeDay.js","webpack:///./src/app/shared/components/LightTooltip/LightTooltip.jsx","webpack:///./src/app/shared/components/layout/Overflow/Overflow.jsx","webpack:///./src/app/shared/components/controls/Checkbox/Checkbox.jsx","webpack:///./src/app/shared/components/overlays/ModalHeader/ModalHeader.jsx","webpack:///./src/app/shared/lib/polling/index.js","webpack:///./src/app/dashboard/components/add-filter/add-filter.jsx","webpack:///./src/app/dashboard/components/add-filter/components/filter-loader/filter-loader.jsx","webpack:///./src/app/jobs/containers/Schedule/Schedule.jsx","webpack:///./src/app/entities/components/namespace-actions/NewNamespace.jsx","webpack:///./src/app/shared/api/delete.js","webpack:///./src/app/entities/components/form-actions/FormModal.jsx","webpack:///./src/app/explorer/containers/Forms/ServerForm.jsx","webpack:///./src/app/explorer/containers/Forms/DatabaseForm.jsx","webpack:///./src/app/shared/api/datatypes.js","webpack:///./src/app/job-process/store/actions.js","webpack:///./src/app/license-collection/utils/getOutputText.js","webpack:///./src/app/executive-dashboard/components/ServerCard/ServerCard.jsx","webpack:///./src/app/executive-dashboard/components/ServersTile/ServersTile.jsx","webpack:///./src/app/executive-dashboard/utils/HorizontalStackedBar/HorizontalStackedBar.jsx","webpack:///./src/app/executive-dashboard/components/DatabasesTile/DatabasesTile.jsx","webpack:///./src/app/explorer/store/mappers/index.js","webpack:///./src/app/executive-dashboard/store/mappers/index.js","webpack:///./src/app/shared/api/alias.js","webpack:///./src/app/users-manager/users/pages/UserView/containers/ChangePassword.jsx","webpack:///./src/app/session/store/reducers/reducer.js","webpack:///./src/app/dashboard/store/tasks.js","webpack:///./src/app/dashboard/store/reducers/reducer.js","webpack:///./src/app/shared/store/reducers/reducer.js","webpack:///./src/app/core/store/reducers/reducer.js","webpack:///./src/app/core/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/wishes.jsx","webpack:///./src/app/entities/components/form-actions/utils.js","webpack:///./src/app/shared/api/privileges.js","webpack:///./src/app/core/containers/sidebar/components/navigation/constants.jsx","webpack:///./src/app/job-process/store/tasks.js","webpack:///./src/app/license-collection/components/ListOutput/ListOutput.jsx","webpack:///./src/app/session/store/reducers/index.js","webpack:///./src/app/shared/lib/bind-reducer/bind-reducer.js","webpack:///./src/app/shared/lib/action-creator/action-states.js","webpack:///./src/app/shared/lib/action-creator/action-creator.class.js","webpack:///./src/app/shared/lib/slugify/slugify.js","webpack:///./src/app/shared/lib/create-url/create-url.js","webpack:///./src/app/shared/lib/number-pretty/number-pretty.js","webpack:///./src/app/shared/lib/smart-number/smart-number.js","webpack:///./src/app/shared/lib/capitalize-first-letter/capitalize-first-letter.js","webpack:///./src/app/shared/lib/patterns/email.js","webpack:///./src/app/shared/lib/patterns/phone-number.js","webpack:///./src/app/shared/lib/patterns/url.js","webpack:///./src/app/shared/lib/random-generator/string.js","webpack:///./src/app/shared/lib/random-generator/unique-id.js","webpack:///./src/app/shared/lib/function-placeholder/index.js","webpack:///./src/app/shared/lib/delay/index.js","webpack:///./src/app/shared/lib/react-dates/isInclusivelyAfterDay.js","webpack:///./src/app/shared/lib/redux-utils/actions.utils.js","webpack:///./src/app/shared/lib/redux-utils/reducers.utils.js","webpack:///./src/app/shared/lib/workload/parseData.js","webpack:///./src/app/session/store/effects/index.js","webpack:///./src/app/shared/lib/rest/try-async.js","webpack:///./src/app/shared/lib/rest/rest-client.js","webpack:///./src/app/session/pages/login/login.page.jsx","webpack:///./src/app/session/components/container/container.component.jsx","webpack:///./src/app/session/pages/login/components/form/form.component.jsx","webpack:///./src/app/shared/components/rest-errors/rest-errors.component.jsx","webpack:///./src/app/shared/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/workload-graph/workload-graph.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-tooltip/custom-tooltip.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-axis-tick/custom-axis-tick.component.jsx","webpack:///./src/app/shared/components/circle-img/circle-img.component.jsx","webpack:///./src/app/shared/components/number-label/number-label.component.jsx","webpack:///./src/app/shared/components/string-label/string-label.component.jsx","webpack:///./src/app/shared/components/search-input/search-input.component.jsx","webpack:///./src/app/shared/components/dropdown/dropdown.component.jsx","webpack:///./src/app/shared/components/small-input/small-input.component.jsx","webpack:///./src/app/shared/components/single-date-picker/single-date-picker.component.jsx","webpack:///./src/app/shared/components/range-date-picker/range-date-picker.component.jsx","webpack:///./src/app/shared/components/JobResults/JobResults.jsx","webpack:///./src/app/shared/components/switch/Switch.jsx","webpack:///./src/app/shared/components/Table/Table.jsx","webpack:///./src/app/session/pages/logout/logout.page.jsx","webpack:///./src/app/dashboard/root.module.jsx","webpack:///./src/app/shared/components/loaders/Loader/Loader.jsx","webpack:///./src/app/shared/components/loaders/ParameterLoader/ParameterLoader.jsx","webpack:///./src/app/shared/components/layout/Paper/Paper.jsx","webpack:///./src/app/shared/components/layout/Main/Main.jsx","webpack:///./src/app/shared/components/layout/Section/Section.jsx","webpack:///./src/app/shared/components/layout/ScrollableContainer/ScrollableContainer.jsx","webpack:///./src/app/shared/components/layout/Column/Column.jsx","webpack:///./src/app/shared/components/layout/Row/Row.jsx","webpack:///./src/app/dashboard/containers/status/status.container.jsx","webpack:///./src/app/dashboard/containers/status/components/daemon/daemon.component.jsx","webpack:///./src/app/dashboard/containers/status/components/job-status/job-status.component.jsx","webpack:///./src/app/dashboard/containers/search-area/search-area.container.jsx","webpack:///./src/app/dashboard/components/search-results/search-results.component.jsx","webpack:///./src/app/dashboard/store/reducers/index.js","webpack:///./src/app/shared/store/reducers/index.js","webpack:///./src/app/shared/store/effects/index.js","webpack:///./src/app/root.module.jsx","webpack:///./src/app/core/root.layout.jsx","webpack:///./src/app/jobs/root.module.jsx","webpack:///./src/app/shared/components/controls/Input/Input.jsx","webpack:///./src/app/shared/components/controls/Button/Button.jsx","webpack:///./src/app/jobs/components/job-item/job-item.component.jsx","webpack:///./src/app/jobs/components/job-status/job-status.component.jsx","webpack:///./src/app/jobs/components/job-list/job-list.component.jsx","webpack:///./src/app/jobs/containers/filters/filters.container.jsx","webpack:///./src/app/shared/store/selectors/connections.js","webpack:///./src/app/jobs/containers/jobs-invocations/jobs-invocations.container.jsx","webpack:///./src/app/shared/components/overlays/ModalFooter/ModalFooter.jsx","webpack:///./src/app/entities/root.module.jsx","webpack:///./src/app/users-manager/root.jsx","webpack:///./src/app/users-manager/users/root.jsx","webpack:///./src/app/users-manager/groups/root.jsx","webpack:///./src/app/explorer/root.jsx","webpack:///./src/app/explorer/treeview/root.jsx","webpack:///./src/app/explorer/components/DbObjects/DbObjects.jsx","webpack:///./src/app/core/containers/sidebar/sidebar.container.jsx","webpack:///./src/app/core/containers/sidebar/components/favorites/favorites.component.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/navigation.component.jsx","webpack:///./src/app/core/containers/sidebar/components/notification/notification.component.jsx","webpack:///./src/app/core/containers/sidebar/components/user-menu/user-menu.component.jsx","webpack:///./src/app/core/containers/sidebar/components/compile/compile.component.jsx","webpack:///./src/app/job-process/root.module.jsx","webpack:///./src/app/session/store/actions/session.action.js","webpack:///./src/app/session/store/effects/check-authorization/check-authorization.effect.js","webpack:///./src/app/constants.js","webpack:///./src/app/session/store/effects/login/login.effect.js","webpack:///./src/app/session/store/effects/logout/logout.effect.js","webpack:///./src/assets/images/login_graphic.svg","webpack:///./src/assets/images/vendita_logo_blue.svg","webpack:///./src/assets/images/mas_logo_blue.svg","webpack:///./src/app/shared/components/range-date-picker/range-date-range-picker.container.jsx","webpack:///./src/app/shared/store/actions/jobs.action.js","webpack:///./src/app/shared/store/actions/process.action.js","webpack:///./src/app/shared/store/actions/global-filters.action.js","webpack:///./src/app/dashboard/store/actions/filter-status.action.js","webpack:///./src/app/shared/api/daemon.js","webpack:///./src/app/dashboard/store/selectors/index.js","webpack:///./src/app/dashboard/components/add-filter/components/filter-chip/filter-chip.jsx","webpack:///./src/app/dashboard/containers/ServerUsage/ServerUsage.jsx","webpack:///./src/app/dashboard/containers/ServerUsage/components/UsageListing/UsageListing.jsx","webpack:///./src/app/dashboard/containers/ServerUsage/components/UsageEntry/UsageEntry.jsx","webpack:///./src/app/shared/store/effects/jobs/jobs.effect.js","webpack:///./src/app/shared/store/effects/connections/connections.effect.js","webpack:///./src/app/shared/store/effects/search-jobs/search-jobs.effect.js","webpack:///./src/app/shared/store/effects/search-processes/search-processes.effect.js","webpack:///./src/app/shared/store/effects/global-filters/global-filters.effect.js","webpack:///./src/app/users-manager/store/reducers/index.js","webpack:///./src/app/users-manager/groups/store/reducer.js","webpack:///./src/app/explorer/store/reducers/index.js","webpack:///./src/app/executive-dashboard/store/reducers/index.js","webpack:///./src/app/entities/reducer.js","webpack:///./src/app/dashboard/store/reducers/daemon.js","webpack:///./src/app/job-process/store/reducer.js","webpack:///./src/app/core/store/middlewares.js","webpack:///./src/app/core/store/reducers/index.js","webpack:///./src/app/core/store/actions/notification.action.js","webpack:///./src/app/jobs/containers/Schedule/components/ScheduleModal/ScheduleModal.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ViewTabs/ViewTabs.jsx","webpack:///./src/app/jobs/containers/Schedule/components/Documentation/Documentation.jsx","webpack:///./src/app/jobs/containers/Schedule/containers/ScheduleForm/ScheduleForm.jsx","webpack:///./src/app/shared/components/form/editors/formatters.js","webpack:///./src/app/shared/components/form/parameters/extractDefault.js","webpack:///./src/app/job-process/components/notification-groups/notification-groups.jsx","webpack:///./src/app/job-process/components/notification-users/notification-users.jsx","webpack:///./src/app/job-process/components/notification-events/notification-events.jsx","webpack:///./src/app/job-process/components/notification-list/notification-list.jsx","webpack:///./src/app/entities/components/Entity.jsx","webpack:///./src/app/entities/containers/SelectedEntity.jsx","webpack:///./src/app/entities/components/ActionsNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/EditNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/DeleteNamespace.jsx","webpack:///./src/app/entities/components/ActionsConstant.jsx","webpack:///./src/app/shared/api/constant.js","webpack:///./src/app/entities/components/ActionsProcess.jsx","webpack:///./src/app/entities/components/process-actions/EditProcessModal.jsx","webpack:///./src/app/entities/components/process-actions/ProcessEditor.jsx","webpack:///./src/app/entities/components/ActionsForm.jsx","webpack:///./src/app/shared/components/form/SubmitButtonNoDirty.jsx","webpack:///./src/app/entities/components/form-actions/FormParameters.jsx","webpack:///./src/app/entities/components/ActionsAccount.jsx","webpack:///./src/app/entities/components/ConnectedEditConnection.jsx","webpack:///./src/app/entities/components/ActionsRoot.jsx","webpack:///./src/app/entities/components/ActionsPrototype.jsx","webpack:///./src/app/entities/components/ActionsSchedule.jsx","webpack:///./src/app/entities/components/ActionsCommon.jsx","webpack:///./src/app/entities/components/common-actions/DeleteEntity.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesModal.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesEditor.jsx","webpack:///./src/app/users-manager/components/HeaderPageSwitch/HeaderPageSwitch.jsx","webpack:///./src/app/users-manager/users/containers/UserLoader.jsx","webpack:///./src/app/users-manager/users/pages/UserView/UserView.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/Privileges.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/UserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserDetails.jsx","webpack:///./src/app/users-manager/users/pages/UserView/components/UserDatesBox.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserInfo.jsx","webpack:///./src/app/users-manager/components/UserCard/UserCard.jsx","webpack:///./src/app/users-manager/users/pages/NoUsersSelected.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/CreateNewUser.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/NewUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/components/GroupCard/GroupCard.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/GroupView.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/Privileges.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/GroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditGroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditSubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/CreateNewGroup.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/pages/NoGroupSelected.jsx","webpack:///./src/app/explorer/treeview/layers/Dbms/Dbms.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/ServerList.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/containers/Server/Server.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/DatabaseList.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/containers/Database/Database.jsx","webpack:///./src/app/explorer/containers/Breadcrumbs/Breadcrumbs.jsx","webpack:///./src/app/explorer/components/ContentSwitch/ContentSwitch.jsx","webpack:///./src/app/explorer/containers/AllDbms/AllDbms.jsx","webpack:///./src/app/explorer/containers/AllServers/AllServers.jsx","webpack:///./src/app/explorer/containers/Settings/ServerSettings.jsx","webpack:///./src/app/explorer/containers/AllDatabases/AllDatabases.jsx","webpack:///./src/app/explorer/containers/Settings/DatabaseSettings.jsx","webpack:///./src/app/explorer/containers/Workload/Workload.jsx","webpack:///./src/app/explorer/containers/License/License.jsx","webpack:///./src/app/explorer/containers/License/LicenseList/LicenseList.jsx","webpack:///./src/app/explorer/containers/License/Report/Report.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesStatus/FeaturesStatus.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesUsage/FeaturesUsage.jsx","webpack:///./src/app/explorer/components/LicenseReporting/UnusedFeatures/UnusedFeatures.jsx","webpack:///./src/app/explorer/containers/Storage/Storage.jsx","webpack:///./src/app/explorer/containers/Objects/Objects.jsx","webpack:///./src/app/explorer/containers/Sessions/Sessions.jsx","webpack:///./src/app/explorer/containers/AddServerCard/AddServerCard.jsx","webpack:///./src/app/explorer/containers/AddDatabaseCard/AddDatabaseCard.jsx","webpack:///./src/app/shared/api/compile.js","webpack:///./src/assets/images/mas_logo_white.svg","webpack:///./src/assets/images/vendita_logo_white.svg","webpack:///./src/app/job-process/job-view.jsx","webpack:///./src/app/job-process/job-form.jsx","webpack:///./src/app/session/store/selectors/index.js","webpack:///./src/app/job-process/containers/output/output.jsx","webpack:///./src/app/job-process/components/ListOutput/ListOutput.jsx","webpack:///./src/app/job-process/components/JobStatus/JobStatus.jsx","webpack:///./src/app/jobs-search-results/JobsSearchResults.jsx","webpack:///./src/app/executive-dashboard/ExecutiveDashboard.jsx","webpack:///./src/app/executive-dashboard/components/PhysicalDashboard/PhysicalDashboard.jsx","webpack:///./src/app/executive-dashboard/containers/SearchSection/SearchSection.jsx","webpack:///./src/assets/images/server_core.svg","webpack:///./src/app/executive-dashboard/components/SwitchContent/SwitchContent.jsx","webpack:///./src/app/executive-dashboard/components/EmptyContent/EmptyContent.jsx","webpack:///./src/app/executive-dashboard/containers/Dashboard/Dashboard.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/OptionsTile.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsList/OptionsList.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionItem/OptionItem.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsChart/OptionsChart.jsx","webpack:///./src/app/executive-dashboard/containers/ServerView/ServerView.jsx","webpack:///./src/app/executive-dashboard/components/UsedOptions/UsedOptions.jsx","webpack:///./src/app/executive-dashboard/components/VirtualDashboard/VirtualDashboard.jsx","webpack:///./src/app/executive-dashboard/components/NoData/NoData.jsx","webpack:///./src/app/executive-dashboard/containers/ToggleSelection/ToggleSelection.jsx","webpack:///./src/app/license-collection/LicenseCollection.jsx","webpack:///./src/app/license-collection/components/Navigation/Navigation.jsx","webpack:///./src/app/license-collection/Pages/Hardware/Hardware.jsx","webpack:///./src/app/license-collection/utils/extractDefault.js","webpack:///./src/app/license-collection/Pages/Software/Software.jsx","webpack:///./src/app/license-collection/Pages/Packaging/Packaging.jsx","webpack:///./src/app/license-collection/utils/downloadFile.js","webpack:///./src/i18n/index.js","webpack:///./src/i18n/en/index.js","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/scoped-css-mui-compatibility.js"],"names":["Text","forwardRef","ref","options","validate","defaultValue","value","required","reactToChange","props","validation","useMemo","check","useField","touched","name","field","meta","helpers","formikCtx","useFormikContext","useEffect","setValue","setTouched","undefined","setError","length","selected","find","o","disableClearable","id","getOptionLabel","option","label","getOptionDisabled","disabled","onChange","e","renderInput","params","type","error","helperText","Email","validations","merge","email","PhoneNumber","phone","Integer","required_not_null","Password","BOOL_OPTIONS","BooleanSelect","Date","moment","fullWidth","utils","MomentUtils","disablePast","disableToolbar","inputVariant","format","KeyboardButtonProps","date","Time","Select","isNamespace","getOptionSelected","desription","CONSTANTS","defaultConstants","icons_map","success","mdiCheckDecagram","fail","mdiAlertDecagram","Result","children","className","classnames","fontSize","d","propTypes","oneOf","node","ResultText","compact","bool","ResultMessages","messages","map","msg","index","key","text","split","Messages","LOAD_ALL_ACCOUNTS","CHANGE_STATE","LOAD_ALL_LICENSES","LICENSE_FULL_REPORT","LOAD_ALL_PROTOTYPES","LOAD_ALL_DATATYPES","LOAD_ALL_FORMS","PROVIDE_SERVERS_USAGE","LOAD_STORAGE_POINTS","SET_STORAGE_NS","LOAD_STORAGE_DETAILS","LOAD_OBJECT_DETAILS","SET_SELECTED_OBJECT","LOAD_SESSIONS","PROVIDE_DB_LAST_BACKUP","PROVIDE_DB_STATUS","LOAD_PROTOCOLS","loadAllAccountsThunk","payload","dispatch","getState","async","creators","loading","RestClient","get","BASE","ENDPOINTS","ACCOUNTS","page_size","response","data","protocols","explorer","from","provideServersUsageThunk","provideDBLastBackupThunks","provideDBStatusThunks","loadProtocolsThunk","PROTOCOLS","changeStateThunk","newState","action","loadAllLicensesThunk","JOBS","getLicenseReportThunk","license","uuid","report","date_invoke","getAllPrototypesThunk","PROTOTYPES","getAllDatatypesThunk","DATATYPES","getAllFormsThunk","FORMS","loadSessionsThunk","filters","SESSIONS","fullPath","sort","loadStorageDetailsThunk","STORAGE_DF","setStorageItemThunk","ns","loadStoragePointsThunk","STORAGE_TS","dbconn","loadObjectsThunk","objectApis","path","Promise","allSettled","api","dbms","allData","res","setSelectedObjectThunk","loadUsagePerDb","server","database","databases","usage","parseFloat","HOST_CPU","protocol","address","servers","structured","slice","usageResult","filter","result","status","push","highLoadCount","loadDBLastBackup","shell","s","DB_LAST_BACKUP","backup","isValid","Oracle","r","dbLastBackup","loadDBStatus","DB_STATUS","toString","toLowerCase","dbStatus","LOAD_ALL_GROUPS","LOAD_GROUP","DELETE_GROUP","GRANT_PRIVILEGE","REVOKE_PRIVILEGE","ADD_USERS_TO_GROUP","REMOVE_USERS_FROM_GROUP","REMOVE_GROUPS_FROM_GROUP","PATCH_SELECTED_GROUP","CREATE_GROUP","LOAD_ALL_USERS","SELECT_USER","LOAD_USER","ADD_USER_TO_GROUPS","REMOVE_USER_FROM_GROUPS","DELETE_USER","CREATE_USER","actions","jobsActions","processActions","globalFiltersActions","fetchEntities","promises","ENTITY_TYPES_FETCH","query","url","concat","encodeURIComponent","promise","entityType","fetchEntity","eType","definition","desc","console","warn","selectEntity","entity","clearSelectedEntity","setFilterType","setFilterSearch","openModal","sessionActions","InvocationStatus","NEW","ALL","NOT_FETCHED","ABORTED","SCHEDULED","SUCCEEDED","FAILED","EXECUTING","DELAYED","KILLED","AllowOutputFor","AllowGeneralEditingFor","CannotShowStatusFor","FAILURES","SUCESSES","WARNINGS","RSAKey","multiline","FQName","QualifiedName","masName","AccountSelect","useState","showUrls","setShowUrls","boxName","showToggle","useCallback","target","checked","inlineLoader","accounts","list","account","includes","formatAccount","Boolean","size","PLATFORMS","tester","PlatformSelect","ProcessSelect","values","platformValue","platform","p","processes","process","test","OPTIONS","appearance","item","NamespaceSelect","namespace","pipe","namespaces","FormPrototypeSelect","prototype","description","ModeSelect","mode","modes","enumerations","variadicListReducer","produce","draft","deflt","shift","useVariadicList","recieved","useReducer","replvars","Variadic","displayDeftlDesc","selectedProcess","Header","Title","Content","dataType","Fragment","VariadicInstance","defltDesc","types","style","display","alignItems","justifyContent","color","onClick","name_base","parsedDeflt","replace","marginBottom","firstCharLetter","AvatarCard","avatar","onSelect","focusable","onFocus","event","stopPropagation","tabIndex","data-qa","alt","src","initial","fallback","containEvent","preventDefault","shape","string","object","func","localState","state","shared","jobsSelector","createSelector","connectionsSelector","jobsSearchedSelector","processesSearchedSelector","globalFiltersSelector","mergeValidations","callbacks","forEach","provided","checkRequired","Yup","nullable","validateSync","message","checkRequiredNotNullable","checkEmail","checkPhoneNumber","matches","excludeEmptyString","checkUnsignedInt","checkName","substr","checkFirstLetter","noop","unsigned_int","unsigned_float","signed_float","SubmitButton","submitForm","isSubmitting","isValidating","dirty","log","fns","arg","reduce","prev","fn","filterBy","selector","equalityFn","el","retrieveFilteredAccounts","nodes","stateValue","currentValue","Object","keys","currentServer","retrieveServerEntry","structure","entry","retrieveDatabaseEntry","db","special","getStatePath","getStructured","getSessions","sessions","getSessionsFlags","flags","getStoragePointsLoadingFlag","storage","loadingPoints","getStorageDetailsLoadingFlag","loadingDetails","getStoragePoints","points","getStorageDetails","details","getSelectedStorage","getSelectedObject","objects","selectedObject","getSelectedOwner","selectedOwner","getAllObjects","getObjectsLoadingFlag","getFullPath","pathArr","getFormattedStorage","isLoading","_","isArray","point","Used_MB","Total_MB","Tablespace","freePerc","freeGB","Free_MB","totalGB","usedGB","getStorageDetailsData","selectedNS","tablespace","files","TABLESPACE_NAME","getStructuredObjects","tree","acc","OWNER","owner","getInvalidObjects","invalidObjects","included","findIndex","STATUS","getSelectedObjectData","isObject","getSortedSessions","sortFunction","order","a","b","sortKey","getTime","getBackup","backups","getDBStatus","statuses","STATUS_TYPES","down","up","getDBMSStatus","allStatuses","getServerStatus","sv","SearchableList","items","variant","scrolled","setScrolled","onWheel","currentTarget","scrollTop","scroller","setQuery","filtered","scrollBy","top","deltaY","left","deltaX","array","defaultProps","loadAllUsersThunk","USERS","loadUserThunk","grantPrivilegeThunk","user","patch","revokePrivilegeThunk","addUserToGroupsThunk","groups","removeUserFromGroupsThunk","removeUserThunk","delete","allUsers","createUserThunk","body","username","password","post","refreshed","loadAllGroupsThunk","GROUPS","loadGroupThunk","createGroupThunk","groupname","group","removeUsersFromGroupThunk","removeSubGroupsThunk","addUsersToGroupThunk","users","all","removeGroupThunk","getQuery","invocation_viewer","getInvocation","invocation","getInvocationStatus","Ensure","connect","entitySelectors","request","Ensurer","fresh","Loading","ParameterLoader","Loader","hasWritePrivileges","privileges","effective","ENTITY_TYPES","title","dataEnclosure","ROOT_ENTITY","getBreadcrumbs","entities","breadcrumbs","collectData","namespacesWithMeta","collection","aliases","alias","alias_type","aliasedEntity","Array","dataItem","ownNamespace","startsWith","selectors","def","fetch_status","namespaceWithMetaSelector","dataNamespaces","getFilteredEntities","accumulator","getEntitiesAsHashMap","filteredEntities","search","domainArray","paths","join","findEntity","notPersisted","getEntities","entitiesMap","roots","entityName","names","isSelected","columns","breadcrumb","level","rows","bucket","entityLevel","getSelectedEntity","namespaceChildrenListSelector","selectedEntity","PROVIDE_EXECUTIVE_DASHBOARD","SELECT_ALL","DESELECT_ALL","TOGGLE_SERVER","extractParameter","parameter","others","editor","additional","field_name","is_required","TextParameter","passable","PasswordParameter","PhoneNumberParameter","BooleanParameter","IntegerParameter","EmailParameter","ProcessParameter","AccountParameter","VariadicParameter","FQNameParameter","RSAKeyParameter","NavigationTab","this","active","tabs","indexOf","indicatorColor","textColor","tab","React","PureComponent","getInitialValues","parameters","initialValues","getValidationSchema","validationSchema","formatParameters","trim","fetchProtocols","Context","createContext","Switch","Provider","Case","useContext","SimpleSearchInput","placeholder","ProcessParameters","editable","xs","forms","datatypes","prototypes","processName","normalize","position","chunk","spacing","normalized","Notifications","getEventTypeIcons","jobStart","jobCompletion","abnormalEvent","icons","notice","fullLog","toggleApplyButton","setState","isEditing","checkIfAllUsersSelectedCurrentGroup","selectedGroup","getSelectedGroup","usersData","every","onSelectGroup","groupsData","onSelectUser","setFlagGroupsIfContainSelectedUser","onSelectUserAction","shouldClear","displayIcons","member_of","onSelectEventType","recievedData","events","then","areUsersSelected","isClearActionAvailable","isGroupSelected","eventTypeIcons","onApply","mappedState","getProcess","patchProcess","saga","createSagaMiddleware","configStore","reducer","combineReducers","core","session","sessionReducer","dashboard","dashboardReducer","sharedReducer","usersManager","usersManagerReducer","groupsReducer","createReducer","explorerReducer","invocations","executiveDashboard","executiveDashboardReducer","daemon","effects","sessionEffects","sharedEffects","store","createStore","composeWithDevTools","applyMiddleware","thunk","effect","run","postAccount","patchAccount","getConnection","patchConnection","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","NAV_POSITION_TOP","ANCHOR_LEFT","WEEKDAYS","MODIFIER_KEY_NAMES","Set","mapUsersData","mapLoadedUser","authorizationSelector","currentUserSelector","loginSelector","postSchedule","getSchedule","patchSchedule","loadExecutiveDashboardThunk","EXECUTIVE_DASHBOARD","deselectAllThunk","selectAllThunk","rawEntries","toggleServerThunk","allServers","selectedServers","svIndex","nrCores","PropTypes","filterStatusSelector","filterStatusActions","checkDeamonStatus","checkDaemon","DayFilterEditor","setFilterValue","onDateChange","TypeDescriptor","isRequired","icon","mdiCalendarBlank","UserFilterEditor","IconComp","autoFocus","onKeyDown","StatusFilterEditor","readOnly","toggle","isDropdownOpen","supportedDataTypes","space_begone","space_summon","param","dataTypes","defaults","defineEditor","maybeDisabled","Number","MAX_SAFE_INTEGER","data_type","substring","is_supported","extractDefault","parseProtocols","metaEditor","proto","form","sortBy","ActionCard","settings","addOnly","readOnlyOptions","lastBackup","addable","mdiContentSave","role","fillable","percentage","width","CardsLayout","postInvocation","requestInvocation","fetchInvocation","fetchInvocationOutput","getLabel","getIcon","labels","target_working_dir","target_shell","repo_shell","repo_working_dir","mdiFolderHome","mdiLanConnect","mdiSourceRepository","mdiHexagonMultipleOutline","TextField","InputProps","startAdornment","endAdornment","LightTooltip","placement","mdiHelpCircleOutline","withStyles","tooltip","backgroundColor","letterSpacing","lineHeight","fontFamily","Tooltip","DropdownField","rawAccounts","datatype","opt","meta2","OutputModal","content","interval","open","output","modalDetails","setMessage","setInterval","clearInterval","Footer","scrollable","errors","Left","sendToEmail","copyToClipboard","minWidth","minHeight","height","want","Unresolved","keygen","wantComponent","settler","Picked","ModalContext","Modal","providedId","aria","onClose","close","oneOfType","ModalHeader","VerticalUsageBar","fill","viewBox","x","y","rx","ry","SidebarStorageItem","setItem","StorageSidebar","selectedItem","dbName","mdiFileTableBox","element","iconMapper","triggers","mdiAlertOutline","tables","mdiTable","indexes","mdiTableColumnWidth","procedures","mdiAlphaPBox","packages","mdiInbox","packageBodies","mdiInboxFull","objectsSidebarMapper","invalidChildren","mdiFileTree","i","isObjectSelected","isInvalid","invalid","ObjectsSidebar","mdiDatabase","KPIDisplay","suffix","colorFormatting","digits","valueString","toLocaleString","minimumFractionDigits","maximumFractionDigits","NoDataComponent","mdiHelpRhombusOutline","StorageDetailsList","PCT_USED","FILE_NAME","SIZE_MB","MAXSIZE_MB","filePath","fileName","extension","StorageViewer","ObjectsViewer","mdiArrangeBringToFront","OBJECT_NAME","CREATED","OBJECT_ID","LAST_DDL_TIME","mdiFlashCircle","RepeatableParameter","Parameter","is_repeatable","getNamespace","patchNamespace","postNamespace","postForm","createForm","updateForm","pointers","instances","instance","splice","fields","PackedContext","FormEditor","isNew","setResult","initialPacked","groupForm","cloneDeep","split_name","last","packed","contextValue","onSubmit","handleSubmit","Right","refresh","form_name","protoName","extracted","extractFieldInfo","exclusions","filteredExtractions","val","packedCopy","set","unpacked","ungroupForm","v","rename","version","request_args","unshift","key_struct","entries","matched","exec","lower","getOutputText","utc","subject","window","location","href","navigator","permissions","clipboard","writeText","legacyMethod","bind","textArea","document","createElement","appendChild","classList","add","focus","select","execCommand","removeChild","MUIselect","handleSelect","selectedOption","labelWidth","setLabelWidth","inputLabel","useRef","selectedValue","current","offsetWidth","htmlFor","labelId","findItem","CenterComponent","isBeforeDay","isMoment","aYear","year","aMonth","month","bYear","bMonth","isSameYear","Overflow","component","nodeRef","scrollableX","setScrollableX","scrollableY","setScrollableY","scrolledX","setScrolledX","scrolledY","setScrolledY","Tag","onScroll","scrollLeft","box","clientWidth","clientHeight","scrollHeight","scrollWidth","Checkbox","rest","control","checkedIcon","closeable","providedAria","context","task","duration","running","runTask","setTimeout","start","stop","checkFilters","AddFilter","filterRef","createRef","handleClickOutside","saveDraftFilter","updateFilters","loadFilter","editing","mapDropdownItem","Item","hasSearchTerm","hasFilters","onClickAway","renderDropdown","save","isOpen","startIcon","mdiFilter","endIcon","FilterLoader","FilterComponent","day","Schedule","setOpen","modalActions","btnLabel","ConnectedNewNamespace","NewNamespace","isDisabled","classes","root","handleSubmitNew","catch","deleteEntity","ConnectedFormModal","FormModal","maxHeight","mdiClipboardCheck","ServerForm","handleSubmission","submission","setSubmission","passwordEditable","setPasswordEditable","showRSA","setShowRSA","handleAccountCreation","getCreateAccountHandler","allowedProtocols","is_abstract","special_required","availablePorts","default_port","extraValidations","host","port","server_password","user_key","confirm_server_password","rsa_key","confirm_password","loadNewAccountHandler","validateOnBlur","validateOnChange","validateOnMount","formik","setFieldValue","maxWidth","PasswordOrRSA","allowed","onInput","request_body","server_user","parseInt","DatabaseForm","mapAccountValues","selectedProtocol","allowRSA","allow_rsa_key","withDatabase","withMode","padded","handler","fetchDataTypes","data_types","processQuery","updateInvocation","row","ServerCard","toggleSelectedCallback","mdiCubeOutline","mdiCubeScan","hosts","mdiMemory","cpu","Cores","cores","mdiDns","collDate","colors","1","2","4","6","8","16","24","ServersTile","isSingle","total","count","padding","image","number","showTextIn","fontColor","fontWeight","HorizontalBar","listBars","prevProps","prevState","isEqual","getListBarWithOtherParameters","widthTotal","bar","calcWidthTotal","barWidth","assign","evt","Math","floor","random","g","showTextInsteadValue","showTextWithValue","float","showValueIn","randomColor","dy","textAlign","getListTextBar","showTextUp","showValueUp","renderLabel","renderBars","showTextDown","showValueDown","Component","DatabasesTile","totalDBs","dbs","eelic_count","selic_count","mapAccountsTree","splitIntoRootsByProtocol","splitIntoRootsByAddress","splitIntoRootsByDatabase","serversMap","existingEntry","databaseMap","mapAccountsNewStructure","raw","protocolsArr","dbServer","dbmsServerEntry","otherIndex","mapProtocols","mapAllServers","serversInfo","srvname","sids","installedOptions","aa_count","ac_count","as_count","dv_count","mt_count","adg_count","rac_count","olap_count","part_count","in_mem_db_count","Ncore","totalInstalledOptions","getAlias","patchAlias","postAlias","ChangePassword","done","confirm","setSubmitting","ChangePasswordContainer","selectedUser","initialState","login","authorization","actionStates","LOADING","currentUser","reducerActions","checkAuthorization","getLoadingAction","setIn","getSuccessAction","fromJS","source","SUCCESS","getFailAction","FAIL","Error","daemonPoller","withPolling","filterStatus","setFilterStatus","getEventAction","sessionGlobalFilters","startDate","subtract","startOf","unix","endDate","globalFilters","JSON","parse","localStorage","getItem","jobs","page_count","total_count","fetching","callFailed","reason","connections","searchResults","setGlobalFilters","nextState","toJS","stringify","logout","removeItem","getJobs","getConnections","searchJobs","searchProcesses","notifications","addNotifications","removeNotification","notificationIndex","removeIn","notificationActions","WantParameter","boolean","fqname","variadic_parameter","hasOwnProperty","maxPosition","max","virtual","currentGroup","upper","nextGroup","iteration_limit","instanceCount","f","grouped","info","subvalues","dropRight","getPrivileges","isAlias","cls","setPrivileges","granted","role_type","privilege","enitity_name","navigationItems","to","qaClass","mdiClipboardPlayMultipleOutline","mdiShieldCheckOutline","resolve","invocationPoller","ListOutput","bindReducer","ActionCreatorHandler","slugify","createUrl","paramsUrl","numberPretty","parts","formatNumber","pow","decimals","toFixed","smartNumber","capitalizeFirstLetter","charAt","toUpperCase","emailPattern","phoneNumberPattern","urlPattern","randomStringGenerator","possible","generateUniqueId","btoa","valueOf","emptyFunc","delay","timer","isInclusivelyAfterDay","STATES","SEPARATOR","stateKey","unchanged","reducers","reducerInitialState","getWorkloadData","dateRange","jobsWithFormattedInvokedDate","orderBy","job","local","groupJobsByDate","groupBy","intervalArray","totalDays","getDaysArray","currentDate","dateArray","CheckAuthorizationEffect","LoginEffect","LogoutEffect","tryAsync","onError","RestClientClass","authentications","basicAuth","accessToken","baseUrl","HOST","VERSION","client","axios","create","timeout","TIMEOUT","baseURL","headers","Accept","head","put","Cookie","remove","getRequestConfig","LoginPage","history","submit","resetErrors","mapStateToProps","mapDispatchToProps","dispatchLoading","dispatchFail","ContainerComponent","MasLogo","VenditaLogo","LoginGraphic","FormComponent","setShowPassword","showPassword","handleMouseDownPassword","submitHandler","restErrors","getRestErrors","noValidate","autoComplete","getError","valueChangeHandler","inputProps","InputLabelProps","aria-label","onMouseDown","edge","RestErrorsComponent","JobItemComponent","jobStatus","formatName","nameContainerWidth","getElementById","starPath","formattedName","canvas","getContext","metrics","measureText","extended","statusChild","WorkloadGraphComponent","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickSize","axisLine","tick","cursor","stroke","strokeWidth","fillOpacity","CustomTooltipComponent","nextProps","CustomAxisTickComponent","transform","textAnchor","CircleImgComponent","NumberLabelComponent","StringLabelComponent","SearchInputComponent","DropdownComponent","handleToggle","setCloseDropdown","anchorRef","contains","onClickCallback","itemIndex","parentWidth","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","SmallInputComponent","SingleDatePickerComponent","focused","onFocusChange","numberOfMonths","customInputIcon","isOutsideRange","hideKeyboardShortcutsPanel","displayFormat","navPrev","mdiChevronLeft","navNext","mdiChevronRight","RangeDatePicker","renderDayContents","anchorDirection","block","customArrowIcon","mdiArrowLeftRight","customCloseIcon","enableOutsideDays","endDateId","endDatePlaceholderText","horizontalMargin","initialEndDate","initialStartDate","initialVisibleMonth","isDayBlocked","isDayHighlighted","isRTL","keepOpenOnDateSelect","minimumNights","monthFormat","navPosition","onNextMonthClick","onPrevMonthClick","orientation","phrases","calendarLabel","chooseAvailableEndDate","chooseAvailableStartDate","clearDates","closeDatePicker","dateIsSelected","dateIsSelectedAsEndDate","dateIsSelectedAsStartDate","dateIsUnavailable","enterKey","escape","focusStartDate","homeEnd","jumpToNextMonth","jumpToPrevMonth","keyboardBackwardNavigationInstructions","keyboardForwardNavigationInstructions","keyboardShortcuts","leftArrowRightArrow","moveFocusByOneDay","moveFocusByOneMonth","moveFocusByOneWeek","moveFocustoStartAndEndOfWeek","openThisPanel","pageUpPageDown","questionMark","returnFocusToInput","roleDescription","selectFocusedDate","showKeyboardShortcutsPanel","upArrowDownArrow","regular","renderCalendarDay","renderMonthText","reopenPickerOnClearDates","screenReaderInputMessage","showClearDates","showDefaultInputIcon","small","startDateId","startDatePlaceholderText","stateDateWrapper","withFullScreenPortal","withPortal","onDatesChange","focusedInput","JobResults","renderJobsResults","mdiProgressClock","mdiCheckCircleOutline","mdiCalendarArrowRight","mdiStopCircleOutline","mdiTimelineClock","mdiAlertRhombusOutline","mdiCancel","jobName","any","Table","sortBehavior","changeSort","stickyHeader","HeaderCell","column","align","sortDirection","direction","Row","TableRow","Cell","TableCell","LogoutPage","RootModule","filteredJobs","totalFilteredJobs","range","onChangeDatesHandler","days","diff","period","BodyText","averageJobs","round","storeFilterStatus","mdiChartTimelineVariant","fontStyle","marginTop","inline","Paper","flex","PaperHeader","PaperContent","PaperFooter","LeftSideSlot","RightSideSlot","PaperTitle","Main","Section","full","SectionTitle","SectionHeader","SectionInfo","SectionContent","Info","ScrollableContainer","Column","StatusContainer","filterJobs","executing","succeeded","scheduled","aborted","failed","Daemon","useSelector","isDaemonRunning","JobStatus","filterByStatus","storeStatus","setStatus","renderContent","dispatchEvent","Search","apiSearchWithDebounce","debounce","searchedTerm","showSearchResults","getSearchResults","QSP","name_filter","selectedFilter","page","handleOnChange","searchTerm","clearSearch","updateSelectedFilter","getSearchedJobs","getSearchedProcesses","category","totalResults","displayedResults","nameFilter","customFilter","SearchResultsComponent","renderProcessesResults","mdiPlaySpeed","createURLLink","JobsEffect","JobsConnectionsEffect","SearchJobsEffect","SearchProcessesEffect","GlobalFiltersEffect","setAuthorization","authorizationStatus","exact","Login","Logout","Layout","hot","RootLayout","Jobs","ConnectedJobsSearchResults","JobProcess","Entities","UsersAndGroups","Explorer","ConnectedExecutiveDashboard","LicenseCollection","renderJobItem","updateQSP","URLSearchParams","has","append","handleOnTabChange","selectedTab","handleOnFilterChange","performFilter","returnListBasedOnTab","shell_host_address_filter","protocol_filter","database_name_filter","onSearchInputChange","onBlur","selections","excludeStatus","Input","mdiInformationOutline","LinkBehavior","Button","link","JobItem","mdiClockOutline","statusMap","JobList","NoJobs","Filters","mdiServer","mdiCircleSlice5","getJobsFiltersOptions","connection","getIn","JobsInvocations","useDispatch","ModalFooter","ENTITY_ICONS","constant","schedule","exception","searchWithDebounce","searchInput","setSearchInput","renderColumn","colNum","entityIcons","ev","container","UsersAndGroupsPage","UserManagementHeaderLinks","RightSideControls","UserManagementSwitch","useRouteMatch","useLocation","routes","pathname","Link","UsersPage","loadAllUsers","match","userLink","UserSwitch","GroupsPage","allGroups","loadAllGroups","groupLink","GroupsPagesSwitch","ExplorerPage","loadProtocols","loadAllAccounts","treeviewData","storeState","activePage","Treeview","DbObjects","loadingFlags","SidebarContainer","Favorites","mdiStarOutline","Navigation","navId","setToggleDropdown","anchorElement","setActiveTab","newActiveTab","activeTab","setCurrentNavItem","subItem","withRouter","Notification","UserMenu","menuAnchorRef","isVisible","autoFocusItem","Compile","Compiler","compilation","setCompilation","postCompile","results","useQuery","LinkRouter","RouterLink","redirected","OtherMainLinks","PrepareFlow","designation","actionsTypes","CHECK_AUTHORIZATION","LOGIN","LOGOUT","ActionCreator","setBasicAuth","CURRENT_USER","dispatchSuccess","takeEvery","INTL","DAEMON_STATUS","JOB_COUNT","PROCESSES","FORM","DOWNLOAD_PACKAGING","Buffer","statusText","loginPath","removeBasicAuth","module","exports","autoFocusEndDate","momentPropTypes","momentObj","DateRangePickerPhrases","omit","DateRangePickerShape","localeData","longDateFormat","DateRangePickerWrapper","GET_JOBS","GET_CONNECTIONS","SEARCH_JOBS","SEARCH_PROCESSES","UPDATE_GLOBAL_FILTERS","SET_FILTER_STATUS","FilterChip","editMode","setEditMode","newFilter","onDelete","ServerUsage","getAllAccounts","ConnectedServerUsage","serversUsage","UsageListing","mdiPercent","UsageEntry","debug","producers","removing","updating_groups","groups_update","creating","ops","group_users","group_subgroups","reports","licenses","base","execdashboard","FETCH_ENTITIES_REQUEST","FETCH_ENTITIES_SUCCESS","FETCH_ENTITIES_FAILURE","FETCH_ENTITIES_ALL_REQUEST","FETCH_ENTITIES_ALL_SUCCESS","FETCH_ENTITIES_ALL_FAILURE","SELECT_ENTITY","pop","CLEAR_SELECTED_ENTITY","UPDATE_FILTERS","DAEMON_STATUS_REQUEST","DAEMON_STATUS_SUCCESS","DAEMON_STATUS_FAILURE","processed","fetchedInvocation","PROCESS_QUERY","FETCH_INVOCATION_SUCCESS","FETCH_INVOCATION_FAILURE","REPLACE_INVOCATION","next","schema","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","ScheduleModal","setTab","processDetails","setProcessDetails","changeTab","ViewTabs","Documentation","ConnectedScheduleForm","ScheduleForm","derivedMonitor","enabled","monitor","setMonitor","t_min","t_hr","t_day","t_mon","t_wkd","sch_name","isNaN","n_state","isEmpty","rejector","sch_description","params_with_maybe_replvars","extractReplVars","pickBy","cleanUpReplVars","prefix","json","Groups","dense","disablePadding","button","primary","Users","currentActionLabel","shouldDisplayAction","emptyListMessage","renderUsersList","Events","UserChip","background","borderRadius","marginLeft","Chip","NotificationList","filteredUsers","buttonLabel","buttonIcon","Entity","user_owner","aliasStr","getBoundingClientRect","parent","parentNode","scrollTo","behavior","SelectedEntity","ActionsNamespace","disableActions","hasWrite","deleteRights","parseName","tail","parsed","fq","ConnectedEditNamespace","nestedNames","EditNamespace","canUpdateName","setDescription","ConnectedDeleteNamespace","DeleteNamespace","canDelete","terminator","mdiTrashCan","ActionsConstant","ConnectedEditConstant","EditConstant","mdiImageFilterCenterFocus","patchConstant","ActionsProcess","ConnectedNewSchedule","NewSchedule","EditProcessModal","ProcessEditor","saveProcessEdits","steps","step","Step","step_index","expressions","parseEvaluatableExpressions","exp","StepExpression","expression","exp_index","evaluate","process_name","evaluations","toSend","findFormPrototype","findFormEntry","ActionsForm","canWrite","ConnectedCopyForm","CopyForm","formName","SubmitButtonNoDirty","FormParameters","FieldsAndGroupsEditor","DataContext","FieldGroup","pointer","GroupInstance","canAdd","Field","newInstance","Value","packet","canRemove","idx","provided_field_name","ActionsAccount","getEntityType","CONNECTION_TYPES","SERVER","DATABASE","ConnectedEditConnection","EditConnection","setProtocols","ActionsRoot","ActionsPrototype","ActionsSchedule","ConnectedEditSchedule","EditSchedule","scheduleDetails","setScheduleDetails","schedules","splittedName","isEntityDeletable","ActionsCommon","displayDelete","ConnectedNewAlias","ConnectedEditAlias","NewAlias","original","EditAlias","splittedNamespace","handleEditSubmit","originalName","ConnectedDeleteEntity","clearSelected","DeleteEntity","PrivilegesModal","PrivilegesEditor","hasAlias","usePrivileges","editAliasParent","updating","setEditAliasParent","updatePrivilege","switchTab","PrivilegesList","is_group","updater","privilegeTypes","renderType","user_or_group","mdiAccount","setLoading","setUpdating","setData","resp","HeaderPageSwitch","arrayOf","UserLoader","loadUser","userName","useParams","ConnectedUserLoader","UserView","removeUser","useHistory","deleteUser","alert","ConnectedUserView","Privileges","grant","revoke","Privilege","capitalize","PrivilegesContainer","mapPrivileges","class_privileges","actual","str","UserGroups","removeFromGroups","setSelectedGroup","passed","group_name","mdiDeleteCircleOutline","UserGroupsContainer","EditUserGroups","addToGroups","closeModal","aria-labelledby","aria-describedby","GroupsList","onAdd","EditUserGroupsContainer","showAll","err","EditUserDetails","UserDetailsForm","EditUserDetailsContainer","submitResult","created","date_created","updated","date_updated","UserDatesBox","DateCreated","DateUpdated","mdiAccountPlus","parseDate","mdiAccountEdit","EditUserInfo","UserInfoForm","EditUserInfoContainer","formEndpoint","formproto","formdata","mapFormValues","submited","sendable_data","paddingTop","FieldSwitch","dict","EmailField","PhoneNumberField","notRequired","Field_Types","FieldComponent","getComponent","UserCard","endsWith","NoUserSelectedPage","min","confirmpassword","CreateNewUser","submitUserValues","operation","setOperation","exists","marginRight","CreateNewUserPage","NewUserGroups","existing","GroupsSelection","mdiAccountGroup","GroupCard","GroupView","removeGroup","deleteGroup","ConnectedGroupView","GroupLoader","loadGroup","groupName","ConnectedGroupLoader","GroupUsers","removeUsersFromGroup","setSelectedUser","GroupUsersContainer","EditGroupUsers","addUsersToGroup","mdiAccountMultiplePlus","UsersSelection","EditGroupUsersContainer","usersFetched","usersSubmitted","u","SubGroups","removeSubGroups","subgroup","SubGroupsContainer","EditSubGroups","updateGroup","GroupSelection","EditSubGroupsContainer","groupsFetched","subgroupsSubmitted","resolved","rejected","CreateNewGroup","submitGroupValues","CreateNewGroupPage","NoGroupSelectedPage","DBMS","toggleExpanded","isExpanded","setPath","changeState","autoExpanded","ConnectedDBMS","ServerList","Server","isActive","activePath","storedPath","ConnectedServer","DatabaseList","Database","ConnectedDatabase","BreadcrumbsTitle","renderBreadcrumbs","links","separator","previous","route","navigateTo","selectedLink","setActiveLevel","ConnectedBreadcrumbsTitle","ContentSwitch","renderPage","AllDbms","retrieveDBMSStatus","ConnectedAllDbms","allDbms","AllServers","retrieveServerStatus","ConnectedAllServers","ServerSettings","mdiSettings","EditServerContainer","EditServer","reloadAccounts","AllDatabases","retrieveDbBackup","retrieveDbStatus","mdiCheckboxMultipleBlankOutline","mdiShape","mdiHexagonSlice2","mdiLicense","ConnectedAllDatabases","DatabaseSettings","EditDatabaseContainer","EditDatabase","pr","mr","Workload","newTab","getJobsData","pageLevel","levelFilters","ConnectedWorkload","License","getLicenseData","ancestors","loadAllLicenses","setSelectedLicenses","selectedLicenses","newSelectedLicenses","compareReports","singleLicense","compareWithLatest","latestReport","selectedReport","comparable","showLicenseList","licenseReport","licenseList","setSelectedLicensesCallback","compareWithLatestCallback","licenseReportCallback","ConnectedLicense","LicenseList","hoveredLicenseUuid","setHoveredLicenseUuid","updateHoveredLicenseUuid","licenseUuid","onMouseEnter","onMouseLeave","l","mdiFileCompare","Report","getLicenseReport","reportOne","reportTwo","ownProps","ConnectedReport","FeaturesStatus","setSelectedIndex","newIndex","selectedIndex","renderSingleReport","FEATURES","TabPanel","valIndex","mdiCheckboxMarkedCircle","mdiCloseCircle","renderComparableReports","comparableFeatures","feature","other","hidden","FeaturesUsage","USED","USAGES","getFeatureValue","rep1","rep2","valueNode","needsExpansion","listRef","offsetHeight","flexDirection","paddingLeft","UnusedFeatures","UNUSED","Storage","storagePoints","storageDetails","setStorageItem","ConnectedStorage","Objects","getObjects","objectsData","objectDetails","setObjectsItem","ConnectedObjects","CellWithTooltip","rowRenderer","hover","sid","USERNAME","MACHINE","SID","LOGON_TIME","PROGRAM","TYPE","TableRenderer","noDataMessage","tableProps","Sessions","setSortBehavior","getSessionsData","ConnectedSessions","AddServerCard","AddNewServerContainer","AddNewServer","AddDatabaseCard","AddNewDatabaseContainer","AddNewDatabase","JobView","JobForm","loggedInAs","setEditable","deriveFormState","disabledFields","handleJobCreation","FormVerbs","getCurrentUserName","time_invoke","sendable","job_user","dateMoment","timeMoment","hour","minute","timestamp","when","noOutput","JobOutput","setOutput","outputs","outputType","monitoring","wantStatusColor","wantStatusIcon","warning","JobsSearchResults","ExecutiveDashboard","getExecutiveDashboard","dashboardType","PhysicalDashboard","nrSelected","SearchSection","toggleServer","isServerSelected","toggleSelected","ConnectedSearchSection","SwitchContent","EmptyContent","Dashboard","ConnectedDashboard","OptionsTile","secondaryColor","mdiStarCircleOutline","OptionsList","OptionItem","OptionsChart","strokeDasharray","allowDecimals","domain","ServerView","ConnectedServerView","UsedOptions","optionType","mdiCheck","mdiPlayCircle","VirtualDashboard","found","NoData","ToggleSelection","deselectAll","selectAll","ConnectedToggleSelection","chip","Hardware","poller","runPoller","pollInvocation","outputReponse","clearTimeout","renderModal","outputOpen","isProcessLoading","loadingPrototypes","loadingDatatypes","loadingAccounts","getAllPrototypes","getAllDatatypes","normalizeParameter","chooseField","ConnectedHardware","Software","loadingForms","getAllForms","mdiApplication","ConnectedSoftware","Packaging","lms_repo","formValues","isDownloadDisabled","sendEmail","isEmailDisabled","downloadFile","mdiArchiveArrowDownOutline","ConnectedPackaging","formatQuery","blobData","blob","Blob","blobURL","URL","webkitURL","createObjectURL","tempLink","setAttribute","click","revokeObjectURL","i18nMessages","en","general","header","provider","locale","basename","App","render","webpackContext","req","webpackContextResolve","__webpack_require__","code","partial","args"],"mappings":"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X,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASy1E,EAAeC,GACvB,IAAIv5E,EAAKw5E,EAAsBD,GAC/B,OAAOE,EAAoBz5E,GAE5B,SAASw5E,EAAsBD,GAC9B,IAAIE,EAAoB35E,EAAE+D,EAAK01E,GAAM,CACpC,IAAIh5E,EAAI,IAAIguC,MAAM,uBAAyBgrC,EAAM,KAEjD,MADAh5E,EAAEm5E,KAAO,mBACHn5E,EAEP,OAAOsD,EAAI01E,GAEZD,EAAephE,KAAO,WACrB,OAAOD,OAAOC,KAAKrU,IAEpBy1E,EAAevmC,QAAUymC,EACzBjoB,EAAOC,QAAU8nB,EACjBA,EAAet5E,GAAK,M,g3FCtQZW,EACAg5E,E,iFADAh5E,EAAQyM,QAAQzM,MAAMu8B,KAAK9vB,SAC3BusE,EAAU,oBAEhBvsE,QAAQzM,MAAQ,SAACqV,GACf,GAAuB,iBAAZA,IAAqD,IAA7BA,EAAQgN,OAAO22D,GAAlD,CADoC,2BAATC,EAAS,iCAATA,EAAS,kBAKpCj5E,EAAK,WAAL,GAAMqV,GAAN,OAAkB4jE,O","file":"js/app.6575f768cbc0e5ea3990.js","sourcesContent":["import React, { forwardRef, useMemo, useEffect } from 'react';\n\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\n\nimport { useField, useFormikContext } from 'formik';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport check from './field-level-validations';\n\nexport const Text = forwardRef(function Text(\n  { options, validate, defaultValue = '', value, required, reactToChange, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  const formikCtx = useFormikContext();\n\n  useEffect(() => {\n    // used to allow the \"\" (empty string) value\n    if (value === undefined || value === null) {\n      helpers.setValue(defaultValue);\n    } else {\n      helpers.setValue(value);\n    }\n    helpers.setTouched(false);\n\n    /**\n     * accepts a reaction function, ideally called when setValue is called.\n     * It should be used to update other known field names in reaction to this one changing.\n     */\n    reactToChange && reactToChange(value, formikCtx);\n  }, [value]);\n\n  useEffect(() => {\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  if (field.value === undefined) {\n    return <ParameterLoader>Mounting Field</ParameterLoader>;\n  }\n\n  if (options && options.length) {\n    const selected = options.find(o => o.value === field.value) ?? null;\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        value={selected}\n        getOptionLabel={option => option.label || field.value}\n        getOptionDisabled={option => option.disabled}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n\n          /**\n            only on Select option changes for now. Can be modified for generic text,\n            but should be done when needed.\n            onChange from '...field' can be decorated.\n           */\n          reactToChange && reactToChange(option.value, formikCtx);\n        }}\n        disabled={props.disabled}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n\nexport function Email(props) {\n  const validations = useMemo(() => check.merge(check.email, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"email\" />;\n}\n\nexport function PhoneNumber(props) {\n  const validations = useMemo(() => check.merge(check.phone, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} />;\n}\n/* TODO: fix Integer required validation checks. Investigate how Yup returns the validateSync for this particular instance */\nexport function Integer({ validate, ...props }) {\n  const validations = useMemo(() => check.merge(props.required ?? check.required_not_null), [\n    props.required,\n    validate\n  ]); // validate is given by the parameter normalizer.\n  // it should be a list of check keys. TODO: map to validation functions to merge\n\n  return <Text {...props} validate={validations} type=\"number\" />;\n}\n\nexport function Password(props) {\n  return <Text {...props} type=\"password\" />;\n}\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: true },\n  { label: 'False', value: false }\n];\n\nexport const BooleanSelect = forwardRef(function Boolean({ options, ...props }, ref) {\n  return <Text type=\"text\" value defaultValue {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nexport const Date = forwardRef(function Date(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  const value = field.value ? moment(field.value, 'MM/DD/YYYY') : moment();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          disablePast\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date.format('MM/DD/YYYY'))}\n        />\n        <FormHelperText>{meta.touched ? meta.error : null}</FormHelperText>\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Time = forwardRef(function Time(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  const value = field.value ? moment(field.value, 'hh-mm') : moment();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardTimePicker\n          disablePast\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"hh:mm\"\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date.format('hh-mm'))}\n          label={props.label}\n        />\n        <FormHelperText>{meta.touched ? meta.error : null}</FormHelperText>\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Select = forwardRef(function Select(\n  { options, validate, defaultValue, value, required, isNamespace, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue || '');\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  /**\n   * This should be moved to it's own thing.\n   * For now, it satisfies... :(((\n   */\n  if (options && options.length) {\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        getOptionSelected={option => option.value === field.value}\n        getOptionLabel={option => option.label || value || ''}\n        value={value}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              desription={undefined}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n","import defaultConstants from './constants';\n\nexport const CONSTANTS = defaultConstants;\n","import React from 'react';\nimport classnames from 'classnames';\nimport { mdiCheckDecagram, mdiAlertDecagram } from '@mdi/js';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { node, oneOf, bool } from 'prop-types';\n\nimport './Result.local.scss';\n\nconst icons_map = {\n  success: mdiCheckDecagram,\n  fail: mdiAlertDecagram\n};\n\nexport const Result = ({ children, type }) => {\n  return (\n    <div\n      className={classnames('result-display', {\n        [type]: type\n      })}\n    >\n      <div className=\"result-icon\">\n        <SvgIcon fontSize=\"inherit\">\n          <path d={icons_map[type] || mdiAlertDecagram} />\n        </SvgIcon>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  type: oneOf(['success', 'fail']),\n  children: node\n};\n\nexport const ResultText = ({ children, compact }) => (\n  <h2 className={classnames('result-text', { compact })}>{children}</h2>\n);\n\nResultText.propTypes = {\n  compact: bool,\n  children: node\n};\n\nexport const ResultMessages = ({ messages = [] }) => (\n  <div className=\"result-messages\">\n    {messages.map((msg, index) => (\n      <div className=\"message-entry\" key={index}>\n        <p>{msg?.text?.split?.('\\n')?.[0]}</p>\n      </div>\n    ))}\n  </div>\n);\n\nResultText.propTypes = {\n  children: node\n};\n\nResult.Text = ResultText;\nResult.Messages = ResultMessages;\n","export const LOAD_ALL_ACCOUNTS = 'LOAD_ALL_ACCOUNTS';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const LOAD_ALL_LICENSES = 'LOAD_ALL_LICENSES';\nexport const LICENSE_FULL_REPORT = 'LICENSE_FULL_REPORT';\nexport const LOAD_ALL_PROTOTYPES = 'LOAD_ALL_PROTOTYPES';\nexport const LOAD_ALL_DATATYPES = 'LOAD_ALL_DATATYPES';\nexport const LOAD_ALL_FORMS = 'LOAD_ALL_FORMS';\nexport const PROVIDE_SERVERS_USAGE = 'PROVIDE_SERVERS_USAGE';\nexport const LOAD_STORAGE_POINTS = 'LOAD_STORAGE_POINTS';\nexport const SET_STORAGE_NS = 'SET_STORAGE_NS';\nexport const LOAD_STORAGE_DETAILS = 'LOAD_STORAGE_DETAILS';\nexport const LOAD_OBJECT_DETAILS = 'LOAD_OBJECT_DETAILS';\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT';\nexport const LOAD_SESSIONS = 'LOAD_SESSIONS';\nexport const PROVIDE_DB_LAST_BACKUP = 'PROVIDE_DB_LAST_BACKUP';\nexport const PROVIDE_DB_STATUS = 'PROVIDE_DB_STATUS';\nexport const LOAD_PROTOCOLS = 'LOAD_PROTOCOLS';\n","import moment from 'moment';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_ACCOUNTS,\n  CHANGE_STATE,\n  LOAD_ALL_LICENSES,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_PROTOTYPES,\n  LOAD_ALL_DATATYPES,\n  LOAD_ALL_FORMS,\n  LOAD_SESSIONS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_STORAGE_POINTS,\n  SET_STORAGE_NS,\n  LOAD_STORAGE_DETAILS,\n  SET_SELECTED_OBJECT,\n  PROVIDE_SERVERS_USAGE,\n  LOAD_PROTOCOLS\n} from '../actions';\n\nexport function loadAllAccountsThunk(payload) {\n  return async (dispatch, getState) => {\n    dispatch(creators.loading(LOAD_ALL_ACCOUNTS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n        page_size: 2147483645\n      });\n\n      response.data.protocols = getState().explorer.protocols;\n\n      dispatch(creators.success(LOAD_ALL_ACCOUNTS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_ACCOUNTS, error));\n      return;\n    }\n\n    if (payload?.from === 'jobs' || payload?.from === 'collection') {\n      return;\n    }\n\n    if (payload?.from === 'dashboard') {\n      dispatch(provideServersUsageThunk());\n    } else {\n      dispatch(provideDBLastBackupThunks());\n      dispatch(provideDBStatusThunks());\n    }\n  };\n}\n\nexport function loadProtocolsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_PROTOCOLS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n      dispatch(creators.success(LOAD_PROTOCOLS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_PROTOCOLS, error));\n    }\n  };\n}\n\nexport function changeStateThunk(newState) {\n  return dispatch => {\n    dispatch(creators.action(CHANGE_STATE, newState));\n\n    return 'done';\n  };\n}\n\nexport function loadAllLicensesThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_LICENSES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n      dispatch(creators.success(LOAD_ALL_LICENSES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_LICENSES, error));\n    }\n  };\n}\n\nexport function getLicenseReportThunk(license) {\n  return async dispatch => {\n    dispatch(creators.loading(LICENSE_FULL_REPORT));\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${license.uuid}/display_license_full_report`\n      );\n      const report = response.data.data;\n      report.date_invoke = license.date_invoke;\n      dispatch(creators.success(LICENSE_FULL_REPORT, { [license.uuid]: report }));\n    } catch (error) {\n      dispatch(creators.fail(LICENSE_FULL_REPORT, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function getAllPrototypesThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_PROTOTYPES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOTYPES, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(LOAD_ALL_PROTOTYPES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_PROTOTYPES, error));\n    }\n    return 'done';\n  };\n}\n\nexport function getAllDatatypesThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_DATATYPES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DATATYPES, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(LOAD_ALL_DATATYPES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_DATATYPES, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function getAllFormsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_FORMS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.FORMS, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(LOAD_ALL_FORMS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_FORMS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.SESSIONS(filters.fullPath), {\n        page_size: filters.page_size\n      });\n      dispatch(creators.success(LOAD_SESSIONS, { data: response.data, sort: filters.sort }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadStorageDetailsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_DETAILS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_DF(filters.fullPath));\n      const data = response.data && response.data.length ? response.data : [];\n      dispatch(creators.success(LOAD_STORAGE_DETAILS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_DETAILS, error));\n    }\n  };\n}\n\nexport function setStorageItemThunk(ns) {\n  return creators.success(SET_STORAGE_NS, ns);\n}\n\nexport function loadStoragePointsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_POINTS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_TS, {\n        dbconn: filters.fullPath\n      });\n      const data = response.data || {};\n      dispatch(creators.success(LOAD_STORAGE_POINTS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_POINTS, error));\n    }\n  };\n}\n\nexport function loadObjectsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n    const objectApis = [\n      { name: 'triggers', path: '/object_trigger' },\n      { name: 'tables', path: '/object_table' },\n      { name: 'indexes', path: '/object_index' },\n      { name: 'procedures', path: '/object_procedure' },\n      { name: 'packages', path: '/object_package' },\n      { name: 'packageBodies', path: '/object_package_body' }\n    ];\n    try {\n      let allData = await Promise.allSettled(\n        objectApis.map(api =>\n          RestClient.get(`/system/explorer${api.path}`, {\n            dbms: filters.fullPath,\n            page_size: 2147483645\n          })\n        )\n      );\n      allData = objectApis.map((api, index) => {\n        return {\n          res: allData[index]?.value?.data,\n          name: api.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, allData));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function setSelectedObjectThunk(selected) {\n  return creators.success(SET_SELECTED_OBJECT, selected);\n}\n\nexport function provideServersUsageThunk() {\n  return async function serversUsage(dispatch, getState) {\n    let servers = [];\n\n    if (getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE')) {\n      servers = getState()\n        .explorer.structured.dbms.find(d => d.protocol === 'ORACLE')\n        .servers.slice();\n    }\n\n    async function loadUsagePerDb(server) {\n      const database = server.databases[0];\n      const response = await RestClient.get(`/system/explorer/${database.name}/cpu_load_server`);\n\n      const usage = parseFloat(response.data.HOST_CPU);\n\n      return {\n        dbms: database.protocol,\n        server: database.address,\n        usage\n      };\n    }\n\n    const usageResult = { servers: [] };\n\n    const allResults = await Promise.allSettled(\n      servers.map(server => {\n        return loadUsagePerDb(server);\n      })\n    );\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        usageResult.servers.push({\n          dbms: result.value.dbms,\n          address: result.value.server,\n          usage: result.value.usage || 0\n        });\n\n        return null;\n      });\n\n    usageResult.highLoadCount = usageResult.servers.filter(server => server.usage >= 75).length;\n\n    dispatch(creators.success(PROVIDE_SERVERS_USAGE, usageResult));\n\n    return usageResult;\n  };\n}\n\nexport function provideDBLastBackupThunks() {\n  return async function getDBLastBackup(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n\n    let servers = [];\n    let databases = [];\n\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    async function loadDBLastBackup(database) {\n      const dbms = database.name;\n      const shell = servers.find(\n        s => s.databases && s.databases.find(d => d.name === database.name)\n      )?.name;\n\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_LAST_BACKUP, {\n        dbms,\n        shell\n      });\n\n      return {\n        name: database.name,\n        backup: moment(response.data.backup).isValid()\n          ? moment(response.data.backup).format('DD.MM.YYYY')\n          : null\n      };\n    }\n\n    const dbLastBackup = [];\n\n    const allResults = await Promise.allSettled(databases.map(loadDBLastBackup));\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbLastBackup.push({\n          name: result.value.name,\n          backup: result.value.backup\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_LAST_BACKUP, dbLastBackup));\n\n    return dbLastBackup;\n  };\n}\n\nexport function provideDBStatusThunks() {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n\n    let servers = [];\n    let databases = [];\n\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    async function loadDBStatus(database) {\n      const dbms = database.name;\n      const shell = servers.find(\n        s => s.databases && s.databases.find(d => d.name === database.name)\n      )?.name;\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n        dbms,\n        shell\n      });\n\n      return {\n        name: database.name,\n        server: database.address,\n        dbms: database.protocol,\n        status: response.data.status?.toString().toLowerCase() || 'not-connected'\n      };\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(loadDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n","export const LOAD_ALL_GROUPS = 'LOAD_ALL_GROUPS';\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GRANT_PRIVILEGE = 'GRANT_GROUP_PRIVILEGE';\nexport const REVOKE_PRIVILEGE = 'REVOKE_GROUP_PRIVILEGE';\nexport const ADD_USERS_TO_GROUP = 'ADD_USERS_TO_GROUP';\nexport const REMOVE_USERS_FROM_GROUP = 'REMOVE_USERS_FROM_GROUP';\nexport const ADD_GROUPS_TO_GROUP = 'ADD_GROUPS_TO_GROUP';\nexport const REMOVE_GROUPS_FROM_GROUP = 'REMOVE_GROUPS_FROM_GROUP';\nexport const PATCH_SELECTED_GROUP = 'PATCH_SELECTED_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n","export const LOAD_ALL_USERS = 'LOAD_ALL_USERS';\nexport const SELECT_USER = 'SELECT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const REVOKE_PRIVILEGE = 'REVOKE_PRIVILEGE';\nexport const GRANT_PRIVILEGE = 'GRANT_PRIVILEGE';\n\nexport const ADD_USER_TO_GROUPS = 'ADD_USER_TO_GROUPS';\nexport const REMOVE_USER_FROM_GROUPS = 'REMOVE_USER_FROM_GROUPS';\nexport const DELETE_USER = 'DELETE_USER';\nexport const CREATE_USER = 'CREATE_USER';\n","import { jobsActions } from './jobs.action';\nimport { processActions } from './process.action';\nimport { globalFiltersActions } from './global-filters.action';\n\nexport const actions = {\n  ...jobsActions,\n  ...processActions,\n  ...globalFiltersActions,\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { ENTITY_TYPES_FETCH } from './selectors';\n\nexport function fetchEntities() {\n  return function thunk(dispatch) {\n    const promises = ENTITY_TYPES_FETCH.map(({ type, query }) => {\n      let url = `${type}`;\n      if (query) {\n        url = url.concat(`/${encodeURIComponent(query)}`);\n      }\n      const promise = RestClient.get(url, { page_size: 2147483645 });\n      dispatch({\n        type: 'FETCH_ENTITIES',\n        promise,\n        entityType: type\n      });\n      return promise;\n    });\n\n    dispatch({\n      type: 'FETCH_ENTITIES_ALL',\n      promise: promises\n    });\n  };\n}\n\nexport function fetchEntity(eType) {\n  const definition = ENTITY_TYPES_FETCH.find(desc => eType === desc.type);\n\n  if (!definition) {\n    return function notFound() {\n      console.warn('[fetchEntity] invalid entity type:', eType); // eslint-disable-line\n    };\n  }\n\n  return function thunk(dispatch) {\n    const promise = RestClient.get(\n      `${definition.type}${definition.query ? `/${definition.query}` : ''}?page_size=2147483645`\n    );\n\n    dispatch({\n      type: 'FETCH_ENTITIES',\n      promise,\n      entityType: definition.type\n    });\n\n    return promise;\n  };\n}\n\nexport function selectEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'SELECT_ENTITY'\n  };\n}\n\nexport function clearSelectedEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'CLEAR_SELECTED_ENTITY'\n  };\n}\n\nexport function setFilterType(value) {\n  return {\n    name: 'type',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function setFilterSearch(value) {\n  return {\n    name: 'search',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function openModal(name) {\n  return {\n    type: 'OPEN_ENTITIES_MODAL',\n    name\n  };\n}\n","import { sessionActions } from './session.action';\n\nexport const actions = {\n  ...sessionActions,\n};\n","export const InvocationStatus = {\n  NEW: '__NEW__',\n  ALL: '__ALL__',\n  NOT_FETCHED: 'NOT_FETCHED',\n  ABORTED: 'ABORTED',\n  SCHEDULED: 'SCHEDULED',\n  SUCCEEDED: 'SUCCEEDED',\n  FAILED: 'FAILED',\n  EXECUTING: 'EXECUTING',\n  DELAYED: 'DELAYED',\n  KILLED: 'KILLED'\n};\n\nexport const AllowOutputFor = [\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED,\n  InvocationStatus.FAILED,\n  InvocationStatus.SUCCEEDED,\n  InvocationStatus.EXECUTING\n];\n\nexport const AllowGeneralEditingFor = [InvocationStatus.NEW];\n\nexport const CannotShowStatusFor = [\n  InvocationStatus.NEW,\n  InvocationStatus.ALL,\n  InvocationStatus.NOT_FETCHED\n];\n\nexport const FAILURES = [\n  InvocationStatus.FAILED,\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED\n];\n\nexport const SUCESSES = [InvocationStatus.SUCCEEDED];\n\nexport const WARNINGS = [InvocationStatus.DELAYED, InvocationStatus.SCHEDULED];\n","import React, { useState, useCallback, useMemo, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport FormGroup from '@material-ui/core/FormGroup';\n\nimport { Checkbox } from '../../controls/Checkbox/Checkbox';\nimport { Text, Select } from './Generic';\n\nimport { Ensure } from 'core/components/Ensure/Ensure';\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport { useFormikContext } from 'formik';\n\nimport { formatAccount } from './formatters';\n\nimport check from './field-level-validations';\n\nexport const RSAKey = props => {\n  return <Text multiline {...props} />;\n};\n\nexport const FQName = props => {\n  return <Text multiline {...props} />;\n};\n\nexport function QualifiedName(props) {\n  const validations = useMemo(() => check.merge(check.masName, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"text\" />;\n}\n\n/**\n * TODO:\n * These should be retireved through a connection\n * Platforms are protocols associated for accounts\n * For now they can be hardcoded\n */\nexport const AccountSelect = ({ protocols = [], ...props }) => {\n  const [showUrls, setShowUrls] = useState(false);\n  const boxName = `${props.name}-show-urls`;\n\n  const showToggle = useCallback(e => {\n    setShowUrls(e.target.checked);\n  }, []);\n\n  return (\n    <Ensure type=\"account\" inlineLoader>\n      {({ data: accounts }) => {\n        let list = accounts;\n\n        if (protocols && protocols.length) {\n          list = accounts.filter(account => protocols.includes(account.protocol));\n        }\n\n        const options = list.map(account => ({\n          label: showUrls ? formatAccount(account) : account.name,\n          value: account.name\n        }));\n\n        /**\n          TODO: filter by protocol\n         */\n        if (protocols.length) {\n          accounts.filter(Boolean);\n        }\n\n        return (\n          <FormGroup>\n            <Text {...props} options={options} />\n            <Checkbox\n              size=\"small\"\n              id={boxName}\n              name={boxName}\n              onChange={showToggle}\n              disabled={props.disabled}\n              label=\"Show Account URLs\"\n            />\n          </FormGroup>\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const PLATFORMS = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'MariaDB', value: 'MariaDB', tester: /mariadb\\./ },\n  { label: 'MySQL', value: 'MySQL', tester: /mysql\\./ },\n  { label: 'Oracle', value: 'Oracle', tester: /oracle\\./ },\n  { label: 'PostgreSQL', value: 'PostgreSQL', tester: /pgsql\\./ },\n  {\n    label: 'Microsoft SQL Server',\n    value: 'Microsoft SQL Server',\n    tester: /microsoft\\.sqlserver\\./\n  },\n  { label: 'Oracle RDS', value: 'Oracle RDS', tester: /.rds\\.oracle\\./ }\n];\n\nexport const PlatformSelect = props => {\n  return <Text type=\"text\" value=\"All\" name=\"platform\" {...props} options={PLATFORMS} />;\n};\n\nexport const ProcessSelect = props => {\n  const { values } = useFormikContext();\n  const platformValue = values?.platform ?? '';\n\n  let platform = PLATFORMS[0];\n\n  if (platformValue) {\n    platform = PLATFORMS.find(p => p.value === platformValue);\n  }\n\n  return (\n    <Ensure type=\"namespace\" inlineLoader>\n      <Ensure type=\"process\" inlineLoader>\n        {({ data }) => {\n          let processes = data;\n\n          if (platform && platform.value !== 'all') {\n            processes = data.filter(process => platform.tester.test(process.name));\n          }\n\n          /** TODO, CHECK */\n          processes = processes.filter(process => {\n            if (processes.meta && process.meta.appearance) {\n              return process.meta.appearance !== 'Hidden';\n            }\n\n            return true;\n          });\n\n          const OPTIONS = processes.map(item => ({\n            value: item.name,\n            label: item.name,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n          return <Text type=\"text\" defaultValue=\"\" name=\"process\" {...props} options={OPTIONS} />;\n        }}\n      </Ensure>\n    </Ensure>\n  );\n};\n\nexport const NamespaceSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.namespace || '';\n\n  return (\n    <Ensure type=\"namespace\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading namespaces...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load namespaces.</ParameterLoader>;\n        }\n\n        let namespaces = data;\n\n        namespaces = namespaces.filter(namespace => {\n          if (namespace.meta && namespace.meta.appearance) {\n            return namespace.meta.appearance !== 'Hidden';\n          }\n\n          return true;\n        });\n\n        const OPTIONS = namespaces.map(item => ({\n          value: item.name,\n          label: item.name,\n          disabled: item.meta && item.meta.appearance === 'Greyed'\n        }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            name=\"namespace\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const FormPrototypeSelect = props => {\n  return (\n    <Ensure type=\"prototype\" inlineLoader>\n      {({ data: prototypes }) => {\n        const list = prototypes || [];\n\n        const options = list.map(prototype => ({\n          label: prototype.name,\n          value: prototype.name\n        }));\n\n        return <Text fullWidth {...props} description=\"\" options={options} />;\n      }}\n    </Ensure>\n  );\n};\n\nexport const ModeSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.mode || '';\n\n  return (\n    <Ensure type=\"type\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading type...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load types.</ParameterLoader>;\n        }\n\n        const modes = data.filter(type => type.name === 'mas0300.sys.account.privilege_mode')[0];\n\n        if (modes.meta && modes.meta.appearance === 'Hidden') {\n          return null;\n        }\n\n        const OPTIONS =\n          modes.enumerations &&\n          modes.enumerations.map(item => ({\n            value: item.label,\n            label: item.label,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            disabled={modes.meta && modes.meta.appearance === 'Greyed'}\n            name=\"process\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nfunction variadicListReducer(list, action) {\n  switch (action.type) {\n    case 'add_new_parameter':\n      return produce(list, draft => {\n        draft.push({ name: '', type: '', deflt: undefined, description: null, value: '' });\n      });\n\n    case 'remove_parameter':\n      return produce(list, draft => {\n        draft.shift();\n      });\n\n    default:\n      return list;\n  }\n}\n\nfunction useVariadicList(recieved) {\n  const [list, dispatch] = useReducer(variadicListReducer, recieved?.replvars || []);\n\n  return { list, dispatch };\n}\n\nexport const Variadic = ({ recieved, disabled }) => {\n  const { values } = useFormikContext();\n  const displayDeftlDesc = selectedProcess !== 'vendita.oracle.rdbms.cli.sqlplus.execute';\n\n  const { list, dispatch } = useVariadicList(recieved);\n\n  const selectedProcess = values.process;\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvars</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Ensure type=\"type\">\n          {({ data: datatypes }) => {\n            const options = datatypes\n              .filter(dataType => {\n                if (\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.script' ||\n                  selectedProcess === 'mas0300.os.svc.db.data.sql.query_import' ||\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.execute'\n                ) {\n                  return dataType.name === 'string' || dataType.name === 'integer';\n                }\n                return true;\n              })\n              .map(dataType => {\n                return {\n                  label: dataType.name,\n                  value: dataType.name\n                };\n              });\n\n            return (\n              <>\n                <div>\n                  {list.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <VariadicInstance\n                        data={item}\n                        index={index}\n                        defltDesc={displayDeftlDesc}\n                        types={options}\n                        disabled={disabled}\n                      />\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  }}\n                >\n                  {list.length > 0 && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        dispatch({ type: 'remove_parameter' });\n                      }}\n                      disabled={disabled}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                  <Button\n                    onClick={() => {\n                      dispatch({ type: 'add_new_parameter' });\n                    }}\n                    disabled={disabled}\n                  >\n                    Add\n                  </Button>\n                </div>\n              </>\n            );\n          }}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nfunction VariadicInstance({ data = {}, index, defltDesc, types, disabled }) {\n  const name_base = `replvar--${index}`;\n\n  let parsedDeflt = data.deflt;\n\n  if (data.deflt) {\n    parsedDeflt = data.deflt.replace(\"str('\\\"'\", '').replace(\"'\\\"')\", '');\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Name\"\n        type=\"text\"\n        name={`${name_base}--name`}\n        value={data.name}\n        disabled={disabled}\n        validate={check.merge(check.firstCharLetter, check.masName)}\n        required\n      />\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Type\"\n        type=\"text\"\n        name={`${name_base}--type`}\n        options={types}\n        value={data.type}\n        disabled={disabled}\n        required\n      />\n      {defltDesc && (\n        <>\n          <Text\n            style={{ marginBottom: '15px' }}\n            label=\"Deflt\"\n            type=\"text\"\n            name={`${name_base}--deflt`}\n            value={parsedDeflt}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n          <Text\n            style={{ marginBottom: '30px' }}\n            label=\"Description\"\n            type=\"text\"\n            name={`${name_base}--description`}\n            value={data.description}\n            defaultValue={null}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n        </>\n      )}\n      {!defltDesc && (\n        <Text\n          style={{ marginBottom: '15px' }}\n          label=\"Value\"\n          type=\"text\"\n          name={`${name_base}--value`}\n          value={data.value}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { bool, func, node, shape, object, string } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './AvatarCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nexport const AvatarCard = ({ label, avatar = {}, selected, data, onSelect, action, ...props }) => {\n  const focusable = {\n    ...(onSelect && {\n      onFocus: useCallback(\n        event => {\n          event.stopPropagation();\n          onSelect(data);\n        },\n        [onSelect, data]\n      ),\n      tabIndex: props.disabled ? -1 : 0\n    })\n  };\n\n  return (\n    <div\n      {...focusable}\n      className={classnames('avatar-card', { selected })}\n      data-qa={`avatar-card-of-${label}`}\n      {...props}\n    >\n      <Avatar className=\"card-avatar\" alt={label} src={avatar.src}>\n        {avatar.initial || avatar.fallback}\n      </Avatar>\n      <span className=\"card-label\">{label}</span>\n      {action && (\n        <span onClick={containEvent} className=\"action-slot\">\n          {action}\n        </span>\n      )}\n    </div>\n  );\n};\n\nfunction containEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nAvatarCard.propTypes = {\n  label: node,\n  selected: bool,\n  disabled: bool,\n  avatar: shape({\n    src: string,\n    fallback: node\n  }),\n  data: object,\n  onSelect: func,\n  action: node\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.shared;\n\nexport const jobsSelector = createSelector(localState, state => state.get('jobs'));\n\nexport const connectionsSelector = createSelector(localState, state => state.get('connections'));\n\nexport const jobsSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('jobs')\n); // eslint-disable-line\n\nexport const processesSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('processes')\n); // eslint-disable-line\n\nexport const globalFiltersSelector = createSelector(localState, state =>\n  state.get('globalFilters')\n); // eslint-disable-line\n","import * as Yup from 'yup';\n\nexport const mergeValidations = (...callbacks) => value => {\n  let error;\n\n  callbacks.forEach(provided => {\n    if (provided && typeof provided === 'function') {\n      error = provided(value);\n    }\n  });\n\n  return error;\n};\n\nexport const checkRequired = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .required('Field is required')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkRequiredNotNullable = value => {\n  try {\n    Yup.string()\n      .required('Field is required')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkEmail = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .email('Invalid email format.')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkPhoneNumber = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      })\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUnsignedInt = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .matches(/^[-]!$/, {\n        excludeEmptyString: true,\n        message: 'The parameter must be unsigned.'\n      })\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkName = value => {\n  if (!/^(?:[a-z_][a-z0-9_\\\\.]*)$/i.test(value) || (value && value.substr(-1) === '.')) {\n    return 'A valid MAS relative name is required.';\n  }\n};\n\nexport const checkFirstLetter = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .matches(/^[a-zA-Z].*/, {\n        excludeEmptyString: true,\n        message: 'First character must be a letter'\n      })\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const noop = () => {};\n\nexport default {\n  merge: mergeValidations,\n  required: checkRequired,\n  required_not_null: checkRequiredNotNullable,\n  email: checkEmail,\n  phone: checkPhoneNumber,\n  unsigned_int: checkUnsignedInt,\n  unsigned_float: noop,\n  signed_float: noop,\n  masName: checkName,\n  firstCharLetter: checkFirstLetter\n};\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButton = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating, dirty } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={!dirty || isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","// function Node(payload) {\n//   const data = payload;\n//   const edges = [];\n\n//   return {\n//     getEdges() {\n//       return edges;\n//     },\n//     getData() {\n//       return data;\n//     },\n//     addEdge(edge) {\n//       edges.push(edge);\n//       return edges;\n//     }\n//   };\n// }\n\nimport _ from 'lodash';\nimport { createSelector } from 'reselect';\n\nfunction pipe(...fns) {\n  return arg => fns.reduce((prev, fn) => fn(prev), arg);\n}\n\nfunction filterBy(selector, equalityFn, value) {\n  return data => {\n    if (value) {\n      return data.filter(el => equalityFn(selector(el), value));\n    }\n\n    return data;\n  };\n}\n\nexport function retrieveFilteredAccounts(protocol, server) {\n  return state => {\n    const { accounts } = state.explorer;\n\n    const filterByProtocol = filterBy(\n      el => (el.nodes[0] ? el.nodes[0].protocol : ''),\n      (stateValue, currentValue) => stateValue === currentValue,\n      protocol\n    );\n\n    const filterByServer = filterBy(\n      el => Object.keys(el.servers),\n      (servers, currentServer) => servers.includes(currentServer),\n      server\n    );\n\n    return pipe(filterByProtocol, filterByServer)(accounts);\n  };\n}\n\nexport function retrieveServerEntry({ protocol, address }, structure) {\n  const dbms = structure.dbms.find(entry => entry.protocol === protocol);\n  return dbms && dbms.servers.find(server => server.address === address);\n}\n\nexport function retrieveDatabaseEntry({ database, protocol, address }, structure) {\n  const server = retrieveServerEntry({ protocol, address }, structure);\n\n  return server.databases.find(db => db.special.database === database);\n}\n\nconst getStatePath = state => state.explorer.state.path;\nconst getStructured = state => state.explorer.structured.dbms;\nconst getSessions = state => state.explorer.sessions;\nconst getSessionsFlags = state => state.explorer.flags.sessions;\nconst getStoragePointsLoadingFlag = state => state.explorer.flags.storage.loadingPoints;\nconst getStorageDetailsLoadingFlag = state => state.explorer.flags.storage.loadingDetails;\nconst getStoragePoints = state => state.explorer.storage.points;\nconst getStorageDetails = state => state.explorer.storage.details;\nconst getSelectedStorage = state => state.explorer.storage.selected;\nconst getSelectedObject = state => state.explorer.objects.selectedObject;\nconst getSelectedOwner = state => state.explorer.objects.selectedOwner;\nconst getAllObjects = state => state.explorer.objects;\nconst getObjectsLoadingFlag = state => state.explorer.flags.objects.loading;\n\nexport const getFullPath = createSelector([getStatePath, getStructured], (fullPath, dbms) => {\n  const pathArr = fullPath.split('--');\n  return dbms\n    .find(({ path }) => path === pathArr[0])\n    ?.servers.find(({ address }) => address === pathArr[1])\n    ?.databases.find(({ special }) => special.database === pathArr[2])?.name;\n});\n\nexport const getFormattedStorage = createSelector(\n  [getStoragePoints, getStoragePointsLoadingFlag],\n  (points, isLoading) => {\n    if (isLoading || !_.isArray(points)) {\n      return [];\n    }\n    const factor = 1024;\n    return points.map(point => {\n      let usage = (point.Used_MB / point.Total_MB) * 100;\n      if (usage < 0) {\n        usage = 0;\n      }\n      return {\n        ns: point.Tablespace,\n        freePerc: point['Pct._Free'],\n        freeGB: point.Free_MB / factor,\n        totalGB: point.Total_MB / factor,\n        usedGB: point.Used_MB / factor,\n        usage\n      };\n    });\n  }\n);\n\nexport const getStorageDetailsData = createSelector(\n  [getStorageDetails, getFormattedStorage, getStorageDetailsLoadingFlag, getSelectedStorage],\n  (details, list, isLoading, selectedNS) => {\n    if (isLoading || !_.isArray(details)) {\n      return {\n        tablespace: {},\n        files: []\n      };\n    }\n    return {\n      tablespace: list.find(({ ns }) => ns === selectedNS),\n      files: details.filter(({ TABLESPACE_NAME }) => TABLESPACE_NAME === selectedNS)\n    };\n  }\n);\n\nexport const getStructuredObjects = createSelector(\n  [getAllObjects, getObjectsLoadingFlag],\n  (objects, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const tree = Object.keys(objects).reduce((acc, key) => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          if (acc[object.OWNER] && !acc[object.OWNER].includes(key)) {\n            acc[object.OWNER].push(key);\n          } else {\n            acc[object.OWNER] = [key];\n          }\n        });\n      return acc;\n    }, []);\n    return Object.keys(tree).map(key => ({ owner: key, objects: tree[key] }));\n  }\n);\n\nexport const getInvalidObjects = createSelector(\n  [getAllObjects, getObjectsLoadingFlag],\n  (objects, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const invalidObjects = [];\n    Object.keys(objects).forEach(key => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          const included = invalidObjects.findIndex(\n            ({ owner, object: name }) => owner === object?.OWNER && name === key\n          );\n          if (object && object.STATUS !== 'VALID' && included === -1) {\n            invalidObjects.push({ owner: object.OWNER, object: key });\n          }\n        });\n    });\n    return invalidObjects;\n  }\n);\n\nexport const getSelectedObjectData = createSelector(\n  [getSelectedObject, getSelectedOwner, getAllObjects],\n  (object, owner, objects) => {\n    if (!object || !owner || !_.isObject(objects) || !_.isArray(objects[object])) {\n      return [];\n    }\n    return objects[object].filter(({ OWNER }) => OWNER === owner);\n  }\n);\n\nexport const getSortedSessions = createSelector(\n  [getSessions, getSessionsFlags],\n  (sessions, { loading, sort }) => {\n    if (loading || !_.isArray(sessions)) {\n      return [];\n    }\n    if (sort === undefined) {\n      return sessions;\n    }\n    let sortFunction;\n    // Backend doesn't support sorting at this time. Consider moving sort to backend though\n    if (sort.order === 'asc') {\n      sortFunction = (a, b) => {\n        return new Date(a[sort.sortKey]).getTime() - new Date(b[sort.sortKey]).getTime();\n      };\n    } else {\n      sortFunction = (a, b) => {\n        return new Date(b[sort.sortKey]).getTime() - new Date(a[sort.sortKey]).getTime();\n      };\n    }\n    return sessions.slice().sort(sortFunction);\n  }\n);\n\nexport const getBackup = (database, backups) => {\n  const backup = backups.find(db => db.name === database.name)?.backup;\n\n  return backup;\n};\n\nexport const getDBStatus = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n\n  return status;\n};\n\nconst STATUS_TYPES = {\n  down: 'down',\n  up: 'up',\n  error: 'error'\n};\n\nexport const getDBMSStatus = (dbms, statuses) => {\n  if (dbms.name !== 'ORACLE') return 'not-connected';\n  if (statuses.length === 0) return 'not-connected';\n\n  const allStatuses = {};\n\n  statuses.forEach(function findStatus(entry) {\n    allStatuses[entry.status] = true;\n  });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n\nexport const getServerStatus = (server, statuses) => {\n  const allStatuses = {};\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n","import React, { useState, useCallback } from 'react';\n\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { array, func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SearchableList.local.scss';\n\nexport const SearchableList = ({ items, children, filter, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const [query, setQuery] = useState('');\n  const filtered = items.filter(item => filter(item, query));\n\n  return (\n    <>\n      <div className=\"search-input-slot\">\n        <SimpleSearchInput\n          data-qa=\"users-search-input\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled,\n          [variant]: variant\n        })}\n      >\n        <ul\n          className={classnames('list', {\n            [variant]: variant\n          })}\n          onWheel={onWheel}\n        >\n          {filtered.map((item, index, list) => (\n            <li key={index} className=\"list-item\">\n              {children(item, index, list)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nSearchableList.propTypes = {\n  items: array,\n  children: func,\n  filter: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nSearchableList.defaultProps = {\n  items: [],\n  filter: (item, query) => item === query\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  DELETE_USER,\n  CREATE_USER\n} from '../actions';\n\nexport function loadAllUsersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_USERS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS);\n      dispatch(creators.success(LOAD_ALL_USERS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_USERS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadUserThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USER, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USER, error));\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(GRANT_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(REVOKE_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function addUserToGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/grant`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, error));\n\n      return error;\n    }\n  };\n}\n\nexport function removeUserFromGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, error));\n    }\n  };\n}\n\nexport function removeUserThunk(user) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_USER, user));\n\n    try {\n      // TODO: test if data returned from request is all the new users from the new list.\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`);\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS);\n      dispatch(creators.success(DELETE_USER, allUsers.data));\n\n      return allUsers.data;\n    } catch (error) {\n      dispatch(creators.fail(DELETE_USER, error));\n\n      return error.data;\n    }\n  };\n}\n\nexport function createUserThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.username,\n      password: values.password,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_USER, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS);\n      dispatch(creators.success(LOAD_ALL_USERS, refreshed.data));\n\n      dispatch(creators.success(CREATE_USER));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_USER, error));\n\n      return error;\n    }\n  };\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport function loadAllGroupsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_GROUPS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS);\n      dispatch(creators.success(LOAD_ALL_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_GROUPS, error.data));\n\n      return error.data;\n    }\n  };\n}\n\nexport function loadGroupThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_GROUP, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${name}`);\n      dispatch(creators.success(LOAD_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_GROUP, error.data));\n    }\n  };\n}\n\nexport function createGroupThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.groupname,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_GROUP, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS);\n      dispatch(creators.success(LOAD_ALL_GROUPS, refreshed.data));\n\n      dispatch(creators.success(CREATE_GROUP));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_GROUP, error));\n\n      return error;\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(GRANT_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(REVOKE_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function removeUsersFromGroupThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_USERS_FROM_GROUP, params));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`, {\n        groups: [params.group]\n      });\n\n      const group = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(REMOVE_USERS_FROM_GROUP, group.data));\n    } catch (error) {\n      dispatch(creators.fail(REMOVE_USERS_FROM_GROUP, error));\n    }\n  };\n}\n\nexport function removeSubGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_GROUPS_FROM_GROUP, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(REMOVE_GROUPS_FROM_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REMOVE_GROUPS_FROM_GROUP, error));\n    }\n  };\n}\n\nexport function addUsersToGroupThunk(params) {\n  return async dispatch => {\n    const { group, users } = params;\n\n    dispatch(creators.loading(ADD_USERS_TO_GROUP, params));\n\n    try {\n      await Promise.all(\n        users.map(async user => {\n          return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant`, {\n            groups: [group]\n          });\n        })\n      );\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(ADD_USERS_TO_GROUP, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(ADD_USERS_TO_GROUP, error.data));\n      return error.data;\n    }\n  };\n}\n\nexport function removeGroupThunk(group) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_GROUP, group));\n\n    try {\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}`);\n      dispatch(creators.success(DELETE_GROUP));\n\n      dispatch(loadAllGroupsThunk());\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DELETE_GROUP, error));\n\n      return error.data;\n    }\n  };\n}\n","import { createSelector } from 'reselect';\n\nexport const getQuery = createSelector(\n  state => state.invocation_viewer.query,\n  query => query\n);\n\nexport const getInvocation = createSelector(\n  state => state.invocation_viewer.invocation,\n  invocation => invocation\n);\n\nexport const getInvocationStatus = createSelector(getInvocation, invocation => invocation.status);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../../entities/actions';\nimport { entitySelectors } from '../../../entities/selectors';\n\nimport { Loader, ParameterLoader } from 'shared/components/loaders';\nimport { Center } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nexport const Ensure = connect(\n  (state, { type }) => {\n    const selector = entitySelectors[type];\n\n    return selector(state);\n  },\n  {\n    request: fetchEntity\n  }\n)(Ensurer);\n\nfunction Ensurer({ children, fresh, pipe = false, type, inlineLoader, data, status, request }) {\n  useEffect(() => {\n    if (status === 'fetching') return;\n    if (status === 'fetching') return;\n\n    if (status === 'fetched' && !fresh) return;\n\n    request(type);\n  }, []);\n\n  if (!status) {\n    return null;\n  }\n\n  if (status === 'fetching' && !pipe) {\n    const Loading = inlineLoader ? ParameterLoader : Loader;\n\n    return (\n      <Center>\n        <Loading>Loading {type}...</Loading>\n      </Center>\n    );\n  }\n\n  if (status === 'failed' && !pipe) {\n    return (\n      <Result type=\"fail\">\n        <Result.Text>Could not fetch {type} data!</Result.Text>\n      </Result>\n    );\n  }\n\n  if (typeof children === 'function') {\n    return <>{children({ status, data, request: () => request(type) })}</>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Ensure;\n","export function hasWritePrivileges(entity) {\n  return entity?.privileges?.effective?.includes?.('write');\n}\n","import { createSelector } from 'reselect';\n\nexport const ENTITY_TYPES = [\n  {\n    type: 'account',\n    title: 'CONNECTION',\n    dataEnclosure: 'accounts',\n    query: '*'\n  },\n  {\n    type: 'constant',\n    title: 'CONSTANT',\n    dataEnclosure: 'constants',\n    query: '*'\n  },\n  {\n    type: 'exception',\n    title: 'EXCEPTION',\n    dataEnclosure: 'exceptions',\n    query: '*'\n  },\n  {\n    type: 'form',\n    query: '*',\n    title: 'FORM',\n    dataEnclosure: 'forms',\n    query: '*'\n  },\n  {\n    type: 'namespace',\n    title: 'NAMESPACE',\n    query: '*',\n    dataEnclosure: 'namespaces'\n  },\n  {\n    type: 'process',\n    query: '*',\n    title: 'PROCESS',\n    dataEnclosure: 'processes'\n  },\n  {\n    type: 'prototype',\n    query: '*',\n    title: 'PROTOTYPE',\n    dataEnclosure: 'prototypes'\n  },\n  {\n    type: 'schedule',\n    title: 'SCHEDULE',\n    dataEnclosure: 'schedules',\n    query: '*'\n  },\n  {\n    type: 'type',\n    query: '*',\n    title: 'TYPE',\n    dataEnclosure: 'data_types'\n  }\n];\n\nexport const ENTITY_TYPES_FETCH = ENTITY_TYPES.concat({\n  type: 'alias'\n});\n\nconst ROOT_ENTITY = {\n  name: 'root',\n  entity: 'root',\n  description: 'Main container for all of the entities within MAS.'\n};\n\nexport const getBreadcrumbs = state => state.entities.breadcrumbs;\n\nfunction collectData(data, { type, dataEnclosure }, namespacesWithMeta) {\n  let collection = data[type]?.data?.data?.[dataEnclosure];\n\n  if (collection) {\n    const aliases = data.alias?.data?.data.aliases\n      .filter(item => item.alias_type === type)\n      .map(item => {\n        const { entity, alias, alias_type, ...props } = item;\n\n        /**\n         * Merging properties that the alias does not have,\n         * with properties the entity it aliases, has.\n         * Will avoid having to reconcile this at the usage level.\n         * And keep aliases viewable here.\n         */\n        const aliasedEntity = data[type]?.data?.data[dataEnclosure].find(e => e.name === alias);\n\n        return { ...(aliasedEntity && aliasedEntity), alias, ...props, entity: alias_type };\n      });\n\n    if (aliases) {\n      /** Concat the aliases for this collection with the collection itself */\n      collection = data[type]?.data?.data[dataEnclosure].concat(aliases);\n    }\n\n    /* filter out colllection items where appearance meta is hidden */\n\n    /** FIXME:\n     *  what about aliases ? If their aliasing root entity would have meta apearance hidden, should it as well ?\n     *  */\n    if (Array.isArray(namespacesWithMeta)) {\n      collection = collection.reduce((acc, dataItem) => {\n        const ownNamespace = namespacesWithMeta.find(ns => dataItem.name.startsWith(ns.name));\n\n        if (ownNamespace) {\n          if (ownNamespace?.meta?.appearance === 'Hidden') {\n            return acc;\n          }\n\n          return acc.concat([\n            {\n              ...dataItem,\n              meta: {\n                ...dataItem.meta,\n                ...ownNamespace.meta\n              }\n            }\n          ]);\n        }\n\n        return acc.concat(dataItem);\n      }, []);\n    }\n  }\n\n  return collection;\n}\n\nexport const entitySelectors = ENTITY_TYPES.reduce((selectors, def) => {\n  selectors[def.type] = createSelector(\n    state => state.entities.data,\n    state => state.entities.fetch_status,\n    state => namespaceWithMetaSelector(state),\n    (data, status, namespacesWithMeta) => {\n      return {\n        data: collectData(data, def, namespacesWithMeta),\n        status: status?.[def.type]\n      };\n    }\n  );\n\n  return selectors;\n}, {});\n\nexport const namespaceWithMetaSelector = createSelector(\n  state => state.entities.data,\n  data => {\n    const dataNamespaces = data.namespace?.data?.data?.namespaces;\n    if (Array.isArray(dataNamespaces)) {\n      return dataNamespaces.filter(\n        item => item.meta && item.meta.appearance && item.meta.appearance !== 'Normal'\n      );\n    }\n    return [];\n  }\n);\n\nexport const getFilteredEntities = createSelector(\n  state => state.entities.data,\n  state => state.entities.filters,\n  state => namespaceWithMetaSelector(state),\n  (data, filters, namespacesWithMeta) => {\n    const types =\n      filters.type === 'all'\n        ? ENTITY_TYPES\n        : ENTITY_TYPES.filter(type => type.type === filters.type || type.type === 'namespace');\n    return types\n      .reduce((accumulator, type) => {\n        return accumulator.concat(collectData(data, type, namespacesWithMeta));\n      }, [])\n      .filter(Boolean);\n  }\n);\n\nexport const getEntitiesAsHashMap = createSelector(\n  getFilteredEntities,\n  state => state.entities.filters,\n  (entities, filters) => {\n    let filteredEntities = entities;\n    if (filters.type !== 'all' && filters.type !== 'namespace') {\n      filteredEntities = entities.filter(item => item.entity !== 'namespace');\n    }\n    if (filters.search) {\n      filteredEntities = filteredEntities.filter(item => {\n        if (filters.type !== 'all' && filters.type !== 'namespace') {\n          const domainArray = item.name.split('.');\n          const shortName = domainArray[domainArray.length - 1];\n          return shortName.includes(filters.search);\n        }\n        return item.name.includes(filters.search);\n      });\n    }\n    return filteredEntities.reduce((accumulator, entity) => {\n      const paths = entity.name.includes('.') ? entity.name.split('.') : [];\n      paths.forEach((path, index) => {\n        const key = paths.slice(0, index).join('.');\n        if (!accumulator[key]) {\n          const findEntity = entities.find(item => item.name === key);\n          accumulator[key] = findEntity || {\n            name: key,\n            notPersisted: true\n          };\n        }\n      });\n      accumulator[entity.name] = entity;\n\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const getEntities = createSelector(\n  getBreadcrumbs,\n  getEntitiesAsHashMap,\n  (breadcrumbs, entitiesMap) => {\n    const entities = Object.values(entitiesMap);\n    const roots = Object.keys(entitiesMap)\n      .filter((entityName, index, names) => {\n        return (\n          !entityName.includes('.') &&\n          (names.find(name => name.startsWith(`${entityName}.`)) ||\n            entitiesMap[entityName].entity === 'namespace')\n        );\n      })\n      .map(key => ({\n        ...entitiesMap[key],\n        isSelected: breadcrumbs.includes(entitiesMap[key].name)\n      }));\n    const columns = breadcrumbs.map((breadcrumb, index) => {\n      return {\n        level: index,\n        path: index === 0 ? '.' : breadcrumbs.slice(0, index).join('.'),\n        rows: []\n      };\n    });\n    columns.push({\n      level: breadcrumbs.length,\n      path: `${breadcrumbs.join('.')}.`,\n      rows: []\n    });\n\n    return entities.reduce((accumulator, entity) => {\n      const path = entity.name.split('.');\n      if (accumulator.length < path.length) {\n        return accumulator;\n      }\n      const bucket = accumulator[path.length - 1];\n      if (!bucket) {\n        return accumulator;\n      }\n      if (bucket.path === '.') {\n        bucket.rows = roots;\n        return accumulator;\n      }\n\n      if (!entity.name.startsWith(bucket.path)) {\n        return accumulator;\n      }\n      const name = entity.name.replace(bucket.path, '').replace('.', '');\n      const entityLevel = entity.name.split('.').length - 1;\n      bucket.rows.push({\n        ...entity,\n        name,\n        isSelected: breadcrumbs[entityLevel] ? breadcrumbs[entityLevel] === name : false\n      });\n\n      return accumulator;\n    }, columns);\n  }\n);\n\nexport const getSelectedEntity = createSelector(\n  getEntitiesAsHashMap,\n  getBreadcrumbs,\n  (entities, breadcrumbs) => {\n    const path = breadcrumbs.join('.');\n    const entity = entities[path];\n    return entity?.notPersisted ? ROOT_ENTITY : entity;\n  }\n);\n\nexport const namespaceChildrenListSelector = createSelector(\n  getSelectedEntity,\n  getEntitiesAsHashMap,\n  (selectedEntity, entities) => {\n    const list = Object.keys(entities);\n    const namespace = `${selectedEntity.name}.`;\n\n    return list.filter(name => name.startsWith(namespace) && name !== namespace);\n  }\n);\n","export const PROVIDE_EXECUTIVE_DASHBOARD = 'PROVIDE_EXECUTIVE_DASHBOARD';\n\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const TOGGLE_SERVER = 'TOGGLE_SERVER';\n","import React from 'react';\n\nimport { Text, Email, Integer, Password, PhoneNumber, BooleanSelect } from '../editors/Generic';\nimport { ProcessSelect, AccountSelect, RSAKey, FQName, Variadic } from '../editors/Custom';\n\nfunction extractParameter({ parameter, recieved, ...others }) {\n  const { type, ...additional } = parameter.editor;\n\n  return {\n    key: parameter.name,\n    label: parameter.label || parameter.name,\n    name: parameter.field_name || parameter.name,\n    required: parameter.is_required,\n    defaultValue: parameter.deflt || parameter.value,\n    description: parameter.description,\n    ...additional,\n    ...others\n  };\n}\n\nexport const TextParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Text {...passable} />;\n};\n\nexport const PasswordParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Password {...passable} />;\n};\n\nexport const PhoneNumberParameter = props => {\n  const passable = extractParameter(props);\n\n  return <PhoneNumber {...passable} />;\n};\n\nexport const BooleanParameter = props => {\n  const passable = extractParameter(props);\n\n  return <BooleanSelect {...passable} />;\n};\n\nexport const IntegerParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Integer {...passable} />;\n};\n\nexport const EmailParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Email {...passable} />;\n};\n\nexport const ProcessParameter = props => {\n  const passable = extractParameter(props);\n\n  return <ProcessSelect {...passable} />;\n};\n\nexport const AccountParameter = props => {\n  const passable = extractParameter(props);\n\n  return <AccountSelect protocols={[]} {...passable} />;\n};\n\nexport const VariadicParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Variadic recieved={props.recieved} {...passable} />;\n};\n\nexport const FQNameParameter = props => {\n  const passable = extractParameter(props);\n\n  return <FQName {...passable} />;\n};\n\nexport const RSAKeyParameter = props => {\n  const passable = extractParameter(props);\n\n  return <RSAKey {...passable} />;\n};\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, tabs } = this.props;\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={tabs.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func,\n  tabs: array\n};\n\nNavigationTab.defaultProps = {\n  tabs: []\n};\n\nexport default NavigationTab;\n","import * as Yup from 'yup';\n\nexport function getInitialValues(parameters) {\n  const initialValues = {};\n\n  parameters.map(parameter => {\n    initialValues[parameter.name] = parameter.deflt !== null ? parameter.deflt : '';\n    return null;\n  });\n\n  return initialValues;\n}\n\nexport function getValidationSchema(parameters) {\n  const validationSchema = {};\n\n  parameters.map(parameter => {\n    validationSchema[parameter.name] = Yup.string();\n\n    if (parameter.is_required) {\n      validationSchema[parameter.name].required('A value is required');\n    }\n\n    return null;\n  });\n}\n\nexport function formatParameters(values) {\n  const parameters = {};\n\n  Object.keys(values).map(value => {\n    if (typeof values[value] === 'string') {\n      if (values[value].length > 0 || values[value].trim()) {\n        parameters[value] = values[value];\n      }\n    } else if (typeof values[value] === 'object') {\n      if (values[value].name && (values[value].name.length > 0 || values[value].name.trim())) {\n        parameters[value] = values[value].name;\n      }\n    }\n\n    return null;\n  });\n\n  return parameters;\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchProtocols() {\n  try {\n    const { data } = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n    return { result: data.result, protocols: data.data.protocols };\n  } catch (e) {\n    return { result: 'fail', protocols: [] };\n  }\n}\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick } = this.props;\n    const data = [\n      { label: 'Workload', value: 'workload' },\n      { label: 'Sessions', value: 'sessions' },\n      { label: 'Objects', value: 'objects' },\n      { label: 'Storage', value: 'storage' },\n      { label: 'License reporting', value: 'license' }\n    ];\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={data.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {data.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func\n};\n\nexport default NavigationTab;\n","import React, { createContext, useContext } from 'react';\n\nconst Context = createContext();\n\nexport default function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nSwitch.Case = Case;\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './simple-search-input.local.scss';\n\nexport const SimpleSearchInput = ({ value, onChange, ...props }) => {\n  return (\n    <div className=\"search-input\">\n      <i className=\"search-icon-slot\">\n        <SearchIcon fontSize=\"default\" />\n      </i>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"search-input-control\"\n        placeholder=\"Search\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nSimpleSearchInput.propTypes = {\n  value: string,\n  onChange: func\n};\n\nexport default SimpleSearchInput;\n","import React from 'react';\nimport { Switch } from 'shared/components';\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { useFormikContext } from 'formik';\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { chunk } from 'lodash';\n\n/** accepts recived parameters for invocations that are already scheduled */\nexport const ProcessParameters = ({ recieved = {}, editable }) => {\n  const { values } = useFormikContext();\n\n  /**\n   * Returns a parameter list from a given list of parameters, and a Process name\n   * This could be turned into a connected component that can take the processes from entities for itself.\n   * */\n  function selectParametersForProcess(processName, processes) {\n    const process = processes.find(item => item.name === processName);\n\n    if (process) {\n      return process.parameters.map(p => ({ ...p, value: recieved[p.name], disabled: !editable }));\n    }\n    return [];\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Parameters</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Switch value={!!values.process}>\n          <Switch.Case value={false}>\n            <Column xs={12}>\n              <p>Select a process to edit parameters</p>\n            </Column>\n          </Switch.Case>\n          <Switch.Case value>\n            <Ensure type=\"form\">\n              {({ data: forms }) => (\n                <Ensure type=\"type\">\n                  {({ data: datatypes }) => (\n                    <Ensure type=\"prototype\">\n                      {({ data: prototypes }) => (\n                        <Ensure type=\"process\">\n                          {({ data }) => {\n                            const parameters = selectParametersForProcess(values.process, data);\n\n                            const normalized = parameters.map(parameter => {\n                              return normalize(parameter, datatypes, prototypes, forms);\n                            });\n\n                            /*  << +- 1 of '/' to toggle\n                            const notSupported = false;\n                            /* /\n\n                            // In old app, if at least one normalized parameter exists that is not supported,\n                            // the whole process is disregarded.\n\n                            const notSupported = normalized.some(p => !p.is_supported);\n                            // */\n\n                            const filtered = normalized\n                              .filter(p => p.editor.type !== 'hidden')\n                              .sort((a, b) => a.position - b.position); // sort parameters based on the meta.position\n\n                            // if (notSupported || filtered.length === 0) {\n                            if (filtered.length === 0) {\n                              return (\n                                <Row>\n                                  <Column>\n                                    <p>\n                                      This process contains unsuported parameters with no defaults,\n                                      and cannot be run from the web interface.\n                                    </p>\n                                  </Column>\n                                </Row>\n                              );\n                            }\n\n                            const chunks = chunk(filtered, 2);\n\n                            return chunks.map((params, index) => (\n                              <Row key={index} spacing={3}>\n                                {params.map(parameter => (\n                                  <Column key={parameter.name} xs={6}>\n                                    <Parameter\n                                      normalized={parameter}\n                                      value={values[parameter.name]}\n                                      disabled={!editable}\n                                      recieved={recieved}\n                                    />\n                                  </Column>\n                                ))}\n                              </Row>\n                            ));\n                          }}\n                        </Ensure>\n                      )}\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          </Switch.Case>\n        </Switch>\n      </Section.Content>\n    </Section>\n  );\n};\n","import React from 'react';\nimport Groups from '../../components/notification-groups/notification-groups';\nimport Users from '../../components/notification-users/notification-users';\nimport Events from '../../components/notification-events/notification-events';\nimport NotificationList from '../../components/notification-list/notification-list';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport { Button } from 'shared/components/controls';\n\nimport classnames from 'classnames';\n\nimport './notifications.scss';\nimport { RestClient } from 'shared/lib/rest';\n\nexport class Notifications extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { recievedData } = props;\n\n    const startFullLog = [1, 3, 5, 7];\n    const completionFullLog = [2, 3, 6, 7];\n    const abnormalFullLog = [4, 6, 7];\n\n    this.state = {\n      groupsData: [],\n      usersData: [],\n      jobStart: {\n        notice: false,\n        fullLog: startFullLog.includes(recievedData.events)\n      },\n      jobCompletion: {\n        notice: false,\n        fullLog: completionFullLog.includes(recievedData.events)\n      },\n      abnormalEvent: {\n        notice: false,\n        fullLog: abnormalFullLog.includes(recievedData.events)\n      },\n      isEditing: false\n    };\n  }\n\n  async componentDidMount() {\n    const { recievedData = { users: [] } } = this.props;\n\n    RestClient.get('/group').then(res => {\n      if (res && res.data && res.data.data && res.data.data.groups) {\n        this.setState({\n          groupsData: res.data.data.groups.map(item => {\n            return { data: item, selected: false, displayIcons: false };\n          })\n        });\n      }\n    });\n    RestClient.get('/user').then(res => {\n      if (res && res.data && res.data.data && res.data.data.users) {\n        this.setState({\n          usersData: res.data.data.users.map(item => {\n            return {\n              data: item,\n              selected: recievedData.users.includes(item.name),\n              display: false\n            };\n          })\n        });\n      }\n    });\n  }\n\n  render() {\n    const { usersData, groupsData, jobStart, jobCompletion, abnormalEvent, isEditing } = this.state;\n    const selectedGroup = this.getSelectedGroup();\n    const areUsersSelected = usersData.find(item => item.selected);\n    const isClearActionAvailable = this.checkIfAllUsersSelectedCurrentGroup();\n    return (\n      <div\n        className={classnames('monitor-and-notifications', {\n          disabled: this.props.disabled\n        })}\n      >\n        {isEditing ? (\n          <div className=\"notifications-editor\">\n            <Groups onSelect={this.onSelectGroup} groups={groupsData} />\n            <Users\n              onSelect={this.onSelectUser}\n              onSelectUserAction={this.onSelectUserAction}\n              isClearActionAvailable={isClearActionAvailable}\n              users={usersData}\n              isGroupSelected={!!selectedGroup}\n              eventTypeIcons={this.getEventTypeIcons()}\n            />\n            <div className=\"right-side-container\">\n              <Events\n                jobStart={jobStart}\n                jobCompletion={jobCompletion}\n                abnormalEvent={abnormalEvent}\n                onSelect={this.onSelectEventType}\n                areUsersSelected={areUsersSelected}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  this.props.onApply(mappedState(this.state));\n                  this.toggleApplyButton();\n                }}\n              >\n                Apply\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <NotificationList\n            users={usersData}\n            eventTypeIcons={this.getEventTypeIcons()}\n            toggleApplyButton={this.toggleApplyButton}\n          />\n        )}\n      </div>\n    );\n  }\n\n  getEventTypeIcons = () => {\n    const { jobStart, jobCompletion, abnormalEvent } = this.state;\n    const icons = [];\n    if (jobStart.notice || jobStart.fullLog) {\n      icons.push(<PlayCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (jobCompletion.notice || jobCompletion.fullLog) {\n      icons.push(<CheckCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (abnormalEvent.notice || abnormalEvent.fullLog) {\n      icons.push(<ErrorOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    return icons;\n  };\n\n  toggleApplyButton = () => {\n    this.setState(state => ({ isEditing: !state.isEditing }));\n  };\n\n  checkIfAllUsersSelectedCurrentGroup = () => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      return this.state.usersData\n        .filter(item => selectedGroup.data.users.indexOf(item.data.name) !== -1)\n        .every(item => item.selected);\n    }\n  };\n\n  onSelectGroup = group => {\n    this.setState(state => ({\n      groupsData: state.groupsData.map(item => ({\n        ...item,\n        selected: group.data.name === item.data.name\n      })),\n      usersData: state.usersData.map(item => ({\n        ...item,\n        display: group.data.users.indexOf(item.data.name) !== -1\n      }))\n    }));\n  };\n\n  onSelectUser = user => {\n    /* eslint-disable react/no-access-state-in-setstate */\n    const usersData = this.state.usersData.map(item => {\n      if (item.data.name === user.data.name) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    this.setState({ usersData, groupsData: this.setFlagGroupsIfContainSelectedUser(usersData) });\n  };\n\n  onSelectUserAction = shouldClear => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      const usersData = this.state.usersData.map(item => {\n        if (selectedGroup.data.users.indexOf(item.data.name) !== -1) {\n          return { ...item, selected: !shouldClear };\n        }\n        return item;\n      });\n      this.setState({\n        usersData,\n        groupsData: this.setFlagGroupsIfContainSelectedUser(usersData)\n      });\n    }\n  };\n\n  setFlagGroupsIfContainSelectedUser = usersData => {\n    return this.state.groupsData.map(group => ({\n      ...group,\n      displayIcons: !!usersData.find(user => {\n        return user.selected && user.data.member_of.indexOf(group.data.name) !== -1;\n      })\n    }));\n  };\n\n  onSelectEventType = (type, key) => {\n    this.setState(state => ({ [type]: { ...state[type], [key]: !state[type][key] } }));\n  };\n\n  getSelectedGroup() {\n    return this.state.groupsData.find(item => item.selected);\n  }\n}\n\nexport default Notifications;\n\n/**\n * State mapper for backend request.\n *\n * events is a composite number,\n *\n * notice unsuported for now\n * groups are redundant now that the ui preselects all users in a group.\n */\n/* eslint-disable no-unused-vars */\nfunction mappedState({ groupsData, usersData, jobStart, jobCompletion, abnormalEvent }) {\n  const users = usersData.filter(user => user.selected).map(user => user.data.name);\n\n  let events = 0;\n\n  if (jobStart.fullLog) {\n    events += 1;\n  }\n\n  if (jobCompletion.fullLog) {\n    events += 2;\n  }\n\n  if (abnormalEvent.fullLog) {\n    events += 4;\n  }\n\n  return { users, events };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getProcess(name) {\n  return RestClient.get(`/process/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchProcess(name, body) {\n  return RestClient.patch(`/process/${name}`, body);\n}\n","/**\n * This file will be updated with any new module (adding the module reducer)\n */\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { sessionEffects, sessionReducer } from 'session';\nimport { dashboardReducer } from 'dashboard';\nimport { sharedEffects, sharedReducer } from 'shared/store/';\nimport { createReducer } from 'shared/lib/redux-utils';\n\nimport usersManagerReducer from 'users-manager/store/reducers';\nimport groupsReducer from 'users-manager/groups/store/reducer';\nimport explorerReducer from 'explorer/store/reducers';\nimport executiveDashboardReducer from 'executive-dashboard/store/reducers';\nimport * as entities from 'entities/reducer';\nimport * as daemon from 'dashboard/store/reducers/daemon';\n\nimport * as invocations from 'job-process/store/reducer';\n\nimport { api } from './middlewares';\nimport { reducer as core } from './reducers';\n\nconst saga = createSagaMiddleware();\n\nexport const configStore = () => {\n  const reducer = combineReducers({\n    core,\n    session: sessionReducer,\n    dashboard: dashboardReducer,\n    shared: sharedReducer,\n    usersManager: usersManagerReducer,\n    groups: groupsReducer,\n    entities: createReducer(entities),\n    explorer: explorerReducer,\n    invocation_viewer: createReducer(invocations),\n    executiveDashboard: executiveDashboardReducer,\n    daemon: createReducer(daemon)\n  });\n  const effects = [...sessionEffects, ...sharedEffects];\n\n  const store = createStore(reducer, composeWithDevTools(applyMiddleware(saga, thunk, api)));\n\n  effects.forEach(effect => {\n    saga.run(effect);\n  });\n\n  return store;\n};\n\nexport default configStore();\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function postAccount(body) {\n  try {\n    const { data } = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function patchAccount(name, body) {\n  try {\n    const { data } = await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport function getConnection(name) {\n  return RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchConnection(name, body) {\n  return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","export const DISPLAY_FORMAT = 'L';\nexport const ISO_FORMAT = 'YYYY-MM-DD';\nexport const ISO_MONTH_FORMAT = 'YYYY-MM'; // TODO delete this line of dead code on next breaking change\n\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const VERTICAL_ORIENTATION = 'vertical';\nexport const VERTICAL_SCROLLABLE = 'verticalScrollable';\n\nexport const NAV_POSITION_BOTTOM = 'navPositionBottom';\nexport const NAV_POSITION_TOP = 'navPositionTop';\n\nexport const ICON_BEFORE_POSITION = 'before';\nexport const ICON_AFTER_POSITION = 'after';\n\nexport const INFO_POSITION_TOP = 'top';\nexport const INFO_POSITION_BOTTOM = 'bottom';\nexport const INFO_POSITION_BEFORE = 'before';\nexport const INFO_POSITION_AFTER = 'after';\n\nexport const ANCHOR_LEFT = 'left';\nexport const ANCHOR_RIGHT = 'right';\n\nexport const OPEN_DOWN = 'down';\nexport const OPEN_UP = 'up';\n\nexport const DAY_SIZE = 39;\nexport const BLOCKED_MODIFIER = 'blocked';\nexport const WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nexport const FANG_WIDTH_PX = 20;\nexport const FANG_HEIGHT_PX = 10;\nexport const DEFAULT_VERTICAL_SPACING = 22;\n\nexport const MODIFIER_KEY_NAMES = new Set(['Shift', 'Control', 'Alt', 'Meta']);\n","export function mapUsersData(payload) {\n  return payload.data.users;\n}\n\nexport function mapLoadedUser(payload) {\n  return payload.data.users[0]; // the first returned user is the one in question\n}\n","import { createSelector } from 'reselect';\n\nconst localState = (state) => state.session;\n\n\nexport const authorizationSelector = createSelector(\n  localState,\n  (state) => state.get('authorization'),\n);\n\n\nexport const currentUserSelector = createSelector(\n  localState,\n  (state) => state.get('currentUser'),\n);\n\nexport const loginSelector = createSelector(\n  localState,\n  (state) => state.get('login'),\n);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postSchedule(body) {\n  return RestClient.post('schedule', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function getSchedule(name) {\n  return RestClient.get(`schedule/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchSchedule(name, body) {\n  return RestClient.patch(`schedule/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import { CONSTANTS } from 'config';\n\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { PROVIDE_EXECUTIVE_DASHBOARD, SELECT_ALL, DESELECT_ALL, TOGGLE_SERVER } from '../actions';\n\nexport function loadExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function deselectAllThunk() {\n  return dispatch => {\n    dispatch(creators.action(DESELECT_ALL));\n\n    return 'done';\n  };\n}\n\nexport function selectAllThunk() {\n  return function selectAll(dispatch, getState) {\n    const { rawEntries } = getState().executiveDashboard;\n\n    dispatch(creators.action(SELECT_ALL, rawEntries));\n\n    return 'done';\n  };\n}\n\nexport function toggleServerThunk(server) {\n  return function toggleServer(dispatch, getState) {\n    const { allServers } = getState().executiveDashboard;\n    let { selectedServers } = getState().executiveDashboard;\n\n    const svIndex = allServers.findIndex(sv => sv.name === server.name);\n\n    if (selectedServers.find(sv => sv.name === server.name)) {\n      selectedServers = selectedServers.filter(sv => sv.name !== server.name);\n    } else {\n      selectedServers = [...selectedServers, allServers[svIndex]];\n    }\n\n    selectedServers.sort((a, b) => a.nrCores - b.nrCores);\n\n    dispatch(creators.action(TOGGLE_SERVER, selectedServers));\n    return 'done';\n  };\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport './Header.local.scss';\n\nexport const Header = ({ title, children }) => (\n  <header className=\"header\">\n    { title && <h1 className=\"header-title\">{title}</h1>}\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.dashboard;\n\nexport const filterStatusSelector = createSelector(localState, state => state.get('filterStatus'));\n","import { filterStatusActions } from './filter-status.action';\n\nimport { checkDaemon } from 'shared/api/daemon';\n\nexport const actions = {\n  ...filterStatusActions\n};\n\n/** TODO: The Above actions should be expanded to the new structure at some point */\n\nexport function checkDeamonStatus() {\n  return function daemon_thunk(dispatch) {\n    dispatch({\n      type: 'DAEMON_STATUS',\n      promise: checkDaemon()\n    });\n  };\n}\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\nimport { mdiCalendarBlank } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { SingleDatePicker } from 'shared/components';\n\nexport const DayFilterEditor = ({ value: defaultValue, setFilterValue }) => {\n  const [value, setValue] = useState(defaultValue ? moment(defaultValue, 'D MMM YYYY') : undefined);\n  const onChange = (date) => {\n    setValue(date);\n    setFilterValue({ value: date.format('D MMM YYYY'), type: DayFilterEditor.TypeDescriptor.value });\n  };\n\n  return (\n    <SingleDatePicker\n      date={value}\n      onDateChange={onChange}\n    />\n  );\n};\n\nDayFilterEditor.propTypes = {\n  value: PropTypes.string,\n  setFilterValue: PropTypes.func.isRequired,\n};\n\nDayFilterEditor.defaultProps = {\n  value: '',\n};\n\nDayFilterEditor.TypeDescriptor = {\n  icon: () => <SvgIcon><Icon path={mdiCalendarBlank} /></SvgIcon>,\n  name: () => <FormattedMessage id=\"dashboard.day\" />,\n  value: 'day',\n};\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { SmallInput } from 'shared/components';\n\nexport const UserFilterEditor = ({ value: defaultValue, setFilterValue }) => {\n  const [value, setValue] = useState(defaultValue || '');\n  const IconComp = UserFilterEditor.TypeDescriptor.icon;\n  const onChange = (event) => { setValue(event.target.value); };\n  const onKeyDown = (event) => { if (event.key === 'Enter') { setFilterValue({ value, type: UserFilterEditor.TypeDescriptor.value }); } };\n\n  return (\n    <SmallInput\n      autoFocus\n      value={value}\n      placeholder=\"Search\"\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      icon={<IconComp />}\n    />\n  );\n};\n\nUserFilterEditor.propTypes = {\n  value: PropTypes.string,\n  setFilterValue: PropTypes.func.isRequired,\n};\n\nUserFilterEditor.defaultProps = {\n  value: '',\n};\n\nUserFilterEditor.TypeDescriptor = {\n  icon: () => <AccountCircleOutlinedIcon />,\n  name: () => <FormattedMessage id=\"dashboard.user\" />,\n  value: 'user',\n};\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\nimport { Dropdown, SmallInput } from 'shared/components';\n\nexport const StatusFilterEditor = ({ value: defaultValue, setFilterValue }) => {\n  const [value, setValue] = useState(defaultValue || '');\n  const IconComp = StatusFilterEditor.TypeDescriptor.icon;\n  const saveFilter = (index, status) => { setValue(status.value); setFilterValue({ type: 'status', value: status.value }); };\n\n  const items = [\n    { value: 'ABORTED', name: 'Aborted' },\n    { value: 'DELAYED', name: 'Delayed' },\n    { value: 'EXECUTING', name: 'Executing' },\n    { value: 'FAILED', name: 'Failed' },\n    { value: 'KILLED', name: 'Killed' },\n    { value: 'SCHEDULED', name: 'Scheduled' },\n    { value: 'SUCCEEDED', name: 'Succeeded' },\n  ];\n\n  return (\n    <Dropdown\n      target={(meta, actions) => (\n        <SmallInput\n          ref={meta.ref}\n          value={value}\n          placeholder=\"Select status\"\n          disabled\n          readOnly\n          onClick={actions.toggle}\n          icon={<IconComp />}\n        />\n      )}\n      onSelect={saveFilter}\n      items={items}\n      isDropdownOpen\n    />\n  );\n};\n\nStatusFilterEditor.propTypes = {\n  value: PropTypes.string,\n  setFilterValue: PropTypes.func.isRequired,\n};\n\nStatusFilterEditor.defaultProps = {\n  value: '',\n};\n\nStatusFilterEditor.TypeDescriptor = {\n  icon: () => <TimelapseIcon />,\n  name: () => <FormattedMessage id=\"dashboard.status\" />,\n  value: 'status',\n};\n","import extractDefault from './extractDefault';\n\nimport { sortBy } from 'lodash';\n\nimport check from '../editors/field-level-validations';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'string',\n  'integer',\n  'float',\n  'unsigned_float',\n  'unsigned_integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter'\n];\n\nexport function space_begone(name) {\n  return name.replace(/\\s/g, '___');\n}\n\nexport function space_summon(name) {\n  return name.replace(/___/g, ' ');\n}\n\nexport default function normalize(param, dataTypes, prototypes, forms) {\n  const parameter = { ...param };\n\n  defaults(parameter, dataTypes, prototypes, forms);\n\n  parameter.editor = defineEditor(parameter, dataTypes, prototypes, forms);\n\n  parameter.field_name = space_begone(parameter.name);\n\n  maybeDisabled(parameter);\n\n  return parameter;\n}\n\nfunction maybeDisabled(parameter) {\n  const { appearance } = parameter.meta;\n\n  if (appearance === 'Grayed' && parameter.editor) {\n    parameter.editor.disabled = true;\n  }\n}\n\nfunction defaults(parameter, dataTypes, prototypes) {\n  parameter.position = parameter.meta?.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    /**\n     * TODO: this was done to help exclude parameters like, any\n     * Or other stuff that cannot be parsed correctly\n     *\n     * Will remove them for now.\n     * Any types mostly are multiline input data, so we'll default them to that.\n     */\n    parameter.is_supported = false;\n\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (dataType.name.startsWith('mas0000.sys.account.conn.')) {\n          parameter.is_supported = true;\n        } else {\n          /**\n           * Allow support for all types of parameters, defaulting to a Text multiline.\n           */\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n\n          parameter.editor = {\n            type: 'string',\n            multiline: true,\n            deflt: ''\n          };\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.deflt = 'TEXT';\n  }\n\n  // hardcode default value for oformat parameter to \"TEXT\"\n  // was decided to be done on the UI because for the BE alot of processess had to be manually changed\n  // and at the moment we are pressed on time\n  if (parameter.name === 'oformat') {\n    parameter.deflt = parameter.value ? parameter.value : 'TEXT';\n  }\n}\n\nfunction parseProtocols(protocols) {\n  if (!protocols) {\n    return [];\n  }\n\n  if (!Array.isArray(protocols)) {\n    return [protocols];\n  }\n\n  return protocols.reduce((bucket, protocol) => {\n    // quick and dirty (as he said)\n    if (protocol === 'DBMS') {\n      bucket.push('MSSQL', 'MYSQL', 'ORACLE', 'PGSQL');\n    } else {\n      bucket.push(protocol);\n    }\n\n    return bucket;\n  }, []);\n}\n\nfunction defineEditor(parameter, dataTypes, prototypes, forms) {\n  if (!parameter.is_supported) {\n    return { type: 'hidden', disabled: true, value: '' };\n    // return { type: 'text', disabled: true, value: '' };\n  }\n\n  const { meta } = parameter;\n  const { editor: metaEditor, appearance } = meta;\n\n  if (appearance === 'Hidden') {\n    return { type: 'hidden' };\n  }\n\n  if (metaEditor === 'Hidden') {\n    return { type: 'text', disabled: true };\n  }\n\n  const prototype = prototypes.find(proto => proto.name === parameter.data_type);\n\n  if (prototype) {\n    const options = forms\n      .filter(form => form.prototype === prototype.name)\n      .map(form => ({ label: form.name, value: form.name }));\n    return {\n      type: 'select',\n      options\n    };\n  }\n\n  const dataType = dataTypes.find(type => type.name === parameter.data_type);\n\n  if (!dataType) {\n    return { type: 'text', disabled: true, readOnly: true };\n  }\n\n  if (dataType.enumerations !== null && dataType.enumerations.length > 0) {\n    const enumerations = sortBy(dataType.enumerations, 'weight');\n    const options = enumerations.map(({ label }) => ({ label, value: label }));\n\n    return { type: 'select', options };\n  }\n\n  if (dataType.name.startsWith('mas0000.sys.account.conn.')) {\n    return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n  }\n\n  switch (dataType.name) {\n    case 'ename':\n      switch (metaEditor) {\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'fqname' };\n      }\n    case 'string':\n      switch (metaEditor) {\n        case 'password':\n          return { type: 'password' };\n        case 'fqname':\n        case 'ename':\n          return { type: 'fqname' };\n        case 'multiline':\n          return { type: 'text', multiline: true };\n        case 'key':\n          return { type: 'rsa', multiline: true };\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'text' };\n      }\n    case 'boolean':\n      return { type: 'boolean' };\n    case 'integer':\n      return { type: 'number' };\n    case 'float':\n      return { type: 'number', validate: [check.signed_float] };\n    case 'unsigned_float':\n      return { type: 'number', validate: [check.unsigned_float] };\n    case 'unsigned_integer':\n      return { type: 'number', validate: [check.unsigned_int] };\n    case 'mas0000.os.exec.system_user':\n      return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n    case 'mas0000.sys.email_address':\n      return { type: 'email' };\n    case 'mas0000.sys.phone_number':\n      return { type: 'phone' };\n    case 'mas0000.sys.process.process':\n      return { type: 'process' };\n    case 'mas0000.sys.process.variadic_parameter':\n      return { type: 'variadic_parameter' /** needsSelectedProcessName */ };\n    default:\n      return { type: 'text', multiline: true };\n  }\n\n  // return { type: 'hidden' };\n}\n","import React from 'react';\nimport { bool, node, string, array, func } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiContentSave } from '@mdi/js';\n\nimport './ActionCard.local.scss';\n\nexport class ActionCard extends React.PureComponent {\n  render() {\n    const {\n      settings,\n      status,\n      icon,\n      label,\n      addOnly,\n      options,\n      onClick,\n      readOnlyOptions,\n      lastBackup,\n      type = ''\n    } = this.props;\n\n    return (\n      <div className={classnames('action-card', { addable: addOnly })}>\n        <header>\n          {lastBackup && (\n            <div className=\"last-backup\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiContentSave} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{lastBackup}</span>\n            </div>\n          )}\n          {settings && <div className=\"settings\">{settings}</div>}\n        </header>\n        <div className=\"main-icon\" onClick={onClick} role=\"presentation\">\n          {status && <div className={`status ${status} ${type}`} />}\n          {icon}\n        </div>\n        <div className=\"main-label\">{label}</div>\n        {options &&\n          options.map(option => (\n            <div className=\"option\" key={option.label} onClick={option.onClick} role=\"presentation\">\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n            </div>\n          ))}\n        {readOnlyOptions &&\n          readOnlyOptions.map(option => (\n            <div\n              className=\"option presentation\"\n              key={option.label}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              {option.fillable && option.percentage && (\n                <div className=\"filled\" style={{ width: `${option.percentage}%` }} />\n              )}\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n              {option.percentage && <div className=\"end-icon\">{option.percentage}%</div>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nActionCard.propTypes = {\n  settings: node,\n  icon: node,\n  label: string,\n  addOnly: bool,\n  options: array,\n  onClick: func,\n  status: string,\n  readOnlyOptions: array\n};\n\nexport default ActionCard;\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './CardsLayout.local.scss';\n\nexport class CardsLayout extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"container\">{children}</div>;\n  }\n}\n\nCardsLayout.propTypes = {\n  children: node\n};\n\nexport default CardsLayout;\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function postInvocation(body) {\n  try {\n    const { data } = await RestClient.post('/invocation', body);\n\n    return { result: data.result, invocations: data.data.invocations };\n  } catch (e) {\n    return { result: 'fail', invocations: [], messages: e.messages };\n  }\n}\n\nexport function requestInvocation(uuid) {\n  return RestClient.get(`/invocation/${uuid}`);\n}\n\nexport async function fetchInvocation(uuid) {\n  try {\n    const response = await RestClient.get(`/invocation/${uuid}`);\n\n    return {\n      result: 'success',\n      invocation: response.data.data.invocations[0]\n    };\n  } catch (e) {\n    console.log(e); // eslint-disable-line\n    return { result: 'fail' };\n  }\n}\n\nexport async function fetchInvocationOutput(uuid) {\n  return RestClient.get(`/invocation/${uuid}/display`, {\n    page_size: 2147483645\n  });\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiSourceRepository,\n  mdiFolderHome,\n  mdiLanConnect,\n  mdiHexagonMultipleOutline\n} from '@mdi/js';\n\nimport extractDefault from './extractDefault';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'float',\n  'integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter',\n  'string',\n  'unsigned_float',\n  'unsigned_integer'\n];\n\nexport default (parameter, dataTypes, prototypes) => {\n  parameter = { ...parameter };\n  parameter.position = parameter.meta.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    parameter.is_supported = false;\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (dataType.name.startsWith('mas0000.sys.account.conn.')) {\n          parameter.is_supported = true;\n        } else {\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.value = 'TEXT';\n  }\n\n  parameter.label = getLabel(parameter.name);\n  parameter.icon = getIcon(parameter.name);\n\n  return parameter;\n};\n\nconst getLabel = name => {\n  return labels[name] || name;\n};\n\nconst getIcon = name => {\n  return icons[name] || null;\n};\n\nconst labels = {\n  target_working_dir: 'Working directory',\n  target_shell: 'Target server SSH',\n  repo_shell: 'Repo server SSH',\n  repo_working_dir: 'Repo directory',\n  form: 'Database form',\n  dbms: 'Target DBMS'\n};\n\nconst icons = {\n  target_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  target_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiSourceRepository} />\n    </SvgIcon>\n  ),\n  dbms: (\n    <SvgIcon>\n      <Icon path={mdiHexagonMultipleOutline} />\n    </SvgIcon>\n  ),\n  form: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  )\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Field } from 'formik';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiLanConnect } from '@mdi/js';\n\nimport './TextField.local.scss';\n\nexport const TextField = ({ parameter }) => {\n  const validate = value => {\n    if (parameter.is_required) {\n      if (!value) {\n        return 'This Field is Required';\n      }\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <MUITextField\n            {...field}\n            variant=\"outlined\"\n            type=\"text\"\n            fullWidth\n            error={meta.error && meta.touched}\n            helperText={meta.touched && meta.error ? meta.error : undefined}\n            label={parameter.label}\n            placeholder={parameter.label}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {parameter.icon ? (\n                    parameter.icon\n                  ) : (\n                    <SvgIcon>\n                      <Icon path={mdiLanConnect} />\n                    </SvgIcon>\n                  )}\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <LightTooltip placement=\"bottom-end\" title={parameter.description}>\n                  <InputAdornment position=\"end\">\n                    <SvgIcon>\n                      <Icon path={mdiHelpCircleOutline} />\n                    </SvgIcon>\n                  </InputAdornment>\n                </LightTooltip>\n              )\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Field } from 'formik';\nimport { array, object } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { mdiLanConnect } from '@mdi/js';\nimport Icon from '@mdi/react';\n\nimport { Dropdown } from 'shared/components';\n\nimport './DropdownField.local.scss';\n\nexport const DropdownField = ({ parameter, datatypes, rawAccounts, forms, prototypes }) => {\n  const dataType = datatypes.find(datatype => datatype.name === parameter.data_type);\n  let protocols = null;\n\n  if (dataType) {\n    if (dataType.name.startsWith('mas0000.sys.account.conn.')) {\n      if (Array.isArray(dataType.protocol) && dataType.protocol.length > 0) {\n        protocols = [];\n        dataType.protocol.forEach(protocol => {\n          if (protocol === 'DBMS') {\n            // This is quick and dirty until we have a configuration-driven solution\n            // in the UI.\n            protocols = [...protocols, 'MSSQL', 'MYSQL', 'ORACLE', 'PGSQL'];\n          } else {\n            protocols.push(protocol);\n          }\n        });\n        const options = rawAccounts\n          .map(account => ({ name: account.name, value: account }))\n          .filter(option => protocols === null || protocols.includes(option.value.protocol));\n\n        const validate = value => {\n          if (parameter.is_required) {\n            if (!value) {\n              return 'This Field is Required';\n            }\n          }\n        };\n\n        return (\n          <Field name={parameter.name} validate={validate}>\n            {({ field, meta }) => {\n              return (\n                <Dropdown\n                  onSelect={(index, opt) => {\n                    field.onChange({ target: { name: parameter.name, value: opt.value } });\n                  }}\n                  target={(meta2, actions) => (\n                    <MUITextField\n                      type=\"text\"\n                      readOnly\n                      variant=\"outlined\"\n                      fullWidth\n                      label={parameter.label}\n                      placeholder={parameter.label}\n                      {...field}\n                      value={field.value ? field.value.name : ''}\n                      onChange={() => {}}\n                      onClick={actions.toggle}\n                      ref={meta2.ref}\n                      error={meta.error && meta.touched}\n                      helperText={meta.touched && meta.error ? meta.error : undefined}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {parameter.icon ? (\n                              parameter.icon\n                            ) : (\n                              <SvgIcon>\n                                <Icon path={mdiLanConnect} />\n                              </SvgIcon>\n                            )}\n                          </InputAdornment>\n                        ),\n\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <ArrowDropDownIcon />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                  )}\n                  items={options}\n                />\n              );\n            }}\n          </Field>\n        );\n      }\n    }\n  } else {\n    const prototype = prototypes.find(p => p.name === parameter.data_type);\n\n    if (prototype) {\n      const options = forms\n        .filter(form => form.prototype === prototype.name)\n        .map(form => ({ name: form.name, value: form.name }));\n\n      const validate = value => {\n        if (parameter.is_required) {\n          if (!value) {\n            return 'This Field is Required';\n          }\n        }\n      };\n\n      return (\n        <Field name={parameter.name} validate={validate}>\n          {({ field, meta }) => {\n            return (\n              <Dropdown\n                onSelect={(index, opt) => {\n                  field.onChange({ target: { name: parameter.name, value: opt.value } });\n                }}\n                target={(meta2, actions) => (\n                  <MUITextField\n                    type=\"text\"\n                    readOnly\n                    variant=\"outlined\"\n                    fullWidth\n                    label={parameter.label}\n                    placeholder={parameter.label}\n                    {...field}\n                    value={field.value ? field.value : ''}\n                    onChange={() => {}}\n                    onClick={actions.toggle}\n                    ref={meta2.ref}\n                    error={meta.error && meta.touched}\n                    helperText={meta.touched && meta.error ? meta.error : undefined}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          {parameter.icon ? (\n                            parameter.icon\n                          ) : (\n                            <SvgIcon>\n                              <Icon path={mdiLanConnect} />\n                            </SvgIcon>\n                          )}\n                        </InputAdornment>\n                      ),\n\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <ArrowDropDownIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                )}\n                items={options}\n              />\n            );\n          }}\n        </Field>\n      );\n    }\n  }\n\n  return <div>Currently not supported inpu</div>;\n};\n\nDropdownField.propTypes = {\n  parameter: object,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  prototypes: array\n};\n","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\n\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { ListOutput } from '../ListOutput/ListOutput';\nimport { sendToEmail } from '../../utils/sendToEmail';\nimport { copyToClipboard } from '../../utils/copyToClipboard';\n\nimport './OutputModal.local.scss';\n\nexport const OutputModal = ({\n  open,\n  actions,\n  output,\n  invocation,\n  modalDetails,\n  processName,\n  type,\n  messages\n}) => {\n  let content;\n\n  const [message, setMessage] = useState(messages[0]);\n\n  let interval;\n\n  useEffect(() => {\n    if (messages && messages.length > 1) {\n      if (!open) {\n        clearInterval(interval);\n      } else {\n        let index = 1;\n        interval = setInterval(() => {\n          setMessage(messages[index]);\n          if (index + 1 < messages.length) {\n            index += 1;\n          }\n        }, 4000);\n\n        return () => clearInterval(interval);\n      }\n    }\n  }, [open]);\n\n  if (!output && invocation.status !== 'SUCCEEDED' && invocation.status !== 'FAILED') {\n    content = (\n      <>\n        <Center>\n          <Loader>{message}</Loader>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'FAILED') {\n    content = (\n      <>\n        <Paper.Content scrollable>\n          <ListOutput type=\"fail\" output={output} errors={invocation.errors} />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => sendToEmail(invocation, output, processName)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'SUCCEEDED') {\n    content = (\n      <>\n        <Paper.Content scrollable>\n          <ListOutput output={output} />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => sendToEmail(invocation, output, processName)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '75vh',\n          minHeight: '75vh',\n          width: '75vh',\n          height: '75vh'\n        }}\n      >\n        {type !== 'packaging' && (\n          <ModalHeader\n            title={modalDetails.title}\n            desc={invocation.status === 'FAILED' ? 'An error orccured!' : 'Output'}\n            avatar={\n              <Avatar\n                className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n              >\n                {modalDetails.icon}\n              </Avatar>\n            }\n          />\n        )}\n        {type === 'packaging' && invocation.status === 'FAILED' && (\n          <ModalHeader\n            title={modalDetails.title}\n            desc=\"An error orccured!\"\n            avatar={\n              <Avatar\n                className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n              >\n                {modalDetails.icon}\n              </Avatar>\n            }\n          />\n        )}\n        {content}\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nexport function want(map, Unresolved = () => null, keygen = key => key) {\n  function settler(props) {\n    const key = keygen(props);\n    return map[key] ?? Unresolved;\n  }\n\n  return settler;\n}\n\nexport function wantComponent(settler) {\n  function Picker(props) {\n    const Picked = settler(props);\n\n    return <Picked {...props} />;\n  }\n\n  return Picker;\n}\n","import React, { createContext } from 'react';\nimport uuid from 'uuid';\nimport MUIModal from '@material-ui/core/Modal';\nimport { bool, string, oneOfType, node, func, shape } from 'prop-types';\n\nimport './Modal.local.scss';\n\nimport { ModalHeader } from '../ModalHeader/ModalHeader';\n\nexport const ModalContext = createContext({});\n\nexport const Modal = ({ open, actions, id: providedId, children }) => {\n  const id = providedId || uuid();\n  const aria = {\n    'aria-labelledby': `${id}-modal-title`,\n    'aria-describedby': `${id}-modal-description`\n  };\n\n  return (\n    <ModalContext.Provider value={{ aria, actions }}>\n      <MUIModal {...aria} open={open} onClose={actions.close}>\n        <div className=\"overlay\">\n          {typeof children === 'function' ? children({ id, aria, open, actions }) : children}\n        </div>\n      </MUIModal>\n    </ModalContext.Provider>\n  );\n};\n\nModal.propTypes = {\n  actions: shape({\n    open: func,\n    close: func\n  }),\n  children: oneOfType([node, func]),\n  open: bool,\n  id: string\n};\n\nModal.ModalHeader = ModalHeader;\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  mdiFileTableBox,\n  mdiDatabase,\n  mdiFileTree,\n  mdiTable,\n  mdiAlertOutline,\n  mdiTableColumnWidth,\n  mdiAlphaPBox,\n  mdiInboxFull,\n  mdiInbox\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './root.local.scss';\n\nconst VerticalUsageBar = ({ usage, className }) => {\n  let fill;\n  if (usage > 75) {\n    fill = '#ED3A4A';\n  } else if (usage > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  return (\n    <div className={className}>\n      <svg viewBox=\"-2 -2 62 102\">\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" height=\"100\" width=\"60\" fill=\"rgba(12, 50, 110, 0.38)\" />\n        <rect x=\"0\" y={100 - usage} rx=\"8\" ry=\"8\" height={usage} width=\"60\" fill={fill} />\n      </svg>\n    </div>\n  );\n};\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nconst SidebarStorageItem = ({ ns, usage, setItem, isSelected }) => (\n  <div\n    className={classnames('sidebar-item', { selected: isSelected })}\n    role=\"button\"\n    onClick={() => setItem(ns)}\n  >\n    <VerticalUsageBar usage={usage} className=\"usage-icon\" />\n    {ns}\n  </div>\n);\n\nexport const StorageSidebar = ({ list, setItem, selectedItem, dbName, isLoading }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiFileTableBox} />\n        </SvgIcon>\n        {dbName} Used Storage\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <CircularProgress />\n          </Center>\n        ) : (\n          list.map((element, index) => (\n            <SidebarStorageItem\n              isSelected={selectedItem === element.ns}\n              key={index}\n              {...element}\n              setItem={setItem}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst iconMapper = {\n  triggers: { icon: mdiAlertOutline, label: 'Triggers' },\n  tables: { icon: mdiTable, label: 'Tables' },\n  indexes: { icon: mdiTableColumnWidth, label: 'Indexes' },\n  procedures: { icon: mdiAlphaPBox, label: 'Procedures' },\n  packages: { icon: mdiInbox, label: 'Packages' },\n  packageBodies: { icon: mdiInboxFull, label: 'Package Bodies' }\n};\n\nconst objectsSidebarMapper = (setItem, selectedItem, invalidObjects) => (\n  { owner, objects },\n  index\n) => {\n  const isSelected = owner === selectedItem.owner;\n  const invalidChildren = invalidObjects.filter(({ owner: name }) => name === owner);\n  return (\n    <>\n      <div\n        key={index}\n        className={classnames('sidebar-item', {\n          selected: isSelected,\n          'rotate-cw': !isSelected,\n          'rotate-ccw': isSelected\n        })}\n        role=\"button\"\n        onClick={() => setItem({ owner: isSelected ? null : owner, object: null })}\n      >\n        <SvgIcon>\n          <path d={mdiFileTree} />\n        </SvgIcon>\n        {owner}\n      </div>\n      {isSelected &&\n        objects.map((object, i) => {\n          const isObjectSelected = object === selectedItem.object;\n          const isInvalid = invalidChildren.findIndex(({ object: name }) => name === object) !== -1;\n          return (\n            <div\n              key={`${index}_${i}`}\n              className={classnames('child', 'sidebar-item', {\n                selected: isObjectSelected,\n                invalid: isInvalid\n              })}\n              role=\"button\"\n              onClick={() => setItem({ owner, object })}\n            >\n              <SvgIcon>\n                <path d={iconMapper[object].icon} />\n              </SvgIcon>\n              {iconMapper[object].label}\n            </div>\n          );\n        })}\n    </>\n  );\n};\n\nexport const ObjectsSidebar = ({\n  dbName,\n  setItem,\n  selectedItem,\n  list,\n  isLoading,\n  invalidObjects\n}) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiDatabase} />\n        </SvgIcon>\n        {dbName} Owners\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <CircularProgress />\n          </Center>\n        ) : (\n          <Overflow>\n            {list.map(objectsSidebarMapper(setItem, selectedItem, invalidObjects))}\n          </Overflow>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport {\n  mdiHelpRhombusOutline,\n  mdiTable,\n  mdiFileTableBox,\n  mdiArrangeBringToFront,\n  mdiFlashCircle\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './root.local.scss';\n\nconst KPIDisplay = ({ value, suffix, colorFormatting = false }) => {\n  let fill;\n  if (value > 75) {\n    fill = '#ED3A4A';\n  } else if (value > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  const digits = value > 10 ? 0 : 2;\n  const valueString = value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: digits\n  });\n  return (\n    <span style={colorFormatting ? { color: fill } : {}}>\n      {valueString}\n      {suffix}\n    </span>\n  );\n};\n\nconst NoDataComponent = ({ name }) => (\n  <div className=\"content dashed-and-centered\">\n    <SvgIcon>\n      <path d={mdiHelpRhombusOutline} />\n    </SvgIcon>\n    <p>Please select a {name} in order to view its children</p>\n  </div>\n);\n\nconst StorageDetailsList = ({ data, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const { tablespace, files } = data;\n\n  if (!tablespace || !tablespace.ns) {\n    return <NoDataComponent name=\"tablespace\" />;\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"detail-row\">\n        <div className=\"ts-name\">\n          <SvgIcon>\n            <path d={mdiFileTableBox} />\n          </SvgIcon>\n          {tablespace.ns}\n        </div>\n        <div className=\"details\">\n          <div className=\"block\">\n            <div className=\"top\">Total:</div>\n            <div>\n              <KPIDisplay value={tablespace.totalGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used size:</div>\n            <div>\n              <KPIDisplay value={tablespace.usedGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used %:</div>\n            <div>\n              <KPIDisplay value={tablespace.usage} suffix=\"%\" colorFormatting />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free size:</div>\n            <div>\n              <KPIDisplay value={tablespace.freeGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free %:</div>\n            <div>\n              <KPIDisplay value={tablespace.freePerc} suffix=\"%\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      {files.map(({ PCT_USED, FILE_NAME, SIZE_MB, MAXSIZE_MB }, index) => {\n        const filePath = FILE_NAME.split('/');\n        const [fileName, extension] = filePath[filePath.length - 1].split('.');\n        return (\n          <div key={index} className=\"detail-row\">\n            <div className=\"file-name\">\n              <SvgIcon>\n                <path d={mdiTable} />\n              </SvgIcon>\n              {fileName}\n              <span className=\"extension\">.{extension}</span>\n            </div>\n            <div className=\"details\">\n              <div className=\"block\">\n                <div className=\"top\">Used %:</div>\n                <div>\n                  <KPIDisplay value={PCT_USED} suffix=\"%\" colorFormatting />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Size:</div>\n                <div>\n                  <KPIDisplay value={SIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Max size:</div>\n                <div>\n                  <KPIDisplay value={MAXSIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport const StorageViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiTable} />\n        </SvgIcon>\n        Tables\n      </div>\n      <StorageDetailsList data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport const ObjectsViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiArrangeBringToFront} />\n        </SvgIcon>\n        Objects\n      </div>\n      {!data || data.length === 0 ? (\n        <NoDataComponent name=\"object\" />\n      ) : (\n        <div className=\"content\">\n          <Overflow>\n            {!isLoading ? (\n              data.map(({ OBJECT_NAME, CREATED, OBJECT_ID, LAST_DDL_TIME }) => {\n                return (\n                  <div key={OBJECT_ID} className=\"detail-row\">\n                    <div className=\"file-name\">\n                      <SvgIcon>\n                        <path d={mdiFlashCircle} />\n                      </SvgIcon>\n                      {OBJECT_NAME}\n                    </div>\n                    <div className=\"details\">\n                      <div className=\"object-block\">\n                        <div className=\"top\">Last DDL Time</div>\n                        <div>{LAST_DDL_TIME}</div>\n                      </div>\n                      <div className=\"object-block\">\n                        <div className=\"top\">Created</div>\n                        <div>{CREATED}</div>\n                      </div>\n                      {/* Designs have some buttons here */}\n                    </div>\n                  </div>\n                );\n              })\n            ) : (\n              <Center>\n                <CircularProgress />\n              </Center>\n            )}\n          </Overflow>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { WantParameter } from './wishes';\n\nexport function RepeatableParameter({ normalized, ...others }) {\n  return <WantParameter parameter={normalized} {...others} />;\n}\n\nexport const Parameter = ({ normalized, ...others }) => {\n  if (normalized.is_repeatable) {\n    return <RepeatableParameter {...others} normalized={normalized} />;\n  }\n\n  return <WantParameter {...others} parameter={normalized} />;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getNamespace(name) {\n  return RestClient.get(`/namespace/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchNamespace(name, body) {\n  return RestClient.patch(`/namespace/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postNamespace(body) {\n  return RestClient.post('/namespace', body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postForm(name, body) {\n  return RestClient.post(`/form/${name}/clone`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function createForm(body) {\n  return RestClient.post('/form', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function updateForm(name, body) {\n  return RestClient.patch(`/form/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useReducer, createContext } from 'react';\n\nimport _ from 'lodash';\n\nimport { produce } from 'immer';\n\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { QualifiedName, FormPrototypeSelect } from 'shared/components/form/editors/Custom';\n\nimport { space_summon } from 'shared/components/form/parameters/normalizeParameter';\n\nimport { FormParameters } from './FormParameters';\n\nimport { groupForm, ungroupForm } from './utils';\n\nimport { createForm, updateForm } from 'shared/api/form';\n\nconst groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_GROUP_INSTANCE': {\n      return produce(state, draft => {\n        draft.groups[action.pointers.group].instances.push(action.instance);\n      });\n    }\n\n    case 'REMOVE_GROUP_INSTANCE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances.splice(pointers.instance, 1);\n      });\n    }\n    case 'ADD_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        const field =\n          draft.groups[pointers.group].instances[pointers.instance].fields[pointers.field];\n\n        field.values.push({ instance: field.values.length, value: null });\n      });\n    }\n    case 'REMOVE_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances[pointers.instance].fields[\n          pointers.field\n        ].values.splice(action.index, 1);\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const PackedContext = createContext({ groups: [] });\n\nexport function FormEditor({ isNew, form, prototype, setResult }) {\n  const initialPacked = groupForm(prototype, _.cloneDeep(form));\n  /** Prepare initial relative name */\n  const split_name = form?.name?.split?.('.') || [''];\n\n  initialPacked.name = _.last(split_name);\n\n  const [packed, dispatch] = useReducer(groupsReducer, initialPacked);\n\n  const contextValue = { packed, dispatch };\n\n  return (\n    <PackedContext.Provider value={contextValue}>\n      <Formik\n        initialValues={{}}\n        onSubmit={(values, actions) =>\n          handleSubmit({\n            form,\n            packed,\n            isNew,\n            prototype,\n            values,\n            actions,\n            setResult\n          })\n        }\n      >\n        {({ values }) => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Form details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <QualifiedName name=\"form_name\" label=\"Name\" value={packed.name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"description\"\n                          label=\"Description\"\n                          value={packed.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column>\n                          <FormPrototypeSelect\n                            value={prototype?.name}\n                            disabled\n                            label=\"Form\"\n                            name=\"prototype\"\n                          />\n                        </Column>\n                      </Row>\n                      <FormParameters packed={packed} prototype={prototype} />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </PackedContext.Provider>\n  );\n}\n\nasync function handleSubmit({\n  prototype,\n  packed,\n  values,\n  actions,\n  setResult,\n  refresh,\n  isNew,\n  form\n}) {\n  const { form_name, description, prototype: protoName, ...fields } = values;\n\n  const extracted = extractFieldInfo(fields);\n\n  const exclusions = [null, 'None', ''];\n\n  const filteredExtractions = extracted.filter(entry => !exclusions.includes(entry.val));\n\n  const packedCopy = _.cloneDeep(packed);\n\n  /**\n   * Update name and description\n   */\n\n  /**\n   * extract and remap field values.\n   */\n  filteredExtractions.forEach(entry => {\n    const path = `groups[${entry.group}].instances[${entry.instance}].fields[${entry.field}].values[${entry.index}].value`;\n\n    _.set(packedCopy, path, entry.value);\n  });\n\n  /**\n   * unpack and prepare for sending\n   */\n  const unpacked = ungroupForm(packedCopy);\n\n  /**\n   * Very Important!\n   * Please read.\n   * Another cleanup process is needed.\n   * So there cannot be values for repeatable parameters where there is an empty array.\n   * It requires for some DAMNED reason, to have at least one null value.\n   */\n  unpacked.values = unpacked.values.map(value => {\n    if (Array.isArray(value.value)) {\n      /** for some reason, it's not removed from the first iteration for values. */\n      const filtered = { ...value, value: value.value.filter(v => !!v) };\n\n      if (filtered.value.length === 0) {\n        filtered.value = [null];\n      }\n\n      return filtered;\n    }\n\n    return value;\n  });\n\n  const name = form_name;\n\n  unpacked.name = name;\n\n  if (!isNew) {\n    const rename = [..._.initial(form.name.split('.')), form_name].join('.');\n    if (rename !== form.name) {\n      unpacked.rename = rename;\n      delete unpacked.name;\n    }\n  }\n\n  unpacked.description = description;\n  unpacked.prototype = protoName;\n  unpacked.version = prototype.version;\n\n  const request = isNew ? createForm : updateForm;\n\n  const request_args = [unpacked];\n\n  if (!isNew) {\n    // prepend name to request arguments.\n    request_args.unshift(form.name);\n  }\n\n  try {\n    await request(...request_args);\n    setResult('success');\n  } catch (e) {\n    setResult('fail');\n  }\n}\n\n// /** berry important :) */\nfunction extractFieldInfo(all) {\n  const key_struct = /^group-(\\d+)-instance-(\\d+)-field-(\\d+)-value-(\\d+)---(\\w+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      name: space_summon(matched[5]),\n      index: matched[4],\n      field: matched[3],\n      instance: matched[2],\n      lower: matched[1],\n      group: matched[1],\n      value\n    };\n  });\n}\n","import moment from 'moment';\n\nimport { getOutputText } from './getOutputText';\n\nexport const sendToEmail = (invocation, output, processName) => {\n  const text = getOutputText(output, invocation);\n  const date = moment(invocation.date_invoke)\n    .utc()\n    .format('MMMM, DD, YYYY, H:mm:ss');\n  const subject = processName ? `${processName} output` : 'Job output';\n  const body = `PROCESS: ${processName}\\nDATE: ${date}\\nSTATUS: ${invocation.status}\\n\\nOUTPUT:\\n\\n${text}`;\n  window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(body)}`;\n};\n","import { getOutputText } from './getOutputText';\n\nexport const copyToClipboard = (output, invocation) => {\n  const text = getOutputText(output, invocation);\n  navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\n    if (result.state === 'granted' || result.state === 'prompt') {\n      /* write to the clipboard */\n      navigator.clipboard.writeText(text).then(\n        () => {\n          /* successful */\n          console.log('[copyTextToClipboard] Copied:', text); // eslint-disable-line\n        },\n        () => {\n          /* write failed */\n          console.warn('[copyTextToClipboard] --- unable to write to clipboard!'); // eslint-disable-line\n        }\n      );\n    } else {\n      legacyMethod(text);\n    }\n  }, legacyMethod.bind(this, text));\n};\n\nfunction legacyMethod(text) {\n  const textArea = document.createElement('textarea');\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.classList.add('copyToClipboardInput');\n  textArea.focus();\n  textArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textArea);\n  console.log('[copyTextToClipboard-legacy] Copied:', text); // eslint-disable-line\n}\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nexport default function MUIselect({ label, handleSelect, selectedOption, options, disabled }) {\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const inputLabel = React.useRef(null);\n  const selectedValue = selectedOption ? selectedOption.value : '';\n\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  const handleChange = event => {\n    const findItem = options.find(item => item.value === event.target.value);\n    if (findItem) {\n      handleSelect(findItem);\n    }\n  };\n\n  return (\n    <FormControl disabled={disabled} fullWidth variant=\"outlined\">\n      <InputLabel ref={inputLabel} htmlFor=\"demo-simple-select-outlined-label\">\n        {label}\n      </InputLabel>\n      <Select\n        labelId=\"demo-simple-select-outlined-label\"\n        value={selectedValue}\n        onChange={handleChange}\n        labelWidth={labelWidth}\n      >\n        {options.map(item => (\n          <MenuItem key={item.value} disabled={item.disabled} value={item.value}>\n            {item.label}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './center.local.scss';\n\nexport class CenterComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport default CenterComponent;\n\nCenterComponent.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nCenterComponent.defaultProps = {\n  className: 'center-container'\n};\n","import moment from 'moment';\n\nexport function isBeforeDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n\n  const aYear = a.year();\n  const aMonth = a.month();\n\n  const bYear = b.year();\n  const bMonth = b.month();\n\n  const isSameYear = aYear === bYear;\n  const isSameMonth = aMonth === bMonth;\n\n  if (isSameYear && isSameMonth) return a.date() < b.date();\n  if (isSameYear) return aMonth < bMonth;\n  return aYear < bYear;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { string, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Overflow.scss';\n\nexport const Overflow = ({ className, component, children, variant }) => {\n  const nodeRef = useRef(null);\n  const [scrollableX, setScrollableX] = useState(false);\n  const [scrollableY, setScrollableY] = useState(false);\n  const [scrolledX, setScrolledX] = useState(false);\n  const [scrolledY, setScrolledY] = useState(false);\n\n  const Tag = component || 'div';\n\n  const onScroll = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolledY) {\n          setScrolledY(true);\n        }\n      } else if (scrolledY) {\n        setScrolledY(false);\n      }\n\n      if (event.currentTarget.scrollLeft) {\n        if (!scrolledX) {\n          setScrolledX(true);\n        }\n      } else if (scrolledX) {\n        setScrolledX(false);\n      }\n    },\n    [scrollableX, scrollableY, scrolledX, scrolledY]\n  );\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const element = nodeRef.current;\n      const box = {\n        width: element.clientWidth,\n        height: element.clientHeight,\n        scrollHeight: element.scrollHeight,\n        scrollWidth: element.scrollWidth\n      };\n\n      if (box.width < box.scrollWidth && !scrollableX) {\n        setScrollableX(true);\n      }\n\n      if (box.height < box.scrollHeight && !scrollableY) {\n        setScrollableY(true);\n      }\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={classnames(\n        'overflow-container',\n\n        {\n          [variant]: variant,\n          scrollableX,\n          scrollableY,\n          scrolledX,\n          scrolledY\n        },\n        className\n      )}\n    >\n      <Tag ref={nodeRef} className={classnames('overflow-scroller')} onScroll={onScroll}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nOverflow.propTypes = {\n  children: node,\n  className: string,\n  variant: oneOf(['white'])\n};\n\nOverflow.defaultProps = {};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nimport './Checkbox.local.scss';\n\nexport const Checkbox = ({ label, disabled, ...rest }) => {\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className=\"checkbox-label\"\n      control={\n        <MUICheckbox\n          className=\"checkbox\"\n          color=\"primary\"\n          icon={<CheckBoxOutlineBlankIcon />}\n          checkedIcon={<CheckBoxIcon />}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  label: node,\n  disabled: bool\n};\n","import React, { useContext } from 'react';\nimport { string, node, func, shape, bool } from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { ModalContext } from '../Modal/Modal';\n\nimport './ModalHeader.local.scss';\n\nexport const ModalHeader = ({\n  avatar,\n  icon,\n  title,\n  desc,\n  closeable,\n  onClose,\n  aria: providedAria\n}) => {\n  const context = useContext(ModalContext);\n  const aria = context.aria || providedAria;\n  const actions = context.actions || { close: onClose };\n\n  return (\n    <header className=\"modal-header\">\n      {avatar && <div className=\"icon-slot\">{avatar}</div>}\n      {/** TODO: this should actually be avatar :((( ... don't have time to refactor now need to patch through */}\n      {icon && (\n        <div className=\"icon-slot\">\n          <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n            {icon}\n          </Avatar>\n        </div>\n      )}\n      <div className=\"modal-title-slot\" id={aria['aria-labelledby']}>\n        <h1 className=\"modal-title\">{title}</h1>\n        {desc && (\n          <p className=\"modal-desc\" id={aria['aria-describedby']}>\n            {desc}\n          </p>\n        )}\n      </div>\n      {closeable && actions.close && (\n        <div className=\"modal-close-button-slot\">\n          <button className=\"modal-close-button\" onClick={actions.close}>\n            <CloseIcon fontSize=\"large\" />\n          </button>\n        </div>\n      )}\n    </header>\n  );\n};\n\nModalHeader.propTypes = {\n  title: node,\n  desc: node,\n  onClose: func,\n  closeable: bool,\n  avatar: node,\n  icon: node,\n  aria: shape({\n    'aria-labelledby': string,\n    'aria-describedby': string\n  })\n};\n\nModalHeader.defaultProps = {\n  closeable: true\n};\n","export default (task, duration = 10000) => {\n  let running = false;\n\n  async function runTask() {\n    if (!running) {\n      return;\n    }\n\n    try {\n      await task();\n      running = false;\n    } catch (e) {\n      setTimeout(() => runTask(), duration);\n    }\n  }\n\n  return {\n    start() {\n      if (running) {\n        return;\n      }\n      running = true;\n      runTask();\n    },\n    stop() {\n      running = false;\n    }\n  };\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\nimport { mdiFilter } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\n\nimport { Dropdown } from 'shared/components';\nimport { DayFilterEditor } from './components/day-filter-editor/day-filter-editor';\nimport { UserFilterEditor } from './components/user-filter-editor/user-filter-editor';\nimport { StatusFilterEditor } from './components/status-filter-editor/status-filter-editor';\nimport { FilterChip } from './components/filter-chip/filter-chip';\nimport { FilterLoader } from './components/filter-loader/filter-loader';\n\nimport './add-filter.local.scss';\n\n/**\n * TODO: @Razvan, @Constantin\n *\n * Review component structure / split smaller compoenents.\n * Add support for filters array. For now linked to search-area-container.jsx\n */\n\nfunction checkFilters(filters) {\n  if (!filters) {\n    return false;\n  }\n\n  if (filters.length) {\n    return true;\n  }\n\n  return true;\n}\n\nexport class AddFilter extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      /* draft: any filter value type */\n    };\n  }\n\n  filterRef = React.createRef();\n\n  render() {\n    const { filters, hasSearchTerm } = this.props;\n    const { draft } = this.state;\n    const hasFilters = checkFilters(filters);\n\n    return (\n      <ClickAwayListener onClickAway={this.handleClickOutside}>\n        <div>\n          {(!draft && !hasFilters && !hasSearchTerm) && this.renderDropdown()}\n          {draft && <FilterLoader type={draft.type} setFilterValue={this.saveDraftFilter} />}\n          {hasFilters && <FilterChip value={filters.value} type={filters.type} save={this.saveDraftFilter} />}\n        </div>\n      </ClickAwayListener>\n    );\n  }\n\n  handleClickOutside = () => {\n    this.setState({ draft: null });\n  }\n\n  saveDraftFilter = (filter) => {\n    this.props.updateFilters(filter);\n    // clear draft\n    this.setState({ draft: null });\n  }\n\n  loadFilter = (index, filter) => {\n    this.setState({ draft: { type: filter.value, editing: true } });\n  }\n\n  mapDropdownItem = (Item) => (\n    ({ ...Item, icon: <Item.icon />, name: <Item.name /> })\n  )\n\n  renderDropdown() {\n    return (\n      <Dropdown\n        target={(meta, actions) => (\n          <Button\n            size=\"small\"\n            className={`add-filter qa-add-filter ${(meta.isOpen ? 'expanded' : '')}`}\n            startIcon={<SvgIcon><Icon path={mdiFilter} /></SvgIcon>}\n            endIcon={meta.isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n            onClick={actions.toggle}\n            ref={meta.ref}\n          >\n            <FormattedMessage id=\"dashboard.add-filter\" />\n          </Button>\n        )}\n        onSelect={this.loadFilter}\n        items={[\n          DayFilterEditor.TypeDescriptor,\n          StatusFilterEditor.TypeDescriptor,\n          UserFilterEditor.TypeDescriptor,\n        ].map(this.mapDropdownItem, this)}\n      />\n    );\n  }\n}\n\nAddFilter.propTypes = {\n  filters: PropTypes.object,\n  updateFilters: PropTypes.func.isRequired,\n  hasSearchTerm: PropTypes.bool,\n};\n\nAddFilter.defaultProps = {\n  filters: {},\n  hasSearchTerm: false,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { DayFilterEditor } from '../day-filter-editor/day-filter-editor';\nimport { UserFilterEditor } from '../user-filter-editor/user-filter-editor';\nimport { StatusFilterEditor } from '../status-filter-editor/status-filter-editor';\n\nexport const FilterLoader = ({ type, setFilterValue, ...others }) => {\n  const FILTERS_MAP = {\n    status: StatusFilterEditor,\n    day: DayFilterEditor,\n    user: UserFilterEditor,\n  };\n\n  const FilterComponent = FILTERS_MAP[type];\n\n  return <FilterComponent setFilterValue={setFilterValue} {...others} />;\n};\n\nFilterLoader.propTypes = {\n  type: PropTypes.string.isRequired,\n  setFilterValue: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { ScheduleModal } from './components/ScheduleModal/ScheduleModal';\n\nexport const Schedule = ({ invocation }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const onClickHandler = () => {\n    setOpen(true);\n  };\n\n  const btnLabel = invocation ? 'Schedule' : 'New Schedule';\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          onClickHandler();\n        }}\n      >\n        {btnLabel}\n      </Button>\n      <ScheduleModal open={open} actions={modalActions} invocation={invocation} />\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { postNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\n\nexport const ConnectedNewNamespace = connect(null, {\n  request: fetchEntity\n})(NewNamespace);\n\nfunction NewNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Namespace\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: namespace ? namespace.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  postNamespace(body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function deleteEntity(name, type) {\n  try {\n    const { data } = await RestClient.delete(`/${type}/${name}`);\n\n    return { result: data.result };\n  } catch (e) {\n    return { result: 'fail' };\n  }\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { FormEditor } from './FormEditor';\n\nexport const ConnectedFormModal = connect(null, {\n  refresh: fetchEntity\n})(FormModal);\n\nfunction FormModal({ disabled, form = null, prototype, refresh }) {\n  const isNew = form === null;\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('use_form');\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult('use_form');\n      setOpen(false);\n      // should refresh be here as well?\n      // refresh('form');\n    }\n  };\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        {isNew ? 'New Form' : 'Edit'}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title={`${isNew ? 'New' : 'Edit'} Form`}\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"use_form\">\n              <FormEditor isNew={isNew} form={form} prototype={prototype} setResult={setResult} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was {isNew ? 'created' : 'updated'} successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      refresh('form');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\n\nexport const ServerForm = ({ server = {}, protocols, handleSubmission, editing, isNew }) => {\n  const [submission, setSubmission] = useState({});\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [showRSA, setShowRSA] = useState(false);\n  const handleAccountCreation = getCreateAccountHandler({\n    showRSA,\n    passwordEditable,\n    setSubmission,\n    isNew,\n    server\n  });\n\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapServerValues(entry) {\n    return {\n      name: entry.name || '',\n      description: entry.description || '',\n      host: entry.address || '',\n      port: entry.port || availablePorts[entry.protocol || 'SSH'],\n      user: entry.user || '',\n      server_password: entry.user_key || '',\n      confirm_server_password: '',\n      rsa_key: entry.user_key || '',\n      protocol: entry.protocol || 'SSH'\n    };\n  }\n\n  const initialValues = mapServerValues(server);\n\n  let extraValidations;\n\n  if (passwordEditable && !showRSA) {\n    extraValidations = values => {\n      const errors = {};\n\n      if (values.server_password !== values.confirm_server_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n\n      return errors;\n    };\n  }\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          validateOnChange={false}\n          validateOnMount={false}\n        >\n          {({ handleSubmit, dirty, isSubmitting }) => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column>\n                          <Row>\n                            <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                          </Row>\n                          <Row>\n                            <Column>\n                              <Text\n                                name=\"protocol\"\n                                required\n                                label=\"Protocol\"\n                                disabled={!isNew}\n                                options={allowedProtocols.map(p => ({\n                                  value: p.name,\n                                  label: p.name\n                                }))}\n                                value={initialValues.protocol}\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue('port', availablePorts[value]);\n                                }}\n                              />\n                            </Column>\n                          </Row>\n                        </Column>\n                        <Column>\n                          <Text\n                            name=\"description\"\n                            multiline\n                            required\n                            label=\"Description\"\n                            value={initialValues.description}\n                          />\n                        </Column>\n                      </Row>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column style={{ maxWidth: '80%', width: '80%' }}>\n                          <Text\n                            name=\"host\"\n                            label=\"Host\"\n                            required\n                            value={initialValues.host}\n                            disabled={editing}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column>\n                          <Text\n                            name=\"server_user\"\n                            label=\"User\"\n                            required\n                            value={initialValues.user}\n                          />\n                        </Column>\n                        {passwordEditable && <PasswordOrRSA allowed showRSA={showRSA} />}\n                      </Row>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <Button disabled={!dirty || isSubmitting} onClick={handleSubmit}>\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" required label=\"RSA Key\" />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row>\n          <Password name=\"server_password\" label=\"Password\" required />\n        </Row>\n        <Row>\n          <Password name=\"confirm_server_password\" label=\"Confirm Password\" required />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ showRSA, passwordEditable, setSubmission, isNew, server }) {\n  return function handleAccountCreation(values) {\n    const request_body = {\n      protocol: 'SSH',\n      user: values.server_user,\n      description: values.description,\n      address: values.host,\n      ...(passwordEditable && {\n        user_key: showRSA ? values.rsa_key : values.server_password\n      }),\n      port: Number.parseInt(values.port, 10)\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(server.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handleSubmission) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    // add this entry to redux structure\n    // addNewAccount(newAccount);\n    handleSubmission();\n  };\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\n\nimport _ from 'lodash';\n\nexport const DatabaseForm = ({\n  account = {},\n  protocols = [],\n  modes,\n  handleSubmission,\n  editing,\n  isNew\n}) => {\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [submission, setSubmission] = useState({});\n  const allowedProtocols = protocols.filter(p => {\n    const special = p?.special_required;\n\n    return special && special.includes('database');\n  });\n  const [showRSA, setShowRSA] = useState(false);\n\n  const handleAccountCreation = getCreateAccountHandler({\n    protocols: allowedProtocols,\n    modes,\n    showRSA,\n    isNew,\n    setSubmission,\n    account\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapAccountValues(entry = {}) {\n    return {\n      name: _.get(entry, 'name', ''),\n      protocol: _.get(entry, 'protocol', ''),\n      description: _.get(entry, 'description', ''),\n\n      host: _.get(entry, 'address', ''),\n\n      port: _.get(entry, 'port', availablePorts[_.get(entry, 'protocol')]),\n\n      database: _.get(entry, 'special.database', ''),\n      user: _.get(entry, 'user', ''),\n      mode: _.get(entry, 'special.mode', '')\n    };\n  }\n\n  const initialValues = mapAccountValues(account);\n\n  let extraValidations;\n\n  if (passwordEditable && !showRSA) {\n    extraValidations = values => {\n      const errors = {};\n\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n\n      return errors;\n    };\n  }\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer></Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          validateOnChange={false}\n          validateOnMount={false}\n        >\n          {({ values, handleSubmit, dirty, isSubmitting }) => {\n            const selectedProtocol =\n              values.protocol && protocols.find(protocol => protocol.name === values.protocol);\n            const allowRSA = !!selectedProtocol?.allow_rsa_key;\n            const withDatabase = selectedProtocol?.special_required?.includes('database');\n            const withMode = selectedProtocol?.name === 'ORACLE';\n\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column>\n                            <Row padded>\n                              <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                            </Row>\n                            <Row padded>\n                              <Column>\n                                <Text\n                                  name=\"protocol\"\n                                  required\n                                  label=\"Protocol\"\n                                  reactToChange={(value, formik) => {\n                                    formik.setFieldValue('port', availablePorts[value]);\n                                  }}\n                                  options={allowedProtocols.map(p => ({\n                                    value: p.name,\n                                    label: p.name\n                                  }))}\n                                  value={initialValues.protocol}\n                                />\n                              </Column>\n                            </Row>\n                          </Column>\n                          <Column>\n                            <Text\n                              multiline\n                              name=\"description\"\n                              label=\"Description\"\n                              required\n                              value={initialValues.description}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column style={{ maxWidth: '80%', width: '80%' }}>\n                            <Text name=\"host\" required label=\"Host\" value={initialValues.host} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                          </Column>\n                        </Row>\n                        <Row>\n                          {withDatabase && (\n                            <Column style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}>\n                              <Text\n                                name=\"database\"\n                                required\n                                label=\"Database\"\n                                value={initialValues.database}\n                              />\n                            </Column>\n                          )}\n                          {withMode && (\n                            <Column style={{ maxWidth: '20%' }}>\n                              <Text\n                                name=\"mode\"\n                                label=\"Mode\"\n                                required\n                                options={modes.map(mode => ({\n                                  value: mode.label,\n                                  label: mode.label\n                                }))}\n                                value={initialValues.mode}\n                              />\n                            </Column>\n                          )}\n                        </Row>\n                        <Row>\n                          <Column>\n                            <Text\n                              name=\"user\"\n                              label=\"User\"\n                              required\n                              value={initialValues.user || ''}\n                            />\n                          </Column>\n                          {passwordEditable && (\n                            <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                          )}\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && allowRSA && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && allowRSA && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <Button disabled={!dirty || isSubmitting} onClick={handleSubmit}>\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" label=\"RSA Key\" required />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row padded>\n          <Password name=\"password\" required label=\"Password\" />\n        </Row>\n        <Row padded>\n          <Password name=\"confirm_password\" required label=\"Confirm Password\" />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ protocols, showRSA, setSubmission, isNew, account }) {\n  return function handleAccountCreation(values) {\n    const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n    const allowRSA = !!selectedProtocol?.allow_rsa_key;\n    const withDatabase = selectedProtocol?.special_required?.includes('database');\n    const withMode = selectedProtocol?.name === 'ORACLE';\n\n    const request_body = {\n      user: values.user,\n      description: values.description,\n      protocol: values.protocol,\n      address: values.host,\n      user_key: allowRSA && showRSA ? values.rsa_key : values.password,\n      port: Number.parseInt(values.port, 10),\n      special: {\n        ...(withDatabase && { database: values.database }),\n        ...(withMode && { mode: values.mode })\n      }\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(account.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handler) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    handler();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchDataTypes(type = '') {\n  try {\n    const { data } = await RestClient.get(\n      `${CONSTANTS.BASE.ENDPOINTS.DATATYPES}${type ? `/${type}` : ''}`\n    );\n\n    return { result: data.result, data_types: data.data.data_types };\n  } catch (e) {\n    return { result: 'fail', data_types: [] };\n  }\n}\n","import { requestInvocation } from 'shared/api/invocation';\n\nexport function processQuery(uuid, process) {\n  return {\n    type: 'PROCESS_QUERY',\n    uuid,\n    process\n  };\n}\n\nexport function fetchInvocation(uuid, process) {\n  return function thunk(dispatch) {\n    dispatch({\n      type: 'FETCH_INVOCATION',\n      uuid,\n      process,\n      promise: requestInvocation(uuid)\n    });\n  };\n}\n\nexport function updateInvocation(invocation) {\n  return {\n    type: 'UPDATE_INVOCATION',\n    invocation\n  };\n}\n","export const getOutputText = (output, invocation) => {\n  if (!invocation || (!output && invocation.status !== 'FAILED')) return '';\n\n  let outputText = '';\n\n  if (invocation.status === 'FAILED') {\n    outputText = `The following error(s) occured:\n      ${invocation.errors.map(error => `• ${error}`).join('\\n')}\\n ${\n      output && output.length > 0 ? `Output: \\n${output.map(row => row.data.text).join('\\n')}` : ''\n    }`;\n  } else {\n    outputText = output.map(row => row.data.text).join('\\n');\n  }\n\n  return outputText;\n};\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiCubeOutline, mdiCubeScan, mdiMemory, mdiCalendarBlank } from '@mdi/js';\nimport Cores from '../../../../assets/images/server_core.svg';\n\nimport './ServerCard.local.scss';\n\nexport const ServerCard = ({ server, selected, toggleSelectedCallback, type }) => {\n  if (type === 'virtual') {\n    return (\n      <div className=\"virtual-server-card\">\n        <Avatar className=\"server-avatar\">\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </Avatar>\n        <div className=\"server-info\">\n          <span className=\"name\">{server.name}</span>\n          <div className=\"details\">\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiCubeScan} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.hosts}</span>\n              <span className=\"label\">Hosts</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiMemory} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.cpu}</span>\n              <span className=\"label\">CPUs</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <img className=\"img-responsive\" src={Cores} alt=\"server core icon\" />\n              </span>\n              <span className=\"value\">{server.cores}</span>\n              <span className=\"label\">Cores</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classnames('server-card', { selected })}\n      onClick={() => toggleSelectedCallback(server)}\n      role=\"presentation\"\n    >\n      <Avatar className=\"server-avatar\">\n        <SvgIcon>\n          <Icon path={mdiDns} />\n        </SvgIcon>\n      </Avatar>\n      <LightTooltip placement=\"bottom\" title={server.name}>\n        <span className=\"server-name\">{server.name}</span>\n      </LightTooltip>\n      <LightTooltip\n        placement=\"bottom\"\n        title={`Last updated: ${moment(server.collDate).format('DD.MM.YYYY')}`}\n      >\n        <span className=\"calendar-icon\">\n          <SvgIcon>\n            <Icon path={mdiCalendarBlank} />\n          </SvgIcon>\n        </span>\n      </LightTooltip>\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './ServersTile.local.scss';\n\nconst colors = {\n  1: '#6DF0D2',\n  2: '#1DE4BD',\n  4: '#1AC9E6',\n  6: '#7D3AC1',\n  8: '#EA7369',\n  16: '#EF7E32',\n  24: '#EABD3B'\n};\n\nexport const ServersTile = ({ servers, isSingle }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.nrCores;\n  }, 0);\n\n  const cores = [];\n  servers.map(sv => {\n    const index = cores.findIndex(core => core.nrCores === sv.nrCores);\n    if (index > -1) {\n      cores[index].count += 1;\n    } else {\n      cores.push({ count: 1, nrCores: sv.nrCores });\n    }\n\n    return null;\n  });\n\n  function getData() {\n    const data = [];\n\n    cores.map(core => {\n      data.push({\n        value: core.count,\n        description: `${core.nrCores}C`,\n        color: colors[core.nrCores]\n      });\n\n      return null;\n    });\n\n    return data;\n  }\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDns} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={servers.length} />\n        <StringLabel text={isSingle ? 'Server' : 'Total servers'} />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"first-column\">\n          <div className=\"value\">{total}</div>\n          <div className=\"label\">Cores</div>\n        </div>\n\n        <div className=\"second-column\">\n          <div className=\"bar-chart\">\n            <HorizontalBar\n              height={36}\n              showTextIn\n              fontColor=\"#fff\"\n              fontWeight=\"bold\"\n              data={getData()}\n            />\n          </div>\n          <div className=\"label\">Server Cores Distribution</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nexport default class HorizontalBar extends Component {\n  constructor(props) {\n    super(props);\n    //\n    this.state = {\n      listBars: [],\n      data: this.props.data\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!_.isEqual(this.props, prevProps)) {\n      this.setState(state => ({\n        ...state,\n        listBars: this.getListBarWithOtherParameters(),\n        data: this.props.data\n      }));\n    }\n  }\n\n  componentDidMount() {\n    this.setState(state => ({\n      ...state,\n      listBars: this.getListBarWithOtherParameters(),\n      data: this.props.data\n    }));\n  }\n\n  /**\n   * Make the calculus of total width\n   */\n  calcWidthTotal() {\n    let widthTotal = 0;\n    this.props.data.forEach(bar => {\n      widthTotal = widthTotal + bar.value;\n    });\n    return widthTotal;\n  }\n\n  /**\n   * Returns the same list of bars with position and barWidth\n   */\n  getListBarWithOtherParameters() {\n    const widthTotal = this.calcWidthTotal();\n    let position = 0;\n    let barWidth = 0;\n    const listBars = this.props.data.map(bar => {\n      position = position + barWidth;\n      barWidth = (bar.value * 100) / widthTotal;\n      bar = Object.assign({ position: position, barWidth: barWidth }, bar);\n      return bar;\n    });\n    return listBars;\n  }\n\n  /**\n   * OnClick Event\n   */\n  onClick(evt, bar) {\n    Object.assign(evt, { bar: bar });\n    if (this.props.onClick) {\n      this.props.onClick(evt);\n    }\n  }\n\n  /**\n   * Returns a new calculated rgb color\n   */\n  randomColor() {\n    const r = Math.floor(Math.random() * 255);\n    const g = Math.floor(Math.random() * 255);\n    const b = Math.floor(Math.random() * 255);\n\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  /**\n   * Returns a list of texts of the bars into a div component\n   */\n  getListTextBar(showTextInsteadValue) {\n    const { showTextWithValue } = this.props;\n    const listText = this.state.listBars.map((bar, index) => {\n      return (\n        <div\n          key={index}\n          style={{\n            position: 'relative',\n            float: 'left',\n            width: `${bar.barWidth}%`,\n            fontSize: '90%'\n          }}\n          onClick={e => this.onClick(e, bar)}\n        >\n          {showTextInsteadValue && bar.name}\n          {showTextInsteadValue && bar.name && showTextWithValue ? ': ' : ''}\n          {(!showTextInsteadValue || showTextWithValue) && (bar.description || bar.value || '')}\n        </div>\n      );\n    });\n    return listText;\n  }\n\n  renderBars() {\n    const listBars = [];\n    const { showTextWithValue, showTextIn, showValueIn } = this.props;\n\n    listBars.push(\n      this.state.listBars.map((bar, index) => {\n        return (\n          <g key={index} onClick={e => this.onClick(e, bar)}>\n            <rect\n              width={`${bar.barWidth + 0.1}%`}\n              height={this.props.height}\n              style={{\n                fill: bar.color || this.randomColor()\n              }}\n              x={`${bar.position}%`}\n            />\n            {(this.props.showTextIn || this.props.showValueIn) && (\n              <text\n                style={{ fill: this.props.fontColor, fontSize: '90%' }}\n                fontWeight={this.props.fontWeight || 'normal'}\n                x={`${bar.position + (bar.barWidth + 0.1) / 2}%`}\n                y=\"50%\"\n                dy=\"0.35em\"\n              >\n                {showTextIn && bar.name}\n                {bar.name && showTextIn ? ': ' : ''}\n                {(showValueIn || showTextWithValue) && (bar.description || bar.value || '1')}\n              </text>\n            )}\n            <title>{`${bar.name || ''}${bar.name ? ': ' : ''}${bar.description ||\n              bar.value ||\n              '1'}`}</title>\n          </g>\n        );\n      })\n    );\n    return listBars;\n  }\n\n  renderLabel(showTextInsteadValue) {\n    return (\n      <div\n        id={`${this.props.id}_text`}\n        style={{\n          textAlign: 'left',\n          display: 'flex',\n          width: '100%'\n        }}\n      >\n        {this.getListTextBar(showTextInsteadValue)}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.props.showTextUp || this.props.showValueUp) &&\n          this.renderLabel(this.props.showTextUp)}\n        <svg id={this.props.id} width=\"100%\" height={this.props.height}>\n          {this.renderBars()}\n        </svg>\n        {(this.props.showTextDown || this.props.showValueDown) &&\n          this.renderLabel(this.props.showTextDown)}\n      </React.Fragment>\n    );\n  }\n}\n\nHorizontalBar.propTypes = {\n  data: PropTypes.array.isRequired,\n  id: PropTypes.string,\n  height: PropTypes.number,\n  showTextIn: PropTypes.bool,\n  showTextUp: PropTypes.bool,\n  showTextDown: PropTypes.bool,\n  showTextWithValue: PropTypes.bool,\n  showValueIn: PropTypes.bool,\n  showValueUp: PropTypes.bool,\n  showValueDown: PropTypes.bool,\n  fontColor: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nHorizontalBar.defaultProps = {\n  height: 30,\n  showTextIn: false,\n  showTextUp: false,\n  showTextDown: false,\n  showTextWithValue: true,\n  showValueIn: false,\n  showValueUp: false,\n  showValueDown: false,\n  fontColor: 'white',\n  id: 'hsbar'\n};\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport './DatabasesTile.local.scss';\n\nexport const DatabasesTile = ({ servers }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.totalDBs;\n  }, 0);\n\n  const dbs = {\n    eelic_count: 0,\n    selic_count: 0\n  };\n  servers.map(sv => {\n    dbs.eelic_count += sv.eelic_count;\n    dbs.selic_count += sv.selic_count;\n\n    return null;\n  });\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDatabase} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={total} />\n        <StringLabel text=\"Total databases\" />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"info\">\n          <div className=\"first-column\">\n            <div className=\"value-eed\">{dbs.eelic_count}</div>\n            <div className=\"label\">Enterprise Edition Databases</div>\n          </div>\n          <div className=\"second-column\">\n            <div className=\"value-sed\">{dbs.selic_count}</div>\n            <div className=\"label\">Standard Edition Databases</div>\n          </div>\n        </div>\n        <div className=\"bar-chart\">\n          <HorizontalBar\n            height={8}\n            data={[\n              { value: dbs.eelic_count, color: '#19AADE' },\n              { value: dbs.selic_count, color: '#7D3AC1' }\n            ]}\n          />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","export function mapAccountsTree(data) {\n  // data is split into 3 levels,\n  // first level is defined by `protocol`\n  // we find root nodes by matching protocols.\n  const roots = data.reduce(splitIntoRootsByProtocol, []);\n  roots.forEach(root => {\n    // define the servers map\n    // all server and database objects for this protocol\n    root.servers = root.nodes.reduce(splitIntoRootsByAddress, {});\n    const servers = Object.keys(root.servers);\n    servers.forEach(name => {\n      const server = root.servers[name];\n      server.databases = server.nodes.reduce(splitIntoRootsByDatabase, {});\n    });\n  });\n  return roots;\n}\nexport function splitIntoRootsByProtocol(acc, item) {\n  const protocolBlacklist = ['SSH'];\n  const { protocol } = item;\n  if (protocolBlacklist.includes(protocol)) {\n    return acc;\n  }\n  if (!(item.special && item.special.database)) {\n    return acc;\n  }\n  const root = acc.find(r => r.name === protocol);\n  if (root) {\n    root.nodes = [...root.nodes, item];\n  } else {\n    acc.push({\n      name: item.protocol,\n      path: item.protocol,\n      type: 'dbms',\n      nodes: [item],\n      servers: []\n    });\n  }\n  return acc;\n}\nfunction splitIntoRootsByAddress(serversMap, item) {\n  const { address } = item;\n  const existingEntry = serversMap[address];\n  if (existingEntry) {\n    existingEntry.nodes = [...existingEntry.nodes, item];\n  } else {\n    serversMap[address] = {\n      name: item.address,\n      path: `${item.protocol}--${item.address}`,\n      type: 'server',\n      nodes: [item]\n    };\n  }\n  return serversMap;\n}\nfunction splitIntoRootsByDatabase(databaseMap, item) {\n  const {\n    special: { database: name }\n  } = item;\n  databaseMap[name] = {\n    name,\n    path: `${item.protocol}--${item.address}--${name}`,\n    node: item\n  };\n  return databaseMap;\n}\n\n/**\n *\n * @param {*} content // /account call data\n *\n * This will resturcture the list of accounts into a list of dbms entries with servers and databases.\n */\n\nexport function mapAccountsNewStructure(content, protocols) {\n  const accounts = { raw: content };\n\n  let protocolsArr = protocols.map(p => p.name);\n\n  if (protocolsArr.length === 0) {\n    protocolsArr = ['CREDENTIAL', 'ILOM', 'SSH'];\n  }\n\n  accounts.databases = content.filter(account => account.special.database);\n  accounts.dbms = [];\n\n  /* eslint-disable */\n  accounts.databases.forEach(function resolver(entry) {\n    /**\n     * Add a path def to the database entry\n     * path descriptions are made here, to mimic somewhat the old mapping.\n     * Keep other properties.\n     */\n    const database = {\n      ...entry,\n      path: `${entry.protocol}--${entry.address}--${entry.special.database}`\n    };\n\n    let dbms = accounts.dbms.find(dbms => dbms.name === database.protocol);\n\n    const dbServer = accounts.raw.find(\n      account => protocolsArr.includes(account.protocol) && account.address === database.address\n    );\n\n    let server;\n\n    // a server entry exists\n    if (dbServer) {\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        ...dbServer,\n        databases: [database]\n      };\n    } else {\n      // db does not have an associated server connection so create a 'placeholder' for server\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        address: database.address,\n        databases: [database]\n      };\n    }\n\n    if (!dbms) {\n      /**\n       * Add a new dbms entry\n       *\n       * path descriptions are made here, to mimic somewhat the old mapping.\n       */\n      accounts.dbms.push({\n        name: database.protocol,\n        protocol: database.protocol,\n        path: database.protocol,\n        databases: [database],\n        servers: [server]\n      });\n\n      return;\n    }\n\n    /**\n     * DBMS exists. Update it\n     */\n    dbms.databases.push(database);\n\n    // find server entr\n    let dbmsServerEntry = dbms.servers.find(sv => sv.address === database.address);\n\n    if (!dbmsServerEntry) {\n      dbms.servers.push({ ...server, databases: [database] });\n    } else {\n      if (dbmsServerEntry.databases) {\n        dbmsServerEntry.databases.push(database);\n      } else {\n        dbmsServerEntry.databases = [database];\n      }\n    }\n  }, accounts);\n\n  // find all existing servers\n  const allServers = content.filter(entry => protocolsArr.includes(entry.protocol));\n\n  // check if servers have a database\n  // if they don't add them in a DBMS called \"OTHER\".\n  // will be removed from there as soon as they get a database\n  allServers.forEach(server => {\n    const exists = accounts.databases.find(db => db.address === server.address);\n\n    if (!exists) {\n      const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n\n      if (otherIndex > -1) {\n        accounts.dbms[otherIndex].servers.push({\n          path: `OTHER--${server.address}`,\n          ...server,\n          databases: []\n        });\n      } else {\n        accounts.dbms.push({\n          name: 'OTHER',\n          path: 'OTHER',\n          protocol: 'OTHER',\n          servers: [{ path: `OTHER--${server.address}`, ...server, databases: [] }]\n        });\n      }\n    }\n  });\n\n  const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n  if (otherIndex > -1 && accounts.dbms[otherIndex].servers.length === 0) {\n    accounts.dbms.splice(otherIndex, 1);\n  }\n  return accounts;\n}\n\nexport function mapProtocols(protocols) {\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return allowedProtocols;\n}\n","export function mapAllServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const index = acc.findIndex(sv => sv.name === entry.srvname);\n    if (index > -1) {\n      acc[index].totalDBs += 1;\n      acc[index].eelic_count += entry.eelic_count;\n      acc[index].selic_count += entry.selic_count;\n      acc[index].sids.push(entry);\n      acc[index].installedOptions.aa_count +=\n        parseInt(entry.aa_count, 10) === 1 ? parseInt(entry.aa_count, 10) : 0;\n      acc[index].installedOptions.ac_count +=\n        parseInt(entry.ac_count, 10) === 1 ? parseInt(entry.ac_count, 10) : 0;\n      acc[index].installedOptions.as_count +=\n        parseInt(entry.as_count, 10) === 1 ? parseInt(entry.as_count, 10) : 0;\n      acc[index].installedOptions.dv_count +=\n        parseInt(entry.dv_count, 10) === 1 ? parseInt(entry.dv_count, 10) : 0;\n      acc[index].installedOptions.mt_count +=\n        parseInt(entry.mt_count, 10) === 1 ? parseInt(entry.mt_count, 10) : 0;\n      acc[index].installedOptions.adg_count +=\n        parseInt(entry.adg_count, 10) === 1 ? parseInt(entry.adg_count, 10) : 0;\n      acc[index].installedOptions.rac_count +=\n        parseInt(entry.rac_count, 10) === 1 ? parseInt(entry.rac_count, 10) : 0;\n      acc[index].installedOptions.olap_count +=\n        parseInt(entry.olap_count, 10) === 1 ? parseInt(entry.olap_count, 10) : 0;\n      acc[index].installedOptions.part_count +=\n        parseInt(entry.part_count, 10) === 1 ? parseInt(entry.part_count, 10) : 0;\n      acc[index].installedOptions.in_mem_db_count +=\n        parseInt(entry.in_mem_db_count, 10) === 1 ? parseInt(entry.in_mem_db_count, 10) : 0;\n    } else {\n      acc.push({\n        name: entry.srvname,\n        collDate: entry.collDate,\n        nrCores: entry.Ncore,\n        totalDBs: 1,\n        eelic_count: entry.eelic_count,\n        selic_count: entry.selic_count,\n        sids: [entry],\n        installedOptions: {\n          aa_count: parseInt(entry.aa_count, 10) === 1 ? 1 : 0,\n          ac_count: parseInt(entry.ac_count, 10) === 1 ? 1 : 0,\n          as_count: parseInt(entry.as_count, 10) === 1 ? 1 : 0,\n          dv_count: parseInt(entry.dv_count, 10) === 1 ? 1 : 0,\n          mt_count: parseInt(entry.mt_count, 10) === 1 ? 1 : 0,\n          adg_count: parseInt(entry.adg_count, 10) === 1 ? 1 : 0,\n          rac_count: parseInt(entry.rac_count, 10) === 1 ? 1 : 0,\n          olap_count: parseInt(entry.olap_count, 10) === 1 ? 1 : 0,\n          part_count: parseInt(entry.part_count, 10) === 1 ? 1 : 0,\n          in_mem_db_count: parseInt(entry.in_mem_db_count, 10) === 1 ? 1 : 0\n        }\n      });\n    }\n    return acc;\n  }, []);\n\n  serversInfo.map(sv => {\n    const total = Object.values(sv.installedOptions).reduce((a, b) => a + b);\n    sv.totalInstalledOptions = total;\n\n    return null;\n  });\n\n  serversInfo.sort((a, b) => a.nrCores - b.nrCores);\n\n  return serversInfo;\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getAlias(name) {\n  return RestClient.get(`/alias/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchAlias(name, body) {\n  return RestClient.patch(`/alias/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postAlias(body) {\n  return RestClient.post('/alias', body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useState } from 'react';\nimport { string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\n\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Input, Button } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Center } from 'shared/components';\n\nimport './ChangePassword.local.scss';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const ChangePassword = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  /**\n   * Backend call result\n   */\n  const [result, setResult] = useState({ done: false, error: undefined });\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Change Password\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '392px',\n            minHeight: '350px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-password\">\n                <GroupIcon />\n              </Avatar>\n            }\n            title=\"Change Password\"\n          />\n          {result.done ? (\n            <>\n              <Center>\n                <Result type={result.error ? 'fail' : 'success'}>\n                  <Result.Text>\n                    {result.error ? 'Password Change Failed!' : 'Password Changed!'}\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer></Paper.Footer>\n            </>\n          ) : (\n            <Formik\n              initialValues={{\n                password: '',\n                confirm: ''\n              }}\n              validate={values => {\n                const errors = {};\n\n                if (!values.password) {\n                  errors.password = 'Field is required';\n                }\n\n                if (!values.confirm) {\n                  errors.confirm = 'Please reenter your new password';\n                }\n\n                if (values.password !== values.confirm) {\n                  errors.confirm = 'Passwords do not match';\n                }\n\n                return errors;\n              }}\n              onSubmit={async (values, actions) => {\n                actions.setSubmitting(true);\n\n                try {\n                  await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`, {\n                    password: values.password\n                  });\n\n                  actions.setSubmitting(false);\n                  setResult({ done: true });\n                } catch (e) {\n                  actions.setSubmitting(false);\n                  setResult({ done: true, error: e });\n                }\n              }}\n            >\n              {({ dirty, isSubmitting, isValid, handleSubmit }) => (\n                <>\n                  <Paper.Content scrollable>\n                    <Form className=\"password-form\">\n                      <Row>\n                        <Field name=\"password\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                required\n                                label=\"Password\"\n                                placeholder=\"New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                      <Row>\n                        <Field name=\"confirm\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                required\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                label=\"Confirm Password\"\n                                placeholder=\"Confirm New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                    </Form>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        disabled={!dirty || !isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </>\n              )}\n            </Formik>\n          )}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nChangePassword.propTypes = {\n  user: string\n};\n\nexport const ChangePasswordContainer = connect(state => {\n  const user = selectedUser(state);\n\n  return { user: user.name };\n})(ChangePassword);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import { actions } from 'session/store/actions';\nimport { actionStates } from 'shared/lib';\nimport { fromJS } from 'immutable';\n\nexport const initialState = {\n  login: {\n    status: '',\n    errors: [],\n  },\n  authorization: {\n    status: actionStates.LOADING,\n  },\n  currentUser: {\n    id: '',\n    name: '',\n  },\n};\n\nexport const reducerActions = {\n  // authorization Check\n  [actions.checkAuthorization.getLoadingAction()]: (state) => state\n    .setIn(['authorization', 'status'], actionStates.LOADING),\n  [actions.checkAuthorization.getSuccessAction()]: (state, payload) => state.set('currentUser', fromJS({\n    id: payload.id,\n    name: payload.data.data.source.user,\n  }))\n    .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.checkAuthorization.getFailAction()]: (state) => state\n    .setIn(['authorization', 'status'], actionStates.FAIL),\n\n  // login\n  [actions.login.getLoadingAction()]: (state) => state.setIn(['login', 'status'], actionStates.LOADING),\n  [actions.login.getSuccessAction()]: (state) => state.setIn(['login', 'status'], actionStates.SUCCESS)\n    .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.login.getFailAction()]: (state, errors) => state.setIn(['login', 'status'], actionStates.FAIL)\n    .setIn(['login', 'errors'], fromJS(errors)),\n};\n","import { checkDeamonStatus } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  await store.dispatch(checkDeamonStatus());\n\n  throw new Error('polling-daemon');\n}\n\nexport const daemonPoller = withPolling(task, 60000);\n","import { actions } from 'dashboard/store/actions';\n\nexport const initialState = {\n  filterStatus: 'ALL'\n};\n\nexport const reducerActions = {\n  [actions.setFilterStatus.getEventAction()]: (state, status) => {\n    const nextState = state.set('filterStatus', status);\n    return nextState;\n  }\n};\n","import { actions } from 'shared/store/actions';\nimport { actions as sessionActions } from 'session/store/actions';\nimport { fromJS } from 'immutable';\nimport moment from 'moment';\n\nlet sessionGlobalFilters = {\n  startDate: moment()\n    .subtract(7, 'd')\n    .startOf('day')\n    .unix(),\n  endDate: moment()\n    .add(1, 'days')\n    .startOf('day')\n    .unix()\n};\n\nsessionGlobalFilters = JSON.parse(localStorage.getItem('global-filters')) || sessionGlobalFilters;\n\nexport const initialState = {\n  globalFilters: sessionGlobalFilters,\n  jobs: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false,\n    callFailed: false,\n    reason: ''\n  },\n  connections: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  searchResults: {\n    jobs: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    },\n    processes: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    }\n  }\n};\n\nexport const reducerActions = {\n  [actions.setGlobalFilters.getSuccessAction()]: (state, payload) => {\n    const nextState = state\n      .setIn(['globalFilters', 'startDate'], payload.startDate.unix())\n      .setIn(['globalFilters', 'endDate'], payload.endDate.unix());\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.login.getSuccessAction()]: state => {\n    const nextState = state\n      .setIn(\n        ['globalFilters', 'startDate'],\n        moment()\n          .subtract(7, 'd')\n          .startOf('day')\n          .unix()\n      )\n      .setIn(\n        ['globalFilters', 'endDate'],\n        moment()\n          .add(1, 'days')\n          .startOf('day')\n          .unix()\n      );\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.logout.getSuccessAction()]: state => {\n    localStorage.removeItem('global-filters');\n    return state;\n  },\n  [actions.getJobs.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        content: payload.data.invocations,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false,\n        callFailed: false,\n        reason: ''\n      })\n    ),\n  [actions.getJobs.getFailAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        callFailed: true,\n        fetching: false,\n        page_count: 1,\n        content: [],\n        total_count: 0,\n        reason: payload.reason\n      })\n    ),\n  [actions.getJobs.getLoadingAction()]: state => state.setIn(['jobs', 'fetching'], true),\n  [actions.getConnections.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'connections',\n      fromJS({\n        content: payload.data.accounts,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getConnections.getLoadingAction()]: state =>\n    state.setIn(['connections', 'fetching'], true),\n  [actions.searchJobs.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'jobs'],\n      fromJS({\n        content: payload.data.invocations,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchJobs.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], true),\n  [actions.searchProcesses.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'processes'],\n      fromJS({\n        content: payload.data.processes,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchProcesses.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], true)\n};\n","import { actions } from 'core/store/actions';\n\nexport const initialState = {\n  notifications: [],\n};\n\nexport const reducerActions = {\n  [actions.addNotifications.getEventAction()]: (state, payload) => state\n    .merge('notifications', payload),\n  [actions.removeNotification.getEventAction()]: (state, notificationIndex) => state\n    .removeIn(['notifications', notificationIndex]),\n};\n","import { notificationActions } from './notification.action';\n\nexport const actions = {\n  ...notificationActions,\n};\n","import {\n  TextParameter,\n  BooleanParameter,\n  IntegerParameter,\n  EmailParameter,\n  PhoneNumberParameter,\n  ProcessParameter,\n  VariadicParameter,\n  AccountParameter,\n  FQNameParameter,\n  PasswordParameter\n} from './variants';\n\nimport { want, wantComponent } from 'shared/lib/want';\n\n/**\n * Main switcher for Parameter fields.\n */\nexport const WantParameter = wantComponent(\n  want(\n    {\n      text: TextParameter,\n      number: IntegerParameter,\n      select: TextParameter,\n      phone: PhoneNumberParameter,\n      boolean: BooleanParameter,\n      email: EmailParameter,\n      fqname: FQNameParameter,\n      account: AccountParameter,\n      process: ProcessParameter,\n      variadic_parameter: VariadicParameter,\n      password: PasswordParameter\n    },\n    TextParameter,\n    props => {\n      const { editor } = props.parameter;\n\n      return editor.type;\n    }\n  )\n);\n\nexport default WantParameter;\n","/* eslint-disable */\n\nimport _ from 'lodash';\n\nexport const groupForm = (prototype, form = null) => {\n  if (form === null) {\n    form = {\n      name: null,\n      description: null,\n      prototype: prototype.name,\n      version: prototype.version,\n      groups: [...prototype.groups],\n      values: prototype.fields.map(field => {\n        return { ...field, value: field.deflt };\n      })\n    };\n  }\n\n  if (!form.hasOwnProperty('groups')) {\n    form.groups = [...prototype.groups];\n    form.values = prototype.fields.map(field => {\n      const value = form.values.find(value => value.position === field.position);\n      return {\n        ...value,\n        ...field\n      };\n    });\n  }\n\n  if (form.hasOwnProperty('values')) {\n    const maxPosition = _.max(form.values.map(value => value.position));\n\n    // important point\n    if (form.groups.length > 0) {\n      // Mark any existing groups as non-virtual\n      form.groups = form.groups.map(group => {\n        return { ...group, virtual: false };\n      });\n      // Make sure groups are properly sorted\n      form.groups = _.sortBy(form.groups, 'lower');\n      // First we need to create any virtual groups, if needed\n      let position = 0;\n      while (position <= maxPosition) {\n        // First, find the group of which this value is a member, if any\n        const currentGroup = form.groups.find(\n          group => group.lower <= position && group.upper > position\n        );\n        if (!!currentGroup) {\n          // We already have a group for this position. Leapfrog to the next\n          position = currentGroup.upper;\n        } else {\n          // OK, we couldn't find the current group, so find the next one\n          const nextGroup = form.groups.find(group => group.lower > position);\n          if (!!nextGroup) {\n            // Add a new virtual group that covers this position up to the next group\n            form.groups = [\n              {\n                name: null,\n                virtual: true,\n                lower: position,\n                upper: nextGroup.lower,\n                iteration_limit: 1\n              },\n              ...form.groups\n            ];\n            // Leapfrog\n            position = nextGroup.upper;\n          } else {\n            // We're at the end. Add a covering virtual group\n            form.groups.push({\n              name: null,\n              virtual: true,\n              lower: position,\n              upper: maxPosition + 1,\n              iteration_limit: 1\n            });\n          }\n        }\n      }\n    } else {\n      // We have no groups at all. Create a single virtual group for all values.\n      form.groups.push({\n        name: null,\n        virtual: true,\n        lower: 0,\n        upper: maxPosition + 1,\n        iteration_limit: 1\n      });\n    }\n\n    form.groups = _.sortBy(form.groups, 'lower').map(group => {\n      group.instances = [];\n      return group;\n    });\n    form.values = _.sortBy(form.values, 'position');\n    // OK, we have the groups, now we need to add the instances and fields\n    for (let group of form.groups) {\n      const values = form.values.filter(\n        value => value.position >= group.lower && value.position < group.upper\n      );\n      if (!group.virtual || group.iteration_limit > 1) {\n        // How many instances do we need?\n        const instanceCount = Math.max(\n          1,\n          _.max(values.map(value => (value.value === null ? 1 : value.value.length)))\n        );\n        for (let g = 0; g < instanceCount; g++) {\n          let instance = {\n            instance: g,\n            fields: values.map(value => {\n              let field = {\n                name: value.name,\n                description: value.description,\n                meta: value.meta,\n                position: value.position,\n                data_type: value.data_type,\n                is_repeatable: value.is_repeatable,\n                is_required: value.is_required,\n                values: []\n              };\n              if (Array.isArray(value.value) && value.value.length > g) {\n                if (value.is_repeatable) {\n                  for (let f = 0; f < value.value[g].length; f++) {\n                    field.values.push({\n                      instance: f,\n                      value: value.value[g][f]\n                    });\n                  }\n                } else {\n                  field.values.push({\n                    instance: 0,\n                    value: value.value[g]\n                  });\n                }\n              }\n              return field;\n            })\n          };\n          group.instances.push(instance);\n        }\n      } else {\n        // Iteration limit is 1\n        let instance = {\n          instance: 0,\n          fields: values.map(value => {\n            let field = {\n              name: value.name,\n              description: value.description,\n              meta: value.meta,\n              position: value.position,\n              data_type: value.data_type,\n              is_repeatable: value.is_repeatable,\n              is_required: value.is_required,\n              values: []\n            };\n            if (field.is_repeatable) {\n              if (Array.isArray(value.value)) {\n                for (let f = 0; f < value.value.length; f++) {\n                  field.values.push({\n                    instance: f,\n                    value: value.value[f]\n                  });\n                }\n              }\n            } else {\n              field.values.push({\n                instance: 0,\n                value: value.value\n              });\n            }\n            return field;\n          })\n        };\n        group.instances.push(instance);\n      }\n    }\n    delete form.values;\n  }\n  // For repeating groups and fields, there must always be one \"empty\" group and/or field at the end.\n  for (let group of form.groups) {\n    // if (group.iteration_limit > 1) {\n    //     const instance = _.last(group.instances)\n    //     const values = _.flatten(instance.fields.map(field => field.values.map(value => value.value)))\n    //     // If at least one value is non-null, then we need to add a new empty group at the end.\n    //     if (!_.every(values, value => value === null)) {\n    //         // OK, we need to add another empty instance\n    //         group.instances.push({\n    //             instance: instance.instance + 1,\n    //             fields: instance.fields.map(field => {\n    //                 return {\n    //                     ...field,\n    //                     values: []\n    //                 }\n    //             })\n    //         })\n    //     }\n    // }\n\n    // Now we check the individual fields\n    // Each field must have at least one value.\n    // For repeating fields, there must always be a final empty instance.\n    for (let instance of group.instances) {\n      for (let field of instance.fields) {\n        if (field.values.length === 0) {\n          field.values.push({\n            instance: 0,\n            value: null\n          });\n          // } else if (field.is_repeatable) {\n          //     const value = _.last(field.values)\n          //     if (value.value !== null) {\n          //         field.values.push({\n          //             instance: value.instance + 1,\n          //             value: null\n          //         })\n          //     }\n        }\n      }\n    }\n  }\n  return form;\n};\n\nexport const ungroupForm = form => {\n  let packed = {\n    description: form.description,\n    values: []\n  };\n  let names = {};\n  for (const group of form.groups) {\n    for (const instance of group.instances) {\n      for (const field of instance.fields) {\n        names[field.name] = {\n          position: field.position,\n          grouped: !group.virtual || group.iteration_limit > 1,\n          is_repeatable: field.is_repeatable\n        };\n      }\n    }\n  }\n  for (const name in names) {\n    const info = names[name];\n    const group = form.groups.find(\n      group => group.lower <= info.position && group.upper > info.position\n    );\n    if (info.grouped && info.is_repeatable) {\n      // Array of arrays\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        if (_.last(subvalues) === null) {\n          subvalues = _.dropRight(subvalues, 1);\n        }\n        values.push(subvalues);\n        while (Array.isArray(_.last(values)) && _.last(values).length === 0) {\n          values = _.dropRight(values, 1);\n        }\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.grouped) {\n      // Just a plain array\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        values.push(subvalues[0]);\n      }\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.is_repeatable) {\n      // Just a plain array\n      const instance = group.instances[0];\n      let values = instance.fields\n        .find(field => field.name === name)\n        .values.map(value => value.value);\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else {\n      // Simple value\n      const instance = group.instances[0];\n      const value = instance.fields.find(field => field.name === name).values[0].value;\n      packed.values.push({ name, value });\n    }\n  }\n  packed.values = packed.values.filter(value => value.value !== null);\n  return packed;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getPrivileges(name, isAlias) {\n  return RestClient.get(`/entity/${name}/privileges`, {\n    ...(isAlias && { cls: 'alias' }),\n    page_size: 2147483645\n  });\n}\n\n/**\n    privilege: type,\n    enitity_name: entityName,\n    alias: isAlias\n    role: user_or_group.role,\n    role_type: user_or_group.is_group ? 'group' : 'user',\n    explicit_grant: user_or_group.granted.includes(type),\n    explicit_denied: user_or_group.denied.includes(type),\n    action: granted ? 'revoke' : 'grant'\n  }}\n */\nexport async function setPrivileges(data) {\n  const { granted, alias } = data;\n\n  const actions = granted ? ['revoke', 'deny'] : ['grant', 'allow'];\n\n  try {\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[0]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[1]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    return getPrivileges(data.enitity_name, data.alias);\n  } catch (e) {\n    throw new Error('failed');\n  }\n}\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LayersOutlinedIcon from '@material-ui/icons/LayersOutlined';\nimport { mdiClipboardPlayMultipleOutline, mdiShieldCheckOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nexport const navigationItems = [\n  {\n    title: <FormattedMessage id=\"navigation.dashboard\" />,\n    to: '/dashboard',\n    id: 'dashboard',\n    icon: <DashboardOutlinedIcon />,\n    qaClass: 'qa-nav-dashboard'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.jobs\" />,\n    to: '/jobs',\n    id: 'jobs',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiClipboardPlayMultipleOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-jobs'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.system\" />,\n    to: '/system',\n    id: 'system',\n    icon: <LayersOutlinedIcon />,\n    qaClass: 'qa-nav-system',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.entitites\" />,\n        to: '/system/entities',\n        qaClass: 'qa-nav-entities'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.explorer\" />,\n        to: '/system/explorer',\n        qaClass: 'qa-nav-explorer'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.user.and.groups\" />,\n        to: '/system/mas-accounts/users',\n        qaClass: 'qa-nav-mas-accounts'\n      }\n    ]\n  },\n  {\n    title: <FormattedMessage id=\"navigation.compliance\" />,\n    to: '/compliance',\n    id: 'compliance',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiShieldCheckOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-compliance',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.license.collection\" />,\n        to: '/compliance/license-collection',\n        qaClass: 'qa-nav-license-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      }\n    ]\n  }\n];\n","import { getQuery, getInvocationStatus } from './selectors';\n\nimport { InvocationStatus } from './constants';\n\nimport { fetchInvocation } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  const { uuid, process } = getQuery(store.getState());\n\n  if (uuid) {\n    await store.dispatch(fetchInvocation(uuid, process));\n  }\n\n  const STATUS = getInvocationStatus(store.getState());\n\n  switch (STATUS) {\n    case InvocationStatus.EXECUTING:\n    case InvocationStatus.SCHEDULED:\n    case InvocationStatus.DELAYED:\n    case 'NOT_FETCHED':\n      console.log('[invocation-poller] - polling', STATUS); // eslint-disable-line\n      throw new Error('need to poll invocation...');\n    default:\n      break;\n  }\n\n  console.log('[invocation-poller] - done'); // eslint-disable-line\n\n  return Promise.resolve();\n}\n\nexport const invocationPoller = withPolling(task, 5000);\n","import React from 'react';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors }) => {\n  let content;\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occured:</p>\n        <div className=\"list error\">\n          {errors.map((error, index) => {\n            return <p key={index}>• {error}</p>;\n          })}\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              {output.map((row, index) => {\n                return (\n                  <p className=\"row\" key={`${row.data.text}-${index}`}>\n                    {row.data.text}\n                  </p>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        {output.map((row, index) => {\n          return (\n            <p className=\"row\" key={index}>\n              {row.data.text}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return content;\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { fromJS } from 'immutable';\n\nexport const bindReducer = (initialState, actions) => (state = fromJS(initialState), action) => {\n  if (typeof actions[action.type] === 'function') {\n    return actions[action.type](state, action.payload);\n  }\n\n  return state;\n};\n","export const actionStates = {\n  LOADING: 'LOADING',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS',\n};\n","import { actionStates } from 'shared/lib';\n\nexport class ActionCreatorHandler {\n  constructor(action) {\n    this.action = action;\n  }\n\n  getEventAction() {\n    return this.action;\n  }\n\n  getLoadingAction() {\n    return `${this.action}__${actionStates.LOADING}`;\n  }\n\n  getFailAction() {\n    return `${this.action}__${actionStates.FAIL}`;\n  }\n\n  getSuccessAction() {\n    return `${this.action}__${actionStates.SUCCESS}`;\n  }\n\n  dispatchLoading(payload) {\n    return {\n      type: this.getLoadingAction(),\n      payload,\n    };\n  }\n\n  dispatchFail(payload) {\n    return {\n      type: this.getFailAction(),\n      payload,\n    };\n  }\n\n  dispatchSuccess(payload) {\n    return {\n      type: this.getSuccessAction(),\n      payload,\n    };\n  }\n\n  dispatchEvent(payload) {\n    return {\n      type: this.action,\n      payload,\n    };\n  }\n}\n","export const slugify = (text) => text.toString().toLowerCase()\n  .trim()\n  .replace(/[^a-z0-9 -]/g, '')\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-');\n","export const createUrl = (url, params = {}) => {\n  if (typeof params !== 'object' || !params) {\n    return url;\n  }\n  let path = url;\n  const query = { ...params };\n  Object.keys(query).forEach((key) => {\n    if (typeof query[key] !== 'undefined' && path.includes(`:${key}`)) {\n      path = path.replace(`:${key}`, query[key]);\n      delete query[key];\n    }\n  });\n\n  if (!Object.keys(query).length || !Object.keys(query).find(((key) => typeof query[key] !== 'undefined'))) {\n    return path;\n  }\n\n  const paramsUrl = Object.keys(query).filter((key) => query[key])\n    .map((key) => `${key}=${encodeURIComponent(query[key])}`)\n    .join('&');\n  return `${path}${'?'.concat(...paramsUrl)}`;\n};\n","export const numberPretty = (number) => {\n  if (!number) {\n    return number;\n  }\n  const parts = number.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n","const formatNumber = (number, pow, decimals = 1) => (number / (10 ** pow)).toFixed(decimals);\n\nexport const smartNumber = (number, decimals = false) => {\n  if (typeof number !== 'number') {\n    return number;\n  }\n  if (number < 10 ** 3) {\n    if (typeof decimals === 'number') {\n      return +number.toFixed(+decimals);\n    }\n    return number;\n  }\n\n  if (number < 10 ** 6) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 3, decimals)} K`;\n    }\n    return `${formatNumber(number, 3)} K`;\n  }\n\n  if (number < 10 ** 9) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 6, decimals)} M`;\n    }\n    return `${formatNumber(number, 6)} M`;\n  }\n\n  if (typeof decimals === 'number') {\n    return `${formatNumber(number, 9, decimals)} B`;\n  }\n  return `${formatNumber(number, 9)} B`;\n};\n","export const capitalizeFirstLetter = (s) => s.toString().charAt(0).toUpperCase() + s.slice(1);\n","export const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n","/* eslint-disable */\nexport const phoneNumberPattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n","export const urlPattern = /^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)$/;\n","export const randomStringGenerator = (length = 5) => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n  for (let i = 0; i < length; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n","export const generateUniqueId = () => btoa(Math.floor(new Date().valueOf() * Math.random())).replace(/=/g, '').slice(0, 16);\n","export const emptyFunc = () => null;\n","export const delay = (timer) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve();\n  }, timer);\n});\n","import moment from 'moment';\n\nimport { isBeforeDay } from './isBeforeDay';\n\nexport function isInclusivelyAfterDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n  return !isBeforeDay(a, b);\n}\n","const STATES = {\n  loading: 'LOADING',\n  fail: 'FAIL',\n  success: 'SUCCESS'\n};\n\nexport const SEPARATOR = '__';\n\nexport function type(name, stateKey) {\n  const state = STATES[stateKey];\n\n  if (state) {\n    return name + SEPARATOR + state;\n  }\n\n  return name;\n}\n\n/**\n *\n * These could be written as classes with static methods.\n *\n * */\n\nexport const types = {\n  action: type,\n  loading: function loadingType(name) {\n    return type(name, 'loading');\n  },\n  success: function successType(name) {\n    return type(name, 'success');\n  },\n  fail: function failType(name) {\n    return type(name, 'fail');\n  }\n};\n\nexport const creators = {\n  action: function action(name, payload) {\n    return { type: name, payload };\n  },\n  loading: function loadingAction(name, payload) {\n    return { type: type(name, 'loading'), payload };\n  },\n  success: function successAction(name, payload) {\n    return { type: type(name, 'success'), payload };\n  },\n  fail: function failAction(name, payload) {\n    return { type: type(name, 'fail'), payload };\n  }\n};\n","import { produce } from 'immer';\n\nfunction unchanged(state) {\n  return state;\n}\n\nexport function createReducer(reducers, initialState = {}) {\n  const reducerInitialState = reducers.initialState || initialState;\n\n  return function r(state = reducerInitialState, action) {\n    const { type } = action;\n\n    if (!type) {\n      console.error('[createReducer] action does not have a type', action); // eslint-disable-line\n      return unchanged(state);\n    }\n\n    const reducer = reducers[action.type];\n\n    if (reducer) {\n      return produce(state, nextState => {\n        reducer(nextState, action, state);\n      });\n    }\n\n    return unchanged(state);\n  };\n}\n","import moment from 'moment';\nimport _ from 'lodash';\n\nexport function getWorkloadData(jobs, dateRange) {\n  if (jobs.length === 0) return [];\n\n  const jobsWithFormattedInvokedDate = _.orderBy(jobs, ['date_invoke'], ['asc']).map(job => ({\n    ...job,\n    date_invoke: moment(job.date_invoke)\n      .utc()\n      .local()\n      .format('D MMM YY')\n  }));\n  const groupJobsByDate = _.groupBy(jobsWithFormattedInvokedDate, 'date_invoke');\n  const data = [];\n\n  // if no process was executed during selected interval, simply return an empty array\n  if (Object.keys(groupJobsByDate).length === 0) {\n    return [];\n  }\n\n  Object.keys(groupJobsByDate).forEach(date => {\n    const item = { name: date, SUCCEEDED: 0, FAILED: 0, ABORTED: 0, total: 0 };\n    groupJobsByDate[date].forEach(el => {\n      item[el.status]++;\n      if (el.status === 'SUCCEEDED' || el.status === 'FAILED' || el.status === 'ABORTED') {\n        item.total++;\n      }\n    });\n\n    data.push(item);\n  });\n\n  // display all days between the first one that run a process and the last one\n  const intervalArray = [];\n  const daylist = getDaysArray(dateRange);\n  const totalDays = daylist.reduce((o, key) => ({ ...o, [key]: '' }), {});\n\n  // update the total days from the interval array with the days that have some processes executed\n  data.forEach(day => {\n    totalDays[day.name] = day;\n  });\n\n  Object.keys(totalDays).forEach(date => {\n    // for the days in the interval that have no executed process, add an empty entry\n    if (typeof totalDays[date] === 'string') {\n      totalDays[date] = {\n        name: date,\n        SUCCEEDED: 0,\n        FAILED: 0,\n        ABORTED: 0,\n        total: 0\n      };\n    }\n    intervalArray.push(totalDays[date]);\n  });\n\n  return intervalArray;\n}\n/**\n * Creates an array for the selected interval of days\n */\nfunction getDaysArray(dateRange) {\n  let { currentDate } = dateRange;\n  const { endDate } = dateRange;\n  const dateArray = [];\n\n  while (currentDate <= endDate) {\n    dateArray.push(moment(currentDate).format('D MMM YY'));\n    currentDate = moment(currentDate).add(1, 'days');\n  }\n\n  return dateArray;\n}\n","import { CheckAuthorizationEffect } from './check-authorization/check-authorization.effect';\nimport { LoginEffect } from './login/login.effect';\nimport { LogoutEffect } from './logout/logout.effect';\n\nexport const sessionEffects = [CheckAuthorizationEffect, LoginEffect, LogoutEffect];\n","import { emptyFunc } from 'shared/lib';\n\nexport const tryAsync = async (action, onError = emptyFunc) => {\n  try {\n    await action();\n  } catch (e) {\n    onError(e);\n  }\n};\n","import Cookie from 'js-cookie';\nimport axios from 'axios';\n\nimport { CONSTANTS } from 'config';\nimport { createUrl } from 'shared/lib';\n\n\nclass RestClientClass {\n  constructor() {\n    this.authentications = {\n      basicAuth: {\n        name: 'Authorization',\n        accessToken: '',\n      },\n    };\n\n    this.baseUrl = CONSTANTS.BASE.HOST;\n\n    if (CONSTANTS.BASE.VERSION) {\n      this.baseUrl = `${CONSTANTS.BASE.HOST}/${CONSTANTS.BASE.VERSION}`;\n    }\n\n    this.client = axios.create({\n      timeout: CONSTANTS.BASE.TIMEOUT,\n      baseURL: this.baseUrl,\n      // withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.get = this.get.bind(this);\n    this.delete = this.delete.bind(this);\n    this.head = this.head.bind(this);\n    this.post = this.post.bind(this);\n    this.put = this.put.bind(this);\n    this.patch = this.patch.bind(this);\n  }\n\n  setBasicAuth() {\n    this.authentications.basicAuth.accessToken = `Basic ${Cookie.get('Authorization')}`;\n  }\n\n  removeBasicAuth() {\n    this.authentications.basicAuth.accessToken = Cookie.remove('Authorization');\n  }\n\n  getRequestConfig() {\n    return {\n      headers: {\n        [this.authentications.basicAuth.name]: this.authentications.basicAuth.accessToken,\n      },\n    };\n  }\n\n  get(path, query) {\n    const url = createUrl(path, query);\n    return this.client.get(url, this.getRequestConfig());\n  }\n\n  delete(path, query) {\n    const url = createUrl(path, query);\n    return this.client.delete(url, this.getRequestConfig());\n  }\n\n  head(path, query) {\n    const url = createUrl(path, query);\n    return this.client.head(url, this.getRequestConfig());\n  }\n\n  post(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.post(url, body, this.getRequestConfig());\n  }\n\n  put(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.put(url, body, this.getRequestConfig());\n  }\n\n  patch(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.patch(url, body, this.getRequestConfig());\n  }\n}\n\nexport const RestClient = new RestClientClass();\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\n\nimport { actionStates } from 'shared/lib';\nimport { loginSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nimport { Form } from './components';\n\nexport class LoginPage extends React.PureComponent {\n  componentDidMount() {\n    Cookie.remove('Authorization');\n  }\n\n  componentDidUpdate() {\n    if (this.props.status === actionStates.SUCCESS) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.login.title\"\n        isLoading={this.props.status === actionStates.LOADING}\n      >\n        <Form\n          isLoading={this.props.status === actionStates.LOADING}\n          errors={this.props.errors}\n          submit={this.props.login}\n          resetErrors={this.props.resetErrors}\n        />\n      </Container>\n    );\n  }\n\n  static path = '/login';\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  errors: PropTypes.object.isRequired,\n  status: PropTypes.oneOf([actionStates.LOADING, actionStates.SUCCESS, actionStates.FAIL, '']).isRequired,\n  login: PropTypes.func.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  errors: loginSelector(state).get('errors'),\n  status: loginSelector(state).get('status'),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (data) => dispatch(actions.login.dispatchLoading(data)),\n  resetErrors: () => dispatch(actions.login.dispatchFail([])),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport LoginGraphic from '../../../../assets/images/login_graphic.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_blue.svg';\nimport MasLogo from '../../../../assets/images/mas_logo_blue.svg';\n\nimport './container.local.scss';\n\nexport class ContainerComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={`${className} flex`}>\n        <div className={`${className}__wrapper`}>\n          <div className=\"header\">\n            <div className=\"mas-logo-container\">\n              <img className=\"img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n            </div>\n            <Typography className={`${className}__title`} variant=\"h3\" component=\"h2\">\n              <FormattedMessage id={this.props.title} />\n            </Typography>\n            {!!this.props.description && (\n              <div className={`${className}__description`}>\n                {this.props.description}\n              </div>\n            )}\n          </div>\n          {this.props.children}\n        </div>\n        <div className={`${className}__graphics`}>\n          <div className=\"logo-container\">\n            <img className=\"img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          </div>\n          <div className=\"graphic-container\">\n            <img className=\"img-responsive\" src={LoginGraphic} alt=\"Login graphic\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  description: PropTypes.string,\n  className: PropTypes.string,\n};\n\nContainerComponent.defaultProps = {\n  className: 'container',\n  description: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { RestErrors } from 'shared/components';\n\nimport './form.local.scss';\n\nexport class FormComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  render() {\n    const { className } = this.props;\n    const restErrors = this.getRestErrors();\n\n    return (\n      <div className={className}>\n        <form onSubmit={this.submitHandler} noValidate autoComplete=\"off\">\n          <div className=\"flex direction-column\">\n            <TextField\n              autoFocus\n              className={`${className}__field`}\n              helperText={this.getError('username')}\n              onChange={this.valueChangeHandler('username')}\n              variant=\"outlined\"\n              label={<FormattedMessage id=\"general.form.username\" />}\n              inputProps={{\n                className: 'qa-login-username',\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n              InputLabelProps={{\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n            />\n\n            <FormControl className={`${className}__field`} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={this.state.showPassword ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.valueChangeHandler('password')}\n                inputProps={{\n                  className: 'qa-login-password',\n                  style: { fontSize: '14px', fontFamily: 'Lato' }\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <div className=\"password-icon\">\n                      <IconButton\n                        className=\"qa-login-toggle-password-visibility\"\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.setShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                        edge=\"end\"\n                        color=\"inherit\"\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </div>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          {restErrors.size > 0 && (\n            <div className={`${className}__errors`}>\n              <RestErrors errors={restErrors} />\n            </div>\n          )}\n          <div className={`${className}__actions flex`}>\n            <Button\n              className=\"qa-login-btn\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                this.props.isLoading || this.state.username === '' || this.state.password === ''\n              }\n            >\n              <FormattedMessage id=\"session.login.button\" />\n            </Button>\n            {/* <div className=\"forgot-password qa-forgot-password\">\n              <FormattedMessage id=\"session.login.forgot-password\" />\n            </div> */}\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  setShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  getError(field) {\n    const error = this.props.errors.find(item => item.get('path') === `.${field}`);\n    if (!error) {\n      return '';\n    }\n\n    return error.get('message') || 'This field is invalid';\n  }\n\n  getRestErrors() {\n    return this.props.errors.filter(\n      item => item.get('path') !== '.username' && item.get('path') !== '.password'\n    );\n  }\n\n  resetErrors() {\n    if (this.props.errors.size) {\n      this.props.resetErrors();\n    }\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    this.props.submit({\n      username: this.state.username,\n      password: this.state.password\n    });\n  }\n\n  valueChangeHandler(name) {\n    return event => {\n      this.resetErrors();\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n}\n\nFormComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nFormComponent.defaultProps = {\n  className: 'form'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { slugify } from 'shared/lib';\n\nimport './rest-errors.local.scss';\n\nexport class RestErrorsComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        {this.props.errors.map((error) => (\n          <div key={slugify(error.get('message'))}>\n            {error.get('message')}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRestErrorsComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nRestErrorsComponent.defaultProps = {\n  className: 'rest-errors',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport './job-item.local.scss';\n\nexport class JobItemComponent extends React.PureComponent {\n  render() {\n    const { extended } = this.props;\n    if (extended) {\n      return (\n        <div className={`${this.props.className} ${this.jobStatus()}`}>\n          <div className=\"status-icon\">{this.props.statusChild}</div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <div className=\"name\" title={this.props.job.get('process')}>\n                {this.formatName()}\n              </div>\n            </div>\n            <div className=\"second-row\">\n              <div className=\"time\">\n                {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n              </div>\n              {this.props.job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n              <div className=\"date\">\n                {moment(this.props.job.get('date_invoke'))\n                  .utc()\n                  .local()\n                  .format('D MMM YYYY')}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${this.props.className} ${this.jobStatus()}`}>\n        <Link to={`/jobs/job?invocation=${this.props.job.get('uuid')}`}>\n          <div className=\"first-row\">\n            <div className=\"name\" title={this.props.job.get('process')}>\n              {this.formatName()}\n            </div>\n            <div className=\"time\">\n              {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n            </div>\n          </div>\n          <div className=\"second-row\">\n            {this.props.job.get('user_owner') && (\n              <div className=\"run-by\">\n                <AccountCircleOutlinedIcon />\n                {this.props.job.get('user_owner')}\n              </div>\n            )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('name') && (\n                <div className=\"dbms\">\n                  <SvgIcon>\n                    <Icon path={mdiHexagonMultipleOutline} />\n                  </SvgIcon>\n                  {this.props.job\n                    .get('connections')\n                    .get('dbms')\n                    .get('name')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('shell') &&\n              this.props.job\n                .get('connections')\n                .get('shell')\n                .get('host_address') && (\n                <div className=\"server\">\n                  <StorageIcon />\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('shell') &&\n                    this.props.job\n                      .get('connections')\n                      .get('shell')\n                      .get('host_address')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special')\n                .get('database') && (\n                <div className=\"database\">\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('dbms') &&\n                    this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('protocol_special')\n                      .get('database')}\n                </div>\n              )}\n            <div className=\"date\">\n              {moment(this.props.job.get('date_invoke'))\n                .utc()\n                .local()\n                .format('D MMM YYYY')}\n            </div>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n\n  jobStatus = () => {\n    switch (this.props.job.get('status')) {\n      case 'EXECUTING':\n        return 'executing';\n      case 'SUCCEEDED':\n        return 'succeeded';\n      case 'SCHEDULED':\n        return 'scheduled';\n      case 'DELAYED':\n        return 'delayed';\n      case 'ABORTED':\n        return 'aborted';\n      case 'FAILED':\n        return 'failed';\n      case 'KILLED':\n        return 'killed';\n      default:\n        return '';\n    }\n  };\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItemComponent.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired,\n  extended: PropTypes.bool,\n  statusChild: PropTypes.element\n};\n\nJobItemComponent.defaultProps = {\n  className: 'job-item',\n  extended: false,\n  statusChild: null\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\n\nimport { CustomTooltip, CustomAxisTick } from './components';\n\nimport './workload-graph.local.scss';\n\nexport class WorkloadGraphComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <ResponsiveContainer>\n          <AreaChart data={this.props.data} margin={{ top: 16, right: 5, left: 5, bottom: 16 }}>\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0.16} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"chartStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0} />\n                <stop offset=\"5%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"95%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickSize={false}\n              axisLine={false}\n              interval=\"preserveStartEnd\"\n              tick={<CustomAxisTick />}\n            />\n            <Tooltip\n              content={<CustomTooltip />}\n              offset={0}\n              cursor={false}\n              viewBox={{ width: 750, height: 144 }}\n              position={{ x: 'auto', y: 0 }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"total\"\n              stroke=\"url(#chartStroke)\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#gradient)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n\nexport default WorkloadGraphComponent;\n\nWorkloadGraphComponent.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nWorkloadGraphComponent.defaultProps = {\n  className: 'workload-graph'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport './custom-tooltip.local.scss';\n\nexport class CustomTooltipComponent extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.label !== this.props.label) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    if (!this.props.active) return null;\n    return (\n      <div className={this.props.className} position={{ x: '100%', y: '-100%' }}>\n        { this.props.payload\n        && (\n          <>\n            <div className=\"date\">\n              { moment(this.props.payload[0].payload.name).format('DD.MM.YYYY')}\n            </div>\n            <div className=\"info-container\">\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.succeeded\" />\n                </div>\n                <div className=\"value success\">\n                  {this.props.payload[0].payload.SUCCEEDED}\n                </div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.aborted\" />\n                </div>\n                <div className=\"value error\">\n                  {this.props.payload[0].payload.FAILED}\n                </div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.failed\" />\n                </div>\n                <div className=\"value error\">\n                  {this.props.payload[0].payload.ABORTED}\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomTooltipComponent;\n\nCustomTooltipComponent.propTypes = {\n  className: PropTypes.string,\n  payload: PropTypes.array,\n  active: PropTypes.bool,\n  label: PropTypes.string,\n};\n\nCustomTooltipComponent.defaultProps = {\n  className: 'custom-tooltip',\n  payload: [],\n  active: false,\n  label: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './custom-axis-tick.local.scss';\n\nexport class CustomAxisTickComponent extends React.PureComponent {\n  render() {\n    return (\n      <g transform={`translate(${this.props.x},${this.props.y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill=\"rgba(12, 50, 110, 0.38)\">{this.props.payload.value}</text>\n      </g>\n    );\n  }\n}\n\nexport default CustomAxisTickComponent;\n\nCustomAxisTickComponent.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  payload: PropTypes.object,\n};\n\nCustomAxisTickComponent.defaultProps = {\n  x: null,\n  y: null,\n  payload: {},\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './circle-img.local.scss';\n\nexport class CircleImgComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.image}\n      </div>\n    );\n  }\n}\n\nexport default CircleImgComponent;\n\nCircleImgComponent.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nCircleImgComponent.defaultProps = {\n  className: 'circle-img',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './number-label.local.scss';\n\nexport class NumberLabelComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n\nexport default NumberLabelComponent;\n\nNumberLabelComponent.propTypes = {\n  className: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nNumberLabelComponent.defaultProps = {\n  className: 'number-label',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './string-label.local.scss';\n\nexport class StringLabelComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.text}</div>;\n  }\n}\n\nexport default StringLabelComponent;\n\nStringLabelComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.node.isRequired\n};\n\nStringLabelComponent.defaultProps = {\n  className: 'string-label'\n};\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport './search-input.local.scss';\n\nexport class SearchInputComponent extends PureComponent {\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <>\n        <div className=\"search-icon\">\n          <SearchIcon />\n        </div>\n        <InputBase\n          className=\"search-input-container\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={onChange}\n          inputProps={{\n            className: 'search qa-search',\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchInputComponent;\n\nSearchInputComponent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport classnames from 'classnames';\n\nimport './dropdown.local.scss';\n\nexport class DropdownComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDropdownOpen: false\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isDropdownOpen) {\n      this.setState({ isDropdownOpen: true });\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    let parentWidth;\n\n    if (this.anchorRef && this.anchorRef.current && this.anchorRef.current.offsetWidth) {\n      parentWidth = this.anchorRef.current.offsetWidth;\n    }\n    return (\n      <>\n        {this.props.target(\n          { isOpen: this.state.isDropdownOpen, ref: this.anchorRef },\n          { toggle: this.handleToggle }\n        )}\n        {items && (\n          <Popover\n            open={this.state.isDropdownOpen}\n            anchorEl={this.anchorRef.current}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList className=\"dropdown-menu-container\" style={{ width: parentWidth }}>\n                {items.map((item, index) => (\n                  <MenuItem\n                    className={classnames('', { disabled: item.disabled })}\n                    key={index}\n                    onClick={() => this.onClickCallback(index)}\n                  >\n                    {item.icon && <ListItemIcon className=\"icon\">{item.icon}</ListItemIcon>}\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Popover>\n        )}\n      </>\n    );\n  }\n\n  handleToggle = () => {\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen\n    }));\n  };\n\n  setCloseDropdown = event => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ isDropdownOpen: false });\n  };\n\n  onClickCallback = itemIndex => {\n    this.props.onSelect(itemIndex, this.props.items[itemIndex]);\n    this.setState({ isDropdownOpen: false });\n  };\n}\n\nexport default DropdownComponent;\n\nDropdownComponent.propTypes = {\n  onSelect: PropTypes.func,\n  target: PropTypes.func,\n  items: PropTypes.array,\n  isDropdownOpen: PropTypes.bool\n};\n\nDropdownComponent.defaultProps = {\n  onSelect: () => {},\n  items: [],\n  target: (meta, actions) => (\n    <Button ref={meta.ref} onClick={actions.toggle}>\n      {meta.isOpen ? 'Close' : 'Dropdown'}\n    </Button>\n  ),\n  isDropdownOpen: false\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './small-input.local.scss';\n\nexport const SmallInputComponent = forwardRef(({ value, icon, disabled, ...others }, ref) => (\n  <div\n    ref={ref}\n    className={classnames('small-input', { disabled, active: value.length })}\n  >\n    { icon && <div className=\"icon\">{icon}</div> }\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      {...others}\n    />\n  </div>\n));\n\nSmallInputComponent.propTypes = {\n  icon: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nSmallInputComponent.defaultProps = {\n  icon: null,\n  value: '',\n  disabled: false,\n};\n\nexport default SmallInputComponent;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SingleDatePicker } from 'react-dates';\nimport { mdiCalendarBlank, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './single-date-picker.local.scss';\n\nexport class SingleDatePickerComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: true,\n    };\n  }\n\n  render() {\n    const { date, onDateChange, ...others } = this.props;\n\n    return (\n      <div className=\"date-picker-container\">\n        <SingleDatePicker\n          date={date}\n          onDateChange={onDateChange}\n          focused={this.state.focused}\n          onFocusChange={({ focused }) => this.setState({ focused })}\n          id=\"date-picker\"\n          numberOfMonths={1}\n          customInputIcon={<SvgIcon><Icon path={mdiCalendarBlank} /></SvgIcon>}\n          placeholder=\"Select Date\"\n          isOutsideRange={() => false}\n          readOnly\n          hideKeyboardShortcutsPanel\n          displayFormat=\"D MMM YYYY\"\n          /** TODO: @Razvan, look at this please. */\n          navPrev={<div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\"><SvgIcon><Icon path={mdiChevronLeft} size={6} /></SvgIcon></div>}\n          navNext={<div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\"><SvgIcon><Icon path={mdiChevronRight} size={6} /></SvgIcon></div>}\n          {...others}\n        />\n      </div>\n    );\n  }\n}\n\nSingleDatePickerComponent.propTypes = {\n  date: PropTypes.object,\n  onDateChange: PropTypes.func.isRequired,\n};\n\nSingleDatePickerComponent.defaultProps = {\n  date: null,\n};\n\nexport default SingleDatePickerComponent;\n","import React from 'react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArrowLeftRight, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\n\nimport DateRangePickerWrapper from './range-date-range-picker.container';\nimport 'react-dates/initialize'; // necessary for latest version\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport './range-date-picker.local.scss';\n\nexport class RangeDatePicker extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"date-picker-container\">\n        <DateRangePickerWrapper\n          anchorDirection=\"left\"\n          autoFocus={false}\n          block={false}\n          customArrowIcon={<SvgIcon><Icon path={mdiArrowLeftRight} /></SvgIcon>}\n          customCloseIcon={null}\n          customInputIcon={null}\n          disabled={false}\n          displayFormat=\"MMM D YYYY\"\n          enableOutsideDays={false}\n          endDateId=\"endDate\"\n          endDatePlaceholderText=\"End Date\"\n          horizontalMargin={0}\n          initialEndDate={null}\n          initialStartDate={moment()}\n          initialVisibleMonth={null}\n          isDayBlocked={() => false}\n          isDayHighlighted={() => false}\n          isOutsideRange={() => false}\n          isRTL={false}\n          keepOpenOnDateSelect={false}\n          minimumNights={0}\n          monthFormat=\"MMMM YYYY\"\n          navPrev={<div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\"><SvgIcon><Icon path={mdiChevronLeft} size={6} /></SvgIcon></div>}\n          navNext={<div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\"><SvgIcon><Icon path={mdiChevronRight} size={6} /></SvgIcon></div>}\n          navPosition=\"navPositionTop\"\n          numberOfMonths={2}\n          onClose={() => false}\n          onNextMonthClick={() => false}\n          onPrevMonthClick={() => false}\n          orientation=\"horizontal\"\n          phrases={{\n            calendarLabel: 'Calendar',\n            chooseAvailableEndDate: function noRefCheck() {},\n            chooseAvailableStartDate: function noRefCheck() {},\n            clearDates: 'Clear Dates',\n            closeDatePicker: 'Close',\n            dateIsSelected: function noRefCheck() {},\n            dateIsSelectedAsEndDate: function noRefCheck() {},\n            dateIsSelectedAsStartDate: function noRefCheck() {},\n            dateIsUnavailable: function noRefCheck() {},\n            enterKey: 'Enter key',\n            escape: 'Escape key',\n            focusStartDate: 'Interact with the calendar and add the check-in date for your trip.',\n            hideKeyboardShortcutsPanel: 'Close the shortcuts panel.',\n            homeEnd: 'Home and end keys',\n            jumpToNextMonth: 'Move forward to switch to the next month.',\n            jumpToPrevMonth: 'Move backward to switch to the previous month.',\n            keyboardBackwardNavigationInstructions: 'Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardForwardNavigationInstructions: 'Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardShortcuts: 'Keyboard Shortcuts',\n            leftArrowRightArrow: 'Right and left arrow keys',\n            moveFocusByOneDay: 'Move backward (left) and forward (right) by one day.',\n            moveFocusByOneMonth: 'Switch months.',\n            moveFocusByOneWeek: 'Move backward (up) and forward (down) by one week.',\n            moveFocustoStartAndEndOfWeek: 'Go to the first or last day of a week.',\n            openThisPanel: 'Open this panel.',\n            pageUpPageDown: 'page up and page down keys',\n            questionMark: 'Question mark',\n            returnFocusToInput: 'Return to the date input field.',\n            roleDescription: 'datepicker',\n            selectFocusedDate: 'Select the date in focus.',\n            showKeyboardShortcutsPanel: 'Open the keyboard shortcuts panel.',\n            upArrowDownArrow: 'up and down arrow keys',\n          }}\n          regular={false}\n          renderCalendarDay={undefined}\n          renderDayContents={(text) => this.renderDayContents(text)}\n          renderMonthText={null}\n          reopenPickerOnClearDates={false}\n          required={false}\n          screenReaderInputMessage=\"\"\n          showClearDates={false}\n          showDefaultInputIcon={false}\n          small={false}\n          startDateId=\"startDate\"\n          startDatePlaceholderText=\"Start Date\"\n          stateDateWrapper={() => false}\n          withFullScreenPortal={false}\n          withPortal={false}\n          onDatesChange={this.props.onDatesChange}\n          endDate={this.props.endDate}\n          startDate={this.props.startDate}\n          focusedInput={null}\n          hideKeyboardShortcutsPanel\n        />\n      </div>\n    );\n  }\n\n  renderDayContents = (text) => <div className=\"wrapper-custom-date\"><div className=\"custom-date\">{text.date()}</div></div>;\n}\n\nRangeDatePicker.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onDatesChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { array, object, oneOfType } from 'prop-types';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline,\n  mdiCancel,\n  mdiHexagonMultipleOutline,\n  mdiDatabase\n} from '@mdi/js';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { Center } from 'shared/components';\n\nimport './JobResults.local.scss';\n\nexport class JobResults extends React.PureComponent {\n  render() {\n    const { jobs } = this.props;\n\n    if (jobs && jobs.size === 0) {\n      return <Center>Job list is empty</Center>;\n    }\n    return <>{this.renderJobsResults(jobs)}</>;\n  }\n\n  renderJobsResults = jobs =>\n    jobs.map((job, index) => (\n      <Link key={index} to={`/jobs/job?invocation=${job.get('uuid')}`}>\n        <div className=\"result-job-row\">\n          <div className=\"job-status-container\">{this.jobStatus(job.get('status'))}</div>\n          <div className=\"job-content\">\n            <div className=\"first-row\">{this.formatName(job.get('process'))}</div>\n            <div className=\"second-row\">\n              <div className=\"time\">\n                <ScheduleIcon />\n                {moment(job.get('date_invoke')).format('D.MM.YYYY, HH:mm:ss')}\n              </div>\n              {job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    ));\n\n  jobStatus = status => {\n    switch (status) {\n      case 'EXECUTING':\n        return (\n          <div className=\"job-status executing\">\n            <SvgIcon>\n              <Icon path={mdiProgressClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SUCCEEDED':\n        return (\n          <div className=\"job-status succeeded\">\n            <SvgIcon>\n              <Icon path={mdiCheckCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SCHEDULED':\n        return (\n          <div className=\"job-status scheduled\">\n            <SvgIcon>\n              <Icon path={mdiCalendarArrowRight} />\n            </SvgIcon>\n          </div>\n        );\n      case 'ABORTED':\n        return (\n          <div className=\"job-status aborted\">\n            <SvgIcon>\n              <Icon path={mdiStopCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'DELAYED':\n        return (\n          <div className=\"job-status delayed\">\n            <SvgIcon>\n              <Icon path={mdiTimelineClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'FAILED':\n        return (\n          <div className=\"job-status failed\">\n            <SvgIcon>\n              <Icon path={mdiAlertRhombusOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'KILLED':\n        return (\n          <div className=\"job-status killed\">\n            <SvgIcon>\n              <Icon path={mdiCancel} />\n            </SvgIcon>\n          </div>\n        );\n      default:\n        return '';\n    }\n  };\n\n  formatName = jobName => {\n    const formattedName = [];\n    const name = jobName.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    return formattedName;\n  };\n}\n\nJobResults.propTypes = {\n  jobs: oneOfType([array, object])\n};\n\nexport default JobResults;\n","import React, { createContext, useContext } from 'react';\nimport { any, node } from 'prop-types';\n\nconst Context = createContext();\n\nexport function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nSwitch.propTypes = {\n  value: any,\n  children: node\n};\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nCase.propTypes = {\n  value: any,\n  children: node\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUITable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport './Table.local.scss';\n\nexport const Table = ({ columns, children, sortBehavior, changeSort, className }) => {\n  return (\n    <MUITable stickyHeader className={className}>\n      <TableHead className=\"sticky-head\">\n        <TableRow>\n          {columns.map(HeaderCell(sortBehavior, changeSort))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {children}\n      </TableBody>\n    </MUITable>\n  );\n};\n\nconst HeaderCell = (sortBehavior, changeSort) => (column, index) => (\n  <TableCell\n    key={`header_column_${index}`}\n    align={column.align}\n    component={column.component}\n    padding={column.padding}\n    sortDirection={sortBehavior.order}\n    variant={column.variant}\n  >\n    { column.sortKey ? (\n      <TableSortLabel\n        active={sortBehavior.sortKey === column.sortKey}\n        direction={sortBehavior.order}\n        onClick={changeSort(column.sortKey, sortBehavior.order === 'asc' ? 'desc' : 'asc')}\n      >\n        {column.label}\n      </TableSortLabel>\n    ) : column.label }\n  </TableCell>\n);\n\nTable.Row = TableRow;\nTable.Cell = TableCell;\n\nTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  sortBehavior: PropTypes.shape({\n    order: PropTypes.string,\n    sortKey: PropTypes.string\n  }),\n  changeSort: PropTypes.func\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nexport class LogoutPage extends React.PureComponent {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.logout.title\"\n        isLoading\n      >\n        <div />\n      </Container>\n    );\n  }\n\n  static path = '/logout';\n}\n\nLogoutPage.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: (data) => dispatch(actions.logout.dispatchLoading(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartTimelineVariant } from '@mdi/js';\n\nimport {\n  JobItem,\n  WorkloadGraph,\n  CircleImg,\n  NumberLabel,\n  StringLabel,\n  Center,\n  RangeDatePicker\n} from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper, Main } from 'shared/components/layout';\nimport { filterStatusSelector } from './store/state';\nimport { Header } from 'core/components/Header';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { StatusContainer, Search } from './containers';\nimport { ConnectedServerUsage } from './containers/ServerUsage/ServerUsage';\n\nimport './root.module.scss';\n\nexport class RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n\n    this.onChangeDatesHandler = this.onChangeDatesHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n  }\n\n  render() {\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Dashboard\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const averageJobs = Math.round(parseInt(this.props.jobs.get('total_count'), 10) / (days + 1));\n\n    return (\n      <div className={this.props.className}>\n        <Header>\n          <h1 className=\"header-title\">Dashboard</h1>\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Search />\n        <StatusContainer />\n        <div className=\"summary-container\">\n          <div className=\"jobs-container\">\n            {this.props.jobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <>\n                <div className=\"jobs-content\" id=\"jobs-content\">\n                  {this.filteredJobs(this.props.storeFilterStatus)}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"workload-container\">\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Generating Workload Chart</Loader>\n                </Center>\n              ) : (\n                <>\n                  <div className=\"workload-header\">\n                    <CircleImg\n                      image={\n                        <SvgIcon>\n                          <Icon path={mdiChartTimelineVariant} />\n                        </SvgIcon>\n                      }\n                    />\n                    <NumberLabel number={averageJobs} />\n                    <StringLabel\n                      text={\n                        <>\n                          <FormattedMessage id=\"dashboard.jobs\" />/\n                          <FormattedMessage id=\"dashboard.day\" />\n                        </>\n                      }\n                    />\n                  </div>\n                  <div className=\"workload-content\">\n                    <WorkloadGraph\n                      data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                        currentDate: moment.unix(\n                          this.props.globalFilters.get('startDate'),\n                          'YYYY-MM-DD'\n                        ),\n                        endDate: moment.unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                      })}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"servers-usage-container\">\n              <ConnectedServerUsage />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  filteredJobs = status => {\n    const { jobs } = this.props;\n\n    if (status === 'ALL') {\n      return (\n        <>\n          {jobs\n            .get('content')\n            .slice(0, 20)\n            .map((item, index) => (\n              <JobItem key={index} job={item} />\n            ))}\n          {jobs.get('total_count') > 20 && (\n            <Button className=\"full-log center qa-view-full-log\">\n              <Link to=\"/jobs\">\n                <FormattedMessage id=\"dashboard.view-full-log\" />\n              </Link>\n            </Button>\n          )}\n        </>\n      );\n    }\n\n    const totalFilteredJobs = jobs.get('content').filter(job => job.get('status') === status).size;\n\n    if (totalFilteredJobs === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <>\n        {jobs\n          .get('content')\n          .filter(job => job.get('status') === status)\n          .slice(0, 20)\n          .map((item, index) => (\n            <JobItem key={index} job={item} />\n          ))}\n        {totalFilteredJobs > 20 && (\n          <Button className=\"full-log center qa-view-full-log\">\n            <Link to={`/jobs?status=${status}`}>\n              <FormattedMessage id=\"dashboard.view-full-log\" />\n            </Link>\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  onChangeDatesHandler(range) {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n\n      const days = moment(range.endDate, 'YYYY-MM-DD')\n        .utc()\n        .diff(moment(range.startDate, 'YYYY-MM-DD').utc(), 'days');\n\n      this.props.getJobs({\n        date_invoke: moment(range.startDate)\n          .utc()\n          .format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      });\n    }\n  }\n}\n\nRootModule.propTypes = {\n  className: PropTypes.string,\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nRootModule.defaultProps = {\n  className: 'dashboard'\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  storeFilterStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport classnames from 'classnames';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.local.scss';\n\nexport const Loader = ({ children, inline }) => {\n  return (\n    <div className={classnames('loader', { inline })}>\n      <CircularProgress />\n      {children && <div className=\"loader-text\">{children}</div>}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  children: node\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './ParameterLoader.local.scss';\n\nexport const ParameterLoader = ({ children }) => {\n  return (\n    <div className=\"loader\">\n      {children && <div className=\"loader-text\">{children}</div>}\n      <div className=\"loader-slot\">\n        <LinearProgress variant=\"indeterminate\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { bool, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Overflow } from '../Overflow/Overflow';\n\nimport './Paper.local.scss';\n\nexport const Paper = ({ padded, flex, children, ...rest }) => (\n  <div className={classnames('paper', { padded, [flex]: flex })} {...rest}>\n    {children}\n  </div>\n);\n\nPaper.propTypes = {\n  children: node,\n  padded: bool,\n  flex: oneOf(['column', 'row'])\n};\n\nPaper.defaultProps = {\n  padded: true,\n  flex: 'column'\n};\n\nexport const PaperHeader = ({ children, ...rest }) => (\n  <header className=\"paper-header\" {...rest}>\n    {children}\n  </header>\n);\n\nPaperHeader.propTypes = {\n  children: node\n};\n\nexport const PaperContent = ({ children, scrollable }) => {\n  if (scrollable) {\n    return (\n      <Overflow className=\"paper-content\" variant=\"white\">\n        {children}\n      </Overflow>\n    );\n  }\n\n  return <main className=\"paper-content\">{children}</main>;\n};\n\nPaperContent.propTypes = {\n  scrollable: bool,\n  children: node\n};\n\nPaperContent.defaultProps = {\n  scrollable: true\n};\n\nexport const PaperFooter = ({ children }) => <footer className=\"paper-footer\">{children}</footer>;\n\nPaperFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nPaperFooter.Left = LeftSideSlot;\nPaperFooter.Right = RightSideSlot;\n\nexport const PaperTitle = ({ children }) => <h2 className=\"paper-title\">{children}</h2>;\n\nPaperTitle.propTypes = {\n  children: node\n};\n\nPaper.Header = PaperHeader;\nPaper.Title = PaperTitle;\nPaper.Content = PaperContent;\nPaper.Footer = PaperFooter;\n","import React from 'react';\nimport { node, bool } from 'prop-types';\nimport classnames from 'classnames';\nimport './Main.local.scss';\n\nexport const Main = ({ flex, children }) => (\n  <main\n    className={classnames('page-main', {\n      flex\n    })}\n  >\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: node,\n  flex: bool\n};\n\nMain.defaultProps = {\n  flex: true\n};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Section.local.scss';\n\nexport const Section = ({ children, full }) => (\n  <section\n    className={classnames('section-block', {\n      full\n    })}\n  >\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  children: node,\n  full: bool\n};\n\nexport const SectionTitle = ({ children, info }) => (\n  <>\n    <h3 className=\"section-title\">{children}</h3>\n    {info && <h4 className=\"section-title-info\">{info}</h4>}\n  </>\n);\n\nSectionTitle.propTypes = {\n  children: node,\n  info: node\n};\n\nexport const SectionHeader = ({ children }) => (\n  <>\n    <header className=\"section-header\">{children}</header>\n  </>\n);\n\nSectionHeader.propTypes = {\n  children: node\n};\n\nexport const SectionInfo = ({ children }) => (\n  <>\n    <h4 className=\"section-title-info\">{children}</h4>\n  </>\n);\n\nSectionInfo.propTypes = {\n  children: node\n};\n\nexport const SectionContent = ({ children }) => (\n  <>\n    <main className=\"section-content\">{children}</main>\n  </>\n);\n\nSection.Header = SectionHeader;\nSection.Content = SectionContent;\nSection.Title = SectionTitle;\nSection.Info = SectionInfo;\n","import React, { useState, useCallback } from 'react';\n\nimport { func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './ScrollableContainer.local.scss';\n\nexport const ScrollableContainer = ({ children, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  return (\n    <div\n      className={classnames('scrollable-container', {\n        scrolled,\n        [variant]: variant\n      })}\n    >\n      {children({\n        className: classnames('scrollable-element', {\n          [variant]: variant\n        }),\n        onWheel\n      })}\n    </div>\n  );\n};\n\nScrollableContainer.propTypes = {\n  children: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nScrollableContainer.defaultProps = {};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport './Column.local.scss';\n\nexport const Column = ({ children, ...rest }) => {\n  return (\n    <div className=\"column\" {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Row.local.scss';\n\nexport const Row = ({ children, compact, ...rest }) => {\n  return (\n    <div className={classnames('row', { compact })} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { jobsSelector } from 'shared/store/state';\nimport { filterStatusSelector } from '../../store/state';\n\nimport { Daemon, JobStatus } from './components';\n\nimport './status.local.scss';\n\nexport class StatusContainer extends React.PureComponent {\n  render() {\n    const { className, jobs } = this.props;\n    return (\n      <Paper className={className}>\n        <Daemon />\n        <div className=\"jobs-status-container\">\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader inline>Loading jobs</Loader>\n            </Center>\n          ) : (\n            this.filterJobs(jobs.toJS().content)\n          )}\n        </div>\n      </Paper>\n    );\n  }\n\n  filterJobs = jobs => {\n    const { active } = this.props;\n    const count = {\n      executing: 0,\n      succeeded: 0,\n      scheduled: 0,\n      aborted: 0,\n      failed: 0\n    };\n    count.executing = jobs.filter(job => job.status === 'EXECUTING')?.length;\n    count.succeeded = jobs.filter(job => job.status === 'SUCCEEDED')?.length;\n    count.scheduled = jobs.filter(job => job.status === 'SCHEDULED')?.length;\n    count.aborted = jobs.filter(job => job.status === 'ABORTED')?.length;\n    count.failed = jobs.filter(job => job.status === 'FAILED')?.length;\n\n    return (\n      <>\n        <JobStatus count={count.executing} status=\"EXECUTING\" active={active} />\n        <JobStatus count={count.succeeded} status=\"SUCCEEDED\" active={active} />\n        <JobStatus count={count.scheduled} status=\"SCHEDULED\" active={active} />\n        <JobStatus count={count.aborted} status=\"ABORTED\" active={active} />\n        <JobStatus count={count.failed} status=\"FAILED\" active={active} />\n      </>\n    );\n  };\n}\n\nStatusContainer.propTypes = {\n  className: PropTypes.string,\n  jobs: PropTypes.object.isRequired\n};\n\nStatusContainer.defaultProps = {\n  className: 'status-container'\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  active: filterStatusSelector(state)\n});\n\nexport default connect(mapStateToProps)(StatusContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { daemonPoller } from '../../../../store/tasks';\nimport { isDaemonRunning } from '../../../../store/selectors';\n\nimport './daemon.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const Daemon = () => {\n  const running = useSelector(isDaemonRunning);\n\n  useEffect(() => {\n    daemonPoller.start();\n\n    return () => {\n      daemonPoller.stop();\n    };\n  }, []);\n\n  return (\n    <div className=\"daemon qa-daemon-status\">\n      {running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.running\" />}>\n          <div className=\"status running\">\n            <PlayCircleOutlineIcon />\n          </div>\n        </LightTooltip>\n      )}\n\n      {!running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.not.running\" />}>\n          <div className=\"status not-running\">\n            <ErrorOutlineIcon className=\"not-running\" />\n          </div>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport { actions } from 'dashboard/store/actions';\nimport { filterStatusSelector } from 'dashboard/store/state';\n\nimport './job-status.local.scss';\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return <>{this.renderContent()}</>;\n  }\n\n  filterByStatus = status => {\n    if (this.props.storeStatus === status.toUpperCase()) {\n      this.props.setStatus('ALL');\n    } else {\n      this.props.setStatus(status.toUpperCase());\n    }\n  };\n\n  renderContent() {\n    let icon = null;\n    let status = '';\n    switch (this.props.status) {\n      case 'EXECUTING':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiProgressClock} />\n          </SvgIcon>\n        );\n        status = 'executing';\n        break;\n      case 'SUCCEEDED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCheckCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'succeeded';\n        break;\n      case 'SCHEDULED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCalendarArrowRight} />\n          </SvgIcon>\n        );\n        status = 'scheduled';\n        break;\n      case 'ABORTED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiStopCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'aborted';\n        break;\n      case 'FAILED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiAlertRhombusOutline} />\n          </SvgIcon>\n        );\n        status = 'failed';\n        break;\n      default:\n        // error message\n        break;\n    }\n\n    if (icon) {\n      return (\n        <div\n          className={classnames(`job-status ${status}`, {\n            active: this.props.status === this.props.active\n          })}\n          role=\"presentation\"\n          onClick={() => this.filterByStatus(status)}\n        >\n          <div className=\"header\">\n            <div className=\"icon\">{icon}</div>\n            <div className=\"count\">{this.props.count}</div>\n          </div>\n          <div className=\"status\">{this.props.status}</div>\n        </div>\n      );\n    }\n    // error case\n    return null;\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setStatus: PropTypes.func\n};\n\nexport const mapStateToProps = state => ({\n  storeStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setStatus: status => dispatch(actions.setFilterStatus.dispatchEvent(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobStatus);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector, processesSearchedSelector } from 'shared/store/state';\n\nimport { FormattedMessage } from 'react-intl';\nimport { debounce } from 'lodash';\nimport { mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport Paper from '@material-ui/core/Paper';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { SearchInput } from 'shared/components';\nimport { SearchResults } from '../../components';\n\nimport './search-area.local.scss';\n\n/** EXPERIMENTAL :D */\nimport { AddFilter } from '../../components/add-filter/add-filter';\n\nexport class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSearchResults: false,\n      searchTerm: '',\n      selectedFilter: null\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    if (this.state.showSearchResults) {\n      this.getSearchResults(searchedTerm);\n    }\n  }, 500);\n\n  render() {\n    const { className, getSearchedJobs, getSearchedProcesses } = this.props;\n    return (\n      <Paper\n        className={`${className} ${this.state.showSearchResults ? 'no-bottom-radius' : ''}\n        `}\n      >\n        <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n\n        <AddFilter\n          filters={this.state.selectedFilter}\n          updateFilters={this.updateSelectedFilter}\n          hasSearchTerm={this.state.searchTerm.length > 0}\n        />\n\n        {this.state.searchTerm.length > 0 && (\n          <div className=\"clear-search\">\n            <ClearIcon onClick={this.clearSearch} />\n          </div>\n        )}\n        {this.state.showSearchResults && (\n          <div className=\"search-results-container\">\n            <SearchResults\n              category=\"jobs\"\n              totalResults={getSearchedJobs.get('total_count')}\n              content={getSearchedJobs.get('content')}\n              isLoading={getSearchedJobs.get('fetching')}\n              displayedResults={this.state.selectedFilter ? 7 : 3}\n              filters={{\n                nameFilter: this.state.searchTerm,\n                customFilter: this.state.selectedFilter\n              }}\n            />\n            {!this.state.selectedFilter && (\n              <SearchResults\n                category=\"processes\"\n                totalResults={getSearchedProcesses.get('total_count')}\n                content={getSearchedProcesses.get('content')}\n                isLoading={getSearchedProcesses.get('fetching')}\n                displayedResults={3}\n              />\n            )}\n            <div className=\"full-results-container qa-full-search-results\">\n              <div className=\"icon-container\">\n                <SearchIcon />\n              </div>\n              <div className=\"content\">\n                <FormattedMessage id=\"dashboard.view-full-search-results\" />\n              </div>\n              <div className=\"open qa-open-full-results\">\n                <SvgIcon>\n                  <Icon path={mdiChevronRight} />\n                </SvgIcon>\n              </div>\n            </div>\n          </div>\n        )}\n      </Paper>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: this.state.selectedFilter ? 7 : 3,\n      page: 1,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    if (this.state.selectedFilter) {\n      switch (this.state.selectedFilter.type) {\n        case 'user':\n          QSP.owner = this.state.selectedFilter.value;\n          break;\n        case 'status':\n          QSP.status = this.state.selectedFilter.value.toUpperCase();\n          break;\n        case 'day':\n          QSP.date_invoke = moment(this.state.selectedFilter.value).format('YYYY-MM-DD');\n          QSP.period = 1;\n          break;\n        default:\n          break;\n      }\n    }\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n\n    if (!this.state.selectedFilter) {\n      this.props.searchProcesses({ name_filter: searchedTerm, page_size: 3, page: 1 });\n    }\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length < 3 && this.state.showSearchResults) {\n      this.setState({ showSearchResults: false });\n    } else if (searchedTerm.length === 3) {\n      if (!this.state.showSearchResults) {\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    } else if (searchedTerm.length > 3) {\n      if (!this.state.showSearchResults) {\n        // used for pasted value\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({\n      showSearchResults: false,\n      searchTerm: '',\n      selectedFilter: null\n    });\n  };\n\n  updateSelectedFilter = (filter /** operationType */) => {\n    /**\n     *  FIXME: TO OUR FUTURE SELVES\n     *  save(null) will not be ok in terms of filters being arrays,\n     *  ideally we should delimit the operation delete, add, edit  @Constanin you will do this my friend :D\n     */\n\n    if (this.state.searchTerm) {\n      this.setState({ selectedFilter: filter }, () => {\n        this.getSearchResults(this.state.searchTerm);\n      });\n    } else {\n      this.setState({ selectedFilter: filter });\n    }\n  };\n}\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  searchJobs: PropTypes.func.isRequired,\n  getSearchedJobs: PropTypes.object.isRequired,\n  searchProcesses: PropTypes.func.isRequired,\n  getSearchedProcesses: PropTypes.object.isRequired\n};\n\nSearch.defaultProps = {\n  className: 'search-container'\n};\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state),\n  getSearchedProcesses: processesSearchedSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data)),\n  searchProcesses: data => dispatch(actions.searchProcesses.dispatchLoading(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed } from '@mdi/js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport { JobResults } from 'shared/components/JobResults';\nimport { createUrl } from 'shared/lib';\n\nimport './search-results.local.scss';\n\nexport class SearchResultsComponent extends React.PureComponent {\n  render() {\n    const { className, category, totalResults, isLoading, displayedResults, content } = this.props;\n    return (\n      <div className={className}>\n        {isLoading ? (\n          <div className=\"header-area\">\n            <div className=\"category-name\">{category}</div>\n            <div className=\"loading\">\n              <CircularProgress size=\"20px\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"header-area\">\n              <div className=\"category-name\">{category}</div>\n              <div className=\"separator\">-</div>\n              <div className=\"total-results\">\n                {totalResults} <FormattedMessage id=\"dashboard.results\" />\n              </div>\n              {totalResults > displayedResults && (\n                <Button className=\"all-results qa-view-all-results\">\n                  {category === 'jobs' && (\n                    <Link to={() => this.createURLLink()}>\n                      <FormattedMessage id=\"dashboard.view-all-results\" />\n                    </Link>\n                  )}\n                  {category !== 'jobs' && <FormattedMessage id=\"dashboard.view-all-results\" />}\n                </Button>\n              )}\n            </div>\n            <div className=\"content-area\">\n              {category === 'jobs' && <JobResults jobs={content} />}\n              {category === 'processes' && this.renderProcessesResults()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderProcessesResults = () =>\n    this.props.content.map((process, index) => (\n      <div key={index} className=\"result-process-row\">\n        <div className=\"icon-container\">\n          <SvgIcon>\n            <Icon path={mdiPlaySpeed} />\n          </SvgIcon>\n        </div>\n        <div className=\"process-container\">{process.get('name')}</div>\n      </div>\n    ));\n\n  createURLLink = () => {\n    let url = '/jobs/search-results';\n    const params = {};\n\n    if (this.props.filters.nameFilter) {\n      params.name_filter = this.props.filters.nameFilter;\n    }\n\n    if (this.props.filters.customFilter) {\n      params[this.props.filters.customFilter.type] = this.props.filters.customFilter.value;\n    }\n\n    url = createUrl(url, params);\n    return url;\n  };\n}\n\nexport default SearchResultsComponent;\n\nSearchResultsComponent.propTypes = {\n  className: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  category: PropTypes.string,\n  totalResults: PropTypes.number,\n  isLoading: PropTypes.bool,\n  displayedResults: PropTypes.number\n};\n\nSearchResultsComponent.defaultProps = {\n  className: 'results-container',\n  content: [],\n  category: '',\n  totalResults: 0,\n  isLoading: false,\n  displayedResults: 3\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { JobsEffect } from './jobs/jobs.effect';\nimport { JobsConnectionsEffect } from './connections/connections.effect';\nimport { SearchJobsEffect } from './search-jobs/search-jobs.effect';\nimport { SearchProcessesEffect } from './search-processes/search-processes.effect';\nimport { GlobalFiltersEffect } from './global-filters/global-filters.effect';\n\nexport const sharedEffects = [\n  JobsEffect,\n  JobsConnectionsEffect,\n  SearchJobsEffect,\n  SearchProcessesEffect,\n  GlobalFiltersEffect\n];\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Cookie from 'js-cookie';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\n\nimport { Login, Logout } from 'session';\nimport { actionStates } from 'shared/lib/action-creator';\nimport { authorizationSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Layout } from './core';\n\nimport './scoped-css-mui-compatibility';\n\nexport class RootModule extends React.PureComponent {\n  componentDidMount() {\n    if (!Cookie.get('Authorization')) {\n      this.props.history.push('/login');\n      this.props.setAuthorization();\n\n      return;\n    }\n\n    this.props.checkAuthorization();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.authorizationStatus !== prevProps.authorizationStatus &&\n      this.props.authorizationStatus === actionStates.FAIL\n    ) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    if (this.props.authorizationStatus === actionStates.LOADING) {\n      return (\n        <Center>\n          <CircularProgress />\n        </Center>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path={Login.path} component={Login} />\n        <Route exact path={Logout.path} component={Logout} />\n        <Route path=\"/\" component={Layout} />\n      </Switch>\n    );\n  }\n}\n\nRootModule.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  authorizationStatus: PropTypes.oneOf([\n    '',\n    actionStates.SUCCESS,\n    actionStates.LOADING,\n    actionStates.FAIL\n  ]).isRequired,\n  setAuthorization: PropTypes.func.isRequired,\n  checkAuthorization: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  authorizationStatus: authorizationSelector(state).get('status')\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  checkAuthorization: () => dispatch(actions.checkAuthorization.dispatchLoading()),\n  setAuthorization: () => dispatch(actions.checkAuthorization.dispatchFail())\n});\n\nexport default hot(connect(mapStateToProps, mapDispatchToProps)(RootModule));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Dashboard } from 'dashboard';\nimport { Jobs } from 'jobs';\nimport { Entities } from 'entities';\nimport { UsersAndGroups } from 'users-manager';\nimport { Explorer } from 'explorer';\nimport { Sidebar } from './containers';\nimport { JobProcess } from '../job-process';\nimport { ConnectedJobsSearchResults } from 'jobs-search-results/JobsSearchResults';\nimport { ConnectedExecutiveDashboard } from 'executive-dashboard/ExecutiveDashboard';\nimport { LicenseCollection } from 'license-collection/LicenseCollection';\n\nimport './root.local.scss';\n\nexport class RootLayout extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Sidebar />\n        <div className=\"app-container\">\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/jobs/search-results\" component={ConnectedJobsSearchResults} />\n            <Route exact path=\"/jobs/job\" component={JobProcess} />\n            <Route exact path=\"/system/entities\" component={Entities} />\n            <Route path=\"/system/mas-accounts\" component={UsersAndGroups} />\n            <Route exact path=\"/system/explorer\" component={Explorer} />\n            <Route\n              exact\n              path=\"/compliance/executive-dashboard\"\n              component={ConnectedExecutiveDashboard}\n            />\n            <Route exact path=\"/compliance/license-collection\" component={LicenseCollection} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nRootLayout.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { connect } from 'react-redux';\n\nimport { getWorkloadData } from 'shared/lib/workload';\n\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\n\nimport { Header } from 'core/components/Header';\nimport {\n  WorkloadGraph,\n  Center,\n  RangeDatePicker,\n  SimpleSearchInput,\n  Switch\n} from 'shared/components';\nimport { Main, Paper } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { JobItem } from './components/job-item';\nimport { JobList } from './components/job-list';\n\nimport { Filters } from './containers/filters';\nimport { JobsInvocations } from './containers/jobs-invocations';\n\nimport { Schedule } from './containers/Schedule/Schedule';\n\nimport './jobs.local.scss';\n\nfunction renderJobItem(item, index) {\n  return <JobItem extended key={index} job={item} />;\n}\n\nclass RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      },\n      shell_host_address_filter: query.get('shell_host_address_filter'),\n      protocol_filter: query.get('protocol_filter'),\n      status: query.get('status'),\n      database_name_filter: query.get('database_name_filter'),\n      name_filter: '',\n      selectedTab: 'all'\n    };\n  }\n\n  render() {\n    const {\n      shell_host_address_filter,\n      protocol_filter,\n      status,\n      database_name_filter,\n      selectedTab\n    } = this.state;\n\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Jobs\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    return (\n      <JobsInvocations>\n        <Header title=\"Jobs\">\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <NavigationTab\n                tabs={[\n                  { label: 'All jobs', value: 'all' },\n                  { label: 'Upcoming', value: 'upcoming' }\n                ]}\n                active={selectedTab}\n                onClick={this.handleOnTabChange}\n              />\n            </Paper.Header>\n            <Switch value={selectedTab}>\n              <Switch.Case value=\"all\">\n                <Paper.Header>\n                  <div style={{ height: 220, width: '100%' }}>\n                    {this.props.jobs.get('fetching') ? (\n                      <Center>\n                        <Loader>Computing workload</Loader>\n                      </Center>\n                    ) : (\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                      />\n                    )}\n                  </div>\n                </Paper.Header>\n              </Switch.Case>\n              <Switch.Case value=\"upcoming\">{null}</Switch.Case>\n            </Switch>\n            <Paper.Content scrollable={false}>\n              <div className=\"jobs-filters-controllers\">\n                <div className=\"job-search\">\n                  <SimpleSearchInput\n                    value={this.state.name_filter}\n                    onBlur={() => this.performFilter(this.state)}\n                    onChange={this.onSearchInputChange}\n                  />\n                </div>\n                <Filters\n                  selections={{\n                    shell_host_address_filter,\n                    protocol_filter,\n                    status,\n                    database_name_filter\n                  }}\n                  onChange={this.handleOnFilterChange}\n                  excludeStatus={selectedTab === 'upcoming'}\n                />\n              </div>\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Loading jobs list</Loader>\n                </Center>\n              ) : (\n                <JobList items={this.returnListBasedOnTab()}>{renderJobItem}</JobList>\n              )}\n            </Paper.Content>\n            <Paper.Footer>\n              <Schedule />\n              <Button to=\"/jobs/job\">New Job</Button>\n            </Paper.Footer>\n          </Paper>\n        </Main>\n      </JobsInvocations>\n    );\n  }\n\n  updateQSP = (filter, value) => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (!value) {\n      query.delete(filter);\n    } else if (query.has(filter) && query.get(filter) !== value) {\n      query.set(filter, value);\n    } else {\n      query.append(filter, value);\n    }\n\n    query.toString();\n\n    this.props.history.push({ search: `?${query}` });\n  };\n\n  handleOnTabChange = tab => {\n    this.setState({ selectedTab: tab });\n  };\n\n  handleOnFilterChange = (filter, value) => {\n    this.updateQSP(filter, value);\n\n    this.setState(\n      {\n        [filter]: value\n      },\n      () => {\n        this.performFilter(this.state);\n      }\n    );\n  };\n\n  returnListBasedOnTab = () => {\n    const { selectedTab, status } = this.state;\n    const list = this.props.jobs.get('content');\n\n    if (status) {\n      return list.filter(item => item.get('status') === status);\n    }\n\n    if (selectedTab === 'upcoming') {\n      return list.filter(item => item.get('status') === 'SCHEDULED');\n    }\n\n    return list;\n  };\n\n  performFilter = ({\n    shell_host_address_filter,\n    protocol_filter,\n    status,\n    database_name_filter,\n    name_filter\n  }) => {\n    const { globalFilters } = this.props;\n\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const payload = {\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    };\n\n    if (shell_host_address_filter) {\n      payload.shell_host_address_filter = shell_host_address_filter;\n    }\n\n    if (protocol_filter) {\n      payload.protocol_filter = protocol_filter;\n    }\n\n    if (status) {\n      payload.status = status;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (name_filter) {\n      payload.name_filter = name_filter;\n    }\n\n    this.props.getJobs(payload);\n  };\n\n  onSearchInputChange = event => {\n    this.setState({\n      name_filter: event.target.value\n    });\n  };\n\n  onChangeDatesHandler = range => {\n    this.setState(\n      {\n        range: {\n          startDate: range.startDate,\n          endDate: range.endDate\n        }\n      },\n      () => {\n        this.props.setGlobalFilters(range);\n        this.performFilter(this.state);\n      }\n    );\n  };\n}\nRootModule.propTypes = {\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n  },\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport { bool } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MUITextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from '../../LightTooltip/LightTooltip';\n\nimport './Input.local.scss';\n\nexport const Input = forwardRef(function InputFw(\n  { inline, error, size, children, description, multiline, ...rest },\n  ref\n) {\n  const InputProps = { ...(rest.InputProps && rest.InputProps) };\n\n  if (description) {\n    InputProps.endAdornment = (\n      <>\n        <InputAdornment position=\"end\">\n          <LightTooltip title={description}>\n            <SvgIcon>\n              <path d={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        </InputAdornment>\n        {InputProps.endAdornment}\n      </>\n    );\n  }\n\n  return (\n    <MUITextField\n      ref={ref}\n      fullWidth\n      className={classnames('input-field', { inline, error })}\n      variant=\"outlined\"\n      error={error}\n      {...(multiline && {\n        multiline: true,\n        rows: 7\n      })}\n      {...rest}\n      InputProps={InputProps} // eslint-disable-line\n      size={size}\n    >\n      {children}\n    </MUITextField>\n  );\n});\n\nInput.propTypes = {\n  inline: bool,\n  error: bool\n};\n","import React from 'react';\nimport MUIButton from '@material-ui/core/Button';\n\nimport './Button.local.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nexport const Button = ({ to, href, ...props }) => {\n  const link = to || href;\n\n  if (link) {\n    return <MUIButton color=\"primary\" {...props} component={LinkBehavior} to={link} />;\n  }\n\n  return <MUIButton color=\"primary\" {...props} />;\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { Link } from 'react-router-dom';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiClockOutline, mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { JobStatus } from '../job-status';\n\nimport './job-item.local.scss';\n\nexport class JobItem extends React.PureComponent {\n  render() {\n    return (\n      <Link to={`/jobs/job/?invocation=${this.props.job.get('uuid')}`}>\n        <div className={`${this.props.className}`}>\n          <div className=\"status-icon\">\n            <JobStatus status={this.props.job.get('status')} />\n          </div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <div className=\"name\" title={this.props.job.get('process')}>\n                {this.formatName()}\n              </div>\n            </div>\n            <div className=\"second-row\">\n              <div className=\"metadata-element time\">\n                <SvgIcon>\n                  <path d={mdiClockOutline} />\n                </SvgIcon>\n                {moment(this.props.job.get('date_invoke')).format('D MMM YYYY, HH:mm:ss')}\n              </div>\n              {this.props.job.get('user_owner') && (\n                <div className=\"metadata-element run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"metadata-element dbms\">\n                    <SvgIcon>\n                      <path d={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"metadata-element server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"metadata-element database\">\n                    <SvgIcon>\n                      <path d path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    );\n  }\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItem.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired\n};\n\nJobItem.defaultProps = {\n  className: 'job-item'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiCancel,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport './job-status.local.scss';\n\nconst statusMap = {\n  EXECUTING: mdiProgressClock,\n  SUCCEEDED: mdiCheckCircleOutline,\n  SCHEDULED: mdiCalendarArrowRight,\n  DELAYED: mdiTimelineClock,\n  ABORTED: mdiStopCircleOutline,\n  FAILED: mdiAlertRhombusOutline,\n  KILLED: mdiCancel\n};\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"daemon qa-daemon-status\">\n        <div className={`status ${this.props.status.toLowerCase()}`}>\n          <SvgIcon>\n            <path d={statusMap[this.props.status]} />\n          </SvgIcon>\n        </div>\n      </div>\n    );\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string\n};\nJobStatus.defaultProps = {\n  status: ''\n};\n","import React from 'react';\n\nimport { any, func } from 'prop-types';\n\nimport { Overflow, Center } from 'shared/components/layout';\n\nimport './job-list.local.scss';\n\nexport const JobList = ({ items, children }) => {\n  const noneAvailable = items.size === 0;\n\n  if (noneAvailable) {\n    return <NoJobs />;\n  }\n\n  return (\n    <Overflow variant=\"white\" component=\"ul\">\n      {items.map((item, index, list) => (\n        <li key={index} className=\"list-item\">\n          {children(item, index, list)}\n        </li>\n      ))}\n    </Overflow>\n  );\n};\n\nJobList.propTypes = {\n  items: any,\n  children: func\n};\n\nJobList.defaultProps = {\n  items: []\n};\n\nfunction NoJobs() {\n  return (\n    <Center>\n      <p>There are no jobs available with these filters.</p>\n    </Center>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getJobsFiltersOptions } from 'shared/store/selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiHexagonMultipleOutline, mdiDatabase, mdiServer, mdiCircleSlice5 } from '@mdi/js';\n\nimport MUIselect from 'shared/components/MUIselect';\nimport './filters.scss';\n\nconst Filters = props => {\n  const { filters, selections, onChange, excludeStatus } = props;\n  const { shell_host_address_filter, protocol_filter, status, database_name_filter } = selections;\n\n  return (\n    <div className=\"job-filters\">\n      <MUIselect\n        options={[\n          { value: '', label: 'All' },\n          ...filters.protocol.map(el => ({ value: el, label: el }))\n        ]}\n        selectedOption={{ value: protocol_filter }}\n        handleSelect={({ value }) => onChange('protocol_filter', value)}\n        label={\n          <span className=\"job-filter-select-label-wrap\">\n            <SvgIcon>\n              <path d={mdiHexagonMultipleOutline} />\n            </SvgIcon>\n            <span className=\"job-filter-select-label\">DBMS</span>\n          </span>\n        }\n      />\n      <MUIselect\n        options={[\n          { value: '', label: 'All' },\n          ...filters.database.map(el => ({ value: el, label: el }))\n        ]}\n        selectedOption={{ value: database_name_filter }}\n        handleSelect={({ value }) => onChange('database_name_filter', value)}\n        label={\n          <span className=\"job-filter-select-label-wrap\">\n            <SvgIcon>\n              <path d={mdiServer} />\n            </SvgIcon>\n            <span className=\"job-filter-select-label\">Database</span>\n          </span>\n        }\n      />\n      <MUIselect\n        options={[\n          { value: '', label: 'All' },\n          ...filters.address.map(el => ({ value: el, label: el }))\n        ]}\n        selectedOption={{ value: shell_host_address_filter }}\n        handleSelect={({ value }) => onChange('shell_host_address_filter', value)}\n        label={\n          <span className=\"job-filter-select-label-wrap\">\n            <SvgIcon>\n              <path d={mdiDatabase} />\n            </SvgIcon>\n            <span className=\"job-filter-select-label\">Server</span>\n          </span>\n        }\n      />\n      {!excludeStatus && (\n        <MUIselect\n          selectedOption={{ value: status }}\n          options={[\n            { value: '', label: 'All' },\n            ...filters.status.map(el => ({ value: el, label: el }))\n          ]}\n          handleSelect={({ value }) => onChange('status', value)}\n          label={\n            <span className=\"job-filter-select-label-wrap\">\n              <SvgIcon>\n                <path d={mdiCircleSlice5} />\n              </SvgIcon>\n              <span className=\"job-filter-select-label\">Status</span>\n            </span>\n          }\n        />\n      )}\n    </div>\n  );\n};\nFilters.propTypes = {\n  filters: PropTypes.object.isRequired,\n  selections: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  excludeStatus: PropTypes.bool\n};\n\nexport const mapStateToProps = state => ({\n  filters: getJobsFiltersOptions(state)\n});\n\nexport default connect(mapStateToProps)(Filters);\n","import { createSelector } from 'reselect';\n\nimport { connectionsSelector } from '../state';\n\nexport const getJobsFiltersOptions = createSelector(connectionsSelector, connections => {\n  const filters = {\n    address: [], // connections - server\n    protocol: [], // connections - dbms\n    status: ['EXECUTING', 'SUCCEEDED', 'SCHEDULED', 'ABORTED', 'FAILED'], // hardcoded\n    database: [] // connections -  database\n  };\n\n  connections.get('content').forEach(connection => {\n    const address = connection.get('address');\n    const protocol = connection.get('protocol');\n    const database = connection.getIn(['special', 'database']);\n\n    if (address && !filters.address.includes(address)) {\n      filters.address.push(address);\n    }\n\n    if (protocol && !filters.protocol.includes(protocol)) {\n      if (protocol !== 'SSH') {\n        filters.protocol.push(protocol);\n      }\n    }\n\n    if (database && !filters.database.includes(database)) {\n      filters.database.push(database);\n    }\n  });\n  return filters;\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { actions } from 'shared/store/actions';\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\nimport { globalFiltersSelector } from 'shared/store/state';\n\nexport const JobsInvocations = ({ children }) => {\n  const dispatch = useDispatch();\n  const getJobs = data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n    dispatch(actions.getConnections.dispatchLoading(data));\n  };\n  const globalFilters = useSelector(globalFiltersSelector);\n\n  React.useEffect(() => {\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    getJobs({\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n    dispatch(loadAllAccountsThunk({ from: 'jobs' }));\n  }, []);\n\n  return children;\n};\nJobsInvocations.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './ModalFooter.local.scss';\n\nexport const ModalFooter = ({ children }) => {\n  return <footer className=\"modal-footer\">{children}</footer>;\n};\n\nModalFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nModalFooter.Left = LeftSideSlot;\nModalFooter.Right = RightSideSlot;\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\n\nimport './root.local.scss';\nimport { MenuItem } from '@material-ui/core';\nimport { fetchEntities, selectEntity, setFilterType, setFilterSearch, openModal } from './actions';\nimport { getEntities, getBreadcrumbs, ENTITY_TYPES, getSelectedEntity } from './selectors';\nimport Entity from './components/Entity';\nimport SelectedEntity from './containers/SelectedEntity';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport debounce from 'lodash/debounce';\n\n/* eslint-disable */\n\nconst ENTITY_ICONS = {\n  root: <FolderIcon />,\n  namespace: <FolderIcon />,\n  constant: <FilterCenterFocusIcon />,\n  form: <AssignmentTurnedInIcon />,\n  schedule: <EventNoteIcon />,\n  account: <VpnKeyIcon />,\n  process: <SlowMotionVideoIcon />,\n  type: <DeveloperModeIcon />,\n  exception: <WarningIcon />,\n  prototype: <AssignmentIcon />\n};\n\nlet searchWithDebounce = () => {};\n\nfunction RootModule({\n  fetchEntities,\n  selectEntity,\n  columns,\n  breadcrumbs,\n  filters,\n  setFilterType,\n  setFilterSearch,\n  selectedEntity,\n  job\n}) {\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    fetchEntities();\n    searchWithDebounce = debounce(value => {\n      setFilterSearch(value);\n    }, 700);\n    if (filters.search) {\n      setSearchInput(filters.search);\n    }\n  }, []);\n\n  function renderBreadcrumb(breadcrumb) {\n    return (\n      <span key={breadcrumb}>\n        <span className=\"breadcrumb\">{breadcrumb}</span> /{' '}\n      </span>\n    );\n  }\n\n  function renderColumn(columns, colNum) {\n    return (\n      <div key={colNum}>\n        {columns.rows.map(entity => (\n          <Entity\n            key={entity.name}\n            entity={entity}\n            selectEntity={selectEntity}\n            columns={columns}\n            entityIcons={ENTITY_ICONS}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function handleSearchChange(e) {\n    const val = e.target.value;\n    searchWithDebounce(val);\n    setSearchInput(val);\n  }\n\n  function renderColumns() {\n    if (Array.isArray(columns) && columns[0]?.rows?.length) {\n      return columns.map(renderColumn);\n    }\n    return 'No Entities Found.';\n  }\n\n  return (\n    <>\n      <Header title=\"Entities\" />\n      <Container maxWidth={false} classes={{ root: 'define-height-container' }}>\n        <div className=\"entities-breadcrumb\">{['root', ...breadcrumbs].map(renderBreadcrumb)}</div>\n        <div className=\"entities-filters\">\n          <Select value={filters.type} onChange={ev => setFilterType(ev.target.value)}>\n            {[{ type: 'all', title: 'ALL' }, ...ENTITY_TYPES].map(type => (\n              <MenuItem key={type.type} value={type.type}>\n                {type.title}\n              </MenuItem>\n            ))}\n          </Select>\n          <div className=\"entities-search-wrap\">\n            <SimpleSearchInput value={searchInput} onChange={handleSearchChange} />\n          </div>\n        </div>\n        <Grid container spacing={3} classes={{ root: 'define-height-grid-root' }}>\n          <Grid item xs={9} classes={{ root: 'define-height' }}>\n            <div className=\"columns\">{renderColumns()}</div>\n          </Grid>\n          <Grid item xs={3}>\n            <SelectedEntity selectedEntity={selectedEntity} entityIcons={ENTITY_ICONS} />\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nRootModule.propTypes = {\n  fetchEntities: PropTypes.func,\n  selectEntity: PropTypes.func,\n  setFilterType: PropTypes.func,\n  setFilterSearch: PropTypes.func,\n  columns: PropTypes.array,\n  breadcrumbs: PropTypes.array,\n  filters: PropTypes.object,\n  selectedEntity: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    columns: getEntities(state),\n    breadcrumbs: getBreadcrumbs(state),\n    filters: state.entities.filters,\n    selectedEntity: getSelectedEntity(state)\n  }),\n  { fetchEntities, selectEntity, setFilterType, setFilterSearch, openModal }\n)(RootModule);\n","import React from 'react';\nimport { Route, Link, Switch, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header/Header';\n\nimport { Button } from 'shared/components/controls';\n\nimport { HeaderPageSwitch } from './components/HeaderPageSwitch/HeaderPageSwitch';\n\nimport { UsersPage } from './users';\n\nimport { GroupsPage } from './groups';\n\nexport const UsersAndGroupsPage = () => {\n  return (\n    <>\n      <Header>\n        <UserManagementHeaderLinks />\n        <RightSideControls />\n      </Header>\n      <UserManagementSwitch />\n    </>\n  );\n};\n\nexport const UserManagementHeaderLinks = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  const routes = [\n    { to: `${url}/users`, label: 'Users' },\n    { to: `${url}/groups`, label: 'Groups' }\n  ];\n\n  return <HeaderPageSwitch active={location.pathname} routes={routes} />;\n};\n\nexport const RightSideControls = () => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  if (location.pathname.includes('create-new')) {\n    return null;\n  }\n\n  if (location.pathname.includes('users')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/users/create-new`} component={Link}>\n          Create User\n        </Button>\n      </div>\n    );\n  }\n\n  if (location.pathname.includes('groups')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/groups/create-new`} component={Link}>\n          Create Group\n        </Button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const UserManagementSwitch = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${url}`}>\n        <UsersPage />\n      </Route>\n      <Route path={`${url}/groups`}>\n        <GroupsPage />\n      </Route>\n      <Route path={`${url}/users`}>\n        <UsersPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default UsersAndGroupsPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { func, array, object } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport { Main } from 'shared/components/layout';\n\nimport { loadAllUsersThunk } from '../store/thunks';\n\nimport './root.scss';\n\nimport { ConnectedUserLoader } from './containers/UserLoader';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { UserCard } from '../components/UserCard/UserCard';\n\nimport { NoUserSelectedPage } from './pages/NoUsersSelected';\nimport { CreateNewUserPage } from './pages/CreateNewUser/CreateNewUser';\n\nexport const UsersPage = ({ allUsers, selectedUser, loadAllUsers }) => {\n  useEffect(() => {\n    loadAllUsers();\n  }, []);\n\n  function filterUserByQuery(user, query) {\n    return user.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const userLink = user => {\n    return `${match.url}/${user.name}`;\n  };\n\n  return (\n    <Main>\n      <section className=\"users-search-section\">\n        <SearchableList items={allUsers} filter={filterUserByQuery}>\n          {user => <UserCard selected={selectedUser} user={user} href={userLink(user)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <UserSwitch />\n      </section>\n    </Main>\n  );\n};\n\nUsersPage.propTypes = {\n  allUsers: array,\n  selectedUser: object,\n  loadAllUsers: func\n};\n\nexport const UserSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewUserPage />\n      </Route>\n      <Route path={`${path}/:userName`}>\n        <ConnectedUserLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoUserSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allUsers: state.usersManager.users.all,\n    selectedUser: state.usersManager.users.selected\n  }),\n  dispatch => ({\n    loadAllUsers: () => dispatch(loadAllUsersThunk())\n  })\n)(UsersPage);\n","import React, { useEffect } from 'react';\nimport { func, array } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main } from 'shared/components/layout';\n\nimport { loadAllGroupsThunk } from './store/thunks';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { GroupCard } from './components/GroupCard/GroupCard';\n\nimport { ConnectedGroupLoader } from './pages/GroupView/GroupView';\nimport { CreateNewGroupPage } from './pages/CreateNewGroup/CreateNewGroup';\nimport { NoGroupSelectedPage } from './pages/NoGroupSelected';\n\nimport './root.local.scss';\n\nexport const GroupsPage = ({ allGroups, loadAllGroups }) => {\n  useEffect(() => {\n    loadAllGroups();\n  }, []);\n\n  function filterGroupByQuery(group, query) {\n    return group.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const groupLink = group => {\n    return `${match.url}/${group.name}`;\n  };\n\n  return (\n    <Main>\n      <section className=\"search-list-section\">\n        <SearchableList items={allGroups} filter={filterGroupByQuery}>\n          {group => <GroupCard group={group} href={groupLink(group)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <GroupsPagesSwitch />\n      </section>\n    </Main>\n  );\n};\n\nGroupsPage.propTypes = {\n  allGroups: array,\n  loadAllGroups: func\n};\n\nexport const GroupsPagesSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewGroupPage />\n      </Route>\n      <Route path={`${path}/:groupName`}>\n        <ConnectedGroupLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoGroupSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allGroups: state.groups.all\n  }),\n  dispatch => ({\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(GroupsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, array, bool, object } from 'prop-types';\nimport moment from 'moment';\n\nimport { Center, RangeDatePicker } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper } from 'shared/components/layout';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions } from 'shared/store/actions';\nimport { Header } from 'core/components/Header';\nimport { loadAllAccountsThunk, loadProtocolsThunk } from './store/thunks';\nimport { Treeview } from './treeview';\nimport { ConnectedBreadcrumbsTitle } from './containers/Breadcrumbs/Breadcrumbs';\nimport { ContentSwitch } from './components/ContentSwitch/ContentSwitch';\n\nimport { AddServerCard } from './containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from './containers/AddDatabaseCard/AddDatabaseCard';\n\nimport './root.local.scss';\n\nexport class ExplorerPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n  }\n\n  componentDidMount() {\n    const { loadProtocols, loadAllAccounts } = this.props;\n\n    loadProtocols();\n    loadAllAccounts();\n  }\n\n  render() {\n    const {\n      treeviewData,\n      isLoading,\n      storeState: { level }\n    } = this.props;\n    return (\n      <>\n        <Header>\n          <h1 className=\"header-title\">Explorer</h1>\n          {level === 'workload' || level === 'license' ? (\n            <RangeDatePicker\n              onDatesChange={this.onChangeDatesHandler}\n              startDate={this.state.range.startDate}\n              endDate={this.state.range.endDate}\n            />\n          ) : null}\n        </Header>\n        <Main>\n          {isLoading ? (\n            <Center>\n              <Loader>Loading accounts</Loader>\n            </Center>\n          ) : (\n            <>\n              <Treeview data={treeviewData} />\n              <Paper>\n                <Paper.Header>\n                  <h1 className=\"breadcrumbs-title\">\n                    <ConnectedBreadcrumbsTitle />\n                  </h1>\n                  <div className=\"action-container\">\n                    <AddServerCard />\n                    <AddDatabaseCard />\n                  </div>\n                </Paper.Header>\n                <ContentSwitch activePage={level} />\n              </Paper>\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n\n  onChangeDatesHandler = range => {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n    }\n  };\n}\n\nExplorerPage.propTypes = {\n  treeviewData: array,\n  loadAllAccounts: func,\n  isLoading: bool,\n  storeState: object,\n  globalFilters: object,\n  setGlobalFilters: func\n};\n\nexport default connect(\n  state => ({\n    treeviewData: state.explorer.structured?.dbms || [],\n    isLoading: state.explorer.flags.accounts.loading || state.explorer.flags.protocols.loading,\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state)\n  }),\n  dispatch => ({\n    loadAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    loadProtocols: () => dispatch(loadProtocolsThunk()),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(ExplorerPage);\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { ConnectedDBMS } from './layers/Dbms/Dbms';\n\nimport './root.local.scss';\n\nexport class Treeview extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <ul className=\"treeview-container\">\n        {data.map(dbms => (\n          <ConnectedDBMS key={dbms.protocol} data={dbms} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTreeview.propTypes = {\n  data: array\n};\n\nexport default Treeview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StorageSidebar, ObjectsSidebar } from './Sidebar';\nimport { StorageViewer, ObjectsViewer } from './Viewer';\n\nimport './root.local.scss';\n\nexport const DbObjects = ({ type, data, list, dbName, selectedItem, setItem, loadingFlags, invalidObjects }) => {\n  const { loadingPoints, loadingDetails, loading } = loadingFlags;\n  if (type === 'storage') {\n    return (\n      <div className=\"db-objects-tabs\">\n        <StorageSidebar dbName={dbName} isLoading={loadingPoints} list={list} selectedItem={selectedItem} setItem={setItem} />\n        <StorageViewer data={data} isLoading={loadingDetails} />\n      </div>\n    );\n  }\n   return (\n      <div className=\"db-objects-tabs\">\n        <ObjectsSidebar dbName={dbName} invalidObjects={invalidObjects} isLoading={loading} list={list} selectedItem={selectedItem} setItem={setItem} />\n        <ObjectsViewer data={data} isLoading={loading} />\n      </div>\n    );\n};\n\nDbObjects.propTypes = {\n  type: PropTypes.string,\n  data: PropTypes.object,\n  list: PropTypes.array,\n  selectedItem: PropTypes.string,\n  setItem: PropTypes.func,\n  dbName: PropTypes.string\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport { currentUserSelector } from 'session/store/state';\nimport { Navigation, UserMenu, Compile } from './components';\n\nimport MasLogo from '../../../../assets/images/mas_logo_white.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_white.svg';\nimport './sidebar.local.scss';\n\nexport class SidebarContainer extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        <div className=\"logo-container\">\n          <img className=\"vendita-logo img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          <img className=\"mas-logo img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n        </div>\n\n        <div className=\"nav-area\">\n          <Navigation />\n        </div>\n        <div className=\"bottom\">\n          <Compile />\n          <UserMenu user={this.props.currentUser.get('name')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebarContainer.propTypes = {\n  className: PropTypes.string,\n  currentUser: PropTypes.object.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  currentUser: currentUserSelector(state)\n});\n\nSidebarContainer.defaultProps = {\n  className: 'sidebar'\n};\n\nexport default connect(mapStateToProps, null)(SidebarContainer);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarOutline } from '@mdi/js';\n\nimport './favorites.local.scss';\n\nexport class Favorites extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-nav-favorites`}>\n        <SvgIcon>\n          <Icon path={mdiStarOutline} />\n        </SvgIcon>\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  className: PropTypes.string\n};\n\nFavorites.defaultProps = {\n  className: 'favorites'\n};\n\nexport default Favorites;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { navigationItems } from './constants';\n\nimport './navigation.local.scss';\n\nexport class Navigation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      navId: '',\n      anchorElement: null\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setCurrentNavItem();\n  }\n\n  componentDidUpdate() {\n    this.setCurrentNavItem();\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {navigationItems.map((item, index) => {\n          if (item.items && item.items.length > 0) {\n            return (\n              <div key={index}>\n                <div\n                  role=\"presentation\"\n                  key={index}\n                  className={`nav-item ${\n                    this.state.activeTab === index || this.state.navId === item.id ? ' active ' : ''\n                  } ${item.qaClass ? item.qaClass : ''}`}\n                  onClick={e => this.setToggleDropdown(e, item.id)}\n                >\n                  <IconButton className=\"icon\">{item.icon}</IconButton>\n                  <p>{item.title}</p>\n                </div>\n                <Popover\n                  className=\"nav-sublist-container\"\n                  anchorEl={this.state.anchorElement}\n                  open={this.state.navId === item.id}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={this.setCloseDropdown}>\n                      <MenuList className=\"nav-sublist-menu\" id=\"menu-list-grow\">\n                        {item.items.map(subItem => (\n                          <MenuItem\n                            key={subItem.to}\n                            className={subItem.qaClass}\n                            to={subItem.to}\n                            component={Link}\n                            onClick={this.setCloseDropdown}\n                          >\n                            {subItem.title}\n                          </MenuItem>\n                        ))}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Popover>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              role=\"presentation\"\n              key={item.to}\n              className={`nav-item ${this.state.activeTab === index ? 'active' : ''} ${\n                item.qaClass ? item.qaClass : ''\n              }`}\n              onClick={() => this.setActiveTab(index, item.to)}\n            >\n              <IconButton className=\"icon\">{item.icon}</IconButton>\n              <p>{item.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.props.history.push(page);\n    this.setState({ navId: '' });\n  };\n\n  setToggleDropdown = (e, name) => {\n    if (name === this.state.navId) {\n      this.setState({ navId: '', anchorElement: null });\n    } else {\n      this.setState({ navId: name, anchorElement: e.target });\n    }\n  };\n\n  setActiveTab = (newActiveTab, page) => {\n    this.props.history.push(page);\n    this.setState({ activeTab: newActiveTab, navId: '' });\n  };\n\n  setCurrentNavItem() {\n    const index = navigationItems.findIndex(\n      item =>\n        item.to === this.props.location.pathname || this.props.location.pathname.startsWith(item.to)\n    );\n\n    if (this.state.activeTab !== index) {\n      this.setState({ activeTab: index });\n    }\n  }\n}\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nNavigation.defaultProps = {\n  className: 'navigation'\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nimport './notification.local.scss';\n\nexport class Notification extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-notification`}>\n        <NotificationsNoneIcon />\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  className: PropTypes.string\n};\n\nNotification.defaultProps = {\n  className: 'notification'\n};\n\nexport default Notification;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Logout } from 'session/pages';\n\nimport './user-menu.local.scss';\n\nexport class UserMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n\n    this.menuAnchorRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"user-menu qa-user-menu\"\n          ref={this.menuAnchorRef}\n          onClick={this.setToggleDropdown}\n          role=\"presentation\"\n        >\n          <Avatar className=\"user-avatar\">{this.props.user.substring(0, 2).toUpperCase()}</Avatar>\n        </div>\n        <Popover\n          className=\"user-menu-list-container\"\n          anchorEl={this.menuAnchorRef.current}\n          open={this.state.isVisible}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList\n                className=\"user-menu-list\"\n                autoFocusItem={this.state.isVisible}\n                id=\"menu-list-grow\"\n              >\n                <MenuItem\n                  className=\"qa-user-menu-groups\"\n                  onClick={event => this.setCloseDropdown(event, 'help')}\n                >\n                  <FormattedMessage id=\"navigation.help\" />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-logout\" to={Logout.path} component={Link}>\n                  <FormattedMessage id=\"navigation.logout\" />\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popover>\n      </>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page === 'help') {\n      window.open(\n        'https://masmanual.venditabeta.com/index.php/Vendita_MAS_Documentation_Library#User_Guides_MAS_3.0',\n        '_blank'\n      );\n    }\n\n    this.setState({ isVisible: false });\n  };\n\n  setToggleDropdown = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible\n    }));\n  };\n}\n\nUserMenu.propTypes = {\n  user: PropTypes.string.isRequired\n};\n\nexport default withRouter(UserMenu);\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\n\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\n\nimport { postCompile } from 'shared/api/compile';\n\nimport { fetchEntity } from '../../../../../entities/actions';\n\nimport './compile.local.scss';\nimport { useDispatch } from 'react-redux';\n\nexport const Compile = () => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => setOpen(true),\n    close: () => setOpen(false)\n  };\n\n  return (\n    <>\n      <div className=\"compile\">\n        <Tooltip title=\"Compile\">\n          <VideoLibraryOutlinedIcon onClick={modalActions.open} />\n        </Tooltip>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Compiler />\n      </Modal>\n    </>\n  );\n};\n\nconst Compiler = () => {\n  const [compilation, setCompilation] = useState('compiling');\n  const dispatch = useDispatch();\n\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    console.log('[started compilation'); // eslint-disable-line\n    postCompile()\n      .then(() => {\n        setCompilation('refreshing');\n\n        Promise.all([dispatch(fetchEntity('process')), dispatch(fetchEntity('namespace'))])\n          .then(() => {\n            setCompilation('success');\n            console.log('[succeded compilation'); // eslint-disable-line\n          })\n          .catch(() => {\n            setCompilation('success-no-reload');\n            console.log(results, '[succeded compilation. failed to reload entities.'); // eslint-disable-line\n          });\n      })\n      .catch(() => {\n        setCompilation('failed');\n        console.log('[failed compilation'); // eslint-disable-line\n      });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '430px',\n        minHeight: '330px'\n      }}\n    >\n      <ModalHeader icon={<VideoLibraryOutlinedIcon />} title=\"Compile\" />\n      <Switch value={compilation}>\n        <Switch.Case value=\"compiling\">\n          <Center>\n            <Loader>Running compilation...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"refreshing\">\n          <Center>\n            <Loader>Loading processes...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"failed\">\n          <Center>\n            <Result type=\"fail\">\n              <Result.Text compact>Compilation failed.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success-no-reload\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded</Result.Text>\n              <Result.Text compact>Could not refresh processes list.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header';\n\nimport { Main, Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport './job-process.local.scss';\nimport { Breadcrumbs, Link } from '@material-ui/core';\n\nimport ConnectedJobView from './job-view';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getQuery, getInvocationStatus, getInvocation } from './store/selectors';\nimport { processQuery } from './store/actions';\nimport { InvocationStatus } from './store/constants';\n\nimport './root.local.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\n\nconst JobProcess = () => {\n  const query = useQuery();\n\n  const uuid = query.get('invocation');\n  const processName = query.get('process');\n  const redirected = query.get('redirected');\n\n  return (\n    <>\n      <Header>\n        <Breadcrumbs classes={{ root: 'job-main-breadcrumbs' }} aria-label=\"breadcrumb\">\n          <LinkRouter to=\"/jobs\">Jobs</LinkRouter>\n          <OtherMainLinks />\n        </Breadcrumbs>\n      </Header>\n      <Main>\n        <Paper>\n          <PrepareFlow uuid={uuid} process={processName}>\n            <ConnectedJobView redirected={redirected == 'true'} />\n          </PrepareFlow>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n\nexport default JobProcess;\n\nfunction PrepareFlow({ children, uuid, process }) {\n  const query = useSelector(getQuery);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(processQuery(uuid, process));\n  }, [uuid]);\n\n  if (query.uuid !== uuid) {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Setting up invocation viewer</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return children;\n}\n\nfunction OtherMainLinks() {\n  const status = useSelector(getInvocationStatus);\n  const invocation = useSelector(getInvocation);\n\n  if (status === InvocationStatus.NEW) {\n    return <div className=\"current-job\">New Job</div>;\n  }\n\n  if (invocation && invocation.designation) {\n    return <div className=\"current-job\">{invocation.designation}</div>;\n  }\n\n  return null;\n}\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  CHECK_AUTHORIZATION: '[session] CHECK_AUTHORIZATION',\n  LOGIN: '[session] LOGIN',\n  LOGOUT: '[session] LOGOUT',\n};\n\nexport const sessionActions = {\n  checkAuthorization: new ActionCreator(actionsTypes.CHECK_AUTHORIZATION),\n  login: new ActionCreator(actionsTypes.LOGIN),\n  logout: new ActionCreator(actionsTypes.LOGOUT),\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* checkAuthorization() {\n  RestClient.setBasicAuth();\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_USER);\n    yield put(actions.checkAuthorization.dispatchSuccess(response));\n  } catch (errors) {\n    yield put(actions.checkAuthorization.dispatchFail());\n  }\n}\n\nexport function* CheckAuthorizationEffect() {\n  yield takeEvery(actions.checkAuthorization.getLoadingAction(), checkAuthorization);\n}\n","export default {\n  INTL: 'en',\n  BASE: {\n    HOST: '/mas',\n    VERSION: '',\n    TIMEOUT: 1000 * 60,\n    ENDPOINTS: {\n      LOGIN: '/authenticate',\n      CURRENT_USER: 'user/mas',\n      DAEMON_STATUS: 'daemon/status',\n      JOB_COUNT: '/invocation/dashboard/job_count',\n      JOBS: '/invocation',\n      PROCESSES: '/process',\n      USERS: '/user',\n      DATATYPES: '/type',\n      PROTOTYPES: '/prototype',\n      GROUPS: '/group',\n      ACCOUNTS: '/account',\n      FORMS: '/form',\n      FORM: '/form',\n      PROTOCOLS: '/protocol',\n      DOWNLOAD_PACKAGING: '/download/oracle_report',\n      SESSIONS: name => `/system/explorer/${name}/all_sessions`,\n      DB_LAST_BACKUP: '/system/explorer/backup_last_24hr',\n      DB_STATUS: '/system/explorer/dbstate',\n      EXECUTIVE_DASHBOARD: '/execdashboard',\n      STORAGE_DF: name => `/system/explorer/${name}/df_free_space`,\n      STORAGE_TS: '/system/explorer/ts_usage'\n    }\n  }\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\nimport Cookie from 'js-cookie';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* login(action) {\n  try {\n    Cookie.set('Authorization', Buffer.from(`${action.payload.username}:${action.payload.password}`).toString('base64'));\n    RestClient.setBasicAuth();\n    yield RestClient.post(CONSTANTS.BASE.ENDPOINTS.LOGIN);\n    yield put(actions.login.dispatchSuccess());\n    yield put(actions.checkAuthorization.dispatchLoading());\n  } catch (errors) {\n    if (!errors.response) {\n      yield put(actions.login.dispatchFail([\n        {\n          message: 'Unknown Error. Please contact the administrator!',\n        },\n      ]));\n      return;\n    }\n\n    if (errors.response.data.status === 422) {\n      yield put(actions.login.dispatchFail(errors.response.data.error.details));\n      return;\n    }\n\n    if (errors.response.data.status === 401) {\n      yield put(actions.login.dispatchFail([\n        {\n          message: errors.response.statusText,\n        },\n      ]));\n\n      return;\n    }\n\n    if (errors.response.data.status === 500 && (action.payload.password === '' || action.payload.username === '')) {\n      yield put(actions.login.dispatchFail([\n        {\n          message: errors.response.statusText,\n        },\n      ]));\n\n      return;\n    }\n\n    throw errors;\n  }\n}\n\nexport function* LoginEffect() {\n  yield takeEvery(actions.login.getLoadingAction(), login);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { Login } from 'session/pages';\n\nfunction loginPath() {\n  return process.env.NODE_ENV === 'development' ? window.location.replace(Login.path) : window.location.replace(`/ui/#${Login.path}`);\n}\n\nfunction* logout() {\n  RestClient.removeBasicAuth();\n  loginPath();\n  yield put(actions.logout.dispatchSuccess());\n}\n\nexport function* LogoutEffect() {\n  yield takeEvery(actions.logout.getLoadingAction(), logout);\n}\n","module.exports = __webpack_public_path__ + \"svgs/ae6021ac50f5c1e93465ff63ea3769d4.svg\";","module.exports = __webpack_public_path__ + \"svgs/0e998e182da8161761cd7209592a7dae.svg\";","module.exports = __webpack_public_path__ + \"svgs/fc315038f28eb52f1b1228e70e8919d6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { isInclusivelyAfterDay } from 'shared/lib';\n\nimport { DateRangePicker, DateRangePickerPhrases, DateRangePickerShape } from 'react-dates';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n} from './constants';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  // initialStartDate: momentPropTypes.momentObj,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  startDateId: PropTypes.string,\n  startDatePlaceholderText: PropTypes.string,\n  endDateId: PropTypes.string,\n  endDatePlaceholderText: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDates: PropTypes.bool,\n  showDefaultInputIcon: PropTypes.bool,\n  customInputIcon: PropTypes.object,\n  customArrowIcon: PropTypes.node,\n  customCloseIcon: PropTypes.object,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: PropTypes.string,\n  orientation: PropTypes.string,\n  anchorDirection: PropTypes.string,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.string,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDates: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  // navigation related props\n  navPosition: PropTypes.string,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.string,\n  renderDayContents: PropTypes.func,\n  minimumNights: PropTypes.number,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization\n  displayFormat: PropTypes.func,\n  monthFormat: PropTypes.string,\n  phrases: DateRangePickerPhrases,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: (day) => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: (date) => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  render() {\n    const { focusedInput } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={this.props.startDate}\n          endDate={this.props.endDate}\n        />\n      </div>\n    );\n  }\n\n  onDatesChange(range) {\n    this.props.onDatesChange(range);\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  GET_JOBS: '[jobs] GET_JOBS',\n  GET_CONNECTIONS: '[jobs] GET_CONNECTIONS',\n  SEARCH_JOBS: '[jobs] SEARCH_JOBS'\n};\n\nexport const jobsActions = {\n  getJobs: new ActionCreator(actionsTypes.GET_JOBS),\n  getConnections: new ActionCreator(actionsTypes.GET_CONNECTIONS),\n  searchJobs: new ActionCreator(actionsTypes.SEARCH_JOBS)\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SEARCH_PROCESSES: '[processes] SEARCH_PROCESSES',\n};\n\nexport const processActions = {\n  searchProcesses: new ActionCreator(actionsTypes.SEARCH_PROCESSES),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  UPDATE_GLOBAL_FILTERS: '[shared] UPDATE_GLOBAL_FILTERS',\n};\n\nexport const globalFiltersActions = {\n  setGlobalFilters: new ActionCreator(actionsTypes.UPDATE_GLOBAL_FILTERS),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SET_FILTER_STATUS: '[dashboard] SET_FILTER_STATUS'\n};\n\nexport const filterStatusActions = {\n  setFilterStatus: new ActionCreator(actionsTypes.SET_FILTER_STATUS)\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport function checkDaemon() {\n  return RestClient.get(CONSTANTS.BASE.ENDPOINTS.DAEMON_STATUS);\n}\n","import { createSelector } from 'reselect';\n\nexport const isDaemonRunning = createSelector(\n  state => state.daemon,\n  daemon => {\n    return daemon.running;\n  }\n);\n","import React, { useState } from 'react';\nimport * as PropTypes from 'prop-types';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Chip from '@material-ui/core/Chip';\nimport { DayFilterEditor } from '../day-filter-editor/day-filter-editor';\nimport { UserFilterEditor } from '../user-filter-editor/user-filter-editor';\nimport { StatusFilterEditor } from '../status-filter-editor/status-filter-editor';\nimport { FilterLoader } from '../filter-loader/filter-loader';\n\nimport './filter-chip.local.scss';\n\nexport const FilterChip = ({ value, type, save }) => {\n  const [editMode, setEditMode] = useState(false);\n  const FILTERS_MAP = {\n    status: StatusFilterEditor,\n    day: DayFilterEditor,\n    user: UserFilterEditor,\n  };\n  const IconComp = FILTERS_MAP[type].TypeDescriptor.icon;\n\n  return (\n    <>\n      {editMode\n        ? (\n          <ClickAwayListener onClickAway={() => { setEditMode(false); }}>\n            <div>\n              <FilterLoader value={value} type={type} setFilterValue={(newFilter) => { save(newFilter); setEditMode(false); }} />\n            </div>\n          </ClickAwayListener>\n        )\n        : (\n          <Chip\n            className=\"filter-chip\"\n            icon={<IconComp />}\n            label={value}\n            onClick={() => { setEditMode(true); }}\n            onDelete={() => { save(null); }}\n          />\n        )}\n    </>\n  );\n};\n\nFilterChip.propTypes = {\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  save: PropTypes.func,\n};\n\nFilterChip.defaultProps = {\n  save: () => {},\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center, Switch } from 'shared/components';\n\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\n\nimport { UsageListing } from './components/UsageListing/UsageListing';\n\nexport const ServerUsage = ({ loading, usage, getAllAccounts }) => {\n  useEffect(() => {\n    getAllAccounts();\n  }, []);\n\n  return (\n    <Switch value={loading}>\n      <Switch.Case value>\n        <Center>\n          <Loader>Loading Usage Parameters</Loader>\n        </Center>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <UsageListing usage={usage} />\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nexport const ConnectedServerUsage = connect(\n  state => {\n    return {\n      loading: state.explorer.flags.serversUsage.loading,\n      usage: state.explorer.serversUsage\n    };\n  },\n  dispatch => ({\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'dashboard' }))\n  })\n)(ServerUsage);\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPercent } from '@mdi/js';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\n\nimport { UsageEntry } from '../UsageEntry/UsageEntry';\n\nimport './UsageListing.local.scss';\n\nexport const UsageListing = ({ usage }) => {\n  return (\n    <>\n      <header>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiPercent} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={usage.highLoadCount} />\n        <StringLabel text=\"servers with high load\" />\n      </header>\n      <div className=\"servers-list\">\n        {usage.servers.map(server => (\n          <UsageEntry key={server.address} server={server} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './UsageEntry.local.scss';\n\nexport const UsageEntry = ({ server }) => {\n  const { dbms, address, usage } = server;\n\n  const getServerUsageClass = () => {\n    if (usage <= 50) {\n      return 'low-usage';\n    }\n\n    if (usage > 50 && usage <= 75) {\n      return 'medium-usage';\n    }\n\n    return 'high-usage';\n  };\n\n  return (\n    <div className={`server-usage-item ${getServerUsageClass()}`}>\n      <div className=\"icon-container\">\n        <SvgIcon>\n          <Icon path={mdiDns} />\n        </SvgIcon>\n      </div>\n      <div className=\"name-container\">\n        <span className=\"name\">\n          <span className=\"dbms\">{dbms}</span>\n          <span className=\"separator\">/</span>\n          <span className=\"server\">{address}</span>\n        </span>\n        <div className=\"full-percentage\">\n          <div className=\"filled\" style={{ width: `${usage}%` }} />\n        </div>\n      </div>\n      <div className=\"percent-container\">\n        <span>{usage}%</span>\n      </div>\n    </div>\n  );\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\n// import mock from './_mock.json';\n\nfunction* jobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    // yield put(actions.getJobs.dispatchSuccess(mock));\n    yield put(actions.getJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    let reason = '';\n\n    if (\n      errors &&\n      errors.response &&\n      errors.response.data &&\n      errors.response.data.messages &&\n      errors.response.data.messages[0] &&\n      errors.response.data.messages[0].text &&\n      errors.response.data.messages[0].text.startsWith('permission denied')\n    ) {\n      reason = 'rights';\n    }\n\n    yield put(actions.getJobs.dispatchFail({ reason }));\n  }\n}\n\nexport function* JobsEffect() {\n  yield takeEvery(actions.getJobs.getLoadingAction(), jobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* connections() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n      page_size: 2147483645\n    });\n\n    yield put(actions.getConnections.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getConnections.dispatchFail(errors));\n  }\n}\n\nexport function* JobsConnectionsEffect() {\n  yield takeEvery(actions.getConnections.getLoadingAction(), connections);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchJobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    yield put(actions.searchJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchJobs.dispatchFail(errors));\n  }\n}\n\nexport function* SearchJobsEffect() {\n  yield takeEvery(actions.searchJobs.getLoadingAction(), searchJobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchProcesses(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROCESSES, query.payload);\n\n    yield put(actions.searchProcesses.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchProcesses.dispatchFail(errors));\n  }\n}\n\nexport function* SearchProcessesEffect() {\n  yield takeEvery(actions.searchProcesses.getLoadingAction(), searchProcesses);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\n\nfunction* globalFilters(filters) {\n  yield put(actions.setGlobalFilters.dispatchSuccess(filters.payload));\n}\n\nexport function* GlobalFiltersEffect() {\n  yield takeEvery(actions.setGlobalFilters.getLoadingAction(), globalFilters);\n}\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  SELECT_USER,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  REMOVE_USER_FROM_GROUPS,\n  DELETE_USER,\n  CREATE_USER\n} from '../actions';\n\nimport { mapUsersData, mapLoadedUser } from '../mappers';\n\nexport const initialState = {\n  users: {\n    all: [],\n    selected: null\n  },\n  flags: {\n    users: { loading: false },\n    user: { loading: false },\n    privileges: { disabled: false }\n  },\n  debug: {\n    user: {}\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_USERS)]: draft => {\n    draft.flags.users.loading = true;\n  },\n  [types.success(LOAD_ALL_USERS)]: (draft, { payload }) => {\n    draft.users.all = mapUsersData(payload);\n\n    draft.flags.users.loading = false;\n  },\n  [types.action(SELECT_USER)]: (draft, { payload }) => {\n    draft.users.selected = payload;\n  },\n  [types.loading(LOAD_USER)]: draft => {\n    draft.flags.user.loading = true;\n    draft.users.selected = null;\n  },\n  [types.success(LOAD_USER)]: (draft, { payload }) => {\n    draft.flags.user.loading = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.loading(DELETE_USER)]: draft => {\n    draft.flags.user.removing = true;\n  },\n  [types.success(DELETE_USER)]: (draft, { payload }) => {\n    draft.users.selected = null;\n    draft.flags.user.removing = false;\n    draft.users.all = mapUsersData(payload);\n  },\n  [types.fail(DELETE_USER)]: (draft, { payload }) => {\n    draft.flags.user.removing = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.action(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.loading(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(REMOVE_USER_FROM_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(CREATE_USER)]: draft => {\n    draft.flags.user.creating = true;\n  },\n  [types.success(CREATE_USER)]: draft => {\n    draft.flags.user.creating = false;\n  },\n  [types.fail(CREATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.creating = false;\n    draft.debug.user.errors = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  PATCH_SELECTED_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport const initialState = {\n  all: [],\n  ops: {\n    all: { done: false, loading: false },\n    selected: { done: false, loading: false },\n    privileges: { done: false, loading: false },\n    remove: { loading: false },\n    create: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_GROUPS)]: draft => {\n    draft.ops.all = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.loading(LOAD_GROUP)]: draft => {\n    draft.ops.selected = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_GROUP)]: (draft, { payload }) => {\n    const response = payload;\n    draft.selected = response.data.groups[0]; //eslint-disable-line\n    draft.ops.selected = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_GROUP)]: (draft, { payload }) => {\n    draft.selected = null;\n    draft.ops.selected = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.action(PATCH_SELECTED_GROUP)]: (draft, { payload }) => {\n    draft.selected = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REMOVE_USERS_FROM_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(REMOVE_GROUPS_FROM_GROUP)]: draft => {\n    draft.ops.group_subgroups = { loading: true };\n  },\n  [types.success(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(ADD_USERS_TO_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: true };\n  },\n  [types.success(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: false };\n  },\n  [types.fail(CREATE_GROUP)]: (draft, { payload }) => {\n    draft.ops.create = {\n      loading: false,\n      errors: payload\n    };\n  },\n  [types.loading(DELETE_GROUP)]: draft => {\n    draft.ops.remove = { loading: true };\n  },\n  [types.success(DELETE_GROUP)]: draft => {\n    draft.selected = null;\n    draft.ops.remove = { loading: false };\n  },\n  [types.fail(DELETE_GROUP)]: (draft, { payload }) => {\n    draft.ops.remove = { loading: false, errors: payload };\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_ACCOUNTS,\n  CHANGE_STATE,\n  LOAD_ALL_LICENSES,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_PROTOTYPES,\n  LOAD_ALL_DATATYPES,\n  LOAD_ALL_FORMS,\n  LOAD_SESSIONS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  LOAD_STORAGE_POINTS,\n  LOAD_OBJECT_DETAILS,\n  PROVIDE_SERVERS_USAGE,\n  SET_STORAGE_NS,\n  SET_SELECTED_OBJECT,\n  LOAD_STORAGE_DETAILS,\n  LOAD_PROTOCOLS\n} from '../actions';\nimport { mapAccountsTree, mapAccountsNewStructure, mapProtocols } from '../mappers';\n\nexport const initialState = {\n  accounts: [],\n  rawAccounts: [],\n  flags: {\n    accounts: { loading: false },\n    protocols: { loading: false },\n    sessions: { loading: false },\n    storage: { loadingPoints: false, loadingDetails: false },\n    objects: { loading: false },\n    license: { loading: false },\n    reports: { loading: false },\n    prototypes: { loading: false },\n    datatypes: { loading: false },\n    forms: { loading: false },\n    serversUsage: { loading: true }\n  },\n  sessions: [],\n  storage: {\n    points: [],\n    selected: null,\n    details: {}\n  },\n  objects: {\n    selectedOwner: null,\n    selectedObject: null\n  },\n  licenses: [],\n  reports: {},\n  prototypes: [],\n  protocols: [],\n  datatypes: [],\n  forms: [],\n  state: {\n    path: '',\n    level: 'all-dbms'\n  },\n  serversUsage: {},\n  dbLastBackup: [],\n  dbStatus: []\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_ACCOUNTS)]: draft => {\n    draft.flags.accounts.loading = true;\n  },\n  [types.success(LOAD_ALL_ACCOUNTS)]: (draft, { payload }) => {\n    draft.accounts = mapAccountsTree(payload.data.accounts);\n    draft.structured = mapAccountsNewStructure(payload.data.accounts, payload.protocols);\n    draft.rawAccounts = payload.data.accounts;\n\n    draft.state.path = '';\n    draft.state.level = 'all-dbms';\n\n    draft.flags.accounts.loading = false;\n  },\n  [types.loading(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = true;\n  },\n  [types.success(LOAD_PROTOCOLS)]: (draft, { payload }) => {\n    draft.protocols = mapProtocols(payload.data.protocols);\n    draft.flags.protocols.loading = false;\n  },\n  [types.fail(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = false;\n  },\n  [CHANGE_STATE]: (draft, { payload }, base) => {\n    draft.state = { ...base.state, ...payload };\n  },\n  [types.loading(LOAD_ALL_LICENSES)]: draft => {\n    draft.flags.license.loading = true;\n  },\n  [types.success(LOAD_ALL_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload.data.invocations;\n    draft.flags.license.loading = false;\n  },\n  [types.loading(LICENSE_FULL_REPORT)]: draft => {\n    draft.flags.reports.loading = true;\n  },\n  [types.success(LICENSE_FULL_REPORT)]: (draft, { payload }, base) => {\n    draft.reports = { ...base.reports, ...payload };\n    draft.flags.reports.loading = false;\n  },\n  [types.loading(LOAD_ALL_PROTOTYPES)]: draft => {\n    draft.flags.prototypes.loading = true;\n  },\n  [types.success(LOAD_ALL_PROTOTYPES)]: (draft, { payload }) => {\n    draft.prototypes = payload.data.prototypes;\n    draft.flags.prototypes.loading = false;\n  },\n  [types.loading(LOAD_ALL_DATATYPES)]: draft => {\n    draft.flags.datatypes.loading = true;\n  },\n  [types.success(LOAD_ALL_DATATYPES)]: (draft, { payload }) => {\n    draft.datatypes = payload.data.data_types;\n    draft.flags.datatypes.loading = false;\n  },\n  [types.loading(LOAD_ALL_FORMS)]: draft => {\n    draft.flags.forms.loading = true;\n  },\n  [types.success(LOAD_ALL_FORMS)]: (draft, { payload }) => {\n    draft.forms = payload.data.forms;\n    draft.flags.forms.loading = false;\n  },\n  [types.loading(PROVIDE_SERVERS_USAGE)]: draft => {\n    draft.flags.serversUsage.loading = true;\n  },\n  [types.success(PROVIDE_SERVERS_USAGE)]: (draft, { payload }) => {\n    draft.flags.serversUsage.loading = false;\n    draft.serversUsage = payload;\n  },\n  [types.loading(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = true;\n  },\n  [types.success(LOAD_STORAGE_POINTS)]: (draft, { payload }) => {\n    draft.flags.storage.loadingPoints = false;\n    draft.storage.points = payload;\n  },\n  [types.loading(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = true;\n  },\n  [types.success(LOAD_STORAGE_DETAILS)]: (draft, { payload }) => {\n    draft.flags.storage.loadingDetails = false;\n    draft.storage.details = payload;\n  },\n  [types.success(SET_STORAGE_NS)]: (draft, { payload }) => {\n    draft.storage.selected = payload;\n  },\n  [types.loading(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = true;\n  },\n  [types.success(LOAD_OBJECT_DETAILS)]: (draft, { payload }) => {\n    draft.flags.objects.loading = false;\n    payload.forEach(({ name, res }) => {\n      draft.objects[name] = res;\n    });\n  },\n  [types.success(SET_SELECTED_OBJECT)]: (draft, { payload }) => {\n    draft.objects.selectedObject = payload.object;\n    draft.objects.selectedOwner = payload.owner;\n  },\n  [types.success(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = true;\n  },\n  [types.success(LOAD_SESSIONS)]: (draft, { payload }) => {\n    draft.flags.sessions.loading = false;\n    // sort flags should be sent to backend and not stored on state.\n    draft.flags.sessions.sort = payload.sort;\n    draft.sessions = payload.data;\n  },\n  [types.success(PROVIDE_DB_LAST_BACKUP)]: (draft, { payload }) => {\n    draft.dbLastBackup = payload;\n  },\n  [types.success(PROVIDE_DB_STATUS)]: (draft, { payload }) => {\n    draft.dbStatus = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\nimport { PROVIDE_EXECUTIVE_DASHBOARD, SELECT_ALL, DESELECT_ALL, TOGGLE_SERVER } from '../actions';\nimport { mapAllServers } from '../mappers';\n\nexport const initialState = {\n  rawEntries: [],\n  allServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  selectedServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  flags: {\n    dashboard: { loading: false, callFailed: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = true;\n  },\n  [types.success(PROVIDE_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawEntries = payload.execdashboard;\n    draft.allServers = mapAllServers(payload.execdashboard);\n    draft.selectedServers = mapAllServers(payload.execdashboard);\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [DESELECT_ALL]: draft => {\n    draft.selectedServers = [];\n  },\n  [SELECT_ALL]: (draft, { payload }) => {\n    draft.selectedServers = mapAllServers(payload);\n  },\n  [TOGGLE_SERVER]: (draft, { payload }) => {\n    draft.selectedServers = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","export const initialState = {\n  data: {},\n  fetch_status: {},\n  isLoading: true,\n  breadcrumbs: [],\n  filters: {\n    type: 'all',\n    search: ''\n  }\n};\n\nexport function FETCH_ENTITIES_REQUEST(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'fetching';\n}\n\nexport function FETCH_ENTITIES_SUCCESS(nextState, { entityType, result }) {\n  nextState.data[entityType] = result;\n  nextState.fetch_status[entityType] = 'fetched';\n}\n\nexport function FETCH_ENTITIES_FAILURE(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'failed';\n}\n\nexport function FETCH_ENTITIES_ALL_REQUEST(nextState) {\n  nextState.isLoading = true;\n}\n\nexport function FETCH_ENTITIES_ALL_SUCCESS(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function FETCH_ENTITIES_ALL_FAILURE(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function SELECT_ENTITY(nextState, { entity, index }, state) {\n  nextState.breadcrumbs.splice(index, state.breadcrumbs.length - 1);\n  nextState.breadcrumbs[index] = entity.name.split('.').pop();\n}\n\nexport function CLEAR_SELECTED_ENTITY(nextState) {\n  nextState.breadcrumbs = [];\n}\n\nexport function UPDATE_FILTERS(nextState, { name, value }) {\n  nextState.filters[name] = value;\n  if (name === 'type' || name === 'search') {\n    nextState.breadcrumbs = [];\n  }\n}\n","export const initialState = {\n  running: true\n};\n\nexport function DAEMON_STATUS_REQUEST() {}\n\nexport function DAEMON_STATUS_SUCCESS(nextState, { result }) {\n  nextState.running = !!result?.data?.data?.running;\n}\n\nexport function DAEMON_STATUS_FAILURE(nextState) {\n  nextState.running = false;\n}\n","import { InvocationStatus } from './constants';\n\nexport const initialState = {\n  loading: true,\n  query: { processed: false },\n  fetchedInvocation: false,\n  invocation: { status: 'NOT_FETCHED' }\n};\n\nexport function PROCESS_QUERY(nextState, { uuid, process }) {\n  nextState.query = { processed: true, uuid, process };\n  if (uuid) {\n    nextState.invocation = { status: 'NOT_FETCHED' };\n  } else {\n    nextState.invocation = { status: '__NEW__', process: process || '' };\n  }\n}\n\nexport function FETCH_INVOCATION_SUCCESS(nextState, { result }) {\n  const [recieved] = result.data.data.invocations;\n  nextState.invocation = recieved;\n}\n\nexport function FETCH_INVOCATION_FAILURE(nextState, { process }) {\n  nextState.invocation = { status: InvocationStatus.NEW, process };\n}\n\nexport function REPLACE_INVOCATION(nextState, { invocation }) {\n  nextState.invocation = invocation;\n}\n","export const api = () => next => async action => {\n  const { type, promise, schema, ...rest } = action;\n  const isPromise = promise instanceof Promise;\n  if (!isPromise || !type) {\n    next(action);\n    return;\n  }\n\n  next({ type: `${type}_REQUEST`, ...rest });\n  try {\n    const result = await promise;\n    if (schema) {\n      next({ type, ...rest, data: result, schema });\n    }\n    next({ type: `${type}_SUCCESS`, ...rest, result });\n  } catch (error) {\n    console.error('[middlewares] error: ', error); // eslint-disable-line\n    next({ type: `${type}_FAILURE`, ...rest, error });\n  }\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  ADD_NOTIFICATIONS: '[core] ADD_NOTIFICATIONS',\n  REMOVE_NOTIFICATION: '[core] REMOVE_NOTIFICATION',\n};\n\nexport const notificationActions = {\n  addNotifications: new ActionCreator(actionsTypes.ADD_NOTIFICATIONS),\n  removeNotification: new ActionCreator(actionsTypes.REMOVE_NOTIFICATION),\n};\n","import React, { useState, useEffect } from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { ViewTabs } from '../ViewTabs/ViewTabs';\nimport { Documentation } from '../Documentation/Documentation';\nimport { ConnectedScheduleForm } from '../../containers/ScheduleForm/ScheduleForm';\nimport { getProcess } from 'shared/api/process';\n\nexport const ScheduleModal = ({ open, actions, invocation }) => {\n  const [result, setResult] = useState('');\n  const [tab, setTab] = useState('schedule');\n  const [processDetails, setProcessDetails] = useState({});\n\n  useEffect(() => {\n    if (invocation && invocation.process) {\n      getProcess(invocation.process)\n        .then(data => {\n          if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n            setProcessDetails(data.data.data.processes[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n  }, []);\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '85vw',\n          minHeight: '85vh',\n          maxWidth: '85vw',\n          maxHeight: '85vh'\n        }}\n      >\n        <ModalHeader\n          title=\"New Schedule\"\n          icon={\n            <SvgIcon>\n              <SlowMotionVideoIcon />\n            </SvgIcon>\n          }\n        />\n        <Switch value={result}>\n          <Switch.Case value=\"success\">\n            <Result type=\"success\">\n              <Result.Text>Schedule was added successfully!</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Done\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"fail\">\n            <Result type=\"fail\">\n              <Result.Text>An error occurred and the new schedule could not be added.</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Close\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"\">\n            <Paper.Header>\n              <ViewTabs active={tab} changeTab={setTab} invocation={invocation} />\n            </Paper.Header>\n            <Switch value={tab}>\n              <Switch.Case value=\"schedule\">\n                <ConnectedScheduleForm setResult={setResult} invocation={invocation} />\n              </Switch.Case>\n              <Switch.Case value=\"documentation\">\n                <Paper.Content>\n                  <Documentation process={processDetails} />\n                </Paper.Content>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nexport function ViewTabs({ active, changeTab, invocation }) {\n  const tabs = [{ label: 'Schedule', value: 'schedule', active: true }];\n\n  if (invocation) {\n    tabs.push({ label: 'Documentation', value: 'documentation' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React from 'react';\n\nimport { Section } from 'shared/components/layout';\n\nexport const Documentation = ({ process }) => {\n  if (!process) {\n    return <Section>Select a process in order to see its documentation</Section>;\n  }\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { fetchEntity } from 'entities/actions';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { ProcessSelect } from 'shared/components/form/editors/Custom';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { postSchedule } from 'shared/api/schedule';\n\nimport { isEmpty, pickBy } from 'lodash';\n\nexport const ConnectedScheduleForm = connect(null, {\n  request: fetchEntity\n})(ScheduleForm);\n\nfunction ScheduleForm({ setResult, request, invocation }) {\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name && sch_name.includes('.')) {\n      errors.sch_name = 'Name can not include \".\"';\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={handleSubmit.bind(this, monitor, setResult, request)}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <ProcessSelect\n                        name=\"process\"\n                        label=\"Process\"\n                        value={invocation?.process}\n                        disabled={invocation}\n                        required\n                      />\n                    </Section.Content>\n                  </Section>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text name=\"sch_name\" label=\"Name\" required />\n                      </Row>\n                      <Row>\n                        <Text name=\"sch_description\" label=\"Description\" multiline required />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_min\" label=\"T_min\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_hr\" label=\"T_hr\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_day\" label=\"T_Day\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_mon\" label=\"T_mon\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_wkd\" label=\"T_wkd\" value=\"*\" />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation?.parameters} editable />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n}\n\nasync function handleSubmit(monitor, setResult, request, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value) {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(values) {\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else {\n          if (field_name === 'deflt') {\n            extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n          } else {\n            extracted.replvars.push({ [field_name]: values[key] });\n          }\n        }\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], parameters: {} }\n  );\n\n  return { parameters: { ...result.parameters, replvars: cleanUpReplVars(result.replvars) } };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n","export const formatAccount = account => {\n  const prefix = `${account.protocol.toLowerCase()}://${account.user}:******@${account.address}:${\n    account.port\n  }`;\n  const { special } = account;\n\n  if (special?.database) {\n    return `${prefix}/${special.database}`;\n  }\n\n  return prefix;\n};\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default: {\n      const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n      const matches = regex.exec(deflt);\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return Number.parseInt(matches[2]); // eslint-disable-line\n          case 'str': {\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            const json = `[${matches[2]}]`;\n            try {\n              return JSON.parse(json)[0];\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          }\n\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n    }\n  }\n  return null;\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst Groups = ({ groups, onSelect, eventTypeIcons = [] }) => {\n  const renderGroupsList = () => {\n    if (Array.isArray(groups) && groups.length) {\n      return groups.map(item => {\n        return (\n          <ListItem\n            onClick={() => onSelect(item)}\n            selected={item.selected}\n            key={item.data.name}\n            button\n          >\n            <ListItemIcon>\n              <GroupIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n            </ListItemIcon>\n            <ListItemText primary={item.data.name} />\n            <ListItemSecondaryAction>\n              {item.displayIcons && eventTypeIcons.map(icon => icon)}\n              <SvgIcon size=\"small\" edge=\"end\" color=\"primary\">\n                <path d={item.selected ? mdiChevronLeft : mdiChevronRight} />\n              </SvgIcon>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Groups:</div>\n      </div>\n      <List dense disablePadding>\n        {renderGroupsList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Button } from 'shared/components/controls';\n\nimport './users.scss';\n\nconst Users = ({\n  users,\n  onSelect,\n  onSelectUserAction,\n  isClearActionAvailable,\n  isGroupSelected,\n  eventTypeIcons\n}) => {\n  const renderUsersList = () => {\n    if (Array.isArray(users) && users.length) {\n      let emptyListMessage = '';\n      if (!isGroupSelected) {\n        emptyListMessage = 'Please select a group to view its users.';\n      } else if (!users.find(item => item.display)) {\n        emptyListMessage = 'No users available in the group.';\n      }\n      if (emptyListMessage) {\n        return (\n          <div className=\"notifications-users-empty-list\">\n            <PermIdentityIcon size=\"small\" />\n            <span>{emptyListMessage}</span>\n          </div>\n        );\n      }\n      return users\n        .filter(user => user.display)\n        .map(user => {\n          return (\n            <ListItem\n              onClick={() => onSelect(user)}\n              selected={user.selected}\n              key={user.data.name}\n              button\n            >\n              <ListItemIcon>\n                <PersonIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n              </ListItemIcon>\n              <ListItemText primary={user.data.name} />\n              <ListItemSecondaryAction classes={{ root: 'notifications-users-check-wrap' }}>\n                {user.selected && eventTypeIcons.map(icon => icon)}\n                <Checkbox\n                  onChange={() => onSelect(user)}\n                  edge=\"end\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  checked={user.selected}\n                  classes={{ root: 'checkbox-custom' }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n    }\n    return null;\n  };\n\n  const currentActionLabel = isClearActionAvailable ? 'Clear' : 'Select all';\n  const shouldDisplayAction = isGroupSelected && users.find(item => item.display);\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Users:</div>\n        {shouldDisplayAction && (\n          <Button role=\"presentation\" onClick={() => onSelectUserAction(isClearActionAvailable)}>\n            {currentActionLabel}\n          </Button>\n        )}\n      </div>\n      <List dense disablePadding>\n        {renderUsersList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport classnames from 'classnames';\nimport './events.scss';\n\nconst Events = ({ jobStart, jobCompletion, abnormalEvent, onSelect, areUsersSelected }) => {\n  const classes = classnames('notification-events', { 'events-wrap-disabled': !areUsersSelected });\n  return (\n    <div className={classes}>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-title\">Event type:</div>\n        </div>\n        <span>\n          <PlayCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job start</span>\n        </span>\n        <span>\n          <CheckCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job completion</span>\n        </span>\n        <span>\n          <ErrorOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">abnormal event</span>\n        </span>\n      </div>\n      <div className=\"notification-events-col old-notice\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n      </div>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Center } from 'shared/components/layout';\n\nimport { Button } from 'shared/components/controls';\n\nimport './notification-list.scss';\nimport { withStyles } from '@material-ui/core';\n\nconst UserChip = withStyles({\n  root: {\n    background: 'rgba(55, 101, 175, 0.08)',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '& > svg': {\n      marginLeft: '8px'\n    }\n  }\n})(Chip);\n\nconst NotificationList = ({ users, eventTypeIcons, toggleApplyButton }) => {\n  const filteredUsers = users.filter(user => user.selected);\n  const renderUserList = () => {\n    if (!filteredUsers.length) {\n      return <Center>No notifications applied</Center>;\n    }\n    return filteredUsers.map(user => {\n      return (\n        <UserChip\n          classes={{ root: 'notification-list-item' }}\n          label={\n            <>\n              <span>{user.data.name}</span>\n              {eventTypeIcons}\n            </>\n          }\n          color=\"default\"\n          icon={<PersonIcon size=\"small\" />}\n        />\n      );\n    });\n  };\n\n  let buttonLabel = 'Add';\n  let buttonIcon = <NotificationsNoneIcon />;\n  if (filteredUsers.length) {\n    buttonLabel = 'Edit';\n    buttonIcon = <EditIcon />;\n  }\n\n  return (\n    <div className=\"notification-list-wrapper\">\n      <div>{renderUserList()}</div>\n      <div className=\"notification-list-edit-section\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={toggleApplyButton}\n          startIcon={buttonIcon}\n          endIcon={<ArrowDropDownIcon />}\n          classes={{ root: 'notifications-add-edit' }}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport './Entity.scss';\nimport GroupIcon from '@material-ui/icons/Group';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\n\n/* eslint-disable */\nconst Entity = ({ entity, selectEntity, columns, entityIcons }) => {\n  const cls = classnames('entity', {\n    '--isSelected': entity.isSelected\n  });\n  const user = entity.user_owner;\n  const aliasStr = entity.alias;\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={cls}\n      onClick={event => {\n        selectEntity(entity, columns.level);\n\n        const target = event.currentTarget;\n        const box = target.getBoundingClientRect();\n        const parent = target.parentNode.parentNode;\n\n        setTimeout(function() {\n          parent.scrollTo({ left: box.right, behavior: 'smooth' });\n        }, 200);\n      }}\n    >\n      <div className=\"entity-icon-wrap\">{entityIcons[entity.entity]}</div>\n      <div className=\"entity-details\">\n        <div className=\"entity-name\">\n          {!!aliasStr && (\n            <div title={`Alias of ${aliasStr}`}>\n              <FilterNoneIcon />\n            </div>\n          )}\n          {entity.name}\n        </div>\n        <div className=\"entity-user\">\n          <GroupIcon />\n          <span>{user}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/* eslint-enable */\n\nexport default Entity;\n","import React from 'react';\nimport Switch from '../components/Switch';\nimport ActionsNamespace from '../components/ActionsNamespace';\nimport ActionsConstant from '../components/ActionsConstant';\nimport ActionsProcess from '../components/ActionsProcess';\nimport ActionsForm from '../components/ActionsForm';\nimport ActionsAccount from '../components/ActionsAccount';\nimport ActionsRoot from '../components/ActionsRoot';\nimport ActionsPrototype from '../components/ActionsPrototype';\nimport ActionsSchedule from '../components/ActionsSchedule';\nimport ActionsCommon from '../components/ActionsCommon';\nimport GroupIcon from '@material-ui/icons/Group';\nimport './SelectedEntity.scss';\n\nconst SelectedEntity = ({ selectedEntity, entityIcons }) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  return (\n    <div className=\"selected-entity\">\n      <div className=\"selected-entity-title\">\n        <div className=\"selected-entity-title-icon\">{entityIcons[selectedEntity.entity]}</div>\n        <div className=\"selected-entity-title-details\">\n          {selectedEntity.name}\n          <div className=\"selected-entity-title-user\">\n            <GroupIcon />\n            <span>{selectedEntity.user_owner}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"entity-detail-wrap\">\n        <div className=\"entity-description-wrap\">{selectedEntity.description}</div>\n\n        <Switch value={selectedEntity.entity}>\n          <Switch.Case value=\"root\">\n            <ActionsRoot />\n          </Switch.Case>\n\n          <Switch.Case value=\"namespace\">\n            <ActionsNamespace entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"constant\">\n            <ActionsConstant entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"form\">\n            <ActionsForm entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"process\">\n            <ActionsProcess entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"prototype\">\n            <ActionsPrototype entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"schedule\">\n            <ActionsSchedule entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"account\">\n            <ActionsAccount entity={selectedEntity} />\n          </Switch.Case>\n        </Switch>\n        <ActionsCommon entity={selectedEntity} />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedEntity;\n","import React from 'react';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nimport { ConnectedEditNamespace } from './namespace-actions/EditNamespace';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\nimport { ConnectedDeleteNamespace } from './namespace-actions/DeleteNamespace';\n\nconst ActionsNamespace = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const hasWrite = hasWritePrivileges(entity);\n\n  return (\n    <>\n      <ConnectedNewNamespace namespace={entity} />\n      {hasWrite && <ConnectedEditNamespace namespace={entity} />}\n      {deleteRights(entity, hasWrite) && (\n        <ConnectedDeleteNamespace entity={entity} disabled={disableActions} />\n      )}\n    </>\n  );\n};\n\nfunction deleteRights(entity, hasWrite) {\n  return hasWrite && entity.owner !== 'postgres';\n}\n\nexport default ActionsNamespace;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { getNamespace, patchNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nfunction parseName(namespace) {\n  const split = namespace.name.split('.');\n  const tail = split.length - 1;\n  const parsed = {\n    name: split[tail],\n    fq: namespace.name\n  };\n\n  if (split.length > 1) {\n    parsed.parent = split.slice(0, tail).join('.');\n  } else {\n    parsed.parent = '';\n  }\n\n  return parsed;\n}\n\nexport const ConnectedEditNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    request: fetchEntity\n  }\n)(EditNamespace);\n\nfunction EditNamespace({ namespace, request, nestedNames }) {\n  const canUpdateName = nestedNames.length === 0;\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n\n  const split_name = parseName(namespace);\n\n  const getInitialValues = () => {\n    const values = {};\n\n    values.name = split_name.name || '';\n    values.namespace = split_name.parent;\n    values.description = description;\n\n    return values;\n  };\n\n  const getNamespaceDetails = name => {\n    getNamespace(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.namespaces &&\n          data.data.data.namespaces[0] &&\n          data.data.data.namespaces[0].description\n        ) {\n          setDescription(data.data.data.namespaces[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get namespace] error getting namespace details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getNamespaceDetails(namespace.name);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values, split_name);\n                }}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              {canUpdateName && (\n                                <Text name=\"name\" label=\"Name\" value={values.name} required />\n                              )}\n                              {!canUpdateName && (\n                                <Text\n                                  name=\"name\"\n                                  label=\"Name\"\n                                  value={values.name}\n                                  required\n                                  disabled\n                                  description=\"To update a namespace name, namespace must be empty!\"\n                                />\n                              )}\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                {canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                  />\n                                )}\n                                {!canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                    disabled\n                                    description=\"To update a namespace parent name, namespace must be empty!\"\n                                  />\n                                )}\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values, split_name) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    description: values.description\n  };\n\n  /*\n    If the old entity fully-qualified name does not match with the form value,\n    then we need to add a rename key with the new name.\n   */\n  if (name !== split_name.fq) {\n    body.rename = name;\n  }\n\n  patchNamespace(split_name.fq, body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    refresh: fetchEntity\n  }\n)(DeleteNamespace);\n\nfunction DeleteNamespace({ disabled, entity, refresh, nestedNames }) {\n  const canDelete = nestedNames.length === 0;\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={canDelete}>\n            <Switch.Case value>\n              <Switch value={result}>\n                <Switch.Case value=\"attempt\">\n                  <Paper.Content scrollable={false}>\n                    <Result type=\"fail\">\n                      <BodyText>\n                        Are you sure you want to remove this {type} ? This could affect the way the\n                        user will be able to interact with the app.\n                      </BodyText>\n                    </Result>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          terminator();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"success\">\n                  <Result type=\"success\">\n                    <BodyText>{name} successfully deleted!</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                          refresh(type);\n                        }}\n                      >\n                        Done\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"fail\">\n                  <Result type=\"fail\">\n                    <BodyText>You do not have permissions to delete this entity.</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                        }}\n                      >\n                        Close\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n            <Switch.Case value={false}>\n              <Result type=\"fail\">\n                <BodyText>To delete a namespace it must be empty!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { patchConstant } from 'shared/api/constant';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsConstant = ({ entity }) => {\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConstant constant={entity} />;\n};\n\nexport default ActionsConstant;\n\nexport const ConnectedEditConstant = connect(null, {\n  request: fetchEntity\n})(EditConstant);\n\nfunction EditConstant({ constant, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const [result, setResult] = useState('');\n  const disableActions = constant?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Constant\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Constant was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the constant could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: constant.name, value: constant.value }}\n                onSubmit={handleSubmit.bind(this, setResult, request)}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" disabled value={constant.name} />\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"value\"\n                                label=\"Value\"\n                                value={constant.value}\n                                description={constant.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const body = {\n    value: values.value\n  };\n\n  patchConstant(values.name, body)\n    .then(() => {\n      setResult('success');\n      request('constant');\n    })\n    .catch(error => {\n      console.log('[edit constant] patch constant error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function patchConstant(name, body) {\n  return RestClient.patch(`/constant/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { postSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\nimport { isEmpty, pickBy } from 'lodash';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport { EditProcessModal } from './process-actions/EditProcessModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nconst ActionsProcess = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  return (\n    <>\n      <Button\n        component={LinkBehavior}\n        classes={{ root: 'entity-button' }}\n        to={`/jobs/job?process=${entity.name}&redirected=true`}\n        disabled={isDisabled}\n      >\n        New job\n      </Button>\n      <ConnectedNewSchedule process={entity} isDisabled={isDisabled} />\n      {hasWritePrivileges(entity) && <EditProcessModal process={entity} />}\n    </>\n  );\n};\n\nexport default ActionsProcess;\n\nexport const ConnectedNewSchedule = connect(null, {\n  request: fetchEntity\n})(NewSchedule);\n\nfunction NewSchedule({ process, isDisabled, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n    }\n  };\n  const [result, setResult] = useState('');\n  // processDetails might be used at a later date\n  const [processDetails, setProcessDetails] = useState({}); // eslint-disable-line\n  const [tab, setTab] = useState('schedule');\n\n  const onClickHandler = () => {\n    setOpen(true);\n\n    getProcess(process.name)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        New Schedule\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '800px',\n            minHeight: '85vh',\n            maxWidth: '85vw',\n            maxHeight: '85vh'\n          }}\n        >\n          <ModalHeader\n            title=\"New Schedule\"\n            icon={\n              <SvgIcon>\n                <SlowMotionVideoIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  An error occurred and the new schedule could not be added.\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm process={process} setResult={setResult} request={request} />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={process} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({ process, setResult, request }) => {\n  const derivedMonitor = {\n    enabled: false,\n    events: 0,\n    users: []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name && sch_name.includes('.')) {\n      errors.sch_name = 'Name can not include \".\"';\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    return errors;\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{ process: process.name }}\n        validate={extraValidations}\n        onSubmit={handleSubmit.bind(this, monitor, setResult, request)}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={process.description}\n                          value={process.name}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text name=\"sch_name\" label=\"Name\" required />\n                      </Row>\n                      <Row>\n                        <Text name=\"sch_description\" label=\"Description\" multiline required />\n                      </Row>\n\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_min\" label=\"T_min\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_hr\" label=\"T_hr\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_day\" label=\"T_Day\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_mon\" label=\"T_mon\" value=\"*\" />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_wkd\" label=\"T_wkd\" value=\"*\" />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={process.parameters} editable />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(monitor, setResult, request, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value) {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(values) {\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else {\n          if (field_name === 'deflt') {\n            extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n          } else {\n            extracted.replvars.push({ [field_name]: values[key] });\n          }\n        }\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], parameters: {} }\n  );\n\n  return { parameters: { ...result.parameters, replvars: cleanUpReplVars(result.replvars) } };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { ProcessEditor } from './ProcessEditor';\n\nimport { fetchEntity } from '../../actions';\n\nexport const EditProcessModal = ({ process }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('editing');\n\n  const modalActions = {\n    open: useCallback(() => {\n      setResult('editing');\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n\n      if (result === 'success') {\n        dispatch(fetchEntity('process'));\n      }\n    }, [result])\n  };\n\n  return (\n    <>\n      <Button classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Edit Process\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            maxWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Process\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            desc={process.name}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"editing\">\n              <ProcessEditor process={process} setResult={setResult} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Process was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Done</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the process could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Close</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { QualifiedName } from 'shared/components/form/editors/Custom';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { patchProcess } from 'shared/api/process';\n\nimport './ProcessEditor.local.scss';\n\nexport function ProcessEditor({ process, setResult }) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        saveProcessEdits(values, process, setResult);\n      }}\n    >\n      {() => {\n        return (\n          <>\n            <Paper.Content>\n              <Form>\n                <Section>\n                  <Section.Header>\n                    <Section.Title>Details</Section.Title>\n                  </Section.Header>\n                  <Section.Content>\n                    <Row>\n                      <Column>\n                        <QualifiedName\n                          name=\"process_name\"\n                          label=\"Name\"\n                          value={process.name}\n                          required\n                        />\n                      </Column>\n                    </Row>\n                  </Section.Content>\n                </Section>\n                <Section>\n                  <Section.Content>\n                    {process.steps.map((step, index) => {\n                      return <Step step={step} step_index={index} />;\n                    })}\n                  </Section.Content>\n                </Section>\n              </Form>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <SubmitButton variant=\"contained\">Save</SubmitButton>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nfunction Step({ step, step_index }) {\n  const expressions = parseEvaluatableExpressions(step, step_index);\n  const noEvaluatableExpressions = !expressions.length;\n\n  if (noEvaluatableExpressions) {\n    return null;\n  }\n\n  return (\n    <div className=\"step\">\n      <div className=\"title\">Step: {step.label}</div>\n      <div className=\"description\">{step.description}</div>\n      <div className=\"expressions\">\n        <div className=\"list\">\n          {expressions.map((exp, index) => (\n            <StepExpression key={index} {...exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction StepExpression({ expression, exp_index, step, step_index }) {\n  const name = `step-${step_index}-expression-${exp_index}`;\n  return (\n    <Row>\n      <Text\n        multiline\n        value={expression.evaluate}\n        label={`Expression ${expression.assign || exp_index} of ${step.label}`}\n        name={name}\n        required\n      />\n    </Row>\n  );\n}\n\nfunction parseEvaluatableExpressions(step, step_index) {\n  const { expressions } = step;\n\n  if (!Array.isArray(expressions) || expressions.length === 0) {\n    return [];\n  }\n\n  return expressions.reduce((acc, exp, index) => {\n    if (exp.evaluate) {\n      acc.push({\n        expression: exp,\n        exp_index: index,\n        step,\n        step_index\n      });\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction saveProcessEdits(values, process, setResult) {\n  const { process_name, ...evaluations } = values;\n  const toSend = {};\n\n  const steps = _.cloneDeep(process.steps);\n\n  /**\n   * extract and remap field values.\n   */\n  const extracted = extractFieldInfo(evaluations);\n\n  extracted.forEach(({ step, expression, value }) => {\n    const path = `[${step}].expressions[${expression}].evaluate`;\n\n    _.set(steps, path, value);\n  });\n\n  /** Prepare patch request body */\n  toSend.steps = steps;\n\n  if (process.name !== process_name) {\n    toSend.rename = values.process_name;\n  }\n\n  patchProcess(process.name, toSend)\n    .then(() => {\n      setResult('success');\n    })\n    .catch(() => {\n      setResult('fail');\n    });\n}\n\nfunction extractFieldInfo(all) {\n  const key_struct = /^step-(\\d+)-expression-(\\d+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      step: matched[1],\n      expression: matched[2],\n      value\n    };\n  });\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\nimport { postForm } from 'shared/api/form';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButtonNoDirty } from 'shared/components/form/SubmitButtonNoDirty';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { Ensure } from 'core/components/Ensure';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction findFormPrototype(form, prototypes) {\n  const name = form.prototype;\n  const found = prototypes.find(item => item.name === name);\n\n  return found;\n}\n\nfunction findFormEntry(entity, forms) {\n  if (entity.alias) {\n    return forms.find(entry => entry.name === entity.alias);\n  }\n\n  return entity;\n}\n\nconst ActionsForm = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n  return (\n    <>\n      {canWrite && (\n        <Ensure type=\"prototype\" inlineLoader>\n          {({ data: prototypes }) => (\n            <Ensure type=\"form\" inlineLoader>\n              {({ data: forms }) => (\n                <ConnectedFormModal\n                  disabled={disableActions}\n                  form={findFormEntry(entity, forms)}\n                  prototype={findFormPrototype(entity, prototypes)}\n                />\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      )}\n      <ConnectedCopyForm form={entity} />\n    </>\n  );\n};\n\nexport default ActionsForm;\n\nexport const ConnectedCopyForm = connect(null, {\n  request: fetchEntity\n})(CopyForm);\n\nfunction CopyForm({ form, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const [result, setResult] = useState('');\n  const disableActions = form?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Copy\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '300px'\n          }}\n        >\n          <ModalHeader\n            title=\"Copy Form\"\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was copied successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be copied.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: `${form.name}_copy` }}\n                onSubmit={handleSubmit.bind(this, setResult, request, form.name)}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              Please choose a new name for the copy of form &apos;{form.name}&apos;.\n                            </Section.Header>\n                            <Row>\n                              <Text\n                                name=\"name\"\n                                label=\"Name\"\n                                value={`${form.name}_copy`}\n                                description={form.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButtonNoDirty variant=\"contained\">Save</SubmitButtonNoDirty>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, formName, values) {\n  const body = {\n    name: values.name\n  };\n\n  postForm(formName, body)\n    .then(() => {\n      setResult('success');\n      request('form');\n    })\n    .catch(error => {\n      console.log('[copy form] put form error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButtonNoDirty = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { Section, Row, Column } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Ensure } from 'core/components/Ensure';\n\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { PackedContext } from './FormEditor';\n\nexport const FormParameters = ({ packed, prototype }) => {\n  return (\n    <Section>\n      <Section.Header></Section.Header>\n      <Section.Content>\n        <Ensure type=\"form\">\n          {({ data: forms }) => (\n            <Ensure type=\"type\">\n              {({ data: datatypes }) => (\n                <Ensure type=\"prototype\">\n                  {({ data: prototypes }) => (\n                    <Ensure type=\"process\">\n                      <FieldsAndGroupsEditor\n                        prototype={prototype}\n                        groups={packed.groups}\n                        prototypes={prototypes}\n                        datatypes={datatypes}\n                        forms={forms}\n                      />\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nconst DataContext = React.createContext({ datatypes: [], forms: [], prototypes: [] });\n\nfunction FieldsAndGroupsEditor({ groups, datatypes, prototypes, forms }) {\n  const entities = useMemo(\n    () => ({\n      datatypes,\n      prototypes,\n      forms\n    }),\n    [datatypes, prototypes, forms]\n  );\n\n  return (\n    <>\n      <DataContext.Provider value={entities}>\n        {groups.map((group, index) => (\n          <FieldGroup key={index} pointer={index} group={group} />\n        ))}\n      </DataContext.Provider>\n    </>\n  );\n}\n\nfunction FieldGroup({ group, pointer }) {\n  return (\n    <>\n      {group.instances.map((instance, index) => (\n        <GroupInstance\n          key={`${pointer}|${index}`}\n          group={group}\n          instance={instance}\n          pointers={{ group: pointer, instance: index }}\n          count={group.instances.length}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction GroupInstance({ group, instance, pointers, count }) {\n  let title = group.name ? `Group ${group.name}` : null;\n  if (group.iteration_limit > 1) {\n    title = group.name\n      ? `Group ${group.name} (${pointers.instance + 1} of ${count})`\n      : `Group (Unnamed) (${pointers.instance + 1} of ${count})`;\n  }\n\n  const canAdd =\n    group.iteration_limit > 1 && count - 1 === pointers.instance && count < group.iteration_limit;\n\n  const { dispatch } = useContext(PackedContext);\n\n  return (\n    <div>\n      <Section.Title>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}\n        >\n          {title}\n          {count !== 1 && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_GROUP_INSTANCE',\n                  pointers\n                });\n              }}\n            >\n              Remove Group\n            </Button>\n          )}\n        </div>\n      </Section.Title>\n      <div>\n        {instance.fields.map((field, index) => (\n          <Field\n            key={`${pointers.group}|${pointers.instance}|${field.name}`}\n            group={group}\n            instance={instance}\n            pointers={{ ...pointers, field: index }}\n            field={field}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {canAdd && (\n          <Button\n            onClick={() => {\n              const fields = instance.fields.map(field => {\n                return {\n                  ...field,\n                  values: [{ instance: 0, value: null }]\n                };\n              });\n              const newInstance = {\n                ...instance,\n                instance: instance.instance + 1,\n                fields\n              };\n\n              dispatch({\n                type: 'ADD_GROUP_INSTANCE',\n                pointers,\n                instance: newInstance\n              });\n            }}\n          >\n            Add Group\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Field({ field, pointers }) {\n  return (\n    <div>\n      {field.values.map((value, index) => (\n        <Value\n          key={`${pointers.group}|${pointers.instance}|${field.name}|${index}`}\n          field={field}\n          value={value.value}\n          pointers={{ ...pointers, value: index }}\n          count={field.values.length}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Value({ field, value, pointers, count }) {\n  const packet = useContext(DataContext);\n\n  const canRemove = field.is_repeatable && count !== 1;\n  const canAdd = field.is_repeatable && pointers.value + 1 === count;\n\n  const { dispatch } = useContext(PackedContext);\n\n  const label = field.is_repeatable\n    ? `${field.name} (${pointers.value + 1} of ${count})`\n    : field.name;\n\n  function uniquedName(name, idx) {\n    const string = `group-${idx.group}-instance-${idx.instance}-field-${idx.field}-value-${idx.value}---${field.name}`;\n\n    return string;\n  }\n\n  const parameter = normalize(\n    {\n      name: uniquedName(field.name, pointers),\n      provided_field_name: field.name,\n      is_required: field.is_required,\n      value,\n      data_type: field.data_type,\n      description: field.description,\n      deflt: field.deflt,\n      meta: field.meta\n    },\n    packet.datatypes,\n    packet.prototypes,\n    packet.forms\n  );\n\n  // for some reason, is_required is set as false for a supported parameter (eg: mas0300.sys.invocation.server_list prototype)\n  // FIX ME: need to investigate further, for now, will make the value the same as field\n  parameter.is_required = field.is_required;\n  // console.log(parameter, field);\n\n  const is_supported = parameter.is_supported && parameter.editor.type !== 'hidden';\n\n  if (!is_supported) {\n    return (\n      <Row key={pointers.value}>\n        <p>{field.name} (Unsuported)</p>\n        <Parameter\n          normalized={{ ...parameter, is_required: false, editor: { type: 'text' } }}\n          disabled\n          label={label}\n        />\n      </Row>\n    );\n  }\n\n  return (\n    <Row key={pointers.value}>\n      <Column key={field.name}>\n        <Parameter normalized={parameter} label={label} />\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          {canAdd && canRemove && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_FIELD_VALUE',\n                  pointers\n                });\n              }}\n            >\n              Remove\n            </Button>\n          )}\n          {canAdd && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                onClick={() => {\n                  dispatch({\n                    type: 'ADD_FIELD_VALUE',\n                    pointers\n                  });\n                }}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n        </div>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\n\nimport { ConnectedEditConnection } from './ConnectedEditConnection';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsAccount = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const type = getEntityType(entity);\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConnection connection={entity} type={type} isDisabled={isDisabled} />;\n};\n\nexport default ActionsAccount;\n\nconst CONNECTION_TYPES = {\n  SERVER: 'server',\n  DATABASE: 'database'\n};\n\nconst getEntityType = entity => {\n  if (entity.protocol === 'SSH') {\n    return CONNECTION_TYPES.SERVER;\n  }\n\n  if (entity.protocol !== 'SSH' && entity.special && entity.special.database) {\n    return CONNECTION_TYPES.DATABASE;\n  }\n\n  return '';\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport _ from 'lodash';\nimport { fetchEntity } from '../actions';\n\nimport { patchConnection } from 'shared/api/accounts';\n\nimport { Switch } from 'shared/components';\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { ModeSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { fetchProtocols } from 'shared/api/protocols';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\nexport const ConnectedEditConnection = connect(null, {\n  request: fetchEntity\n})(EditConnection);\n\nfunction EditConnection({ connection, isDisabled, type, request }) {\n  if (type === '') return null;\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [passwordEditable, setPasswordEditable] = useState(false);\n  const [showRSA, setShowRSA] = useState(false);\n  const [protocols, setProtocols] = useState([]);\n  const initialValues = {\n    name: connection.name || '',\n    description: connection.description || '',\n    host: connection.address || '',\n    port: connection.port || '',\n    user: connection.user || '',\n    password: connection.user_key || '',\n    confirm_password: connection.user_key || '',\n    rsa_key: connection.user_key || '',\n    protocol: connection.protocol\n  };\n\n  if (type === 'database') {\n    initialValues.database = connection.special.database || '';\n    initialValues.mode = connection.special.mode || '';\n  }\n\n  let extraValidations;\n  if (!showRSA) {\n    extraValidations = values => {\n      const errors = {};\n\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n\n      return errors;\n    };\n  }\n\n  const getProtocols = () => {\n    fetchProtocols().then(response => {\n      if (response.result === 'success') {\n        setProtocols(response.protocols);\n      }\n    });\n  };\n\n  useEffect(() => {\n    return () => {\n      setPasswordEditable(false);\n    };\n  }, [open]);\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          if (type === 'database') {\n            getProtocols();\n          }\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vh',\n            minHeight: '50vh',\n            width: '808px',\n            height: '784px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Connection\"\n            icon={\n              <SvgIcon>\n                <VpnKeyIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Connection was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the connection could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={initialValues}\n                validate={extraValidations}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, protocols, showRSA, type, connection, values);\n                }}\n              >\n                {() => {\n                  const selectedProtocol =\n                    connection.protocol &&\n                    protocols.find(protocol => protocol.name === connection.protocol);\n                  const allowRSA = type === 'database' ? !!selectedProtocol?.allow_rsa_key : true;\n                  const withDatabase = selectedProtocol?.special_required?.includes('database');\n                  const withMode = selectedProtocol?.name === 'ORACLE';\n\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              <Section.Title>Details:</Section.Title>\n                            </Section.Header>\n                            <Row>\n                              <Column>\n                                <Row>\n                                  <Text name=\"name\" label=\"Name\" value={connection.name} required />\n                                </Row>\n                                <Row>\n                                  <Text\n                                    name=\"protocol\"\n                                    label=\"Protocol\"\n                                    value={connection.protocol}\n                                    disabled\n                                  />\n                                </Row>\n                              </Column>\n                              <Column>\n                                <Text\n                                  name=\"description\"\n                                  value={connection.description}\n                                  label=\"Description\"\n                                  multiline\n                                  required\n                                />\n                              </Column>\n                            </Row>\n                          </Section>\n                          <Section>\n                            <Section.Header>\n                              <Section.Title>Connection Info:</Section.Title>\n                            </Section.Header>\n                            <Row>\n                              <Column style={{ maxWidth: '80%', width: '80%' }}>\n                                <Text\n                                  name=\"host\"\n                                  label=\"Host\"\n                                  value={connection.address}\n                                  disabled\n                                  required\n                                />\n                              </Column>\n                              <Column style={{ maxWidth: '20%', width: '20%' }}>\n                                <Text name=\"port\" required label=\"Port\" value={connection.port} />\n                              </Column>\n                            </Row>\n                            {type === 'database' && (\n                              <Row>\n                                {withDatabase && (\n                                  <Column\n                                    style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}\n                                  >\n                                    <Text\n                                      name=\"database\"\n                                      label=\"Database\"\n                                      value={connection.special.database}\n                                      required\n                                    />\n                                  </Column>\n                                )}\n                                {withMode && (\n                                  <Column style={{ maxWidth: '20%' }}>\n                                    <ModeSelect name=\"mode\" label=\"Mode\" />\n                                  </Column>\n                                )}\n                              </Row>\n                            )}\n                            <Row>\n                              <Column>\n                                <Text name=\"user\" label=\"User\" value={connection.user} required />\n                              </Column>\n                              {passwordEditable && (\n                                <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                              )}\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Left>\n                          {!passwordEditable && (\n                            <Button onClick={() => setPasswordEditable(true)}>\n                              Change existing password\n                            </Button>\n                          )}\n                          {passwordEditable && allowRSA && (\n                            <Checkbox\n                              checked={showRSA}\n                              onInput={() => setShowRSA(prev => !prev)}\n                              label=\"Use RSA key\"\n                            />\n                          )}\n                        </Paper.Footer.Left>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, protocols, showRSA, type, connection, values) {\n  const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n  const allowRSA = type === 'database' ? !!selectedProtocol?.allow_rsa_key : true;\n  const withDatabase = selectedProtocol?.special_required?.includes('database');\n  const withMode = selectedProtocol?.name === 'ORACLE';\n\n  const request_body = {\n    rename: values.name,\n    user: values.user,\n    description: values.description,\n    protocol: values.protocol,\n    address: values.host,\n    user_key: (allowRSA && showRSA ? values.rsa_key : values.password) || undefined,\n    port: Number.parseInt(values.port, 10),\n    special: {\n      ...(withDatabase && { database: values.database }),\n      ...(withMode && { mode: values.mode })\n    }\n  };\n\n  if (_.isEmpty(request_body.special)) {\n    delete request_body.special;\n  }\n\n  patchConnection(connection.name, request_body)\n    .then(() => {\n      setResult('success');\n      request('account');\n    })\n    .catch(error => {\n      console.log('[edit connection] patch connection error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => {\n  return (\n    <Column>\n      <Switch value={allowed && showRSA}>\n        <Switch.Case value>\n          <Text name=\"rsa_key\" label=\"RSA Key\" multiline required />\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Row>\n            <Password name=\"password\" label=\"Password\" required />\n          </Row>\n          <Row>\n            <Password name=\"confirm_password\" label=\"Confirm Password\" required />\n          </Row>\n        </Switch.Case>\n      </Switch>\n    </Column>\n  );\n};\n","import React from 'react';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\n\nconst ActionsRoot = () => {\n  return (\n    <>\n      <ConnectedNewNamespace />\n    </>\n  );\n};\n\nexport default ActionsRoot;\n","import React from 'react';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nconst ActionsPrototype = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <ConnectedFormModal isNew prototype={entity} disabled={disableActions} />\n    </>\n  );\n};\n\nexport default ActionsPrototype;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport _, { isEmpty, pickBy } from 'lodash';\n\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { patchSchedule, getSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsSchedule = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConnectedEditSchedule schedule={entity} isDisabled={isDisabled} />\n    </>\n  );\n};\n\nexport default ActionsSchedule;\n\nexport const ConnectedEditSchedule = connect(null, {\n  request: fetchEntity\n})(EditSchedule);\n\nfunction EditSchedule({ schedule, isDisabled, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n    }\n  };\n  const [result, setResult] = useState('');\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const [processDetails, setProcessDetails] = useState({});\n  const [tab, setTab] = useState('schedule');\n\n  useEffect(() => {\n    if (!_.isEmpty(scheduleDetails) && !_.isEmpty(processDetails)) {\n      setOpen(true);\n    }\n  }, [scheduleDetails, processDetails]);\n\n  const onClickHandler = () => {\n    /** TODO cover the case when one (or both) of the below calls fail or no data is returned from them */\n\n    getSchedule(schedule.name)\n      .then(data => {\n        if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n          setScheduleDetails(data.data.data.schedules[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n\n    getProcess(schedule.process)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '800px',\n            minHeight: '85vh',\n            maxWidth: '85vw',\n            maxHeight: '85vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Schedule\"\n            icon={\n              <SvgIcon>\n                <EventNoteIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  An error occurred and the new schedule could not be added.\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={processDetails}\n                    schedule={scheduleDetails}\n                    setResult={setResult}\n                    request={request}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={processDetails} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({ schedule, setResult, request }) => {\n  const derivedMonitor = {\n    enabled: !!schedule?.parameters?.events,\n    events: schedule?.parameters?.events || 0,\n    users: schedule?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const splittedName = schedule.name.split('.');\n  const name = splittedName[splittedName.length - 1];\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name.includes('.')) {\n      errors.sch_name = 'Name can not include \".\"';\n    }\n\n    // at least one of the fields need to have a numeric value\n    if (\n      Number.isNaN(Number(t_min)) &&\n      Number.isNaN(Number(t_hr)) &&\n      Number.isNaN(Number(t_day)) &&\n      Number.isNaN(Number(t_mon)) &&\n      Number.isNaN(Number(t_wkd))\n    ) {\n      errors.t_min = 'Expected a numeric value';\n      errors.t_hr = 'Expected a numeric value';\n      errors.t_day = 'Expected a numeric value';\n      errors.t_mon = 'Expected a numeric value';\n      errors.t_wkd = 'Expected a numeric value';\n    }\n\n    if (parseInt(t_min, 10) < 0 || parseInt(t_min, 10) > 60) {\n      errors.t_min = 'Value must be between 0 and 60';\n    }\n    if (parseInt(t_hr, 10) < 0 || parseInt(t_hr, 10) > 24) {\n      errors.t_hr = 'Value must be between 0 and 24';\n    }\n    if (parseInt(t_day, 10) < 1 || parseInt(t_day, 10) > 31) {\n      errors.t_day = 'Value must be between 1 and 31';\n    }\n    if (parseInt(t_mon, 10) < 1 || parseInt(t_mon, 10) > 12) {\n      errors.t_mon = 'Value must be between 1 and 12';\n    }\n    if (parseInt(t_wkd, 10) < 1 || parseInt(t_wkd, 10) > 7) {\n      errors.t_wkd = 'Value must be between 1 and 7';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={handleSubmit.bind(this, schedule, monitor, setResult, request)}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={schedule.description}\n                          value={schedule.process}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text name=\"sch_name\" label=\"Name\" value={name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={schedule.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_min\" label=\"T_min\" value={schedule.t_min} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_hr\" label=\"T_hr\" value={schedule.t_hr} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_day\" label=\"T_Day\" value={schedule.t_day} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_mon\" label=\"T_mon\" value={schedule.t_mon} />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"t_wkd\" label=\"T_wkd\" value={schedule.t_wkd} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <ProcessParameters recieved={schedule.parameters} editable />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(schedule, monitor, setResult, request, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    rename: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value) {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  patchSchedule(schedule.name, body)\n    .then(() => {\n      setResult('success');\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[edit schedule] edit schedule error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(values) {\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else {\n          if (field_name === 'deflt') {\n            extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n          } else {\n            extracted.replvars.push({ [field_name]: values[key] });\n          }\n        }\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], parameters: {} }\n  );\n\n  return { parameters: { ...result.parameters, replvars: cleanUpReplVars(result.replvars) } };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getAlias, patchAlias, postAlias } from 'shared/api/alias';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { ConnectedDeleteEntity } from './common-actions/DeleteEntity';\nimport { PrivilegesModal } from './common-actions/privileges/PrivilegesModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction isEntityDeletable(entity) {\n  return (\n    entity.owner !== 'postgres' &&\n    (entity.entity === 'form' ||\n      entity.entity === 'process' ||\n      entity.entity === 'schedule' ||\n      entity.entity === 'account')\n  );\n}\n\nconst ActionsCommon = ({ entity }) => {\n  const displayActions = entity.entity !== 'root';\n  if (displayActions) {\n    const displayDelete = isEntityDeletable(entity);\n    const isAlias = entity.alias;\n    const disableActions = entity?.meta?.appearance === 'Greyed';\n    const canWrite = hasWritePrivileges(entity);\n\n    return (\n      <>\n        {canWrite && (\n          <PrivilegesModal entity={entity} isAlias={isAlias} disabled={disableActions} />\n        )}\n        {!isAlias && <ConnectedNewAlias entity={entity} />}\n        {isAlias && canWrite && <ConnectedEditAlias entity={entity} />}\n        {canWrite && displayDelete && (\n          <ConnectedDeleteEntity entity={entity} disabled={disableActions} />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nexport default ActionsCommon;\n\n//* These should be moved to the common-actions folder */\n\nexport const ConnectedNewAlias = connect(null, {\n  request: fetchEntity\n})(NewAlias);\n\nfunction NewAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: '',\n                  original: entity ? entity.name : '',\n                  description: ''\n                }}\n                onSubmit={handleSubmitNew.bind(this, setResult, request)}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const alias = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name: values.original,\n    alias,\n    description: values.description\n  };\n\n  postAlias(body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedEditAlias = connect(null, {\n  request: fetchEntity\n})(EditAlias);\n\nfunction EditAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = entity.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.original = entity ? entity.alias : '';\n    values.description = description;\n\n    return values;\n  };\n\n  const getAliasDetails = name => {\n    getAlias(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.aliases &&\n          data.data.data.aliases[0] &&\n          data.data.data.aliases[0].description\n        ) {\n          setDescription(data.data.data.aliases[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get alias] error getting alias details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getAliasDetails(entity.name);\n        }}\n      >\n        Edit Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={handleEditSubmit.bind(this, setResult, request, entity.name)}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleEditSubmit(setResult, request, originalName, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    rename: name,\n    description: values.description\n  };\n\n  patchAlias(originalName, body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity, clearSelectedEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteEntity = connect(null, {\n  clearSelected: clearSelectedEntity,\n  refresh: fetchEntity\n})(DeleteEntity);\n\nfunction DeleteEntity({ disabled, entity, refresh, clearSelected }) {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove this {type} ? This could affect the way the user\n                    will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <BodyText>{name} successfully deleted!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                      clearSelected();\n                      refresh(type);\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <BodyText>You do not have permissions to delete this entity.</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { PrivilegesEditor } from './PrivilegesEditor';\n\nexport const PrivilegesModal = ({ disabled, entity, isAlias }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      // refresh(entity.type);\n      setOpen(false);\n    }, [])\n  };\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Privileges\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vw',\n            minHeight: '648px',\n            maxHeight: '648px'\n          }}\n        >\n          <ModalHeader\n            title=\"Privileges\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <PrivilegesEditor entity={entity} isAlias={isAlias} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\n\nimport { Paper, Center, NavigationTab } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Result, ModalContext } from 'shared/components/overlays';\nimport { Button, Checkbox as LabeledCheckbox } from 'shared/components/controls';\n\nimport { getPrivileges, setPrivileges } from 'shared/api/privileges';\n\nimport './PrivilegesEditor.local.scss';\nimport { mdiAccount } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nexport const PrivilegesEditor = ({ entity }) => {\n  const hasAlias = !!entity.alias;\n  const {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    updatePrivilege\n  } = usePrivileges(entity, hasAlias);\n  const [tab, switchTab] = useState('users');\n  const { actions } = useContext(ModalContext);\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader>Loading privileges for entity</Loader>\n      </Center>\n    );\n  }\n\n  if (!data) {\n    return (\n      <Center>\n        <Result type=\"fail\">\n          <Result.Text compact>Could not load privileges list for {entity.name}</Result.Text>\n        </Result>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab\n          active={tab}\n          tabs={[\n            { label: 'Users', value: 'users' },\n            { label: 'Groups', value: 'groups' }\n          ]}\n          onClick={switchTab}\n        />\n      </Paper.Header>\n      <PrivilegesList\n        privileges={data.privileges.filter(p => {\n          if (p.role === 'mas') {\n            return false;\n          }\n          if (p.role === 'admin') {\n            return false;\n          }\n          if (tab === 'users') {\n            return !p.is_group;\n          }\n\n          return p.is_group;\n        })}\n        updater={privilege => {\n          updatePrivilege(privilege);\n        }}\n        updating={updating}\n        entityType={entity.entity}\n        entityName={hasAlias && editAliasParent ? entity.alias : entity.name}\n        isAlias={hasAlias && !editAliasParent}\n      />\n      <Paper.Footer>\n        {!!entity.alias && (\n          <Paper.Footer.Left>\n            <LabeledCheckbox\n              color=\"primary\"\n              icon={<CheckBoxOutlineBlankIcon />}\n              checkedIcon={<CheckBoxIcon />}\n              checked={editAliasParent}\n              onChange={() => {\n                setEditAliasParent(!editAliasParent);\n              }}\n              label=\"Show parent privileges\"\n            />\n          </Paper.Footer.Left>\n        )}\n        <Paper.Footer.Right>\n          <Button color=\"primary\" variant=\"contained\" onClick={actions.close}>\n            Done\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nfunction PrivilegesList({ privileges, updating, updater, entityType, entityName, isAlias }) {\n  const types = privilegeTypes(entityType, isAlias);\n\n  function renderType(type) {\n    return (\n      <div className=\"column role\" key={type}>\n        {type}\n      </div>\n    );\n  }\n\n  function mapByEntity(user_or_group) {\n    return (\n      <div className=\"item\" key={`alias-${isAlias}-role-${user_or_group.role}`}>\n        <div className=\"column role\">\n          <SvgIcon color=\"primary\">\n            <path d={mdiAccount} />\n          </SvgIcon>\n          {user_or_group.role}\n        </div>\n        <div className=\"types\">\n          {types.map(type => {\n            const granted = user_or_group.effective.includes(type);\n            return (\n              <div className=\"column type\">\n                <Checkbox\n                  key={`alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n                  classes={{ root: 'privilege-checkbox' }}\n                  checked={granted}\n                  disabled={updating}\n                  onChange={() => {\n                    updater({\n                      privilege: type,\n                      enitity_name: entityName,\n                      alias: isAlias,\n                      role: user_or_group.role,\n                      role_type: user_or_group.is_group ? 'group' : 'user',\n                      granted\n                    });\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"privileges\">\n      <div className=\"header\">\n        {renderType('Name')}\n        <div className=\"types\">{types.map(renderType)}</div>\n      </div>\n      <div className=\"list\">{privileges.map(mapByEntity)}</div>\n    </div>\n  );\n}\n\nfunction privilegeTypes(entityType, alias = false) {\n  const type = entityType.toLowerCase();\n  const privileges = [];\n  if (!alias) {\n    if (type === 'namespace') {\n      privileges.push('affiliate');\n    } else if (['account', 'constant', 'form', 'process'].includes(type)) {\n      privileges.push('execute');\n    }\n  }\n  privileges.push('read', 'write');\n  return privileges;\n}\n\nfunction usePrivileges(entity, hasAlias) {\n  const [editAliasParent, setEditAliasParent] = useState(!hasAlias);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getPrivileges(\n      hasAlias && editAliasParent ? entity.alias : entity.name,\n      hasAlias && !editAliasParent\n    )\n      .then(resp => {\n        setData(resp?.data?.data?.entities?.[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setData(null);\n        setLoading(false);\n      });\n  }, [editAliasParent]);\n\n  const updatePrivilege = useCallback(\n    privilege => {\n      setUpdating(true);\n      setPrivileges(privilege)\n        .then(resp => {\n          setData(resp?.data?.data?.entities?.[0]);\n          setUpdating(false);\n        })\n        .catch(() => {\n          setUpdating(false);\n        });\n    },\n    [entity, editAliasParent]\n  );\n\n  return {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    setUpdating,\n    setData,\n    updatePrivilege\n  };\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { arrayOf, node, string, shape } from 'prop-types';\n\nimport './HeaderPageSwitch.local.scss';\n\nexport const HeaderPageSwitch = ({ routes }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header-page-switch\" data-qa=\"header-page-switch\">\n      {routes.map(({ to, label }) => (\n        <div\n          key={to}\n          className={classnames('header-page-switch-link', {\n            'active-link': location.pathname.includes(to)\n          })}\n        >\n          <Link key={to} to={to} data-qa={`header-page-switch-link-to-${to}`}>\n            {label}\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nHeaderPageSwitch.propTypes = {\n  routes: arrayOf(\n    shape({\n      to: string,\n      label: node\n    })\n  )\n};\n\nHeaderPageSwitch.defaultProps = {\n  routes: []\n};\n","import React, { useEffect } from 'react';\nimport { func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadUserThunk } from '../../store/thunks';\n\nimport { ConnectedUserView } from '../pages/UserView/UserView';\n\nexport const UserLoader = ({ loadUser, loading }) => {\n  const { userName } = useParams();\n  useEffect(() => {\n    if (userName) {\n      loadUser(userName);\n    }\n  }, [userName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading User <b>{userName}</b>\n        </Loader>\n      ) : (\n        <ConnectedUserView />\n      )}\n    </>\n  );\n};\n\nUserLoader.propTypes = {\n  loadUser: func,\n  loading: bool\n};\n\nexport const ConnectedUserLoader = connect(\n  state => ({\n    loading: state.usersManager.flags.user.loading\n  }),\n  dispatch => ({ loadUser: name => dispatch(loadUserThunk(name)) })\n)(UserLoader);\n","import React, { useState, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { UserGroupsContainer } from './containers/UserGroups';\n\nimport './UserView.local.scss';\nimport { removeUserThunk } from '../../../store/thunks';\nimport { EditUserDetailsContainer } from './containers/EditUserDetails';\nimport { EditUserInfoContainer } from './containers/EditUserInfo';\n\nexport const UserView = ({ user, removeUser, removing }) => {\n  const history = useHistory();\n\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const deleteUser = useCallback(() => {\n    removeUser(user.name)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n        history.push('/system/mas-accounts/users');\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        alert('Could not remove user!'); // eslint-disable-line\n      });\n  }, [user]);\n\n  /* This needs to be written as a result check or 404 page for a user. */\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title>{user.name}</Paper.Title>\n        </Paper.Header>\n        <Paper.Content>\n          <Section>\n            <Section.Title>Global Privileges</Section.Title>\n            <PrivilegesContainer />\n          </Section>\n          <Section>\n            <Section.Title>Member of Groups</Section.Title>\n            <UserGroupsContainer />\n          </Section>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"secondary\" disabled={removing} onClick={modalActions.open}>\n              Remove\n            </Button>\n            <EditUserDetailsContainer />\n            <EditUserInfoContainer />\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {user.name}? This could affect the way the\n                    user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      deleteUser();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nUserView.propTypes = {\n  user: object,\n  removeUser: func,\n  removing: bool\n};\n\nexport const ConnectedUserView = connect(\n  state => ({\n    user: state.usersManager.users.selected,\n    removing: state.usersManager.flags.user.removing\n  }),\n  dispatch => ({\n    removeUser: userName => dispatch(removeUserThunk(userName))\n  })\n)(UserView);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../../store/thunks';\n\nexport const Privileges = ({ user, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <div className=\"user-privileges\">\n      <ul className=\"privileges-list\">\n        {privileges.map(entry => {\n          return (\n            <li key={entry.key} className=\"privileges-item\">\n              <Privilege user={user} privilege={entry} actions={actions} disabled={disabled} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPrivileges.propTypes = {\n  user: string,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ user, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(user, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  user: string,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      disabled: state.usersManager.flags.privileges.disabled,\n      privileges: mapPrivileges(user.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (user, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      ),\n    revoke: (user, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction mapPrivileges(data) {\n  if (!data) return [];\n\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { ScrollableContainer, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditUserGroupsContainer } from './EditUserGroups';\n\nimport './UserGroups.local.scss';\nimport { removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const UserGroups = ({ user, groups, removeFromGroups }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeFromGroups(user, [selectedGroup])\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        alert('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [user, selectedGroup]);\n\n  return (\n    <>\n      <div className=\"user-groups-block\">\n        <ScrollableContainer variant=\"row white\">\n          {passed => (\n            <ul {...passed}>\n              {groups &&\n                groups.map(group_name => (\n                  <li className=\"group-card-item\" key={group_name}>\n                    <AvatarCard\n                      label={group_name}\n                      avatar={{ fallback: <GroupIcon /> }}\n                      action={\n                        <SvgIcon\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSelectedGroup(group_name);\n                            modalActions.open();\n                          }}\n                        >\n                          <path d={mdiDeleteCircleOutline} />\n                        </SvgIcon>\n                      }\n                    />\n                  </li>\n                ))}\n              <li className=\"group-card-item\" key=\"add-user-to-groups\">\n                <EditUserGroupsContainer />\n              </li>\n            </ul>\n          )}\n        </ScrollableContainer>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {user} from group {selectedGroup}? This\n                    could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  removeFromGroups: func\n};\n\nexport const UserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user: user.name, groups: user.member_of };\n  },\n  dispatch => ({\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n  })\n)(UserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './EditUserGroups.local.scss';\nimport { addUserToGroupsThunk, removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const EditUserGroups = ({ user, groups, addToGroups, flags }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard label=\"Add to group\" avatar={{ fallback: <AddIcon /> }} />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            maxWidth: '840px',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n            />\n\n            <div className=\"modal-content\">\n              <GroupsList\n                user={user}\n                selected={groups}\n                flags={flags}\n                closeModal={closeModal}\n                onAdd={(userName, selections) => {\n                  return addToGroups(userName, selections);\n                }}\n              />\n            </div>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nEditUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  addToGroups: func,\n  flags: object\n};\n\nexport const EditUserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user: user.name, groups: user.member_of, flags: state.usersManager.flags.user };\n  },\n  dispatch => ({\n    addToGroups: (user, groups) => dispatch(addUserToGroupsThunk({ user, groups })),\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n    /** add to group thunk here */\n    /** remove from group thunk here */\n  })\n)(EditUserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nconst GroupsList = ({ user, selected, onAdd, closeModal }) => {\n  const [state, setState] = useState({\n    selections: [],\n    loading: true,\n    done: false,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? [...state.all]\n      : state.all.filter(g => selected && !selected.includes(g.name));\n  }, [state.all, state.showAll, selected]);\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS)\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return <p>Could not retrieve all groups</p>;\n  }\n\n  if (state.success) {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Added to selected groups succesfully!</Result.Text>\n          </Result>\n        </Center>\n\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.fail) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not add user to groups!</Result.Text>\n          </Result>\n        </Center>\n\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"seachable-list-container\">\n        <SearchableList\n          items={filtered}\n          filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n          variant=\"row white\"\n        >\n          {entry => {\n            return (\n              <div className=\"card-wrap\" style={{ width: '178px' }}>\n                <AvatarCard\n                  onClick={() => {\n                    setState(prev =>\n                      produce(prev, draft => {\n                        const selections = new Set(prev.selections);\n\n                        if (selections.has(entry.name)) {\n                          selections.delete(entry.name);\n                        } else {\n                          selections.add(entry.name);\n                        }\n\n                        draft.selections = [...selections];\n                      })\n                    );\n                  }}\n                  disabled={state.showAll ? selected.includes(entry.name) : false}\n                  selected={state.selections.includes(entry.name)}\n                  label={entry.name}\n                  avatar={{ fallback: <GroupIcon /> }}\n                />\n              </div>\n            );\n          }}\n        </SearchableList>\n        <div className=\"additional-actions\">\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that the user is a part of\"\n          />\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              onAdd(user, state.selections)\n                .then(\n                  setState(\n                    produce(state, draft => {\n                      draft.success = true;\n                    })\n                  )\n                )\n                .catch(err => {\n                  setState(\n                    produce(state, draft => {\n                      draft.fail = err;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  user: string,\n  selected: array,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { ChangePasswordContainer } from './ChangePassword';\nimport { UserDatesBox } from '../components/UserDatesBox';\n\n// import './EditUserDetails.local.scss';\n\nexport const EditUserDetails = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        User Details\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '370px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-details\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"User Details\"\n          />\n          <UserDetailsForm user={user} modalActions={modalActions} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserDetails.propTypes = {\n  user: object\n};\n\nexport const EditUserDetailsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserDetails);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserDetailsForm = ({ user, modalActions }) => {\n  const [state, setState] = useState({ submitResult: undefined });\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  const initialValues = {\n    description: user.description\n  };\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          if (_.isEqual(initialValues, values)) {\n            actions.setSubmitting(false);\n            modalActions.close();\n          }\n\n          // parse and add user information form data.\n\n          /**\n            patch user description\n            */\n          RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`, {\n            description: values.description\n          })\n            .then(() => {\n              setState(prev => ({ ...prev, submitResult: 'success' }));\n            })\n            .catch(() => {\n              actions.setSubmitting(false);\n\n              setState(prev => ({ ...prev, submitResult: 'fail' }));\n            });\n        }}\n      >\n        {({ dirty, isSubmitting, submitForm }) => (\n          <>\n            <Paper.Content scrollable>\n              <Form>\n                <UserDatesBox created={user.date_created} updated={user.date_updated} />\n                <Row>\n                  <Field name=\"description\">\n                    {({ field, meta }) => {\n                      return (\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          error={meta.error && meta.touched}\n                          helperText={meta.touched ? meta.error : undefined}\n                          label=\"Short Description\"\n                        />\n                      );\n                    }}\n                  </Field>\n                </Row>\n              </Form>\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <ChangePasswordContainer />\n              </Paper.Footer.Left>\n              <Paper.Footer.Right>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || isSubmitting}\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nUserDetailsForm.propTypes = {\n  user: object,\n  modalActions: object\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { SvgIcon } from '@material-ui/core';\nimport { mdiAccountPlus, mdiAccountEdit } from '@mdi/js';\nimport moment from 'moment';\n\nimport './UserDatesBox.local.scss';\n\nexport const UserDatesBox = ({ created, updated }) => (\n  <div className=\"dates-box\">\n    {created && <DateCreated date={created} />}\n    {updated && <DateUpdated date={updated} />}\n  </div>\n);\n\nUserDatesBox.propTypes = { created: string, updated: string };\n\nexport const DateCreated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountPlus} />\n    </SvgIcon>\n    <span>Created on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateCreated.propTypes = { date: string };\n\nexport const DateUpdated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountEdit} />\n    </SvgIcon>\n    <span>Updated on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateUpdated.propTypes = { date: string };\n\nfunction parseDate(date) {\n  return moment(date).format('DD MMM YYYY');\n}\n","import React, { useState, useEffect } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\n// import './EditUserInfo.local.scss';\n\nexport const EditUserInfo = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Contact Info\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '632px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"Contact Information\"\n          />\n          <UserInfoForm user={user} modalActions={modalActions} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserInfo.propTypes = {\n  user: object\n};\n\nexport const EditUserInfoContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserInfo);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserInfoForm = ({ user, modalActions }) => {\n  const [state, setState] = useState({ loading: true });\n\n  useEffect(() => {\n    const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n    const prototypeEndpoint = 'prototype/mas0300.sys.user.information?version=1';\n\n    RestClient.get(prototypeEndpoint).then(formproto => {\n      const proto = formproto.data.data.prototypes[0];\n\n      RestClient.get(formEndpoint)\n        .then(formdata => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: false,\n            data: formdata.data.data.forms[0],\n            proto\n          });\n        })\n        .catch(() => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: true,\n            proto\n          });\n        });\n    });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <>\n        <Center>\n          <Loader />\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"primary\" onClick={modalActions.close}>\n              Cancel\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.result === 'success') {\n    const { fields, values } = mapFormValues(state.proto, state.data);\n\n    return (\n      <>\n        <Formik\n          validateOnChange={false}\n          initialValues={values}\n          onSubmit={(submited, actions) => {\n            if (_.isEqual(values, submited)) {\n              actions.setSubmitting(false);\n              modalActions.close();\n            }\n\n            const sendable_data = fields.reduce((d, entry) => {\n              /** Empty values have to be nulled to be sent in the data :( */\n              let value = submited[entry.name] || null;\n\n              /**\n                TODO: backend accepts array for is_repeatable values\n               */\n              if (entry.is_repeatable && !Array.isArray(value)) {\n                value = [value];\n              }\n\n              d.push({\n                name: entry.label, // for this particular form, the names contain spaces.\n                value\n              });\n\n              return d;\n            }, []);\n            // parse and add user information form data.\n\n            /**\n            Send user.info data to backend\n            */\n            const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n\n            if (state.create) {\n              const body = {\n                name: `mas0000.user.${user.name}.form.user_information`,\n                description: `User information for ${user.name}`,\n                values: sendable_data,\n                prototype: state.proto.name\n              };\n\n              RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.FORM}`, body)\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            } else {\n              RestClient.patch(formEndpoint, {\n                description: state.data.description,\n                rename: state.data.name,\n                values: sendable_data\n              })\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            }\n          }}\n        >\n          {({ dirty, isSubmitting, submitForm }) => (\n            <>\n              <Paper.Content scrollable>\n                <Form style={{ paddingTop: '16px' }}>\n                  {fields.map(entry => (\n                    <Row key={entry.name}>\n                      <FieldSwitch parameter={entry} />\n                    </Row>\n                  ))}\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button color=\"primary\" onClick={modalActions.close}>\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!dirty || isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          )}\n        </Formik>\n      </>\n    );\n  }\n};\n\nfunction mapFormValues(proto, provided) {\n  const { fields } = proto;\n  const data = provided && provided.values;\n\n  return fields.reduce(\n    (dict, entry, index) => {\n      const normalized = entry.name.replace(' ', '_');\n      const value = data && data[index].value;\n\n      if (entry.is_repeatable && Array.isArray(entry.value)) {\n        /**\n          TODO: array values have to be unpacked\n         */\n        dict.values[normalized] = value ? value[0] : '';\n      } else {\n        dict.values[normalized] = value || '';\n      }\n\n      dict.fields.push({\n        ...entry,\n        name: normalized,\n        label: entry.name\n      });\n\n      return dict;\n    },\n    { values: {}, fields: [] }\n  );\n}\n\nexport const TextField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    const schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './UserCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const UserCard = ({ href, user }) => {\n  const { pathname } = useLocation();\n  const { name, src } = user;\n  return (\n    <Link\n      to={href}\n      className={classnames('user-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`user-card-of-${name}`}\n    >\n      <Avatar className=\"user-avatar\" alt={name} src={src}>\n        {user.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"user-name\">{name}</span>\n    </Link>\n  );\n};\n\nUserCard.propTypes = {\n  href: string,\n  user: object\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoUserSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>User Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a user from the list to view or edit their details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n  </Paper>\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Section, Center, Row, Column } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { NewUserGroups } from './components/NewUserGroups';\n\nimport { createUserThunk } from '../../../store/thunks';\n\nimport './CreateNewUser.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmpassword: Yup.string()\n    .required('Please confim the password you entered')\n    .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  groups: Yup.array()\n});\n\nconst CreateNewUser = ({ submitUserValues, allUsers }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.username) ||\n      (values.username && values.username.substr(-1) === '.')\n    ) {\n      errors.username = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allUsers.map(user => {\n      if (exists) return;\n\n      if (user.name === values.username) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.username = 'A user with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /** Not used. Navigating dirrectly to new user */\n    if (operation.result === 'success') {\n      return (\n        <>\n          <Paper>\n            <Paper.Content scrollable={false}>\n              <Center>\n                <Result type={operation.result}>\n                  <Result.Text>User created successfully</Result.Text>\n                </Result>\n              </Center>\n            </Paper.Content>\n            <Paper.Footer>\n              <Button to=\"/system/mas-accounts/users\" component={Link}>\n                Go to user\n              </Button>\n            </Paper.Footer>\n          </Paper>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Text>Could not create new user</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirmpassword: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitUserValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.username));\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: error.result\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <Paper>\n          <Form className=\"create-new-user-form\">\n            <Paper.Title>New User</Paper.Title>\n            <Paper.Content>\n              <Section>\n                <Section.Title>User Details</Section.Title>\n                <Section.Content>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"username\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"description\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            label=\"Short Description\"\n                            placeholder=\"Short description\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"password\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"confirmpassword\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            autoComplete=\"off\"\n                            required\n                            label=\"Confirm Password\"\n                            placeholder=\"Confirm Passwords\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                </Section.Content>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => <NewUserGroups groups={values.groups} helpers={helpers} />}\n                </FieldArray>\n              </Section>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <div className=\"left-side-action\">\n                <Button to=\"/system/mas-accounts/users\" color=\"primary\">\n                  Cancel\n                </Button>\n              </div>\n\n              <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !isValid}>\n                Save\n              </Button>\n            </Paper.Footer>\n          </Form>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewUser.propTypes = { submitUserValues: func };\n\nexport const CreateNewUserPage = connect(\n  state => ({\n    allUsers: state.usersManager.users.all\n  }),\n  dispatch => ({\n    submitUserValues: values => dispatch(createUserThunk(values))\n  })\n)(CreateNewUser);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './NewUserGroups.local.scss';\n\nexport const NewUserGroups = ({ groups, helpers }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {groups.map(group_name => (\n            <li className=\"group-card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = groups.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n              />\n            </li>\n          ))}\n          <li className=\"group-card-item\" key=\"add-user-to-groups\">\n            <GroupsSelection selected={groups} helpers={helpers} />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nNewUserGroups.propTypes = {\n  username: string,\n  groups: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            maxWidth: '840px',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n            />\n\n            <div className=\"modal-content\">\n              <GroupsList selected={selected} helpers={helpers} closeModal={closeModal} />\n            </div>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS)\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Center>\n\n        <ModalFooter>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div className=\"seachable-list-container\">\n        <SearchableList\n          items={state.all}\n          filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n          variant=\"row white\"\n        >\n          {entry => {\n            return (\n              <div className=\"card-wrap\" style={{ width: '178px' }}>\n                <AvatarCard\n                  onClick={() => {\n                    const existing = selected.indexOf(entry.name);\n\n                    if (existing !== -1) {\n                      helpers.remove(existing);\n                    } else {\n                      helpers.push(entry.name);\n                    }\n                  }}\n                  selected={selected.includes(entry.name)}\n                  label={entry.name}\n                  avatar={{ fallback: <GroupIcon /> }}\n                />\n              </div>\n            );\n          }}\n        </SearchableList>\n        <ModalFooter>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Confirm\n          </Button>\n        </ModalFooter>\n      </div>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './GroupCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const GroupCard = ({ href, group }) => {\n  const { pathname } = useLocation();\n\n  const { name, src } = group;\n  return (\n    <Link\n      to={href}\n      className={classnames('group-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`group-card-of-${name}`}\n    >\n      <Avatar className=\"group-avatar\" alt={name} src={src}>\n        {group.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"group-name\">{name}</span>\n    </Link>\n  );\n};\n\nGroupCard.propTypes = {\n  href: string,\n  group: object\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { loadGroupThunk, removeGroupThunk } from '../../store/thunks';\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { GroupUsersContainer } from './containers/GroupUsers';\nimport { SubGroupsContainer } from './containers/SubGroups';\n\nimport './GroupView.local.scss';\n\nexport const GroupView = ({ group, removing, removeGroup }) => {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const deleteGroup = useCallback(() => {\n    removeGroup(group.name)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n        history.push('/system/mas-accounts/groups');\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        alert('Could not remove group!'); // eslint-disable-line\n      });\n  }, [group]);\n\n  /* This needs to be written as a result check or 404 page for a group. */\n  if (!group) {\n    return <></>;\n  }\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title>{group.name}</Paper.Title>\n        </Paper.Header>\n\n        <Paper.Content scrollable>\n          <PrivilegesContainer />\n          <GroupUsersContainer />\n          <SubGroupsContainer />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"secondary\" disabled={removing} onClick={modalActions.open}>\n              Remove\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove group {group.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      deleteGroup();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupView.propTypes = {\n  group: object,\n  removing: bool,\n  removeGroup: func\n};\n\nexport const ConnectedGroupView = connect(\n  state => ({\n    group: state.groups.selected,\n    removing: state.groups.ops.remove.loading\n  }),\n  dispatch => ({\n    removeGroup: name => dispatch(removeGroupThunk(name))\n  })\n)(GroupView);\n\nexport const GroupLoader = ({ loadGroup, loading }) => {\n  const { groupName } = useParams();\n  useEffect(() => {\n    if (groupName) {\n      loadGroup(groupName);\n    }\n  }, [groupName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading Group <b>{groupName}</b>\n        </Loader>\n      ) : (\n        <ConnectedGroupView />\n      )}\n    </>\n  );\n};\n\nGroupLoader.propTypes = {\n  loadGroup: func,\n  loading: bool\n};\n\nexport const ConnectedGroupLoader = connect(\n  state => ({\n    loading: state.groups.ops.selected.loading\n  }),\n  dispatch => ({ loadGroup: name => dispatch(loadGroupThunk(name)) })\n)(GroupLoader);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { object, string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { Section } from 'shared/components/layout';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../store/thunks';\n\nexport const Privileges = ({ group, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Class privileges:</Section.Title>\n        <Section.Info>\n          Effective class privileges are calculated based on explicit grants and denies in this\n          group and in groups of which this group may be a member\n        </Section.Info>\n      </Section.Header>\n      <div className=\"user-privileges\">\n        <ul className=\"privileges-list\">\n          {privileges.map(entry => {\n            return (\n              <li key={entry.key} className=\"privileges-item\">\n                <Privilege group={group} privilege={entry} actions={actions} disabled={disabled} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nPrivileges.propTypes = {\n  group: object,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ group, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(group.name, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  group: object,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      disabled: state.groups.ops.privileges.loading,\n      privileges: mapPrivileges(group.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (group, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      ),\n    revoke: (group, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport './GroupUsers.local.scss';\nimport { EditGroupUsersContainer } from './EditGroupUsers';\n\nimport { removeUsersFromGroupThunk } from '../../../store/thunks';\n\nexport const GroupUsers = ({ group, removeUsersFromGroup }) => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeUsersFromGroup(group.name, selectedUser)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        alert('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [group, selectedUser]);\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Users in this group</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.users.map(user => (\n              <li className=\"card-item\" key={user}>\n                <AvatarCard\n                  label={user}\n                  avatar={{ initial: user.charAt(0) }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setSelectedUser(user);\n                        modalActions.open();\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"card-item\" key=\"add-user-to-groups\">\n              <EditGroupUsersContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {selectedUser} from group {group.name}?\n                    This could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupUsers.propTypes = {\n  group: object,\n  removeUsersFromGroup: func\n};\n\nexport const GroupUsersContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeUsersFromGroup: (group, user) => dispatch(removeUsersFromGroupThunk({ group, user }))\n  })\n)(GroupUsers);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { addUsersToGroupThunk } from '../../../store/thunks';\n\nimport './EditGroupUsers.local.scss';\n\nexport const EditGroupUsers = ({ group, addUsersToGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add user\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <Paper style={{ minWidth: '75vh', minHeight: '75vh' }}>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <SvgIcon>\n                    <path d={mdiAccountGroup} />\n                  </SvgIcon>\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the users you want to add this group\"\n              aria={aria}\n              onClose={actions.close}\n            />\n            <UsersSelection\n              group={group}\n              closeModal={closeModal}\n              onAdd={selections => {\n                return addUsersToGroup(group.name, selections);\n              }}\n            />\n          </Paper>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditGroupUsers.propTypes = {\n  group: object,\n  addUsersToGroup: func\n};\n\nexport const EditGroupUsersContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    addUsersToGroup: (group, users) => dispatch(addUsersToGroupThunk({ group, users }))\n  })\n)(EditGroupUsers);\n\nconst UsersSelection = ({ group, closeModal, onAdd }) => {\n  const [state, setState] = useState({\n    selections: [],\n    usersFetched: false,\n    usersSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(u => !group.users.includes(u.name));\n  }, [state.all, state.showAll, group]);\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}`)\n      .then(({ data }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data.data.users;\n            draft.usersFetched = true;\n            draft.result = 'success';\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error.messages;\n            draft.usersFetched = true;\n            draft.result = 'fail';\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <Paper.Content>\n        <Loader />\n      </Paper.Content>\n    );\n  }\n\n  if (state.usersFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve user list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected users to group succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add users to group!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <SearchableList\n          items={filtered}\n          filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n          variant=\"row white\"\n        >\n          {entry => {\n            return (\n              <div className=\"card-wrap\" style={{ width: '178px' }}>\n                <AvatarCard\n                  onClick={() => {\n                    setState(prev =>\n                      produce(prev, draft => {\n                        const selections = new Set(prev.selections);\n\n                        if (selections.has(entry.name)) {\n                          selections.delete(entry.name);\n                        } else {\n                          selections.add(entry.name);\n                        }\n\n                        draft.selections = [...selections];\n                      })\n                    );\n                  }}\n                  disabled={state.showAll ? group.users.includes(entry.name) : false}\n                  selected={state.selections.includes(entry.name)}\n                  label={entry.name}\n                  avatar={{\n                    initial: entry.name.charAt(0)\n                  }}\n                />\n              </div>\n            );\n          }}\n        </SearchableList>\n      </Paper.Content>\n      <ModalFooter>\n        <ModalFooter.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show users that are members of this group\"\n          />\n        </ModalFooter.Left>\n        <ModalFooter.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              /**\n                NOTE: (to self)\n\n                This is lim 0 -> complete trash\n\n                Can't use redux for snippets of this operation.\n                The redux action that is required should only be to update final group entry at maximum.\n\n                Either all ops are in redux, or none are.\n               */\n              onAdd(state.selections).then(response => {\n                setState(prev =>\n                  produce(prev, draft => {\n                    draft.loading = false;\n                    draft.usersSubmitted = true;\n                    draft.result = response.result;\n                    draft.error = response.messages;\n                  })\n                );\n              });\n            }}\n          >\n            Add\n          </Button>\n        </ModalFooter.Right>\n      </ModalFooter>\n    </>\n  );\n};\n\nUsersSelection.propTypes = {\n  group: object,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiAccountGroup, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditSubGroupsContainer } from './EditSubGroups';\nimport { removeSubGroupsThunk } from '../../../store/thunks';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ group, removeSubGroups }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeSubGroups(group.name, [selectedGroup])\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        alert('Could not remove group from group!'); // eslint-disable-line\n      });\n  }, [group, selectedGroup]);\n\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Member of groups</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.member_of.map(subgroup => (\n              <li className=\"card-item\" key={subgroup}>\n                <AvatarCard\n                  label={subgroup}\n                  avatar={{\n                    fallback: (\n                      <SvgIcon>\n                        <path d={mdiAccountGroup} />\n                      </SvgIcon>\n                    )\n                  }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setSelectedGroup(subgroup);\n                        modalActions.open();\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"card-item\" key=\"add-sub-group\">\n              <EditSubGroupsContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove group {group.name} from group {selectedGroup}?\n                    This could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nSubGroups.propTypes = {\n  group: object,\n  removeSubGroups: func\n};\n\nexport const SubGroupsContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeSubGroups: (group, groups) => dispatch(removeSubGroupsThunk({ group, groups }))\n  })\n)(SubGroups);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { PATCH_SELECTED_GROUP } from '../../../store/actions';\n\nimport './EditSubGroups.local.scss';\n\nexport const EditSubGroups = ({ group, updateGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <Paper style={{ minWidth: '75vh', minHeight: '75vh' }}>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <SvgIcon>\n                    <path d={mdiAccountGroup} />\n                  </SvgIcon>\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select which groups this one should be a part of\"\n              aria={aria}\n              onClose={actions.close}\n            />\n            <GroupSelection group={group} updateGroup={updateGroup} closeModal={actions.close} />\n          </Paper>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditSubGroups.propTypes = {\n  group: object,\n  updateGroup: func\n};\n\nexport const EditSubGroupsContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    updateGroup: group => dispatch(creators.action(PATCH_SELECTED_GROUP, group))\n  })\n)(EditSubGroups);\n\nconst GroupSelection = ({ group, closeModal, updateGroup }) => {\n  const [state, setState] = useState({\n    selections: [],\n    groupsFetched: false,\n    subgroupsSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? [...state.all]\n      : state.all.filter(g => !group.member_of.includes(g.name));\n  }, [state.all, state.showAll, group]);\n\n  const isDisabled = name => {\n    if (group.name === name) {\n      return true;\n    }\n\n    if (state.showAll) {\n      return group.member_of.includes(name);\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`)\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.groups;\n            draft.groupsFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.groupsFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <Paper.Content>\n        <Loader />\n      </Paper.Content>\n    );\n  }\n\n  if (state.groupsFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve groups list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected groups succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add selected groups!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <SearchableList\n          items={filtered}\n          filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n          variant=\"row white\"\n        >\n          {entry => {\n            return (\n              <div className=\"card-wrap\" style={{ width: '178px' }}>\n                <AvatarCard\n                  onClick={() => {\n                    setState(prev =>\n                      produce(prev, draft => {\n                        const selections = new Set(prev.selections);\n\n                        if (selections.has(entry.name)) {\n                          selections.delete(entry.name);\n                        } else {\n                          selections.add(entry.name);\n                        }\n\n                        draft.selections = [...selections];\n                      })\n                    );\n                  }}\n                  disabled={isDisabled(entry.name)}\n                  selected={state.selections.includes(entry.name)}\n                  label={entry.name}\n                  avatar={{\n                    fallback: (\n                      <SvgIcon>\n                        <path d={mdiAccountGroup} />\n                      </SvgIcon>\n                    )\n                  }}\n                />\n              </div>\n            );\n          }}\n        </SearchableList>\n      </Paper.Content>\n      <ModalFooter>\n        <ModalFooter.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that this one already is a member of\"\n          />\n        </ModalFooter.Left>\n        <ModalFooter.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group.name}/grant`, {\n                groups: state.selections\n              })\n                .then(({ data: resolved }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = resolved.result;\n                    })\n                  );\n\n                  updateGroup(resolved.data.groups[0]);\n                })\n                .catch(({ data: rejected }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = rejected.result;\n                      draft.error = rejected.messages;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </ModalFooter.Right>\n      </ModalFooter>\n    </>\n  );\n};\n\nGroupSelection.propTypes = {\n  group: object,\n  updateGroup: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Center } from 'shared/components';\nimport { Paper, Section, Column, Row } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { createGroupThunk } from '../../store/thunks';\n\nimport { SubGroups } from './components/SubGroups';\n\nimport './CreateNewGroup.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  groupname: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Group name is required'),\n  groups: Yup.array()\n});\n\nconst CreateNewGroup = ({ submitGroupValues, allGroups }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.groupname) ||\n      (values.groupname && values.groupname.substr(-1) === '.')\n    ) {\n      errors.groupname = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allGroups.map(group => {\n      if (exists) return;\n\n      if (group.name === values.groupname) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.groupname = 'A group with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /**\n     * Failed results are the ony onnes that are shown.\n     * For successfull creation, the user is navigated to the new entry\n     */\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Title>Could not create new group</Result.Title>\n              </Result>\n            </Center>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        groupname: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitGroupValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.groupname));\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: error.result\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid, submitForm }) => (\n        <Paper>\n          <Paper.Title>New Group</Paper.Title>\n          <Paper.Content>\n            <Form className=\"create-new-group-form\">\n              <Section>\n                <Section.Title>Group Details</Section.Title>\n                <Row>\n                  <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                    <Field name=\"groupname\">\n                      {({ field, meta }) => (\n                        <Input\n                          required\n                          {...field}\n                          label=\"Group Name\"\n                          placeholder=\"Group Name\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                  <Column style={{ maxWidth: '220px' }}>\n                    <Field name=\"description\">\n                      {({ field, meta }) => (\n                        <Input\n                          {...field}\n                          label=\"Short Description\"\n                          placeholder=\"Short Description\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                </Row>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => <SubGroups selections={values.groups} helpers={helpers} />}\n                </FieldArray>\n              </Section>\n            </Form>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button to=\"/system/mas-accounts/groups\" color=\"primary\">\n                Cancel\n              </Button>\n            </Paper.Footer.Left>\n\n            <Paper.Footer.Right>\n              <Button\n                type=\"submit\"\n                onClick={submitForm}\n                variant=\"contained\"\n                disabled={isSubmitting || !isValid}\n              >\n                Save\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewGroup.propTypes = { submitGroupValues: func };\n\nexport const CreateNewGroupPage = connect(\n  state => ({\n    allGroups: state.groups.all\n  }),\n  dispatch => ({\n    submitGroupValues: values => dispatch(createGroupThunk(values))\n  })\n)(CreateNewGroup);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ selections, helpers }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {selections.map(group_name => (\n            <li className=\"card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = selections.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-group-to-groups\">\n            <GroupsSelection selected={selections} helpers={helpers} />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nSubGroups.propTypes = {\n  username: string,\n  selections: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, ModalFooter, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    open: openModal,\n    close: closeModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"add-to-group-button\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <Paper style={{ minWidth: '75vh', minHeight: '75vh' }}>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={aria}\n              onClose={actions.close}\n            />\n            <GroupsList selected={selected} helpers={helpers} closeModal={actions.close} />\n          </Paper>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS)\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n        <ModalFooter>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </ModalFooter>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={state.all}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row white\"\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ minWidth: '178px', maxWidth: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <ModalFooter>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </ModalFooter>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoGroupSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>Group Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a group from the list to view or edit its details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n    {/* <Paper.Footer /> */}\n  </Paper>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { mdiHexagonMultipleOutline } from '@mdi/js';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { changeStateThunk } from '../../../store/thunks';\n\nimport { ServerList } from '../ServerList/ServerList';\n\nimport './Dbms.local.scss';\n\nexport class DBMS extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"dbms-item\">\n        <header>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.protocol}-dbms`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiHexagonMultipleOutline} />\n              </SvgIcon>\n            </div>\n            <div\n              className={`value ${path.startsWith(data.path) ? 'active' : ''}`}\n              title={data.protocol}\n            >\n              {data.protocol}\n            </div>\n          </div>\n          <div\n            role=\"presentation\"\n            data-qa={`toggle-${data.protocol}-dbms`}\n            className={`status ${path.startsWith(data.path) ? 'active' : ''}`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <RemoveIcon /> : <AddIcon />}\n          </div>\n        </header>\n        <ul className=\"dbms-content\">{isExpanded && <ServerList servers={data.servers} />}</ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nDBMS.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDBMS = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(DBMS);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedServer } from './containers/Server/Server';\n\nexport class ServerList extends React.PureComponent {\n  render() {\n    const { servers } = this.props;\n\n    return servers.map(server => <ConnectedServer key={server.address} data={server} />);\n  }\n}\n\nServerList.propTypes = {\n  servers: array\n};\n\nexport default ServerList;\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { DatabaseList } from '../../../DatabaseList/DatabaseList';\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Server.local.scss';\n\nexport class Server extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"server-item\">\n        <header className={this.isActive(path, data.path)}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.address}-server`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={data.address}>\n              {data.address}\n            </div>\n          </div>\n          <div\n            className=\"status\"\n            role=\"presentation\"\n            data-qa={`toggle-${data.address}-server`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n          </div>\n        </header>\n        <ul className=\"server-content\">\n          {isExpanded && <DatabaseList databases={data.databases} />}\n        </ul>\n      </li>\n    );\n  }\n\n  isActive = (path, current) => {\n    const activePath = current.split('--');\n    const storedPath = path.split('--');\n\n    if (activePath[0] === storedPath[0] && activePath[1] === storedPath[1]) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nServer.propTypes = {\n  data: object,\n  storeState: object,\n  changeState: func\n};\n\nexport const ConnectedServer = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Server);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedDatabase } from './containers/Database/Database';\n\nexport class DatabaseList extends React.PureComponent {\n  render() {\n    const { databases } = this.props;\n\n    if (!databases) return null;\n\n    return databases.map(database => <ConnectedDatabase key={database.name} data={database} />);\n  }\n}\n\nDatabaseList.propTypes = {\n  databases: array\n};\n\nexport default DatabaseList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Database.local.scss';\n\nexport class Database extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.storeState.path === props.data.path) {\n      return { isExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n\n    const name = data.special.database;\n\n    return (\n      <li className=\"database-item\">\n        <header className={`${data.path === path ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${name}-database`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDatabase} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={name}>\n              {name}\n            </div>\n          </div>\n        </header>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nDatabase.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDatabase = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Database);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string, func, object } from 'prop-types';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport { changeStateThunk } from '../../store/thunks';\n\nimport './Breadcrumbs.local.scss';\n\nexport class BreadcrumbsTitle extends React.PureComponent {\n  render() {\n    const {\n      storeState: { path }\n    } = this.props;\n\n    return this.renderBreadcrumbs(path);\n  }\n\n  renderBreadcrumbs = path => {\n    const links = path\n      .split(this.props.separator)\n      .filter(e => e)\n      .reduce(\n        (routes, entry, index, list) => {\n          const previous = list.slice(0, index);\n          previous.push(entry);\n          const routePath = previous.join(this.props.separator);\n\n          const route = { label: entry, route: routePath };\n          routes.push(route);\n\n          return routes;\n        },\n        [{ label: 'DBMS', route: '' }]\n      );\n\n    return (\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        {links.map(link => {\n          return (\n            <div\n              data-qa={`breadcrumbs-${link.label}`}\n              className=\"path\"\n              role=\"presentation\"\n              key={link.route}\n              onClick={() => this.navigateTo(link.route)}\n            >\n              {link.label}\n            </div>\n          );\n        })}\n      </Breadcrumbs>\n    );\n  };\n\n  navigateTo = selectedLink => {\n    if (selectedLink === this.props.storeState.path) {\n      return;\n    }\n\n    this.props.changeState({ path: selectedLink });\n\n    this.setActiveLevel(selectedLink);\n  };\n\n  setActiveLevel = selectedLink => {\n    const linkElements = selectedLink.split(this.props.separator).filter(e => e);\n\n    switch (linkElements.length) {\n      case 0:\n        this.props.changeState({ level: 'all-dbms' });\n        break;\n      case 1:\n        this.props.changeState({ level: 'all-servers' });\n        break;\n      case 2:\n        this.props.changeState({ level: 'all-databases' });\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nBreadcrumbsTitle.propTypes = {\n  storeState: object,\n  changeState: func,\n  separator: string\n};\n\nBreadcrumbsTitle.defaultProps = {\n  separator: '--'\n};\n\nexport const ConnectedBreadcrumbsTitle = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(BreadcrumbsTitle);\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { ConnectedAllDbms } from '../../containers/AllDbms/AllDbms';\nimport { ConnectedAllServers } from '../../containers/AllServers/AllServers';\nimport { ConnectedAllDatabases } from '../../containers/AllDatabases/AllDatabases';\nimport { ConnectedWorkload } from '../../containers/Workload/Workload';\nimport { ConnectedLicense } from '../../containers/License/License';\nimport { ConnectedStorage } from '../../containers/Storage/Storage';\nimport { ConnectedObjects } from '../../containers/Objects/Objects';\nimport { ConnectedSessions } from '../../containers/Sessions/Sessions';\n\nexport class ContentSwitch extends React.PureComponent {\n  render() {\n    const { activePage } = this.props;\n\n    return this.renderPage(activePage);\n  }\n\n  renderPage = activePage => {\n    switch (activePage) {\n      case 'all-dbms':\n        return <ConnectedAllDbms />;\n      case 'all-servers':\n        return <ConnectedAllServers />;\n      case 'all-databases':\n        return <ConnectedAllDatabases />;\n      case 'workload':\n        return <ConnectedWorkload />;\n      case 'license':\n        return <ConnectedLicense />;\n      case 'storage':\n        return <ConnectedStorage />;\n      case 'objects':\n        return <ConnectedObjects />;\n      case 'sessions':\n        return <ConnectedSessions />;\n      default:\n        return <></>;\n    }\n  };\n}\n\nContentSwitch.propTypes = {\n  activePage: string\n};\n\nexport default ContentSwitch;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHexagonMultipleOutline, mdiChartTimelineVariant } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { getDBMSStatus } from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nexport class AllDbms extends React.PureComponent {\n  render() {\n    const { all, retrieveDBMSStatus } = this.props;\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {all.map(dbms => (\n            <ActionCard\n              key={dbms.name}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n              }\n              status={dbms.name !== 'OTHER' ? retrieveDBMSStatus(dbms) : ''}\n              type=\"dbms\"\n              label={dbms.name}\n              onClick={() => this.setPath(dbms.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: dbms.path, level: 'workload' })\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n  };\n}\n\nAllDbms.propTypes = {\n  all: array,\n  changeState: func\n};\n\nexport const ConnectedAllDbms = connect(\n  state => ({\n    all: state.explorer?.structured?.dbms || [],\n    allDbms: state.explorer.accounts,\n    retrieveDBMSStatus: dbms => getDBMSStatus(dbms, state.explorer.dbStatus)\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDbms);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiChartTimelineVariant, mdiPercent } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { getServerStatus } from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nimport { ServerSettings } from '../Settings/ServerSettings';\n\nexport class AllServers extends React.PureComponent {\n  render() {\n    const { all, serversUsage, retrieveServerStatus } = this.props;\n\n    const servers = all;\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {servers.map((server, index) => (\n            <ActionCard\n              key={`${server.name}-${index}`}\n              settings={<ServerSettings server={server} />}\n              status={server.databases.length > 0 ? retrieveServerStatus(server) : ''}\n              type=\"server\"\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiDns} />\n                </SvgIcon>\n              }\n              label={server.address}\n              onClick={() => this.setPath(server.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: server.path, level: 'workload' })\n                }\n              ]}\n              readOnlyOptions={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiPercent} />\n                    </SvgIcon>\n                  ),\n                  label: 'CPU Load',\n                  fillable: true,\n                  percentage:\n                    serversUsage.find(sv => sv.address === server.address)?.usage || undefined\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n  };\n}\n\nAllServers.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllServers = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const dbms = structured.dbms.find(entry => entry.protocol === path);\n\n    return {\n      all: dbms?.servers || [],\n      allDbms: state.explorer.accounts,\n      storeState: state.explorer.state,\n      serversUsage: state.explorer.serversUsage?.servers || [],\n      retrieveServerStatus: server => getServerStatus(server, state.explorer.dbStatus)\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllServers);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport { mdiSettings, mdiDns } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\n\nexport const ServerSettings = ({ server }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n\n      <Modal open={open} actions={modalActions}>\n        <EditServerContainer server={server} />\n      </Modal>\n    </>\n  );\n};\n\nexport const EditServer = ({ server, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    fetchProtocols().then(resp => {\n      if (resp.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: resp.protocols || []\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '50vh',\n        minHeight: '50vh',\n        width: '808px',\n        height: '784px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Edit Server\"\n        desc=\"Edit the server connection information\"\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <ServerForm\n            server={server}\n            protocols={state.protocols}\n            handleSubmission={reloadAccounts}\n            editing\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditServerContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditServer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiDatabase,\n  mdiCheckboxMultipleBlankOutline,\n  mdiShape,\n  mdiLicense,\n  mdiHexagonSlice2\n} from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nimport { DatabaseSettings } from '../Settings/DatabaseSettings';\n\nimport { retrieveServerEntry, getBackup, getDBStatus } from '../../store/selectors';\n\nexport class AllDatabases extends React.PureComponent {\n  render() {\n    const { databases, retrieveDbBackup, retrieveDbStatus } = this.props;\n\n    return (\n      <>\n        <Paper.Content>\n          <CardsLayout>\n            {databases.map(database => (\n              <ActionCard\n                key={database.name}\n                lastBackup={retrieveDbBackup(database)}\n                settings={<DatabaseSettings database={database} />}\n                status={retrieveDbStatus(database)}\n                type=\"database\"\n                icon={\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                }\n                label={database.special.database}\n                onClick={() => this.setPath(database.path)}\n                options={[\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiChartTimelineVariant} />\n                      </SvgIcon>\n                    ),\n                    label: 'Workload',\n                    onClick: () =>\n                      this.props.changeState({ path: database.path, level: 'workload' })\n                  },\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiCheckboxMultipleBlankOutline} />\n                      </SvgIcon>\n                    ),\n                    label: 'Sessions',\n                    onClick: () =>\n                      this.props.changeState({ path: database.path, level: 'sessions' })\n                  },\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiShape} />\n                      </SvgIcon>\n                    ),\n                    label: 'Objects',\n                    onClick: () => this.props.changeState({ path: database.path, level: 'objects' })\n                  },\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiHexagonSlice2} />\n                      </SvgIcon>\n                    ),\n                    label: 'Storage',\n                    onClick: () => this.props.changeState({ path: database.path, level: 'storage' })\n                  },\n                  {\n                    icon: (\n                      <SvgIcon>\n                        <Icon path={mdiLicense} />\n                      </SvgIcon>\n                    ),\n                    label: 'License reporting',\n                    onClick: () => this.props.changeState({ path: database.path, level: 'license' })\n                  }\n                ]}\n              />\n            ))}\n          </CardsLayout>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nAllDatabases.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllDatabases = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const [protocol, address] = path.split('--');\n    const server = retrieveServerEntry({ protocol, address }, structured);\n    const backups = state.explorer.dbLastBackup;\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      databases: (server && server.databases) || [],\n      retrieveDbBackup: database => getBackup(database, backups),\n      retrieveDbStatus: database => getDBStatus(database, statuses)\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDatabases);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader } from 'shared/components/overlays';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport { mdiSettings, mdiDatabase } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\n\nexport const DatabaseSettings = ({ database }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n\n      <Modal open={open} actions={modalActions}>\n        <EditDatabaseContainer database={database} />\n      </Modal>\n    </>\n  );\n};\n\nexport const EditDatabase = ({ database, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [], modes: [] });\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '50vh',\n        minHeight: '50vh',\n        width: '808px',\n        height: '784px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Edit Database\"\n        desc=\"Edit the database connection information\"\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <DatabaseForm\n            account={database}\n            protocols={state.protocols}\n            modes={state.modes}\n            handleSubmission={reloadAccounts}\n            editing\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditDatabaseContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditDatabase);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Overflow, Paper } from 'shared/components/layout';\nimport { Center, WorkloadGraph } from 'shared/components';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { JobResults } from 'shared/components/JobResults';\n\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\n\nimport './Workload.local.scss';\n\nexport class Workload extends React.PureComponent {\n  componentDidMount() {\n    this.getJobsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.storeState.path !== prevProps.storeState.path ||\n      this.props.globalFilters !== prevProps.globalFilters\n    ) {\n      this.getJobsData();\n    }\n  }\n\n  render() {\n    const {\n      jobs,\n      storeState: { path, level }\n    } = this.props;\n    const pageLevel = path.split('--').filter(e => e).length;\n    return (\n      <>\n        <Paper.Header>\n          {pageLevel === 3 && <NavigationTab active={level} onClick={this.changeTab} />}\n        </Paper.Header>\n        <Paper.Content>\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader>Loading jobs</Loader>\n            </Center>\n          ) : (\n            <>\n              {jobs.get('total_count') > 0 ? (\n                <>\n                  <div className=\"container\">\n                    <div className=\"graph-container\">\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                      />\n                    </div>\n                    <div className=\"jobs-container\">\n                      <Overflow>\n                        <JobResults jobs={jobs.get('content')} />\n                      </Overflow>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Center>Job list is empty</Center>\n              )}\n            </>\n          )}\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getJobsData() {\n    const {\n      storeState: { path }\n    } = this.props;\n    const levelFilters = path.split('--').filter(e => e);\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      protocol_filter: levelFilters[0],\n      shell_host_address_filter: levelFilters[1],\n      database_name_filter: levelFilters[2]\n    });\n  }\n}\n\nWorkload.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  jobs: object,\n  getJobs: func,\n  changeState: func\n};\n\nexport const ConnectedWorkload = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    jobs: jobsSelector(state)\n  }),\n  dispatch => ({\n    getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Workload);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func, array, bool } from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\n\nimport { Paper } from 'shared/components/layout';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { changeStateThunk, loadAllLicensesThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { LicenseList } from './LicenseList/LicenseList';\nimport { ConnectedReport } from './Report/Report';\n\nimport './License.local.scss';\n\nexport class License extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLicenses: [],\n      singleLicense: null,\n      page: 1 // 1 = licenses list, 2 = license report\n    };\n  }\n\n  componentDidMount() {\n    this.getLicenseData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.globalFilters !== prevProps.globalFilters) {\n      this.getLicenseData();\n    }\n  }\n\n  render() {\n    const {\n      storeState: { level },\n      licenseList,\n      isLoading\n    } = this.props;\n    const { selectedLicenses, page, singleLicense } = this.state;\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={this.changeTab} />\n        </Paper.Header>\n        {page === 1 &&\n          (isLoading ? (\n            <Paper.Content>\n              <Center>\n                <Loader>Loading reports</Loader>\n              </Center>\n            </Paper.Content>\n          ) : (\n            <>\n              <Paper.Content>\n                <LicenseList\n                  data={licenseList}\n                  selectedLicenses={selectedLicenses}\n                  setSelectedLicensesCallback={this.setSelectedLicenses}\n                  compareWithLatestCallback={this.compareWithLatest}\n                  licenseReportCallback={this.licenseReport}\n                />\n              </Paper.Content>\n              {licenseList.length > 0 && (\n                <Paper.Footer>\n                  <Button\n                    className=\"compare-btn\"\n                    disabled={selectedLicenses.length !== 2}\n                    variant=\"contained\"\n                    onClick={() => this.compareReports()}\n                    data-qa=\"compare-reports\"\n                  >\n                    Compare\n                  </Button>\n                </Paper.Footer>\n              )}\n            </>\n          ))}\n\n        {page === 2 && (\n          <>\n            <Paper.Content>\n              <ConnectedReport licenses={selectedLicenses} license={singleLicense} />\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <Button\n                  data-qa=\"back-to-licenses\"\n                  className=\"back-btn\"\n                  onClick={() => this.showLicenseList()}\n                >\n                  Back\n                </Button>\n              </Paper.Footer.Left>\n            </Paper.Footer>\n          </>\n        )}\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getLicenseData = () => {\n    const {\n      storeState: { path },\n      globalFilters\n    } = this.props;\n    const ancestors = path.split('--').filter(e => e);\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    const payload = {\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      status: 'SUCCEEDED',\n      name_filter: 'vendita.oracle.rdbms.util.monitor.licensed_feature_usage.full_report',\n      protocol_filter: ancestors[0],\n      shell_host_address_filter: ancestors[1],\n      database_name_filter: ancestors[2]\n    };\n    this.props.loadAllLicenses(payload);\n  };\n\n  setSelectedLicenses = license => {\n    const { selectedLicenses } = this.state;\n    // check if license was already selected\n    const exists = selectedLicenses.findIndex(e => e.uuid === license.uuid);\n\n    // if exists, remove it from array\n    if (exists > -1) {\n      const newSelectedLicenses = [...selectedLicenses];\n      newSelectedLicenses.splice(exists, 1);\n      this.setState({ selectedLicenses: newSelectedLicenses });\n    } else if (selectedLicenses.length < 2) {\n      // if there are less than two elements, add it\n      this.setState({ selectedLicenses: [...selectedLicenses, license] });\n    }\n  };\n\n  compareReports = () => {\n    this.setState({ page: 2, singleLicense: null });\n  };\n\n  compareWithLatest = (latestReport, selectedReport) => {\n    const comparable = [];\n    comparable.push(latestReport, selectedReport);\n    this.setState({ selectedLicenses: comparable, page: 2, singleLicense: null });\n  };\n\n  showLicenseList = () => {\n    this.setState({ page: 1, selectedLicenses: [], singleLicense: null });\n  };\n\n  licenseReport = license => {\n    this.setState({ singleLicense: license, page: 2 });\n  };\n}\n\nLicense.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  changeState: func,\n  loadAllLicenses: func,\n  licenseList: array,\n  isLoading: bool\n};\n\nexport const ConnectedLicense = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    licenseList: state.explorer.licenses,\n    isLoading: state.explorer.flags.license.loading\n  }),\n  dispatch => ({\n    loadAllLicenses: payload => dispatch(loadAllLicensesThunk(payload)),\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(License);\n","import React, { useState, useCallback } from 'react';\nimport { array, func } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiLicense, mdiFileCompare } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Center } from 'shared/components';\n\nimport './LicenseList.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LicenseList = ({\n  data,\n  selectedLicenses,\n  setSelectedLicensesCallback,\n  compareWithLatestCallback,\n  licenseReportCallback\n}) => {\n  const [hoveredLicenseUuid, setHoveredLicenseUuid] = useState(null);\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const updateHoveredLicenseUuid = licenseUuid => {\n    setHoveredLicenseUuid(licenseUuid);\n  };\n\n  const renderIcon = licenseUuid => {\n    let icon = (\n      <SvgIcon>\n        <Icon path={mdiLicense} />\n      </SvgIcon>\n    );\n\n    // license is selected\n    if (selectedLicenses.findIndex(l => l.uuid === licenseUuid) > -1) {\n      icon = <CheckIcon />;\n    } else if (hoveredLicenseUuid === licenseUuid) {\n      icon = <CheckIcon className=\"hovered-icon\" />;\n    }\n\n    return icon;\n  };\n\n  return (\n    <div\n      className={classnames('searchable-list-slot', {\n        scrolled\n      })}\n    >\n      {data.length > 0 ? (\n        <div className=\"grid\" onWheel={onWheel}>\n          {data.map((license, index) => {\n            return (\n              <div\n                data-qa={`report-${data.length - index}-details`}\n                className=\"row\"\n                key={license.uuid}\n                role=\"presentation\"\n                onMouseEnter={() => updateHoveredLicenseUuid(license.uuid)}\n                onMouseLeave={() => updateHoveredLicenseUuid(null)}\n                onClick={() => licenseReportCallback(license)}\n              >\n                <div className=\"column\">\n                  <div\n                    data-qa={`toggle-selected-report-${data.length - index}`}\n                    className={`icon-container ${\n                      selectedLicenses.findIndex(l => l.uuid === license.uuid) > -1\n                        ? 'selected'\n                        : ''\n                    }${hoveredLicenseUuid === license.uuid ? ' hovered' : ''}`}\n                    onClick={event => {\n                      event.stopPropagation();\n                      setSelectedLicensesCallback(license);\n                    }}\n                    role=\"presentation\"\n                  >\n                    {renderIcon(license.uuid)}\n                  </div>\n                </div>\n                <div className=\"column name\">\n                  {`License feature usage report ${data.length - index}`}\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Date:</div>\n                    <div className=\"value\">{moment(license.date_invoke).format('D.MM.YYYY')}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Ran at:</div>\n                    <div className=\"value\">{moment(license.date_invoke).format('HH:mm:ss')}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  <div className=\"two-rows-container\">\n                    <div className=\"label\">Ran by:</div>\n                    <div className=\"value\">{license.user_owner}</div>\n                  </div>\n                </div>\n                <div className=\"column\">\n                  {index > 0 && selectedLicenses.length === 0 && (\n                    <div\n                      data-qa={`compare-report${data.length - index}-to-latest`}\n                      className=\"icon\"\n                      onClick={event => {\n                        event.stopPropagation();\n                        compareWithLatestCallback(data[0], license);\n                      }}\n                      role=\"presentation\"\n                    >\n                      <LightTooltip placement=\"bottom\" title=\"Compare to latest\">\n                        <SvgIcon>\n                          <Icon path={mdiFileCompare} />\n                        </SvgIcon>\n                      </LightTooltip>\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        <Center>Currently there are no license reporting available.</Center>\n      )}\n    </div>\n  );\n};\n\nLicenseList.propTypes = {\n  data: array,\n  selectedLicenses: array,\n  setSelectedLicensesCallback: func,\n  compareWithLatestCallback: func,\n  licenseReportCallback: func\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, func, array, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { getLicenseReportThunk } from '../../../store/thunks';\nimport { FeaturesStatus } from '../../../components/LicenseReporting/FeaturesStatus/FeaturesStatus';\nimport { FeaturesUsage } from '../../../components/LicenseReporting/FeaturesUsage/FeaturesUsage';\nimport { UnusedFeatures } from '../../../components/LicenseReporting/UnusedFeatures/UnusedFeatures';\n\nimport './Report.local.scss';\n\nexport class Report extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolled: false\n    };\n  }\n\n  async componentDidMount() {\n    const { license, getLicenseReport, licenses } = this.props;\n    if (license) {\n      await getLicenseReport(license);\n    } else {\n      await Promise.all([getLicenseReport(licenses[0]), getLicenseReport(licenses[1])]);\n    }\n  }\n\n  render() {\n    const { scrolled } = this.state;\n    const { isLoading, reportOne, reportTwo } = this.props;\n    return isLoading ? (\n      <Center>\n        <Loader>Loading report details</Loader>\n      </Center>\n    ) : (\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled\n        })}\n      >\n        <div className=\"container\" onWheel={event => this.onWheel(event)}>\n          <FeaturesStatus reportOne={reportOne} reportTwo={reportTwo} />\n          <FeaturesUsage reportOne={reportOne} reportTwo={reportTwo} />\n          <UnusedFeatures reportOne={reportOne} reportTwo={reportTwo} />\n        </div>\n      </div>\n    );\n  }\n\n  onWheel = event => {\n    if (event.currentTarget.scrollTop) {\n      if (!this.state.scrolled) {\n        this.setState({ scrolled: true });\n      }\n    } else if (this.state.scrolled) {\n      this.setState({ scrolled: false });\n    }\n\n    scroller(event);\n  };\n}\n\nReport.propTypes = {\n  getLicenseReport: func,\n  isLoading: bool,\n  license: object,\n  licenses: array,\n  reportOne: object,\n  reportTwo: object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  let reportOne;\n  let reportTwo;\n  if (ownProps.license) {\n    // need to display details for only one report so get its details from the store\n    if (state.explorer.reports && state.explorer.reports[ownProps.license.uuid]) {\n      reportOne = state.explorer.reports[ownProps.license.uuid];\n    }\n  } else if (\n    // we have two reports to compare\n\n    state.explorer.reports &&\n    state.explorer.reports[ownProps.licenses[0].uuid] &&\n    state.explorer.reports[ownProps.licenses[1].uuid]\n  ) {\n    if (ownProps.licenses[0].date_invoke > ownProps.licenses[1].date_invoke) {\n      reportOne = state.explorer.reports[ownProps.licenses[1].uuid];\n      reportTwo = state.explorer.reports[ownProps.licenses[0].uuid];\n    } else {\n      reportOne = state.explorer.reports[ownProps.licenses[0].uuid];\n      reportTwo = state.explorer.reports[ownProps.licenses[1].uuid];\n    }\n  }\n\n  return {\n    isLoading: state.explorer.flags.reports.loading,\n    reportOne,\n    reportTwo\n  };\n};\n\nexport const ConnectedReport = connect(mapStateToProps, dispatch => ({\n  getLicenseReport: license => dispatch(getLicenseReportThunk(license))\n}))(Report);\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { object, node, any } from 'prop-types';\nimport moment from 'moment';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheckboxMarkedCircle, mdiCloseCircle } from '@mdi/js';\n\nimport './FeaturesStatus.local.scss';\n\nexport class FeaturesStatus extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedIndex: 0\n    };\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"features-status-container\">\n        <header>\n          <h1>License Features Status</h1>\n        </header>\n\n        {!reportTwo && <div className=\"feature-status\">{this.renderSingleReport()}</div>}\n        {reportTwo && <div className=\"feature-status\">{this.renderComparableReports()}</div>}\n      </div>\n    );\n  }\n\n  setSelectedIndex = (event, newIndex) => {\n    this.setState({ selectedIndex: newIndex });\n  };\n\n  renderSingleReport = () => {\n    const columns = Object.entries(this.props.reportOne.FEATURES);\n\n    return (\n      <>\n        <div className=\"feature-name\">\n          <Tabs\n            orientation=\"vertical\"\n            value={this.state.selectedIndex}\n            onChange={(event, newIndex) => this.setSelectedIndex(event, newIndex)}\n          >\n            {columns.map((column, index) => (\n              <Tab key={column[0]} label={column[0]} data-qa={`feature-column-${index}`} />\n            ))}\n          </Tabs>\n        </div>\n        <div className=\"feature-details\">\n          <header className=\"row header\">\n            <div className=\"feature\">Feature</div>\n            <div className=\"status-container\">\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportOne.date_invoke).format('D MMM YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportOne.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n            </div>\n          </header>\n          {columns.map((column, index) => {\n            const values = Object.keys(column[1]);\n            return (\n              <TabPanel key={index} value={this.state.selectedIndex} index={index}>\n                {values.map((value, valIndex) => {\n                  return (\n                    <div key={`${index}-${valIndex}`} className=\"row\">\n                      <div className=\"feature-name\">{values[valIndex]}</div>\n                      <div className=\"status-container\">\n                        {column[1][value].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </TabPanel>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n\n  renderComparableReports = () => {\n    const comparableFeatures = {};\n    const { reportOne, reportTwo } = this.props;\n    if (reportOne.FEATURES && reportTwo && reportTwo.FEATURES) {\n      const reportOneEntries = Object.entries(reportTwo.FEATURES);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        const options = Object.keys(feature[1]);\n\n        options.map((value, index) => {\n          comparableFeatures[feature[0]][options[index]] = [\n            feature[1][value].toString() === 'true' ? 'true' : 'false'\n          ];\n          comparableFeatures[feature[0]][options[index]][1] = 'false';\n\n          return null;\n        });\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportOne.FEATURES);\n      reportTwoEntries.map(feature => {\n        const options = Object.keys(feature[1]);\n\n        if (feature[0] in comparableFeatures) {\n          options.map((value, index) => {\n            comparableFeatures[feature[0]][options[index]][1] =\n              feature[1][value].toString() === 'true' ? 'true' : 'false';\n            return null;\n          });\n        } else {\n          // current featured category was not present in previous report so we add it\n          comparableFeatures[feature[0]] = {};\n\n          options.map((value, index) => {\n            // add it as false for the previous report\n            comparableFeatures[feature[0]][options[index]] = ['false'];\n            // add it with current value for the current report\n            comparableFeatures[feature[0]][options[index]][1] =\n              feature[1][value].toString() === 'true' ? 'true' : 'false';\n\n            return null;\n          });\n        }\n        return null;\n      });\n    }\n\n    const columns = Object.entries(comparableFeatures);\n\n    return (\n      <>\n        <div className=\"feature-name\">\n          <Tabs\n            orientation=\"vertical\"\n            value={this.state.selectedIndex}\n            onChange={(event, newIndex) => this.setSelectedIndex(event, newIndex)}\n          >\n            {columns.map((column, index) => (\n              <Tab key={column[0]} label={column[0]} data-qa={`feature-column-${index}`} />\n            ))}\n          </Tabs>\n        </div>\n\n        <div className=\"feature-details\">\n          <header className=\"row header\">\n            <div className=\"feature\">Feature</div>\n            <div className=\"status-container compare\">\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportOne.date_invoke).format('D MMM YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportOne.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n              <div className=\"date-time-container\">\n                <div className=\"date\">\n                  {moment(this.props.reportTwo.date_invoke).format('D MMM YYYY')}\n                </div>\n                <div className=\"time\">\n                  {moment(this.props.reportTwo.date_invoke).format('HH:mm:ss')}\n                </div>\n              </div>\n            </div>\n          </header>\n\n          {columns.map((column, index) => {\n            const values = Object.keys(column[1]);\n            return (\n              <TabPanel key={index} value={this.state.selectedIndex} index={index}>\n                {values.map((value, valIndex) => {\n                  return (\n                    <div key={`${index}-${valIndex}`} className=\"row\">\n                      <div className=\"feature-name\">{values[valIndex]}</div>\n                      <div className=\"status-container compare\">\n                        {column[1][value][0].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                        {column[1][value][1].toString() === 'true' ? (\n                          <div className=\"status available\">\n                            <SvgIcon>\n                              <Icon path={mdiCheckboxMarkedCircle} />\n                            </SvgIcon>\n                            Available\n                          </div>\n                        ) : (\n                          <div className=\"status unavailable\">\n                            <SvgIcon>\n                              <Icon path={mdiCloseCircle} />\n                            </SvgIcon>\n                            Unavailable\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </TabPanel>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n}\n\nFeaturesStatus.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesStatus;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: node,\n  index: any.isRequired,\n  value: any.isRequired\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './FeaturesUsage.local.scss';\n\nexport class FeaturesUsage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n    return (\n      <div className=\"features-usage-container\">\n        <header>\n          <h1>License Features Usage</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne.USED);\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          <div className=\"value single\">{feature[1].USAGES}</div>\n          <div className=\"label\">{feature[0]}</div>\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const comparableFeatures = {};\n    if (reportOne.USED && reportOne && reportOne.USED) {\n      const reportOneEntries = Object.entries(reportOne.USED);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        comparableFeatures[feature[0]].usage = [parseInt(feature[1].USAGES, 10)];\n        comparableFeatures[feature[0]].usage[1] = 0;\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportTwo.USED);\n\n      reportTwoEntries.map(feature => {\n        if (feature[0] in comparableFeatures) {\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        } else {\n          comparableFeatures[feature[0]] = {};\n          comparableFeatures[feature[0]].usage = [0];\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        }\n\n        return null;\n      });\n    }\n\n    const features = Object.entries(comparableFeatures);\n    return features.map(feature => {\n      return (\n        <LightTooltip\n          key={feature[0]}\n          placement=\"top\"\n          title={\n            <>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportOne.date_invoke).format('D MMM YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[0]}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportTwo.date_invoke).format('D MMM YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[1]}</div>\n              </div>\n            </>\n          }\n        >\n          <div className=\"feature\">\n            {this.getFeatureValue(\n              comparableFeatures[feature[0]].usage[0],\n              comparableFeatures[feature[0]].usage[1]\n            )}\n            <div className=\"label\">{feature[0]}</div>\n          </div>\n        </LightTooltip>\n      );\n    });\n  };\n\n  getFeatureValue = (rep1, rep2) => {\n    let valueNode = <div className=\"value lower\">{rep1 - rep2}</div>;\n\n    if (rep1 === rep2) {\n      valueNode = <div className=\"value equal\">=</div>;\n    } else if (rep2 > rep1) {\n      valueNode = <div className=\"value higher\">{rep2 - rep1}</div>;\n    }\n\n    return valueNode;\n  };\n}\n\nFeaturesUsage.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesUsage;\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n\n    '& .row': {\n      display: 'flex',\n\n      '& .value': {\n        paddingLeft: '15px',\n        marginLeft: 'auto',\n        fontWeight: '600'\n      }\n    }\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\n\nimport './UnusedFeatures.local.scss';\n\nexport class UnusedFeatures extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"unused-features-container\">\n        <header>\n          <h1>Unused features</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne.UNUSED);\n\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          {feature[0]}\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const features = Object.keys(reportTwo.UNUSED);\n\n    const comparableFeatures = features.filter(feature => {\n      return reportOne.UNUSED[feature] !== undefined;\n    });\n\n    return comparableFeatures.map(feature => {\n      return (\n        <div key={feature} className=\"feature\">\n          {feature}\n        </div>\n      );\n    });\n  };\n}\n\nUnusedFeatures.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default UnusedFeatures;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, loadStoragePointsThunk, setStorageItemThunk, loadStorageDetailsThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport { getFullPath, getFormattedStorage, getStorageDetailsData } from '../../store/selectors';\n\nconst Storage = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getStoragePoints,\n  getStorageDetails,\n  storagePoints,\n  storageDetails,\n  selectedItem,\n  setStorageItem,\n  loadingFlags\n}) => {\n  const dbName = path.split('--')[2];\n\n  useEffect(() => {\n    getStoragePoints({\n      fullPath\n    });\n  }, [fullPath]);\n\n  useEffect(() => {\n    if (selectedItem) {\n      getStorageDetails({\n        selectedItem,\n        fullPath\n      });\n    }\n  }, [selectedItem]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          data={storageDetails}\n          list={storagePoints}\n          selectedItem={selectedItem}\n          setItem={setStorageItem}\n          dbName={dbName}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nStorage.propTypes = {\n  storeState: PropTypes.object,\n  storagePoints: PropTypes.array,\n  storageDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setStorageItem: PropTypes.func,\n  selectedItem: PropTypes.string,\n  getStoragePoints: PropTypes.func\n};\n\nexport const ConnectedStorage = connect(\n  state => ({\n    storeState: state.explorer.state,\n    storagePoints: getFormattedStorage(state),\n    selectedItem: state.explorer.storage.selected,\n    loadingFlags: state.explorer.flags.storage,\n    storageDetails: getStorageDetailsData(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setStorageItem: path => dispatch(setStorageItemThunk(path)),\n    getStorageDetails: filters => dispatch(loadStorageDetailsThunk(filters)),\n    getStoragePoints: filters => dispatch(loadStoragePointsThunk(filters))\n  })\n)(Storage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, setSelectedObjectThunk, loadObjectsThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport { getFullPath, getStructuredObjects, getSelectedObjectData, getInvalidObjects } from '../../store/selectors';\n\nconst Objects = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getObjects,\n  objectsData,\n  invalidObjects,\n  objectDetails,\n  selectedItem,\n  setObjectsItem,\n  loadingFlags\n}) => {\n  const dbName = path.split('--')[2];\n\n  useEffect(() => {\n    getObjects({\n      fullPath\n    });\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          invalidObjects={invalidObjects}\n          data={objectDetails}\n          list={objectsData}\n          selectedItem={selectedItem}\n          setItem={setObjectsItem}\n          dbName={dbName}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nObjects.propTypes = {\n  storeState: PropTypes.object,\n  objectsData: PropTypes.array,\n  objectDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setObjectsItem: PropTypes.func,\n  selectedItem: PropTypes.object,\n  getObjects: PropTypes.func\n};\n\nexport const ConnectedObjects = connect(\n  state => ({\n    storeState: state.explorer.state,\n    objectsData: getStructuredObjects(state),\n    selectedItem: {\n      owner: state.explorer.objects.selectedOwner,\n      object: state.explorer.objects.selectedObject\n    },\n    loadingFlags: state.explorer.flags.objects,\n    objectDetails: getSelectedObjectData(state),\n    invalidObjects: getInvalidObjects(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setObjectsItem: object => dispatch(setSelectedObjectThunk(object)),\n    getObjects: filters => dispatch(loadObjectsThunk(filters))\n  })\n)(Objects);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeStateThunk, loadSessionsThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { Table, LightTooltip, Center } from 'shared/components';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { Button } from 'shared/components/controls';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n// import SvgIcon from '@material-ui/core/SvgIcon';\n// import Icon from '@mdi/react';\n// import { mdiViewCompact } from '@mdi/js';\nimport { getFullPath, getSortedSessions } from '../../store/selectors';\n\nimport './Sessions.local.scss';\n\nconst columns = [\n  { label: 'Serial #' },\n  { label: 'Username' },\n  { label: 'Status' },\n  { label: 'Machine' },\n  { label: 'SID' },\n  { label: 'Logon time', sortKey: 'LOGON_TIME' },\n  { label: 'Program' },\n  { label: 'Type' }\n  // { label: '' } -> disabled view details button for now...\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">\n          {name}\n        </span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell><CellWithTooltip name={row['SERIAL#']} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.USERNAME} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.STATUS} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.MACHINE} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.SID} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.LOGON_TIME} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.PROGRAM} /></Table.Cell>\n    <Table.Cell><CellWithTooltip name={row.TYPE} /></Table.Cell>\n    { /* <Table.Cell padding=\"none\" className=\"view-details\">\n      <LightTooltip placement=\"bottom\" title={<span>View Details</span>}>\n        <SvgIcon>\n          <Icon path={mdiViewCompact} />\n        </SvgIcon>\n      </LightTooltip>\n    </Table.Cell> */ }\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return (\n      <Center>\n        { noDataMessage }\n      </Center>\n    );\n  }\n  return (\n    <Table {...tableProps}>\n      { sessions.map(rowRenderer) }\n    </Table>\n  );\n};\n\nexport const Sessions = (props) => {\n  const {\n    level,\n    sessions,\n    isLoading,\n    getSessions,\n    fullPath,\n    changeTab\n  } = props;\n\n  const [sortBehavior, setSortBehavior] = useState({ sortKey: 'LOGON_TIME', order: 'asc' });\n  const changeSort = (sortKey, order) => () => setSortBehavior({ sortKey, order });\n  const getSessionsData = () => {\n    getSessions({\n      sort: sortBehavior,\n      fullPath,\n      page_size: 2147483645\n    });\n  };\n  const tableProps = { changeSort, columns, sortBehavior };\n\n  useEffect(getSessionsData, [sortBehavior]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} />\n      </Paper.Header>\n      <Paper.Content>\n        <TableRenderer isLoading={isLoading} sessions={sessions} tableProps={tableProps} noDataMessage=\"No Sessions Available\" />\n      </Paper.Content>\n      <Paper.Footer>\n        <Button className=\"qa-refresh-btn align-right\" onClick={getSessionsData}>\n          <FormattedMessage id=\"general.refresh\" />\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nSessions.propTypes = {\n  level: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  fullPath: PropTypes.string.isRequired,\n  changeTab: PropTypes.func\n};\n\nexport const ConnectedSessions = connect(\n  state => ({\n    sessions: getSortedSessions(state),\n    level: state.explorer.state.level,\n    isLoading: state.explorer.flags.sessions.loading,\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getSessions: filters => dispatch(loadSessionsThunk(filters))\n  })\n)(Sessions);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDns } from '@mdi/js';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\n\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { fetchProtocols } from 'shared/api/protocols';\n\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport './AddServerCard.local.scss';\n\nexport const AddServerCard = () => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"action-btn\" startIcon={<AddIcon />} onClick={modalActions.open}>\n        Add New Server\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <AddNewServerContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewServer = ({ server = { protocol: 'SSH' }, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    fetchProtocols().then(resp => {\n      setState({\n        loading: false,\n        result: resp.result,\n        protocols: resp.protocols || []\n      });\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '50vh',\n        minHeight: '50vh',\n        width: '808px',\n        height: '784px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Add New Server\"\n        desc=\"Input the server connection information\"\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading protocols list</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <ServerForm\n                server={server}\n                handleSubmission={reloadAccounts}\n                protocols={state.protocols}\n                isNew\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Paper.Content>\n                <Result>\n                  <Result.Text>Could not load protocols list.</Result.Text>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button color=\"primary\" onClick={actions.close}>\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewServerContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewServer);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDatabase } from '@mdi/js';\n\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { Paper, Center } from 'shared/components/layout';\n\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { loadAllAccountsThunk } from '../../store/thunks';\n\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport './AddDatabaseCard.local.scss';\n\nexport const AddDatabaseCard = () => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"action-btn\" startIcon={<AddIcon />} onClick={modalActions.open}>\n        Add New Database\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <AddNewDatabaseContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewDatabase = ({ account, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '50vh',\n        minHeight: '50vh',\n        width: '808px',\n        height: '784px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Add New Database\"\n        desc=\"Input the database connection information\"\n      />\n\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading Required Protocols and Privilege Modes</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <DatabaseForm\n                protocols={state.protocols}\n                modes={state.modes}\n                account={account}\n                handleSubmission={reloadAccounts}\n                isNew\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Center>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load required protocols or privilege modes list.\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer></Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewDatabaseContainer = connect(\n  state => () => {\n    const path = state.explorer.state.path.split('--');\n    return {\n      account: {\n        protocol: path[0],\n        address: path[1]\n      }\n    };\n  },\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewDatabase);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postCompile() {\n  return RestClient.post('/compile');\n}\n","module.exports = __webpack_public_path__ + \"svgs/6842f8a8cfcb1999b9a1e64174e25a11.svg\";","module.exports = __webpack_public_path__ + \"svgs/727bf5a83867f2c49ff66ab6df50ae78.svg\";","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport './job-process.local.scss';\n\nimport { getInvocation } from './store/selectors';\nimport { invocationPoller } from './store/tasks';\nimport { AllowOutputFor } from './store/constants';\n\nimport JobForm from './job-form';\n\nimport { JobOutput } from './containers/output/output';\nimport { JobStatus } from './components/JobStatus/JobStatus';\n\nexport const JobView = ({ invocation, redirected }) => {\n  const [tab, setTab] = useState('details');\n\n  useEffect(() => {\n    invocationPoller.start();\n\n    return function stopPolling() {\n      invocationPoller.stop();\n    };\n  }, [invocation.status]);\n\n  if (!invocation || invocation.status === 'NOT_FETCHED') {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Fetching invocation</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <ViewTabs invocation={invocation} active={tab} changeTab={setTab} />\n        <JobStatus />\n      </Paper.Header>\n      <Switch value={tab}>\n        <Switch.Case value=\"details\">\n          <JobForm redirected={redirected} />\n        </Switch.Case>\n        <Switch.Case value=\"output\">\n          <JobOutput />\n        </Switch.Case>\n      </Switch>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    invocation: getInvocation(state)\n  };\n}, {})(JobView);\n\nfunction ViewTabs({ active, changeTab, invocation }) {\n  const withOutput = AllowOutputFor.includes(invocation.status);\n\n  const tabs = [\n    { label: 'Job Details', value: 'details', active: true },\n    { label: 'Output', value: 'output', disabled: !withOutput }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { isEmpty, pickBy } from 'lodash';\n\nimport moment from 'moment';\n\nimport { Switch } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { Notifications } from './containers/notifications/notifications';\n\nimport { Formik, Form } from 'formik';\n\nimport { Text, Date, Time } from 'shared/components/form/editors/Generic';\nimport { PlatformSelect, ProcessSelect } from 'shared/components/form/editors/Custom';\n\nimport { Button } from 'shared/components/controls';\n\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nimport './job-process.local.scss';\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { getCurrentUserName } from '../session/store/selectors';\n\nimport { getInvocation } from './store/selectors';\nimport { AllowGeneralEditingFor, InvocationStatus } from './store/constants';\n\nimport { postInvocation } from 'shared/api/invocation';\n\nimport { ProcessParameters } from './job-parameters';\n\nimport { Schedule } from 'jobs/containers/Schedule/Schedule';\n\nconst JobForm = ({ loggedInAs, invocation, redirected }) => {\n  const history = useHistory();\n\n  const [editable, setEditable] = useState(AllowGeneralEditingFor.includes(invocation.status));\n\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const { initialValues, disabledFields } = deriveFormState(invocation, editable);\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(true);\n          handleJobCreation(values, monitor).then(({ result, invocations }) => {\n            if (result === 'success') {\n              const { uuid } = invocations[0];\n\n              history.push(`/jobs/job?invocation=${uuid}`);\n            }\n          });\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Column xs={3}>\n                          <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            disabled={disabledFields.platform || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={9}>\n                          <ProcessSelect\n                            name=\"process\"\n                            label=\"Process\"\n                            value={invocation.process}\n                            required\n                            disabled={disabledFields.process || !editable || redirected}\n                          />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column xs={3}>\n                          <Date name=\"date_invoke\" label=\"Date\" disabled={!editable} />\n                        </Column>\n                        <Column xs={3}>\n                          <Time name=\"time_invoke\" label=\"Hour\" disabled={!editable} />\n                        </Column>\n                        <Column xs={3}>\n                          <Text name=\"job_user\" label=\"User\" required disabled value={loggedInAs} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation.parameters} editable={editable} />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row spacing={3}>\n                        <Column xs={12}>\n                          <Notifications\n                            name=\"notifications\"\n                            key={invocation.uuid}\n                            disabled={!editable}\n                            recievedData={derivedMonitor}\n                            onApply={n_state => {\n                              if (n_state.events === 0 || isEmpty(n_state.users)) {\n                                setMonitor({\n                                  enabled: false\n                                });\n                              }\n                              setMonitor({\n                                enabled: true,\n                                ...n_state\n                              });\n                            }}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button to=\"/jobs\" color=\"primary\">\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <FormVerbs\n                    status={invocation.status}\n                    editable={editable}\n                    setEditable={setEditable}\n                    monitor={monitor}\n                    invocation={invocation}\n                  />\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    loggedInAs: getCurrentUserName(state),\n    invocation: getInvocation(state)\n  };\n}, {})(JobForm);\n\n/* eslint-disable no-unused-vars */\nfunction FormVerbs({ status, editable, setEditable, monitor, invocation }) {\n  const makeEditable = () => setEditable(true);\n\n  return (\n    <Switch value={editable}>\n      <Switch.Case value>\n        <SubmitButton>{monitor.enabled ? 'Monitor' : 'Run'}</SubmitButton>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Schedule invocation={invocation} />\n          <Button onClick={makeEditable}>Edit</Button>\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n}\n\nfunction handleJobCreation(values, monitor) {\n  const {\n    process,\n    platform,\n    date_invoke,\n    time_invoke,\n    job_user,\n    ...params_with_maybe_replvars\n  } = values;\n  const sendable = {};\n\n  const { parameters, replvars } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value) {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (date_invoke) {\n    const dateMoment = moment(date_invoke, 'MM/DD/YYYY');\n\n    const timeMoment = time_invoke ? moment(time_invoke, 'hh:mm') : moment();\n\n    dateMoment.hour(timeMoment.hour);\n    dateMoment.minute(timeMoment.minute);\n\n    sendable.timestamp = dateMoment.format('YYYY-MM-DDTHH:mm:ss');\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    sendable.process = 'mas.sys.invocation.notify.create';\n\n    sendable.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      when: sendable.timestamp,\n      events: monitor.events,\n      users: monitor.users\n    };\n\n    sendable.timestamp = null;\n  } else {\n    sendable.process = process;\n\n    sendable.parameters = pickBy(parameters, rejector);\n  }\n\n  return postInvocation(sendable);\n}\n\nfunction deriveFormState(invocation) {\n  const values = {\n    process: invocation.process,\n    parameters: { ...invocation.parameters }\n  };\n  const disabledFields = {\n    ...(invocation.status !== InvocationStatus.NEW && {\n      platform: true,\n      process: true,\n      user: true,\n      parameters: true\n    })\n  };\n\n  return { initialValues: values, disabledFields };\n}\n\nfunction extractReplVars(values) {\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else {\n          if (field_name === 'deflt') {\n            extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n          } else {\n            extracted.replvars.push({ [field_name]: values[key] });\n          }\n        }\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], parameters: {} }\n  );\n\n  return { parameters: { ...result.parameters, replvars: cleanUpReplVars(result.replvars) } };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n","import { createSelector } from 'reselect';\n\n//\nexport const getCurrentUserName = createSelector(\n  state => state.session,\n  session => {\n    /** ImmutableJs object :( */\n    return session.get('currentUser').get('name');\n  }\n);\n","import React from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { Paper } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { Center } from 'shared/components';\nimport './output.scss';\nimport { useSelector } from 'react-redux';\nimport { getInvocation } from '../../store/selectors';\nimport { InvocationStatus } from '../../store/constants';\n\nimport { ListOutput } from '../../components/ListOutput/ListOutput';\n\nimport { fetchInvocationOutput } from 'shared/api/invocation';\n\nimport { sendToEmail } from 'license-collection/utils/sendToEmail';\nimport { copyToClipboard } from 'license-collection/utils/copyToClipboard';\n\nfunction noOutput(invocation = {}) {\n  return [\n    {\n      data: {\n        text: 'No output to display.\\n'\n      }\n    },\n    {\n      data: {\n        text: `Status: ${invocation.status}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Process: ${invocation.process}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Invocation: ${invocation.uuid}\\n`\n      }\n    }\n  ];\n}\n\nexport const JobOutput = () => {\n  const invocation = useSelector(getInvocation);\n\n  const [loading, setLoading] = React.useState(true);\n  const [output, setOutput] = React.useState(noOutput(invocation));\n\n  React.useEffect(() => {\n    fetchInvocationOutput(invocation.uuid)\n      .then(({ data }) => {\n        const recieved = data.data.outputs;\n\n        if (recieved && recieved.length) {\n          setOutput(recieved);\n        } else {\n          setOutput(noOutput(invocation));\n        }\n\n        setLoading(false);\n      })\n      .catch(() => {\n        setOutput(noOutput(invocation));\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const outputType = invocation.status === InvocationStatus.FAILED ? 'fail' : 'normal';\n\n  const monitoring = output?.[0]?.data?.text?.match?.(\n    /{\"process\": {\"uuid\": \"([0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12})\",/\n  )?.[1];\n\n  console.log(monitoring); // eslint-disable-line\n\n  return (\n    <>\n      <Paper.Content scrollable>\n        <ListOutput\n          type={outputType}\n          output={output}\n          errors={invocation.errors}\n          monitoring={monitoring}\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"primary\"\n            onClick={() => sendToEmail(invocation, output, invocation.process)}\n          >\n            Send to email\n          </Button>\n          <Button color=\"primary\" onClick={() => copyToClipboard(output, invocation)}>\n            Copy to clipboard\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n    </>\n  );\n};\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors, monitoring }) => {\n  let content;\n\n  if (monitoring) {\n    return (\n      <div className=\"list\">\n        <h3>Monitor</h3>\n        <p>Invocation id: {monitoring}</p>\n        <Button to={`/jobs/job?invocation=${monitoring}`} color=\"primary\">\n          Go to Monitored Invocation\n        </Button>\n      </div>\n    );\n  }\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occured:</p>\n        <div className=\"list error\">\n          <code>\n            <pre>{errors.join('\\n')}</pre>\n          </code>\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              <code>\n                <pre>{output.map(row => row.data.text).join('')}</pre>\n              </code>\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        <code>\n          <pre>{output.map(row => row.data.text).join('')}</pre>\n        </code>\n      </div>\n    );\n  }\n\n  return content;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { want } from 'shared/lib/want';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiTimelineClock,\n  mdiCancel,\n  mdiAlertRhombusOutline,\n  mdiStopCircleOutline\n} from '@mdi/js';\n\nimport { getInvocationStatus } from '../../store/selectors';\nimport {\n  InvocationStatus,\n  CannotShowStatusFor,\n  FAILURES,\n  SUCESSES,\n  WARNINGS\n} from '../../store/constants';\n\nimport './JobStatus.local.scss';\n\nexport const JobStatus = () => {\n  const STATUS = useSelector(getInvocationStatus);\n  const ignore = CannotShowStatusFor.includes(STATUS);\n\n  if (ignore) {\n    return null;\n  }\n\n  return (\n    <div className=\"status-label\" style={{ background: wantStatusColor(STATUS) }}>\n      <SvgIcon fontSize=\"inherit\" color=\"inherit\">\n        <path d={wantStatusIcon(STATUS)} />\n      </SvgIcon>\n      <span className=\"status-label-text\">{STATUS}</span>\n    </div>\n  );\n};\n\nconst wantStatusIcon = want(\n  {\n    [InvocationStatus.EXECUTING]: mdiProgressClock,\n    [InvocationStatus.SUCCEEDED]: mdiCheckCircleOutline,\n    [InvocationStatus.DELAYED]: mdiTimelineClock,\n    [InvocationStatus.SCHEDULED]: mdiCalendarArrowRight,\n    [InvocationStatus.KILLED]: mdiCancel,\n    [InvocationStatus.FAILED]: mdiAlertRhombusOutline,\n    [InvocationStatus.ABORTED]: mdiStopCircleOutline\n  },\n  '',\n  status => status\n);\n\nconst wantStatusColor = want(\n  {\n    fail: '#ED3A4A',\n    warning: '#F1BD5C',\n    success: '#34CC88'\n  },\n  '#3765AF', // progress blue color for unresolved statuses\n  status => {\n    if (FAILURES.includes(status)) {\n      return 'fail';\n    }\n\n    if (SUCESSES.includes(status)) {\n      return 'success';\n    }\n\n    if (WARNINGS.includes(status)) {\n      return 'warning';\n    }\n  }\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { debounce } from 'lodash';\n\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Header } from 'core/components/Header';\nimport { AddFilter } from 'dashboard/components/add-filter/add-filter';\n\nimport { SearchInput, Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper, Overflow } from 'shared/components/layout';\nimport { JobResults } from 'shared/components/JobResults';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector } from 'shared/store/state';\n\nimport './JobsSearchResults.local.scss';\n\nexport class JobsSearchResults extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerm: '',\n      selectedFilter: null\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    this.getSearchResults(searchedTerm);\n  }, 500);\n\n  componentDidMount() {\n    const query = this.props.location.search.substring(1);\n    const params = query.split('&');\n    const searchTerm = params[0].split('=')[1];\n    let selectedFilter = null;\n    if (params[1]) {\n      selectedFilter = {\n        type: params[1].split('=')[0],\n        value: params[1].split('=')[1]\n      };\n    }\n    this.setState({ searchTerm, selectedFilter }, () => {\n      this.getSearchResults(searchTerm);\n    });\n  }\n\n  render() {\n    const { getSearchedJobs } = this.props;\n    return (\n      <>\n        <Header>\n          <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n            <div>Jobs</div>\n            <div>Search-results</div>\n          </Breadcrumbs>\n        </Header>\n\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <div className=\"search-area\">\n                <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n                <AddFilter\n                  filters={this.state.selectedFilter}\n                  updateFilters={this.updateSelectedFilter}\n                />\n              </div>\n            </Paper.Header>\n            {getSearchedJobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <Paper.Content>\n                <Overflow>\n                  <div className=\"content-area\">\n                    <JobResults jobs={this.props.getSearchedJobs.get('content')} />\n                  </div>\n                </Overflow>\n              </Paper.Content>\n            )}\n          </Paper>\n        </Main>\n      </>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: 2147483645,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    if (this.state.selectedFilter) {\n      switch (this.state.selectedFilter.type) {\n        case 'user':\n          QSP.owner = this.state.selectedFilter.value;\n          break;\n        case 'status':\n          QSP.status = this.state.selectedFilter.value.toUpperCase();\n          break;\n        case 'day':\n          QSP.date_invoke = moment(this.state.selectedFilter.value).format('YYYY-MM-DD');\n          QSP.period = 1;\n          break;\n        default:\n          break;\n      }\n    }\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length === 3) {\n      this.getSearchResults(searchedTerm);\n    } else {\n      this.apiSearchWithDebounce(searchedTerm);\n    }\n  };\n\n  updateSelectedFilter = filter => {\n    this.setState({ selectedFilter: filter }, () => {\n      this.getSearchResults(this.state.searchTerm);\n    });\n  };\n}\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data))\n});\n\nexport const ConnectedJobsSearchResults = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobsSearchResults);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Center, Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { Header } from 'core/components/Header/Header';\n// import { RefreshDashboard } from './components/RefreshDashboard/RefreshDashboard';\n// import { ToggleDashboard } from './components/ToggleDashboard/ToggleDashboard';\nimport { PhysicalDashboard } from './components/PhysicalDashboard/PhysicalDashboard';\nimport { VirtualDashboard } from './components/VirtualDashboard/VirtualDashboard';\nimport { NoData } from './components/NoData/NoData';\nimport { ConnectedToggleSelection } from './containers/ToggleSelection/ToggleSelection';\n\nimport { loadExecutiveDashboardThunk } from './store/thunks';\n\nimport './ExecutiveDashboard.local.scss';\n\nfunction ExecutiveDashboard({\n  isLoading,\n  callFailed,\n  selected,\n  rawEntries,\n  getExecutiveDashboard\n}) {\n  const [dashboardType, setDashboardType] = useState('physical');\n  // const [isRefreshNeeded, setIsRefreshNeeded] = useState(false); // will update based on the new API that will be provide by the BE\n  useEffect(() => {\n    // do the new API provided by the BE\n    // set isRefreshNeeded value based on result\n\n    // if we have no data in store, do the call, else new data will be added on demand -> refresh button\n    // if (rawEntries.length === 0) {\n    getExecutiveDashboard();\n    // }\n  }, []);\n\n  // function refreshDashboard() {\n  //   getExecutiveDashboard();\n  // }\n\n  // function changeDashboard(type) {\n  //   setDashboardType(type);\n  // }\n\n  return (\n    <>\n      <Header title=\"Executive Dashboard\">\n        {!isLoading && !callFailed && (\n          <div className=\"header-actions-container\">\n            {dashboardType === 'physical' && <ConnectedToggleSelection />}\n            {/* <RefreshDashboard active={isRefreshNeeded} onClickCallback={refreshDashboard} /> */}\n            {/* <div className=\"separator\" /> */}\n            {/* <ToggleDashboard active={dashboardType} onClickCallback={changeDashboard} /> */}\n          </div>\n        )}\n      </Header>\n      <Main>\n        <Switch value={isLoading}>\n          <Switch.Case value>\n            <Center>\n              <Loader>Loading Executive Dashboard...</Loader>\n            </Center>\n          </Switch.Case>\n          <Switch.Case value={false}>\n            <Switch value={callFailed}>\n              <Switch.Case value>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load Executive Dashboard data. Please refresh the page and try again.\n                  </Result.Text>\n                </Result>\n              </Switch.Case>\n              <Switch.Case value={false}>\n                {rawEntries.length === 0 && <NoData />}\n                {rawEntries.length > 0 && (\n                  <Switch value={dashboardType}>\n                    <Switch.Case value=\"virtual\">\n                      {/* TODO update with actual data that will be received */}\n\n                      <VirtualDashboard servers={[]} />\n                    </Switch.Case>\n                    <Switch.Case value=\"physical\">\n                      <PhysicalDashboard selected={selected} />\n                    </Switch.Case>\n                  </Switch>\n                )}\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Main>\n    </>\n  );\n}\n\nexport const ConnectedExecutiveDashboard = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.dashboard.loading,\n      callFailed: state.executiveDashboard.flags.dashboard.callFailed,\n      selected: state.executiveDashboard.selectedServers.length,\n      rawEntries: state.executiveDashboard.rawEntries\n    };\n  },\n  dispatch => ({\n    getExecutiveDashboard: () => dispatch(loadExecutiveDashboardThunk())\n  })\n)(ExecutiveDashboard);\n","import React from 'react';\n\nimport { ConnectedSearchSection } from '../../containers/SearchSection/SearchSection';\nimport { SwitchContent } from '../SwitchContent/SwitchContent';\n\nexport const PhysicalDashboard = ({ selected }) => {\n  return (\n    <>\n      <ConnectedSearchSection />\n      <SwitchContent nrSelected={selected} />\n    </>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SearchableList } from 'users-manager/components/SearchableList/SearchableList';\nimport { ServerCard } from '../../components/ServerCard/ServerCard';\n\nimport { toggleServerThunk } from '../../store/thunks';\n\nimport './SearchSection.local.scss';\n\nfunction SearchSection({ allServers, selectedServers, toggleServer }) {\n  function filterServerByQuery(server, query) {\n    return server.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  function isServerSelected(server) {\n    if (selectedServers.find(sv => sv.name === server.name)) return true;\n    return false;\n  }\n\n  function toggleSelected(server) {\n    toggleServer(server);\n  }\n\n  return (\n    <section className=\"servers-search-section\">\n      <SearchableList items={allServers} filter={filterServerByQuery}>\n        {server => (\n          <ServerCard\n            selected={isServerSelected(server)}\n            toggleSelectedCallback={toggleSelected}\n            server={server}\n          />\n        )}\n      </SearchableList>\n    </section>\n  );\n}\n\nexport const ConnectedSearchSection = connect(\n  state => {\n    return {\n      allServers: state.executiveDashboard.allServers,\n      selectedServers: state.executiveDashboard.selectedServers\n    };\n  },\n  dispatch => ({\n    toggleServer: name => dispatch(toggleServerThunk(name))\n  })\n)(SearchSection);\n","module.exports = __webpack_public_path__ + \"svgs/4b3cf735142a68d8e31e71d5905527d8.svg\";","import React from 'react';\n\nimport { Switch } from 'shared/components';\n\nimport { EmptyContent } from '../EmptyContent/EmptyContent';\nimport { ConnectedDashboard } from '../../containers/Dashboard/Dashboard';\nimport { ConnectedServerView } from '../../containers/ServerView/ServerView';\n\nimport './SwitchContent.local.scss';\n\nexport const SwitchContent = ({ nrSelected }) => {\n  let page = '';\n  if (nrSelected === 0) {\n    page = 'empty-content';\n  } else if (nrSelected === 1) {\n    page = 'server-details';\n  } else if (nrSelected > 1) {\n    page = 'dashboard';\n  }\n\n  return (\n    <section className=\"dashboard-view-section\">\n      <Switch value={page}>\n        <Switch.Case value=\"empty-content\">\n          <EmptyContent />\n        </Switch.Case>\n        <Switch.Case value=\"server-details\">\n          <ConnectedServerView />\n        </Switch.Case>\n        <Switch.Case value=\"dashboard\">\n          <ConnectedDashboard />\n        </Switch.Case>\n      </Switch>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './EmptyContent.local.scss';\n\nexport const EmptyContent = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              Please select at least a server in order to view its details\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Column } from 'shared/components/layout';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { OptionsTile } from '../../components/OptionsTile/OptionsTile';\n\nfunction Dashboard({ selected }) {\n  return (\n    <>\n      <Row>\n        <Column xs={6}>\n          <ServersTile servers={selected} />\n        </Column>\n        <Column xs={6}>\n          <DatabasesTile servers={selected} />\n        </Column>\n      </Row>\n      <OptionsTile servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedDashboard = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(Dashboard);\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarCircleOutline } from '@mdi/js';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper, Overflow } from 'shared/components/layout';\n\nimport { OptionsList } from './components/OptionsList/OptionsList';\nimport { OptionsChart } from './components/OptionsChart/OptionsChart';\n\nimport './OptionsTile.local.scss';\n\nexport const OptionsTile = ({ servers }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.totalInstalledOptions;\n  }, 0);\n\n  const installedOptions = [\n    {\n      name: 'Advanced Analytics',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.aa_count;\n      }, 0),\n      color: '#176BA0',\n      secondaryColor: '#E8F9F5',\n      label: 'AA'\n    },\n    {\n      name: 'Advanced Compression',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.ac_count;\n      }, 0),\n      color: '#1AC9E6',\n      secondaryColor: '#e8fafc',\n      label: 'AC'\n    },\n    {\n      name: 'Advanced Security',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.as_count;\n      }, 0),\n      color: '#6DF0D2',\n      secondaryColor: '#f0fdfb',\n      label: 'AS'\n    },\n    {\n      name: 'Database Vault',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.dv_count;\n      }, 0),\n      color: '#7D3AC1',\n      secondaryColor: '#f2ebf9',\n      label: 'DV'\n    },\n    {\n      name: 'Multitenant',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.mt_count;\n      }, 0),\n      color: '#EA7369',\n      secondaryColor: '#fbedf7',\n      label: 'MT'\n    },\n    {\n      name: 'Active Data Guard',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.adg_count;\n      }, 0),\n      color: '#1DE4BD',\n      secondaryColor: '#e8fcf8',\n      label: 'ADG'\n    },\n    {\n      name: 'Real Application Clusters',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.rac_count;\n      }, 0),\n      color: '#EF7E32',\n      secondaryColor: '#fdf2eb',\n      label: 'RAC'\n    },\n    {\n      name: 'OLAP',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.olap_count;\n      }, 0),\n      color: '#F0A58F',\n      secondaryColor: '#fdf6f4',\n      label: 'OL'\n    },\n    {\n      name: 'Partitioning (User)',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.part_count;\n      }, 0),\n      color: '#C02323',\n      secondaryColor: '#f9e9e9',\n      label: 'P'\n    },\n    {\n      name: 'In-Memory Database',\n      value: servers.reduce((acc, sv) => {\n        return acc + sv.installedOptions.in_mem_db_count;\n      }, 0),\n      color: '#DB4CB2',\n      secondaryColor: '#fbedf7',\n      label: 'IMD'\n    }\n  ];\n\n  return (\n    <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiStarCircleOutline} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={total} />\n        <StringLabel text=\"Options installed\" />\n      </Paper.Header>\n      <div className=\"container\">\n        <div className=\"graph-container\">\n          <OptionsChart data={installedOptions} />\n        </div>\n        <div className=\"label-container\">\n          <Overflow>\n            <OptionsList options={installedOptions} />\n          </Overflow>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\n\nimport { OptionItem } from '../OptionItem/OptionItem';\n\nexport const OptionsList = ({ options }) => {\n  return options.map(option => <OptionItem key={option.name} option={option} />);\n};\n","import React from 'react';\n\nimport './OptionItem.local.scss';\n\nexport const OptionItem = ({ option }) => {\n  return (\n    <div className=\"option\">\n      <div className=\"value\" style={{ backgroundColor: option.secondaryColor }}>\n        <span style={{ color: option.color }}>{option.value}</span>\n      </div>\n      <div style={{ color: option.color }}>{option.name}</div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { BarChart, Bar, XAxis, Cell, ResponsiveContainer, YAxis, CartesianGrid } from 'recharts';\n\nimport './OptionsChart.local.scss';\n\nexport const OptionsChart = ({ data }) => {\n  const renderCustomXAxisTick = ({ x, y, payload }) => {\n    const index = data.findIndex(sv => sv.label === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={data[index].color}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <XAxis dataKey=\"label\" tickSize={false} axisLine={false} tick={renderCustomXAxisTick} />\n        <YAxis\n          width={20}\n          tickSize={false}\n          axisLine={false}\n          allowDecimals={false}\n          type=\"number\"\n          domain={[0, 'dataMax']}\n          stroke=\"rgba(12, 50, 110, 0.38)\"\n        />\n        <Bar dataKey=\"value\">\n          {data.map((entry, index) => {\n            return <Cell key={`${entry.name}-${index}`} fill={entry.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Column } from 'shared/components/layout';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { UsedOptions } from '../../components/UsedOptions/UsedOptions';\n\nfunction ServerView({ selected }) {\n  return (\n    <>\n      <Row>\n        <Column xs={6}>\n          <ServersTile servers={selected} isSingle />\n        </Column>\n        <Column xs={6}>\n          <DatabasesTile servers={selected} />\n        </Column>\n      </Row>\n      <UsedOptions servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedServerView = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(ServerView);\n","import React from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlayCircle, mdiCheck } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport './UsedOptions.local.scss';\n\nexport const UsedOptions = ({ servers }) => {\n  function optionType(type) {\n    if (type.value === 1) {\n      return (\n        <LightTooltip\n          placement=\"top\"\n          title={\n            <>\n              <span style={{ fontWeight: '600' }}>{type.name}:&nbsp;</span>\n              <span>Installed</span>\n            </>\n          }\n        >\n          <SvgIcon className=\"installed\">\n            <Icon path={mdiCheck} />\n          </SvgIcon>\n        </LightTooltip>\n      );\n    }\n\n    return null;\n  }\n\n  return (\n    <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiPlayCircle} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={servers[0].totalInstalledOptions} />\n        <StringLabel text=\"Options installed\" />\n      </Paper.Header>\n      <Paper.Content scrollable={false}>\n        <div className=\"grid\">\n          <div className=\"column header left\" />\n          <div className=\"column header aa\">AA</div>\n          <div className=\"column header ac\">AC</div>\n          <div className=\"column header adg\">ADG</div>\n          <div className=\"column header as\">AS</div>\n          <div className=\"column header dv\">DV</div>\n          <div className=\"column header imd\">IMD</div>\n          <div className=\"column header mt\">MT</div>\n          <div className=\"column header ol\">OL</div>\n          <div className=\"column header p\">P</div>\n          <div className=\"column header rac\">RAC</div>\n          {servers[0].sids.map((sid, index) => {\n            return (\n              <div key={`${sid.sid}-${index}`} className=\"row\">\n                <div className=\"column left\">{sid.sid}</div>\n                <div className=\"column\">\n                  {optionType({ name: 'Advanced Analytics', value: sid.aa_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Advanced Compression', value: sid.ac_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Active Data Guard', value: sid.adg_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Advanced Security', value: sid.as_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Database Vault', value: sid.dv_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'In-Memory Database', value: sid.in_mem_db_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Multitenant', value: sid.mt_count })}\n                </div>\n                <div className=\"column\">{optionType({ name: 'OLAP', value: sid.olap_count })}</div>\n                <div className=\"column\">\n                  {optionType({ name: 'Partitioning (User)', value: sid.part_count })}\n                </div>\n                <div className=\"column\">\n                  {optionType({ name: 'Real Application Clusters', value: sid.rac_count })}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Paper.Content>\n    </Paper>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState } from 'react';\n\nimport { Center } from 'shared/components';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { ServerCard } from '../ServerCard/ServerCard';\n\nimport './VirtualDashboard.local.scss';\n\n// const servers = [\n//   { name: 'VCenterServerName_1', hosts: '44', cpu: '12', cores: '32' },\n//   { name: 'VCenterServerName_2', hosts: '4', cpu: '10', cores: '10' },\n//   { name: 'VCenterServerName_3', hosts: '45', cpu: '10', cores: '4' },\n//   { name: 'VCenterServerName_4', hosts: '34', cpu: '10', cores: '4' },\n//   { name: 'VCenterServerName_5', hosts: '24', cpu: '12', cores: '32' },\n//   { name: 'VCenterServerName_6', hosts: '14', cpu: '8', cores: '4' },\n//   { name: 'VCenterServerName_7', hosts: '6', cpu: '12', cores: '32' },\n//   { name: 'VCenterServerName_8', hosts: '4', cpu: '8', cores: '8' },\n//   { name: 'VCenterServerName_9', hosts: '44', cpu: '12', cores: '32' },\n//   { name: 'VCenterServerName_10', hosts: '34', cpu: '12', cores: '8' },\n//   { name: 'VCenterServerName_11', hosts: '14', cpu: '6', cores: '16' },\n//   { name: 'VCenterServerName_12', hosts: '44', cpu: '6', cores: '16' }\n// ];\n\n// const test_servers = [];\n\nexport const VirtualDashboard = ({ servers }) => {\n  const [query, setQuery] = useState('');\n  const filtered = servers.filter(item => filterServerByQuery(item, query));\n\n  function filterServerByQuery(server) {\n    let found = false;\n\n    Object.values(server).map(val => {\n      if (val.toLowerCase().includes(query.toLowerCase())) {\n        found = true;\n      }\n\n      return null;\n    });\n\n    return found;\n  }\n\n  return (\n    <div className=\"container\">\n      {servers.length === 0 && <Center>Currently there are no virtual servers</Center>}\n      {servers.length > 0 && (\n        <>\n          <div className=\"search-input-slot\">\n            <SimpleSearchInput\n              data-qa=\"users-search-input\"\n              value={query}\n              onChange={e => setQuery(e.target.value)}\n            />\n          </div>\n          <div className=\"servers-container\">\n            {filtered.map(server => (\n              <ServerCard key={server.name} server={server} type=\"virtual\" />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiShieldCheckOutline } from '@mdi/js';\n\nimport './NoData.local.scss';\n\nexport const NoData = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiShieldCheckOutline} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              Please run &nbsp;\n              <Link className=\"link\" to=\"/compliance/license-collection\">\n                License Collection\n              </Link>\n              &nbsp; in order to populate this dashboard\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\n\nimport { deselectAllThunk, selectAllThunk } from '../../store/thunks';\n\nfunction ToggleSelection({ servers, selected, deselectAll, selectAll }) {\n  if (servers === selected) {\n    return (\n      <Button style={{ color: '#03A9F4' }} onClick={() => deselectAll()}>\n        Deselect All\n      </Button>\n    );\n  }\n  return (\n    <Button style={{ color: '#03A9F4' }} onClick={() => selectAll()}>\n      Select all\n    </Button>\n  );\n}\n\nexport const ConnectedToggleSelection = connect(\n  state => {\n    return {\n      servers: state.executiveDashboard.allServers.length,\n      selected: state.executiveDashboard.selectedServers.length\n    };\n  },\n  dispatch => ({\n    deselectAll: () => dispatch(deselectAllThunk()),\n    selectAll: () => dispatch(selectAllThunk())\n  })\n)(ToggleSelection);\n","import React, { useState } from 'react';\n\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport { Navigation } from './components/Navigation/Navigation';\nimport { ConnectedHardware } from './Pages/Hardware/Hardware';\nimport { ConnectedSoftware } from './Pages/Software/Software';\nimport { ConnectedPackaging } from './Pages/Packaging/Packaging';\n\nexport const LicenseCollection = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function changeActiveTab(newActiveTab) {\n    setActiveTab(newActiveTab);\n  }\n\n  return (\n    <>\n      <Header title=\"License collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <Navigation active={activeTab} onClickCallback={changeActiveTab} />\n          </Paper.Header>\n          <Paper.Content>\n            <Switch value={activeTab}>\n              <Switch.Case value={0}>\n                <ConnectedHardware />\n              </Switch.Case>\n              <Switch.Case value={1}>\n                <ConnectedSoftware />\n              </Switch.Case>\n              <Switch.Case value={2}>\n                <ConnectedPackaging />\n              </Switch.Case>\n            </Switch>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Navigation.local.scss';\n\nconst data = [\n  { label: 'Hardware Data Requirements Collection' },\n  { label: 'Software Data Requirements Collection' },\n  { label: 'Packaging Process' }\n];\n\nexport const Navigation = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"nav-chip-container\">\n      {data.map((chip, index) => (\n        <div\n          className={classnames('nav-chip', { active: active === index })}\n          key={index}\n          onClick={() => onClickCallback(index)}\n          role=\"presentation\"\n          data-qa={`chip-nav-${index}`}\n        >\n          {chip.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func } from 'prop-types';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiMemory } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport {\n  getAllPrototypesThunk,\n  getAllDatatypesThunk,\n  loadAllAccountsThunk\n} from 'explorer/store/thunks';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Hardware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.hw_scan';\n\nexport class Hardware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      process: null,\n      isProcessLoading: true,\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      prototypes,\n      datatypes,\n      rawAccounts,\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      getAllPrototypes,\n      getAllDatatypes,\n      getAllAccounts\n    } = this.props;\n\n    if (!loadingPrototypes && prototypes.length === 0) {\n      getAllPrototypes();\n    }\n\n    if (!loadingDatatypes && datatypes.length === 0) {\n      getAllDatatypes();\n    }\n\n    if (!loadingAccounts && rawAccounts.length === 0) {\n      getAllAccounts();\n    }\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${processName}`);\n      if (response.data.data && response.data.data.processes && response.data.data.processes[0]) {\n        this.setState({ process: response.data.data.processes[0], isProcessLoading: false });\n      }\n    } catch (errors) {\n      this.setState({ isProcessLoading: false });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const { process, isProcessLoading } = this.state;\n    const {\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      datatypes,\n      prototypes\n    } = this.props;\n    let parameters = null;\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"hardware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Hardware scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Hardware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n      />\n    );\n  }\n}\n\nHardware.propTypes = {\n  prototypes: array,\n  datatypes: array,\n  rawAccounts: array,\n  loadingPrototypes: bool,\n  loadingDatatypes: bool,\n  loadingAccounts: bool,\n  getAllPrototypes: func,\n  getAllDatatypes: func,\n  getAllAccounts: func\n};\n\nexport const ConnectedHardware = connect(\n  state => ({\n    prototypes: state.explorer.prototypes,\n    datatypes: state.explorer.datatypes,\n    rawAccounts: state.explorer.rawAccounts,\n    loadingPrototypes: state.explorer.flags.prototypes.loading,\n    loadingDatatypes: state.explorer.flags.datatypes.loading,\n    loadingAccounts: state.explorer.flags.accounts.loading\n  }),\n  dispatch => ({\n    getAllPrototypes: () => dispatch(getAllPrototypesThunk()),\n    getAllDatatypes: () => dispatch(getAllDatatypesThunk()),\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'collection' }))\n  })\n)(Hardware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n  const matches = regex.exec(deflt);\n  // const json = `[${matches[2]}]`;\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default:\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return parseInt(matches[2], 10);\n          case 'str':\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n  }\n  return null;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func } from 'prop-types';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiApplication } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport {\n  getAllPrototypesThunk,\n  getAllDatatypesThunk,\n  loadAllAccountsThunk,\n  getAllFormsThunk\n} from 'explorer/store/thunks';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Software.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.sw_scan';\n\nexport class Software extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      process: null,\n      isProcessLoading: true,\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      prototypes,\n      datatypes,\n      rawAccounts,\n      forms,\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      loadingForms,\n      getAllPrototypes,\n      getAllDatatypes,\n      getAllAccounts,\n      getAllForms\n    } = this.props;\n\n    if (!loadingPrototypes && prototypes.length === 0) {\n      getAllPrototypes();\n    }\n\n    if (!loadingDatatypes && datatypes.length === 0) {\n      getAllDatatypes();\n    }\n\n    if (!loadingAccounts && rawAccounts.length === 0) {\n      getAllAccounts();\n    }\n\n    if (!loadingForms && forms.length === 0) {\n      getAllForms();\n    }\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${processName}`);\n      if (response.data.data && response.data.data.processes && response.data.data.processes[0]) {\n        this.setState({ process: response.data.data.processes[0], isProcessLoading: false });\n      }\n    } catch (errors) {\n      this.setState({ isProcessLoading: false });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const { process, isProcessLoading } = this.state;\n    const {\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      loadingForms,\n      datatypes,\n      prototypes\n    } = this.props;\n    let parameters = null;\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Database features scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to target server, Target DBMS, Database form for the target\n                      database, SSH connection to the target host, working directory in the repo\n                      host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Software Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiApplication} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        forms={this.props.forms}\n        prototypes={this.props.prototypes}\n      />\n    );\n  }\n}\n\nSoftware.propTypes = {\n  prototypes: array,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  loadingPrototypes: bool,\n  loadingDatatypes: bool,\n  loadingAccounts: bool,\n  loadingForms: bool,\n  getAllPrototypes: func,\n  getAllDatatypes: func,\n  getAllAccounts: func,\n  getAllForms: func\n};\n\nexport const ConnectedSoftware = connect(\n  state => ({\n    prototypes: state.explorer.prototypes,\n    datatypes: state.explorer.datatypes,\n    rawAccounts: state.explorer.rawAccounts,\n    forms: state.explorer.forms,\n    loadingPrototypes: state.explorer.flags.prototypes.loading,\n    loadingDatatypes: state.explorer.flags.datatypes.loading,\n    loadingAccounts: state.explorer.flags.accounts.loading,\n    loadingForms: state.explorer.flags.forms.loading\n  }),\n  dispatch => ({\n    getAllPrototypes: () => dispatch(getAllPrototypesThunk()),\n    getAllDatatypes: () => dispatch(getAllDatatypesThunk()),\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'collection' })),\n    getAllForms: () => dispatch(getAllFormsThunk())\n  })\n)(Software);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func } from 'prop-types';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiArchiveArrowDownOutline } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport {\n  getAllPrototypesThunk,\n  getAllDatatypesThunk,\n  loadAllAccountsThunk\n} from 'explorer/store/thunks';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport { downloadFile } from '../../utils/downloadFile';\n\nimport './Packaging.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.packager';\n\nexport class Packaging extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      process: null,\n      isProcessLoading: true,\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined,\n      formValues: {},\n      isDownloadDisabled: true,\n      isEmailDisabled: true\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      prototypes,\n      datatypes,\n      rawAccounts,\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      getAllPrototypes,\n      getAllDatatypes,\n      getAllAccounts\n    } = this.props;\n\n    if (!loadingPrototypes && prototypes.length === 0) {\n      getAllPrototypes();\n    }\n\n    if (!loadingDatatypes && datatypes.length === 0) {\n      getAllDatatypes();\n    }\n\n    if (!loadingAccounts && rawAccounts.length === 0) {\n      getAllAccounts();\n    }\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${processName}`);\n      if (response.data.data && response.data.data.processes && response.data.data.processes[0]) {\n        this.setState({ process: response.data.data.processes[0], isProcessLoading: false });\n      }\n    } catch (errors) {\n      this.setState({ isProcessLoading: false });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const { process, isProcessLoading } = this.state;\n    const {\n      loadingPrototypes,\n      loadingDatatypes,\n      loadingAccounts,\n      datatypes,\n      prototypes\n    } = this.props;\n    let parameters = null;\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined,\n                    formValues: formatParameters(values),\n                    isDownloadDisabled: true,\n                    isEmailDisabled: true\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"packaging-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Package (HW, SW) file for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>Repo working directory, repo SSH connection</p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Paper.Footer.Left>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isDownloadDisabled}\n                      data-qa=\"download-btn\"\n                      onClick={() => {\n                        downloadFile(this.state.formValues);\n                        this.setState({ isEmailDisabled: false });\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isEmailDisabled}\n                      data-qa=\"email-btn\"\n                      onClick={() => this.sendEmail()}\n                    >\n                      Email\n                    </Button>\n                  </Paper.Footer.Left>\n                  <Paper.Footer.Right>\n                    <Button\n                      className=\"btn submit\"\n                      type=\"submit\"\n                      disabled={!dirty || isSubmitting}\n                      variant=\"contained\"\n                      data-qa=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Packaging Process ',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiArchiveArrowDownOutline} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n\n            try {\n              await RestClient.get(\n                '/execdashboard/update',\n                formatParameters({\n                  lms_repo: this.state.formValues.repo_working_dir,\n                  repo_shell: this.state.formValues.repo_shell\n                })\n              );\n              this.setState({\n                output: outputReponse.data.data.outputs,\n                invocation,\n                outputOpen: invocation.status !== 'SUCCEEDED',\n                isDownloadDisabled: invocation.status !== 'SUCCEEDED'\n              });\n            } catch (error) {\n              console.log('[collection-packaging-exec-dashboard-update] error: ', error); // eslint-disable-line\n              this.setState({ outputOpen: false });\n            }\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        type=\"packaging\"\n        output={this.state.output}\n        processName={processName}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        messages={['Preparing job...', 'Executing job...', 'Preparing files...']}\n      />\n    );\n  };\n\n  sendEmail = () => {\n    const body = 'Please attach the downloaded file. It should be named \"ct_cpuq.tar\".';\n    window.location.href = `mailto:?subject=Packaging files&body=${encodeURIComponent(body)}`;\n  };\n\n  chooseField(parameter) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n      />\n    );\n  }\n}\n\nPackaging.propTypes = {\n  prototypes: array,\n  datatypes: array,\n  rawAccounts: array,\n  loadingPrototypes: bool,\n  loadingDatatypes: bool,\n  loadingAccounts: bool,\n  getAllPrototypes: func,\n  getAllDatatypes: func,\n  getAllAccounts: func\n};\n\nexport const ConnectedPackaging = connect(\n  state => ({\n    prototypes: state.explorer.prototypes,\n    datatypes: state.explorer.datatypes,\n    rawAccounts: state.explorer.rawAccounts,\n    loadingPrototypes: state.explorer.flags.prototypes.loading,\n    loadingDatatypes: state.explorer.flags.datatypes.loading,\n    loadingAccounts: state.explorer.flags.accounts.loading\n  }),\n  dispatch => ({\n    getAllPrototypes: () => dispatch(getAllPrototypesThunk()),\n    getAllDatatypes: () => dispatch(getAllDatatypesThunk()),\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'collection' }))\n  })\n)(Packaging);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async query => {\n  const formatQuery = {\n    lms_repo: query.repo_working_dir,\n    repo_shell: query.repo_shell\n  };\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_PACKAGING, formatQuery);\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'ct_cpuq.tar';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import { en } from './en';\n\nexport const i18nMessages = {\n  en,\n};\n","import dashboard from './dashboard.json';\nimport general from './general.json';\nimport session from './session.json';\nimport header from './header.json';\n\nexport const en = {\n  ...dashboard,\n  ...general,\n  ...session,\n  ...header,\n};\n","import 'babel-polyfill';\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport store from 'core/store';\n\nimport { App } from './app';\nimport { CONSTANTS } from './app/config';\nimport { i18nMessages } from './i18n';\n\nimport './style.scss';\n\nconst provider = (\n  <IntlProvider locale={CONSTANTS.INTL} messages={i18nMessages[CONSTANTS.INTL]}>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.NODE_ENV === 'development' ? '/' : '/ui/#/'}>\n        <Switch>\n          <Route component={App} path=\"/\" />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  </IntlProvider>\n);\n\nrender(provider, document.getElementById('root'));\n","var map = {\n\t\"./af\": 662,\n\t\"./af.js\": 662,\n\t\"./ar\": 663,\n\t\"./ar-dz\": 664,\n\t\"./ar-dz.js\": 664,\n\t\"./ar-kw\": 665,\n\t\"./ar-kw.js\": 665,\n\t\"./ar-ly\": 666,\n\t\"./ar-ly.js\": 666,\n\t\"./ar-ma\": 667,\n\t\"./ar-ma.js\": 667,\n\t\"./ar-sa\": 668,\n\t\"./ar-sa.js\": 668,\n\t\"./ar-tn\": 669,\n\t\"./ar-tn.js\": 669,\n\t\"./ar.js\": 663,\n\t\"./az\": 670,\n\t\"./az.js\": 670,\n\t\"./be\": 671,\n\t\"./be.js\": 671,\n\t\"./bg\": 672,\n\t\"./bg.js\": 672,\n\t\"./bm\": 673,\n\t\"./bm.js\": 673,\n\t\"./bn\": 674,\n\t\"./bn.js\": 674,\n\t\"./bo\": 675,\n\t\"./bo.js\": 675,\n\t\"./br\": 676,\n\t\"./br.js\": 676,\n\t\"./bs\": 677,\n\t\"./bs.js\": 677,\n\t\"./ca\": 678,\n\t\"./ca.js\": 678,\n\t\"./cs\": 679,\n\t\"./cs.js\": 679,\n\t\"./cv\": 680,\n\t\"./cv.js\": 680,\n\t\"./cy\": 681,\n\t\"./cy.js\": 681,\n\t\"./da\": 682,\n\t\"./da.js\": 682,\n\t\"./de\": 683,\n\t\"./de-at\": 684,\n\t\"./de-at.js\": 684,\n\t\"./de-ch\": 685,\n\t\"./de-ch.js\": 685,\n\t\"./de.js\": 683,\n\t\"./dv\": 686,\n\t\"./dv.js\": 686,\n\t\"./el\": 687,\n\t\"./el.js\": 687,\n\t\"./en-SG\": 688,\n\t\"./en-SG.js\": 688,\n\t\"./en-au\": 689,\n\t\"./en-au.js\": 689,\n\t\"./en-ca\": 690,\n\t\"./en-ca.js\": 690,\n\t\"./en-gb\": 691,\n\t\"./en-gb.js\": 691,\n\t\"./en-ie\": 692,\n\t\"./en-ie.js\": 692,\n\t\"./en-il\": 693,\n\t\"./en-il.js\": 693,\n\t\"./en-nz\": 694,\n\t\"./en-nz.js\": 694,\n\t\"./eo\": 695,\n\t\"./eo.js\": 695,\n\t\"./es\": 696,\n\t\"./es-do\": 697,\n\t\"./es-do.js\": 697,\n\t\"./es-us\": 698,\n\t\"./es-us.js\": 698,\n\t\"./es.js\": 696,\n\t\"./et\": 699,\n\t\"./et.js\": 699,\n\t\"./eu\": 700,\n\t\"./eu.js\": 700,\n\t\"./fa\": 701,\n\t\"./fa.js\": 701,\n\t\"./fi\": 702,\n\t\"./fi.js\": 702,\n\t\"./fo\": 703,\n\t\"./fo.js\": 703,\n\t\"./fr\": 704,\n\t\"./fr-ca\": 705,\n\t\"./fr-ca.js\": 705,\n\t\"./fr-ch\": 706,\n\t\"./fr-ch.js\": 706,\n\t\"./fr.js\": 704,\n\t\"./fy\": 707,\n\t\"./fy.js\": 707,\n\t\"./ga\": 708,\n\t\"./ga.js\": 708,\n\t\"./gd\": 709,\n\t\"./gd.js\": 709,\n\t\"./gl\": 710,\n\t\"./gl.js\": 710,\n\t\"./gom-latn\": 711,\n\t\"./gom-latn.js\": 711,\n\t\"./gu\": 712,\n\t\"./gu.js\": 712,\n\t\"./he\": 713,\n\t\"./he.js\": 713,\n\t\"./hi\": 714,\n\t\"./hi.js\": 714,\n\t\"./hr\": 715,\n\t\"./hr.js\": 715,\n\t\"./hu\": 716,\n\t\"./hu.js\": 716,\n\t\"./hy-am\": 717,\n\t\"./hy-am.js\": 717,\n\t\"./id\": 718,\n\t\"./id.js\": 718,\n\t\"./is\": 719,\n\t\"./is.js\": 719,\n\t\"./it\": 720,\n\t\"./it-ch\": 721,\n\t\"./it-ch.js\": 721,\n\t\"./it.js\": 720,\n\t\"./ja\": 722,\n\t\"./ja.js\": 722,\n\t\"./jv\": 723,\n\t\"./jv.js\": 723,\n\t\"./ka\": 724,\n\t\"./ka.js\": 724,\n\t\"./kk\": 725,\n\t\"./kk.js\": 725,\n\t\"./km\": 726,\n\t\"./km.js\": 726,\n\t\"./kn\": 727,\n\t\"./kn.js\": 727,\n\t\"./ko\": 728,\n\t\"./ko.js\": 728,\n\t\"./ku\": 729,\n\t\"./ku.js\": 729,\n\t\"./ky\": 730,\n\t\"./ky.js\": 730,\n\t\"./lb\": 731,\n\t\"./lb.js\": 731,\n\t\"./lo\": 732,\n\t\"./lo.js\": 732,\n\t\"./lt\": 733,\n\t\"./lt.js\": 733,\n\t\"./lv\": 734,\n\t\"./lv.js\": 734,\n\t\"./me\": 735,\n\t\"./me.js\": 735,\n\t\"./mi\": 736,\n\t\"./mi.js\": 736,\n\t\"./mk\": 737,\n\t\"./mk.js\": 737,\n\t\"./ml\": 738,\n\t\"./ml.js\": 738,\n\t\"./mn\": 739,\n\t\"./mn.js\": 739,\n\t\"./mr\": 740,\n\t\"./mr.js\": 740,\n\t\"./ms\": 741,\n\t\"./ms-my\": 742,\n\t\"./ms-my.js\": 742,\n\t\"./ms.js\": 741,\n\t\"./mt\": 743,\n\t\"./mt.js\": 743,\n\t\"./my\": 744,\n\t\"./my.js\": 744,\n\t\"./nb\": 745,\n\t\"./nb.js\": 745,\n\t\"./ne\": 746,\n\t\"./ne.js\": 746,\n\t\"./nl\": 747,\n\t\"./nl-be\": 748,\n\t\"./nl-be.js\": 748,\n\t\"./nl.js\": 747,\n\t\"./nn\": 749,\n\t\"./nn.js\": 749,\n\t\"./pa-in\": 750,\n\t\"./pa-in.js\": 750,\n\t\"./pl\": 751,\n\t\"./pl.js\": 751,\n\t\"./pt\": 752,\n\t\"./pt-br\": 753,\n\t\"./pt-br.js\": 753,\n\t\"./pt.js\": 752,\n\t\"./ro\": 754,\n\t\"./ro.js\": 754,\n\t\"./ru\": 755,\n\t\"./ru.js\": 755,\n\t\"./sd\": 756,\n\t\"./sd.js\": 756,\n\t\"./se\": 757,\n\t\"./se.js\": 757,\n\t\"./si\": 758,\n\t\"./si.js\": 758,\n\t\"./sk\": 759,\n\t\"./sk.js\": 759,\n\t\"./sl\": 760,\n\t\"./sl.js\": 760,\n\t\"./sq\": 761,\n\t\"./sq.js\": 761,\n\t\"./sr\": 762,\n\t\"./sr-cyrl\": 763,\n\t\"./sr-cyrl.js\": 763,\n\t\"./sr.js\": 762,\n\t\"./ss\": 764,\n\t\"./ss.js\": 764,\n\t\"./sv\": 765,\n\t\"./sv.js\": 765,\n\t\"./sw\": 766,\n\t\"./sw.js\": 766,\n\t\"./ta\": 767,\n\t\"./ta.js\": 767,\n\t\"./te\": 768,\n\t\"./te.js\": 768,\n\t\"./tet\": 769,\n\t\"./tet.js\": 769,\n\t\"./tg\": 770,\n\t\"./tg.js\": 770,\n\t\"./th\": 771,\n\t\"./th.js\": 771,\n\t\"./tl-ph\": 772,\n\t\"./tl-ph.js\": 772,\n\t\"./tlh\": 773,\n\t\"./tlh.js\": 773,\n\t\"./tr\": 774,\n\t\"./tr.js\": 774,\n\t\"./tzl\": 775,\n\t\"./tzl.js\": 775,\n\t\"./tzm\": 776,\n\t\"./tzm-latn\": 777,\n\t\"./tzm-latn.js\": 777,\n\t\"./tzm.js\": 776,\n\t\"./ug-cn\": 778,\n\t\"./ug-cn.js\": 778,\n\t\"./uk\": 779,\n\t\"./uk.js\": 779,\n\t\"./ur\": 780,\n\t\"./ur.js\": 780,\n\t\"./uz\": 781,\n\t\"./uz-latn\": 782,\n\t\"./uz-latn.js\": 782,\n\t\"./uz.js\": 781,\n\t\"./vi\": 783,\n\t\"./vi.js\": 783,\n\t\"./x-pseudo\": 784,\n\t\"./x-pseudo.js\": 784,\n\t\"./yo\": 785,\n\t\"./yo.js\": 785,\n\t\"./zh-cn\": 786,\n\t\"./zh-cn.js\": 786,\n\t\"./zh-hk\": 787,\n\t\"./zh-hk.js\": 787,\n\t\"./zh-tw\": 788,\n\t\"./zh-tw.js\": 788\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1402;","/**\n * A IFFE to ignore warnings of prop-types validation\n * from Material-UI components used with scoped-css-loader.\n *\n * They are invalid and will not appear in prod builds, they are\n * cumbersome for development for now.\n *\n * TODO: investigate if there is another option when there is time.\n * For now it looks like there is not.\n */\n\n/* eslint-disable */\n(function clearMUIDataVWarnings() {\n  const error = console.error.bind(console);\n  const partial = /Warning:.*data-v-/;\n\n  console.error = (message, ...args) => {\n    if (typeof message === 'string' && message.search(partial) !== -1) {\n      return;\n    }\n\n    error(message, ...args);\n  };\n})();\n\n/* eslint-enable */\n"],"sourceRoot":""}