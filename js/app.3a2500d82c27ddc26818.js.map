{"version":3,"sources":["webpack:///./src/app/config.js","webpack:///./src/app/executive-dashboard/store/actions/index.js","webpack:///./src/app/shared/components/form/editors/Generic.jsx","webpack:///./src/app/explorer/store/actions/index.js","webpack:///./src/app/shared/components/overlays/Result/Result.jsx","webpack:///./src/app/explorer/store/thunks/index.js","webpack:///./src/app/explorer/SystemExplorerFeatureUtil.js","webpack:///./src/app/users-manager/store/actions/index.js","webpack:///./src/app/users-manager/groups/store/actions.js","webpack:///./src/app/shared/lib/cron-validator/cron-validator.js","webpack:///./src/app/entities/actions.js","webpack:///./src/app/session/store/actions/index.js","webpack:///./src/app/shared/store/actions/index.js","webpack:///./src/app/explorer/store/selectors/index.js","webpack:///./src/app/shared/components/tooltip/Tooltip.jsx","webpack:///./src/app/entities/utils/privileges.js","webpack:///./src/app/shared/components/form/editors/Custom.jsx","webpack:///./src/app/job-process/store/constants.js","webpack:///./src/app/license-allocation/store/actions/index.js","webpack:///./src/app/executive-dashboard/components/OperatingSystemsTile/OperatingSystemsConstants.js","webpack:///./src/app/shared/components/form/SubmitButton.jsx","webpack:///./src/app/users-manager/components/AvatarCard/AvatarCard.jsx","webpack:///./src/app/shared/components/form/editors/field-level-validations.js","webpack:///./src/app/executive-dashboard/store/thunks/index.js","webpack:///./src/app/license-collection/utils/formatTimePeriod.js","webpack:///./src/app/session/store/selectors/index.js","webpack:///./src/app/users-manager/store/thunks/index.js","webpack:///./src/app/shared/api/invocation.js","webpack:///./src/app/executive-dashboard/components/ServersNetworkTile/ServersNetworkConstants.js","webpack:///./src/app/license-collection/utils/formikFormatter.js","webpack:///./src/app/shared/store/state/index.js","webpack:///./src/app/users-manager/groups/store/thunks.js","webpack:///./src/app/executive-dashboard/components/LicensableFeaturesGraph/LicensableFeaturesConstants.js","webpack:///./src/app/session/store/state/index.js","webpack:///./src/app/shared/components/form/parameters/variants.jsx","webpack:///./src/app/job-process/store/selectors.js","webpack:///./src/app/core/components/Ensure/Ensure.jsx","webpack:///./src/app/users-manager/components/SearchableList/SearchableList.jsx","webpack:///./src/app/entities/selectors.js","webpack:///./src/app/users-manager/store/mappers/index.js","webpack:///./src/app/license-collection/utils/copyToClipboard.js","webpack:///./src/app/license-collection/controls/TextField/TextField.jsx","webpack:///./src/app/shared/components/layout/NavigationTab/NavigationTab.jsx","webpack:///./src/app/users-manager/store/selectors/index.js","webpack:///./src/app/explorer/components/NavigationTab/NavigationTab.jsx","webpack:///./src/app/license-collection/utils/normalizeParameter.jsx","webpack:///./src/app/license-collection/controls/DropdownField/DropdownField.jsx","webpack:///./src/app/license-collection/components/OutputModal/OutputModal.jsx","webpack:///./src/app/shared/api/accounts.js","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSqlStatementsUtil.js","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsList/OptionsList.jsx","webpack:///./src/app/executive-dashboard/components/ChartTooltip/ChartTooltip.jsx","webpack:///./src/app/shared/api/schedule.js","webpack:///./src/app/explorer/store/mappers/index.js","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/SystemExplorerViewMode.js","webpack:///./src/app/core/store/index.js","webpack:///./src/app/entities/components/Switch.jsx","webpack:///./src/app/shared/api/protocols.js","webpack:///./src/app/job-process/job-parameters.jsx","webpack:///./src/app/shared/components/form/parameters/normalizeParameter.js","webpack:///./src/app/job-process/containers/notifications/notifications.jsx","webpack:///./src/app/shared/api/process.js","webpack:///./src/app/shared/components/range-date-picker/constants.js","webpack:///./src/app/shared/components/form/parameters/index.jsx","webpack:///./src/app/shared/components/simple-search-input/simple-search-input.jsx","webpack:///./src/app/core/components/Header/Header.jsx","webpack:///./src/app/dashboard/store/state/index.js","webpack:///./src/app/dashboard/store/actions/index.js","webpack:///./src/app/explorer/containers/AddServerCard/AddServerCard.jsx","webpack:///./src/app/explorer/containers/AddDatabaseCard/AddDatabaseCard.jsx","webpack:///./src/app/explorer/containers/ImportCSV/ImportCSV.jsx","webpack:///./src/app/shared/api/delete.js","webpack:///./src/app/entities/mappers.js","webpack:///./src/app/entities/utils/security-areas.js","webpack:///./src/app/explorer/components/ActionCard/ActionCard.jsx","webpack:///./src/app/explorer/components/CardsLayout/CardsLayout.jsx","webpack:///./src/app/executive-dashboard/components/FullScreenIcon/FullScreenIcon.jsx","webpack:///./src/app/shared/lib/want/index.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/ChangePassword.jsx","webpack:///./src/app/license-allocation/store/thunks/index.js","webpack:///./src/app/license-allocation/store/selectors/index.js","webpack:///./src/app/shared/components/overlays/Modal/Modal.jsx","webpack:///./src/app/shared/api/namespace.js","webpack:///./src/app/shared/api/form.js","webpack:///./src/app/entities/components/form-actions/FormEditor.jsx","webpack:///./src/app/executive-dashboard/store/mappers/index.js","webpack:///./src/app/shared/components/center/center.component.jsx","webpack:///./src/app/shared/lib/react-dates/isBeforeDay.js","webpack:///./src/app/shared/components/LightTooltip/LightTooltip.jsx","webpack:///./src/app/shared/components/layout/Overflow/Overflow.jsx","webpack:///./src/app/shared/components/overlays/ModalHeader/ModalHeader.jsx","webpack:///./src/app/shared/components/controls/Checkbox/Checkbox.jsx","webpack:///./src/app/shared/lib/polling/index.js","webpack:///./src/app/explorer/containers/Forms/ServerForm.jsx","webpack:///./src/app/shared/api/datatypes.js","webpack:///./src/app/explorer/containers/Forms/DatabaseForm.jsx","webpack:///./src/app/shared/lib/download-file/download-file.js","webpack:///./src/app/jobs/actions/delete/DeleteJobModal.jsx","webpack:///./src/app/jobs/containers/Schedule/Schedule.jsx","webpack:///./src/app/entities/components/namespace-actions/NewNamespace.jsx","webpack:///./src/app/shared/components/form/SubmitButtonNoDirty.jsx","webpack:///./src/app/entities/components/form-actions/FormModal.jsx","webpack:///./src/app/explorer/containers/Settings/DatabaseSettings.jsx","webpack:///./src/app/license-collection/utils/getOutputText.js","webpack:///./src/app/job-process/store/actions.js","webpack:///./src/app/license-collection/utils/sendToEmail.js","webpack:///./src/app/executive-dashboard/components/ServersNetworkTile/Toolbar/NetworkToolbar.jsx","webpack:///./src/app/shared/components/overlays/SuccessModal/SuccessModal.jsx","webpack:///./src/app/session/store/effects/be-version/be-version.effect.js","webpack:///./src/app/jobs/components/total-jobs-count/TotalJobsCount.jsx","webpack:///./src/app/shared/api/alias.js","webpack:///./src/app/session/store/reducers/reducer.js","webpack:///./src/app/dashboard/store/tasks.js","webpack:///./src/app/dashboard/store/reducers/reducer.js","webpack:///./src/app/shared/store/reducers/reducer.js","webpack:///./src/app/core/store/reducers/reducer.js","webpack:///./src/app/core/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/wishes.jsx","webpack:///./src/app/shared/components/form/editors/filters.js","webpack:///./src/app/entities/components/form-actions/utils.js","webpack:///./src/app/shared/api/privileges.js","webpack:///./src/app/explorer/components/DbObjects/Sidebar.jsx","webpack:///./src/app/explorer/components/DbObjects/Viewer.jsx","webpack:///./src/app/license-collection/utils/formatMemoryZiseGb.js","webpack:///./src/app/explorer/components/StatusLabel/StatusLabel.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/constants.jsx","webpack:///./src/app/job-process/store/tasks.js","webpack:///./src/app/executive-dashboard/ExecutiveDashboard.jsx","webpack:///./src/app/license-collection/components/ListOutput/ListOutput.jsx","webpack:///./src/app/session/store/reducers/index.js","webpack:///./src/app/shared/lib/bind-reducer/bind-reducer.js","webpack:///./src/app/shared/lib/action-creator/action-states.js","webpack:///./src/app/shared/lib/action-creator/action-creator.class.js","webpack:///./src/app/shared/lib/slugify/slugify.js","webpack:///./src/app/shared/lib/create-url/create-url.js","webpack:///./src/app/shared/lib/number-pretty/number-pretty.js","webpack:///./src/app/shared/lib/smart-number/smart-number.js","webpack:///./src/app/shared/lib/capitalize-first-letter/capitalize-first-letter.js","webpack:///./src/app/shared/lib/patterns/email.js","webpack:///./src/app/shared/lib/patterns/phone-number.js","webpack:///./src/app/shared/lib/patterns/url.js","webpack:///./src/app/shared/lib/random-generator/string.js","webpack:///./src/app/shared/lib/random-generator/unique-id.js","webpack:///./src/app/shared/lib/function-placeholder/index.js","webpack:///./src/app/shared/lib/delay/index.js","webpack:///./src/app/shared/lib/react-dates/isInclusivelyAfterDay.js","webpack:///./src/app/shared/lib/redux-utils/actions.utils.js","webpack:///./src/app/shared/lib/redux-utils/reducers.utils.js","webpack:///./src/app/shared/lib/workload/parseData.js","webpack:///./src/app/session/store/effects/index.js","webpack:///./src/app/shared/lib/rest/try-async.js","webpack:///./src/app/shared/lib/rest/rest-client.js","webpack:///./src/app/session/pages/login/login.page.jsx","webpack:///./src/app/session/components/container/container.component.jsx","webpack:///./src/app/session/pages/login/components/form/form.component.jsx","webpack:///./src/app/shared/components/rest-errors/rest-errors.component.jsx","webpack:///./src/app/shared/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/workload-graph/workload-graph.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-tooltip/custom-tooltip.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-axis-tick/custom-axis-tick.component.jsx","webpack:///./src/app/shared/components/circle-img/circle-img.component.jsx","webpack:///./src/app/shared/components/number-label/number-label.component.jsx","webpack:///./src/app/shared/components/string-label/string-label.component.jsx","webpack:///./src/app/shared/components/search-input/search-input.component.jsx","webpack:///./src/app/shared/components/dropdown/dropdown.component.jsx","webpack:///./src/app/shared/components/small-input/small-input.component.jsx","webpack:///./src/app/shared/components/single-date-picker/single-date-picker.component.jsx","webpack:///./src/app/shared/components/range-date-picker/range-date-picker.component.jsx","webpack:///./src/app/shared/components/JobResults/JobResults.jsx","webpack:///./src/app/shared/components/switch/Switch.jsx","webpack:///./src/app/shared/components/Table/Table.jsx","webpack:///./src/app/session/pages/logout/logout.page.jsx","webpack:///./src/app/dashboard/root.module.jsx","webpack:///./src/app/shared/components/loaders/Loader/Loader.jsx","webpack:///./src/app/shared/components/loaders/ParameterLoader/ParameterLoader.jsx","webpack:///./src/app/shared/components/layout/Paper/Paper.jsx","webpack:///./src/app/shared/components/layout/Main/Main.jsx","webpack:///./src/app/shared/components/layout/Section/Section.jsx","webpack:///./src/app/shared/components/layout/ScrollableContainer/ScrollableContainer.jsx","webpack:///./src/app/shared/components/layout/Column/Column.jsx","webpack:///./src/app/shared/components/layout/Row/Row.jsx","webpack:///./src/app/dashboard/containers/status/status.container.jsx","webpack:///./src/app/dashboard/containers/status/components/daemon/daemon.component.jsx","webpack:///./src/app/dashboard/containers/status/components/job-status/job-status.component.jsx","webpack:///./src/app/dashboard/containers/search-area/search-area.container.jsx","webpack:///./src/app/dashboard/components/search-results/search-results.component.jsx","webpack:///./src/app/shared/components/controls/Input/Input.jsx","webpack:///./src/app/shared/components/controls/Button/Button.jsx","webpack:///./src/app/shared/components/overlays/ModalFooter/ModalFooter.jsx","webpack:///./src/app/shared/components/overlays/ErrorModal/ErrorModal.jsx","webpack:///./src/app/shared/components/overlays/ConfirmationModal/ConfirmationModal.jsx","webpack:///./src/app/dashboard/store/reducers/index.js","webpack:///./src/app/shared/store/reducers/index.js","webpack:///./src/app/shared/store/effects/index.js","webpack:///./src/app/root.module.jsx","webpack:///./src/app/core/root.layout.jsx","webpack:///./src/app/jobs/root.module.jsx","webpack:///./src/app/jobs/components/job-item/job-item.component.jsx","webpack:///./src/app/jobs/components/job-status/job-status.component.jsx","webpack:///./src/app/jobs/containers/filters/filters.container.jsx","webpack:///./src/app/shared/store/selectors/connections.js","webpack:///./src/app/jobs/containers/jobs-invocations/jobs-invocations.container.jsx","webpack:///./src/app/shared/lib/deep-copy/deep-copy.js","webpack:///./src/app/entities/root.module.jsx","webpack:///./src/app/users-manager/root.jsx","webpack:///./src/app/users-manager/users/root.jsx","webpack:///./src/app/users-manager/groups/root.jsx","webpack:///./src/app/explorer/root.jsx","webpack:///./src/app/explorer/treeview/root.jsx","webpack:///./src/app/explorer/components/DbObjects/DbObjects.jsx","webpack:///./src/app/core/containers/sidebar/sidebar.container.jsx","webpack:///./src/app/core/containers/sidebar/components/favorites/favorites.component.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/navigation.component.jsx","webpack:///./src/app/core/containers/sidebar/components/notification/notification.component.jsx","webpack:///./src/app/core/containers/sidebar/components/user-menu/user-menu.component.jsx","webpack:///./src/app/core/containers/sidebar/components/compile/compile.component.jsx","webpack:///./src/app/job-process/root.module.jsx","webpack:///./src/app/session/store/actions/session.action.js","webpack:///./src/app/session/store/effects/check-authorization/check-authorization.effect.js","webpack:///./src/app/constants.js","webpack:///./src/app/session/store/effects/login/login.effect.js","webpack:///./src/app/session/store/effects/logout/logout.effect.js","webpack:///./src/assets/images/login_graphic.svg","webpack:///./src/assets/images/vendita_logo_blue.svg","webpack:///./src/assets/images/mas_logo_blue.svg","webpack:///./src/app/shared/components/range-date-picker/range-date-range-picker.container.jsx","webpack:///./src/app/shared/store/actions/jobs.action.js","webpack:///./src/app/shared/store/actions/process.action.js","webpack:///./src/app/shared/store/actions/global-filters.action.js","webpack:///./src/app/dashboard/store/actions/filter-status.action.js","webpack:///./src/app/shared/api/daemon.js","webpack:///./src/app/dashboard/store/selectors/index.js","webpack:///./src/app/dashboard/containers/servers-list/ServersList.jsx","webpack:///./src/app/shared/store/effects/jobs/jobs.effect.js","webpack:///./src/app/shared/store/effects/connections/connections.effect.js","webpack:///./src/app/shared/store/effects/search-jobs/search-jobs.effect.js","webpack:///./src/app/shared/store/effects/search-processes/search-processes.effect.js","webpack:///./src/app/shared/store/effects/global-filters/global-filters.effect.js","webpack:///./src/app/users-manager/store/reducers/index.js","webpack:///./src/app/users-manager/groups/store/reducer.js","webpack:///./src/app/explorer/store/reducers/index.js","webpack:///./src/app/executive-dashboard/store/reducers/index.js","webpack:///./src/app/license-allocation/store/reducers/index.js","webpack:///./src/app/entities/reducer.js","webpack:///./src/app/dashboard/store/reducers/daemon.js","webpack:///./src/app/job-process/store/reducer.js","webpack:///./src/app/core/store/middlewares.js","webpack:///./src/app/core/store/reducers/index.js","webpack:///./src/app/core/store/actions/notification.action.js","webpack:///./src/app/jobs/components/job-list/job-list.component.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ScheduleModal/ScheduleModal.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ViewTabs/ViewTabs.jsx","webpack:///./src/app/jobs/containers/Schedule/components/Documentation/Documentation.jsx","webpack:///./src/app/jobs/containers/Schedule/containers/ScheduleForm/ScheduleForm.jsx","webpack:///./src/app/shared/components/form/editors/formatters.js","webpack:///./src/app/shared/components/form/parameters/extractDefault.js","webpack:///./src/app/job-process/components/notification-groups/notification-groups.jsx","webpack:///./src/app/job-process/components/notification-users/notification-users.jsx","webpack:///./src/app/job-process/components/notification-events/notification-events.jsx","webpack:///./src/app/job-process/components/notification-list/notification-list.jsx","webpack:///./src/app/entities/components/Entity.jsx","webpack:///./src/app/entities/containers/SelectedEntity.jsx","webpack:///./src/app/entities/components/ActionsNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/EditNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/DeleteNamespace.jsx","webpack:///./src/app/entities/components/ActionsConstant.jsx","webpack:///./src/app/shared/api/constant.js","webpack:///./src/app/entities/components/ActionsProcess.jsx","webpack:///./src/app/entities/components/process-actions/EditProcessModal.jsx","webpack:///./src/app/entities/components/process-actions/ProcessEditor.jsx","webpack:///./src/app/entities/components/ActionsForm.jsx","webpack:///./src/app/entities/components/form-actions/FormParameters.jsx","webpack:///./src/app/entities/components/ActionsRoot.jsx","webpack:///./src/app/entities/components/ActionsPrototype.jsx","webpack:///./src/app/entities/components/ActionsSchedule.jsx","webpack:///./src/app/entities/components/ActionsCommon.jsx","webpack:///./src/app/entities/components/common-actions/DeleteEntity.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesModal.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesEditor.jsx","webpack:///./src/app/users-manager/components/HeaderPageSwitch/HeaderPageSwitch.jsx","webpack:///./src/app/users-manager/users/containers/UserLoader.jsx","webpack:///./src/app/users-manager/users/pages/UserView/UserView.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/Privileges.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/UserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserDetails.jsx","webpack:///./src/app/users-manager/users/pages/UserView/components/UserDatesBox.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserInfo.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/AccountExpiration.jsx","webpack:///./src/app/users-manager/components/UserCard/UserCard.jsx","webpack:///./src/app/users-manager/users/pages/NoUsersSelected.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/CreateNewUser.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/NewUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/components/GroupCard/GroupCard.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/GroupView.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/Privileges.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/GroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditGroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditSubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/ConnectionsNumber.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/CreateNewGroup.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/pages/NoGroupSelected.jsx","webpack:///./src/app/explorer/treeview/layers/Dbms/Dbms.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/ServerList.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/containers/Server/Server.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/DatabaseList.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/containers/Database/Database.jsx","webpack:///./src/app/explorer/containers/Breadcrumbs/Breadcrumbs.jsx","webpack:///./src/app/explorer/components/ContentSwitch/ContentSwitch.jsx","webpack:///./src/app/explorer/containers/AllDbms/AllDbms.jsx","webpack:///./src/app/explorer/containers/AllServers/AllServers.jsx","webpack:///./src/app/explorer/containers/Settings/ServerSettings.jsx","webpack:///./src/app/explorer/containers/AllDatabases/AllDatabases.jsx","webpack:///./src/app/explorer/containers/Workload/Workload.jsx","webpack:///./src/app/explorer/containers/License/License.jsx","webpack:///./src/app/explorer/containers/License/Report/Report.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesUsage/FeaturesUsage.jsx","webpack:///./src/app/explorer/components/LicenseReporting/UnusedFeatures/UnusedFeatures.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesTable/FeaturesTable.jsx","webpack:///./src/app/explorer/containers/Storage/Storage.jsx","webpack:///./src/app/explorer/containers/Storage/MSSQL/MssqlStorage.jsx","webpack:///./src/app/explorer/containers/Objects/Objects.jsx","webpack:///./src/app/explorer/containers/Sessions/Sessions.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/CommonSessionsTable.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/MssqlSessionsTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSQLStatements.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/charts/ElapsedTimeChart.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/OracleTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/PostgresTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MysqlTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MssqlTopSQLTable.jsx","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/ToggleSystemExplorerView.jsx","webpack:///./src/app/explorer/components/TableView/SystemExplorerTable.jsx","webpack:///./src/app/shared/api/compile.js","webpack:///./src/assets/images/mas_logo_white.svg","webpack:///./src/assets/images/vendita_logo_white.svg","webpack:///./src/app/job-process/job-view.jsx","webpack:///./src/app/job-process/job-form.jsx","webpack:///./src/app/job-process/containers/output/output.jsx","webpack:///./src/app/job-process/components/ListOutput/ListOutput.jsx","webpack:///./src/app/job-process/components/JobStatus/JobStatus.jsx","webpack:///./src/app/executive-dashboard/containers/ToggleSelection/ToggleSelection.jsx","webpack:///./src/app/executive-dashboard/components/ServersNetworkTile/ServersNetworkTile.jsx","webpack:///./src/app/executive-dashboard/components/LicensableFeaturesGraph/LicensableFeaturesTile.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionItem/OptionItem.jsx","webpack:///./src/app/executive-dashboard/components/OperatingSystemsTile/OperatingSystemsTile.jsx","webpack:///./src/app/executive-dashboard/components/LicenseDeltaTile/LicenseDeltaTile.jsx","webpack:///./src/app/executive-dashboard/components/MSSQL/LicenseUsageTile/LicenseUsageTile.jsx","webpack:///./src/app/executive-dashboard/components/MSSQL/ServersNetworkTile/ServersNetworkTile.jsx","webpack:///./src/app/executive-dashboard/components/MSSQL/EnvironmentUsageTile/EnvironmentUsageTile.jsx","webpack:///./src/app/executive-dashboard/components/MSSQL/DbVersionAndOsTile/DbVersionAndOsTile.jsx","webpack:///./src/app/license-collection/LicenseCollection.jsx","webpack:///./src/app/license-collection/components/Navigation/Navigation.jsx","webpack:///./src/app/license-collection/Pages/Hardware/Hardware.jsx","webpack:///./src/app/license-collection/utils/extractDefault.js","webpack:///./src/app/license-collection/Pages/Software/Software.jsx","webpack:///./src/app/license-collection/Pages/VMware/VMware.jsx","webpack:///./src/app/license-collection/Pages/Packaging/Packaging.jsx","webpack:///./src/app/license-collection/utils/downloadFile.js","webpack:///./src/app/license-collection/Pages/PreSoftware/PreSoftware.jsx","webpack:///./src/app/license-allocation/LicenseAllocation.jsx","webpack:///./src/app/license-allocation/components/AllocatedLicensesTable/AllocatedLicensesTable.jsx","webpack:///./src/app/license-allocation/components/assign-license-modal/AssignLicenseModal.jsx","webpack:///./src/app/licensing/Licensing.jsx","webpack:///./src/app/usage-collection/mssql/MssqlUsageCollection.jsx","webpack:///./src/i18n/index.js","webpack:///./src/i18n/en/index.js","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/scoped-css-mui-compatibility.js","webpack:///./src/assets/fonts/Lato-Regular.ttf","webpack:///./src/assets/fonts/OpenSans-Regular.ttf"],"names":["CONSTANTS","defaultConstants","PROVIDE_EXECUTIVE_DASHBOARD","PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD","SELECT_ALL","DESELECT_ALL","TOGGLE_SERVER","LOAD_NETWORK_NODES","LOAD_NETWORK_EDGES","LOAD_SERVER_DETAILS","LOAD_OS_TYPE","LOAD_DB_EDITION","LOAD_DB_VERSION","LOAD_USAGE","LOAD_USAGE_STAT","LOAD_LICENSE_DELTA","LOAD_MSSQL_USAGE","LOAD_MSSQL_NETWORK_NODES","LOAD_MSSQL_NETWORK_EDGES","LOAD_MSSQL_SERVER_DETAILS","LOAD_MSSQL_ENVIRONMENT_USAGE","LOAD_MSSQL_DB_VERSIONS","LOAD_MSSQL_OS_TYPES","Text","forwardRef","ref","options","validate","defaultValue","value","required","reactToChange","props","useState","shouldValidate","setShouldValidate","validation","useMemo","check","useField","touched","name","field","meta","helpers","formikCtx","useFormikContext","useEffect","setValue","setTouched","multiline","isPopup","undefined","setError","length","selected","find","o","description","disableClearable","id","getOptionLabel","option","label","getOptionDisabled","disabled","onChange","e","renderInput","params","type","error","helperText","Email","validations","merge","email","PhoneNumber","phone","Integer","required_not_null","Password","BOOL_OPTIONS","BooleanSelect","Date","moment","format","utc","allowBlankValue","fullWidth","utils","MomentUtils","disableToolbar","inputVariant","KeyboardButtonProps","date","minDate","minDateMessage","minDateMsg","Time","ampm","mask","Select","isNamespace","getOptionSelected","desription","LOAD_ALL_ACCOUNTS","CHANGE_STATE","LOAD_ALL_LICENSES","LOAD_TOP_SQL_STATEMENTS","LICENSE_FULL_REPORT","PROVIDE_SERVERS_USAGE","LOAD_STORAGE_POINTS","SET_STORAGE_NS","LOAD_STORAGE_DETAILS","LOAD_OBJECT_DETAILS","SET_SELECTED_OBJECT","LOAD_SESSIONS","PROVIDE_DB_LAST_BACKUP","PROVIDE_DB_STATUS","UPDATE_DB_STATUS","LOAD_PROTOCOLS","LOAD_COLLECTION_PROCESS","EXECUTE_COLLECTION_PROCESS","LOAD_MSSQL_DISK_IO","LOAD_MSSQL_STORAGE_USED","LOAD_MSSQL_FILE_STORAGE","icons_map","success","mdiCheckDecagram","fail","mdiAlertDecagram","Result","children","className","classnames","fontSize","d","propTypes","oneOf","node","ResultText","compact","bool","ResultMessages","messages","map","msg","index","key","text","split","Messages","loadAllAccountsThunk","payload","dispatch","getState","creators","loading","RestClient","get","BASE","ENDPOINTS","ACCOUNTS","page_size","response","data","protocols","explorer","from","provideServersUsageThunk","provideDBLastBackupThunks","provideDBStatusThunks","loadProtocolsThunk","PROTOCOLS","changeStateThunk","newState","action","loadAllLicensesThunk","JOBS","loadTopSQLStatementsThunk","postInvocation","creationResult","invocations","invocationUuid","uuid","statusChecksCount","isFinished","sleep","fetchInvocation","bind","invocationStatus","invocation","status","fetchInvocationOutput","invocationOutput","result","outputs","timeout","ms","Promise","resolve","setTimeout","fn","args","getLicenseReportThunk","fullPath","dbconn","Array","isArray","reportData","loadSessionsThunk","filters","SESSIONS","sort","loadSessionsByProcessThunk","protocol","dbmsProperty","TopSqlStatementsUtil","getDbmsPropertyName","parameters","oformat","process","SystemExplorerFeatureUtil","getSessionsEndpoint","timestamp","resultTxt","statementsJson","sessionsData","JSON","parse","sessionsLoaderResolver","shouldLoadSessionsByProcess","enableSessionsLoadingFlag","disableSessionsLoadingFlag","loadStorageDetailsThunk","STORAGE_DF","setStorageItemThunk","ns","loadStoragePointsThunk","STORAGE_TS","loadMssqlStorageDataThunk","storageKey","resultJson","invocationOutputPoller","output","parseInvocationResult","loadObjectsThunk","objectApis","path","allSettled","api","dbms","allData","res","loadObjectsByProcessThunk","getObjectsEndpoint","objectsJSON","item","objectsLoaderResolver","shouldLoadObjectsByProcess","setSelectedObjectThunk","servers","structured","slice","usageResult","server","loadUsagePerDb","filter","push","address","usage","highLoadCount","a","b","parseFloat","Oracle","r","Mysql","Pgsql","Mssql","databases","db","special","database","dbLastBackup","loadDBLastBackup","backup","dbStatus","loadDBStatus","message","dbName","refreshServerDbsStatusThunk","retrieveDBStatus","shell","DB_STATUS","toString","toLowerCase","parseInt","refreshDBStatusThunk","selectedDBMS","sv","loadProcessDetailsThunk","PROCESSES","details","processes","executeCollectionProcessThunk","HOST_CPU","s","DB_LAST_BACKUP","isValid","DbmsType","ORACLE","POSTGRES","MYSQL","MSSQL","OTHER","DbmsFeature","WORKLOAD","TOP_SQL","OBJECTS","STORAGE","LICENSE_REPORTING","FEATURE_BY_TYPE_MAP","LOAD_SESSIONS_BY_PROCESS","LOAD_OBJECTS_BY_PROCESS","LOAD_STORAGE_BY_PROCESS","OBJECTS_SIDEBAR_DISABLED","SESSIONS_ENDPOINT_MAP","OBJECTS_ENDPOINT_MAP","DBMS_LIST_ORDER","OBJECTS_DATA_MAPPERS","OBJECT_NAME","CREATED","create_date","OBJECT_ID","object_id","LAST_DDL_TIME","modify_date","dbmsType","feature","includes","isFeatureAllowed","fullName","startsWith","startIdx","lastIndexOf","substr","LOAD_ALL_USERS","SELECT_USER","LOAD_USER","REVOKE_PRIVILEGE","GRANT_PRIVILEGE","ADD_USER_TO_GROUPS","REMOVE_USER_FROM_GROUPS","DEACTIVATE_USER","CREATE_USER","UPDATE_USER_EXPIRATION","UPDATE_GROUP_CONNECTIONS_LIMIT","LOAD_ALL_GROUPS","LOAD_GROUP","DELETE_GROUP","ADD_USERS_TO_GROUP","REMOVE_USERS_FROM_GROUP","REMOVE_GROUPS_FROM_GROUP","PATCH_SELECTED_GROUP","CREATE_GROUP","MONTH_LIST","WEEKDAYS_LIST","CronValidator","minutes","isValidNumberValue","cleanValue","hours","days","month","isValidAlternativeValue","weekDay","time","maxVal","zeroAllowed","every","part","isValidNumberPart","rangeNumbersArr","el","isValidNumberRange","timeNumber","trim","dataArray","element","allowedValues","isValidAlternativePart","rangeValues","isValidAlternativeRange","indexOf","values","FORMAT_MSG","MINUTES","HOURS","DAYS","MONTH","DAY_OF_WEEK","EVERY_HOUR_WARNING","ALLOWED_MINUTES_OPTIONS","fetchEntities","promises","ENTITY_TYPES_FETCH","query","url","concat","encodeURIComponent","promise","entityType","fetchEntity","eType","definition","desc","console","warn","selectEntity","entity","clearSelectedEntity","setFilterType","setFilterSearch","openModal","actions","sessionActions","jobsActions","processActions","globalFiltersActions","pipe","fns","arg","reduce","prev","filterBy","selector","equalityFn","retrieveFilteredAccounts","state","accounts","nodes","stateValue","currentValue","Object","keys","currentServer","retrieveServerEntry","structure","entry","retrieveDatabaseEntry","getStatePath","getStructured","getSessions","sessions","getSessionsFlags","flags","getTopSqlStatements","topSqlStatements","getTopSqlStatementsFlags","getStoragePointsLoadingFlag","storage","loadingPoints","getStorageDetailsLoadingFlag","loadingDetails","getSelectedStorage","getStoredEntries","storedEntries","getSelectedObject","objects","selectedObject","getSelectedOwner","selectedOwner","getObjectsEntries","getObjectsLoadingFlag","getMssqlDiskIO","mssqlDiskIO","getMssqlStorageUsed","mssqlStorageUsed","getMssqlFileStorage","mssqlFileStorage","getFullPath","createSelector","pathArr","haveStorageData","selectedStorage","getFormattedStorage","isLoading","points","_","point","Used_MB","Total_MB","Tablespace","freePerc","freeGB","Free_MB","totalGB","usedGB","haveObjectsData","selectedObjects","getStorageDetailsData","list","selectedNS","tablespace","files","TABLESPACE_NAME","getMssqlStorageDetails","diskIO","storageUsed","fileStorage","getStructuredObjects","tree","acc","forEach","object","OWNER","owner","getInvalidObjects","invalidObjects","included","findIndex","STATUS","getSelectedObjectData","isObject","getObjectsDataByProcess","objectsSelectorResolver","getSortedSessions","sortFunction","order","sortKey","getTime","selectTopSqlStatements","statementsTxt","getBackup","backups","getDBStatus","statuses","getDBStatusInfo","info","dbMessage","STATUS_TYPES","down","up","notConnected","notFound","getDBMSStatus","allStatuses","getDBMSStatusInfo","dbmsStatus","getServerStatus","getServerStatusInfo","serverStatus","getEntityPendingStatus","en","LightTooltip","withStyles","tooltip","color","backgroundColor","letterSpacing","lineHeight","fontFamily","Tooltip","LimitlessTooltip","maxWidth","hasWritePrivileges","privileges","effective","hasOnlyReadPrivilege","isOnlySelectGroup","userDetails","toJS","member_of","isAdmin","hasCreatePrivilege","user","module","class_privileges","some","RSAKey","FQName","recieved","fqname","namespace","parts","initial","join","last","style","marginBottom","NamespaceSelect","QualifiedName","masName","AccountSelect","showUrls","setShowUrls","boxName","showToggle","useCallback","target","checked","inlineLoader","ADDITIONAL_ACCOUNT_FILTERS","filterFn","deepCopy","account","formatAccount","Boolean","size","PLATFORMS","tester","PROCESS_TYPES","PlatformSelect","platformValue","platform","processValue","reverse","test","ProcessTypeSelect","typeValue","ProcessSelect","p","OPTIONS","appearance","is_executable","customVal","namespaces","FormPrototypeSelect","prototype","ModeSelect","mode","modes","enumerations","variadicListReducer","produce","draft","deflt","pop","useVariadicList","useReducer","replvars","Variadic","displayDeftlDesc","selectedProcess","Header","Title","Content","dataType","Fragment","VariadicInstance","defltDesc","types","display","alignItems","justifyContent","onClick","name_base","parsedDeflt","replace","firstCharLetter","Multiline","open","setOpen","InputProps","startAdornment","title","cursor","mdiArrowExpand","width","height","variant","Footer","Right","Replvalues","valuesNr","replvaluesParams","i","replvalues","repl","Uuid","InvocationStatus","NEW","ALL","NOT_FETCHED","ABORTED","SCHEDULED","SUCCEEDED","FAILED","EXECUTING","DELAYED","KILLED","AllowOutputFor","AllowGeneralEditingFor","CannotShowStatusFor","FAILURES","SUCESSES","WARNINGS","LOAD_LICENSES","LOAD_DB_LICENSES","LOAD_LICENSE_TARGETS","LOAD_AVAILABLE_SERVERS","LINUX_OS_PRIMARY_COLOR","LINUX_OS_SECONDARY_COLOR","WINDOWS_OS_PRIMARY_COLOR","WINDOWS_OS_SECONDARY_COLOR","SE_DB_PRIMARY_COLOR","SE_DB_SECONDARY_COLOR","EE_DB_PRIMARY_COLOR","EE_DB_SECONDARY_COLOR","CUSTOM_DB_PRIMARY_COLOR","CUSTOM_DB_SECONDARY_COLOR","DB_VERSION_COLOR_PALETTE","secondaryColor","SubmitButton","confirmation","forcedDisable","submitForm","isSubmitting","isValidating","dirty","submitDisabled","setSubmitDisabled","modalActions","close","log","minWidth","maxHeight","icon","scrollable","BodyText","Left","fontStyle","fontWeight","marginTop","AvatarCard","avatar","onSelect","focusable","onFocus","event","stopPropagation","tabIndex","data-qa","alt","src","fallback","containEvent","placement","mdiInformationOutline","preventDefault","shape","string","func","mergeValidations","callbacks","provided","checkRequired","Yup","nullable","checkRequiredNotNullable","checkEmail","validateSync","checkPhoneNumber","matches","excludeEmptyString","checkUnsignedInt","checkName","checkFirstLetter","checkUuid","noop","unsigned_int","unsigned_float","signed_float","loadExecutiveDashboardThunk","EXECUTIVE_DASHBOARD","deselectAllThunk","selectAllThunk","rawEntries","executiveDashboard","toggleServerThunk","allServers","selectedServers","svIndex","nrCores","loadVirtualExecutiveDashboardThunk","VIRTUAL_EXECUTIVE_DASHBOARD","loadNetworkNodesThunk","serverId","loadNetworkEdgesThunk","loadServerDetailsThunk","loadOSTypeThunk","loadDBEditionThunk","loadDBVersionThunk","loadUsageThunk","loadUsageStat","serverPrefix","serverSuffix","usageStatResponse","obj","assign","totalRisk","total_risk","licenseCost","license_cost","supportCost","support_cost","unallocatedLicenses","unallocated_licenses","loadLicenseDeltaThunk","loadMssqlUsageThunk","MSSQL_EXECUTIVE_DASHBOARD","loadMssqlNetworkNodesThunk","loadMssqlNetworkEdgesThunk","loadMssqlServerDetailsThunk","loadMssqlEnvironmentUsageThunk","loadMssqlDbVersionsThunk","loadMssqlOsTypesThunk","DAY","formatTimePeriod","timeMillis","millisLeft","seconds","Math","floor","getCurrentUserName","session","getCurrentUserDetails","loadAllUsersThunk","USERS","loadUserThunk","grantPrivilegeThunk","patch","revokePrivilegeThunk","addUserToGroupsThunk","groups","allUsers","errorMsg","removeUserFromGroupsThunk","deactivateUserThunk","createUserThunk","body","username","password","post","refreshed","updateUserExpirationThunk","expiration_datetime","updateGroupConnectionsLimitThunk","group","limit","GROUPS","connection_limit","requestInvocation","pollerFinished","succeeded","this","resultJsonString","ROOT_NODE_ID","ROOT_NODE","widthConstraint","SERVER_NODE_COLOR","SERVER_NODE_SHAPE","DB_NODE_COLOR","DB_NODE_SHAPE","NODE_SIZE_MULTIPLIER","BASE_NETWORK_GRAPH_OPTIONS","layout","hierarchical","edges","autoResize","getInitialValues","initialValues","parameter","getValidationSchema","validationSchema","is_required","formatParameters","localState","shared","jobsSelector","connectionsSelector","jobsSearchedSelector","processesSearchedSelector","globalFiltersSelector","loadAllGroupsThunk","loadGroupThunk","createGroupThunk","groupname","removeUsersFromGroupThunk","removeSubGroupsThunk","addUsersToGroupThunk","users","all","removeGroupThunk","delete","LICENSABLE_FEATURE_DEFAULT_COLOR","LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR","LICENSABLE_FEATURES_COLORS","authorizationSelector","currentUserSelector","loginSelector","beVersionSelector","beLicenceSelector","beHealthSelector","extractParameter","others","editor","additional","field_name","TextParameter","passable","PasswordParameter","PhoneNumberParameter","BooleanParameter","IntegerParameter","EmailParameter","ProcessParameter","AccountParameter","VariadicParameter","ReplvaluesParameter","FQNameParameter","RSAKeyParameter","MultilineParameter","UuidParameter","getQuery","invocation_viewer","getInvocation","getInvocationStatus","Ensure","connect","entitySelectors","request","Ensurer","fresh","Loading","ParameterLoader","Loader","SearchableList","items","visibleScroll","scrolled","setScrolled","onWheel","currentTarget","scrollTop","scroller","setQuery","filtered","scrollBy","top","deltaY","left","deltaX","array","defaultProps","ENTITY_TYPES","dataEnclosure","ROOT_ENTITY","getBreadcrumbs","entities","breadcrumbs","collectData","namespacesWithMeta","collection","aliases","alias","alias_type","aliasedEntity","dataItem","ownNamespace","selectors","def","fetch_status","namespaceWithMetaSelector","dataNamespaces","getFilteredEntities","accumulator","getEntitiesAsHashMap","filteredEntities","search","domainArray","paths","findEntity","notPersisted","getEntities","entitiesMap","roots","entityName","names","isSelected","columns","breadcrumb","level","rows","bucket","entityLevel","getSelectedEntity","namespaceChildrenListSelector","selectedEntity","mapUsersData","mapLoadedUser","mapSortInsensitive","localeCompare","copyTextToClipboard","textToCopy","makeCopyToClipboard","copyToClipboard","getOutputText","navigator","permissions","then","clipboard","writeText","legacyMethod","textArea","document","createElement","appendChild","classList","add","focus","select","execCommand","removeChild","TextField","placeholder","position","mdiLanConnect","endAdornment","mdiHelpCircleOutline","NavigationTab","active","tabs","indicatorColor","textColor","tab","React","PureComponent","getGroupDescription","allGroups","groupDetails","isAllowedProtocol","isSessionsAllowed","isObjectsAllowed","isStorageAllowed","supportedDataTypes","dataTypes","prototypes","Number","MAX_SAFE_INTEGER","data_type","substring","is_supported","extractDefault","getLabel","getIcon","labels","icons","target_working_dir","target_shell","repo_shell","repo_working_dir","form","vsphere_account","vcenterservername","partitioning_methods","mdiFolderHome","mdiSourceRepository","mdiHexagonMultipleOutline","mdiCubeOutline","filterDbmsByShell","formValues","shellAccount","dbmsAccount","ADDITIONAL_OPTIONS_FILTERS","DropdownField","datatypes","rawAccounts","forms","currentFormValues","datatype","additionalFilter","opt","meta2","readOnly","toggle","onSendByEmail","processName","sendToEmail","OutputModal","content","interval","modalDetails","setMessage","sendToEmailWarningOpen","setSendToEmailWarningOpen","setInterval","clearInterval","errors","minHeight","postAccount","patchAccount","deleteAccount","getConnection","patchConnection","postFile","file","UPLOAD_ACCOUNTS","ALLOWED_DBMS","ALLOWED_FOR_CHARTS","PROCESS_ENDPOINT_MAP","DBMS_PROPERTY_NAME_MAP","OptionsList","ChartTooltip","postSchedule","getSchedule","patchSchedule","mapAccountsTree","splitIntoRootsByProtocol","root","splitIntoRootsByAddress","splitIntoRootsByDatabase","serversMap","existingEntry","databaseMap","mapAccountsNewStructure","raw","protocolsArr","dbServer","dbmsServerEntry","otherIndex","splice","mapProtocols","is_abstract","special_required","mapUpdateDBStatus","existingDb","mapLicenseReport","currentItem","DETECTED_USAGES","USED","NAME","_mapUsedLicense","UNUSED","FEATURES","license","USAGES","VERSION","LAST_USE","LAST_USAGE_DATE","FIRST_USE","FIRST_USAGE_DATE","SystemExplorerViewMode","TILES","TABLE","saga","createSagaMiddleware","persistConfig","storageSession","whitelist","configStore","appReducer","persistReducer","combineReducers","core","sessionReducer","dashboard","dashboardReducer","sharedReducer","usersManager","usersManagerReducer","groupsReducer","createReducer","explorerReducer","executiveDashboardReducer","daemon","licenseAllocation","licenseAllocationReducer","effects","sessionEffects","sharedEffects","store","createStore","routing","window","location","reload","composeWithDevTools","applyMiddleware","thunk","effect","run","Context","createContext","Switch","Provider","Case","useContext","fetchProtocols","ProcessParameters","editable","allValues","xs","normalize","chunk","spacing","normalized","space_begone","space_summon","param","defaults","defineEditor","maybeDisabled","parseProtocols","metaEditor","proto","sortBy","Notifications","getEventTypeIcons","jobStart","jobCompletion","abnormalEvent","notice","fullLog","toggleApplyButton","setState","isEditing","checkIfAllUsersSelectedCurrentGroup","selectedGroup","getSelectedGroup","usersData","onSelectGroup","groupsData","onSelectUser","setFlagGroupsIfContainSelectedUser","onSelectUserAction","shouldClear","displayIcons","onSelectEventType","recievedData","events","areUsersSelected","isClearActionAvailable","isGroupSelected","eventTypeIcons","onApply","mappedState","getProcess","patchProcess","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","NAV_POSITION_TOP","ANCHOR_LEFT","WEEKDAYS","MODIFIER_KEY_NAMES","Set","RepeatableParameter","Parameter","is_repeatable","SimpleSearchInput","stretchContent","PropTypes","filterStatusSelector","filterStatusActions","checkDeamonStatus","checkDaemon","AddServerCard","trigger","AddNewServerContainer","AddNewServer","reloadAccounts","ModalContext","formRef","useRef","resp","mdiDns","formikRef","handleSubmission","isNew","AddDatabaseCard","AddNewDatabaseContainer","AddNewDatabase","fetchDataTypes","pr","mr","data_types","mdiDatabase","ImportCSV","ImportCSVContainer","ImportCSVFile","selectedFile","setSelectedFile","setResult","fileName","htmlFor","accept","downloadFile","DOWNLOAD_CSV_TEMPLATE","FormData","append","catch","deleteEntity","deleteInvocation","mapScheduledNames","allScheduled","nameArr","SecurityAreas","SCHEDULE","ActionCard","settings","addOnly","readOnlyOptions","lastBackup","statusInfo","addable","mdiContentSave","role","capitalizeFirstLetter","fillable","percentage","CardsLayout","FullScreenIcon","fullScreen","fullScreenToggle","mdiFullscreenExit","mdiFullscreen","want","Unresolved","keygen","settler","wantComponent","Picked","ChangePassword","useLinkTrigger","done","confirm","onSubmit","setSubmitting","innerRef","handleSubmit","ChangePasswordContainer","selectedUser","licensesInfoMock","license_id","product_name","product_id","metric","lic_total","lic_assigned","lic_avail","licenseTargetsMock","server_id","quantity","loadLicenseAllocationThunk","LICENSES_INFO","loadDbLicensesThunk","loadLicenseTargetsThunk","loadAvailableServersThunk","AVAILABLE_SERVERS","availableServersData","updateLicenseAssignmentThunk","isInitialAssignment","SUBMIT_LICENSE_ASSIGNMENT","put","UPDATE_LICENSE_ASSIGNMENT","getLicensesData","licenses","licensesLoading","getDbLicensesData","dbLicenses","dbLicensesLoading","getLicenseTargetsData","licenseTargets","licenseTargetsLoading","getAvailableServersData","availableServers","availableServersLoading","Modal","providedId","aria","onClose","disableBackdropClick","oneOfType","ModalHeader","getNamespace","patchNamespace","postNamespace","postForm","createForm","updateForm","pointers","instances","instance","fields","PackedContext","FormEditor","initialPacked","groupForm","cloneDeep","split_name","packed","contextValue","validateOnChange","form_name","protoName","extracted","extractFieldInfo","exclusions","filteredExtractions","val","packedCopy","set","unpacked","ungroupForm","v","rename","version","request_args","unshift","key_struct","entries","matched","exec","lower","mapAllServers","groupServers","entryInfo","srvname","model","sid","collDate","Ncore","totalDBs","eelic_count","selic_count","sids","installedOptions","aa_count","ac_count","as_count","dv_count","mt_count","adg_count","rac_count","olap_count","part_count","in_mem_db_count","rac_one_node_count","real_app_test_count","totalInstalledOptions","mapVirtualServers","vmname","vmguesthostname","vmguestos","vmipaddress","hosts_nr","cpu","cpucores","allSids","o1","o2","diff","CenterComponent","isRequired","isBeforeDay","isMoment","aYear","year","aMonth","bYear","bMonth","isSameYear","Overflow","component","nodeRef","scrollableX","setScrollableX","scrollableY","setScrollableY","scrolledX","setScrolledX","scrolledY","setScrolledY","Tag","onScroll","scrollLeft","current","box","clientWidth","clientHeight","scrollHeight","scrollWidth","closeable","providedAria","changedForm","context","fieldChanged","changed","Checkbox","rest","control","checkedIcon","task","duration","running","runTask","start","stop","ServerForm","editing","submission","setSubmission","passwordEditable","setPasswordEditable","showRSA","setShowRSA","handleAccountCreation","getCreateAccountHandler","allowedProtocols","availablePorts","default_port","host","port","server_password","user_key","confirm_server_password","rsa_key","loadNewAccountHandler","validateOnBlur","validateOnMount","formik","setFieldValue","PasswordOrRSA","allowed","onInput","request_body","server_user","DATATYPES","DatabaseForm","mapAccountValues","confirm_password","selectedProtocol","allowRSA","allow_rsa_key","withDatabase","withMode","padded","handler","headers","blobData","blob","Blob","blobURL","URL","webkitURL","createObjectURL","tempLink","href","setAttribute","click","revokeObjectURL","downloadFileByLink","ConnectedDeleteJobModal","globalFilters","getJobs","sharedActions","dispatchLoading","DeleteJobModal","terminator","startDate","unix","endDate","end","asDays","date_invoke","period","getQSP","mdiTrashCan","Schedule","setFilledValues","filledValues","selectedOption","setSelectedOption","canSelectProcess","setCanSelectProcess","onClickHandler","btnLabel","isScheduled","schedule","ConnectedNewNamespace","NewNamespace","isDisabled","classes","handleSubmitNew","SubmitButtonNoDirty","ConnectedFormModal","refresh","FormModal","mdiClipboardCheck","DatabaseSettings","editDbTrigger","deleteDbTrigger","deleteDbOpen","setDeleteDbOpen","deleteDbErrorOpen","setDeleteDbErrorOpen","deleteDbModalActions","deleteDbErrorModalActions","mdiSettings","mdiDelete","EditDatabaseContainer","EditDatabase","row","processQuery","updateInvocation","subject","NetworkToolbar","serversUpdate","setSelectedServers","selectedServerIds","serverOptions","limitTags","multiple","newValue","mdiServer","SuccessModal","getBeVersion","getBeLicence","getBeHeath","BeLicenceEffect","BeHealthEffect","BeVersionEffect","BE_VERSION","dispatchSuccess","dispatchFail","BE_LICENCE","BE_HEALTH","getBeHealth","takeEvery","getLoadingAction","TotalJobsCount","jobs","job","boxShadow","borderRadius","getAlias","patchAlias","postAlias","initialState","login","authorization","actionStates","LOADING","currentUser","beVersion","reducerActions","checkAuthorization","setIn","getSuccessAction","fromJS","SUCCESS","getFailAction","FAIL","Error","daemonPoller","withPolling","filterStatus","setFilterStatus","getEventAction","sessionGlobalFilters","subtract","startOf","localStorage","getItem","page_count","total_count","fetching","callFailed","reason","connections","searchResults","setGlobalFilters","nextState","setItem","stringify","logout","removeItem","getConnections","searchJobs","searchProcesses","notifications","addNotifications","removeNotification","notificationIndex","removeIn","notificationActions","WantParameter","number","boolean","variadic_parameter","filterShellByPlatform","shellFieldName","PLATFORM_VALUE_TO_TYPE","PostgreSQL","MySQL","platformTree","platformAddresses","hasOwnProperty","maxPosition","max","virtual","currentGroup","upper","nextGroup","iteration_limit","instanceCount","g","f","grouped","subvalues","dropRight","getPrivileges","isAlias","cls","setPrivileges","granted","role_type","privilege","enitity_name","VerticalUsageBar","fill","viewBox","x","y","rx","ry","SidebarStorageItem","StorageSidebar","selectedItem","mdiFileTableBox","iconMapper","triggers","mdiAlertOutline","tables","mdiTable","indexes","mdiTableColumnWidth","procedures","mdiAlphaPBox","packages","mdiInbox","packageBodies","mdiInboxFull","objectsSidebarMapper","invalidChildren","mdiFileTree","isObjectSelected","isInvalid","invalid","ObjectsSidebar","KPIDisplay","suffix","colorFormatting","digits","valueString","toLocaleString","minimumFractionDigits","maximumFractionDigits","NoDataComponent","mdiHelpRhombusOutline","StorageDetailsList","PCT_USED","FILE_NAME","SIZE_MB","MAXSIZE_MB","filePath","extension","chartType","loader","toFixed","is3D","colors","rootProps","StorageViewer","ObjectsViewer","sidebarDisabled","objectsDataMapper","getObjectsDataMapper","mdiArrangeBringToFront","mdiFlashCircle","formatMemorySizeGb","bytes","STATUS_LABEL_MAP","StatusLabel","navigationItems","to","qaClass","mdiClipboardPlayMultipleOutline","mdiShieldCheckOutline","invocationPoller","prepareDashboardTitle","dbType","ExecutiveDashboard","selectedServer","setSelectedServer","dashboardTitle","hasSelectedServer","deselectServer","mdPage","onServerChanged","ConnectedExecutiveDashboard","rawVirtualServers","virtualServers","ListOutput","reducer","bindReducer","ActionCreatorHandler","slugify","createUrl","paramsUrl","numberPretty","formatNumber","pow","decimals","smartNumber","charAt","toUpperCase","emailPattern","phoneNumberPattern","urlPattern","randomStringGenerator","possible","random","generateUniqueId","btoa","valueOf","emptyFunc","delay","timer","isInclusivelyAfterDay","STATES","stateKey","unchanged","reducers","reducerInitialState","getWorkloadData","dateRange","isSingleDay","currentDate","jobsWithFormattedInvokedDate","orderBy","groupJobsByDate","groupBy","total","intervalArray","totalDays","getHoursArray","getDaysArray","day","dateArray","CheckAuthorizationEffect","LoginEffect","LogoutEffect","tryAsync","onError","RestClientClass","authentications","basicAuth","accessToken","baseUrl","HOST","client","axios","create","TIMEOUT","baseURL","Accept","head","Cookie","remove","getRequestConfig","LoginPage","history","submit","resetErrors","mapStateToProps","mapDispatchToProps","ContainerComponent","MasLogo","VenditaLogo","LoginGraphic","FormComponent","setShowPassword","prevState","showPassword","handleMouseDownPassword","submitHandler","restErrors","getRestErrors","noValidate","autoComplete","autoFocus","getError","valueChangeHandler","inputProps","InputLabelProps","aria-label","onMouseDown","edge","labelWidth","RestErrorsComponent","JobItemComponent","jobStatus","formatName","nameContainerWidth","getElementById","offsetWidth","starPath","formattedName","canvas","getContext","metrics","measureText","shift","extended","statusChild","local","WorkloadGraphComponent","setSingleDay","activeLabel","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickSize","axisLine","tick","stroke","strokeWidth","fillOpacity","CustomTooltipComponent","nextProps","Component","CustomAxisTickComponent","transform","dy","textAnchor","CircleImgComponent","image","NumberLabelComponent","StringLabelComponent","SearchInputComponent","DropdownComponent","handleToggle","isDropdownOpen","setCloseDropdown","anchorRef","contains","onClickCallback","itemIndex","createRef","parentWidth","isOpen","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClickAway","SmallInputComponent","SingleDatePickerComponent","focused","onDateChange","onFocusChange","numberOfMonths","customInputIcon","mdiCalendarBlank","isOutsideRange","hideKeyboardShortcutsPanel","displayFormat","navPrev","mdiChevronLeft","navNext","mdiChevronRight","RangeDatePicker","renderDayContents","anchorDirection","block","customArrowIcon","mdiArrowLeftRight","customCloseIcon","enableOutsideDays","endDateId","endDatePlaceholderText","horizontalMargin","initialEndDate","initialStartDate","initialVisibleMonth","isDayBlocked","isDayHighlighted","isRTL","keepOpenOnDateSelect","minimumNights","monthFormat","navPosition","onNextMonthClick","onPrevMonthClick","orientation","phrases","calendarLabel","chooseAvailableEndDate","chooseAvailableStartDate","clearDates","closeDatePicker","dateIsSelected","dateIsSelectedAsEndDate","dateIsSelectedAsStartDate","dateIsUnavailable","enterKey","escape","focusStartDate","homeEnd","jumpToNextMonth","jumpToPrevMonth","keyboardBackwardNavigationInstructions","keyboardForwardNavigationInstructions","keyboardShortcuts","leftArrowRightArrow","moveFocusByOneDay","moveFocusByOneMonth","moveFocusByOneWeek","moveFocustoStartAndEndOfWeek","openThisPanel","pageUpPageDown","questionMark","returnFocusToInput","roleDescription","selectFocusedDate","showKeyboardShortcutsPanel","upArrowDownArrow","regular","renderCalendarDay","renderMonthText","reopenPickerOnClearDates","screenReaderInputMessage","showClearDates","showDefaultInputIcon","small","startDateId","startDatePlaceholderText","stateDateWrapper","withFullScreenPortal","withPortal","onDatesChange","focusedInput","JobResults","renderJobsResults","mdiProgressClock","mdiCheckCircleOutline","mdiCalendarArrowRight","mdiStopCircleOutline","mdiTimelineClock","mdiAlertRhombusOutline","mdiCancel","jobName","fromSearch","any","Table","sortBehavior","changeSort","stickyHeader","HeaderCell","column","align","padding","sortDirection","direction","Row","TableRow","Cell","TableCell","LogoutPage","RootModule","filteredJobs","totalFilteredJobs","range","onChangeDatesHandler","entitiesStatus","averageJobs","round","storeFilterStatus","mdiChartTimelineVariant","inline","Paper","flex","PaperHeader","PaperContent","PaperFooter","LeftSideSlot","RightSideSlot","PaperTitle","Main","Section","full","SectionTitle","SectionHeader","SectionInfo","SectionContent","Info","ScrollableContainer","Column","StatusContainer","filterJobs","count","executing","scheduled","aborted","failed","Daemon","useSelector","isDaemonRunning","JobStatus","filterByStatus","storeStatus","setStatus","renderContent","dispatchEvent","Search","apiSearchWithDebounce","debounce","searchedTerm","showSearchResults","getSearchResults","QSP","name_filter","page","filterProcesses","processStatus","storedProcesses","results","handleOnChange","searchTerm","clearSearch","getSearchedJobs","setSearchFilter","setTypeFilter","category","totalResults","displayedResults","nameFilter","SearchResultsComponent","renderProcessesResults","mdiPlaySpeed","createURLLink","Input","nrRows","LinkBehavior","Button","link","ModalFooter","ErrorModal","ConfirmationModal","JobsEffect","JobsConnectionsEffect","SearchJobsEffect","SearchProcessesEffect","GlobalFiltersEffect","listen","newLocation","pathname","currentPathname","currentSearch","go","setAuthorization","prevProps","authorizationStatus","exact","Login","Logout","Layout","hot","RootLayout","Jobs","JobProcess","Entities","UsersAndGroups","Explorer","render","LicenseCollection","LicenseAllocation","Licensing","ConnectedMssqlUsageCollection","renderJobItem","loggedUser","toggleWorkloadDisplay","isWorkloadDisplayed","updateQSP","URLSearchParams","has","handleOnTabChange","selectedTab","performFilter","handleOnFilterChange","returnListBasedOnTab","shell_host_address_filter","platform_filter","database_name_filter","user_filter","platform_name_filter","platform_dbms_filter","pageFilters","onSearchInputChange","onKeyDown","endOf","loadAllUsers","canCreateSchedule","formattedStartDate","formattedEndDate","whiteSpace","paddingTop","selections","excludeStatus","currentTab","ALLOWED_FOR_DELETE","JobItem","canDelete","setUuid","mdiClockOutline","statusMap","PLATFORM","Filters","u","platforms","selectedPlatform","selectedDb","selectedStatus","mdiCircleSlice5","getJobsFiltersOptions","connection","getIn","JobsInvocations","useLocation","useDispatch","VIEW_OPTIONS","ENTITY_ICONS","constant","exception","CachedIcon","searchWithDebounce","viewMode","setViewMode","searchInput","setSearchInput","renderColumn","colNum","findShownNamespaces","entityIcons","topLevelEntities","defaultview","sessionStorage","clearCch","ev","loadingData","shownColumns","allowedPaths","rootPath","renderColumns","UsersAndGroupsPage","UserManagementHeaderLinks","RightSideControls","UserManagementSwitch","useRouteMatch","routes","Link","UsersPage","loadAllGroups","match","userLink","UserSwitch","GroupsPage","groupLink","GroupsPagesSwitch","ops","ExplorerPage","handleClick","anchorElement","handleClose","loadProtocols","loadAllAccounts","treeviewData","storeState","newMode","startIcon","aria-controls","aria-haspopup","keepMounted","activePage","switchToTileView","Treeview","DbObjects","loadingFlags","isObjectsSidebarDisabled","RUNNING","STATUS_SPAN","marginLeft","textShadow","STOPPED","SidebarContainer","beHealth","masSystemsMonitor","postgresStatus","masDaemonStatus","uptime1Minute","uptime5Minutes","uptime15Minutes","daysUntilExpire","beLicence","licensed_feature","expirationDate","licenseStatus","paddingRight","pkg","Favorites","mdiStarOutline","Navigation","navId","handlePopoverOpen","handlePopoverClose","setActiveTab","newActiveTab","activeTab","setCurrentNavItem","onMouseEnter","onMouseLeave","subItem","withRouter","Notification","UserMenu","menuAnchorRef","isVisible","openAdminPage","setToggleDropdown","autoFocusItem","Compile","setStep","step","Confirmation","Compiler","textAlign","compilation","setCompilation","postCompile","useQuery","LinkRouter","RouterLink","redirected","OtherMainLinks","PrepareFlow","designation","actionsTypes","CHECK_AUTHORIZATION","LOGIN","LOGOUT","ActionCreator","setBasicAuth","CURRENT_USER","source","INTL","CURRENT_TIME","DAEMON_STATUS","JOB_COUNT","PROTOTYPES","FORMS","FORM","DOWNLOAD_PACKAGING","DELETE_LICENSE_ASSIGNMENT","UPLOAD_SUPPORT_RENEWAL_FILE","UPLOAD_MAS_LICENSE_FILE","Buffer","statusText","loginPath","removeBasicAuth","exports","autoFocusEndDate","momentPropTypes","momentObj","DateRangePickerPhrases","omit","DateRangePickerShape","localeData","longDateFormat","DateRangePickerWrapper","GET_JOBS","GET_CONNECTIONS","SEARCH_JOBS","SEARCH_PROCESSES","UPDATE_GLOBAL_FILTERS","SET_FILTER_STATUS","ServersList","getAllAccounts","setAnchorElement","serversNumber","ConnectedServersList","serversUsage","deactivating","updateExpiration","updateConnectionsLimit","debug","groups_update","producers","updating_groups","creating","group_users","group_subgroups","reports","collectionProcesses","hardware","wasExecuted","preSoftware","software","vmware","packaging","mssqlSingleServerUsage","mssqlMultiServerUsage","base","loadingDiskIO","loadingStorageUsed","loadingFileStorage","network","nodesLoading","edgesLoading","serverDetailsLoading","techDetails","osTypeLoading","dbEditionLoading","dbVersionLoading","licensableFeatures","usageStat","licenseDelta","mssqlLicenseUsage","mssqlNetwork","mssqlEnvironmentUsage","mssqlDbVersions","mssqlOsTypes","networkNodes","networkEdges","networkServerDetails","osType","dbEdition","dbVersion","mssqlNetworkNodes","mssqlNetworkEdges","mssqlNetworkServerDetails","execdashboard","execdashboard_virtual","FETCH_ENTITIES_REQUEST","FETCH_ENTITIES_SUCCESS","FETCH_ENTITIES_FAILURE","FETCH_ENTITIES_ALL_REQUEST","FETCH_ENTITIES_ALL_SUCCESS","FETCH_ENTITIES_ALL_FAILURE","SELECT_ENTITY","CLEAR_SELECTED_ENTITY","UPDATE_FILTERS","DAEMON_STATUS_REQUEST","DAEMON_STATUS_SUCCESS","DAEMON_STATUS_FAILURE","processed","fetchedInvocation","PROCESS_QUERY","FETCH_INVOCATION_SUCCESS","FETCH_INVOCATION_FAILURE","REPLACE_INVOCATION","next","schema","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","JobList","NoJobs","ConnectedJobList","ScheduleModal","setTab","processDetails","setProcessDetails","scheduleDetails","setScheduleDetails","newSchedule","schedules","textDecoration","changeTab","ViewTabs","Documentation","ScheduleFormComp","derivedMonitor","enabled","monitor","serverTime","everyHourWarningShown","wasSCheduleCallDone","allScheduledNames","masTimeFormatted","currentTime","availableProcess","platformVal","typeVal","processVal","selectedType","platformMatches","typeMatches","nameValue","splittedName","t_min","t_hr","t_day","t_mon","t_wkd","sch_name","isValidMinutes","isValidHours","isValidDays","isValidMonth","isValidWeekDay","n_state","isEmpty","ConnectedScheduleForm","rejector","sch_description","params_with_maybe_replvars","extractReplVars","pickBy","rawValues","extractFQName","cleanUpReplVars","prefix","Groups","dense","disablePadding","button","primary","Users","currentActionLabel","shouldDisplayAction","emptyListMessage","renderUsersList","Events","UserChip","background","Chip","NotificationList","filteredUsers","buttonLabel","buttonIcon","endIcon","Entity","user_owner","aliasStr","getBoundingClientRect","parent","parentNode","scrollTo","behavior","SelectedEntity","ActionsNamespace","disableActions","hasWrite","deleteRights","parseName","tail","parsed","fq","ConnectedEditNamespace","nestedNames","EditNamespace","canUpdateName","setDescription","ConnectedDeleteNamespace","DeleteNamespace","ActionsConstant","ConnectedEditConstant","EditConstant","mdiImageFilterCenterFocus","patchConstant","ActionsProcess","ConnectedNewSchedule","NewSchedule","openErrorModal","setOpenErrorModal","errorModalActions","ScheduleForm","EditProcessModal","ProcessEditor","saveProcessEdits","steps","Step","step_index","expressions","parseEvaluatableExpressions","exp","StepExpression","expression","exp_index","evaluate","process_name","evaluations","toSend","findFormPrototype","findFormEntry","ActionsForm","canWrite","ConnectedCopyForm","CopyForm","formName","FormParameters","FieldsAndGroupsEditor","DataContext","FieldGroup","pointer","GroupInstance","canAdd","Field","newInstance","Value","packet","canRemove","idx","provided_field_name","ActionsRoot","ActionsPrototype","ActionsSchedule","ConnectedEditSchedule","EditSchedule","setMonitor","isEntityDeletable","ActionsCommon","displayDelete","ConnectedNewAlias","ConnectedEditAlias","NewAlias","original","EditAlias","splittedNamespace","handleEditSubmit","originalName","ConnectedDeleteEntity","clearSelected","DeleteEntity","PrivilegesModal","PrivilegesEditor","hasAlias","usePrivileges","editAliasParent","updating","setEditAliasParent","updatePrivilege","switchTab","PrivilegesList","is_group","updater","privilegeTypes","renderType","user_or_group","mdiAccount","setLoading","setUpdating","setData","HeaderPageSwitch","arrayOf","UserLoader","loadUser","userName","useParams","ConnectedUserLoader","UserView","deactivateUser","defaultResult","noGroups","deactivate","titleStyles","textTransform","ConnectedUserView","removing","Privileges","grant","revoke","Privilege","capitalize","PrivilegesContainer","mapPrivileges","actual","str","UserGroups","removeFromGroups","retrieveGroupDescription","setSelectedGroup","errorMessage","setErrorMessage","isOnlySelect","questionMessage","passed","group_name","mdiDeleteCircleOutline","UserGroupsContainer","visibleGroups","EditUserGroups","addToGroups","isFormChanged","setIsFormChanged","closeModal","aria-labelledby","aria-describedby","GroupsList","onAdd","EditUserGroupsContainer","showAll","err","EditUserDetails","UserDetailsForm","EditUserDetailsContainer","submitResult","isEqual","created","date_created","updated","date_updated","UserDatesBox","DateCreated","DateUpdated","mdiAccountPlus","parseDate","mdiAccountEdit","EditUserInfo","UserInfoForm","EditUserInfoContainer","formEndpoint","formproto","formdata","mapFormValues","submited","sendable_data","FieldSwitch","dict","EmailField","PhoneNumberField","notRequired","Field_Types","FieldComponent","getComponent","AccountExpiration","updateExpirationDate","updateInProgress","dateValue","timeValue","expirationMoment","expirationTime","isSameOrBefore","AccountExpirationContainer","newDate","UserCard","endsWith","groupless","mdiAccountOff","NoUserSelectedPage","min","confirmpassword","CreateNewUser","submitUserValues","useHistory","operation","setOperation","exists","marginRight","CreateNewUserPage","NewUserGroups","existing","GroupsSelection","mdiAccountGroup","GroupCard","GroupView","removeGroup","deleteGroup","ConnectedGroupView","GroupLoader","loadGroup","groupName","ConnectedGroupLoader","GroupUsers","removeUsersFromGroup","setSelectedUser","GroupUsersContainer","EditGroupUsers","addUsersToGroup","mdiAccountMultiplePlus","UsersSelection","EditGroupUsersContainer","usersFetched","usersSubmitted","resolved","rejected","SubGroups","removeSubGroups","subgroup","SubGroupsContainer","EditSubGroups","updateGroup","GroupSelection","EditSubGroupsContainer","groupsFetched","subgroupsSubmitted","subgroupError","ConnectionsNumber","connectionsLimit","maxAmount","ConnectionsNumberContainer","CreateNewGroup","submitGroupValues","CreateNewGroupPage","NoGroupSelectedPage","DBMS","toggleExpanded","isExpanded","setPath","changeState","autoExpanded","ConnectedDBMS","ServerList","Server","isActive","activePath","storedPath","splitAccountName","ConnectedServer","DatabaseList","Database","ConnectedDatabase","BreadcrumbsTitle","renderBreadcrumbs","links","separator","previous","route","navigateTo","selectedLink","setActiveLevel","ConnectedBreadcrumbsTitle","ContentSwitch","renderPage","AllDbms","retrieveDBMSStatus","retrieveDBMSStatusInfo","ConnectedAllDbms","allDbms","serverLabel","serverFullName","AllServers","renderOptions","retrievePendingStatus","refreshServerDBs","refreshServerDbsStatus","retrieveServerStatus","retrieveServerStatusInfo","hasDatabases","mdiPercent","ConnectedAllServers","ServerSettings","deleteServerOpen","setDeleteServerOpen","deleteServerErrorOpen","setDeleteServerErrorOpen","deleteServerModalActions","deleteServerErrorModalActions","EditServerContainer","EditServer","AllDatabases","refreshDBStatus","refreshDatabaseStatus","mdiCheckboxMultipleBlankOutline","mdiShape","mdiHexagonSlice2","mdiFormatAlignTop","mdiLicense","retrieveDbBackup","retrieveDbStatus","retrieveDbStatusInfo","ConnectedAllDatabases","Workload","newTab","getJobsData","pageLevel","levelFilters","protocol_filter","ConnectedWorkload","License","ConnectedLicense","Report","getLicenseReport","reportTwo","licenseFeatures","reportOne","ConnectedReport","FeaturesUsage","renderSingleReport","renderComparableReports","comparableFeatures","getFeatureValue","rep1","rep2","valueNode","needsExpansion","listRef","offsetHeight","flexDirection","paddingLeft","UnusedFeatures","CellWithTooltip","rowRenderer","hover","CURRENTLY_USED","mdiCheckboxMarkedCircle","mdiCloseCircle","TableRenderer","tableProps","FeaturesTable","sortLicenseFeatures","orderMultiplier","sortByName","sortByUsages","sortByStatus","sorted","Storage","getStoragePoints","getStorageDetails","storagePoints","storageDetails","setStorageItem","isMssql","ConnectedStorage","diskIOColumns","diskIOTableProps","diskIORowRenderer","Database_name","physical_name","dbid","io_stall","io_stall_queued_read_ms","io_stall_queued_write_ms","io_stall_read_ms","io_stall_write_ms","num_of_bytes_read","num_of_bytes_written","num_of_reads","num_of_writes","sample_ms","size_on_disk_bytes","type_desc","fileStorageColumns","fileStorageTableProps","fileStorageRowRenderer","data_space_id","file_id","growth","max_size","state_desc","PieChartColors","PieChartTooltip","MssqlStorage","prepareStorageGraphData","storageData","logsStorageSize","sum","getMssqlStorageData","dataLoading","usedStorageInfo","hasFileStorageInfo","hasDiskIOInfo","hasAnyData","storagePieData","database_size","unallocated_space","cx","cy","innerRadius","outerRadius","ConnectedMssqlStorage","Objects","getObjects","objectsData","objectDetails","setObjectsItem","ConnectedObjects","Sessions","getSessionsData","enableLoadingFlag","disableLoadingFlag","refreshSessions","ConnectedSessions","USERNAME","MACHINE","SID","LOGON_TIME","PROGRAM","TYPE","noDataMessage","CommonSessionsTable","sortSessions","sortedSessions","killSession","spid","ecid","loginame","hostname","blk","dbname","cmd","request_id","openKillSessionConfirmation","sessionId","MssqlSessionsTable","session_id","killSessionConfirmationOpen","sessionIdToKill","killSessionConfirmationActions","killSessionErrorModalActions","killSessionErrorOpen","TopSQLStatements","getTopSqlStatementsData","getEndpoint","prepareChartData","topStatementsData","ELAPSED_TIME","cpuTime","PCT_CPU","ioTime","PCT_IO","sqlId","SQL_ID","timeMillisFull","cpuPercent","ioPercent","elapsedTimeChartData","isChartSupported","ConnectedTopSQLStatements","renderCustomXAxisTick","renderLegend","renderChartTooltip","ElapsedTimeChart","barGap","strokeDasharray","verticalAlign","domain","tickFormatter","stackId","SESS_ID","CHILD_NUMBER","SQL_TEXT","mdiContentCopy","MODULE","EXECUTIONS","ELAPSED_PER_EXEC","sqlStatements","OracleTopSQLTable","sortSqlStatements","sortedStatements","queryid","userid","calls","avg_time_ms","PostgresTopSQLTable","SESSION_ID","USER","SQL_Text","TIME","STATE","MysqlTopSQLTable","QueryName","ExecutionCount","MaxElapsedTime","AvgElapsedTime","Logical_Reads","physical_reads","logical_writes","MssqlTopSQLTable","ToggleSystemExplorerView","mdiViewComfy","HostnameCellWithTooltip","isChecked","updateSelection","navigateToDetails","isWorkloadAllowed","isTopSqlAllowed","isLicenseReportingAllowed","testConnectionsTrigger","clickHandler","addServerTrigger","addDatabaseTrigger","importCsvTrigger","editDatabaseTrigger","deleteDatabaseTrigger","SystemExplorerTable","allDatabases","createCheckboxHeaderColumnConfig","protocolGroup","toggleDbsSelectionByProtocol","isAllDbsByProtocolSelected","selectedDbs","dbIndex","forceUpdate","shouldAddAll","allWithoutCurrent","clearDbsByProtocol","dbs","allByProtocol","selectedByProtocol","testConnections","isDbSelected","hasSingleSelection","getFirstDatabase","group1","group2","getListOrder","detailsPageParams","columnsConfig","ConnectedSystemExplorerTable","JobView","JobForm","loggedInAs","setEditable","deriveFormState","disabledFields","userValue","time_invoke","handleJobCreation","FormVerbs","sendable","job_user","dateMoment","timeMoment","dateTime","asMinutes","when","noOutput","JobOutput","setOutput","outputType","monitoring","outputFormat","preparedJSON","jsonString","enableClipboard","displayObjectSize","displayDataTypes","wantStatusColor","wantStatusIcon","warning","ToggleSelection","ServersNetworkTile","nodeId","selectedNode","networkData","graph","isServerNode","getServerDetails","mapNodes","arr","t","hasWarnings","nodeConfig","border","borderWidth","mapEdges","serverNodes","serverEdges","arrows","filteredServerIds","getNetworkNodes","getNetworkEdges","newProps","serverDetails","preparedNodes","relatedDbIds","hasData","serverIds","server_manufacturer","processor_identifier","total_physical_cores","total_logical_cores","physical_sockets_populated","ConnectedServersNetworkTile","ScoreItem","clazz","LicensableFeaturesTile","mapLicenses","licenseConfig","config","abbreviation","getLicensableFeatures","getUsageStat","licensesData","currencyFormatter","Intl","NumberFormat","currency","isFinite","blendStroke","ConnectedLicensableFeaturesTile","OptionItem","hasIssues","mdiAlert","OperatingSystemsTile","mapOS","osData","os","isWindowsOS","mapDBEdition","dbEditionData","editionName","database_edition","isSEEdition","mapDBEditionByServer","mapDBVersion","dbVersionData","isSupported","database_version","qty","db_version_short","getOSType","getDBEdition","getDBVersion","graphData","preparedOSData","preparedDBEditionsData","preparedDBVersionsData","ConnectedOperatingSystemsTile","LicenseType","NUP","CPU","LicenseDeltaChartTooltip","assignedValue","usedValue","ownedValue","LicenseDeltaTile","mapData","licenseData","groupedData","lic_owned","lic_used","assigned","used","owned","selectedLicenseType","getLicenseDelta","chartData","allowDecimals","angle","ConnectedLicenseDeltaTile","MssqlLicenseUsageTile","license_type","getLicenseUsage","licenseUsageData","MssqlConnectedLicenseUsageTile","MssqlServersNetworkTile","chipset","cpu_speed","physical_cores","logical_cores","servername","server_entity_name","MssqlConnectedServersNetworkTile","EnvironmentUsageChartTooltip","coresValue","maxCoresValue","maxCores","devicesCalValue","usersCalValue","EnvironmentUsageTile","environmentUsage","env","devicesCal","estimate_calcount_fordevices","usersCal","estimate_calcount_forusers","max_core","getEnvironmentUsage","MssqlConnectedEnvironmentUsageTile","MssqlDbVersionAndOsTile","version_year","dbVersions","osTypes","MssqlConnectedDbVersionAndOsTile","chip","Hardware","poller","runPoller","pollInvocation","outputReponse","clearTimeout","renderModal","outputOpen","requestProcessData","isProcessLoading","executeCollectionProcess","loadingPrototypes","loadingDatatypes","loadingAccounts","loadingForms","normalizeParameter","chooseField","mdiMemory","ConnectedHardware","Software","wasHardwareExecuted","wasPreSoftwareExecuted","mdiApplication","ConnectedSoftware","VMware","mdiCubeScan","ConnectedVMware","Packaging","isSucceeded","successModalOpen","failedModalOpen","isDownloadDisabled","renderPackagingSuccessModal","renderPackagingFailedModal","sendEmail","isEmailDisabled","wasVsphereExecuted","mdiArchiveArrowDownOutline","ConnectedPackaging","formatQuery","lms_repo","PROCESS_NAME","PARAMS_TO_NORMALIZE","PreSoftware","normalizedParam","ConnectedPreSoftware","isParentRow","hasChildren","openLicenseAssignments","expandedProducts","toggleGroup","host_name","license_metric","license_term","licenses_assigned","licenses_available","mdiPencil","child","childIndex","AllocatedLicensesTable","productName","groupLicenses","groupKey","topLevelItem","assignLicenseModalOpened","selectedAssignment","editableServer","getLicenses","groupedLicenses","assignLicenseModalActions","assignmentToEdit","canModifyServer","ConnectedAllocatedLicensesTable","AssignLicenseModal","ConnectedAssignLicense","canEditServer","AssignLicense","getAvailableServers","updateLicenseAssignment","refreshLicenses","term","licenseOptions","assignedServers","availableServersOptions","serverInfo","ip_address","available","abs","selectedSupportRenewalFile","setSelectedSupportRenewalFile","supportRenewalFileResult","setSupportRenewalFileResult","uploadSupportRenewalFileDisabled","setUploadSupportRenewalFileDisabled","supportRenewalFileName","selectedMasLicenseFile","setSelectedMasLicenseFile","masLicenseFileResult","setMasLicenseFileResult","selectedMasLicenseFileDisabled","setSelectedMasLicenseFileDisabled","masLicenseFileName","setSuccessModalOpen","setFailedModalOpen","renderUploadFailedModal","SINGLE_SERVER_PROCESS","MULTI_SERVER_PROCESS","MssqlUsageCollection","singleServer","singleServerProcess","multiServerProcess","isSingleProcessLoading","isMultiProcessLoading","selectedProcessName","currentProcess","i18nMessages","general","header","persistor","persistStore","provider","locale","basename","App","webpackContext","req","webpackContextResolve","__webpack_require__","code","partial"],"mappings":"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","file":"js/app.3a2500d82c27ddc26818.js","sourcesContent":["import defaultConstants from './constants';\n\nexport const CONSTANTS = defaultConstants;\n","export const PROVIDE_EXECUTIVE_DASHBOARD = 'PROVIDE_EXECUTIVE_DASHBOARD';\nexport const PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD = 'PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD';\n\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const TOGGLE_SERVER = 'TOGGLE_SERVER';\n\nexport const LOAD_NETWORK_NODES = 'LOAD_NETWORK_NODES';\nexport const LOAD_NETWORK_EDGES = 'LOAD_NETWORK_EDGES';\nexport const LOAD_SERVER_DETAILS = 'LOAD_SERVER_DETAILS';\n\nexport const LOAD_OS_TYPE = 'LOAD_OS_TYPE';\nexport const LOAD_DB_EDITION = 'LOAD_DB_EDITION';\nexport const LOAD_DB_VERSION = 'LOAD_DB_VERSION';\n\nexport const LOAD_USAGE = 'LOAD_USAGE';\nexport const LOAD_USAGE_STAT = 'LOAD_USAGE_STAT';\n\nexport const LOAD_LICENSE_DELTA = 'LOAD_LICENSE_DELTA';\n\nexport const LOAD_MSSQL_USAGE = 'LOAD_MSSQL_USAGE';\nexport const LOAD_MSSQL_NETWORK_NODES = 'LOAD_MSSQL_NETWORK_NODES';\nexport const LOAD_MSSQL_NETWORK_EDGES = 'LOAD_MSSQL_NETWORK_EDGES';\nexport const LOAD_MSSQL_SERVER_DETAILS = 'LOAD_MSSQL_SERVER_DETAILS';\nexport const LOAD_MSSQL_ENVIRONMENT_USAGE = 'LOAD_MSSQL_ENVIRONMENT_USAGE';\nexport const LOAD_MSSQL_DB_VERSIONS = 'LOAD_MSSQL_DB_VERSIONS';\nexport const LOAD_MSSQL_OS_TYPES = 'LOAD_MSSQL_OS_TYPES';\n","import React, { forwardRef, useMemo, useEffect, useState } from 'react';\n\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\n\nimport { useField, useFormikContext } from 'formik';\n\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport check from './field-level-validations';\n\nexport const Text = forwardRef(function Text(\n  { options, validate, defaultValue = '', value, required, reactToChange, ...props },\n  ref\n) {\n  const [shouldValidate, setShouldValidate] = useState(false);\n  const validation = useMemo(() => {\n    if (!shouldValidate) {\n      return null;\n    }\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required, shouldValidate]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  const formikCtx = useFormikContext();\n\n  useEffect(() => {\n    // used to allow the \"\" (empty string) value\n    if (value === undefined || value === null) {\n      helpers.setValue(defaultValue);\n    } else {\n      helpers.setValue(value);\n    }\n    helpers.setTouched(false);\n    setShouldValidate(true);\n  }, [value]);\n\n  useEffect(() => {\n    /**\n     * accepts a reaction function, ideally called when setValue is called.\n     * It should be used to update other known field names in reaction to this one changing.\n     */\n    reactToChange && reactToChange(value, formikCtx);\n  }, [value]);\n\n  useEffect(() => {\n    /** Unmount cleanup ? */\n    return () => {\n      if (!props.multiline || !props.isPopup) {\n        helpers.setValue(undefined);\n        // helpers.setTouched(false);\n        helpers.setError(undefined);\n      }\n    };\n  }, []);\n\n  if (field.value === undefined) {\n    return <ParameterLoader>Mounting Field</ParameterLoader>;\n  }\n\n  if (options && options.length) {\n    const selected = options.find(o => o.value === field.value) ?? null;\n    const description = options.find(o => o.value === field.value)?.description || undefined;\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        value={selected}\n        getOptionLabel={option => option.label || field.value}\n        getOptionDisabled={option => option.disabled}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n\n          /**\n            only on Select option changes for now. Can be modified for generic text,\n            but should be done when needed.\n            onChange from '...field' can be decorated.\n           */\n          reactToChange && reactToChange(option.value, formikCtx);\n        }}\n        disabled={props.disabled}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              description={description}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n\nexport function Email(props) {\n  const validations = useMemo(() => check.merge(check.email, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"email\" />;\n}\n\nexport function PhoneNumber(props) {\n  const validations = useMemo(() => check.merge(check.phone, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} />;\n}\n/* TODO: fix Integer required validation checks. Investigate how Yup returns the validateSync for this particular instance */\nexport function Integer({ validate, ...props }) {\n  const validations = useMemo(() => check.merge(props.required ?? check.required_not_null), [\n    props.required,\n    validate\n  ]); // validate is given by the parameter normalizer.\n  // it should be a list of check keys. TODO: map to validation functions to merge\n\n  return <Text {...props} validate={validations} type=\"number\" />;\n}\n\nexport function Password(props) {\n  return <Text {...props} type=\"password\" />;\n}\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: true },\n  { label: 'False', value: false }\n];\n\nexport const BooleanSelect = forwardRef(function Boolean({ options, ...props }, ref) {\n  return <Text type=\"text\" value defaultValue {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nexport const Date = forwardRef(function Date(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  let value = field.value ? moment(field.value).format('MM/DD/YYYY') : moment().utc();\n  if (props.allowBlankValue && !field.value) {\n    value = null;\n  }\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date?.format('MM/DD/YYYY') || ' ')}\n          minDate={props.minDate ? props.minDate : null}\n          minDateMessage={props.minDateMsg ? props.minDateMsg : null}\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Time = forwardRef(function Time(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  let value = field.value\n    ? moment(field.value, 'HH:mm')\n    : moment().utc().format('HH:mm');\n\n  if (props.allowBlankValue && !field.value) {\n    value = null;\n  }\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardTimePicker\n          ampm={false}\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"HH:mm\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => {\n            helpers.setValue(date?.format('HH:mm') || ' ');\n          }}\n          mask=\"__:__\"\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Select = forwardRef(function Select(\n  { options, validate, defaultValue, value, required, isNamespace, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue || '');\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  /**\n   * This should be moved to it's own thing.\n   * For now, it satisfies... :(((\n   */\n  if (options && options.length) {\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        getOptionSelected={option => option.value === field.value}\n        getOptionLabel={option => option.label || value || ''}\n        value={value}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              desription={undefined}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n","export const LOAD_ALL_ACCOUNTS = 'LOAD_ALL_ACCOUNTS';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const LOAD_ALL_LICENSES = 'LOAD_ALL_LICENSES';\nexport const LOAD_TOP_SQL_STATEMENTS = 'LOAD_TOP_SQL_STATEMENTS';\nexport const LICENSE_FULL_REPORT = 'LICENSE_FULL_REPORT';\nexport const PROVIDE_SERVERS_USAGE = 'PROVIDE_SERVERS_USAGE';\nexport const LOAD_STORAGE_POINTS = 'LOAD_STORAGE_POINTS';\nexport const SET_STORAGE_NS = 'SET_STORAGE_NS';\nexport const LOAD_STORAGE_DETAILS = 'LOAD_STORAGE_DETAILS';\nexport const LOAD_OBJECT_DETAILS = 'LOAD_OBJECT_DETAILS';\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT';\nexport const LOAD_SESSIONS = 'LOAD_SESSIONS';\nexport const PROVIDE_DB_LAST_BACKUP = 'PROVIDE_DB_LAST_BACKUP';\nexport const PROVIDE_DB_STATUS = 'PROVIDE_DB_STATUS';\nexport const UPDATE_DB_STATUS = 'UPDATE_DB_STATUS';\nexport const LOAD_PROTOCOLS = 'LOAD_PROTOCOLS';\nexport const LOAD_COLLECTION_PROCESS = 'LOAD_COLLECTION_PROCESS';\nexport const EXECUTE_COLLECTION_PROCESS = 'EXECUTE_COLLECTION_PROCESS';\nexport const LOAD_MSSQL_DISK_IO = 'LOAD_MSSQL_DISK_IO';\nexport const LOAD_MSSQL_STORAGE_USED = 'LOAD_MSSQL_STORAGE_USED';\nexport const LOAD_MSSQL_FILE_STORAGE = 'LOAD_MSSQL_FILE_STORAGE';\n","import React from 'react';\nimport classnames from 'classnames';\nimport { mdiCheckDecagram, mdiAlertDecagram } from '@mdi/js';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { node, oneOf, bool } from 'prop-types';\n\nimport './Result.local.scss';\n\nconst icons_map = {\n  success: mdiCheckDecagram,\n  fail: mdiAlertDecagram\n};\n\nexport const Result = ({ children, type }) => {\n  return (\n    <div\n      className={classnames('result-display', {\n        [type]: type\n      })}\n    >\n      <div className=\"result-icon\">\n        <SvgIcon fontSize=\"inherit\">\n          <path d={icons_map[type] || mdiAlertDecagram} />\n        </SvgIcon>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  type: oneOf(['success', 'fail']),\n  children: node\n};\n\nexport const ResultText = ({ children, compact }) => (\n  <h2 className={classnames('result-text', { compact })}>{children}</h2>\n);\n\nResultText.propTypes = {\n  compact: bool,\n  children: node\n};\n\nexport const ResultMessages = ({ messages = [] }) => (\n  <div className=\"result-messages\">\n    {messages.map((msg, index) => (\n      <div className=\"message-entry\" key={index}>\n        <p>{msg?.text?.split?.('\\n')?.[0]}</p>\n      </div>\n    ))}\n  </div>\n);\n\nResultText.propTypes = {\n  children: node\n};\n\nResult.Text = ResultText;\nResult.Messages = ResultMessages;\n","import moment from 'moment';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  fetchInvocation,\n  fetchInvocationOutput,\n  invocationOutputPoller,\n  parseInvocationResult,\n  postInvocation\n} from '../../../shared/api/invocation';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport function loadAllAccountsThunk(payload) {\n  return async (dispatch, getState) => {\n    dispatch(creators.loading(LOAD_ALL_ACCOUNTS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n        page_size: 2147483645\n      });\n\n      response.data.protocols = getState().explorer.protocols;\n\n      dispatch(creators.success(LOAD_ALL_ACCOUNTS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_ACCOUNTS, error));\n      return;\n    }\n\n    if (payload?.from === 'dashboard') {\n      dispatch(provideServersUsageThunk());\n    } else {\n      dispatch(provideDBLastBackupThunks());\n      dispatch(provideDBStatusThunks());\n    }\n  };\n}\n\nexport function loadProtocolsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_PROTOCOLS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n      dispatch(creators.success(LOAD_PROTOCOLS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_PROTOCOLS, error));\n    }\n  };\n}\n\nexport function changeStateThunk(newState) {\n  return dispatch => {\n    dispatch(creators.action(CHANGE_STATE, newState));\n\n    return 'done';\n  };\n}\n\nexport function loadAllLicensesThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_LICENSES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n      dispatch(creators.success(LOAD_ALL_LICENSES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_LICENSES, error));\n    }\n  };\n}\n\nexport function loadTopSQLStatementsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, null));\n    dispatch(creators.loading(LOAD_TOP_SQL_STATEMENTS));\n\n    try {\n      const creationResult = await postInvocation(payload);\n\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const result = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, result));\n      } else {\n        dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, error));\n    }\n  };\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n\nexport function getLicenseReportThunk(fullPath) {\n  return async dispatch => {\n    dispatch(creators.loading(LICENSE_FULL_REPORT));\n    try {\n      const response = await RestClient.get('license_data', { dbconn: fullPath });\n      if (!Array.isArray(response.data)) {\n        response.data = [];\n      }\n      dispatch(creators.success(LICENSE_FULL_REPORT, { reportData: response.data }));\n    } catch (error) {\n      dispatch(creators.fail(LICENSE_FULL_REPORT, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.SESSIONS(filters.fullPath), {\n        page_size: filters.page_size\n      });\n      dispatch(creators.success(LOAD_SESSIONS, { data: response.data, sort: filters.sort }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    const { fullPath, protocol } = filters;\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: SystemExplorerFeatureUtil.getSessionsEndpoint(protocol),\n      timestamp: null\n    };\n\n    try {\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const resultTxt = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        const statementsJson = (resultTxt || '').split('\\n')[1];\n        const sessionsData = statementsJson ? JSON.parse(statementsJson) : [];\n        dispatch(creators.success(LOAD_SESSIONS, { data: sessionsData, sort: filters.sort }));\n      } else {\n        dispatch(creators.fail(LOAD_SESSIONS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n  };\n}\n\nexport function sessionsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadSessionsByProcess(protocol)) {\n    return loadSessionsByProcessThunk(filters);\n  }\n  return loadSessionsThunk(filters);\n}\n\nexport function enableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n  };\n}\n\nexport function disableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.fail(LOAD_SESSIONS));\n  };\n}\n\nexport function loadStorageDetailsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_DETAILS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_DF(filters.fullPath));\n      const data =\n        response.data && response.data.length\n          ? { data: response.data, key: filters.fullPath }\n          : { data: [], key: filters.fullPath };\n      dispatch(creators.success(LOAD_STORAGE_DETAILS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_DETAILS, error));\n    }\n  };\n}\n\nexport function setStorageItemThunk(ns) {\n  return creators.success(SET_STORAGE_NS, ns);\n}\n\nexport function loadStoragePointsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_POINTS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_TS, {\n        dbconn: filters.fullPath\n      });\n      const data = { data: response.data, key: filters.fullPath } || {\n        data: {},\n        key: filters.fullPath\n      };\n      dispatch(creators.success(LOAD_STORAGE_POINTS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_POINTS, error));\n    }\n  };\n}\n\nexport function loadMssqlStorageDataThunk(filters) {\n  return async dispatch => {\n    const { fullPath, process, storageKey } = filters;\n    dispatch(creators.loading(storageKey));\n\n    try {\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process,\n        timestamp: null\n      };\n\n      let resultJson = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        resultJson = parseInvocationResult(output);\n      }\n      dispatch(creators.success(storageKey, { data: resultJson, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(storageKey, error));\n    }\n  };\n}\n\nexport function loadObjectsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n    const objectApis = [\n      { name: 'triggers', path: '/object_trigger' },\n      { name: 'tables', path: '/object_table' },\n      { name: 'indexes', path: '/object_index' },\n      { name: 'procedures', path: '/object_procedure' },\n      { name: 'packages', path: '/object_package' },\n      { name: 'packageBodies', path: '/object_package_body' }\n    ];\n    try {\n      let allData = await Promise.allSettled(\n        objectApis.map(api =>\n          RestClient.get(`/system/explorer${api.path}`, {\n            dbms: filters.fullPath,\n            page_size: 2147483645\n          })\n        )\n      );\n      allData = objectApis.map((api, index) => {\n        return {\n          res: allData[index]?.value?.data,\n          name: api.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function loadObjectsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n\n    try {\n      const { fullPath, protocol } = filters;\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process: SystemExplorerFeatureUtil.getObjectsEndpoint(protocol),\n        timestamp: null\n      };\n\n      let objectsJSON = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        objectsJSON = parseInvocationResult(output);\n      }\n\n      const allData = objectsJSON.map((item) => {\n        return {\n          res: item,\n          name: item.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function objectsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return loadObjectsByProcessThunk(filters);\n  }\n  return loadObjectsThunk(filters);\n}\n\nexport function setSelectedObjectThunk(selected) {\n  return creators.success(SET_SELECTED_OBJECT, selected);\n}\n\nexport function provideServersUsageThunk() {\n  return async function serversUsage(dispatch, getState) {\n    let servers = [];\n\n    if (getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE')) {\n      servers = getState()\n        .explorer.structured.dbms.find(d => d.protocol === 'ORACLE')\n        .servers.slice();\n    }\n\n    const usageResult = { servers: [] };\n\n    const allResults = await Promise.allSettled(\n      servers.map(server => {\n        return loadUsagePerDb(server);\n      })\n    );\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        usageResult.servers.push({\n          dbms: result.value.dbms,\n          address: result.value.server,\n          usage: result.value.usage || 0\n        });\n\n        return null;\n      });\n\n    usageResult.highLoadCount = usageResult.servers.filter(server => server.usage >= 75).length;\n    usageResult.servers.sort((a, b) => parseFloat(b.usage) - parseFloat(a.usage));\n\n    dispatch(creators.success(PROVIDE_SERVERS_USAGE, usageResult));\n\n    return usageResult;\n  };\n}\n\nexport function provideDBLastBackupThunks() {\n  return async function getDBLastBackup(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases.filter(db => db.special.database === 'mysql')];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [\n        ...databases,\n        ...Pgsql.databases.filter(db => db.special.database === 'postgres')\n      ];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases.filter(db => db.special.database === 'master')];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbLastBackup = [];\n\n    const allResults = await Promise.allSettled(databases.map((db) => loadDBLastBackup(db, servers)));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbLastBackup.push({\n          name: result.value.name,\n          backup: result.value.backup\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_LAST_BACKUP, dbLastBackup));\n\n    return dbLastBackup;\n  };\n}\n\nexport function provideDBStatusThunks() {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [...databases, ...Pgsql.databases];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(\n      databases.map((db) => loadDBStatus(db, servers))\n    );\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          message: result.value.message,\n          dbName: result.value.dbName\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshServerDbsStatusThunk(server) {\n  return async function refreshDbStatus(dispatch, getState) {\n    const { databases } = server;\n\n    async function retrieveDBStatus(database) {\n      dispatch(\n        creators.loading(UPDATE_DB_STATUS, [\n          {\n            name: database.name,\n            server: database.address,\n            dbms: database.protocol,\n            dbName: database?.special?.database,\n            status:\n              getState().explorer.dbStatus.find(db => db.name === database.name)?.status ||\n              'not-connected'\n          }\n        ])\n      );\n\n      const dbms = database.name;\n      const shell = server.name;\n      try {\n        const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, { dbms, shell });\n\n        let status = response.data.status?.toString().toLowerCase() || 'error';\n        // there is a case where API simply returns only 64, for not it will be treated as down\n        if (parseInt(response.data, 10) === 64) {\n          status = 'down';\n        }\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          message: response?.data?.message,\n          status\n        };\n      } catch (error) {\n        dispatch(\n          creators.fail(UPDATE_DB_STATUS, [\n            {\n              name: database.name,\n              server: database.address,\n              dbms: database.protocol,\n              dbName: database?.special?.database,\n              status: 'error',\n              error\n            }\n          ])\n        );\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          status: 'error',\n          error\n        };\n      }\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(retrieveDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          dbName: result.value.dbName,\n          message: result.value.message\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshDBStatusThunk(db) {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n\n    const selectedDBMS = structured.dbms.find(r => r.protocol === db.protocol);\n\n    const dbms = db.name;\n    const shell = selectedDBMS\n      ? selectedDBMS.servers.find(sv => sv.address === db.address)?.name\n      : undefined;\n\n    dispatch(\n      creators.loading(UPDATE_DB_STATUS, [\n        {\n          name: db.name,\n          server: db.address,\n          dbms: db.protocol,\n          status: getState().explorer.dbStatus.find(d => d.name === db.name)?.status\n        }\n      ])\n    );\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n        dbms,\n        shell\n      });\n\n      let status = response.data.status?.toString().toLowerCase() || 'error';\n      // there is a case where API simply returns only 64, for not it will be treated as down\n      if (parseInt(response.data, 10) === 64) {\n        status = 'down';\n      }\n\n      const dbStatus = [\n        {\n          name: dbms,\n          server: db.address,\n          dbms: db.protocol,\n          status\n        }\n      ];\n      dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n      return dbStatus;\n    } catch (error) {\n      dispatch(\n        creators.fail(UPDATE_DB_STATUS, [\n          {\n            name: db.name,\n            server: db.address,\n            dbms: db.protocol,\n            status: 'error',\n            error\n          }\n        ])\n      );\n    }\n  };\n}\n\nexport function loadProcessDetailsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_COLLECTION_PROCESS, { name: payload.name }));\n\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${payload.process}`\n      );\n\n      const details = {\n        name: payload.name,\n        data: response?.data?.data?.processes[0] || {}\n      };\n\n      dispatch(creators.success(LOAD_COLLECTION_PROCESS, details));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_COLLECTION_PROCESS, { name: payload.name, error }));\n    }\n  };\n}\n\nexport function executeCollectionProcessThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.action(EXECUTE_COLLECTION_PROCESS, { name: payload.name }));\n\n    return 'done';\n  };\n}\n\nasync function loadUsagePerDb(server) {\n  const database = server.databases[0];\n  const response = await RestClient.get(`/system/explorer/${database.name}/cpu_load_server`);\n\n  const usage = parseFloat(response.data.HOST_CPU);\n\n  return {\n    dbms: database.protocol,\n    server: database.address,\n    usage\n  };\n}\n\nasync function loadDBLastBackup(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_LAST_BACKUP, {\n    dbms,\n    shell\n  });\n\n  return {\n    name: database.name,\n    backup: moment(response.data.backup).isValid()\n      ? moment(response.data.backup).format('MMM DD YYYY')\n      : null\n  };\n}\n\nasync function loadDBStatus(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n      dbms,\n      shell\n    });\n\n    let status = response.data.status?.toString().toLowerCase() || 'error';\n    // there is a case where API simply returns only 64, for not it will be treated as down\n    if (parseInt(response.data, 10) === 64) {\n      status = 'down';\n    }\n\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: response?.data?.message,\n      dbName: database?.special?.database,\n      status\n    };\n  } catch (error) {\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: database?.data?.message,\n      dbName: database?.special?.database,\n      status: 'error'\n    };\n  }\n}\n","export const DbmsType = {\n  ORACLE: 'ORACLE',\n  POSTGRES: 'PGSQL',\n  MYSQL: 'MYSQL',\n  MSSQL: 'MSSQL',\n  OTHER: 'OTHER',\n};\n\nexport const DbmsFeature = {\n  WORKLOAD: 'WORKLOAD',\n  SESSIONS: 'SESSIONS',\n  TOP_SQL: 'TOP_SQL',\n  OBJECTS: 'OBJECTS',\n  STORAGE: 'STORAGE',\n  LICENSE_REPORTING: 'LICENSE_REPORTING',\n};\n\nconst FEATURE_BY_TYPE_MAP = {\n  [DbmsType.ORACLE]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL, DbmsFeature.LICENSE_REPORTING],\n  [DbmsType.MYSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.POSTGRES]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.MSSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL],\n  [DbmsType.OTHER]: [DbmsFeature.WORKLOAD],\n};\n\nconst LOAD_SESSIONS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_OBJECTS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_STORAGE_BY_PROCESS = [DbmsType.MSSQL];\nconst OBJECTS_SIDEBAR_DISABLED = [DbmsType.MSSQL];\n\nconst SESSIONS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.sessions.sp_who'\n};\n\nconst OBJECTS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.database.all_objects'\n};\n\nconst ACCOUNT_ENTITY_PREFIX = 'mas0000.';\nconst ACCOUNT_ENTITY_NAME_TOKEN = '.account.';\n\nconst DBMS_LIST_ORDER = {\n  [DbmsType.ORACLE]: 50,\n  [DbmsType.MSSQL]: 40,\n  [DbmsType.MYSQL]: 30,\n  [DbmsType.POSTGRES]: 20,\n  [DbmsType.OTHER]: 10,\n};\n\nconst OBJECTS_DATA_MAPPERS = {\n  [DbmsType.MSSQL]: (item) => {\n    return {\n      OBJECT_NAME: item.name,\n      CREATED: item.create_date,\n      OBJECT_ID: item.object_id,\n      LAST_DDL_TIME: item.modify_date,\n    };\n  },\n};\n\nexport class SystemExplorerFeatureUtil {\n  static isFeatureAllowed(dbmsType, feature) {\n    if (!dbmsType || !feature || !FEATURE_BY_TYPE_MAP[dbmsType]) {\n      return false;\n    }\n    return FEATURE_BY_TYPE_MAP[dbmsType].includes(feature);\n  }\n\n  static isWorkloadAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.WORKLOAD);\n  }\n\n  static isSessionsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.SESSIONS);\n  }\n\n  static isTopSqlAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.TOP_SQL);\n  }\n\n  static isObjectsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.OBJECTS);\n  }\n\n  static isObjectsSidebarDisabled(dbmsType) {\n    return OBJECTS_SIDEBAR_DISABLED.includes(dbmsType);\n  }\n\n  static isStorageAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.STORAGE);\n  }\n\n  static isLicenseReportingAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.LICENSE_REPORTING);\n  }\n\n  static splitAccountName(fullName) {\n    fullName = fullName || '';\n    if (!fullName.startsWith(ACCOUNT_ENTITY_PREFIX)) {\n      return '';\n    }\n    const startIdx = fullName.lastIndexOf(ACCOUNT_ENTITY_NAME_TOKEN);\n    if (startIdx === -1) {\n      return '';\n    }\n    return fullName.substr(startIdx + ACCOUNT_ENTITY_NAME_TOKEN.length);\n  }\n\n  static shouldLoadSessionsByProcess(dbmsType) {\n    return LOAD_SESSIONS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadObjectsByProcess(dbmsType) {\n    return LOAD_OBJECTS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadStorageByProcess(dbmsType) {\n    return LOAD_STORAGE_BY_PROCESS.includes(dbmsType);\n  }\n\n  static getSessionsEndpoint(dbmsType) {\n    return SESSIONS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsEndpoint(dbmsType) {\n    return OBJECTS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsDataMapper(dbmsType) {\n    return OBJECTS_DATA_MAPPERS[dbmsType];\n  }\n\n  static getListOrder(dbmsType) {\n    return DBMS_LIST_ORDER[dbmsType] || 0;\n  }\n}\n","export const LOAD_ALL_USERS = 'LOAD_ALL_USERS';\nexport const SELECT_USER = 'SELECT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const REVOKE_PRIVILEGE = 'REVOKE_PRIVILEGE';\nexport const GRANT_PRIVILEGE = 'GRANT_PRIVILEGE';\n\nexport const ADD_USER_TO_GROUPS = 'ADD_USER_TO_GROUPS';\nexport const REMOVE_USER_FROM_GROUPS = 'REMOVE_USER_FROM_GROUPS';\nexport const DEACTIVATE_USER = 'DEACTIVATE_USER';\nexport const CREATE_USER = 'CREATE_USER';\n\nexport const UPDATE_USER_EXPIRATION = 'UPDATE_USER_EXPIRATION';\nexport const UPDATE_GROUP_CONNECTIONS_LIMIT = 'UPDATE_GROUP_CONNECTIONS_LIMIT';\n","export const LOAD_ALL_GROUPS = 'LOAD_ALL_GROUPS';\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GRANT_PRIVILEGE = 'GRANT_GROUP_PRIVILEGE';\nexport const REVOKE_PRIVILEGE = 'REVOKE_GROUP_PRIVILEGE';\nexport const ADD_USERS_TO_GROUP = 'ADD_USERS_TO_GROUP';\nexport const REMOVE_USERS_FROM_GROUP = 'REMOVE_USERS_FROM_GROUP';\nexport const ADD_GROUPS_TO_GROUP = 'ADD_GROUPS_TO_GROUP';\nexport const REMOVE_GROUPS_FROM_GROUP = 'REMOVE_GROUPS_FROM_GROUP';\nexport const PATCH_SELECTED_GROUP = 'PATCH_SELECTED_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n","const MONTH_LIST = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\nconst WEEKDAYS_LIST = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nconst MAX_MINUTES_VALUE = 59;\nconst MAX_HOUR_VALUE = 23;\nconst MAX_DAY_VALUE = 31;\nconst MAX_MONTH_VALUE = 12;\nconst MAX_WEEKDAY_VALUE = 7;\n\nexport class CronValidator {\n  // public methods\n  static isValidMinutes(minutes) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(minutes), MAX_MINUTES_VALUE);\n  }\n\n  static isValidHours(hours) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(hours), MAX_HOUR_VALUE);\n  }\n\n  static isValidDays(days) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(days), MAX_DAY_VALUE);\n  }\n\n  static isValidMonth(month) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(month), MAX_MONTH_VALUE, false)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(month), MONTH_LIST);\n  }\n\n  static isValidWeekDay(weekDay) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(weekDay), MAX_WEEKDAY_VALUE)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(weekDay), WEEKDAYS_LIST);\n  }\n\n  static FORMAT_MSG = {\n    MINUTES: 'Minute value is required',\n    HOURS: 'Hour values must be between 0 and 23 and can contain special symbols: , - *',\n    DAYS: 'Day values must be between 0 and 31 and can contain special symbols: , - *',\n    MONTH: 'Month values must be between 1 and 12, or JAN-DEC, and can contain special symbols: , - *',\n    DAY_OF_WEEK: 'Day-of-Week values must be between 0 and 7, or SUN-SAT, and can contain special symbols: , - *',\n    EVERY_HOUR_WARNING: 'You have selected a process to run every hour. This may not be advisable for processes that consume significant storage resources, like backup processes.'\n  };\n\n  static ALLOWED_MINUTES_OPTIONS = ['0', '10', '20', '30', '40', '50'];\n\n  // private methods\n  static isValidNumberValue(time, maxVal, zeroAllowed = true) {\n    if (time === '*' || (zeroAllowed && time === '0')) {\n      return true;\n    }\n\n    if (time.includes(',')) {\n      return time.split(',').every((part) => {\n        return CronValidator.isValidNumberPart(part, maxVal, zeroAllowed);\n      });\n    }\n\n    return CronValidator.isValidNumberPart(time, maxVal, zeroAllowed);\n  }\n\n  static isValidNumberPart(time, maxVal, zeroAllowed = true) {\n    if (time.includes('/')) {\n      return false;\n    }\n    // Uncomment if we should allow a `/` symbol for Cron schedule\n    /*\n    if (time.includes('/')) {\n      const stepParts = time.split('/');\n      if (stepParts.length !== 2) {\n        return false;\n      }\n\n      const stepPartsValid = CronValidator.isValidNumberPart(stepParts[0], maxVal, zeroAllowed)\n        && CronValidator.isValidNumberPart(stepParts[1], maxVal, zeroAllowed);\n\n      return stepPartsValid || (stepParts[0] === '*' && CronValidator.isValidNumberPart([stepParts[1]], maxVal, zeroAllowed));\n    }\n    */\n\n    if (time.includes('-')) {\n      const rangeNumbersArr = time.split('-').map((el) => parseInt(el, 10));\n      return CronValidator.isValidNumberRange(rangeNumbersArr, maxVal) && rangeNumbersArr.length === 2 && rangeNumbersArr[0] <= rangeNumbersArr[1];\n    }\n\n    const timeNumber = parseInt(time, 10);\n    if (zeroAllowed) {\n      return timeNumber >= 0 && timeNumber <= maxVal;\n    }\n    return timeNumber > 0 && timeNumber <= maxVal;\n  }\n\n  static cleanValue(value) {\n    return (value || '').trim().toLowerCase();\n  }\n\n  static isValidNumberRange(dataArray, maxVal, zeroAllowed = true) {\n    return dataArray.every((element) => {\n      if (zeroAllowed) {\n        return element >= 0 && element <= maxVal;\n      }\n      return element > 0 && element <= maxVal;\n    });\n  }\n\n  static isValidAlternativeValue(value, allowedValues) {\n    if (value.includes(',')) {\n      return value.split(',').every((part) => {\n        return CronValidator.isValidAlternativePart(part, allowedValues);\n      });\n    }\n\n    return CronValidator.isValidAlternativePart(value, allowedValues);\n  }\n\n  static isValidAlternativePart(value, allowedValues) {\n    if (value.includes('/')) {\n      return false;\n      /*\n      const stepValues = value.split('/');\n      return CronValidator.isValidAlternativeRange(stepValues, allowedValues);\n      */\n    }\n\n    if (value.includes('-')) {\n      const rangeValues = value.split('-');\n      return CronValidator.isValidAlternativeRange(rangeValues, allowedValues) && rangeValues.length === 2\n        && allowedValues.indexOf(rangeValues[0]) <= allowedValues.indexOf(rangeValues[1]);\n    }\n\n    return CronValidator.isValidAlternativeRange([value], allowedValues);\n  }\n\n  static isValidAlternativeRange(values, allowedValues) {\n    return values.every((value) => {\n      return allowedValues.includes(CronValidator.cleanValue(value));\n    });\n  }\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { ENTITY_TYPES_FETCH } from './selectors';\n\nexport function fetchEntities() {\n  return function thunk(dispatch) {\n    const promises = ENTITY_TYPES_FETCH.map(({ type, query }) => {\n      let url = `${type}`;\n      if (query) {\n        url = url.concat(`/${encodeURIComponent(query)}`);\n      }\n      const promise = RestClient.get(url, { page_size: 2147483645 });\n      dispatch({\n        type: 'FETCH_ENTITIES',\n        promise,\n        entityType: type\n      });\n      return promise;\n    });\n\n    dispatch({\n      type: 'FETCH_ENTITIES_ALL',\n      promise: promises\n    });\n  };\n}\n\nexport function fetchEntity(eType) {\n  const definition = ENTITY_TYPES_FETCH.find(desc => eType === desc.type);\n\n  if (!definition) {\n    return function notFound() {\n      console.warn('[fetchEntity] invalid entity type:', eType); // eslint-disable-line\n    };\n  }\n\n  return function thunk(dispatch) {\n    const promise = RestClient.get(\n      `${definition.type}${definition.query ? `/${definition.query}` : ''}?page_size=2147483645`\n    );\n\n    dispatch({\n      type: 'FETCH_ENTITIES',\n      promise,\n      entityType: definition.type\n    });\n\n    return promise;\n  };\n}\n\nexport function selectEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'SELECT_ENTITY'\n  };\n}\n\nexport function clearSelectedEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'CLEAR_SELECTED_ENTITY'\n  };\n}\n\nexport function setFilterType(value) {\n  return {\n    name: 'type',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function setFilterSearch(value) {\n  return {\n    name: 'search',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function openModal(name) {\n  return {\n    type: 'OPEN_ENTITIES_MODAL',\n    name\n  };\n}\n","import { sessionActions } from './session.action';\n\nexport const actions = {\n  ...sessionActions,\n};\n","import { jobsActions } from './jobs.action';\nimport { processActions } from './process.action';\nimport { globalFiltersActions } from './global-filters.action';\n\nexport const actions = {\n  ...jobsActions,\n  ...processActions,\n  ...globalFiltersActions,\n};\n","// function Node(payload) {\n//   const data = payload;\n//   const edges = [];\n\n//   return {\n//     getEdges() {\n//       return edges;\n//     },\n//     getData() {\n//       return data;\n//     },\n//     addEdge(edge) {\n//       edges.push(edge);\n//       return edges;\n//     }\n//   };\n// }\n\nimport _ from 'lodash';\nimport { createSelector } from 'reselect';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nfunction pipe(...fns) {\n  return arg => fns.reduce((prev, fn) => fn(prev), arg);\n}\n\nfunction filterBy(selector, equalityFn, value) {\n  return data => {\n    if (value) {\n      return data.filter(el => equalityFn(selector(el), value));\n    }\n\n    return data;\n  };\n}\n\nexport function retrieveFilteredAccounts(protocol, server) {\n  return state => {\n    const { accounts } = state.explorer;\n\n    const filterByProtocol = filterBy(\n      el => (el.nodes[0] ? el.nodes[0].protocol : ''),\n      (stateValue, currentValue) => stateValue === currentValue,\n      protocol\n    );\n\n    const filterByServer = filterBy(\n      el => Object.keys(el.servers),\n      (servers, currentServer) => servers.includes(currentServer),\n      server\n    );\n\n    return pipe(filterByProtocol, filterByServer)(accounts);\n  };\n}\n\nexport function retrieveServerEntry({ protocol, address }, structure) {\n  const dbms = structure.dbms.find(entry => entry.protocol === protocol);\n  return dbms && dbms.servers.find(server => server.address === address);\n}\n\nexport function retrieveDatabaseEntry({ database, protocol, address }, structure) {\n  const server = retrieveServerEntry({ protocol, address }, structure);\n\n  return server.databases.find(db => db.special.database === database);\n}\n\nconst getStatePath = state => state.explorer.state.path;\nconst getStructured = state => state.explorer.structured.dbms;\nconst getSessions = state => state.explorer.sessions;\nconst getSessionsFlags = state => state.explorer.flags.sessions;\nconst getTopSqlStatements = state => state.explorer.topSqlStatements;\nconst getTopSqlStatementsFlags = state => state.explorer.flags.topSqlStatements;\nconst getStoragePointsLoadingFlag = state => state.explorer.flags.storage.loadingPoints;\nconst getStorageDetailsLoadingFlag = state => state.explorer.flags.storage.loadingDetails;\nconst getSelectedStorage = state => state.explorer.storage.selected;\nconst getStoredEntries = state => state.explorer.storage.storedEntries;\nconst getSelectedObject = state => state.explorer.objects.selectedObject;\nconst getSelectedOwner = state => state.explorer.objects.selectedOwner;\nconst getObjectsEntries = state => state.explorer.objects.storedEntries;\nconst getObjectsLoadingFlag = state => state.explorer.flags.objects.loading;\nconst getMssqlDiskIO = state => state.explorer.storage.mssqlDiskIO;\nconst getMssqlStorageUsed = state => state.explorer.storage.mssqlStorageUsed;\nconst getMssqlFileStorage = state => state.explorer.storage.mssqlFileStorage;\n\nexport const getFullPath = createSelector([getStatePath, getStructured], (fullPath, dbms) => {\n  const pathArr = fullPath.split('--');\n  return dbms\n    .find(({ path }) => path === pathArr[0])\n    ?.servers.find(({ address }) => address === pathArr[1])\n    ?.databases.find(({ special }) => special.database === pathArr[2])?.name;\n});\n\nexport const haveStorageData = createSelector(\n  [getFullPath, getStoredEntries],\n  (fullPath, storedEntries) => {\n    const selectedStorage = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedStorage).length > 0;\n  }\n);\n\nexport const getFormattedStorage = createSelector(\n  [getFullPath, getStoredEntries, getStoragePointsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    const points = storedEntries[fullPath]?.points;\n    if (isLoading || !_.isArray(points)) {\n      return [];\n    }\n    const factor = 1024;\n    return points.map(point => {\n      let usage = (point.Used_MB / point.Total_MB) * 100;\n      if (usage < 0) {\n        usage = 0;\n      }\n      return {\n        ns: point.Tablespace,\n        freePerc: point['Pct._Free'],\n        freeGB: point.Free_MB / factor,\n        totalGB: point.Total_MB / factor,\n        usedGB: point.Used_MB / factor,\n        usage\n      };\n    });\n  }\n);\n\nexport const haveObjectsData = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const selectedObjects = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedObjects).length > 0;\n  }\n);\n\nexport const getStorageDetailsData = createSelector(\n  [\n    getFullPath,\n    getStoredEntries,\n    getFormattedStorage,\n    getStorageDetailsLoadingFlag,\n    getSelectedStorage\n  ],\n  (fullPath, storedEntries, list, isLoading, selectedNS) => {\n    const details = storedEntries[fullPath]?.details;\n    if (isLoading || !_.isArray(details)) {\n      return {\n        tablespace: {},\n        files: []\n      };\n    }\n    return {\n      tablespace: list.find(({ ns }) => ns === selectedNS),\n      files: details.filter(({ TABLESPACE_NAME }) => TABLESPACE_NAME === selectedNS)\n    };\n  }\n);\n\nexport const getMssqlStorageDetails = createSelector(\n  [\n    getMssqlDiskIO,\n    getMssqlStorageUsed,\n    getMssqlFileStorage,\n  ],\n  (diskIO, storageUsed, fileStorage) => {\n    return { diskIO, storageUsed, fileStorage };\n  }\n);\n\nexport const getStructuredObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n\n    const objects = storedEntries[fullPath] || {};\n    const tree = Object.keys(objects).reduce((acc, key) => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          if (acc[object.OWNER] && !acc[object.OWNER].includes(key)) {\n            acc[object.OWNER].push(key);\n          } else {\n            acc[object.OWNER] = [key];\n          }\n        });\n      return acc;\n    }, []);\n    return Object.keys(tree).map(key => ({ owner: key, objects: tree[key] }));\n  }\n);\n\nexport const getInvalidObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const invalidObjects = [];\n    const objects = storedEntries[fullPath] || {};\n    Object.keys(objects).forEach(key => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          const included = invalidObjects.findIndex(\n            ({ owner, object: name }) => owner === object?.OWNER && name === key\n          );\n          if (object && object.STATUS !== 'VALID' && included === -1) {\n            invalidObjects.push({ owner: object.OWNER, object: key });\n          }\n        });\n    });\n    return invalidObjects;\n  }\n);\n\nexport const getSelectedObjectData = createSelector(\n  [getSelectedObject, getSelectedOwner, getFullPath, getObjectsEntries],\n  (object, owner, fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!object || !owner || !_.isObject(objects) || !_.isArray(objects[object])) {\n      return [];\n    }\n    return objects[object].filter(({ OWNER }) => OWNER === owner);\n  }\n);\n\nexport const getObjectsDataByProcess = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!_.isObject(objects)) {\n      return [];\n    }\n    return Object.values(objects);\n  }\n);\n\nexport function objectsSelectorResolver(state, protocol) {\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return getObjectsDataByProcess(state);\n  }\n  return getSelectedObjectData(state);\n}\n\nexport const getSortedSessions = createSelector(\n  [getSessions, getSessionsFlags],\n  (sessions, { loading, sort }) => {\n    if (loading || !_.isArray(sessions)) {\n      return [];\n    }\n    if (sort === undefined) {\n      return sessions;\n    }\n    let sortFunction;\n    // Backend doesn't support sorting at this time. Consider moving sort to backend though\n    if (sort.order === 'asc') {\n      sortFunction = (a, b) => {\n        return new Date(a[sort.sortKey]).getTime() - new Date(b[sort.sortKey]).getTime();\n      };\n    } else {\n      sortFunction = (a, b) => {\n        return new Date(b[sort.sortKey]).getTime() - new Date(a[sort.sortKey]).getTime();\n      };\n    }\n    return sessions.slice().sort(sortFunction);\n  }\n);\n\nexport const selectTopSqlStatements = createSelector(\n  [getTopSqlStatements, getTopSqlStatementsFlags],\n  (statementsTxt, { loading }) => {\n    if (loading || !statementsTxt) {\n      return [];\n    }\n\n    const statementsJson = (statementsTxt || '').split('\\n')[1];\n    return statementsJson ? JSON.parse(statementsJson) : [];\n  }\n);\n\nexport const getBackup = (database, backups) => {\n  const backup = backups.find(db => db.name === database.name)?.backup;\n\n  return backup;\n};\n\nexport const getDBStatus = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n\n  return status;\n};\n\nexport const getDBStatusInfo = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n  const info = statuses.find(db => db.name === database.name)?.message;\n\n  return dbMessage(status, info);\n};\n\nexport const STATUS_TYPES = {\n  down: 'down',\n  up: 'up',\n  error: 'error',\n  notConnected: 'not-connected',\n  notFound: 'not found',\n};\n\nexport const getDBMSStatus = (dbms, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n\n  const allStatuses = {};\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n\nexport const getDBMSStatusInfo = (dbms, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const dbmsStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': []\n  };\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      dbmsStatus[entry.status] && dbmsStatus[entry.status].push({\n        server: entry.server,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (dbmsStatus.down.length > 0) {\n    if (dbmsStatus.down.length === 1) {\n      message += `${dbmsStatus.down[0].server} has a database down. `;\n    } else {\n      message += `The following servers: ${dbmsStatus.down.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database down. `;\n    }\n  }\n\n  if (dbmsStatus.error.length > 0) {\n    if (dbmsStatus.error.length === 1) {\n      message += `${dbmsStatus.error[0].server} has a database with error. `;\n    } else {\n      message += `\\n The following servers: ${dbmsStatus.error.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database with error. `;\n    }\n  }\n\n  if (dbmsStatus['not-connected'].length > 0) {\n    if (dbmsStatus['not-connected'].length === 1) {\n      message += `${dbmsStatus['not-connected'][0].server} server has a database which status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases from servers: (${dbmsStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    dbmsStatus.down.length === 0 &&\n    dbmsStatus.error.length === 0 &&\n    dbmsStatus['not-connected'].length === 0 &&\n    dbmsStatus.up.length > 0\n  ) {\n    message = 'All servers are up.';\n  }\n\n  return message;\n};\n\nexport const getServerStatus = (server, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n  const allStatuses = {};\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.notFound]) return 'not found';\n\n  return 'not-connected';\n};\n\nexport const getServerStatusInfo = (server, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const serverStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': [],\n  };\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      serverStatus[entry.status] && serverStatus[entry.status].push({\n        dbName: entry.dbName,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (serverStatus.down.length > 0) {\n    if (serverStatus.down.length === 1) {\n      message += `${serverStatus.down[0].dbName} database is down. `;\n    } else {\n      message += `The following databases: ${serverStatus.down.map(sv => sv.dbName)} are down. `;\n    }\n  }\n\n  if (serverStatus.error.length > 0) {\n    if (serverStatus.error.length === 1) {\n      message += `${serverStatus.error[0].dbName} database has errors. `;\n    } else {\n      message += `Errors reported in databases: (${serverStatus.error.map(sv => sv.dbName)}). `;\n    }\n  }\n\n  if (serverStatus['not-connected'].length > 0) {\n    if (serverStatus['not-connected'].length === 1) {\n      message += `${serverStatus['not-connected'][0].dbName} database status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases: (${serverStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    serverStatus.down.length === 0 &&\n    serverStatus.error.length === 0 &&\n    serverStatus['not-connected'].length === 0 &&\n    serverStatus.up.length > 0\n  ) {\n    message = 'All databases are up.';\n  }\n\n  return message;\n};\n\nexport const getEntityPendingStatus = (entity, statuses, type) => {\n  const pathArray = entity.path.split('--');\n  const dbms = pathArray[0];\n  if (statuses.length === 0) return { label: `Loading ${type} status...`, loading: true };\n\n  if (type === 'server') {\n    return statuses\n      .filter(en => en.dbms === dbms && en.server === entity.address)\n      .find(e => e.loading)\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh dbs status', loading: false };\n  }\n\n  if (type === 'db') {\n    return statuses.find(db => db.name === entity.name)?.loading\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh db status', loading: false };\n  }\n\n  return { label: 'Refresh', type: false };\n};\n\nexport const dbMessage = (status, message) => {\n  if (!message) {\n    if (status === 'up') {\n      return 'Instance is up.';\n    }\n\n    if (status === 'error') {\n      return 'An unknown error has occurred on this instance.';\n    }\n\n    if (status === 'down') {\n      return 'Instance is down.';\n    }\n\n    if (status === 'not-connected' || status === 'not found') {\n      return 'Please refresh in order to get the instance status.';\n    }\n  }\n\n  return message;\n};\n","import Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LimitlessTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n    maxWidth: 'none'\n  }\n}))(Tooltip);\n","export function hasWritePrivileges(entity) {\n  return entity?.privileges?.effective?.includes?.('write');\n}\n\nexport function hasOnlyReadPrivilege(entity) {\n  if (entity?.privileges?.effective?.length === 1 && entity?.privileges?.effective[0] === 'read') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isOnlySelectGroup(details) {\n  if (!details) return false;\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (\n    (userDetails.member_of.length === 1 && userDetails.member_of[0] === 'select') ||\n    (userDetails.member_of.length === 2 &&\n      userDetails.member_of.includes('select') &&\n      userDetails.member_of.includes('user'))\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isAdmin(details) {\n  if (!details) return false;\n\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (userDetails.member_of.includes('admin')) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function hasCreatePrivilege(user, module) {\n  if (!user) return false;\n\n  const userDetails = user.toJS();\n  return userDetails?.class_privileges?.effective[module]?.some((item) => item === 'create');\n}\n","import React, { useState, useCallback, useMemo, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { useFormikContext } from 'formik';\nimport _ from 'lodash';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { mdiArrowExpand } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Modal } from 'shared/components/overlays';\nimport { ParameterLoader } from 'shared/components/loaders';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Ensure } from 'core/components/Ensure/Ensure';\nimport { Checkbox } from '../../controls/Checkbox/Checkbox';\nimport { Text } from './Generic';\nimport { formatAccount } from './formatters';\nimport check from './field-level-validations';\nimport { ADDITIONAL_ACCOUNT_FILTERS } from './filters';\nimport { deepCopy } from 'shared/lib/deep-copy';\n\nexport const RSAKey = props => {\n  return <Text multiline {...props} />;\n};\n\nexport const FQName = ({ recieved, ...props }) => {\n  const { values } = useFormikContext();\n\n  const fqname = recieved?.fqname || recieved?.name || null;\n  let name = values[`fqname--${props?.name}`];\n  let namespace = values['fqname--namespace'];\n\n  // use the value received from the invocation\n  if (fqname && name === undefined) {\n    const parts = fqname.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  // use the value that was manually typed\n  if (name !== undefined && name.slice(-1) !== '.') {\n    const parts = name.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '30px' }}\n        value={name}\n        description=\"The relative or fully-qualified name of the process to be created.\"\n        required\n        name={`fqname--${props?.name}`}\n        label=\"name\"\n        disabled={props.disabled}\n      />\n      <NamespaceSelect\n        name=\"fqname--namespace\"\n        label=\"Parent namespace\"\n        description=\"namespace (leave blank for relative name)\"\n        value={namespace}\n        disabled={props.disabled}\n        type=\"fqname\"\n      />\n    </>\n  );\n};\n\nexport function QualifiedName(props) {\n  const validations = useMemo(() => check.merge(check.masName, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"text\" />;\n}\n\n/**\n * TODO:\n * These should be retireved through a connection\n * Platforms are protocols associated for accounts\n * For now they can be hardcoded\n */\nexport const AccountSelect = ({ protocols = [], ...props }) => {\n  const { values } = useFormikContext();\n  const [showUrls, setShowUrls] = useState(false);\n  const boxName = `${props.name}-show-urls`;\n\n  const showToggle = useCallback(e => {\n    setShowUrls(e.target.checked);\n  }, []);\n\n  return (\n    <Ensure type=\"account\" inlineLoader>\n      {({ data: accounts }) => {\n        let list = accounts;\n\n        if (protocols && protocols.length) {\n          if (ADDITIONAL_ACCOUNT_FILTERS[props.name]) {\n            const additionalFilters = ADDITIONAL_ACCOUNT_FILTERS[props.name];\n            list = additionalFilters.reduce((acc, filterFn) => {\n              acc = filterFn(deepCopy(acc), values);\n              return acc;\n            }, accounts);\n          }\n\n          list = list.filter(account => protocols.includes(account.protocol));\n        }\n\n        const options = list.map(account => ({\n          label: showUrls ? formatAccount(account) : account.name,\n          value: account.name\n        }));\n\n        /**\n          TODO: filter by protocol\n         */\n        if (protocols.length) {\n          accounts.filter(Boolean);\n        }\n\n        return (\n          <FormGroup>\n            <Text {...props} options={options} />\n            <Checkbox\n              size=\"small\"\n              id={boxName}\n              name={boxName}\n              onChange={showToggle}\n              disabled={props.disabled}\n              label=\"Show Account URLs\"\n            />\n          </FormGroup>\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const PLATFORMS = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'MariaDB', value: 'MariaDB', tester: /mariadb\\./ },\n  { label: 'MySQL', value: 'MySQL', tester: /mysql\\./ },\n  { label: 'Oracle', value: 'Oracle', tester: /oracle\\./ },\n  { label: 'PostgreSQL', value: 'PostgreSQL', tester: /pgsql\\./ },\n  {\n    label: 'Microsoft SQL Server',\n    value: 'Microsoft SQL Server',\n    tester: /microsoft\\.sqlserver\\./\n  },\n  { label: 'Oracle RDS', value: 'Oracle RDS', tester: /.rds\\.oracle\\./ }\n];\n\nexport const PROCESS_TYPES = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'Backup', value: 'backup', tester: /\\.backup\\./ },\n  { label: 'Config', value: 'config', tester: /\\.config\\./ },\n  { label: 'Import', value: 'import', tester: /\\.import\\./ },\n  { label: 'Monitor', value: 'monitor', tester: /\\.monitor\\./ },\n  { label: 'Oda', value: 'oda', tester: /\\.oda\\./ },\n  { label: 'Patch', value: 'patch', tester: /\\.patch\\./ },\n  { label: 'Patching', value: 'patching', tester: /\\.patching\\./ },\n  { label: 'RDS', value: 'rds', tester: /\\.rds\\./ },\n  { label: 'Run', value: 'run', tester: /\\.run\\./ },\n  { label: 'Security', value: 'security', tester: /\\.security\\./ },\n  { label: 'Util', value: 'util', tester: /\\.util\\./ },\n];\n\nexport const PlatformSelect = props => {\n  const { values } = useFormikContext();\n\n  let platformValue = values?.platform ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availablePlatforms = PLATFORMS.slice(1).reverse();\n    platformValue =\n      availablePlatforms.find(platform => platform.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={platformValue} name=\"platform\" {...props} options={PLATFORMS} />;\n};\n\nexport const ProcessTypeSelect = props => {\n  const { values } = useFormikContext();\n\n  let typeValue = values?.type ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availableTypes = PROCESS_TYPES.slice(1).reverse();\n    typeValue =\n      availableTypes.find(type => type.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={typeValue} name=\"type\" {...props} options={PROCESS_TYPES} />;\n};\n\nexport const ProcessSelect = props => {\n  const { values } = useFormikContext();\n  const platformValue = values?.platform ?? '';\n  const typeValue = values?.type ?? '';\n\n  let platform = PLATFORMS[0];\n  let type = PROCESS_TYPES[0];\n\n  if (platformValue) {\n    platform = PLATFORMS.find(p => p.value === platformValue);\n  }\n\n  if (typeValue) {\n    type = PROCESS_TYPES.find(p => p.value === typeValue);\n  }\n\n  return (\n    <Ensure type=\"namespace\" inlineLoader>\n      <Ensure type=\"process\" inlineLoader>\n        {({ data }) => {\n          let processes = data;\n\n          if (platform && platform.value !== 'all') {\n            processes = processes.filter(process => platform.tester.test(process.name));\n          }\n\n          if (type && type.value !== 'all') {\n            processes = processes.filter(process => type.tester.test(process.name));\n          }\n\n          /** TODO, CHECK */\n          processes = processes.filter(process => {\n            if (processes.meta && process.meta.appearance) {\n              return process.meta.appearance !== 'Hidden';\n            }\n\n            return true;\n          });\n\n          // display only processes that have the is_executable === true\n          // the others need to be compiled first\n          const OPTIONS = processes\n            .filter(p => p.is_executable)\n            .map(item => ({\n              value: item.name,\n              label: item.name,\n              description: item.description,\n              disabled: item.meta && item.meta.appearance === 'Greyed'\n            }));\n\n          return <Text type=\"text\" defaultValue=\"\" name=\"process\" {...props} options={OPTIONS} />;\n        }}\n      </Ensure>\n    </Ensure>\n  );\n};\n\nexport const NamespaceSelect = ({ value, ...props }) => {\n  const { values } = useFormikContext();\n  const defaultValue = values.namespace || '';\n  let customVal = value;\n\n  return (\n    <Ensure type=\"namespace\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading namespaces...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load namespaces.</ParameterLoader>;\n        }\n\n        let namespaces = data;\n\n        namespaces = namespaces.filter(namespace => {\n          if (namespace.meta && namespace.meta.appearance) {\n            return namespace.meta.appearance !== 'Hidden';\n          }\n\n          return true;\n        });\n\n        const OPTIONS = namespaces.map(item => ({\n          value: item.name,\n          label: item.name,\n          disabled: item.meta && item.meta.appearance === 'Greyed'\n        }));\n\n        if (props?.type === 'fqname') {\n          customVal = OPTIONS.find(o => o.value === value)?.value || '';\n        }\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            name=\"namespace\"\n            value={customVal}\n            {...props}\n            options={OPTIONS}\n            required\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const FormPrototypeSelect = props => {\n  return (\n    <Ensure type=\"prototype\" inlineLoader>\n      {({ data: prototypes }) => {\n        const list = prototypes || [];\n\n        const options = list.map(prototype => ({\n          label: prototype.name,\n          value: prototype.name\n        }));\n\n        return <Text fullWidth {...props} description=\"\" options={options} />;\n      }}\n    </Ensure>\n  );\n};\n\nexport const ModeSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.mode || '';\n\n  return (\n    <Ensure type=\"type\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading type...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load types.</ParameterLoader>;\n        }\n\n        const modes = data.filter(type => type.name === 'mas0300.sys.account.privilege_mode')[0];\n\n        if (modes.meta && modes.meta.appearance === 'Hidden') {\n          return null;\n        }\n\n        const OPTIONS =\n          modes.enumerations &&\n          modes.enumerations.map(item => ({\n            value: item.label,\n            label: item.label,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            disabled={modes.meta && modes.meta.appearance === 'Greyed'}\n            name=\"process\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nfunction variadicListReducer(list, action) {\n  switch (action.type) {\n    case 'add_new_parameter':\n      return produce(list, draft => {\n        draft.push({ name: '', type: '', deflt: undefined, description: null, value: '' });\n      });\n\n    case 'remove_parameter':\n      return produce(list, draft => {\n        draft.pop();\n      });\n\n    default:\n      return list;\n  }\n}\n\nfunction useVariadicList(recieved) {\n  const [list, dispatch] = useReducer(variadicListReducer, recieved?.replvars || []);\n\n  return { list, dispatch };\n}\n\nexport const Variadic = ({ recieved, disabled }) => {\n  const { values } = useFormikContext();\n  const displayDeftlDesc = selectedProcess !== 'vendita.oracle.rdbms.cli.sqlplus.execute';\n\n  const { list, dispatch } = useVariadicList(recieved);\n\n  const selectedProcess = values.process;\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvars</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Ensure type=\"type\">\n          {({ data: datatypes }) => {\n            const options = datatypes\n              .filter(dataType => {\n                if (\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.script' ||\n                  selectedProcess === 'mas0300.os.svc.db.data.sql.query_import' ||\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.execute' ||\n                  selectedProcess === 'dbatools.oracle.run.import_sqlplus_query'\n                ) {\n                  return dataType.name === 'string' || dataType.name === 'integer';\n                }\n                return true;\n              })\n              .map(dataType => {\n                return {\n                  label: dataType.name,\n                  value: dataType.name\n                };\n              });\n\n            return (\n              <>\n                <div>\n                  {list.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <VariadicInstance\n                        data={item}\n                        index={index}\n                        defltDesc={displayDeftlDesc}\n                        types={options}\n                        disabled={disabled}\n                      />\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  }}\n                >\n                  {list.length > 0 && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        dispatch({ type: 'remove_parameter' });\n                      }}\n                      disabled={disabled}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                  <Button\n                    onClick={() => {\n                      dispatch({ type: 'add_new_parameter' });\n                    }}\n                    disabled={disabled}\n                  >\n                    Add\n                  </Button>\n                </div>\n              </>\n            );\n          }}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nfunction VariadicInstance({ data = {}, index, defltDesc, types, disabled }) {\n  const name_base = `replvar--${index}`;\n\n  let parsedDeflt = data.deflt;\n\n  if (data.deflt) {\n    parsedDeflt = data.deflt.replace(\"str('\\\"'\", '').replace(\"'\\\"')\", '');\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Name\"\n        type=\"text\"\n        name={`${name_base}--name`}\n        value={data.name}\n        disabled={disabled}\n        validate={check.merge(check.firstCharLetter, check.masName)}\n        required\n      />\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Type\"\n        type=\"text\"\n        name={`${name_base}--type`}\n        options={types}\n        value={data.type}\n        disabled={disabled}\n        required\n      />\n      {defltDesc && (\n        <>\n          <Text\n            style={{ marginBottom: '15px' }}\n            label=\"Deflt\"\n            type=\"text\"\n            name={`${name_base}--deflt`}\n            value={parsedDeflt}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n          <Text\n            style={{ marginBottom: '30px' }}\n            label=\"Description\"\n            type=\"text\"\n            name={`${name_base}--description`}\n            value={data.description}\n            defaultValue={null}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n        </>\n      )}\n      {!defltDesc && (\n        <Text\n          style={{ marginBottom: '15px' }}\n          label=\"Value\"\n          type=\"text\"\n          name={`${name_base}--value`}\n          value={data.value}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n}\n\nexport const Multiline = props => {\n  const [open, setOpen] = useState(false);\n  const { values } = useFormikContext();\n  const value = values[props.name];\n\n  return (\n    <>\n      <Text\n        InputProps={{\n          startAdornment: (\n            <InputAdornment>\n              <LightTooltip title=\"Expand\">\n                <SvgIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    setOpen(true);\n                  }}\n                >\n                  <path d={mdiArrowExpand} />\n                </SvgIcon>\n              </LightTooltip>\n            </InputAdornment>\n          )\n        }}\n        value={value}\n        isPopup={open}\n        multiline\n        {...props}\n      />\n      <Modal open={open}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <Paper.Content>\n            <Text value={value} multiline isPopup={open} variant=\"standard\" {...props} />\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={() => setOpen(false)}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const Replvalues = ({ recieved, disabled, ...props }) => {\n  const { values } = useFormikContext();\n  const keys = Object.keys(values);\n  const replvars = keys.filter(key => key.startsWith('replvar'));\n  const valuesNr = replvars.length / 4;\n  const replvaluesParams = [];\n\n  if (valuesNr > 0) {\n    for (let i = 0; i < valuesNr; i++) {\n      const type =\n        values[`replvar--${i}--type`] === 'integer' ? 'number' : values[`replvar--${i}--type`];\n      const label = values[`replvar--${i}--name`];\n      const name = `replvalue--${i}`;\n      const value =\n        recieved?.replvalues && recieved.replvalues[values[`replvar--${i}--name`]]\n          ? recieved.replvalues[values[`replvar--${i}--name`]]\n          : values[`replvalue--${i}`];\n      replvaluesParams.push({ type, label, name, value });\n    }\n  }\n\n  if (replvaluesParams.length > 0) {\n    return (\n      <>\n        <Section>\n          <Section.Header>\n            <Section.Title>replvalues</Section.Title>\n          </Section.Header>\n        </Section>\n        {replvaluesParams.map((repl, index) => {\n          return (\n            <Text\n              key={index}\n              style={{ marginBottom: '15px' }}\n              label={repl.label}\n              type={repl.type}\n              name={repl.name}\n              value={repl.value}\n              disabled={disabled}\n              description={props.description}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvalues</Section.Title>\n      </Section.Header>\n    </Section>\n  );\n};\n\nexport const Uuid = props => {\n  return <Text validate={check.uuid} {...props} />;\n};\n","export const InvocationStatus = {\n  NEW: '__NEW__',\n  ALL: '__ALL__',\n  NOT_FETCHED: 'NOT_FETCHED',\n  ABORTED: 'ABORTED',\n  SCHEDULED: 'SCHEDULED',\n  SUCCEEDED: 'SUCCEEDED',\n  FAILED: 'FAILED',\n  EXECUTING: 'EXECUTING',\n  DELAYED: 'DELAYED',\n  KILLED: 'KILLED'\n};\n\nexport const AllowOutputFor = [\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED,\n  InvocationStatus.FAILED,\n  InvocationStatus.SUCCEEDED,\n  InvocationStatus.EXECUTING\n];\n\nexport const AllowGeneralEditingFor = [InvocationStatus.NEW];\n\nexport const CannotShowStatusFor = [\n  InvocationStatus.NEW,\n  InvocationStatus.ALL,\n  InvocationStatus.NOT_FETCHED\n];\n\nexport const FAILURES = [\n  InvocationStatus.FAILED,\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED\n];\n\nexport const SUCESSES = [InvocationStatus.SUCCEEDED];\n\nexport const WARNINGS = [InvocationStatus.DELAYED, InvocationStatus.SCHEDULED];\n","export const LOAD_LICENSES = 'LOAD_LICENSES';\nexport const LOAD_DB_LICENSES = 'LOAD_DB_LICENSES';\nexport const LOAD_LICENSE_TARGETS = 'LOAD_LICENSE_TARGETS';\nexport const LOAD_AVAILABLE_SERVERS = 'LOAD_AVAILABLE_SERVERS';\n","export const LINUX_OS_PRIMARY_COLOR = '#f69636';\nexport const LINUX_OS_SECONDARY_COLOR = '#8f5922';\nexport const WINDOWS_OS_PRIMARY_COLOR = '#0c86f1';\nexport const WINDOWS_OS_SECONDARY_COLOR = '#0461b3';\n\nexport const SE_DB_PRIMARY_COLOR = '#55c667';\nexport const SE_DB_SECONDARY_COLOR = '#3c8b48';\nexport const EE_DB_PRIMARY_COLOR = '#fde725';\nexport const EE_DB_SECONDARY_COLOR = '#a98d35';\nexport const CUSTOM_DB_PRIMARY_COLOR = '#fd3725';\nexport const CUSTOM_DB_SECONDARY_COLOR = '#cd291a';\n\nexport const DB_VERSION_COLOR_PALETTE = [\n  {\n    color: '#404788',\n    secondaryColor: '#3c416f'\n  }, {\n    color: '#238a8d',\n    secondaryColor: '#287072'\n  }, {\n    color: '#71bbef',\n    secondaryColor: '#67aada'\n  }, {\n    color: '#d7b4f8',\n    secondaryColor: '#c4a7e0'\n  }, {\n    color: '#fdc300',\n    secondaryColor: '#cda10d'\n  }, {\n    color: '#fd3725',\n    secondaryColor: '#cd291a'\n  }, {\n    color: '#d525fd',\n    secondaryColor: '#b91edc'\n  }, {\n    color: '#25a7fd',\n    secondaryColor: '#2085c7'\n  }\n];\n","import React, { useState } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nexport const SubmitButton = ({ children = 'Submit', confirmation, forcedDisable, ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating, dirty } = useFormikContext();\n  const [open, setOpen] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        disabled={!dirty || isSubmitting || isValidating || submitDisabled}\n        onClick={() => {\n          console.log('submitting', values); // eslint-disable-line\n          if (confirmation) {\n            setOpen(true);\n          } else {\n            submitForm();\n          }\n\n          if (forcedDisable) {\n            setSubmitDisabled(true);\n          }\n        }}\n        {...props}\n      >\n        {children}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '350px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n          <Paper.Content scrollable={false}>\n            <Result type=\"fail\">\n              <BodyText>Are you sure you want to save?</BodyText>\n            </Result>\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                No\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                  submitForm();\n                }}\n              >\n                Yes\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { bool, func, node, shape, object, string } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './AvatarCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nexport const AvatarCard = ({\n  label,\n  avatar = {},\n  selected,\n  data,\n  onSelect,\n  action,\n  description,\n  ...props\n}) => {\n  const focusable = {\n    ...(onSelect && {\n      onFocus: useCallback(\n        event => {\n          event.stopPropagation();\n          onSelect(data);\n        },\n        [onSelect, data]\n      ),\n      tabIndex: props.disabled ? -1 : 0\n    })\n  };\n\n  return (\n    <div\n      {...focusable}\n      className={classnames('avatar-card', { selected })}\n      data-qa={`avatar-card-of-${label}`}\n      {...props}\n    >\n      <Avatar className=\"card-avatar\" alt={label} src={avatar.src}>\n        {avatar.initial || avatar.fallback}\n      </Avatar>\n      <span className=\"card-label\">{label}</span>\n      <div className=\"right-slot\">\n        {action && (\n          <span onClick={containEvent} className=\"action-slot\">\n            {action}\n          </span>\n        )}\n        {typeof description === 'string' && (\n          <LightTooltip placement=\"right\" title={description}>\n            <SvgIcon>\n              <Icon path={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction containEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nAvatarCard.propTypes = {\n  label: node,\n  selected: bool,\n  disabled: bool,\n  avatar: shape({\n    src: string,\n    fallback: node\n  }),\n  data: object,\n  onSelect: func,\n  action: node\n};\n","import * as Yup from 'yup';\n\nexport const mergeValidations = (...callbacks) => value => {\n  let error;\n\n  callbacks.forEach(provided => {\n    if (provided && typeof provided === 'function') {\n      error = provided(value);\n    }\n  });\n\n  return error;\n};\n\nexport const checkRequired = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkRequiredNotNullable = async value => {\n  try {\n    await Yup.string()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkEmail = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .email('Invalid email format.')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkPhoneNumber = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUnsignedInt = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[-]!$/, {\n        excludeEmptyString: true,\n        message: 'The parameter must be unsigned.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkName = value => {\n  if (!/^(?:[a-z_][a-z0-9_\\\\.]*)$/i.test(value) || (value && value.substr(-1) === '.')) {\n    return 'A valid MAS relative name is required.';\n  }\n};\n\nexport const checkFirstLetter = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[a-zA-Z].*/, {\n        excludeEmptyString: true,\n        message: 'First character must be a letter'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUuid = value => {\n  if (value) {\n    if (!/^[a-fA-F0-9-]+$/.test(value)) {\n      return 'Only hexadecimal values (0-9, a-f, A-F) and hyphens (\"-\") are allowed';\n    }\n    const copy = value.replace(/-/g, '');\n    if (copy.length !== 32) {\n      return 'A string of 32 hexadecimal with hyphens (\"-\") is required (ex: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)';\n    }\n  }\n};\n\nexport const noop = () => {};\n\nexport default {\n  merge: mergeValidations,\n  required: checkRequired,\n  required_not_null: checkRequiredNotNullable,\n  email: checkEmail,\n  phone: checkPhoneNumber,\n  unsigned_int: checkUnsignedInt,\n  unsigned_float: noop,\n  signed_float: noop,\n  masName: checkName,\n  firstCharLetter: checkFirstLetter,\n  uuid: checkUuid\n};\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  DESELECT_ALL,\n  LOAD_DB_EDITION,\n  LOAD_DB_VERSION,\n  LOAD_LICENSE_DELTA,\n  LOAD_MSSQL_DB_VERSIONS,\n  LOAD_MSSQL_ENVIRONMENT_USAGE,\n  LOAD_MSSQL_NETWORK_EDGES,\n  LOAD_MSSQL_NETWORK_NODES,\n  LOAD_MSSQL_OS_TYPES,\n  LOAD_MSSQL_SERVER_DETAILS,\n  LOAD_MSSQL_USAGE,\n  LOAD_NETWORK_EDGES,\n  LOAD_NETWORK_NODES,\n  LOAD_OS_TYPE,\n  LOAD_SERVER_DETAILS,\n  LOAD_USAGE,\n  LOAD_USAGE_STAT,\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\n\nexport function loadExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function deselectAllThunk() {\n  return dispatch => {\n    dispatch(creators.action(DESELECT_ALL));\n\n    return 'done';\n  };\n}\n\nexport function selectAllThunk() {\n  return function selectAll(dispatch, getState) {\n    const { rawEntries } = getState().executiveDashboard;\n\n    dispatch(creators.action(SELECT_ALL, rawEntries));\n\n    return 'done';\n  };\n}\n\nexport function toggleServerThunk(server) {\n  return function toggleServer(dispatch, getState) {\n    const { allServers } = getState().executiveDashboard;\n    let { selectedServers } = getState().executiveDashboard;\n\n    const svIndex = allServers.findIndex(sv => sv.name === server.name);\n\n    if (selectedServers.find(sv => sv.name === server.name)) {\n      selectedServers = selectedServers.filter(sv => sv.name !== server.name);\n    } else {\n      selectedServers = [...selectedServers, allServers[svIndex]];\n    }\n\n    selectedServers.sort((a, b) => a.nrCores - b.nrCores);\n\n    dispatch(creators.action(TOGGLE_SERVER, selectedServers));\n    return 'done';\n  };\n}\n\nexport function loadVirtualExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.VIRTUAL_EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function loadNetworkNodesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_NETWORK_NODES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/network/nodes`;\n      if (serverId) {\n        url = `${url}/dd?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_NETWORK_NODES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_NETWORK_NODES, error));\n    }\n  };\n}\n\nexport function loadNetworkEdgesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_NETWORK_EDGES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/network/edges`;\n      if (serverId) {\n        url = `${url}/dd?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_NETWORK_EDGES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_NETWORK_EDGES, error));\n    }\n  };\n}\n\nexport function loadServerDetailsThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SERVER_DETAILS));\n\n    try {\n      const response = await RestClient.get(`/dbpollster/dd_server?s_id=${serverId}`);\n      dispatch(creators.success(LOAD_SERVER_DETAILS, response.data.data[0]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SERVER_DETAILS, error));\n    }\n  };\n}\n\nexport function loadOSTypeThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OS_TYPE));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/os_type`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_os_type?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_OS_TYPE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OS_TYPE, error));\n    }\n  };\n}\n\nexport function loadDBEditionThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_EDITION));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/db_edition`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_db_edition?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_DB_EDITION, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_EDITION, error));\n    }\n  };\n}\n\nexport function loadDBVersionThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_VERSION));\n\n    let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/db_version`;\n    if (serverId) {\n      url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_db_version?s_id=${serverId}`;\n    }\n\n    try {\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_DB_VERSION, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_VERSION, error));\n    }\n  };\n}\n\nexport function loadUsageThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USAGE));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/usage`);\n      dispatch(creators.success(LOAD_USAGE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USAGE, error));\n    }\n  };\n}\n\nexport function loadUsageStat(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USAGE_STAT));\n\n    const serverPrefix = serverId ? 'dd_' : '';\n    const serverSuffix = serverId ? `?s_id=${serverId}` : '';\n    try {\n      const usageStatResponse = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/${serverPrefix}license_usage_stat${serverSuffix}`);\n      const data = (usageStatResponse.data.data || []).reduce((obj, item) => {\n        return Object.assign(obj, item);\n      }, {});\n      const payload = {\n        totalRisk: data.total_risk,\n        licenseCost: data.license_cost,\n        supportCost: data.support_cost,\n        unallocatedLicenses: data.unallocated_licenses,\n      };\n\n      dispatch(creators.success(LOAD_USAGE_STAT, payload));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USAGE_STAT, error));\n    }\n  };\n}\n\nexport function loadLicenseDeltaThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSE_DELTA));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/license_delta`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD}/dd_license_delta?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_LICENSE_DELTA, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSE_DELTA, error));\n    }\n  };\n}\n\nexport function loadMssqlUsageThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_USAGE));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/license_used`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_license_used?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_USAGE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_USAGE, error));\n    }\n  };\n}\n\nexport function loadMssqlNetworkNodesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_NETWORK_NODES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/network_nodes`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_network_nodes?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_NETWORK_NODES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_NETWORK_NODES, error));\n    }\n  };\n}\n\nexport function loadMssqlNetworkEdgesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_NETWORK_EDGES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/network_edges`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_network_edges?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_NETWORK_EDGES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_NETWORK_EDGES, error));\n    }\n  };\n}\n\nexport function loadMssqlServerDetailsThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_SERVER_DETAILS));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_network_server?s_id=${serverId}`);\n      dispatch(creators.success(LOAD_MSSQL_SERVER_DETAILS, response.data.data[0]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_SERVER_DETAILS, error));\n    }\n  };\n}\n\nexport function loadMssqlEnvironmentUsageThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_ENVIRONMENT_USAGE));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/usage`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_usage?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_ENVIRONMENT_USAGE, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_ENVIRONMENT_USAGE, error));\n    }\n  };\n}\n\nexport function loadMssqlDbVersionsThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_DB_VERSIONS));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/db_version`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_db_version?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_DB_VERSIONS, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_DB_VERSIONS, error));\n    }\n  };\n}\n\nexport function loadMssqlOsTypesThunk(serverId) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_MSSQL_OS_TYPES));\n\n    try {\n      let url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/os_type`;\n      if (serverId) {\n        url = `${CONSTANTS.BASE.ENDPOINTS.MSSQL_EXECUTIVE_DASHBOARD}/dd_os_type?s_id=${serverId}`;\n      }\n      const response = await RestClient.get(url);\n      dispatch(creators.success(LOAD_MSSQL_OS_TYPES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_MSSQL_OS_TYPES, error));\n    }\n  };\n}\n","const DAY = 86400000;\nconst HOUR = 3600000;\nconst MINUTE = 60000;\nconst SECOND = 1000;\n\nexport const formatTimePeriod = (timeMillis) => {\n  let millisLeft = timeMillis;\n  const days = millisLeft / DAY;\n  millisLeft %= DAY;\n  const hours = millisLeft / HOUR;\n  millisLeft %= HOUR;\n  const minutes = millisLeft / MINUTE;\n  millisLeft %= MINUTE;\n  const seconds = millisLeft / SECOND;\n  millisLeft %= SECOND;\n\n  return [\n    days >= 1 ? `${Math.floor(days)}d` : null,\n    hours >= 1 ? `${Math.floor(hours)}h` : null,\n    minutes >= 1 ? `${Math.floor(minutes)}m` : null,\n    seconds >= 1 ? `${Math.floor(seconds)}s` : null,\n    millisLeft >= 1 ? `${Math.floor(millisLeft)}ms` : null\n  ].filter(Boolean).join(' ');\n};\n","import { createSelector } from 'reselect';\n\n//\nexport const getCurrentUserName = createSelector(\n  state => state.session,\n  session => {\n    /** ImmutableJs object :( */\n    return session.get('currentUser').get('name');\n  }\n);\n\nexport const getCurrentUserDetails = createSelector(\n  state => state.session,\n  session => {\n    return session.get('currentUser').get('details');\n  }\n);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  ADD_USER_TO_GROUPS,\n  CREATE_USER,\n  DEACTIVATE_USER,\n  GRANT_PRIVILEGE,\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  UPDATE_GROUP_CONNECTIONS_LIMIT,\n  UPDATE_USER_EXPIRATION\n} from '../actions';\n\nexport function loadAllUsersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_USERS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_USERS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadUserThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USER, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USER, error));\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(GRANT_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(REVOKE_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function addUserToGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/grant`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, allUsers.data));\n\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function removeUserFromGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function deactivateUserThunk(user) {\n  return async dispatch => {\n    dispatch(creators.loading(DEACTIVATE_USER, user));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}/revoke`, {\n        groups: user.member_of\n      });\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(DEACTIVATE_USER, allUsers.data));\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DEACTIVATE_USER, error));\n\n      return error.data;\n    }\n  };\n}\n\nexport function createUserThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.username,\n      password: values.password,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_USER, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, refreshed.data));\n\n      dispatch(creators.success(CREATE_USER));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_USER, error));\n      return error?.response?.data;\n    }\n  };\n}\n\nexport function updateUserExpirationThunk(user, date) {\n  return async (dispatch) => {\n    dispatch(creators.loading(UPDATE_USER_EXPIRATION, user));\n\n    try {\n      const response = await RestClient.post(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/set_expiration_datetime`, { expiration_datetime: date }\n      );\n      dispatch(creators.success(UPDATE_USER_EXPIRATION, response.data));\n    } catch (error) {\n      dispatch(creators.fail(UPDATE_USER_EXPIRATION, error));\n    }\n  };\n}\n\nexport function updateGroupConnectionsLimitThunk(group, limit) {\n  return async (dispatch) => {\n    dispatch(creators.loading(UPDATE_GROUP_CONNECTIONS_LIMIT, group));\n\n    try {\n      const response = await RestClient.post(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/set_connection_limit`, { connection_limit: limit }\n      );\n      dispatch(creators.success(UPDATE_GROUP_CONNECTIONS_LIMIT, response.data));\n    } catch (error) {\n      dispatch(creators.fail(UPDATE_GROUP_CONNECTIONS_LIMIT, error));\n    }\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function postInvocation(body) {\n  try {\n    const { data } = await RestClient.post('/invocation', body);\n\n    return { result: data.result, invocations: data.data.invocations };\n  } catch (e) {\n    return { result: 'fail', invocations: [], messages: e.messages };\n  }\n}\n\nexport function requestInvocation(uuid) {\n  return RestClient.get(`/invocation/${uuid}`);\n}\n\nexport async function fetchInvocation(uuid) {\n  try {\n    const response = await RestClient.get(`/invocation/${uuid}`);\n\n    return {\n      result: 'success',\n      invocation: response.data.data.invocations[0]\n    };\n  } catch (e) {\n    console.log(e); // eslint-disable-line\n    return { result: 'fail' };\n  }\n}\n\nexport async function fetchInvocationOutput(uuid) {\n  return RestClient.get(`/invocation/${uuid}/display`, {\n    page_size: 2147483645\n  });\n}\n\nexport async function invocationOutputPoller(uuid) {\n  let statusChecksCount = 0;\n  let pollerFinished = false;\n  let succeeded = false;\n\n  while (statusChecksCount < 10 && !pollerFinished) {\n    const invocationStatus = await sleep(fetchInvocation.bind(this, uuid)); // eslint-disable-line\n    statusChecksCount++;\n    succeeded = invocationStatus.invocation.status === 'SUCCEEDED';\n    pollerFinished = succeeded || invocationStatus.invocation.status === 'FAILED';\n  }\n\n  return succeeded ? fetchInvocationOutput(uuid) : Promise.resolve(null);\n}\n\nexport function parseInvocationResult(invocationOutput) {\n  const resultText = invocationOutput && invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n  const resultJsonString = (resultText || '').split('\\n')[1];\n  return resultJsonString ? JSON.parse(resultJsonString) : [];\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n","export const ROOT_NODE_ID = 1;\nexport const ROOT_NODE = { id: ROOT_NODE_ID, label: 'MAS', title: 'MAS server', color: '#2f80ed', shape: 'circle', widthConstraint: 100 };\nexport const SERVER_NODE_COLOR = '#219653';\nexport const SERVER_NODE_SHAPE = 'circle';\nexport const DB_NODE_COLOR = '#f2c94c';\nexport const DB_NODE_SHAPE = 'circle';\nexport const NODE_SIZE_MULTIPLIER = 10;\nexport const BASE_NETWORK_GRAPH_OPTIONS = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: '#000000'\n  },\n  autoResize: true\n};\n","import * as Yup from 'yup';\n\nexport function getInitialValues(parameters) {\n  const initialValues = {};\n\n  parameters.map(parameter => {\n    initialValues[parameter.name] = parameter.deflt !== null ? parameter.deflt : '';\n    return null;\n  });\n\n  return initialValues;\n}\n\nexport function getValidationSchema(parameters) {\n  const validationSchema = {};\n\n  parameters.map(parameter => {\n    validationSchema[parameter.name] = Yup.string();\n\n    if (parameter.is_required) {\n      validationSchema[parameter.name].required('A value is required');\n    }\n\n    return null;\n  });\n}\n\nexport function formatParameters(values) {\n  const parameters = {};\n\n  Object.keys(values).map(value => {\n    if (typeof values[value] === 'string') {\n      if (values[value].length > 0 || values[value].trim()) {\n        parameters[value] = values[value];\n      }\n    } else if (typeof values[value] === 'object') {\n      if (values[value].name && (values[value].name.length > 0 || values[value].name.trim())) {\n        parameters[value] = values[value].name;\n      }\n    }\n\n    return null;\n  });\n\n  return parameters;\n}\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.shared;\n\nexport const jobsSelector = createSelector(localState, state => state.get('jobs'));\n\nexport const connectionsSelector = createSelector(localState, state => state.get('connections'));\n\nexport const jobsSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('jobs')\n); // eslint-disable-line\n\nexport const processesSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('processes')\n); // eslint-disable-line\n\nexport const globalFiltersSelector = createSelector(localState, state =>\n  state.get('globalFilters')\n); // eslint-disable-line\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport function loadAllGroupsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_GROUPS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_GROUPS, error.data));\n\n      return error.data;\n    }\n  };\n}\n\nexport function loadGroupThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_GROUP, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${name}`);\n      dispatch(creators.success(LOAD_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_GROUP, error.data));\n    }\n  };\n}\n\nexport function createGroupThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.groupname,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_GROUP, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, refreshed.data));\n\n      dispatch(creators.success(CREATE_GROUP));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_GROUP, error));\n      return error?.response?.data;\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(GRANT_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(REVOKE_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function removeUsersFromGroupThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_USERS_FROM_GROUP, params));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`, {\n        groups: [params.group]\n      });\n\n      const group = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(REMOVE_USERS_FROM_GROUP, group.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_USERS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeSubGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_GROUPS_FROM_GROUP, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(REMOVE_GROUPS_FROM_GROUP, response.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_GROUPS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function addUsersToGroupThunk(params) {\n  return async dispatch => {\n    const { group, users } = params;\n\n    dispatch(creators.loading(ADD_USERS_TO_GROUP, params));\n\n    try {\n      await Promise.all(\n        users.map(async user => {\n          return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant`, {\n            groups: [group]\n          });\n        })\n      );\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(ADD_USERS_TO_GROUP, response.data));\n\n      return response.data;\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USERS_TO_GROUP, errorMsg));\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeGroupThunk(group) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_GROUP, group));\n\n    try {\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}`);\n      dispatch(creators.success(DELETE_GROUP));\n\n      dispatch(loadAllGroupsThunk());\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DELETE_GROUP, error));\n\n      return error.data;\n    }\n  };\n}\n","export const LICENSABLE_FEATURE_DEFAULT_COLOR = '#176BA0';\nexport const LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR = '#E8F9F5';\n\nexport const LICENSABLE_FEATURES_COLORS = [\n  {\n    color: '#176BA0',\n    secondaryColor: '#E8F9F5',\n    type: 'DCO'\n  },\n  {\n    color: '#1AC9E6',\n    secondaryColor: '#e8fafc',\n    type: 'AC'\n  },\n  {\n    color: '#6DF0D2',\n    secondaryColor: '#f0fdfb',\n    type: 'AS'\n  },\n  {\n    color: '#7D3AC1',\n    secondaryColor: '#f2ebf9',\n    type: 'DV'\n  },\n  {\n    color: '#EA7369',\n    secondaryColor: '#fbedf7',\n    type: 'MT'\n  },\n  {\n    color: '#1DE4BD',\n    secondaryColor: '#e8fcf8',\n    type: 'DD'\n  },\n  {\n    color: '#EF7E32',\n    secondaryColor: '#fdf2eb',\n    type: 'DT'\n  },\n  {\n    color: '#F0A58F',\n    secondaryColor: '#fdf6f4',\n    type: 'SE2'\n  },\n  {\n    color: '#C02323',\n    secondaryColor: '#f9e9e9',\n    type: 'P'\n  },\n  {\n    color: '#DB4CB2',\n    secondaryColor: '#fbedf7',\n    type: 'IMD'\n  },\n  {\n    color: '#4c6bdb',\n    secondaryColor: '#a8d1f1',\n    type: 'EE'\n  },\n  {\n    color: '#399137',\n    secondaryColor: '#a6eaa5',\n    type: 'RAT'\n  },\n  {\n    color: '#e846f3',\n    secondaryColor: '#e68bee',\n    type: 'DDM'\n  },\n  {\n    color: '#f31414',\n    secondaryColor: '#f85959',\n    type: 'LS'\n  },\n  {\n    color: '#0872fd',\n    secondaryColor: '#589dfa',\n    type: 'AA'\n  },\n  {\n    color: '#217303',\n    secondaryColor: '#3f722c',\n    type: 'SP'\n  }\n];\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.session;\n\nexport const authorizationSelector = createSelector(localState, state =>\n  state.get('authorization')\n);\n\nexport const currentUserSelector = createSelector(localState, state => state.get('currentUser'));\n\nexport const loginSelector = createSelector(localState, state => state.get('login'));\n\nexport const beVersionSelector = createSelector(localState, state => state.get('beVersion'));\nexport const beLicenceSelector = createSelector(localState, state => state.get('beLicence'));\nexport const beHealthSelector = createSelector(localState, state => state.get('beHealth'));\n","import React from 'react';\n\nimport { Text, Email, Integer, Password, PhoneNumber, BooleanSelect } from '../editors/Generic';\nimport {\n  ProcessSelect,\n  AccountSelect,\n  RSAKey,\n  FQName,\n  Variadic,\n  Multiline,\n  Replvalues,\n  Uuid\n} from '../editors/Custom';\n\nfunction extractParameter({ parameter, recieved, ...others }) {\n  const { type, ...additional } = parameter.editor;\n\n  return {\n    key: parameter.name,\n    label: parameter.label || parameter.name,\n    name: parameter.field_name || parameter.name,\n    required: parameter.is_required,\n    defaultValue: parameter.deflt || parameter.value,\n    description: parameter.description,\n    ...additional,\n    ...others\n  };\n}\n\nexport const TextParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Text {...passable} />;\n};\n\nexport const PasswordParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Password {...passable} />;\n};\n\nexport const PhoneNumberParameter = props => {\n  const passable = extractParameter(props);\n\n  return <PhoneNumber {...passable} />;\n};\n\nexport const BooleanParameter = props => {\n  const passable = extractParameter(props);\n\n  return <BooleanSelect {...passable} />;\n};\n\nexport const IntegerParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Integer {...passable} />;\n};\n\nexport const EmailParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Email {...passable} />;\n};\n\nexport const ProcessParameter = props => {\n  const passable = extractParameter(props);\n\n  return <ProcessSelect {...passable} />;\n};\n\nexport const AccountParameter = props => {\n  const passable = extractParameter(props);\n\n  return <AccountSelect protocols={[]} {...passable} />;\n};\n\nexport const VariadicParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Variadic recieved={props.recieved} {...passable} />;\n};\n\nexport const ReplvaluesParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Replvalues recieved={props.recieved} {...passable} />;\n};\n\nexport const FQNameParameter = props => {\n  const passable = extractParameter(props);\n\n  return <FQName recieved={props.recieved} {...passable} />;\n};\n\nexport const RSAKeyParameter = props => {\n  const passable = extractParameter(props);\n\n  return <RSAKey {...passable} />;\n};\n\nexport const MultilineParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Multiline {...passable} />;\n};\n\nexport const UuidParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Uuid {...passable} />;\n};\n","import { createSelector } from 'reselect';\n\nexport const getQuery = createSelector(\n  state => state.invocation_viewer.query,\n  query => query\n);\n\nexport const getInvocation = createSelector(\n  state => state.invocation_viewer.invocation,\n  invocation => invocation\n);\n\nexport const getInvocationStatus = createSelector(getInvocation, invocation => invocation.status);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../../entities/actions';\nimport { entitySelectors } from '../../../entities/selectors';\n\nimport { Loader, ParameterLoader } from 'shared/components/loaders';\nimport { Center } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nexport const Ensure = connect(\n  (state, { type }) => {\n    const selector = entitySelectors[type];\n\n    return selector(state);\n  },\n  {\n    request: fetchEntity\n  }\n)(Ensurer);\n\nfunction Ensurer({ children, fresh, pipe = false, type, inlineLoader, data, status, request }) {\n  useEffect(() => {\n    if (status === 'fetching') return;\n    if (status === 'fetching') return;\n\n    if (status === 'fetched' && !fresh) return;\n\n    request(type);\n  }, []);\n\n  if (!status || status === 'not-fetched') {\n    return null;\n  }\n\n  if (status === 'fetching' && !pipe) {\n    const Loading = inlineLoader ? ParameterLoader : Loader;\n\n    return (\n      <Center>\n        <Loading>Loading {type}...</Loading>\n      </Center>\n    );\n  }\n\n  if (status === 'failed' && !pipe) {\n    return (\n      <Result type=\"fail\">\n        <Result.Text>Could not fetch {type} data!</Result.Text>\n      </Result>\n    );\n  }\n\n  if (typeof children === 'function') {\n    return <>{children({ status, data, request: () => request(type) })}</>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Ensure;\n","import React, { useState, useCallback } from 'react';\n\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { array, func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SearchableList.local.scss';\n\nexport const SearchableList = ({ items, children, filter, variant, visibleScroll }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const [query, setQuery] = useState('');\n  const filtered = items.filter(item => filter(item, query));\n\n  return (\n    <>\n      <div className=\"search-input-slot\">\n        <SimpleSearchInput\n          data-qa=\"users-search-input\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <div\n        className={classnames('searchable-list-slot', {\n          visibleScroll,\n          scrolled,\n          [variant]: variant\n        })}\n      >\n        <ul\n          className={classnames('list', {\n            [variant]: variant\n          })}\n          onWheel={onWheel}\n        >\n          {filtered.map((item, index, list) => (\n            <li key={index} className=\"list-item\">\n              {children(item, index, list)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nSearchableList.propTypes = {\n  items: array,\n  children: func,\n  filter: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nSearchableList.defaultProps = {\n  items: [],\n  filter: (item, query) => item === query\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import { createSelector } from 'reselect';\n\nexport const ENTITY_TYPES = [\n  {\n    type: 'account',\n    title: 'CONNECTION',\n    dataEnclosure: 'accounts',\n    query: '*'\n  },\n  {\n    type: 'constant',\n    title: 'CONSTANT',\n    dataEnclosure: 'constants',\n    query: '*'\n  },\n  {\n    type: 'exception',\n    title: 'EXCEPTION',\n    dataEnclosure: 'exceptions',\n    query: '*'\n  },\n  {\n    type: 'form',\n    title: 'FORM',\n    dataEnclosure: 'forms',\n    query: '*'\n  },\n  {\n    type: 'namespace',\n    title: 'NAMESPACE',\n    query: '*',\n    dataEnclosure: 'namespaces'\n  },\n  {\n    type: 'process',\n    query: '*',\n    title: 'PROCESS',\n    dataEnclosure: 'processes'\n  },\n  {\n    type: 'prototype',\n    query: '*',\n    title: 'PROTOTYPE',\n    dataEnclosure: 'prototypes'\n  },\n  {\n    type: 'schedule',\n    title: 'SCHEDULE',\n    dataEnclosure: 'schedules',\n    query: '*'\n  },\n  {\n    type: 'type',\n    query: '*',\n    title: 'TYPE',\n    dataEnclosure: 'data_types'\n  }\n];\n\nexport const ENTITY_TYPES_FETCH = ENTITY_TYPES.concat({\n  type: 'alias'\n});\n\nconst ROOT_ENTITY = {\n  name: 'root',\n  entity: 'root',\n  description: 'Main container for all of the entities within MAS.'\n};\n\nexport const getBreadcrumbs = state => state.entities.breadcrumbs;\n\nfunction collectData(data, { type, dataEnclosure }, namespacesWithMeta) {\n  let collection = data[type]?.data?.data?.[dataEnclosure];\n\n  if (collection) {\n    const aliases = data.alias?.data?.data.aliases\n      .filter(item => item.alias_type === type)\n      .map(item => {\n        const { entity, alias, alias_type, ...props } = item;\n\n        /**\n         * Merging properties that the alias does not have,\n         * with properties the entity it aliases, has.\n         * Will avoid having to reconcile this at the usage level.\n         * And keep aliases viewable here.\n         */\n        const aliasedEntity = data[type]?.data?.data[dataEnclosure].find(e => e.name === alias);\n\n        return { ...(aliasedEntity && aliasedEntity), alias, ...props, entity: alias_type };\n      });\n\n    if (aliases) {\n      /** Concat the aliases for this collection with the collection itself */\n      collection = data[type]?.data?.data[dataEnclosure].concat(aliases);\n    }\n\n    /* filter out colllection items where appearance meta is hidden */\n\n    /** FIXME:\n     *  what about aliases ? If their aliasing root entity would have meta apearance hidden, should it as well ?\n     *  */\n    if (Array.isArray(namespacesWithMeta)) {\n      collection = collection.reduce((acc, dataItem) => {\n        const ownNamespace = namespacesWithMeta.find(ns => dataItem.name.startsWith(ns.name));\n\n        if (ownNamespace) {\n          if (ownNamespace?.meta?.appearance === 'Hidden') {\n            return acc;\n          }\n\n          return acc.concat([\n            {\n              ...dataItem,\n              meta: {\n                ...dataItem.meta,\n                ...ownNamespace.meta\n              }\n            }\n          ]);\n        }\n\n        return acc.concat(dataItem);\n      }, []);\n    }\n  }\n\n  return collection;\n}\n\nexport const entitySelectors = ENTITY_TYPES.reduce((selectors, def) => {\n  selectors[def.type] = createSelector(\n    state => state.entities.data,\n    state => state.entities.fetch_status,\n    state => namespaceWithMetaSelector(state),\n    (data, status, namespacesWithMeta) => {\n      return {\n        data: collectData(data, def, namespacesWithMeta),\n        status: status?.[def.type]\n      };\n    }\n  );\n\n  return selectors;\n}, {});\n\nexport const namespaceWithMetaSelector = createSelector(\n  state => state.entities.data,\n  data => {\n    const dataNamespaces = data.namespace?.data?.data?.namespaces;\n    if (Array.isArray(dataNamespaces)) {\n      return dataNamespaces.filter(\n        item => item.meta && item.meta.appearance && item.meta.appearance !== 'Normal'\n      );\n    }\n    return [];\n  }\n);\n\nexport const getFilteredEntities = createSelector(\n  state => state.entities.data,\n  state => state.entities.filters,\n  state => namespaceWithMetaSelector(state),\n  (data, filters, namespacesWithMeta) => {\n    const types =\n      filters.type === 'all'\n        ? ENTITY_TYPES\n        : ENTITY_TYPES.filter(type => type.type === filters.type || type.type === 'namespace');\n    return types\n      .reduce((accumulator, type) => {\n        return accumulator.concat(collectData(data, type, namespacesWithMeta));\n      }, [])\n      .filter(Boolean);\n  }\n);\n\nexport const getEntitiesAsHashMap = createSelector(\n  getFilteredEntities,\n  state => state.entities.filters,\n  (entities, filters) => {\n    let filteredEntities = entities;\n    if (filters.type !== 'all' && filters.type !== 'namespace') {\n      filteredEntities = entities.filter(item => item.entity !== 'namespace');\n    }\n    if (filters.search) {\n      filteredEntities = filteredEntities.filter(item => {\n        if (filters.type !== 'all' && filters.type !== 'namespace') {\n          const domainArray = item.name.split('.');\n          const shortName = domainArray[domainArray.length - 1];\n          return shortName.includes(filters.search);\n        }\n        return item.name.includes(filters.search);\n      });\n    }\n    return filteredEntities.reduce((accumulator, entity) => {\n      const paths = entity.name.includes('.') ? entity.name.split('.') : [];\n      paths.forEach((path, index) => {\n        const key = paths.slice(0, index).join('.');\n        if (!accumulator[key]) {\n          const findEntity = entities.find(item => item.name === key);\n          accumulator[key] = findEntity || {\n            name: key,\n            notPersisted: true\n          };\n        }\n      });\n      accumulator[entity.name] = entity;\n\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const getEntities = createSelector(\n  getBreadcrumbs,\n  getEntitiesAsHashMap,\n  (breadcrumbs, entitiesMap) => {\n    const entities = Object.values(entitiesMap);\n    const roots = Object.keys(entitiesMap)\n      .filter((entityName, index, names) => {\n        return (\n          !entityName.includes('.') &&\n          (names.find(name => name.startsWith(`${entityName}.`)) ||\n            entitiesMap[entityName].entity === 'namespace')\n        );\n      })\n      .map(key => ({\n        ...entitiesMap[key],\n        isSelected: breadcrumbs.includes(entitiesMap[key].name)\n      }));\n    const columns = breadcrumbs.map((breadcrumb, index) => {\n      return {\n        level: index,\n        path: index === 0 ? '.' : breadcrumbs.slice(0, index).join('.'),\n        rows: []\n      };\n    });\n    columns.push({\n      level: breadcrumbs.length,\n      path: `${breadcrumbs.join('.')}.`,\n      rows: []\n    });\n\n    return entities.reduce((accumulator, entity) => {\n      const path = entity.name.split('.');\n      if (accumulator.length < path.length) {\n        return accumulator;\n      }\n      const bucket = accumulator[path.length - 1];\n      if (!bucket) {\n        return accumulator;\n      }\n      if (bucket.path === '.') {\n        bucket.rows = roots;\n        return accumulator;\n      }\n\n      if (!entity.name.startsWith(bucket.path)) {\n        return accumulator;\n      }\n      const name = entity.name.replace(bucket.path, '').replace('.', '');\n      const entityLevel = entity.name.split('.').length - 1;\n      bucket.rows.push({\n        ...entity,\n        name,\n        isSelected: breadcrumbs[entityLevel] ? breadcrumbs[entityLevel] === name : false\n      });\n\n      return accumulator;\n    }, columns);\n  }\n);\n\nexport const getSelectedEntity = createSelector(\n  getEntitiesAsHashMap,\n  getBreadcrumbs,\n  (entities, breadcrumbs) => {\n    const path = breadcrumbs.join('.');\n    const entity = entities[path];\n    return entity?.notPersisted ? ROOT_ENTITY : entity;\n  }\n);\n\nexport const namespaceChildrenListSelector = createSelector(\n  getSelectedEntity,\n  getEntitiesAsHashMap,\n  (selectedEntity, entities) => {\n    const list = Object.keys(entities);\n    const namespace = `${selectedEntity.name}.`;\n\n    return list.filter(name => name.startsWith(namespace) && name !== namespace);\n  }\n);\n","export function mapUsersData(payload) {\n  return payload.data.users;\n}\n\nexport function mapLoadedUser(payload) {\n  return payload.data.users[0]; // the first returned user is the one in question\n}\n\nexport function mapSortInsensitive(payload) {\n  return payload.slice().sort(function sortInsensitive(a, b) {\n    return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n  });\n}\n","import { getOutputText } from './getOutputText';\n\nexport const copyTextToClipboard = (textToCopy) => {\n  makeCopyToClipboard(textToCopy);\n};\n\nexport const copyToClipboard = (output, invocation) => {\n  const text = getOutputText(output, invocation);\n  makeCopyToClipboard(text);\n};\n\nfunction makeCopyToClipboard(text) {\n  navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\n    if (result.state === 'granted' || result.state === 'prompt') {\n      /* write to the clipboard */\n      navigator.clipboard.writeText(text).then(\n        () => {\n          /* successful */\n          console.log('[copyTextToClipboard] Copied:', text); // eslint-disable-line\n        },\n        () => {\n          /* write failed */\n          console.warn('[copyTextToClipboard] --- unable to write to clipboard!'); // eslint-disable-line\n        }\n      );\n    } else {\n      legacyMethod(text);\n    }\n  }, legacyMethod.bind(this, text));\n}\n\nfunction legacyMethod(text) {\n  const textArea = document.createElement('textarea');\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.classList.add('copyToClipboardInput');\n  textArea.focus();\n  textArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textArea);\n  console.log('[copyTextToClipboard-legacy] Copied:', text); // eslint-disable-line\n}\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Field } from 'formik';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiLanConnect } from '@mdi/js';\n\nimport './TextField.local.scss';\n\nexport const TextField = ({ parameter, disabled }) => {\n  const validate = value => {\n    if (parameter.is_required) {\n      if (!value) {\n        return 'This Field is Required';\n      }\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <MUITextField\n            className={disabled ? 'disabled' : ''}\n            {...field}\n            variant=\"outlined\"\n            type=\"text\"\n            fullWidth\n            disabled={disabled}\n            error={meta.error && meta.touched}\n            helperText={meta.touched && meta.error ? meta.error : undefined}\n            label={parameter.label}\n            placeholder={parameter.label}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {parameter.icon ? (\n                    parameter.icon\n                  ) : (\n                    <SvgIcon>\n                      <Icon path={mdiLanConnect} />\n                    </SvgIcon>\n                  )}\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <LightTooltip placement=\"bottom-end\" title={parameter.description}>\n                  <InputAdornment position=\"end\">\n                    <SvgIcon>\n                      <Icon path={mdiHelpCircleOutline} />\n                    </SvgIcon>\n                  </InputAdornment>\n                </LightTooltip>\n              )\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, tabs } = this.props;\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={tabs.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func,\n  tabs: array\n};\n\nNavigationTab.defaultProps = {\n  tabs: []\n};\n\nexport default NavigationTab;\n","export const getGroupDescription = (name, allGroups) => {\n  const groupDetails = allGroups.find(group => group.name === name);\n\n  return groupDetails?.description || '';\n};\n","import React from 'react';\nimport { func, string } from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './NavigationTab.local.scss';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, protocol } = this.props;\n\n    const data = [\n      { label: 'Workload', value: 'workload' },\n      TopSqlStatementsUtil.isAllowedProtocol(protocol) ? { label: 'Top SQL statements', value: 'topsql' } : false,\n      SystemExplorerFeatureUtil.isSessionsAllowed(protocol) ? { label: 'Sessions', value: 'sessions' } : false,\n      SystemExplorerFeatureUtil.isObjectsAllowed(protocol) ? { label: 'Objects', value: 'objects' } : false,\n      SystemExplorerFeatureUtil.isStorageAllowed(protocol) ? { label: 'Storage', value: 'storage' } : false\n    ].filter(Boolean);\n\n    if (protocol === 'ORACLE') {\n      data.push({ label: 'License reporting', value: 'license' });\n    }\n\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={data.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {data.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func\n};\n\nexport default NavigationTab;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiSourceRepository,\n  mdiFolderHome,\n  mdiLanConnect,\n  mdiHexagonMultipleOutline,\n  mdiCubeOutline\n} from '@mdi/js';\n\nimport extractDefault from './extractDefault';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'float',\n  'integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter',\n  'string',\n  'unsigned_float',\n  'unsigned_integer'\n];\n\nexport default (parameter, dataTypes, prototypes) => {\n  parameter = { ...parameter };\n  parameter.position = parameter.meta.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    parameter.is_supported = false;\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.value = 'TEXT';\n  }\n\n  parameter.label = getLabel(parameter.name);\n  parameter.icon = getIcon(parameter.name);\n\n  return parameter;\n};\n\nconst getLabel = name => {\n  return labels[name] || name;\n};\n\nconst getIcon = name => {\n  return icons[name] || null;\n};\n\nconst labels = {\n  target_working_dir: 'Working directory',\n  target_shell: 'Target server SSH',\n  repo_shell: 'Repo server SSH',\n  repo_working_dir: 'Repo directory',\n  form: 'Database form',\n  dbms: 'Target DBMS',\n  vsphere_account: 'vSphere account',\n  vcenterservername: 'vCenter server name',\n  partitioning_methods: 'Virtualization Partitioning Technologies',\n  dbconn: 'DB connection',\n  oformat: 'Output format',\n  compact: 'Compact',\n};\n\nconst icons = {\n  target_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  target_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiSourceRepository} />\n    </SvgIcon>\n  ),\n  dbms: (\n    <SvgIcon>\n      <Icon path={mdiHexagonMultipleOutline} />\n    </SvgIcon>\n  ),\n  form: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  vsphere_account: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  ),\n  vcenterservername: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  )\n};\n","import React from 'react';\nimport { Field } from 'formik';\nimport { array, object } from 'prop-types';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { mdiLanConnect } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport { Dropdown } from 'shared/components';\n\nimport './DropdownField.local.scss';\n\nfunction filterDbmsByShell(options, formValues) {\n  options = options || [];\n  if (!formValues || !formValues.target_shell) {\n    return options;\n  }\n\n  const shellAccount = formValues.target_shell;\n  return options.filter(dbmsAccount => dbmsAccount.address === shellAccount.address);\n}\n\nconst ADDITIONAL_OPTIONS_FILTERS = {\n  dbms: filterDbmsByShell,\n};\n\nexport const DropdownField = ({\n  parameter,\n  datatypes,\n  rawAccounts,\n  forms,\n  prototypes,\n  disabled,\n  currentFormValues\n}) => {\n  const dataType = datatypes.find(datatype => datatype.name === parameter.data_type);\n  let protocols = null;\n\n  if (dataType) {\n    if (\n      dataType.name.startsWith('mas0000.sys.account.conn.') ||\n      dataType.name === 'mas0000.sys.account.vsphere'\n    ) {\n      if (Array.isArray(dataType.protocol) && dataType.protocol.length > 0) {\n        protocols = [];\n        dataType.protocol.forEach(protocol => {\n          if (protocol === 'DBMS') {\n            // This is quick and dirty until we have a configuration-driven solution\n            // in the UI.\n            protocols = [...protocols, 'MSSQL', 'MYSQL', 'ORACLE', 'PGSQL'];\n          } else {\n            protocols.push(protocol);\n          }\n        });\n\n        if (currentFormValues && ADDITIONAL_OPTIONS_FILTERS[parameter.name]) {\n          const additionalFilter = ADDITIONAL_OPTIONS_FILTERS[parameter.name];\n          rawAccounts = additionalFilter(rawAccounts, currentFormValues);\n        }\n\n        const options = rawAccounts\n          .map(account => ({ name: account.name, value: account }))\n          .filter(option => protocols === null || protocols.includes(option.value.protocol));\n\n        const validate = value => {\n          if (parameter.is_required) {\n            if (!value) {\n              return 'This Field is Required';\n            }\n          }\n        };\n\n        return (\n          <Field name={parameter.name} validate={validate}>\n            {({ field, meta }) => {\n              return (\n                <Dropdown\n                  onSelect={(index, opt) => {\n                    field.onChange({ target: { name: parameter.name, value: opt.value } });\n                  }}\n                  disabled={disabled}\n                  target={(meta2, actions) => (\n                    <MUITextField\n                      className={disabled ? 'disabled' : ''}\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      variant=\"outlined\"\n                      fullWidth\n                      label={parameter.label}\n                      placeholder={parameter.label}\n                      {...field}\n                      value={field.value ? field.value.name : ''}\n                      onChange={() => {}}\n                      onClick={actions.toggle}\n                      ref={meta2.ref}\n                      error={meta.error && meta.touched}\n                      helperText={meta.touched && meta.error ? meta.error : undefined}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {parameter.icon ? (\n                              parameter.icon\n                            ) : (\n                              <SvgIcon>\n                                <Icon path={mdiLanConnect} />\n                              </SvgIcon>\n                            )}\n                          </InputAdornment>\n                        ),\n\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <ArrowDropDownIcon />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                  )}\n                  items={options}\n                />\n              );\n            }}\n          </Field>\n        );\n      }\n    }\n  } else {\n    const prototype = prototypes.find(p => p.name === parameter.data_type);\n\n    if (prototype) {\n      const options = forms\n        .filter(form => form.prototype === prototype.name)\n        .map(form => ({ name: form.name, value: form.name }));\n\n      const validate = value => {\n        if (parameter.is_required) {\n          if (!value) {\n            return 'This Field is Required';\n          }\n        }\n      };\n\n      return (\n        <Field name={parameter.name} validate={validate}>\n          {({ field, meta }) => {\n            return (\n              <Dropdown\n                onSelect={(index, opt) => {\n                  field.onChange({ target: { name: parameter.name, value: opt.value } });\n                }}\n                disabled={disabled}\n                target={(meta2, actions) => (\n                  <MUITextField\n                    className={disabled ? 'disabled' : ''}\n                    type=\"text\"\n                    readOnly\n                    disabled\n                    variant=\"outlined\"\n                    fullWidth\n                    label={parameter.label}\n                    placeholder={parameter.label}\n                    {...field}\n                    value={field.value ? field.value : ''}\n                    onChange={() => {}}\n                    onClick={actions.toggle}\n                    ref={meta2.ref}\n                    error={meta.error && meta.touched}\n                    helperText={meta.touched && meta.error ? meta.error : undefined}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          {parameter.icon ? (\n                            parameter.icon\n                          ) : (\n                            <SvgIcon>\n                              <Icon path={mdiLanConnect} />\n                            </SvgIcon>\n                          )}\n                        </InputAdornment>\n                      ),\n\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <ArrowDropDownIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                )}\n                items={options}\n              />\n            );\n          }}\n        </Field>\n      );\n    }\n  }\n\n  return <div>Currently not supported input</div>;\n};\n\nDropdownField.propTypes = {\n  parameter: object,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  prototypes: array\n};\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport { ListOutput } from '../ListOutput/ListOutput';\nimport { sendToEmail } from '../../utils/sendToEmail';\nimport { copyToClipboard } from '../../utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './OutputModal.local.scss';\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const OutputModal = ({\n  open,\n  actions,\n  output,\n  invocation,\n  modalDetails,\n  processName,\n  messages\n}) => {\n  let content;\n\n  const [message, setMessage] = useState(messages[0]);\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  let interval;\n\n  useEffect(() => {\n    if (messages && messages.length > 1) {\n      if (!open) {\n        clearInterval(interval);\n      } else {\n        let index = 1;\n        interval = setInterval(() => {\n          setMessage(messages[index]);\n          if (index + 1 < messages.length) {\n            index += 1;\n          }\n        }, 4000);\n\n        return () => clearInterval(interval);\n      }\n    }\n  }, [open]);\n\n  if (!output && invocation.status !== 'SUCCEEDED' && invocation.status !== 'FAILED') {\n    content = (\n      <>\n        <Center>\n          <Loader>{message}</Loader>\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (invocation.status === 'FAILED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput type=\"fail\" output={output} errors={invocation.errors} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'SUCCEEDED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput output={output} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n        <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '75vh',\n          minHeight: '75vh',\n          width: '75vh',\n          height: '75vh'\n        }}\n      >\n        <ModalHeader\n          title={modalDetails.title}\n          desc={invocation.status === 'FAILED' ? 'An error orccured!' : 'Output'}\n          avatar={\n            <Avatar\n              className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n            >\n              {modalDetails.icon}\n            </Avatar>\n          }\n        />\n        {content}\n      </Paper>\n    </Modal>\n  );\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function postAccount(body) {\n  try {\n    const { data } = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function patchAccount(name, body) {\n  try {\n    const { data } = await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function deleteAccount(name) {\n  try {\n    const { data } = await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`);\n    return { result: data.result, messages: data.messages };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport function getConnection(name) {\n  return RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchConnection(name, body) {\n  return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postFile(file) {\n  return RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_ACCOUNTS, file);\n}\n","import { DbmsType } from '../../SystemExplorerFeatureUtil';\n\nconst ALLOWED_DBMS = [DbmsType.ORACLE, DbmsType.POSTGRES, DbmsType.MYSQL, DbmsType.MSSQL];\nconst ALLOWED_FOR_CHARTS = [DbmsType.ORACLE];\n\nconst PROCESS_ENDPOINT_MAP = {\n    [DbmsType.ORACLE]: 'vendita.oracle.rdbms.util.monitor.session.performance.topsql',\n    [DbmsType.POSTGRES]: 'vendita.pgsql.rdbms.session.topsql_postgres',\n    [DbmsType.MYSQL]: 'vendita.mysql.rdbms.session.topsql_mysql',\n    [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.tuning.top50longrunningsql',\n};\n\nconst DBMS_PROPERTY_NAME_MAP = {\n    [DbmsType.ORACLE]: 'dbms',\n    [DbmsType.POSTGRES]: 'dbms',\n    [DbmsType.MYSQL]: 'dbms',\n    [DbmsType.MSSQL]: 'dbconn',\n};\n\nexport class TopSqlStatementsUtil {\n  static isAllowedProtocol(dbms) {\n    return ALLOWED_DBMS.includes(dbms);\n  }\n\n  static isChartSupported(dbms) {\n    return ALLOWED_FOR_CHARTS.includes(dbms);\n  }\n\n  static getEndpoint(dbms) {\n    return PROCESS_ENDPOINT_MAP[dbms] || '';\n  }\n\n  static getDbmsPropertyName(dbms) {\n    return DBMS_PROPERTY_NAME_MAP[dbms] || '';\n  }\n}\n","import React from 'react';\n\nimport { OptionItem } from '../OptionItem/OptionItem';\n\nexport const OptionsList = ({ options }) => {\n  return options.map(option => <OptionItem key={option.name} option={option} />);\n};\n","import React from 'react';\nimport { LightTooltip } from '../../../shared/components';\nimport './ChartTooltip.local.scss';\n\nexport const ChartTooltip = (data) => {\n  if (!data || !data.payload || !data.payload.length) {\n    return '';\n  }\n\n  const { name, value } = data.payload[0];\n  return (\n    <div className=\"exec-dashboard-chart-tooltip\">\n      <LightTooltip placement=\"bottom-end\">\n        <div className=\"exec-dashboard-chart-tooltip-row\">\n          <div className=\"exec-dashboard-chart-tooltip-name\">{name}</div>\n          <div className=\"exec-dashboard-chart-tooltip-value\">{value}</div>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postSchedule(body) {\n  return RestClient.post('schedule', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function getSchedule(name) {\n  return RestClient.get(`schedule/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchSchedule(name, body) {\n  return RestClient.patch(`schedule/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","export function mapAccountsTree(data) {\n  // data is split into 3 levels,\n  // first level is defined by `protocol`\n  // we find root nodes by matching protocols.\n  const roots = data.reduce(splitIntoRootsByProtocol, []);\n  roots.forEach(root => {\n    // define the servers map\n    // all server and database objects for this protocol\n    root.servers = root.nodes.reduce(splitIntoRootsByAddress, {});\n    const servers = Object.keys(root.servers);\n    servers.forEach(name => {\n      const server = root.servers[name];\n      server.databases = server.nodes.reduce(splitIntoRootsByDatabase, {});\n    });\n  });\n  return roots;\n}\nexport function splitIntoRootsByProtocol(acc, item) {\n  const protocolBlacklist = ['SSH'];\n  const { protocol } = item;\n  if (protocolBlacklist.includes(protocol)) {\n    return acc;\n  }\n  if (!(item.special && item.special.database)) {\n    return acc;\n  }\n  const root = acc.find(r => r.name === protocol);\n  if (root) {\n    root.nodes = [...root.nodes, item];\n  } else {\n    acc.push({\n      name: item.protocol,\n      path: item.protocol,\n      type: 'dbms',\n      nodes: [item],\n      servers: []\n    });\n  }\n  return acc;\n}\nfunction splitIntoRootsByAddress(serversMap, item) {\n  const { address } = item;\n  const existingEntry = serversMap[address];\n  if (existingEntry) {\n    existingEntry.nodes = [...existingEntry.nodes, item];\n  } else {\n    serversMap[address] = {\n      name: item.address,\n      path: `${item.protocol}--${item.address}`,\n      type: 'server',\n      nodes: [item]\n    };\n  }\n  return serversMap;\n}\nfunction splitIntoRootsByDatabase(databaseMap, item) {\n  const {\n    special: { database: name }\n  } = item;\n  databaseMap[name] = {\n    name,\n    path: `${item.protocol}--${item.address}--${name}`,\n    node: item\n  };\n  return databaseMap;\n}\n\n/**\n *\n * @param {*} content // /account call data\n *\n * This will resturcture the list of accounts into a list of dbms entries with servers and databases.\n */\n\nexport function mapAccountsNewStructure(content, protocols) {\n  const accounts = { raw: content };\n\n  let protocolsArr = protocols.map(p => p.name);\n\n  if (protocolsArr.length === 0) {\n    protocolsArr = ['CREDENTIAL', 'ILOM', 'SSH'];\n  }\n\n  accounts.databases = content.filter(account => account.special.database);\n  accounts.dbms = [];\n\n  /* eslint-disable */\n  accounts.databases.forEach(function resolver(entry) {\n    /**\n     * Add a path def to the database entry\n     * path descriptions are made here, to mimic somewhat the old mapping.\n     * Keep other properties.\n     */\n    const database = {\n      ...entry,\n      path: `${entry.protocol}--${entry.address}--${entry.special.database}`\n    };\n\n    let dbms = accounts.dbms.find(dbms => dbms.name === database.protocol);\n\n    const dbServer = accounts.raw.find(\n      account => protocolsArr.includes(account.protocol) && account.address === database.address\n    );\n\n    let server;\n\n    // a server entry exists\n    if (dbServer) {\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        ...dbServer,\n        databases: [database]\n      };\n    } else {\n      // db does not have an associated server connection so create a 'placeholder' for server\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        address: database.address,\n        databases: [database]\n      };\n    }\n\n    if (!dbms) {\n      /**\n       * Add a new dbms entry\n       *\n       * path descriptions are made here, to mimic somewhat the old mapping.\n       */\n      accounts.dbms.push({\n        name: database.protocol,\n        protocol: database.protocol,\n        path: database.protocol,\n        databases: [database],\n        servers: [server]\n      });\n\n      return;\n    }\n\n    /**\n     * DBMS exists. Update it\n     */\n    dbms.databases.push(database);\n\n    // find server entr\n    let dbmsServerEntry = dbms.servers.find(sv => sv.address === database.address);\n\n    if (!dbmsServerEntry) {\n      dbms.servers.push({ ...server, databases: [database] });\n    } else {\n      if (dbmsServerEntry.databases) {\n        dbmsServerEntry.databases.push(database);\n      } else {\n        dbmsServerEntry.databases = [database];\n      }\n    }\n  }, accounts);\n\n  // find all existing servers\n  const allServers = content.filter(entry => protocolsArr.includes(entry.protocol));\n\n  // check if servers have a database\n  // if they don't add them in a DBMS called \"OTHER\".\n  // will be removed from there as soon as they get a database\n  allServers.forEach(server => {\n    const exists = accounts.databases.find(db => db.address === server.address);\n\n    if (!exists) {\n      const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n\n      if (otherIndex > -1) {\n        accounts.dbms[otherIndex].servers.push({\n          path: `OTHER--${server.address}`,\n          ...server,\n          databases: []\n        });\n      } else {\n        accounts.dbms.push({\n          name: 'OTHER',\n          path: 'OTHER',\n          protocol: 'OTHER',\n          servers: [{ path: `OTHER--${server.address}`, ...server, databases: [] }]\n        });\n      }\n    }\n  });\n\n  const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n  if (otherIndex > -1 && accounts.dbms[otherIndex].servers.length === 0) {\n    accounts.dbms.splice(otherIndex, 1);\n  }\n  return accounts;\n}\n\nexport function mapProtocols(protocols) {\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return allowedProtocols;\n}\n\nexport function mapUpdateDBStatus(existingDb, databases, isLoading) {\n  let statuses = [...existingDb];\n\n  databases.forEach(function(db) {\n    const index = existingDb.findIndex(d => d.name === db.name);\n    if (index > -1) {\n      statuses[index] = { ...db, loading: isLoading };\n    } else {\n      statuses = [...statuses, { ...db, loading: isLoading }];\n    }\n  });\n\n  return statuses;\n}\n\nexport function mapLicenseReport(reportData) {\n  const result = (reportData || []).reduce((acc, currentItem) => {\n    if (currentItem.DETECTED_USAGES > 0) {\n      acc.USED[currentItem.NAME] = _mapUsedLicense(currentItem);\n    } else {\n      acc.UNUSED[currentItem.NAME] = currentItem;\n    }\n    acc.FEATURES.push(currentItem);\n    return acc;\n  }, { UNUSED: {}, USED: {}, FEATURES: [] });\n  console.log(result);\n  return result;\n}\n\nfunction _mapUsedLicense(license) {\n  return {\n    USAGES: license.DETECTED_USAGES,\n    VERSION: license.VERSION,\n    LAST_USE: license.LAST_USAGE_DATE,\n    FIRST_USE: license.FIRST_USAGE_DATE\n  }\n}\n","export const SystemExplorerViewMode = {\n  TILES: 'TILES',\n  TABLE: 'TABLE',\n};\n","/**\n * This file will be updated with any new module (adding the module reducer)\n */\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { sessionEffects, sessionReducer } from 'session';\nimport { dashboardReducer } from 'dashboard';\nimport { sharedEffects, sharedReducer } from 'shared/store/';\nimport { createReducer } from 'shared/lib/redux-utils';\n\nimport usersManagerReducer from 'users-manager/store/reducers';\nimport groupsReducer from 'users-manager/groups/store/reducer';\nimport explorerReducer from 'explorer/store/reducers';\nimport executiveDashboardReducer from 'executive-dashboard/store/reducers';\nimport licenseAllocationReducer from 'license-allocation/store/reducers';\nimport * as entities from 'entities/reducer';\nimport * as daemon from 'dashboard/store/reducers/daemon';\n\nimport * as invocations from 'job-process/store/reducer';\n\nimport { api } from './middlewares';\nimport { reducer as core } from './reducers';\n\nconst saga = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n  whitelist: ['entities']\n  /*\n  //Well I just whitelist entities,\n  since it's the one that has all expensive network requests\n  */\n};\n\nexport const configStore = () => {\n  const appReducer = persistReducer(persistConfig, combineReducers({\n    core,\n    session: sessionReducer,\n    dashboard: dashboardReducer,\n    shared: sharedReducer,\n    usersManager: usersManagerReducer,\n    groups: groupsReducer,\n    entities: createReducer(entities),\n    explorer: explorerReducer,\n    invocation_viewer: createReducer(invocations),\n    executiveDashboard: executiveDashboardReducer,\n    daemon: createReducer(daemon),\n    licenseAllocation: licenseAllocationReducer,\n  }));\n\n  const reducer = (state, action) => {\n    // clear redux store on logout action\n    if (action.type === '[session] LOGOUT__SUCCESS') {\n      const { routing } = state;\n      state = { routing };\n      window.location.reload();\n    }\n    return appReducer(state, action);\n  };\n\n  const effects = [...sessionEffects, ...sharedEffects];\n\n  const store = createStore(reducer, composeWithDevTools(applyMiddleware(saga, thunk, api)));\n\n  effects.forEach(effect => {\n    saga.run(effect);\n  });\n\n  return store;\n};\n\nexport default configStore();\n","import React, { createContext, useContext } from 'react';\n\nconst Context = createContext();\n\nexport default function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nSwitch.Case = Case;\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchProtocols() {\n  try {\n    const { data } = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n    return { result: data.result, protocols: data.data.protocols };\n  } catch (e) {\n    return { result: 'fail', protocols: [] };\n  }\n}\n","import React from 'react';\nimport { Switch } from 'shared/components';\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { useFormikContext } from 'formik';\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { chunk } from 'lodash';\n\n/** accepts recived parameters for invocations that are already scheduled */\nexport const ProcessParameters = ({ recieved = {}, editable }) => {\n  const { values } = useFormikContext();\n\n  /**\n   * Returns a parameter list from a given list of parameters, and a Process name\n   * This could be turned into a connected component that can take the processes from entities for itself.\n   * */\n  function selectParametersForProcess(processName, processes) {\n    const process = processes.find(item => item.name === processName);\n\n    if (process) {\n      return process.parameters.map(p => ({ ...p, value: recieved[p.name], disabled: !editable }));\n    }\n    return [];\n  }\n\n  function currentValue(allValues, parameter) {\n    if (allValues[parameter.name] !== undefined) {\n      return allValues[parameter.name];\n    }\n\n    if (allValues?.parameters && allValues?.parameters[parameter.name] !== undefined) {\n      return allValues?.parameters[parameter.name];\n    }\n\n    return undefined;\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Parameters</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Switch value={!!values.process}>\n          <Switch.Case value={false}>\n            <Column xs={12}>\n              <p>Select a process to edit parameters</p>\n            </Column>\n          </Switch.Case>\n          <Switch.Case value>\n            <Ensure type=\"form\">\n              {({ data: forms }) => (\n                <Ensure type=\"type\">\n                  {({ data: datatypes }) => (\n                    <Ensure type=\"prototype\">\n                      {({ data: prototypes }) => (\n                        <Ensure type=\"process\">\n                          {({ data }) => {\n                            const parameters = selectParametersForProcess(values.process, data);\n\n                            const normalized = parameters.map(parameter => {\n                              return normalize(parameter, datatypes, prototypes, forms);\n                            });\n\n                            /*  << +- 1 of '/' to toggle\n                            const notSupported = false;\n                            /* /\n\n                            // In old app, if at least one normalized parameter exists that is not supported,\n                            // the whole process is disregarded.\n\n                            const notSupported = normalized.some(p => !p.is_supported);\n                            // */\n\n                            const filtered = normalized\n                              .filter(p => p.editor.type !== 'hidden')\n                              .sort((a, b) => a.position - b.position); // sort parameters based on the meta.position\n\n                            // if (notSupported || filtered.length === 0) {\n                            if (filtered.length === 0) {\n                              return (\n                                <Row>\n                                  <Column>\n                                    <p>\n                                      This process contains unsuported parameters with no defaults,\n                                      and cannot be run from the web interface.\n                                    </p>\n                                  </Column>\n                                </Row>\n                              );\n                            }\n\n                            const chunks = chunk(filtered, 2);\n\n                            return chunks.map((params, index) => (\n                              <Row key={index} spacing={3}>\n                                {params.map(parameter => (\n                                  <Column key={parameter.name} xs={6}>\n                                    <Parameter\n                                      normalized={parameter}\n                                      value={currentValue(values, parameter)}\n                                      disabled={!editable}\n                                      recieved={recieved}\n                                    />\n                                  </Column>\n                                ))}\n                              </Row>\n                            ));\n                          }}\n                        </Ensure>\n                      )}\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          </Switch.Case>\n        </Switch>\n      </Section.Content>\n    </Section>\n  );\n};\n","import extractDefault from './extractDefault';\n\nimport { sortBy } from 'lodash';\n\nimport check from '../editors/field-level-validations';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'string',\n  'integer',\n  'float',\n  'uuid',\n  'unsigned_float',\n  'unsigned_integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter'\n];\n\nexport function space_begone(name) {\n  return name.replace(/\\s/g, '___');\n}\n\nexport function space_summon(name) {\n  return name.replace(/___/g, ' ');\n}\n\nexport default function normalize(param, dataTypes, prototypes, forms) {\n  const parameter = { ...param };\n\n  defaults(parameter, dataTypes, prototypes, forms);\n\n  parameter.editor = defineEditor(parameter, dataTypes, prototypes, forms);\n\n  parameter.field_name = space_begone(parameter.name);\n\n  maybeDisabled(parameter);\n\n  return parameter;\n}\n\nfunction maybeDisabled(parameter) {\n  const { appearance } = parameter.meta;\n\n  if (appearance === 'Grayed' && parameter.editor) {\n    parameter.editor.disabled = true;\n  }\n}\n\nfunction defaults(parameter, dataTypes, prototypes) {\n  parameter.position = parameter.meta?.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n\n  // hardcode stuff for replvalues params\n  if (parameter.data_type === 'optional_dict' && parameter.name === 'replvalues') {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n  } else if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    /**\n     * TODO: this was done to help exclude parameters like, any\n     * Or other stuff that cannot be parsed correctly\n     *\n     * Will remove them for now.\n     * Any types mostly are multiline input data, so we'll default them to that.\n     */\n    parameter.is_supported = false;\n\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          /**\n           * Allow support for all types of parameters, defaulting to a Text multiline.\n           */\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n\n          parameter.editor = {\n            type: 'string',\n            multiline: true,\n            deflt: ''\n          };\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.deflt = 'TEXT';\n  }\n\n  // hardcode default value for oformat parameter to \"TEXT\"\n  // was decided to be done on the UI because for the BE alot of processess had to be manually changed\n  // and at the moment we are pressed on time\n  if (parameter.name === 'oformat') {\n    parameter.deflt = parameter.value ? parameter.value : 'TEXT';\n  }\n}\n\nfunction parseProtocols(protocols) {\n  if (!protocols) {\n    return [];\n  }\n\n  if (!Array.isArray(protocols)) {\n    return [protocols];\n  }\n\n  return protocols.reduce((bucket, protocol) => {\n    // quick and dirty (as he said)\n    if (protocol === 'DBMS') {\n      bucket.push('MSSQL', 'MYSQL', 'ORACLE', 'PGSQL');\n    } else {\n      bucket.push(protocol);\n    }\n\n    return bucket;\n  }, []);\n}\n\nfunction defineEditor(parameter, dataTypes, prototypes, forms) {\n  if (!parameter.is_supported) {\n    return { type: 'hidden', disabled: true, value: '' };\n    // return { type: 'text', disabled: true, value: '' };\n  }\n\n  const { meta } = parameter;\n  const { editor: metaEditor, appearance } = meta;\n\n  if (appearance === 'Hidden') {\n    return { type: 'hidden' };\n  }\n\n  if (metaEditor === 'Hidden') {\n    return { type: 'text', disabled: true };\n  }\n\n  const prototype = prototypes.find(proto => proto.name === parameter.data_type);\n\n  if (prototype) {\n    const options = forms\n      .filter(form => form.prototype === prototype.name)\n      .map(form => ({ label: form.name, value: form.name }));\n    return {\n      type: 'select',\n      options\n    };\n  }\n\n  const dataType = dataTypes.find(type => type.name === parameter.data_type);\n\n  if (!dataType) {\n    return { type: 'text', disabled: true, readOnly: true };\n  }\n\n  if (dataType.enumerations !== null && dataType.enumerations.length > 0) {\n    const enumerations = sortBy(dataType.enumerations, 'weight');\n    const options = enumerations.map(({ label }) => ({ label, value: label }));\n\n    return { type: 'select', options };\n  }\n\n  if (\n    dataType.name.startsWith('mas0000.sys.account.conn.') ||\n    dataType.name === 'mas0000.sys.account.vsphere'\n  ) {\n    return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n  }\n\n  switch (dataType.name) {\n    case 'ename':\n      switch (metaEditor) {\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'fqname' };\n      }\n    case 'string':\n      switch (metaEditor) {\n        case 'password':\n          return { type: 'password' };\n        case 'fqname':\n        case 'ename':\n          return { type: 'fqname' };\n        case 'multiline':\n          // return { type: 'text', multiline: true };\n          return { type: 'multiline' };\n        case 'key':\n          return { type: 'rsa', multiline: true };\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'text' };\n      }\n    case 'boolean':\n      return { type: 'boolean' };\n    case 'integer':\n      return { type: 'number' };\n    case 'float':\n      return { type: 'number', validate: [check.signed_float] };\n    case 'uuid':\n      return { type: 'uuid' };\n    case 'unsigned_float':\n      return { type: 'number', validate: [check.unsigned_float] };\n    case 'unsigned_integer':\n      return { type: 'number', validate: [check.unsigned_int] };\n    case 'mas0000.os.exec.system_user':\n      return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n    case 'mas0000.sys.email_address':\n      return { type: 'email' };\n    case 'mas0000.sys.phone_number':\n      return { type: 'phone' };\n    case 'mas0000.sys.process.process':\n      return { type: 'process' };\n    case 'mas0000.sys.process.variadic_parameter':\n      return { type: 'variadic_parameter' /** needsSelectedProcessName */ };\n    case 'optional_dict':\n      // hardcord for replvalues\n      if (parameter.name === 'replvalues') {\n        return { type: 'replvalues' };\n      }\n      return { type: 'text', multiline: true };\n    default:\n      return { type: 'text', multiline: true };\n  }\n\n  // return { type: 'hidden' };\n}\n","import React from 'react';\nimport Groups from '../../components/notification-groups/notification-groups';\nimport Users from '../../components/notification-users/notification-users';\nimport Events from '../../components/notification-events/notification-events';\nimport NotificationList from '../../components/notification-list/notification-list';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport { Button } from 'shared/components/controls';\n\nimport classnames from 'classnames';\n\nimport './notifications.scss';\nimport { RestClient } from 'shared/lib/rest';\n\nexport class Notifications extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { recievedData } = props;\n\n    const startFullLog = [1, 3, 5, 7];\n    const completionFullLog = [2, 3, 6, 7];\n    const abnormalFullLog = [4, 6, 7];\n\n    this.state = {\n      groupsData: [],\n      usersData: [],\n      jobStart: {\n        notice: false,\n        fullLog: startFullLog.includes(recievedData.events)\n      },\n      jobCompletion: {\n        notice: false,\n        fullLog: completionFullLog.includes(recievedData.events)\n      },\n      abnormalEvent: {\n        notice: false,\n        fullLog: abnormalFullLog.includes(recievedData.events)\n      },\n      isEditing: false\n    };\n  }\n\n  async componentDidMount() {\n    const { recievedData = { users: [] } } = this.props;\n\n    RestClient.get('/group', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.groups) {\n        this.setState({\n          groupsData: res.data.data.groups.map(item => {\n            return { data: item, selected: false, displayIcons: false };\n          })\n        });\n      }\n    });\n    RestClient.get('/user', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.users) {\n        this.setState({\n          usersData: res.data.data.users.map(item => {\n            return {\n              data: item,\n              selected: recievedData.users.includes(item.name),\n              display: false\n            };\n          })\n        });\n      }\n    });\n  }\n\n  render() {\n    const { usersData, groupsData, jobStart, jobCompletion, abnormalEvent, isEditing } = this.state;\n    const selectedGroup = this.getSelectedGroup();\n    const areUsersSelected = usersData.find(item => item.selected);\n    const isClearActionAvailable = this.checkIfAllUsersSelectedCurrentGroup();\n    return (\n      <div\n        className={classnames('monitor-and-notifications', {\n          disabled: this.props.disabled\n        })}\n      >\n        {isEditing ? (\n          <div className=\"notifications-editor\">\n            <Groups onSelect={this.onSelectGroup} groups={groupsData} />\n            <Users\n              onSelect={this.onSelectUser}\n              onSelectUserAction={this.onSelectUserAction}\n              isClearActionAvailable={isClearActionAvailable}\n              users={usersData}\n              isGroupSelected={!!selectedGroup}\n              eventTypeIcons={this.getEventTypeIcons()}\n            />\n            <div className=\"right-side-container\">\n              <Events\n                jobStart={jobStart}\n                jobCompletion={jobCompletion}\n                abnormalEvent={abnormalEvent}\n                onSelect={this.onSelectEventType}\n                areUsersSelected={areUsersSelected}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  this.props.onApply(mappedState(this.state));\n                  this.toggleApplyButton();\n                }}\n              >\n                Apply\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <NotificationList\n            users={usersData}\n            eventTypeIcons={this.getEventTypeIcons()}\n            toggleApplyButton={this.toggleApplyButton}\n            disabled={this.props.disabled}\n          />\n        )}\n      </div>\n    );\n  }\n\n  getEventTypeIcons = () => {\n    const { jobStart, jobCompletion, abnormalEvent } = this.state;\n    const icons = [];\n    if (jobStart.notice || jobStart.fullLog) {\n      icons.push(<PlayCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (jobCompletion.notice || jobCompletion.fullLog) {\n      icons.push(<CheckCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (abnormalEvent.notice || abnormalEvent.fullLog) {\n      icons.push(<ErrorOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    return icons;\n  };\n\n  toggleApplyButton = () => {\n    this.setState(state => ({ isEditing: !state.isEditing }));\n  };\n\n  checkIfAllUsersSelectedCurrentGroup = () => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      return this.state.usersData\n        .filter(item => selectedGroup.data.users.indexOf(item.data.name) !== -1)\n        .every(item => item.selected);\n    }\n  };\n\n  onSelectGroup = group => {\n    this.setState(state => ({\n      groupsData: state.groupsData.map(item => ({\n        ...item,\n        selected: group.data.name === item.data.name\n      })),\n      usersData: state.usersData.map(item => ({\n        ...item,\n        display: group.data.users.indexOf(item.data.name) !== -1\n      }))\n    }));\n  };\n\n  onSelectUser = user => {\n    /* eslint-disable react/no-access-state-in-setstate */\n    const usersData = this.state.usersData.map(item => {\n      if (item.data.name === user.data.name) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    this.setState({ usersData, groupsData: this.setFlagGroupsIfContainSelectedUser(usersData) });\n  };\n\n  onSelectUserAction = shouldClear => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      const usersData = this.state.usersData.map(item => {\n        if (selectedGroup.data.users.indexOf(item.data.name) !== -1) {\n          return { ...item, selected: !shouldClear };\n        }\n        return item;\n      });\n      this.setState({\n        usersData,\n        groupsData: this.setFlagGroupsIfContainSelectedUser(usersData)\n      });\n    }\n  };\n\n  setFlagGroupsIfContainSelectedUser = usersData => {\n    return this.state.groupsData.map(group => ({\n      ...group,\n      displayIcons: !!usersData.find(user => {\n        return user.selected && user.data.member_of.indexOf(group.data.name) !== -1;\n      })\n    }));\n  };\n\n  onSelectEventType = (type, key) => {\n    this.setState(state => ({ [type]: { ...state[type], [key]: !state[type][key] } }));\n  };\n\n  getSelectedGroup() {\n    return this.state.groupsData.find(item => item.selected);\n  }\n}\n\nexport default Notifications;\n\n/**\n * State mapper for backend request.\n *\n * events is a composite number,\n *\n * notice unsuported for now\n * groups are redundant now that the ui preselects all users in a group.\n */\n/* eslint-disable no-unused-vars */\nfunction mappedState({ groupsData, usersData, jobStart, jobCompletion, abnormalEvent }) {\n  const users = usersData.filter(user => user.selected).map(user => user.data.name);\n\n  let events = 0;\n\n  if (jobStart.fullLog) {\n    events += 1;\n  }\n\n  if (jobCompletion.fullLog) {\n    events += 2;\n  }\n\n  if (abnormalEvent.fullLog) {\n    events += 4;\n  }\n\n  return { users, events };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getProcess(name) {\n  return RestClient.get(`/process/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchProcess(name, body) {\n  return RestClient.patch(`/process/${name}`, body);\n}\n","export const DISPLAY_FORMAT = 'L';\nexport const ISO_FORMAT = 'YYYY-MM-DD';\nexport const ISO_MONTH_FORMAT = 'YYYY-MM'; // TODO delete this line of dead code on next breaking change\n\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const VERTICAL_ORIENTATION = 'vertical';\nexport const VERTICAL_SCROLLABLE = 'verticalScrollable';\n\nexport const NAV_POSITION_BOTTOM = 'navPositionBottom';\nexport const NAV_POSITION_TOP = 'navPositionTop';\n\nexport const ICON_BEFORE_POSITION = 'before';\nexport const ICON_AFTER_POSITION = 'after';\n\nexport const INFO_POSITION_TOP = 'top';\nexport const INFO_POSITION_BOTTOM = 'bottom';\nexport const INFO_POSITION_BEFORE = 'before';\nexport const INFO_POSITION_AFTER = 'after';\n\nexport const ANCHOR_LEFT = 'left';\nexport const ANCHOR_RIGHT = 'right';\n\nexport const OPEN_DOWN = 'down';\nexport const OPEN_UP = 'up';\n\nexport const DAY_SIZE = 39;\nexport const BLOCKED_MODIFIER = 'blocked';\nexport const WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nexport const FANG_WIDTH_PX = 20;\nexport const FANG_HEIGHT_PX = 10;\nexport const DEFAULT_VERTICAL_SPACING = 22;\n\nexport const MODIFIER_KEY_NAMES = new Set(['Shift', 'Control', 'Alt', 'Meta']);\n","import React from 'react';\n\nimport { WantParameter } from './wishes';\n\nexport function RepeatableParameter({ normalized, ...others }) {\n  return <WantParameter parameter={normalized} {...others} />;\n}\n\nexport const Parameter = ({ normalized, ...others }) => {\n  if (normalized.is_repeatable) {\n    return <RepeatableParameter {...others} normalized={normalized} />;\n  }\n\n  return <WantParameter {...others} parameter={normalized} />;\n};\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './simple-search-input.local.scss';\n\nexport const SimpleSearchInput = ({ value, onChange, ...props }) => {\n  return (\n    <div className=\"search-input\">\n      <i className=\"search-icon-slot\">\n        <SearchIcon fontSize=\"medium\" />\n      </i>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"search-input-control\"\n        placeholder=\"Search\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nSimpleSearchInput.propTypes = {\n  value: string,\n  onChange: func\n};\n\nexport default SimpleSearchInput;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport './Header.local.scss';\n\nexport const Header = ({ title, children, stretchContent }) => (\n  <header className={`header ${stretchContent ? 'stretched-content' : ''}`}>\n    { title && <h1 className=\"header-title\">{title}</h1>}\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.dashboard;\n\nexport const filterStatusSelector = createSelector(localState, state => state.get('filterStatus'));\n","import { filterStatusActions } from './filter-status.action';\n\nimport { checkDaemon } from 'shared/api/daemon';\n\nexport const actions = {\n  ...filterStatusActions\n};\n\n/** TODO: The Above actions should be expanded to the new structure at some point */\n\nexport function checkDeamonStatus() {\n  return function daemon_thunk(dispatch) {\n    dispatch({\n      type: 'DAEMON_STATUS',\n      promise: checkDaemon()\n    });\n  };\n}\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDns } from '@mdi/js';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport './AddServerCard.local.scss';\n\nexport const AddServerCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Server\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewServerContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewServer = ({ server = { protocol: 'SSH' }, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const { actions } = useContext(ModalContext);\n  const formRef = useRef();\n\n  useEffect(() => {\n    fetchProtocols().then(resp => {\n      setState({\n        loading: false,\n        result: resp.result,\n        protocols: resp.protocols || []\n      });\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Add New Server\"\n        desc=\"Input the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading protocols list</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <ServerForm\n                server={server}\n                handleSubmission={reloadAccounts}\n                protocols={state.protocols}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Paper.Content>\n                <Result>\n                  <Result.Text>Could not load protocols list.</Result.Text>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button color=\"primary\" onClick={actions.close}>\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewServerContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewServer);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDatabase } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Paper, Center } from 'shared/components/layout';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport './AddDatabaseCard.local.scss';\n\nexport const AddDatabaseCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Database\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewDatabaseContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewDatabase = ({ account, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Add New Database\"\n        desc=\"Input the database connection information\"\n        formikRef={formRef}\n      />\n\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading Required Protocols and Privilege Modes</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <DatabaseForm\n                protocols={state.protocols}\n                modes={state.modes}\n                account={account}\n                handleSubmission={reloadAccounts}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Center>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load required protocols or privilege modes list.\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewDatabaseContainer = connect(\n  state => () => {\n    const path = state.explorer.state.path.split('--');\n    return {\n      account: {\n        protocol: path[0],\n        address: path[1]\n      }\n    };\n  },\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewDatabase);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { postFile } from 'shared/api/accounts';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { downloadFile } from 'shared/lib/download-file/download-file';\nimport { CONSTANTS } from '../../../config';\n\nimport './ImportCSV.local.scss';\n\nexport const ImportCSV = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Import from CSV\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <ImportCSVContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const ImportCSVFile = ({ reloadAccounts }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState('');\n  const fileName = selectedFile?.name || 'No file chosen';\n\n  const onChangeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadFile = () => {\n    if (!selectedFile) {\n      setResult('error');\n\n      return;\n    }\n    setResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedFile);\n\n    postFile(data)\n      .then(() => {\n        setResult('');\n        reloadAccounts();\n      })\n      .catch(() => {\n        // at the current BE version, even though the call is a success\n        // a \"false\" error is returned, so the reload account call should be made\n        setResult('');\n        reloadAccounts();\n      });\n  };\n\n  return (\n    <Paper\n      style={{\n        width: '50vw',\n        height: '50vh'\n      }}\n    >\n      <ModalHeader icon={<PostAddIcon />} title=\"Import CSV\" />\n      <Switch value={result}>\n        <Switch.Case value=\"\">\n          <div className=\"container\">\n            <label htmlFor=\"file-upload\" className=\"csv-file-upload\">\n              Choose file\n              <input type=\"file\" id=\"file-upload\" name=\"csv\" accept=\".csv\" onChange={onChangeHandler} />\n            </label>\n            <LimitlessTooltip placement=\"bottom\" title={fileName}>\n              <span className=\"file-name\">{fileName}</span>\n            </LimitlessTooltip>\n          </div>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => downloadFile(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_CSV_TEMPLATE)}>\n                Download template\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button onClick={uploadFile}>Upload</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"loading\">\n          <Center>\n            <Loader>Uploading file...</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value=\"error\">\n          <Result type=\"fail\">\n            <Result.Text>You forgot to select a file</Result.Text>\n          </Result>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => setResult('')}>Back</Button>\n            </Paper.Footer.Left>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const ImportCSVContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(ImportCSVFile);\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function deleteEntity(name, type) {\n  try {\n    const { data } = await RestClient.delete(`/${type}/${name}`);\n\n    return { result: data.result };\n  } catch (e) {\n    return { result: 'fail' };\n  }\n}\n\nexport function deleteInvocation(uuid) {\n  return RestClient.delete(`/invocation/${uuid}`);\n}\n","export function mapScheduledNames(allScheduled = []) {\n  const names = allScheduled.reduce((acc, entry) => {\n    const nameArr = entry.name.split('.');\n    const name = nameArr[nameArr.length - 1];\n    acc.push(name);\n    return acc;\n  }, []);\n\n  return names;\n}\n","export const SecurityAreas = {\n  SCHEDULE: 'schedule',\n};\n","import React from 'react';\nimport { bool, node, string, array, func } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiContentSave } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport './ActionCard.local.scss';\n\nexport class ActionCard extends React.PureComponent {\n  render() {\n    const {\n      settings,\n      status,\n      icon,\n      label,\n      addOnly,\n      options,\n      onClick,\n      readOnlyOptions,\n      lastBackup,\n      type = '',\n      statusInfo = ''\n    } = this.props;\n\n    return (\n      <div className={classnames('action-card', { addable: addOnly })}>\n        <header>\n          {lastBackup && (\n            <div className=\"last-backup\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiContentSave} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{lastBackup}</span>\n            </div>\n          )}\n          {settings && <div className=\"settings\">{settings}</div>}\n        </header>\n        <div className=\"main-icon\" onClick={onClick} role=\"presentation\">\n          {status && (\n            <LightTooltip placement=\"bottom\" title={capitalizeFirstLetter(statusInfo)}>\n              <div className={`status ${status} ${type}`} />\n            </LightTooltip>\n          )}\n          {icon}\n        </div>\n        <div className=\"main-label\">{label}</div>\n        {options &&\n          options.map((option, index) => (\n            <div\n              className={classnames('option', { disabled: option.disabled })}\n              key={`${option.label}-${index}`}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n            </div>\n          ))}\n        {readOnlyOptions &&\n          readOnlyOptions.map(option => (\n            <div\n              className=\"option presentation\"\n              key={option.label}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              {option.fillable && option.percentage && (\n                <div className=\"filled\" style={{ width: `${option.percentage}%` }} />\n              )}\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n              {option.percentage && <div className=\"end-icon\">{option.percentage}%</div>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nActionCard.propTypes = {\n  settings: node,\n  icon: node,\n  label: string,\n  addOnly: bool,\n  options: array,\n  onClick: func,\n  status: string,\n  readOnlyOptions: array\n};\n\nexport default ActionCard;\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './CardsLayout.local.scss';\n\nexport class CardsLayout extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"container\">{children}</div>;\n  }\n}\n\nCardsLayout.propTypes = {\n  children: node\n};\n\nexport default CardsLayout;\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiFullscreen, mdiFullscreenExit } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport { LightTooltip } from 'shared/components';\n\nimport './FullScreenIcon.local.scss';\n\nexport const FullScreenIcon = ({ fullScreen, fullScreenToggle }) => {\n  return (\n    <>\n      <LightTooltip placement=\"top\" title={fullScreen ? 'Collapse' : 'Expand'}>\n        <SvgIcon className=\"full-screen-icon\" onClick={fullScreenToggle}>\n          {fullScreen ? (\n            <Icon path={mdiFullscreenExit} />\n          ) : (\n            <Icon path={mdiFullscreen} />\n          )}\n        </SvgIcon>\n      </LightTooltip>\n    </>\n  );\n};\n","import React from 'react';\n\nexport function want(map, Unresolved = () => null, keygen = key => key) {\n  function settler(props) {\n    const key = keygen(props);\n    return map[key] ?? Unresolved;\n  }\n\n  return settler;\n}\n\nexport function wantComponent(settler) {\n  function Picker(props) {\n    const Picked = settler(props);\n\n    return <Picked {...props} />;\n  }\n\n  return Picker;\n}\n","import React, { useRef, useState } from 'react';\nimport { string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, Form, Formik } from 'formik';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, Input } from 'shared/components/controls';\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Center } from 'shared/components';\nimport './ChangePassword.local.scss';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const ChangePassword = ({ user, useLinkTrigger }) => {\n  const [open, setOpen] = useState(false);\n  /**\n   * Backend call result\n   */\n  const [result, setResult] = useState({ done: false, error: undefined });\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult({ done: false, error: undefined });\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const parseError = error => {\n    if (\n      error?.response?.data?.messages &&\n      error.response.data.messages.length > 0 &&\n      error.response.data.messages[0]?.text\n    ) {\n      return error.response.data.messages[0]?.text.split('\\n')[0];\n    }\n\n    return 'Password Change Failed!';\n  };\n\n  return (\n    <>\n      {!useLinkTrigger && (\n        <Button color=\"primary\" onClick={modalActions.open}>\n          Change Password\n        </Button>\n      )}\n      {useLinkTrigger && (\n        <a role=\"presentation\" onClick={modalActions.open}>\n          Change Password\n        </a>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '600px',\n            height: '450px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-password\">\n                <GroupIcon />\n              </Avatar>\n            }\n            title=\"Change Password\"\n            formikRef={formRef}\n          />\n          {result.done ? (\n            <>\n              <Center>\n                <Result type={result.error ? 'fail' : 'success'}>\n                  <Result.Text>{result.error ? result.error : 'Password Changed!'}</Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </>\n          ) : (\n            <Formik\n              initialValues={{\n                password: '',\n                confirm: ''\n              }}\n              validate={values => {\n                const errors = {};\n\n                if (!values.password) {\n                  errors.password = 'Field is required';\n                }\n\n                if (!values.confirm) {\n                  errors.confirm = 'Please reenter your new password';\n                }\n\n                if (values.password !== values.confirm) {\n                  errors.confirm = 'Passwords do not match';\n                }\n\n                if (values.password) {\n                  if (/[$\\\\/\":;']/.test(values.password)) {\n                    errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n                  } else if (values.password.length < 8) {\n                    errors.password = 'Password must contain at least eight characters';\n                  } else if (!/[a-z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a lower case letter (ex: a, b, etc.)';\n                  } else if (!/[A-Z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a upper case letter (ex: A, B, etc.)';\n                  } else if (!/[0-9]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n                  } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n                  }\n                }\n\n                return errors;\n              }}\n              onSubmit={async (values, actions) => {\n                actions.setSubmitting(true);\n\n                try {\n                  await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`, {\n                    password: values.password\n                  });\n\n                  actions.setSubmitting(false);\n                  setResult({ done: true });\n                } catch (e) {\n                  actions.setSubmitting(false);\n                  setResult({ done: true, error: parseError(e) });\n                }\n              }}\n              innerRef={formRef}\n            >\n              {({ dirty, isSubmitting, isValid, handleSubmit }) => (\n                <>\n                  <Paper.Content scrollable>\n                    <Form className=\"password-form\">\n                      <Row>\n                        <Field name=\"password\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                required\n                                label=\"Password\"\n                                placeholder=\"New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                      <Row>\n                        <Field name=\"confirm\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                required\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                label=\"Confirm Password\"\n                                placeholder=\"Confirm New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                    </Form>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        disabled={!dirty || !isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </>\n              )}\n            </Formik>\n          )}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nChangePassword.propTypes = {\n  user: string\n};\n\nexport const ChangePasswordContainer = connect(state => {\n  const user = selectedUser(state);\n\n  return { user: user.name };\n})(ChangePassword);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import { creators } from 'shared/lib/redux-utils';\nimport { LOAD_AVAILABLE_SERVERS, LOAD_DB_LICENSES, LOAD_LICENSE_TARGETS, LOAD_LICENSES } from '../actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nconst licensesInfoMock = {\n  license_id: 1,\n  product_name: 'Oracle ADV',\n  product_id: 1,\n  metric: 1,\n  lic_total: 5,\n  lic_assigned: 3,\n  lic_avail: 2,\n};\n\nconst licenseTargetsMock = {\n  server_id: 1,\n  server: 'Oracle Base',\n  database: 'ORA112SE',\n  quantity: 5,\n};\n\nexport function loadLicenseAllocationThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSES));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO);\n      dispatch(creators.success(LOAD_LICENSES, response.data.data || []));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSES, error));\n    }\n  };\n}\n\nexport function loadDbLicensesThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_DB_LICENSES));\n    try {\n      // const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO, { db });\n      // const licenseData = JSON.parse(response.data.data);\n      dispatch(creators.success(LOAD_DB_LICENSES, [licensesInfoMock]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_DB_LICENSES, error));\n    }\n  };\n}\n\nexport function loadLicenseTargetsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_LICENSE_TARGETS));\n    try {\n      // const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.LICENSES_INFO, { db });\n      // const licenseData = JSON.parse(response.data.data);\n      dispatch(creators.success(LOAD_LICENSE_TARGETS, [licenseTargetsMock]));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_LICENSE_TARGETS, error));\n    }\n  };\n}\n\nexport function loadAvailableServersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_AVAILABLE_SERVERS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.AVAILABLE_SERVERS);\n      const availableServersData = response.data.data;\n      dispatch(creators.success(LOAD_AVAILABLE_SERVERS, availableServersData));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_AVAILABLE_SERVERS, error));\n    }\n  };\n}\n\nexport function updateLicenseAssignmentThunk(isInitialAssignment, payload) {\n  return async () => {\n    try {\n      if (isInitialAssignment) {\n        await RestClient.post(CONSTANTS.BASE.ENDPOINTS.SUBMIT_LICENSE_ASSIGNMENT, payload);\n      } else {\n        await RestClient.put(CONSTANTS.BASE.ENDPOINTS.UPDATE_LICENSE_ASSIGNMENT, payload);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.warn(error);\n    }\n  };\n}\n","import { createSelector } from 'reselect';\n\nexport const getLicensesData = createSelector(\n  [(state) => state.licenseAllocation.licenses],\n  (licenses) => licenses\n);\n\nexport const licensesLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.licenses.loading],\n  (isLoading) => isLoading\n);\n\nexport const getDbLicensesData = createSelector(\n  [(state) => state.licenseAllocation.dbLicenses],\n  (licenses) => licenses\n);\n\nexport const dbLicensesLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.dbLicenses.loading],\n  (isLoading) => isLoading\n);\n\nexport const getLicenseTargetsData = createSelector(\n  [(state) => state.licenseAllocation.licenseTargets],\n  (licenses) => licenses\n);\n\nexport const licenseTargetsLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.licenseTargets.loading],\n  (isLoading) => isLoading\n);\n\nexport const getAvailableServersData = createSelector(\n  [(state) => state.licenseAllocation.availableServers],\n  (licenses) => licenses\n);\n\nexport const availableServersLoading = createSelector(\n  [(state) => state.licenseAllocation.flags.availableServers.loading],\n  (isLoading) => isLoading\n);\n","import React, { createContext } from 'react';\nimport uuid from 'uuid';\nimport MUIModal from '@material-ui/core/Modal';\nimport { bool, string, oneOfType, node, func, shape } from 'prop-types';\n\nimport './Modal.local.scss';\n\nimport { ModalHeader } from '../ModalHeader/ModalHeader';\n\nexport const ModalContext = createContext({});\n\nexport const Modal = ({ open, actions, id: providedId, children }) => {\n  const id = providedId || uuid();\n  const aria = {\n    'aria-labelledby': `${id}-modal-title`,\n    'aria-describedby': `${id}-modal-description`\n  };\n\n  return (\n    <ModalContext.Provider value={{ aria, actions }}>\n      <MUIModal {...aria} open={open} onClose={actions?.close} disableBackdropClick>\n        <div className=\"overlay\">\n          {typeof children === 'function' ? children({ id, aria, open, actions }) : children}\n        </div>\n      </MUIModal>\n    </ModalContext.Provider>\n  );\n};\n\nModal.propTypes = {\n  actions: shape({\n    open: func,\n    close: func\n  }),\n  children: oneOfType([node, func]),\n  open: bool,\n  id: string\n};\n\nModal.ModalHeader = ModalHeader;\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getNamespace(name) {\n  return RestClient.get(`/namespace/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchNamespace(name, body) {\n  return RestClient.patch(`/namespace/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postNamespace(body) {\n  return RestClient.post('/namespace', body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postForm(name, body) {\n  return RestClient.post(`/form/${name}/clone`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function createForm(body) {\n  return RestClient.post('/form', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function updateForm(name, body) {\n  return RestClient.patch(`/form/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useReducer, createContext } from 'react';\n\nimport _ from 'lodash';\n\nimport { produce } from 'immer';\n\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { QualifiedName, FormPrototypeSelect } from 'shared/components/form/editors/Custom';\n\nimport { space_summon } from 'shared/components/form/parameters/normalizeParameter';\n\nimport { FormParameters } from './FormParameters';\n\nimport { groupForm, ungroupForm } from './utils';\n\nimport { createForm, updateForm } from 'shared/api/form';\n\nconst groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_GROUP_INSTANCE': {\n      return produce(state, draft => {\n        draft.groups[action.pointers.group].instances.push(action.instance);\n      });\n    }\n\n    case 'REMOVE_GROUP_INSTANCE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances.splice(pointers.instance, 1);\n      });\n    }\n    case 'ADD_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        const field =\n          draft.groups[pointers.group].instances[pointers.instance].fields[pointers.field];\n\n        field.values.push({ instance: field.values.length, value: null });\n      });\n    }\n    case 'REMOVE_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances[pointers.instance].fields[\n          pointers.field\n        ].values.splice(action.index, 1);\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const PackedContext = createContext({ groups: [] });\n\nexport function FormEditor({ isNew, form, prototype, setResult, formRef }) {\n  const initialPacked = groupForm(prototype, _.cloneDeep(form));\n  /** Prepare initial relative name */\n  const split_name = form?.name?.split?.('.') || [''];\n\n  initialPacked.name = _.last(split_name);\n\n  const [packed, dispatch] = useReducer(groupsReducer, initialPacked);\n\n  const contextValue = { packed, dispatch };\n\n  return (\n    <PackedContext.Provider value={contextValue}>\n      <Formik\n        initialValues={{}}\n        validateOnChange={false}\n        onSubmit={(values, actions) =>\n          handleSubmit({\n            form,\n            packed,\n            isNew,\n            prototype,\n            values,\n            actions,\n            setResult\n          })}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Form details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <QualifiedName name=\"form_name\" label=\"Name\" value={packed.name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"description\"\n                          label=\"Description\"\n                          value={packed.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column>\n                          <FormPrototypeSelect\n                            value={prototype?.name}\n                            disabled\n                            label=\"Form\"\n                            name=\"prototype\"\n                          />\n                        </Column>\n                      </Row>\n                      <FormParameters packed={packed} prototype={prototype} />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </PackedContext.Provider>\n  );\n}\n\nasync function handleSubmit({\n  prototype,\n  packed,\n  values,\n  setResult,\n  isNew,\n  form\n}) {\n  const { form_name, description, prototype: protoName, ...fields } = values;\n\n  const extracted = extractFieldInfo(fields);\n\n  const exclusions = [null, 'None', ''];\n\n  const filteredExtractions = extracted.filter(entry => !exclusions.includes(entry.val));\n\n  const packedCopy = _.cloneDeep(packed);\n\n  /**\n   * Update name and description\n   */\n\n  /**\n   * extract and remap field values.\n   */\n  filteredExtractions.forEach(entry => {\n    const path = `groups[${entry.group}].instances[${entry.instance}].fields[${entry.field}].values[${entry.index}].value`;\n\n    _.set(packedCopy, path, entry.value);\n  });\n\n  /**\n   * unpack and prepare for sending\n   */\n  const unpacked = ungroupForm(packedCopy);\n\n  /**\n   * Very Important!\n   * Please read.\n   * Another cleanup process is needed.\n   * So there cannot be values for repeatable parameters where there is an empty array.\n   * It requires for some DAMNED reason, to have at least one null value.\n   */\n  unpacked.values = unpacked.values.map(value => {\n    if (Array.isArray(value.value)) {\n      /** for some reason, it's not removed from the first iteration for values. */\n      const filtered = { ...value, value: value.value.filter(v => !!v) };\n\n      if (filtered.value.length === 0) {\n        filtered.value = [null];\n      }\n\n      return filtered;\n    }\n\n    return value;\n  });\n\n  const name = form_name;\n\n  unpacked.name = name;\n\n  if (!isNew) {\n    const rename = [..._.initial(form.name.split('.')), form_name].join('.');\n    if (rename !== form.name) {\n      unpacked.rename = rename;\n      delete unpacked.name;\n    }\n  }\n\n  unpacked.description = description;\n  unpacked.prototype = protoName;\n  unpacked.version = prototype.version;\n\n  const request = isNew ? createForm : updateForm;\n\n  const request_args = [unpacked];\n\n  if (!isNew) {\n    // prepend name to request arguments.\n    request_args.unshift(form.name);\n  }\n\n  try {\n    await request(...request_args);\n    setResult('success');\n  } catch (e) {\n    setResult('fail');\n  }\n}\n\n// /** berry important :) */\nfunction extractFieldInfo(all) {\n  const key_struct = /^group-(\\d+)-instance-(\\d+)-field-(\\d+)-value-(\\d+)---(\\w+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      name: space_summon(matched[5]),\n      index: matched[4],\n      field: matched[3],\n      instance: matched[2],\n      lower: matched[1],\n      group: matched[1],\n      value\n    };\n  });\n}\n","import moment from 'moment';\n\nexport function mapAllServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const entryInfo = {\n      name: entry.srvname,\n      model: entry.model,\n      version: entry.version,\n      sid: entry.sid,\n      collDate: entry.collDate,\n      nrCores: entry.Ncore,\n      totalDBs: 1,\n      eelic_count: entry.eelic_count,\n      selic_count: entry.selic_count,\n      sids: [entry],\n      installedOptions: {\n        aa_count: entry.aa_count ? 1 : 0,\n        ac_count: entry.ac_count ? 1 : 0,\n        as_count: entry.as_count ? 1 : 0,\n        dv_count: entry.dv_count ? 1 : 0,\n        mt_count: entry.mt_count ? 1 : 0,\n        adg_count: entry.adg_count ? 1 : 0,\n        rac_count: entry.rac_count ? 1 : 0,\n        olap_count: entry.olap_count ? 1 : 0,\n        part_count: entry.part_count ? 1 : 0,\n        in_mem_db_count: entry.in_mem_db_count ? 1 : 0,\n        rac_one_node_count: entry.rac_one_node_count ? 1 : 0,\n        real_app_test_count: entry.real_app_test_count ? 1 : 0\n      }\n    };\n\n    const totalInstalledOptions = Object.values(entryInfo.installedOptions).reduce((a, b) => a + b);\n    entryInfo.sids = [{ ...entry, totalInstalledOptions }];\n    entryInfo.totalInstalledOptions = totalInstalledOptions;\n\n    acc.push(entryInfo);\n    return acc;\n  }, []);\n\n  return groupServers(serversInfo).sort((a, b) => a.nrCores - b.nrCores);\n}\n\nexport function mapVirtualServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const index = acc.findIndex(sv => sv.vcenterservername === entry.vcenterservername);\n\n    if (index > -1) {\n      if (\n        entry.vmname !== null ||\n        entry.vmguesthostname !== null ||\n        entry.vmguestos !== null ||\n        entry.vmipaddress !== null\n      ) {\n        acc[index].hosts_nr += 1;\n      }\n    } else {\n      acc.push({\n        vcenterservername: entry.vcenterservername,\n        cpu: entry.cpu,\n        cpucores: entry.cpucores,\n        hosts_nr:\n          entry.vmname !== null ||\n          entry.vmguesthostname !== null ||\n          entry.vmguestos !== null ||\n          entry.vmipaddress !== null\n            ? 1\n            : 0\n      });\n    }\n    return acc;\n  }, []);\n\n  return serversInfo;\n}\n\nfunction groupServers(servers) {\n  return Object.values(servers.reduce((acc, entry) => {\n    if (!acc[entry.name]) {\n      acc[entry.name] = entry;\n    } else {\n      const allSids = [...acc[entry.name].sids, ...entry.sids]\n        .sort((o1, o2) => -moment(o1.collDate).diff(moment(o2.collDate)));\n\n      acc[entry.name] = entry;\n      acc[entry.name].sids = allSids;\n      acc[entry.name].collDate = allSids[0].collDate;\n    }\n    return acc;\n  }, {}));\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './center.local.scss';\n\nexport class CenterComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport default CenterComponent;\n\nCenterComponent.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nCenterComponent.defaultProps = {\n  className: 'center-container'\n};\n","import moment from 'moment';\n\nexport function isBeforeDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n\n  const aYear = a.year();\n  const aMonth = a.month();\n\n  const bYear = b.year();\n  const bMonth = b.month();\n\n  const isSameYear = aYear === bYear;\n  const isSameMonth = aMonth === bMonth;\n\n  if (isSameYear && isSameMonth) return a.date() < b.date();\n  if (isSameYear) return aMonth < bMonth;\n  return aYear < bYear;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { string, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Overflow.scss';\n\nexport const Overflow = ({ className, component, children, variant }) => {\n  const nodeRef = useRef(null);\n  const [scrollableX, setScrollableX] = useState(false);\n  const [scrollableY, setScrollableY] = useState(false);\n  const [scrolledX, setScrolledX] = useState(false);\n  const [scrolledY, setScrolledY] = useState(false);\n\n  const Tag = component || 'div';\n\n  const onScroll = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolledY) {\n          setScrolledY(true);\n        }\n      } else if (scrolledY) {\n        setScrolledY(false);\n      }\n\n      if (event.currentTarget.scrollLeft) {\n        if (!scrolledX) {\n          setScrolledX(true);\n        }\n      } else if (scrolledX) {\n        setScrolledX(false);\n      }\n    },\n    [scrollableX, scrollableY, scrolledX, scrolledY]\n  );\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const element = nodeRef.current;\n      const box = {\n        width: element.clientWidth,\n        height: element.clientHeight,\n        scrollHeight: element.scrollHeight,\n        scrollWidth: element.scrollWidth\n      };\n\n      if (box.width < box.scrollWidth && !scrollableX) {\n        setScrollableX(true);\n      }\n\n      if (box.height < box.scrollHeight && !scrollableY) {\n        setScrollableY(true);\n      }\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={classnames(\n        'overflow-container',\n\n        {\n          [variant]: variant,\n          scrollableX,\n          scrollableY,\n          scrolledX,\n          scrolledY\n        },\n        className\n      )}\n    >\n      <Tag ref={nodeRef} className={classnames('overflow-scroller')} onScroll={onScroll}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nOverflow.propTypes = {\n  children: node,\n  className: string,\n  variant: oneOf(['white'])\n};\n\nOverflow.defaultProps = {};\n","import React, { useContext, useState } from 'react';\nimport { string, node, func, shape, bool } from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { ModalContext } from '../Modal/Modal';\n\nimport { Modal } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport './ModalHeader.local.scss';\n\nexport const ModalHeader = ({\n  avatar,\n  icon,\n  title,\n  desc,\n  closeable,\n  onClose,\n  aria: providedAria,\n  formikRef,\n  changedForm = false\n}) => {\n  const context = useContext(ModalContext);\n  const aria = context.aria || providedAria;\n  const actions = context.actions || { close: onClose };\n  const [open, setOpen] = useState(false);\n\n  const close = () => {\n    if (changedForm || (formikRef?.current?.dirty && fieldChanged(formikRef?.current?.touched))) {\n      setOpen(true);\n    } else {\n      actions.close();\n    }\n  };\n\n  const fieldChanged = fields => {\n    let changed = false;\n    const fieldsArr = Object.keys(fields);\n\n    fieldsArr.map(field => {\n      if (fields[field]) {\n        changed = true;\n      }\n\n      return null;\n    });\n\n    return changed;\n  };\n\n  return (\n    <header className=\"modal-header\">\n      {avatar && <div className=\"icon-slot\">{avatar}</div>}\n      {/** TODO: this should actually be avatar :((( ... don't have time to refactor now need to patch through */}\n      {icon && (\n        <div className=\"icon-slot\">\n          <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n            {icon}\n          </Avatar>\n        </div>\n      )}\n      <div className=\"modal-title-slot\" id={aria['aria-labelledby']}>\n        <h1 className=\"modal-title\">{title}</h1>\n        {desc && (\n          <p className=\"modal-desc\" id={aria['aria-describedby']}>\n            {desc}\n          </p>\n        )}\n      </div>\n      {closeable && actions.close && (\n        <>\n          <div className=\"modal-close-button-slot\">\n            <button className=\"modal-close-button\" onClick={close}>\n              <CloseIcon fontSize=\"large\" />\n            </button>\n          </div>\n\n          <Modal open={open}>\n            <Paper\n              style={{\n                minWidth: '350px',\n                maxHeight: '368px',\n                maxWidth: '65vw'\n              }}\n            >\n              <Paper.Header>\n                <div className=\"modal-header\">\n                  <div className=\"icon-slot\">\n                    <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n                      <WarningIcon />\n                    </Avatar>\n                  </div>\n                  <div className=\"modal-title-slot\">\n                    <h1 className=\"modal-title\">Warning</h1>\n                  </div>\n                  <div className=\"modal-close-button-slot\">\n                    <button\n                      className=\"modal-close-button\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"large\" />\n                    </button>\n                  </div>\n                </div>\n              </Paper.Header>\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Exit without saving?</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    No\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                      actions.close();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Paper>\n          </Modal>\n        </>\n      )}\n    </header>\n  );\n};\n\nModalHeader.propTypes = {\n  title: node,\n  desc: node,\n  onClose: func,\n  closeable: bool,\n  avatar: node,\n  icon: node,\n  aria: shape({\n    'aria-labelledby': string,\n    'aria-describedby': string\n  })\n};\n\nModalHeader.defaultProps = {\n  closeable: true\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nimport './Checkbox.local.scss';\n\nexport const Checkbox = ({ label, disabled, ...rest }) => {\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className=\"checkbox-label\"\n      control={\n        <MUICheckbox\n          className=\"checkbox\"\n          color=\"primary\"\n          icon={<CheckBoxOutlineBlankIcon />}\n          checkedIcon={<CheckBoxIcon />}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  label: node,\n  disabled: bool\n};\n","export default (task, duration = 10000) => {\n  let running = false;\n\n  async function runTask() {\n    if (!running) {\n      return;\n    }\n\n    try {\n      await task();\n      running = false;\n    } catch (e) {\n      setTimeout(() => runTask(), duration);\n    }\n  }\n\n  return {\n    start() {\n      if (running) {\n        return;\n      }\n      running = true;\n      runTask();\n    },\n    stop() {\n      running = false;\n    }\n  };\n};\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nexport const ServerForm = ({\n  server = {},\n  protocols,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [submission, setSubmission] = useState({});\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [showRSA, setShowRSA] = useState(false);\n  const handleAccountCreation = getCreateAccountHandler({\n    showRSA,\n    passwordEditable,\n    setSubmission,\n    isNew,\n    server\n  });\n\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapServerValues(entry) {\n    return {\n      name: entry.name || '',\n      description: entry.description || '',\n      host: entry.address || '',\n      port: entry.port || availablePorts[entry.protocol || 'SSH'],\n      user: entry.user || '',\n      server_password: entry.user_key || '',\n      confirm_server_password: '',\n      rsa_key: entry.user_key || '',\n      protocol: entry.protocol || 'SSH'\n    };\n  }\n\n  const initialValues = mapServerValues(server);\n\n  const extraValidations = values => {\n    const errors = {};\n    if (passwordEditable && !showRSA) {\n      if (values.server_password !== values.confirm_server_password) {\n        errors.confirm_server_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column>\n                          <Row>\n                            <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                          </Row>\n                          <Row>\n                            <Column>\n                              <Text\n                                name=\"protocol\"\n                                required\n                                label=\"Protocol\"\n                                disabled={!isNew}\n                                options={allowedProtocols.map(p => ({\n                                  value: p.name,\n                                  label: p.name\n                                }))}\n                                value={initialValues.protocol}\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue('port', availablePorts[value]);\n                                }}\n                              />\n                            </Column>\n                          </Row>\n                        </Column>\n                        <Column>\n                          <Text\n                            name=\"description\"\n                            multiline\n                            required\n                            label=\"Description\"\n                            value={initialValues.description}\n                          />\n                        </Column>\n                      </Row>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column style={{ maxWidth: '80%', width: '80%' }}>\n                          <Text\n                            name=\"host\"\n                            label=\"Host\"\n                            required\n                            value={initialValues.host}\n                            disabled={editing}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column>\n                          <Text\n                            name=\"server_user\"\n                            label=\"User\"\n                            required\n                            value={initialValues.user}\n                          />\n                        </Column>\n                        {passwordEditable && <PasswordOrRSA allowed showRSA={showRSA} />}\n                      </Row>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" required label=\"RSA Key\" />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row>\n          <Password name=\"server_password\" label=\"Password\" required />\n        </Row>\n        <Row>\n          <Password name=\"confirm_server_password\" label=\"Confirm Password\" required />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ showRSA, passwordEditable, setSubmission, isNew, server }) {\n  return function handleAccountCreation(values) {\n    const request_body = {\n      protocol: values.protocol,\n      user: values.server_user,\n      description: values.description,\n      address: values.host,\n      ...(passwordEditable && {\n        user_key: showRSA ? values.rsa_key : values.server_password\n      }),\n      port: Number.parseInt(values.port, 10)\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(server.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handleSubmission) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    // add this entry to redux structure\n    // addNewAccount(newAccount);\n    handleSubmission();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchDataTypes(type = '') {\n  try {\n    const { data } = await RestClient.get(\n      `${CONSTANTS.BASE.ENDPOINTS.DATATYPES}${type ? `/${type}` : ''}`\n    );\n\n    return { result: data.result, data_types: data.data.data_types };\n  } catch (e) {\n    return { result: 'fail', data_types: [] };\n  }\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport _ from 'lodash';\n\nexport const DatabaseForm = ({\n  account = {},\n  protocols = [],\n  modes,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [submission, setSubmission] = useState({});\n  const allowedProtocols = protocols.filter(p => {\n    const special = p?.special_required;\n\n    return special && special.includes('database');\n  });\n  const [showRSA, setShowRSA] = useState(false);\n\n  const handleAccountCreation = getCreateAccountHandler({\n    protocols: allowedProtocols,\n    modes,\n    showRSA,\n    isNew,\n    setSubmission,\n    account\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapAccountValues(entry = {}) {\n    return {\n      name: _.get(entry, 'name', ''),\n      protocol: _.get(entry, 'protocol', ''),\n      description: _.get(entry, 'description', ''),\n\n      host: _.get(entry, 'address', ''),\n\n      port: _.get(entry, 'port', availablePorts[_.get(entry, 'protocol')]),\n\n      database: _.get(entry, 'special.database', ''),\n      user: _.get(entry, 'user', ''),\n      mode: _.get(entry, 'special.mode', '')\n    };\n  }\n\n  const initialValues = mapAccountValues(account);\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (passwordEditable && !showRSA) {\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {({ values }) => {\n            const selectedProtocol =\n              values.protocol && protocols.find(protocol => protocol.name === values.protocol);\n            const allowRSA = !!selectedProtocol?.allow_rsa_key;\n            const withDatabase = selectedProtocol?.special_required?.includes('database');\n            const withMode = selectedProtocol?.name === 'ORACLE';\n\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column>\n                            <Row padded>\n                              <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                            </Row>\n                            <Row padded>\n                              <Column>\n                                <Text\n                                  name=\"protocol\"\n                                  required\n                                  label=\"Protocol\"\n                                  reactToChange={(value, formik) => {\n                                    formik.setFieldValue('port', availablePorts[value]);\n                                  }}\n                                  options={allowedProtocols.map(p => ({\n                                    value: p.name,\n                                    label: p.name\n                                  }))}\n                                  value={initialValues.protocol}\n                                />\n                              </Column>\n                            </Row>\n                          </Column>\n                          <Column>\n                            <Text\n                              multiline\n                              name=\"description\"\n                              label=\"Description\"\n                              required\n                              value={initialValues.description}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column style={{ maxWidth: '80%', width: '80%' }}>\n                            <Text name=\"host\" required label=\"Host\" value={initialValues.host} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                          </Column>\n                        </Row>\n                        <Row>\n                          {withDatabase && (\n                            <Column style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}>\n                              <Text\n                                name=\"database\"\n                                required\n                                label=\"Database\"\n                                value={initialValues.database}\n                              />\n                            </Column>\n                          )}\n                          {withMode && (\n                            <Column style={{ maxWidth: '20%' }}>\n                              <Text\n                                name=\"mode\"\n                                label=\"Mode\"\n                                required\n                                options={modes.map(mode => ({\n                                  value: mode.label,\n                                  label: mode.label\n                                }))}\n                                value={initialValues.mode}\n                              />\n                            </Column>\n                          )}\n                        </Row>\n                        <Row>\n                          <Column>\n                            <Text\n                              name=\"user\"\n                              label=\"User\"\n                              required\n                              value={initialValues.user || ''}\n                            />\n                          </Column>\n                          {passwordEditable && (\n                            <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                          )}\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && allowRSA && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && allowRSA && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" label=\"RSA Key\" required />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row padded>\n          <Password name=\"password\" required label=\"Password\" />\n        </Row>\n        <Row padded>\n          <Password name=\"confirm_password\" required label=\"Confirm Password\" />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ protocols, showRSA, setSubmission, isNew, account }) {\n  return function handleAccountCreation(values) {\n    const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n    const allowRSA = !!selectedProtocol?.allow_rsa_key;\n    const withDatabase = selectedProtocol?.special_required?.includes('database');\n    const withMode = selectedProtocol?.name === 'ORACLE';\n\n    const request_body = {\n      user: values.user,\n      description: values.description,\n      protocol: values.protocol,\n      address: values.host,\n      user_key: allowRSA && showRSA ? values.rsa_key : values.password,\n      port: Number.parseInt(values.port, 10),\n      special: {\n        ...(withDatabase && { database: values.database }),\n        ...(withMode && { mode: values.mode })\n      }\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(account.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handler) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    handler();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async (url) => {\n  try {\n    const response = await RestClient.get(url);\n\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'CSV_Template.csv';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n\nexport const downloadFileByLink = (url) => {\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = url;\n    tempLink.target = '_blank';\n    document.body.appendChild(tempLink);\n    tempLink.click();\n    document.body.removeChild(tempLink);\n};\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { deleteInvocation } from 'shared/api/delete';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions as sharedActions } from 'shared/store/actions';\nimport './DeleteJobModal.local.scss';\n\nexport const ConnectedDeleteJobModal = connect(\n  state => {\n    return {\n      globalFilters: globalFiltersSelector(state)\n    };\n  },\n  dispatch => {\n    return {\n      getJobs: data => {\n        dispatch(sharedActions.getJobs.dispatchLoading(data));\n      }\n    };\n  }\n)(DeleteJobModal);\n\nfunction DeleteJobModal({ open, actions, uuid, filters, globalFilters, getJobs }) {\n  const [result, setResult] = useState('attempt');\n  const getQSP = () => {\n    if (!filters || !Object.keys(filters).length) {\n      const startDate = moment.unix(globalFilters.get('startDate'));\n      const endDate = moment.unix(globalFilters.get('endDate'));\n      const start = moment(startDate.format('YYYY-MM-DD'));\n      const end = moment(endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n      const payload = {\n        date_invoke: startDate.format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      };\n\n      return payload;\n    }\n    return filters;\n  };\n\n  const terminator = useCallback(() => {\n    deleteInvocation(uuid)\n      .then(() => {\n        setResult('success');\n        if (filters) {\n          getJobs(getQSP());\n        }\n      })\n      .catch(() => {\n        setResult('fail');\n      });\n  }, uuid);\n  return (\n    <>\n      <Modal open={open} actions={actions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Delete\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <div className=\"container\">\n                    <p>Are you sure you want to delete this invocation and future invocations of this job?</p>\n                  </div>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('loading');\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <h2 className=\"container\">Invocation successfully deleted!</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <h2 className=\"container\">Invocation could not be deleted.</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"loading\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button } from 'shared/components/controls';\nimport { ScheduleModal } from './components/ScheduleModal/ScheduleModal';\nimport { hasCreatePrivilege } from '../../../entities/utils/privileges';\nimport { SecurityAreas } from '../../../entities/utils/security-areas';\n\nexport const Schedule = ({ invocation, userDetails }) => {\n  const canCreateSchedule = hasCreatePrivilege(userDetails, SecurityAreas.SCHEDULE);\n  if (!canCreateSchedule) {\n    return '';\n  }\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setFilledValues({});\n      setResult('');\n      setOpen(false);\n    }\n  };\n  const [filledValues, setFilledValues] = useState({});\n  const [result, setResult] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [canSelectProcess, setCanSelectProcess] = useState(true);\n\n  const onClickHandler = option => {\n    setSelectedOption(option);\n    setCanSelectProcess(!invocation);\n    setOpen(true);\n  };\n\n  const btnLabel = invocation ? 'Schedule' : 'New Schedule';\n  const isScheduled = invocation?.status === 'SCHEDULED' && invocation?.schedule;\n\n  return (\n    <>\n      {isScheduled && (\n        <Button style={{ minWidth: '140px' }} onClick={() => onClickHandler('edit-schedule')}>\n          Edit Schedule\n        </Button>\n      )}\n      <Button\n        onClick={() => {\n          onClickHandler('schedule');\n        }}\n      >\n        {btnLabel}\n      </Button>\n      <ScheduleModal\n        open={open}\n        actions={modalActions}\n        invocation={invocation}\n        isScheduled={isScheduled}\n        selectedOption={selectedOption}\n        canSelectProcess={canSelectProcess}\n        result={result}\n        setResult={setResult}\n        filledValues={filledValues}\n        setFilledValues={setFilledValues}\n      />\n    </>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { postNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\n\nexport const ConnectedNewNamespace = connect(null, {\n  request: fetchEntity\n})(NewNamespace);\n\nfunction NewNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Namespace\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: namespace ? namespace.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  postNamespace(body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButtonNoDirty = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { FormEditor } from './FormEditor';\n\nexport const ConnectedFormModal = connect(null, {\n  refresh: fetchEntity\n})(FormModal);\n\nfunction FormModal({ disabled, form = null, prototype, refresh }) {\n  const isNew = form === null;\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('use_form');\n  const formRef = useRef();\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult('use_form');\n      setOpen(false);\n      // should refresh be here as well?\n      // refresh('form');\n    }\n  };\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        {isNew ? 'New Form' : 'Edit'}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title={`${isNew ? 'New' : 'Edit'} Form`}\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"use_form\">\n              <FormEditor\n                isNew={isNew}\n                form={form}\n                prototype={prototype}\n                setResult={setResult}\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was {isNew ? 'created' : 'updated'} successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      refresh('form');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ConfirmationModal } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\nimport { mdiSettings, mdiDatabase, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { deleteAccount } from 'shared/api/accounts';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nexport const DatabaseSettings = ({ database, disabled, reloadAccounts, editDbTrigger, deleteDbTrigger }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteDbOpen, setDeleteDbOpen] = useState(false);\n  const [deleteDbErrorOpen, setDeleteDbErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteDbModalActions = {\n    open: () => {\n      setDeleteDbOpen(true);\n    },\n    close: () => {\n      setDeleteDbOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(database.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteDbErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteDbErrorModalActions = {\n    open: () => {\n      setDeleteDbErrorOpen(true);\n    },\n    close: () => {\n      setDeleteDbErrorOpen(false);\n    }\n  };\n\n  if (disabled && !editDbTrigger && !deleteDbTrigger) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      {editDbTrigger && editDbTrigger(modalActions.open, disabled)}\n      {!editDbTrigger && (\n        <IconButton onClick={modalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiSettings} />\n          </SvgIcon>\n        </IconButton>\n      )}\n      {deleteDbTrigger && deleteDbTrigger(deleteDbModalActions.open, disabled)}\n      {!deleteDbTrigger && (\n        <IconButton onClick={deleteDbModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditDatabaseContainer database={database} />\n      </Modal>\n\n      <ConfirmationModal open={deleteDbOpen} actions={deleteDbModalActions} message=\"Are you sure you want to delete database?\" />\n      <ErrorModal open={deleteDbErrorOpen} actions={deleteDbErrorModalActions} message=\"Failed to delete Database. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditDatabase = ({ database, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [], modes: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Edit Database\"\n        desc=\"Edit the database connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <DatabaseForm\n            account={database}\n            protocols={state.protocols}\n            modes={state.modes}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditDatabaseContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditDatabase);\n","export const getOutputText = (output, invocation) => {\n  if (!invocation || (!output && invocation.status !== 'FAILED')) return '';\n\n  let outputText = '';\n\n  if (invocation.status === 'FAILED') {\n    outputText = `The following error(s) occurred:\n      ${invocation.errors.map(error => `• ${error}`).join('\\n')}\\n ${\n      output && output.length > 0 ? `Output: \\n${output.map(row => row.data.text).join('\\n')}` : ''\n    }`;\n  } else {\n    outputText = output.map(row => row.data.text).join('\\n');\n  }\n\n  return outputText;\n};\n","import { requestInvocation } from 'shared/api/invocation';\n\nexport function processQuery(uuid, process) {\n  return {\n    type: 'PROCESS_QUERY',\n    uuid,\n    process\n  };\n}\n\nexport function fetchInvocation(uuid, process) {\n  return function thunk(dispatch) {\n    dispatch({\n      type: 'FETCH_INVOCATION',\n      uuid,\n      process,\n      promise: requestInvocation(uuid)\n    });\n  };\n}\n\nexport function updateInvocation(invocation) {\n  return {\n    type: 'UPDATE_INVOCATION',\n    invocation\n  };\n}\n","import moment from 'moment';\nimport { getOutputText } from './getOutputText';\n\nconst EMAIL_BODY_MAX_LENGTH = 2000;\n\nexport const sendToEmail = (invocation, output, processName) => {\n  const text = getOutputText(output, invocation);\n  if (text.length > EMAIL_BODY_MAX_LENGTH) {\n    return false; // Max allowed body length exceeded\n  }\n\n  const date = moment(invocation.date_invoke).format('MMM DD YYYY, H:mm:ss');\n  const subject = processName ? `${processName} output` : 'Job output';\n  const body = `PROCESS: ${processName}\\nDATE: ${date}\\nSTATUS: ${invocation.status}\\n\\nOUTPUT:\\n\\n${text}`;\n  window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(body)}`;\n  return true;\n};\n","import { mdiServer } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Input } from '../../../../shared/components/controls';\nimport { FullScreenIcon } from '../../FullScreenIcon/FullScreenIcon';\n\nimport './NetworkToolbar.local.scss';\n\nexport const NetworkToolbar = ({ servers, serversUpdate, fullScreen, fullScreenToggle }) => {\n  const [selectedServers, setSelectedServers] = React.useState([]);\n  const selectedServerIds = selectedServers.map(server => server.value);\n  const serverOptions = (servers || [])\n    .filter(server => !selectedServerIds.includes(server.id))\n    .map(server => ({ value: server.id, label: server.label }));\n\n  const onServersChange = (event, newValue) => {\n    setSelectedServers(newValue);\n    serversUpdate(newValue);\n  };\n\n  return (\n    <div className=\"network-toolbar\">\n      <div className=\"network-toolbar-filter-container\">\n        <Autocomplete\n          style={{ width: 400 }}\n          size=\"small\"\n          limitTags={2}\n          disableClearable\n          multiple\n          id=\"server-filter\"\n          options={serverOptions}\n          value={selectedServers}\n          getOptionLabel={opt => opt.label || ''}\n          onChange={onServersChange}\n          renderInput={params => (\n            <Input\n              {...params}\n              size=\"small\"\n              label={\n                <span className=\"servers-filter-wrap\">\n                  <SvgIcon>\n                    <path d={mdiServer} />\n                  </SvgIcon>\n                  <span className=\"servers-filter-label\">Server</span>\n                </span>\n              }\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </div>\n      <FullScreenIcon fullScreen={fullScreen} fullScreenToggle={fullScreenToggle} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './SuccessModal.local.scss';\n\nexport const SuccessModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Success\"\n          icon={\n            <SvgIcon className=\"header-icon\">\n              <CheckCircleRoundedIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"success\">\n            <Result.Text>{message}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* getBeVersion() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_VERSION);\n    yield put(actions.getBeVersion.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeVersion.dispatchFail());\n  }\n}\n\nfunction* getBeLicence() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_LICENCE);\n    yield put(actions.getBeLicence.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeLicence.dispatchFail());\n  }\n}\n\nfunction* getBeHeath() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_HEALTH);\n    yield put(actions.getBeHealth.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeHealth.dispatchFail());\n  }\n}\n\nexport function* BeLicenceEffect() {\n  yield takeEvery(actions.getBeLicence.getLoadingAction(), getBeLicence);\n}\n\nexport function* BeHealthEffect() {\n  yield takeEvery(actions.getBeHealth.getLoadingAction(), getBeHeath);\n}\n\nexport function* BeVersionEffect() {\n  yield takeEvery(actions.getBeVersion.getLoadingAction(), getBeVersion);\n}\n","import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './TotalJobsCount.local.scss';\n\nexport const TotalJobsCount = ({ jobs, status }) => {\n  const jobsTotal = () => {\n    return (\n      <div className=\"tooltip-container\">\n        <div className=\"row executing\">\n          <span className=\"label\"> EXECUTING:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'EXECUTING').length}</span>\n        </div>\n        <div className=\"row succeeded\">\n          <span className=\"label\"> SUCCEEDED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SUCCEEDED').length}</span>\n        </div>\n        <div className=\"row scheduled\">\n          <span className=\"label\"> SCHEDULED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SCHEDULED').length}</span>\n        </div>\n        <div className=\"row delayed\">\n          <span className=\"label\">DELAYED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'DELAYED').length}</span>\n        </div>\n        <div className=\"row aborted\">\n          <span className=\"label\">ABORTED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'ABORTED').length}</span>\n        </div>\n        <div className=\"row failed\">\n          <span className=\"label\">FAILED: </span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'FAILED').length}</span>\n        </div>\n        <div className=\"row killed\">\n          <span className=\"label\">KILLED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'KILLED').length}</span>\n        </div>\n      </div>\n    );\n  };\n\n  if (status) {\n    return (\n      <div className=\"count-jobs\">\n        {jobs.length} {status} {jobs.length === 1 ? 'job' : 'jobs'}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"count-jobs\">\n      <LightTooltip placement=\"bottom\" title={jobsTotal()}>\n        <span>{jobs.length}</span>\n      </LightTooltip>{' '}\n      total jobs\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    backgroundColor: '#fff',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: '700',\n    fontFamily: 'Open Sans',\n    boxShadow: '0px 4px 8px rgba(4, 17, 37, 0.1)',\n    borderRadius: '8px'\n  }\n}))(Tooltip);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getAlias(name) {\n  return RestClient.get(`/alias/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchAlias(name, body) {\n  return RestClient.patch(`/alias/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postAlias(body) {\n  return RestClient.post('/alias', body, {\n    page_size: 2147483645\n  });\n}\n","import { actions } from 'session/store/actions';\nimport { actionStates } from 'shared/lib';\nimport { fromJS } from 'immutable';\n\nexport const initialState = {\n  login: {\n    status: '',\n    errors: []\n  },\n  authorization: {\n    status: actionStates.LOADING\n  },\n  currentUser: {\n    name: '',\n    details: {}\n  },\n  beVersion: ''\n};\n\nexport const reducerActions = {\n  // authorization Check\n  [actions.checkAuthorization.getLoadingAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.LOADING),\n  [actions.checkAuthorization.getSuccessAction()]: (state, payload) =>\n    state\n      .set(\n        'currentUser',\n        fromJS({\n          name: payload.name,\n          details: payload.details\n        })\n      )\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.checkAuthorization.getFailAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.FAIL),\n\n  // login\n  [actions.login.getLoadingAction()]: state =>\n    state.setIn(['login', 'status'], actionStates.LOADING),\n  [actions.login.getSuccessAction()]: state =>\n    state\n      .setIn(['login', 'status'], actionStates.SUCCESS)\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.login.getFailAction()]: (state, errors) =>\n    state.setIn(['login', 'status'], actionStates.FAIL).setIn(['login', 'errors'], fromJS(errors)),\n  [actions.getBeVersion.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beVersion', payload.data);\n    return nextState;\n  },\n  [actions.getBeLicence.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beLicence', payload.data);\n    return nextState;\n  },\n  [actions.getBeHealth.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beHealth', payload.data);\n    return nextState;\n  }\n};\n","import { checkDeamonStatus } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  await store.dispatch(checkDeamonStatus());\n\n  throw new Error('polling-daemon');\n}\n\nexport const daemonPoller = withPolling(task, 60000);\n","import { actions } from 'dashboard/store/actions';\n\nexport const initialState = {\n  filterStatus: 'ALL'\n};\n\nexport const reducerActions = {\n  [actions.setFilterStatus.getEventAction()]: (state, status) => {\n    const nextState = state.set('filterStatus', status);\n    return nextState;\n  }\n};\n","import { actions } from 'shared/store/actions';\nimport { actions as sessionActions } from 'session/store/actions';\nimport { fromJS } from 'immutable';\nimport moment from 'moment';\n\nlet sessionGlobalFilters = {\n  startDate: moment()\n    .subtract(7, 'd')\n    .startOf('day')\n    .unix(),\n  endDate: moment()\n    .add(1, 'days')\n    .startOf('day')\n    .unix()\n};\n\nsessionGlobalFilters = JSON.parse(localStorage.getItem('global-filters')) || sessionGlobalFilters;\n\nexport const initialState = {\n  globalFilters: sessionGlobalFilters,\n  jobs: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false,\n    callFailed: false,\n    reason: ''\n  },\n  connections: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  searchResults: {\n    jobs: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    },\n    processes: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    }\n  }\n};\n\nexport const reducerActions = {\n  [actions.setGlobalFilters.getSuccessAction()]: (state, payload) => {\n    const nextState = state\n      .setIn(['globalFilters', 'startDate'], payload.startDate.unix())\n      .setIn(['globalFilters', 'endDate'], payload.endDate.unix());\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.login.getSuccessAction()]: state => {\n    const nextState = state\n      .setIn(\n        ['globalFilters', 'startDate'],\n        moment()\n          .subtract(7, 'd')\n          .startOf('day')\n          .unix()\n      )\n      .setIn(\n        ['globalFilters', 'endDate'],\n        moment()\n          .add(1, 'days')\n          .startOf('day')\n          .unix()\n      );\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.logout.getSuccessAction()]: state => {\n    localStorage.removeItem('global-filters');\n    return state;\n  },\n  [actions.getJobs.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        content: payload.data.invocations,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false,\n        callFailed: false,\n        reason: ''\n      })\n    ),\n  [actions.getJobs.getFailAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        callFailed: true,\n        fetching: false,\n        page_count: 1,\n        content: [],\n        total_count: 0,\n        reason: payload.reason\n      })\n    ),\n  [actions.getJobs.getLoadingAction()]: state => state.setIn(['jobs', 'fetching'], true),\n  [actions.getConnections.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'connections',\n      fromJS({\n        content: payload.data.accounts,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getConnections.getLoadingAction()]: state =>\n    state.setIn(['connections', 'fetching'], true),\n  [actions.searchJobs.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'jobs'],\n      fromJS({\n        content: payload.data.invocations,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchJobs.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], true),\n  [actions.searchJobs.getFailAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], false),\n  [actions.searchProcesses.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'processes'],\n      fromJS({\n        content: payload.data.processes,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchProcesses.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], true),\n  [actions.searchProcesses.getFailAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], false)\n};\n","import { actions } from 'core/store/actions';\n\nexport const initialState = {\n  notifications: [],\n};\n\nexport const reducerActions = {\n  [actions.addNotifications.getEventAction()]: (state, payload) => state\n    .merge('notifications', payload),\n  [actions.removeNotification.getEventAction()]: (state, notificationIndex) => state\n    .removeIn(['notifications', notificationIndex]),\n};\n","import { notificationActions } from './notification.action';\n\nexport const actions = {\n  ...notificationActions,\n};\n","import {\n  TextParameter,\n  BooleanParameter,\n  IntegerParameter,\n  EmailParameter,\n  PhoneNumberParameter,\n  ProcessParameter,\n  VariadicParameter,\n  AccountParameter,\n  FQNameParameter,\n  PasswordParameter,\n  MultilineParameter,\n  ReplvaluesParameter,\n  UuidParameter\n} from './variants';\n\nimport { want, wantComponent } from 'shared/lib/want';\n\n/**\n * Main switcher for Parameter fields.\n */\nexport const WantParameter = wantComponent(\n  want(\n    {\n      text: TextParameter,\n      number: IntegerParameter,\n      select: TextParameter,\n      phone: PhoneNumberParameter,\n      boolean: BooleanParameter,\n      email: EmailParameter,\n      fqname: FQNameParameter,\n      account: AccountParameter,\n      process: ProcessParameter,\n      variadic_parameter: VariadicParameter,\n      password: PasswordParameter,\n      multiline: MultilineParameter,\n      replvalues: ReplvaluesParameter,\n      uuid: UuidParameter\n    },\n    TextParameter,\n    props => {\n      const { editor } = props.parameter;\n\n      return editor.type;\n    }\n  )\n);\n\nexport default WantParameter;\n","import { mapAccountsTree } from '../../../../explorer/store/mappers';\n\nexport const ADDITIONAL_ACCOUNT_FILTERS = {\n  dbms: [\n    filterDbmsByShell.bind(null, 'shell'),\n    filterDbmsByShell.bind(null, 'target_shell'),\n  ],\n  target_shell: [filterShellByPlatform],\n  shell: [filterShellByPlatform],\n};\n\nfunction filterDbmsByShell(shellFieldName, accounts, formValues) {\n  accounts = accounts || [];\n  if (!formValues || !formValues[shellFieldName]) {\n    return accounts;\n  }\n\n  const shellAccount = accounts.find((account) => account.name === formValues[shellFieldName]);\n  if (!shellAccount) {\n    return accounts;\n  }\n\n  return accounts.filter(account => account.address === shellAccount.address);\n}\n\nconst PLATFORM_VALUE_TO_TYPE = {\n  Oracle: 'ORACLE',\n  PostgreSQL: 'PGSQL',\n  MySQL: 'MYSQL',\n  'Microsoft SQL Server': 'MSSQL',\n};\n\nfunction filterShellByPlatform(accounts, formValues) {\n  accounts = accounts || [];\n\n  if (!formValues || !formValues.platform) {\n    return accounts;\n  }\n\n  const accountsTree = mapAccountsTree(accounts);\n  const platformTree = accountsTree.find((platform) => platform.name === PLATFORM_VALUE_TO_TYPE[formValues.platform]);\n  if (!platformTree) {\n    return accounts;\n  }\n\n  const platformAddresses = Object.keys(platformTree.servers);\n  return accounts.filter(account => platformAddresses.indexOf(account.address) !== -1);\n}\n","/* eslint-disable */\n\nimport _ from 'lodash';\n\nexport const groupForm = (prototype, form = null) => {\n  if (form === null) {\n    form = {\n      name: null,\n      description: null,\n      prototype: prototype.name,\n      version: prototype.version,\n      groups: [...prototype.groups],\n      values: prototype.fields.map(field => {\n        return { ...field, value: field.deflt };\n      })\n    };\n  }\n\n  if (!form.hasOwnProperty('groups')) {\n    form.groups = [...prototype.groups];\n    form.values = prototype.fields.map(field => {\n      const value = form.values.find(value => value.position === field.position);\n      return {\n        ...value,\n        ...field\n      };\n    });\n  }\n\n  if (form.hasOwnProperty('values')) {\n    const maxPosition = _.max(form.values.map(value => value.position));\n\n    // important point\n    if (form.groups.length > 0) {\n      // Mark any existing groups as non-virtual\n      form.groups = form.groups.map(group => {\n        return { ...group, virtual: false };\n      });\n      // Make sure groups are properly sorted\n      form.groups = _.sortBy(form.groups, 'lower');\n      // First we need to create any virtual groups, if needed\n      let position = 0;\n      while (position <= maxPosition) {\n        // First, find the group of which this value is a member, if any\n        const currentGroup = form.groups.find(\n          group => group.lower <= position && group.upper > position\n        );\n        if (!!currentGroup) {\n          // We already have a group for this position. Leapfrog to the next\n          position = currentGroup.upper;\n        } else {\n          // OK, we couldn't find the current group, so find the next one\n          const nextGroup = form.groups.find(group => group.lower > position);\n          if (!!nextGroup) {\n            // Add a new virtual group that covers this position up to the next group\n            form.groups = [\n              {\n                name: null,\n                virtual: true,\n                lower: position,\n                upper: nextGroup.lower,\n                iteration_limit: 1\n              },\n              ...form.groups\n            ];\n            // Leapfrog\n            position = nextGroup.upper;\n          } else {\n            // We're at the end. Add a covering virtual group\n            form.groups.push({\n              name: null,\n              virtual: true,\n              lower: position,\n              upper: maxPosition + 1,\n              iteration_limit: 1\n            });\n          }\n        }\n      }\n    } else {\n      // We have no groups at all. Create a single virtual group for all values.\n      form.groups.push({\n        name: null,\n        virtual: true,\n        lower: 0,\n        upper: maxPosition + 1,\n        iteration_limit: 1\n      });\n    }\n\n    form.groups = _.sortBy(form.groups, 'lower').map(group => {\n      group.instances = [];\n      return group;\n    });\n    form.values = _.sortBy(form.values, 'position');\n    // OK, we have the groups, now we need to add the instances and fields\n    for (let group of form.groups) {\n      const values = form.values.filter(\n        value => value.position >= group.lower && value.position < group.upper\n      );\n      if (!group.virtual || group.iteration_limit > 1) {\n        // How many instances do we need?\n        const instanceCount = Math.max(\n          1,\n          _.max(values.map(value => (value.value === null ? 1 : value.value.length)))\n        );\n        for (let g = 0; g < instanceCount; g++) {\n          let instance = {\n            instance: g,\n            fields: values.map(value => {\n              let field = {\n                name: value.name,\n                description: value.description,\n                meta: value.meta,\n                position: value.position,\n                data_type: value.data_type,\n                is_repeatable: value.is_repeatable,\n                is_required: value.is_required,\n                values: []\n              };\n              if (Array.isArray(value.value) && value.value.length > g) {\n                if (value.is_repeatable) {\n                  for (let f = 0; f < value.value[g].length; f++) {\n                    field.values.push({\n                      instance: f,\n                      value: value.value[g][f]\n                    });\n                  }\n                } else {\n                  field.values.push({\n                    instance: 0,\n                    value: value.value[g]\n                  });\n                }\n              }\n              return field;\n            })\n          };\n          group.instances.push(instance);\n        }\n      } else {\n        // Iteration limit is 1\n        let instance = {\n          instance: 0,\n          fields: values.map(value => {\n            let field = {\n              name: value.name,\n              description: value.description,\n              meta: value.meta,\n              position: value.position,\n              data_type: value.data_type,\n              is_repeatable: value.is_repeatable,\n              is_required: value.is_required,\n              values: []\n            };\n            if (field.is_repeatable) {\n              if (Array.isArray(value.value)) {\n                for (let f = 0; f < value.value.length; f++) {\n                  field.values.push({\n                    instance: f,\n                    value: value.value[f]\n                  });\n                }\n              }\n            } else {\n              field.values.push({\n                instance: 0,\n                value: value.value\n              });\n            }\n            return field;\n          })\n        };\n        group.instances.push(instance);\n      }\n    }\n    delete form.values;\n  }\n  // For repeating groups and fields, there must always be one \"empty\" group and/or field at the end.\n  for (let group of form.groups) {\n    // if (group.iteration_limit > 1) {\n    //     const instance = _.last(group.instances)\n    //     const values = _.flatten(instance.fields.map(field => field.values.map(value => value.value)))\n    //     // If at least one value is non-null, then we need to add a new empty group at the end.\n    //     if (!_.every(values, value => value === null)) {\n    //         // OK, we need to add another empty instance\n    //         group.instances.push({\n    //             instance: instance.instance + 1,\n    //             fields: instance.fields.map(field => {\n    //                 return {\n    //                     ...field,\n    //                     values: []\n    //                 }\n    //             })\n    //         })\n    //     }\n    // }\n\n    // Now we check the individual fields\n    // Each field must have at least one value.\n    // For repeating fields, there must always be a final empty instance.\n    for (let instance of group.instances) {\n      for (let field of instance.fields) {\n        if (field.values.length === 0) {\n          field.values.push({\n            instance: 0,\n            value: null\n          });\n          // } else if (field.is_repeatable) {\n          //     const value = _.last(field.values)\n          //     if (value.value !== null) {\n          //         field.values.push({\n          //             instance: value.instance + 1,\n          //             value: null\n          //         })\n          //     }\n        }\n      }\n    }\n  }\n  return form;\n};\n\nexport const ungroupForm = form => {\n  let packed = {\n    description: form.description,\n    values: []\n  };\n  let names = {};\n  for (const group of form.groups) {\n    for (const instance of group.instances) {\n      for (const field of instance.fields) {\n        names[field.name] = {\n          position: field.position,\n          grouped: !group.virtual || group.iteration_limit > 1,\n          is_repeatable: field.is_repeatable\n        };\n      }\n    }\n  }\n  for (const name in names) {\n    const info = names[name];\n    const group = form.groups.find(\n      group => group.lower <= info.position && group.upper > info.position\n    );\n    if (info.grouped && info.is_repeatable) {\n      // Array of arrays\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        if (_.last(subvalues) === null) {\n          subvalues = _.dropRight(subvalues, 1);\n        }\n        values.push(subvalues);\n        while (Array.isArray(_.last(values)) && _.last(values).length === 0) {\n          values = _.dropRight(values, 1);\n        }\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.grouped) {\n      // Just a plain array\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        values.push(subvalues[0]);\n      }\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.is_repeatable) {\n      // Just a plain array\n      const instance = group.instances[0];\n      let values = instance.fields\n        .find(field => field.name === name)\n        .values.map(value => value.value);\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else {\n      // Simple value\n      const instance = group.instances[0];\n      const value = instance.fields.find(field => field.name === name).values[0].value;\n      packed.values.push({ name, value });\n    }\n  }\n  packed.values = packed.values.filter(value => value.value !== null);\n  return packed;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getPrivileges(name, isAlias) {\n  return RestClient.get(`/entity/${name}/privileges`, {\n    ...(isAlias && { cls: 'alias' }),\n    page_size: 2147483645\n  });\n}\n\n/**\n    privilege: type,\n    enitity_name: entityName,\n    alias: isAlias\n    role: user_or_group.role,\n    role_type: user_or_group.is_group ? 'group' : 'user',\n    explicit_grant: user_or_group.granted.includes(type),\n    explicit_denied: user_or_group.denied.includes(type),\n    action: granted ? 'revoke' : 'grant'\n  }}\n */\nexport async function setPrivileges(data) {\n  const { granted, alias } = data;\n\n  const actions = granted ? ['revoke', 'deny'] : ['grant', 'allow'];\n\n  try {\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[0]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[1]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    return getPrivileges(data.enitity_name, data.alias);\n  } catch (e) {\n    throw new Error('failed');\n  }\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  mdiFileTableBox,\n  mdiDatabase,\n  mdiFileTree,\n  mdiTable,\n  mdiAlertOutline,\n  mdiTableColumnWidth,\n  mdiAlphaPBox,\n  mdiInboxFull,\n  mdiInbox\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nimport './root.local.scss';\n\nconst VerticalUsageBar = ({ usage, className }) => {\n  let fill;\n  if (usage > 75) {\n    fill = '#ED3A4A';\n  } else if (usage > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  return (\n    <div className={className}>\n      <svg viewBox=\"-2 -2 62 102\">\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" height=\"100\" width=\"60\" fill=\"rgba(12, 50, 110, 0.38)\" />\n        <rect x=\"0\" y={100 - usage} rx=\"8\" ry=\"8\" height={usage} width=\"60\" fill={fill} />\n      </svg>\n    </div>\n  );\n};\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nconst SidebarStorageItem = ({ ns, usage, setItem, isSelected }) => (\n  <div\n    className={classnames('sidebar-item', { selected: isSelected })}\n    role=\"button\"\n    onClick={() => setItem(ns)}\n  >\n    <VerticalUsageBar usage={usage} className=\"usage-icon\" />\n    {ns}\n  </div>\n);\n\nexport const StorageSidebar = ({ list, setItem, selectedItem, isLoading }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiFileTableBox} />\n        </SvgIcon>\n        Tablespaces\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          list.map((element, index) => (\n            <SidebarStorageItem\n              isSelected={selectedItem === element.ns}\n              key={index}\n              {...element}\n              setItem={setItem}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst iconMapper = {\n  triggers: { icon: mdiAlertOutline, label: 'Triggers' },\n  tables: { icon: mdiTable, label: 'Tables' },\n  indexes: { icon: mdiTableColumnWidth, label: 'Indexes' },\n  procedures: { icon: mdiAlphaPBox, label: 'Procedures' },\n  packages: { icon: mdiInbox, label: 'Packages' },\n  packageBodies: { icon: mdiInboxFull, label: 'Package Bodies' }\n};\n\nconst objectsSidebarMapper = (setItem, selectedItem, invalidObjects) => (\n  { owner, objects },\n  index\n) => {\n  const isSelected = owner === selectedItem.owner;\n  const invalidChildren = invalidObjects.filter(({ owner: name }) => name === owner);\n  return (\n    <React.Fragment key={index}>\n      <div\n        className={classnames('sidebar-item', {\n          selected: isSelected,\n          'rotate-cw': !isSelected,\n          'rotate-ccw': isSelected\n        })}\n        role=\"button\"\n        onClick={() => setItem({ owner: isSelected ? null : owner, object: null })}\n      >\n        <SvgIcon>\n          <path d={mdiFileTree} />\n        </SvgIcon>\n        {owner}\n      </div>\n      {isSelected &&\n        objects.map((object, i) => {\n          const isObjectSelected = object === selectedItem.object;\n          const isInvalid = invalidChildren.findIndex(({ object: name }) => name === object) !== -1;\n          return (\n            <div\n              key={`${index}_${i}`}\n              className={classnames('child', 'sidebar-item', {\n                selected: isObjectSelected,\n                invalid: isInvalid\n              })}\n              role=\"button\"\n              onClick={() => setItem({ owner, object })}\n            >\n              <SvgIcon>\n                <path d={iconMapper[object].icon} />\n              </SvgIcon>\n              {iconMapper[object].label}\n            </div>\n          );\n        })}\n    </React.Fragment>\n  );\n};\n\nexport const ObjectsSidebar = ({\n  setItem,\n  selectedItem,\n  list,\n  isLoading,\n  invalidObjects\n}) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiDatabase} />\n        </SvgIcon>\n        Schema\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          <div className=\"sidebar-container\">\n            {list.map(objectsSidebarMapper(setItem, selectedItem, invalidObjects))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/jsx-indent-props */\nimport React from 'react';\nimport { mdiArrangeBringToFront, mdiFileTableBox, mdiFlashCircle, mdiHelpRhombusOutline, mdiTable } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Chart } from 'react-google-charts';\nimport classnames from 'classnames';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nconst KPIDisplay = ({ value, suffix, colorFormatting = false }) => {\n  let fill;\n  if (value > 75) {\n    fill = '#ED3A4A';\n  } else if (value > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  const digits = value > 10 ? 0 : 2;\n  const valueString = value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: digits\n  });\n  return (\n    <span style={colorFormatting ? { color: fill } : {}}>\n      {valueString}\n      {suffix}\n    </span>\n  );\n};\n\nconst NoDataComponent = ({ name }) => (\n  <div className=\"content dashed-and-centered\">\n    <SvgIcon>\n      <path d={mdiHelpRhombusOutline} />\n    </SvgIcon>\n    <p>Please select a {name} in order to view its children</p>\n  </div>\n);\n\nconst StorageDetailsList = ({ data, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <Loader>Loading data...</Loader>\n      </Center>\n    );\n  }\n\n  const { tablespace, files } = data;\n\n  if (!tablespace || !tablespace.ns) {\n    return <NoDataComponent name=\"tablespace\" />;\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"detail-row\">\n        <div className=\"ts-name\">\n          <SvgIcon>\n            <path d={mdiFileTableBox} />\n          </SvgIcon>\n          {tablespace.ns}\n        </div>\n        <div className=\"details\">\n          <div className=\"block\">\n            <div className=\"top\">Total:</div>\n            <div>\n              <KPIDisplay value={tablespace.totalGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used size:</div>\n            <div>\n              <KPIDisplay value={tablespace.usedGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used %:</div>\n            <div>\n              <KPIDisplay value={tablespace.usage} suffix=\"%\" colorFormatting />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free size:</div>\n            <div>\n              <KPIDisplay value={tablespace.freeGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free %:</div>\n            <div>\n              <KPIDisplay value={tablespace.freePerc} suffix=\"%\" />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {files.map(({ PCT_USED, FILE_NAME, SIZE_MB, MAXSIZE_MB }, index) => {\n        const filePath = FILE_NAME.split('/');\n        const [fileName, extension] = filePath[filePath.length - 1].split('.');\n        return (\n          <div key={index} className=\"detail-row\">\n            <div className=\"file-name\">\n              <SvgIcon>\n                <path d={mdiTable} />\n              </SvgIcon>\n              {fileName}\n              <span className=\"extension\">.{extension}</span>\n            </div>\n            <div className=\"details\">\n              <div className=\"block\">\n                <div className=\"top\">Used %:</div>\n                <div>\n                  <KPIDisplay value={PCT_USED} suffix=\"%\" colorFormatting />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Size:</div>\n                <div>\n                  <KPIDisplay value={SIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Max size:</div>\n                <div>\n                  <KPIDisplay value={MAXSIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n      <div>\n        <Center>\n          <Chart\n            width=\"700px\"\n            height=\"400px\"\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n              ['Task', 'Hours per Day'],\n              [`Free  ${tablespace.freeGB.toFixed(2)} GB`, tablespace.freePerc],\n              [`Used  ${tablespace.usedGB.toFixed(2)} GB`, tablespace.usage]\n            ]}\n            options={{\n              backgroundColor: 'transparent',\n              is3D: true,\n              colors: ['rgb(52, 204, 136)', 'rgb(237, 58, 74)']\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n        </Center>\n      </div>\n    </div>\n  );\n};\n\nexport const StorageViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiTable} />\n        </SvgIcon>\n        Data Files\n      </div>\n      <StorageDetailsList data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport const ObjectsViewer = ({ data, isLoading, sidebarDisabled, protocol }) => {\n  const objectsDataMapper = SystemExplorerFeatureUtil.getObjectsDataMapper(protocol);\n  if (!!objectsDataMapper && data && data.length > 0) {\n    data = data.slice().map(objectsDataMapper);\n  }\n\n  return (\n    <div className={classnames('viewer', {\n        'sidebar-disabled': sidebarDisabled\n      })}\n    >\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiArrangeBringToFront} />\n        </SvgIcon>\n        Objects\n      </div>\n      {isLoading ? (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      ) : (\n        <div className=\"content\">\n          <Overflow>\n            {!data || data.length === 0 ? (\n              <NoDataComponent name=\"object\" />\n            ) : (\n              data.map(({ OBJECT_NAME, CREATED, OBJECT_ID, LAST_DDL_TIME }) => {\n                return (\n                  <div key={OBJECT_ID} className=\"detail-row\">\n                    <div className=\"file-name\">\n                      <SvgIcon>\n                        <path d={mdiFlashCircle} />\n                      </SvgIcon>\n                      {OBJECT_NAME}\n                    </div>\n                    <div className=\"details\">\n                      <div className=\"object-block\">\n                        <div className=\"top\">Last DDL Time</div>\n                        <div>{LAST_DDL_TIME}</div>\n                      </div>\n                      <div className=\"object-block\">\n                        <div className=\"top\">Created</div>\n                        <div>{CREATED}</div>\n                      </div>\n                      {/* Designs have some buttons here */}\n                    </div>\n                  </div>\n                );\n              })\n            )}\n          </Overflow>\n        </div>\n      )}\n    </div>\n  );\n};\n","const GB_MULTIPLIER = 1024 * 1024 * 1024;\n\nexport const formatMemorySizeGb = (bytes) => {\n  return (bytes / GB_MULTIPLIER).toFixed(3);\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { STATUS_TYPES } from '../../store/selectors';\n\nimport './StatusLabel.local.scss';\n\nconst STATUS_LABEL_MAP = {\n  [STATUS_TYPES.down]: 'Down',\n  [STATUS_TYPES.up]: 'Up',\n  [STATUS_TYPES.error]: 'Has errors',\n  [STATUS_TYPES.notConnected]: 'Not connected',\n  [STATUS_TYPES.notFound]: 'Not found',\n};\n\nexport class StatusLabel extends React.PureComponent {\n  render() {\n    const {\n      status\n    } = this.props;\n\n    return (\n      <div className={`status ${status.replace(/\\s/g, '-')}`} role=\"presentation\">{STATUS_LABEL_MAP[status]}</div>\n    );\n  }\n}\n\nStatusLabel.propTypes = {\n  status: string\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LayersOutlinedIcon from '@material-ui/icons/LayersOutlined';\nimport { mdiClipboardPlayMultipleOutline, mdiShieldCheckOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nexport const navigationItems = [\n  {\n    title: <FormattedMessage id=\"navigation.dashboard\" />,\n    to: '/dashboard',\n    id: 'dashboard',\n    icon: <DashboardOutlinedIcon />,\n    qaClass: 'qa-nav-dashboard'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.jobs\" />,\n    to: '/jobs',\n    id: 'jobs',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiClipboardPlayMultipleOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-jobs'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.system\" />,\n    to: '/system',\n    id: 'system',\n    icon: <LayersOutlinedIcon />,\n    qaClass: 'qa-nav-system',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.entitites\" />,\n        to: '/system/entities',\n        qaClass: 'qa-nav-entities'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.explorer\" />,\n        to: '/system/explorer',\n        qaClass: 'qa-nav-explorer'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.user.and.groups\" />,\n        to: '/system/mas-accounts/users',\n        qaClass: 'qa-nav-mas-accounts'\n      }\n    ]\n  },\n  {\n    title: <FormattedMessage id=\"navigation.compliance\" />,\n    to: '/compliance',\n    id: 'compliance',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiShieldCheckOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-compliance',\n    items: [\n      {\n        group: true,\n        title: 'Oracle'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.collection\" />,\n        to: '/compliance/licensing',\n        qaClass: 'qa-nav-licensing'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.allocation\" />,\n        to: '/compliance/license-allocation',\n        qaClass: 'qa-nav-license-allocation'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.usage\" />,\n        to: '/compliance/license-collection',\n        qaClass: 'qa-nav-license-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      },\n      {\n        group: true,\n        title: 'Microsoft'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.license.usage\" />,\n        to: '/compliance/mssql-usage-collection',\n        qaClass: 'qa-nav-mssql-usage-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/mssql-executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      },\n    ]\n  }\n];\n","import { getQuery, getInvocationStatus } from './selectors';\n\nimport { InvocationStatus } from './constants';\n\nimport { fetchInvocation } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  const { uuid, process } = getQuery(store.getState());\n\n  if (uuid) {\n    await store.dispatch(fetchInvocation(uuid, process));\n  }\n\n  const STATUS = getInvocationStatus(store.getState());\n\n  switch (STATUS) {\n    case InvocationStatus.EXECUTING:\n    case InvocationStatus.SCHEDULED:\n    case InvocationStatus.DELAYED:\n    case 'NOT_FETCHED':\n      console.log('[invocation-poller] - polling', STATUS); // eslint-disable-line\n      throw new Error('need to poll invocation...');\n    default:\n      break;\n  }\n\n  console.log('[invocation-poller] - done'); // eslint-disable-line\n\n  return Promise.resolve();\n}\n\nexport const invocationPoller = withPolling(task, 5000);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Center, Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Header } from 'core/components/Header/Header';\nimport { ToggleSelection } from './containers/ToggleSelection/ToggleSelection';\nimport { ConnectedServersNetworkTile } from './components/ServersNetworkTile/ServersNetworkTile';\nimport { ConnectedLicensableFeaturesTile } from './components/LicensableFeaturesGraph/LicensableFeaturesTile';\nimport { ConnectedOperatingSystemsTile } from './components/OperatingSystemsTile/OperatingSystemsTile';\nimport { ConnectedLicenseDeltaTile } from './components/LicenseDeltaTile/LicenseDeltaTile';\nimport { DbmsType } from '../explorer/SystemExplorerFeatureUtil';\nimport { MssqlConnectedLicenseUsageTile } from './components/MSSQL/LicenseUsageTile/LicenseUsageTile';\nimport { MssqlConnectedServersNetworkTile } from './components/MSSQL/ServersNetworkTile/ServersNetworkTile';\nimport { MssqlConnectedEnvironmentUsageTile } from './components/MSSQL/EnvironmentUsageTile/EnvironmentUsageTile';\nimport { MssqlConnectedDbVersionAndOsTile } from './components/MSSQL/DbVersionAndOsTile/DbVersionAndOsTile';\n\nimport './ExecutiveDashboard.local.scss';\n\nconst prepareDashboardTitle = (dbType) => {\n  switch (dbType) {\n    case DbmsType.ORACLE: {\n      return 'Compliance / Oracle / Executive Dashboard';\n    }\n    case DbmsType.MSSQL: {\n      return 'Compliance / Microsoft / Executive Dashboard';\n    }\n    default: return '';\n  }\n};\n\nfunction ExecutiveDashboard({\n  isLoading,\n  callFailed,\n  dbType,\n}) {\n  dbType = dbType || DbmsType.ORACLE;\n  const [selectedServer, setSelectedServer] = useState(null);\n  const dashboardTitle = prepareDashboardTitle(dbType);\n\n  return (\n    <>\n      <Header title={dashboardTitle}>\n        {!isLoading && !callFailed && (\n          <div className=\"header-actions-container\">\n            <ToggleSelection hasSelectedServer={!!selectedServer} deselectServer={() => setSelectedServer(null)} />\n            {/*\n              <RefreshDashboard onClickCallback={refreshDashboard} />\n              <div className=\"separator\" />\n              <ToggleDashboard active={dashboardType} onClickCallback={changeDashboard} />\n            */}\n          </div>\n        )}\n      </Header>\n      <Main mdPage>\n        <Switch value={isLoading}>\n          <Switch.Case value>\n            <Center>\n              <Loader>Loading Executive Dashboard...</Loader>\n            </Center>\n          </Switch.Case>\n          <Switch.Case value={false}>\n            <Switch value={callFailed}>\n              <Switch.Case value>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load Executive Dashboard data. Please refresh the page and try again.\n                  </Result.Text>\n                </Result>\n              </Switch.Case>\n              <Switch.Case value={false}>\n                <div className=\"widgets-container\">\n                  <div className=\"widget\">\n                    <Switch value={dbType}>\n                      <Switch.Case value={DbmsType.ORACLE}>\n                        <ConnectedLicensableFeaturesTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                      <Switch.Case value={DbmsType.MSSQL}>\n                        <MssqlConnectedLicenseUsageTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                    </Switch>\n                  </div>\n                  <div className=\"widget\">\n                    <Switch value={dbType}>\n                      <Switch.Case value={DbmsType.ORACLE}>\n                        <ConnectedServersNetworkTile selectedServer={selectedServer} onServerChanged={(serverId) => setSelectedServer(serverId)} />\n                      </Switch.Case>\n                      <Switch.Case value={DbmsType.MSSQL}>\n                        <MssqlConnectedServersNetworkTile selectedServer={selectedServer} onServerChanged={(serverId) => setSelectedServer(serverId)} />\n                      </Switch.Case>\n                    </Switch>\n                  </div>\n                  <div className=\"widget\">\n                    <Switch value={dbType}>\n                      <Switch.Case value={DbmsType.ORACLE}>\n                        <ConnectedLicenseDeltaTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                      <Switch.Case value={DbmsType.MSSQL}>\n                        <MssqlConnectedEnvironmentUsageTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                    </Switch>\n                  </div>\n                  <div className=\"widget\">\n                    <Switch value={dbType}>\n                      <Switch.Case value={DbmsType.ORACLE}>\n                        <ConnectedOperatingSystemsTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                      <Switch.Case value={DbmsType.MSSQL}>\n                        <MssqlConnectedDbVersionAndOsTile selectedServer={selectedServer} />\n                      </Switch.Case>\n                    </Switch>\n                  </div>\n                </div>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Main>\n    </>\n  );\n}\n\nexport const ConnectedExecutiveDashboard = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.dashboard.loading ||\n        state.executiveDashboard.flags.virtual.loading,\n      callFailed: state.executiveDashboard.flags.dashboard.callFailed,\n      selected: state.executiveDashboard.selectedServers.length,\n      rawEntries: state.executiveDashboard.rawEntries,\n      rawVirtualServers: state.executiveDashboard.rawVirtualServers,\n      virtualServers: state.executiveDashboard.virtualServers\n    };\n  }\n)(ExecutiveDashboard);\n","import React from 'react';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors }) => {\n  let content;\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          {errors.map((error, index) => {\n            return <p key={index}>• {error}</p>;\n          })}\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              {output.map((row, index) => {\n                return (\n                  <p className=\"row\" key={`${row.data.text}-${index}`}>\n                    {row.data.text}\n                  </p>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        {output.map((row, index) => {\n          return (\n            <p className=\"row\" key={index}>\n              {row.data.text}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return content;\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { fromJS } from 'immutable';\n\nexport const bindReducer = (initialState, actions) => (state = fromJS(initialState), action) => {\n  if (typeof actions[action.type] === 'function') {\n    return actions[action.type](state, action.payload);\n  }\n\n  return state;\n};\n","export const actionStates = {\n  LOADING: 'LOADING',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS',\n};\n","import { actionStates } from 'shared/lib';\n\nexport class ActionCreatorHandler {\n  constructor(action) {\n    this.action = action;\n  }\n\n  getEventAction() {\n    return this.action;\n  }\n\n  getLoadingAction() {\n    return `${this.action}__${actionStates.LOADING}`;\n  }\n\n  getFailAction() {\n    return `${this.action}__${actionStates.FAIL}`;\n  }\n\n  getSuccessAction() {\n    return `${this.action}__${actionStates.SUCCESS}`;\n  }\n\n  dispatchLoading(payload) {\n    return {\n      type: this.getLoadingAction(),\n      payload,\n    };\n  }\n\n  dispatchFail(payload) {\n    return {\n      type: this.getFailAction(),\n      payload,\n    };\n  }\n\n  dispatchSuccess(payload) {\n    return {\n      type: this.getSuccessAction(),\n      payload,\n    };\n  }\n\n  dispatchEvent(payload) {\n    return {\n      type: this.action,\n      payload,\n    };\n  }\n}\n","export const slugify = (text) => text.toString().toLowerCase()\n  .trim()\n  .replace(/[^a-z0-9 -]/g, '')\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-');\n","export const createUrl = (url, params = {}) => {\n  if (typeof params !== 'object' || !params) {\n    return url;\n  }\n  let path = url;\n  const query = { ...params };\n  Object.keys(query).forEach((key) => {\n    if (typeof query[key] !== 'undefined' && path.includes(`:${key}`)) {\n      path = path.replace(`:${key}`, query[key]);\n      delete query[key];\n    }\n  });\n\n  if (!Object.keys(query).length || !Object.keys(query).find(((key) => typeof query[key] !== 'undefined'))) {\n    return path;\n  }\n\n  const paramsUrl = Object.keys(query).filter((key) => query[key])\n    .map((key) => `${key}=${encodeURIComponent(query[key])}`)\n    .join('&');\n  return `${path}${'?'.concat(...paramsUrl)}`;\n};\n","export const numberPretty = (number) => {\n  if (!number) {\n    return number;\n  }\n  const parts = number.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n","const formatNumber = (number, pow, decimals = 1) => (number / (10 ** pow)).toFixed(decimals);\n\nexport const smartNumber = (number, decimals = false) => {\n  if (typeof number !== 'number') {\n    return number;\n  }\n  if (number < 10 ** 3) {\n    if (typeof decimals === 'number') {\n      return +number.toFixed(+decimals);\n    }\n    return number;\n  }\n\n  if (number < 10 ** 6) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 3, decimals)} K`;\n    }\n    return `${formatNumber(number, 3)} K`;\n  }\n\n  if (number < 10 ** 9) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 6, decimals)} M`;\n    }\n    return `${formatNumber(number, 6)} M`;\n  }\n\n  if (typeof decimals === 'number') {\n    return `${formatNumber(number, 9, decimals)} B`;\n  }\n  return `${formatNumber(number, 9)} B`;\n};\n","export const capitalizeFirstLetter = (s) => s.toString().charAt(0).toUpperCase() + s.slice(1);\n","export const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n","/* eslint-disable */\nexport const phoneNumberPattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n","export const urlPattern = /^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)$/;\n","export const randomStringGenerator = (length = 5) => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n  for (let i = 0; i < length; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n","export const generateUniqueId = () => btoa(Math.floor(new Date().valueOf() * Math.random())).replace(/=/g, '').slice(0, 16);\n","export const emptyFunc = () => null;\n","export const delay = (timer) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve();\n  }, timer);\n});\n","import moment from 'moment';\n\nimport { isBeforeDay } from './isBeforeDay';\n\nexport function isInclusivelyAfterDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n  return !isBeforeDay(a, b);\n}\n","const STATES = {\n  loading: 'LOADING',\n  fail: 'FAIL',\n  success: 'SUCCESS'\n};\n\nexport const SEPARATOR = '__';\n\nexport function type(name, stateKey) {\n  const state = STATES[stateKey];\n\n  if (state) {\n    return name + SEPARATOR + state;\n  }\n\n  return name;\n}\n\n/**\n *\n * These could be written as classes with static methods.\n *\n * */\n\nexport const types = {\n  action: type,\n  loading: function loadingType(name) {\n    return type(name, 'loading');\n  },\n  success: function successType(name) {\n    return type(name, 'success');\n  },\n  fail: function failType(name) {\n    return type(name, 'fail');\n  }\n};\n\nexport const creators = {\n  action: function action(name, payload) {\n    return { type: name, payload };\n  },\n  loading: function loadingAction(name, payload) {\n    return { type: type(name, 'loading'), payload };\n  },\n  success: function successAction(name, payload) {\n    return { type: type(name, 'success'), payload };\n  },\n  fail: function failAction(name, payload) {\n    return { type: type(name, 'fail'), payload };\n  }\n};\n","import { produce } from 'immer';\n\nfunction unchanged(state) {\n  return state;\n}\n\nexport function createReducer(reducers, initialState = {}) {\n  const reducerInitialState = reducers.initialState || initialState;\n\n  return function r(state = reducerInitialState, action) {\n    const { type } = action;\n\n    if (!type) {\n      console.error('[createReducer] action does not have a type', action); // eslint-disable-line\n      return unchanged(state);\n    }\n\n    const reducer = reducers[action.type];\n\n    if (reducer) {\n      return produce(state, nextState => {\n        reducer(nextState, action, state);\n      });\n    }\n\n    return unchanged(state);\n  };\n}\n","import moment from 'moment';\nimport _ from 'lodash';\n\nexport function getWorkloadData(jobs, dateRange) {\n  const isSingleDay =\n    moment(dateRange.currentDate).format('MMM D YY') ===\n    moment(dateRange.endDate).format('MMM D YY');\n\n  if (jobs.length === 0) return [];\n\n  const jobsWithFormattedInvokedDate = _.orderBy(jobs, ['date_invoke'], ['asc']).map(job => ({\n    ...job,\n    date_invoke: isSingleDay\n      ? `${moment(job.date_invoke).format('H')}:00`\n      : moment(job.date_invoke).format('MMM D YY')\n  }));\n  const groupJobsByDate = _.groupBy(jobsWithFormattedInvokedDate, 'date_invoke');\n  const data = [];\n\n  // if no process was executed during selected interval, simply return an empty array\n  if (Object.keys(groupJobsByDate).length === 0) {\n    return [];\n  }\n\n  Object.keys(groupJobsByDate).forEach(date => {\n    const item = { name: date, SUCCEEDED: 0, FAILED: 0, ABORTED: 0, total: 0 };\n    groupJobsByDate[date].forEach(el => {\n      item[el.status]++;\n      if (el.status === 'SUCCEEDED' || el.status === 'FAILED' || el.status === 'ABORTED') {\n        item.total++;\n      }\n    });\n\n    data.push(item);\n  });\n\n  // display all days between the first one that run a process and the last one\n  // or all hours from 0->23\n  const intervalArray = [];\n  const daylist = isSingleDay ? getHoursArray(dateRange) : getDaysArray(dateRange);\n  const totalDays = daylist.reduce((o, key) => ({ ...o, [key]: '' }), {});\n\n  // update the total days from the interval array with the days that have some processes executed\n  data.forEach(day => {\n    totalDays[day.name] = day;\n  });\n\n  Object.keys(totalDays).forEach(date => {\n    // for the days in the interval that have no executed process, add an empty entry\n    if (typeof totalDays[date] === 'string') {\n      totalDays[date] = {\n        name: date,\n        SUCCEEDED: 0,\n        FAILED: 0,\n        ABORTED: 0,\n        total: 0\n      };\n    }\n    intervalArray.push(totalDays[date]);\n  });\n\n  return intervalArray;\n}\n/**\n * Creates an array for the selected interval of days\n */\nfunction getDaysArray(dateRange) {\n  let { currentDate } = dateRange;\n  const { endDate } = dateRange;\n  const dateArray = [];\n\n  while (currentDate <= endDate) {\n    dateArray.push(moment(currentDate).format('MMM D YY'));\n    currentDate = moment(currentDate).add(1, 'days');\n  }\n\n  return dateArray;\n}\n\n/**\n *\n * Creates an array for all the hours in a day 0 -> 23\n */\nfunction getHoursArray() {\n  const dateArray = [];\n\n  for (let i = 0; i < 24; i++) {\n    dateArray.push(`${i}:00`);\n  }\n  return dateArray;\n}\n","import { CheckAuthorizationEffect } from './check-authorization/check-authorization.effect';\nimport { LoginEffect } from './login/login.effect';\nimport { LogoutEffect } from './logout/logout.effect';\nimport { BeHealthEffect, BeLicenceEffect, BeVersionEffect } from './be-version/be-version.effect';\n\nexport const sessionEffects = [\n  CheckAuthorizationEffect,\n  LoginEffect,\n  LogoutEffect,\n  BeVersionEffect,\n  BeLicenceEffect,\n  BeHealthEffect,\n];\n","import { emptyFunc } from 'shared/lib';\n\nexport const tryAsync = async (action, onError = emptyFunc) => {\n  try {\n    await action();\n  } catch (e) {\n    onError(e);\n  }\n};\n","import Cookie from 'js-cookie';\nimport axios from 'axios';\n\nimport { CONSTANTS } from 'config';\nimport { createUrl } from 'shared/lib';\n\nclass RestClientClass {\n  constructor() {\n    this.authentications = {\n      basicAuth: {\n        name: 'Authorization',\n        accessToken: '',\n      },\n    };\n\n    this.baseUrl = CONSTANTS.BASE.HOST;\n\n    if (CONSTANTS.BASE.VERSION) {\n      this.baseUrl = `${CONSTANTS.BASE.HOST}/${CONSTANTS.BASE.VERSION}`;\n    }\n\n    this.client = axios.create({\n      timeout: CONSTANTS.BASE.TIMEOUT,\n      baseURL: this.baseUrl,\n      // withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.get = this.get.bind(this);\n    this.delete = this.delete.bind(this);\n    this.head = this.head.bind(this);\n    this.post = this.post.bind(this);\n    this.put = this.put.bind(this);\n    this.patch = this.patch.bind(this);\n  }\n\n  setBasicAuth() {\n    this.authentications.basicAuth.accessToken = `Basic ${Cookie.get('Authorization')}`;\n  }\n\n  removeBasicAuth() {\n    this.authentications.basicAuth.accessToken = Cookie.remove('Authorization');\n  }\n\n  getRequestConfig() {\n    return {\n      headers: {\n        [this.authentications.basicAuth.name]: this.authentications.basicAuth.accessToken,\n      },\n    };\n  }\n\n  get(path, query) {\n    const url = createUrl(path, query);\n    return this.client.get(url, this.getRequestConfig());\n  }\n\n  delete(path, query) {\n    const url = createUrl(path, query);\n    return this.client.delete(url, this.getRequestConfig());\n  }\n\n  head(path, query) {\n    const url = createUrl(path, query);\n    return this.client.head(url, this.getRequestConfig());\n  }\n\n  post(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.post(url, body, this.getRequestConfig());\n  }\n\n  put(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.put(url, body, this.getRequestConfig());\n  }\n\n  patch(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.patch(url, body, this.getRequestConfig());\n  }\n}\n\nexport const RestClient = new RestClientClass();\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\n\nimport { actionStates } from 'shared/lib';\nimport { loginSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nimport { Form } from './components';\n\nexport class LoginPage extends React.PureComponent {\n  componentDidMount() {\n    Cookie.remove('Authorization');\n  }\n\n  componentDidUpdate() {\n    if (this.props.status === actionStates.SUCCESS) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.login.title\"\n        isLoading={this.props.status === actionStates.LOADING}\n      >\n        <Form\n          isLoading={this.props.status === actionStates.LOADING}\n          errors={this.props.errors}\n          submit={this.props.login}\n          resetErrors={this.props.resetErrors}\n        />\n      </Container>\n    );\n  }\n\n  static path = '/login';\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  errors: PropTypes.object.isRequired,\n  status: PropTypes.oneOf([actionStates.LOADING, actionStates.SUCCESS, actionStates.FAIL, '']).isRequired,\n  login: PropTypes.func.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  errors: loginSelector(state).get('errors'),\n  status: loginSelector(state).get('status'),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (data) => dispatch(actions.login.dispatchLoading(data)),\n  resetErrors: () => dispatch(actions.login.dispatchFail([])),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport LoginGraphic from '../../../../assets/images/login_graphic.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_blue.svg';\nimport MasLogo from '../../../../assets/images/mas_logo_blue.svg';\n\nimport './container.local.scss';\n\nexport class ContainerComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={`${className} flex`}>\n        <div className={`${className}__wrapper`}>\n          <div className=\"header\">\n            <div className=\"mas-logo-container\">\n              <img className=\"img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n            </div>\n            <Typography className={`${className}__title`} variant=\"h3\" component=\"h2\">\n              <FormattedMessage id={this.props.title} />\n            </Typography>\n            {!!this.props.description && (\n              <div className={`${className}__description`}>\n                {this.props.description}\n              </div>\n            )}\n          </div>\n          {this.props.children}\n        </div>\n        <div className={`${className}__graphics`}>\n          <div className=\"logo-container\">\n            <img className=\"img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          </div>\n          <div className=\"graphic-container\">\n            <img className=\"img-responsive\" src={LoginGraphic} alt=\"Login graphic\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  description: PropTypes.string,\n  className: PropTypes.string,\n};\n\nContainerComponent.defaultProps = {\n  className: 'container',\n  description: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { RestErrors } from 'shared/components';\n\nimport './form.local.scss';\n\nexport class FormComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  render() {\n    const { className } = this.props;\n    const restErrors = this.getRestErrors();\n\n    return (\n      <div className={className}>\n        <form onSubmit={this.submitHandler} noValidate autoComplete=\"off\">\n          <div className=\"flex direction-column\">\n            <TextField\n              autoFocus\n              className={`${className}__field`}\n              helperText={this.getError('username')}\n              onChange={this.valueChangeHandler('username')}\n              variant=\"outlined\"\n              label={<FormattedMessage id=\"general.form.username\" />}\n              inputProps={{\n                className: 'qa-login-username',\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n              InputLabelProps={{\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n            />\n\n            <FormControl className={`${className}__field`} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={this.state.showPassword ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.valueChangeHandler('password')}\n                inputProps={{\n                  className: 'qa-login-password',\n                  style: { fontSize: '14px', fontFamily: 'Lato' }\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <div className=\"password-icon\">\n                      <IconButton\n                        className=\"qa-login-toggle-password-visibility\"\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.setShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                        edge=\"end\"\n                        color=\"inherit\"\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </div>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          {restErrors.size > 0 && (\n            <div className={`${className}__errors`}>\n              <RestErrors errors={restErrors} />\n            </div>\n          )}\n          <div className={`${className}__actions flex`}>\n            <Button\n              className=\"qa-login-btn\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                this.props.isLoading || this.state.username === '' || this.state.password === ''\n              }\n            >\n              <FormattedMessage id=\"session.login.button\" />\n            </Button>\n            {/* <div className=\"forgot-password qa-forgot-password\">\n              <FormattedMessage id=\"session.login.forgot-password\" />\n            </div> */}\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  setShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  getError(field) {\n    const error = this.props.errors.find(item => item.get('path') === `.${field}`);\n    if (!error) {\n      return '';\n    }\n\n    return error.get('message') || 'This field is invalid';\n  }\n\n  getRestErrors() {\n    return this.props.errors.filter(\n      item => item.get('path') !== '.username' && item.get('path') !== '.password'\n    );\n  }\n\n  resetErrors() {\n    if (this.props.errors.size) {\n      this.props.resetErrors();\n    }\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    this.props.submit({\n      username: this.state.username,\n      password: this.state.password\n    });\n  }\n\n  valueChangeHandler(name) {\n    return event => {\n      this.resetErrors();\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n}\n\nFormComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nFormComponent.defaultProps = {\n  className: 'form'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { slugify } from 'shared/lib';\n\nimport './rest-errors.local.scss';\n\nexport class RestErrorsComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        {this.props.errors.map((error) => (\n          <div key={slugify(error.get('message'))}>\n            {error.get('message')}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRestErrorsComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nRestErrorsComponent.defaultProps = {\n  className: 'rest-errors',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport './job-item.local.scss';\n\nexport class JobItemComponent extends React.PureComponent {\n  render() {\n    const { extended } = this.props;\n    if (extended) {\n      return (\n        <div className={`${this.props.className} ${this.jobStatus()}`}>\n          <div className=\"status-icon\">{this.props.statusChild}</div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {this.props.job.get('process')}</p>\n                    {this.props.job.get('schedule') && (\n                      <p>Schedule: {this.props.job.get('schedule')}</p>\n                    )}\n                  </>\n                }\n              >\n                <div className=\"name\">{this.formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {this.props.job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"date\">\n                  {moment(this.props.job.get('date_invoke'))\n                    .local()\n                    .format('MMM DD YYYY')}\n                </div>\n              </LimitlessTooltip>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${this.props.className} ${this.jobStatus()}`}>\n        <Link to={`/jobs/job?invocation=${this.props.job.get('uuid')}`}>\n          <div className=\"first-row\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {this.props.job.get('process')}</p>\n                  {this.props.job.get('schedule') && (\n                    <p>Schedule: {this.props.job.get('schedule')}</p>\n                  )}\n                </>\n              }\n            >\n              <div className=\"name\">{this.formatName()}</div>\n            </LimitlessTooltip>\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"time\">\n                {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n          <div className=\"second-row\">\n            {this.props.job.get('user_owner') && (\n              <div className=\"run-by\">\n                <AccountCircleOutlinedIcon />\n                {this.props.job.get('user_owner')}\n              </div>\n            )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('name') && (\n                <div className=\"dbms\">\n                  <SvgIcon>\n                    <Icon path={mdiHexagonMultipleOutline} />\n                  </SvgIcon>\n                  {this.props.job\n                    .get('connections')\n                    .get('dbms')\n                    .get('name')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('shell') &&\n              this.props.job\n                .get('connections')\n                .get('shell')\n                .get('host_address') && (\n                <div className=\"server\">\n                  <StorageIcon />\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('shell') &&\n                    this.props.job\n                      .get('connections')\n                      .get('shell')\n                      .get('host_address')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special')\n                .get('database') && (\n                <div className=\"database\">\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('dbms') &&\n                    this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('protocol_special')\n                      .get('database')}\n                </div>\n              )}\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"date\">\n                {moment(this.props.job.get('date_invoke')).format('MMM DD YYYY')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n\n  jobStatus = () => {\n    switch (this.props.job.get('status')) {\n      case 'EXECUTING':\n        return 'executing';\n      case 'SUCCEEDED':\n        return 'succeeded';\n      case 'SCHEDULED':\n        return 'scheduled';\n      case 'DELAYED':\n        return 'delayed';\n      case 'ABORTED':\n        return 'aborted';\n      case 'FAILED':\n        return 'failed';\n      case 'KILLED':\n        return 'killed';\n      default:\n        return '';\n    }\n  };\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItemComponent.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired,\n  extended: PropTypes.bool,\n  statusChild: PropTypes.element\n};\n\nJobItemComponent.defaultProps = {\n  className: 'job-item',\n  extended: false,\n  statusChild: null\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Center } from 'shared/components';\n\nimport { CustomTooltip, CustomAxisTick } from './components';\n\nimport './workload-graph.local.scss';\n\nexport class WorkloadGraphComponent extends React.PureComponent {\n  render() {\n    if (this.props.data.length === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ResponsiveContainer>\n          <AreaChart\n            data={this.props.data}\n            margin={{ top: 16, right: 5, left: 5, bottom: 16 }}\n            onClick={this.setSingleDay}\n          >\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0.16} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"chartStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0} />\n                <stop offset=\"5%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"95%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickSize={false}\n              axisLine={false}\n              interval=\"preserveStartEnd\"\n              tick={<CustomAxisTick />}\n            />\n            <Tooltip\n              content={<CustomTooltip isSingleDay={this.props.isSingleDay} />}\n              offset={0}\n              cursor={false}\n              viewBox={{ width: 750, height: 144 }}\n              position={{ x: 'auto', y: 0 }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"total\"\n              stroke=\"url(#chartStroke)\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#gradient)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n\n  setSingleDay = e => {\n    if (!this.props.isSingleDay && e && this.props.setSingleDay) {\n      this.props.setSingleDay({\n        startDate: moment(e.activeLabel),\n        endDate: moment(e.activeLabel)\n      });\n    }\n  };\n}\n\nexport default WorkloadGraphComponent;\n\nWorkloadGraphComponent.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nWorkloadGraphComponent.defaultProps = {\n  className: 'workload-graph'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport './custom-tooltip.local.scss';\n\nexport class CustomTooltipComponent extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.label !== this.props.label) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    if (!this.props.active || !this.props.payload || !this.props.payload.length) return null;\n\n    const label = this.props.isSingleDay\n      ? this.props.payload[0].payload.name\n      : moment(this.props.payload[0].payload.name).format('MMM DD YYYY');\n\n    return (\n      <div className={this.props.className} position={{ x: '100%', y: '-100%' }}>\n        {this.props.payload && (\n          <>\n            <div className=\"date\">{label}</div>\n            <div className=\"info-container\">\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.succeeded\" />\n                </div>\n                <div className=\"value success\">{this.props.payload[0].payload.SUCCEEDED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.aborted\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.ABORTED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.failed\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.FAILED}</div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomTooltipComponent;\n\nCustomTooltipComponent.propTypes = {\n  className: PropTypes.string,\n  payload: PropTypes.array,\n  active: PropTypes.bool,\n  label: PropTypes.string\n};\n\nCustomTooltipComponent.defaultProps = {\n  className: 'custom-tooltip',\n  payload: [],\n  active: false,\n  label: ''\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './custom-axis-tick.local.scss';\n\nexport class CustomAxisTickComponent extends React.PureComponent {\n  render() {\n    return (\n      <g transform={`translate(${this.props.x},${this.props.y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill=\"rgba(12, 50, 110, 0.38)\">{this.props.payload.value}</text>\n      </g>\n    );\n  }\n}\n\nexport default CustomAxisTickComponent;\n\nCustomAxisTickComponent.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  payload: PropTypes.object,\n};\n\nCustomAxisTickComponent.defaultProps = {\n  x: null,\n  y: null,\n  payload: {},\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './circle-img.local.scss';\n\nexport class CircleImgComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.image}\n      </div>\n    );\n  }\n}\n\nexport default CircleImgComponent;\n\nCircleImgComponent.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nCircleImgComponent.defaultProps = {\n  className: 'circle-img',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './number-label.local.scss';\n\nexport class NumberLabelComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n\nexport default NumberLabelComponent;\n\nNumberLabelComponent.propTypes = {\n  className: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nNumberLabelComponent.defaultProps = {\n  className: 'number-label',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './string-label.local.scss';\n\nexport class StringLabelComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.text}</div>;\n  }\n}\n\nexport default StringLabelComponent;\n\nStringLabelComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.node.isRequired\n};\n\nStringLabelComponent.defaultProps = {\n  className: 'string-label'\n};\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport './search-input.local.scss';\n\nexport class SearchInputComponent extends PureComponent {\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <>\n        <div className=\"search-icon\">\n          <SearchIcon />\n        </div>\n        <InputBase\n          className=\"search-input-container\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={onChange}\n          inputProps={{\n            className: 'search qa-search',\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchInputComponent;\n\nSearchInputComponent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport classnames from 'classnames';\n\nimport './dropdown.local.scss';\n\nexport class DropdownComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDropdownOpen: false\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isDropdownOpen) {\n      this.setState({ isDropdownOpen: true });\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    let parentWidth;\n\n    if (this.anchorRef && this.anchorRef.current && this.anchorRef.current.offsetWidth) {\n      parentWidth = this.anchorRef.current.offsetWidth;\n    }\n    return (\n      <>\n        {this.props.target(\n          { isOpen: this.state.isDropdownOpen, ref: this.anchorRef },\n          { toggle: this.handleToggle }\n        )}\n        {items && (\n          <Popover\n            open={this.state.isDropdownOpen}\n            anchorEl={this.anchorRef.current}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList className=\"dropdown-menu-container\" style={{ width: parentWidth }}>\n                {items.map((item, index) => (\n                  <MenuItem\n                    className={classnames('', { disabled: item.disabled })}\n                    key={index}\n                    onClick={() => this.onClickCallback(index)}\n                  >\n                    {item.icon && <ListItemIcon className=\"icon\">{item.icon}</ListItemIcon>}\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Popover>\n        )}\n      </>\n    );\n  }\n\n  handleToggle = () => {\n    if (this.props.disabled) {\n      return false;\n    }\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen\n    }));\n  };\n\n  setCloseDropdown = event => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ isDropdownOpen: false });\n  };\n\n  onClickCallback = itemIndex => {\n    this.props.onSelect(itemIndex, this.props.items[itemIndex]);\n    this.setState({ isDropdownOpen: false });\n  };\n}\n\nexport default DropdownComponent;\n\nDropdownComponent.propTypes = {\n  onSelect: PropTypes.func,\n  target: PropTypes.func,\n  items: PropTypes.array,\n  isDropdownOpen: PropTypes.bool\n};\n\nDropdownComponent.defaultProps = {\n  onSelect: () => {},\n  items: [],\n  target: (meta, actions) => (\n    <Button ref={meta.ref} onClick={actions.toggle}>\n      {meta.isOpen ? 'Close' : 'Dropdown'}\n    </Button>\n  ),\n  isDropdownOpen: false\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './small-input.local.scss';\n\nexport const SmallInputComponent = forwardRef(({ value, icon, disabled, ...others }, ref) => (\n  <div\n    ref={ref}\n    className={classnames('small-input', { disabled, active: value.length })}\n  >\n    { icon && <div className=\"icon\">{icon}</div> }\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      {...others}\n    />\n  </div>\n));\n\nSmallInputComponent.propTypes = {\n  icon: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nSmallInputComponent.defaultProps = {\n  icon: null,\n  value: '',\n  disabled: false,\n};\n\nexport default SmallInputComponent;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SingleDatePicker } from 'react-dates';\nimport { mdiCalendarBlank, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './single-date-picker.local.scss';\n\nexport class SingleDatePickerComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: true\n    };\n  }\n\n  render() {\n    const { date, onDateChange, ...others } = this.props;\n\n    return (\n      <div className=\"date-picker-container\">\n        <SingleDatePicker\n          date={date}\n          onDateChange={onDateChange}\n          focused={this.state.focused}\n          onFocusChange={({ focused }) => this.setState({ focused })}\n          id=\"date-picker\"\n          numberOfMonths={1}\n          customInputIcon={\n            <SvgIcon>\n              <Icon path={mdiCalendarBlank} />\n            </SvgIcon>\n          }\n          placeholder=\"Select Date\"\n          isOutsideRange={() => false}\n          readOnly\n          hideKeyboardShortcutsPanel\n          displayFormat=\"MMM DD YYYY\"\n          /** TODO: @Razvan, look at this please. */\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          {...others}\n        />\n      </div>\n    );\n  }\n}\n\nSingleDatePickerComponent.propTypes = {\n  date: PropTypes.object,\n  onDateChange: PropTypes.func.isRequired\n};\n\nSingleDatePickerComponent.defaultProps = {\n  date: null\n};\n\nexport default SingleDatePickerComponent;\n","import React from 'react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArrowLeftRight, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\n\nimport DateRangePickerWrapper from './range-date-range-picker.container';\nimport 'react-dates/initialize'; // necessary for latest version\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport './range-date-picker.local.scss';\n\nexport class RangeDatePicker extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"date-picker-container\">\n        <DateRangePickerWrapper\n          anchorDirection=\"left\"\n          autoFocus={false}\n          block={false}\n          readOnly\n          customArrowIcon={\n            <SvgIcon>\n              <Icon path={mdiArrowLeftRight} />\n            </SvgIcon>\n          }\n          customCloseIcon={null}\n          customInputIcon={null}\n          disabled={false}\n          displayFormat=\"MMM D YYYY\"\n          enableOutsideDays={false}\n          endDateId=\"endDate\"\n          endDatePlaceholderText=\"End Date\"\n          horizontalMargin={0}\n          initialEndDate={null}\n          initialStartDate={moment()}\n          initialVisibleMonth={null}\n          isDayBlocked={() => false}\n          isDayHighlighted={() => false}\n          isOutsideRange={() => false}\n          isRTL={false}\n          keepOpenOnDateSelect={false}\n          minimumNights={0}\n          monthFormat=\"MMMM YYYY\"\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navPosition=\"navPositionTop\"\n          numberOfMonths={2}\n          onClose={() => false}\n          onNextMonthClick={() => false}\n          onPrevMonthClick={() => false}\n          orientation=\"horizontal\"\n          phrases={{\n            calendarLabel: 'Calendar',\n            chooseAvailableEndDate: function noRefCheck() {},\n            chooseAvailableStartDate: function noRefCheck() {},\n            clearDates: 'Clear Dates',\n            closeDatePicker: 'Close',\n            dateIsSelected: function noRefCheck() {},\n            dateIsSelectedAsEndDate: function noRefCheck() {},\n            dateIsSelectedAsStartDate: function noRefCheck() {},\n            dateIsUnavailable: function noRefCheck() {},\n            enterKey: 'Enter key',\n            escape: 'Escape key',\n            focusStartDate: 'Interact with the calendar and add the check-in date for your trip.',\n            hideKeyboardShortcutsPanel: 'Close the shortcuts panel.',\n            homeEnd: 'Home and end keys',\n            jumpToNextMonth: 'Move forward to switch to the next month.',\n            jumpToPrevMonth: 'Move backward to switch to the previous month.',\n            keyboardBackwardNavigationInstructions:\n              'Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardForwardNavigationInstructions:\n              'Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardShortcuts: 'Keyboard Shortcuts',\n            leftArrowRightArrow: 'Right and left arrow keys',\n            moveFocusByOneDay: 'Move backward (left) and forward (right) by one day.',\n            moveFocusByOneMonth: 'Switch months.',\n            moveFocusByOneWeek: 'Move backward (up) and forward (down) by one week.',\n            moveFocustoStartAndEndOfWeek: 'Go to the first or last day of a week.',\n            openThisPanel: 'Open this panel.',\n            pageUpPageDown: 'page up and page down keys',\n            questionMark: 'Question mark',\n            returnFocusToInput: 'Return to the date input field.',\n            roleDescription: 'datepicker',\n            selectFocusedDate: 'Select the date in focus.',\n            showKeyboardShortcutsPanel: 'Open the keyboard shortcuts panel.',\n            upArrowDownArrow: 'up and down arrow keys'\n          }}\n          regular={false}\n          renderCalendarDay={undefined}\n          renderDayContents={text => this.renderDayContents(text)}\n          renderMonthText={null}\n          reopenPickerOnClearDates={false}\n          required={false}\n          screenReaderInputMessage=\"\"\n          showClearDates={false}\n          showDefaultInputIcon={false}\n          small={false}\n          startDateId=\"startDate\"\n          startDatePlaceholderText=\"Start Date\"\n          stateDateWrapper={() => false}\n          withFullScreenPortal={false}\n          withPortal={false}\n          onDatesChange={this.props.onDatesChange}\n          endDate={this.props.endDate}\n          startDate={this.props.startDate}\n          focusedInput={null}\n          hideKeyboardShortcutsPanel\n        />\n      </div>\n    );\n  }\n\n  renderDayContents = text => (\n    <div className=\"wrapper-custom-date\">\n      <div className=\"custom-date\">{text.date()}</div>\n    </div>\n  );\n}\n\nRangeDatePicker.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onDatesChange: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { array, object, oneOfType } from 'prop-types';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline,\n  mdiCancel,\n  mdiHexagonMultipleOutline,\n  mdiDatabase\n} from '@mdi/js';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { LightTooltip, LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Center } from 'shared/components';\n\nimport './JobResults.local.scss';\n\nexport class JobResults extends React.PureComponent {\n  render() {\n    const { jobs, fromSearch } = this.props;\n\n    if (jobs && jobs.size === 0) {\n      if (fromSearch) {\n        return <></>;\n      }\n      return <Center>Job list is empty</Center>;\n    }\n    return <>{this.renderJobsResults(jobs)}</>;\n  }\n\n  renderJobsResults = jobs =>\n    jobs.map((job, index) => (\n      <Link key={index} to={`/jobs/job?invocation=${job.get('uuid')}`}>\n        <div className=\"result-job-row\">\n          <LightTooltip placement=\"bottom-start\" title={job.get('status').toUpperCase()}>\n            <div className=\"job-status-container\">{this.jobStatus(job.get('status'))}</div>\n          </LightTooltip>\n          <div className=\"job-content\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {job.get('process')}</p>\n                  {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                </>\n              }\n            >\n              <div className=\"first-row\">{this.formatName(job.get('process'))}</div>\n            </LimitlessTooltip>\n\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  <ScheduleIcon />\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    ));\n\n  jobStatus = status => {\n    switch (status) {\n      case 'EXECUTING':\n        return (\n          <div className=\"job-status executing\">\n            <SvgIcon>\n              <Icon path={mdiProgressClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SUCCEEDED':\n        return (\n          <div className=\"job-status succeeded\">\n            <SvgIcon>\n              <Icon path={mdiCheckCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SCHEDULED':\n        return (\n          <div className=\"job-status scheduled\">\n            <SvgIcon>\n              <Icon path={mdiCalendarArrowRight} />\n            </SvgIcon>\n          </div>\n        );\n      case 'ABORTED':\n        return (\n          <div className=\"job-status aborted\">\n            <SvgIcon>\n              <Icon path={mdiStopCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'DELAYED':\n        return (\n          <div className=\"job-status delayed\">\n            <SvgIcon>\n              <Icon path={mdiTimelineClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'FAILED':\n        return (\n          <div className=\"job-status failed\">\n            <SvgIcon>\n              <Icon path={mdiAlertRhombusOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'KILLED':\n        return (\n          <div className=\"job-status killed\">\n            <SvgIcon>\n              <Icon path={mdiCancel} />\n            </SvgIcon>\n          </div>\n        );\n      default:\n        return '';\n    }\n  };\n\n  formatName = jobName => {\n    const formattedName = [];\n    const name = jobName.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    return formattedName;\n  };\n}\n\nJobResults.propTypes = {\n  jobs: oneOfType([array, object])\n};\n\nexport default JobResults;\n","import React, { createContext, useContext } from 'react';\nimport { any, node } from 'prop-types';\n\nconst Context = createContext();\n\nexport function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nSwitch.propTypes = {\n  value: any,\n  children: node\n};\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nCase.propTypes = {\n  value: any,\n  children: node\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUITable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport './Table.local.scss';\n\nexport const Table = ({ columns, children, sortBehavior, changeSort, className }) => {\n  return (\n    <MUITable stickyHeader className={className}>\n      <TableHead className=\"sticky-head\">\n        <TableRow>\n          {columns.map(HeaderCell(sortBehavior, changeSort))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {children}\n      </TableBody>\n    </MUITable>\n  );\n};\n\nconst HeaderCell = (sortBehavior, changeSort) => (column, index) => (\n  <TableCell\n    key={`header_column_${index}`}\n    align={column.align}\n    padding={column.padding}\n    sortDirection={sortBehavior ? sortBehavior.order : false}\n    variant={column.variant}\n  >\n    {column.sortKey && (\n      <TableSortLabel\n        active={sortBehavior.sortKey === column.sortKey}\n        direction={sortBehavior.order}\n        onClick={changeSort(column.sortKey, sortBehavior.order === 'asc' ? 'desc' : 'asc')}\n      >\n        {column.component ? column.component() : column.label}\n      </TableSortLabel>\n    )}\n    {!column.sortKey && (\n      column.component ? column.component() : column.label\n    )}\n  </TableCell>\n);\n\nTable.Row = TableRow;\nTable.Cell = TableCell;\n\nTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  sortBehavior: PropTypes.shape({\n    order: PropTypes.string,\n    sortKey: PropTypes.string\n  }),\n  changeSort: PropTypes.func\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nexport class LogoutPage extends React.PureComponent {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.logout.title\"\n        isLoading\n      >\n        <div />\n      </Container>\n    );\n  }\n\n  static path = '/logout';\n}\n\nLogoutPage.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: (data) => dispatch(actions.logout.dispatchLoading(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartTimelineVariant } from '@mdi/js';\n\nimport {\n  Center,\n  CircleImg,\n  JobItem,\n  NumberLabel,\n  RangeDatePicker,\n  StringLabel,\n  WorkloadGraph\n} from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Main, Paper } from 'shared/components/layout';\nimport { filterStatusSelector } from './store/state';\nimport { Header } from 'core/components/Header';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { fetchEntity } from 'entities/actions';\nimport { Search, StatusContainer } from './containers';\n\nimport './root.module.scss';\nimport { ConnectedServersList } from './containers/servers-list/ServersList';\n\nexport class RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n\n    this.onChangeDatesHandler = this.onChangeDatesHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n\n    if (\n      this.props.entitiesStatus.process === 'not-fetched' ||\n      this.props.entitiesStatus.process === 'failed'\n    ) {\n      this.props.request('process');\n    }\n  }\n\n  render() {\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Dashboard\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const averageJobs = Math.round(parseInt(this.props.jobs.get('total_count'), 10) / (days + 1));\n\n    return (\n      <div className={this.props.className}>\n        <Header>\n          <h1 className=\"header-title\">Dashboard</h1>\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Search />\n        <StatusContainer />\n        <div className=\"summary-container\">\n          <div className=\"jobs-container\">\n            {this.props.jobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <>\n                <div className=\"jobs-content\" id=\"jobs-content\">\n                  {this.filteredJobs(this.props.storeFilterStatus)}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"workload-container\">\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Generating Workload Chart</Loader>\n                </Center>\n              ) : (\n                <>\n                  <div className=\"workload-header\">\n                    <CircleImg\n                      image={\n                        <SvgIcon>\n                          <Icon path={mdiChartTimelineVariant} />\n                        </SvgIcon>\n                      }\n                    />\n                    <NumberLabel number={averageJobs} />\n                    <StringLabel\n                      text={\n                        <>\n                          <FormattedMessage id=\"dashboard.jobs\" />/\n                          <FormattedMessage id=\"dashboard.day\" />\n                        </>\n                      }\n                    />\n                  </div>\n                  <div className=\"workload-content\">\n                    <WorkloadGraph\n                      data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                        currentDate: moment.unix(\n                          this.props.globalFilters.get('startDate'),\n                          'YYYY-MM-DD'\n                        ),\n                        endDate: moment.unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                      })}\n                      isSingleDay={\n                        moment\n                          .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD') ===\n                        moment\n                          .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD')\n                      }\n                      setSingleDay={this.onChangeDatesHandler}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"servers-usage-container\">\n              <ConnectedServersList />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  filteredJobs = status => {\n    const { jobs } = this.props;\n\n    if (status === 'ALL') {\n      if (jobs.get('content').size === 0) {\n        return <Center>There are no jobs available with the selected filters</Center>;\n      }\n\n      return (\n        <>\n          {jobs\n            .get('content')\n            .slice(0, 20)\n            .map((item, index) => (\n              <JobItem key={index} job={item} />\n            ))}\n          {jobs.get('total_count') > 20 && (\n            <Button className=\"full-log center qa-view-full-log\">\n              <Link to=\"/jobs\">\n                <FormattedMessage id=\"dashboard.view-full-log\" />\n              </Link>\n            </Button>\n          )}\n        </>\n      );\n    }\n\n    const totalFilteredJobs = jobs.get('content').filter(job => job.get('status') === status).size;\n\n    if (totalFilteredJobs === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <>\n        {jobs\n          .get('content')\n          .filter(job => job.get('status') === status)\n          .slice(0, 20)\n          .map((item, index) => (\n            <JobItem key={index} job={item} />\n          ))}\n        {totalFilteredJobs > 20 && (\n          <Button className=\"full-log center qa-view-full-log\">\n            <Link to={`/jobs?status=${status}`}>\n              <FormattedMessage id=\"dashboard.view-full-log\" />\n            </Link>\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  onChangeDatesHandler(range) {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n\n      const start = moment(range.startDate.format('YYYY-MM-DD'));\n      const end = moment(range.endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n      this.props.getJobs({\n        date_invoke: moment(range.startDate).format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      });\n    }\n  }\n}\n\nRootModule.propTypes = {\n  className: PropTypes.string,\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nRootModule.defaultProps = {\n  className: 'dashboard'\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  storeFilterStatus: filterStatusSelector(state),\n  entitiesStatus: state.entities.fetch_status\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  request: data => dispatch(fetchEntity(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { node } from 'prop-types';\nimport classnames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.local.scss';\n\nexport const Loader = ({ children, inline, left, ...props }) => {\n  return (\n    <div className={classnames('loader', { inline, left })}>\n      <CircularProgress {...props} />\n      {children && <div className=\"loader-text\">{children}</div>}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  children: node\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './ParameterLoader.local.scss';\n\nexport const ParameterLoader = ({ children }) => {\n  return (\n    <div className=\"loader\">\n      {children && <div className=\"loader-text\">{children}</div>}\n      <div className=\"loader-slot\">\n        <LinearProgress variant=\"indeterminate\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { bool, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Overflow } from '../Overflow/Overflow';\n\nimport './Paper.local.scss';\n\nexport const Paper = ({ padded, flex, children, ...rest }) => (\n  <div className={classnames('paper', { padded, [flex]: flex })} {...rest}>\n    {children}\n  </div>\n);\n\nPaper.propTypes = {\n  children: node,\n  padded: bool,\n  flex: oneOf(['column', 'row'])\n};\n\nPaper.defaultProps = {\n  padded: true,\n  flex: 'column'\n};\n\nexport const PaperHeader = ({ children, ...rest }) => (\n  <header className=\"paper-header\" {...rest}>\n    {children}\n  </header>\n);\n\nPaperHeader.propTypes = {\n  children: node\n};\n\nexport const PaperContent = ({ children, scrollable }) => {\n  if (scrollable) {\n    return (\n      <Overflow className=\"paper-content\" variant=\"white\">\n        {children}\n      </Overflow>\n    );\n  }\n\n  return <main className=\"paper-content\">{children}</main>;\n};\n\nPaperContent.propTypes = {\n  scrollable: bool,\n  children: node\n};\n\nPaperContent.defaultProps = {\n  scrollable: true\n};\n\nexport const PaperFooter = ({ children }) => <footer className=\"paper-footer\">{children}</footer>;\n\nPaperFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nPaperFooter.Left = LeftSideSlot;\nPaperFooter.Right = RightSideSlot;\n\nexport const PaperTitle = ({ children, ...rest }) => (\n  <h2 className=\"paper-title\" {...rest}>\n    {children}\n  </h2>\n);\n\nPaperTitle.propTypes = {\n  children: node\n};\n\nPaper.Header = PaperHeader;\nPaper.Title = PaperTitle;\nPaper.Content = PaperContent;\nPaper.Footer = PaperFooter;\n","import React from 'react';\nimport { node, bool } from 'prop-types';\nimport classnames from 'classnames';\nimport './Main.local.scss';\n\nexport const Main = ({ flex, mdPage, children }) => (\n  <main\n    className={classnames('page-main', { flex, 'md-page': mdPage })}\n  >\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: node,\n  flex: bool,\n  mdPage: bool,\n};\n\nMain.defaultProps = {\n  flex: true,\n  mdPage: false\n};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Section.local.scss';\n\nexport const Section = ({ children, full }) => (\n  <section\n    className={classnames('section-block', {\n      full\n    })}\n  >\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  children: node,\n  full: bool\n};\n\nexport const SectionTitle = ({ children, info }) => (\n  <>\n    <h3 className=\"section-title\">{children}</h3>\n    {info && <h4 className=\"section-title-info\">{info}</h4>}\n  </>\n);\n\nSectionTitle.propTypes = {\n  children: node,\n  info: node\n};\n\nexport const SectionHeader = ({ children }) => (\n  <>\n    <header className=\"section-header\">{children}</header>\n  </>\n);\n\nSectionHeader.propTypes = {\n  children: node\n};\n\nexport const SectionInfo = ({ children }) => (\n  <>\n    <h4 className=\"section-title-info\">{children}</h4>\n  </>\n);\n\nSectionInfo.propTypes = {\n  children: node\n};\n\nexport const SectionContent = ({ children }) => (\n  <>\n    <main className=\"section-content\">{children}</main>\n  </>\n);\n\nSection.Header = SectionHeader;\nSection.Content = SectionContent;\nSection.Title = SectionTitle;\nSection.Info = SectionInfo;\n","import React, { useState, useCallback } from 'react';\n\nimport { func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './ScrollableContainer.local.scss';\n\nexport const ScrollableContainer = ({ children, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  return (\n    <div\n      className={classnames('scrollable-container', {\n        scrolled,\n        [variant]: variant\n      })}\n    >\n      {children({\n        className: classnames('scrollable-element', {\n          [variant]: variant\n        }),\n        onWheel\n      })}\n    </div>\n  );\n};\n\nScrollableContainer.propTypes = {\n  children: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nScrollableContainer.defaultProps = {};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport './Column.local.scss';\n\nexport const Column = ({ children, ...rest }) => {\n  return (\n    <div className=\"column\" {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Row.local.scss';\n\nexport const Row = ({ children, compact, ...rest }) => {\n  return (\n    <div className={classnames('row', { compact })} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { jobsSelector } from 'shared/store/state';\nimport { filterStatusSelector } from '../../store/state';\n\nimport { Daemon, JobStatus } from './components';\n\nimport './status.local.scss';\n\nexport class StatusContainer extends React.PureComponent {\n  render() {\n    const { className, jobs } = this.props;\n    return (\n      <Paper className={className}>\n        <Daemon />\n        <div className=\"jobs-status-container\">\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader inline>Loading jobs</Loader>\n            </Center>\n          ) : (\n            this.filterJobs(jobs.toJS().content)\n          )}\n        </div>\n      </Paper>\n    );\n  }\n\n  filterJobs = jobs => {\n    const { active } = this.props;\n    const count = {\n      executing: 0,\n      succeeded: 0,\n      scheduled: 0,\n      aborted: 0,\n      failed: 0\n    };\n    count.executing = jobs.filter(job => job.status === 'EXECUTING')?.length;\n    count.succeeded = jobs.filter(job => job.status === 'SUCCEEDED')?.length;\n    count.scheduled = jobs.filter(job => job.status === 'SCHEDULED')?.length;\n    count.aborted = jobs.filter(job => job.status === 'ABORTED')?.length;\n    count.failed = jobs.filter(job => job.status === 'FAILED')?.length;\n\n    return (\n      <>\n        <JobStatus count={count.executing} status=\"EXECUTING\" active={active} />\n        <JobStatus count={count.succeeded} status=\"SUCCEEDED\" active={active} />\n        <JobStatus count={count.scheduled} status=\"SCHEDULED\" active={active} />\n        <JobStatus count={count.aborted} status=\"ABORTED\" active={active} />\n        <JobStatus count={count.failed} status=\"FAILED\" active={active} />\n      </>\n    );\n  };\n}\n\nStatusContainer.propTypes = {\n  className: PropTypes.string,\n  jobs: PropTypes.object.isRequired\n};\n\nStatusContainer.defaultProps = {\n  className: 'status-container'\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  active: filterStatusSelector(state)\n});\n\nexport default connect(mapStateToProps)(StatusContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { daemonPoller } from '../../../../store/tasks';\nimport { isDaemonRunning } from '../../../../store/selectors';\n\nimport './daemon.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const Daemon = () => {\n  const running = useSelector(isDaemonRunning);\n\n  useEffect(() => {\n    daemonPoller.start();\n\n    return () => {\n      daemonPoller.stop();\n    };\n  }, []);\n\n  return (\n    <div className=\"daemon qa-daemon-status\">\n      {running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.running\" />}>\n          <div className=\"status running\">\n            <PlayCircleOutlineIcon />\n          </div>\n        </LightTooltip>\n      )}\n\n      {!running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.not.running\" />}>\n          <div className=\"status not-running\">\n            <ErrorOutlineIcon className=\"not-running\" />\n          </div>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport { actions } from 'dashboard/store/actions';\nimport { filterStatusSelector } from 'dashboard/store/state';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-status.local.scss';\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return <>{this.renderContent()}</>;\n  }\n\n  filterByStatus = status => {\n    if (this.props.storeStatus === status.toUpperCase()) {\n      this.props.setStatus('ALL');\n    } else {\n      this.props.setStatus(status.toUpperCase());\n    }\n  };\n\n  renderContent() {\n    let icon = null;\n    let status = '';\n    switch (this.props.status) {\n      case 'EXECUTING':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiProgressClock} />\n          </SvgIcon>\n        );\n        status = 'executing';\n        break;\n      case 'SUCCEEDED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCheckCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'succeeded';\n        break;\n      case 'SCHEDULED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCalendarArrowRight} />\n          </SvgIcon>\n        );\n        status = 'scheduled';\n        break;\n      case 'ABORTED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiStopCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'aborted';\n        break;\n      case 'FAILED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiAlertRhombusOutline} />\n          </SvgIcon>\n        );\n        status = 'failed';\n        break;\n      default:\n        // error message\n        break;\n    }\n\n    if (icon) {\n      return (\n        <div\n          className={classnames(`job-status ${status}`, {\n            active: this.props.status === this.props.active\n          })}\n          role=\"presentation\"\n          onClick={() => this.filterByStatus(status)}\n        >\n          <div className=\"header\">\n            <div className=\"icon\">{icon}</div>\n            <div className=\"count\">\n              {this.props.count}\n              {this.props.status === this.props.active && (\n                <LightTooltip placement=\"right\" title=\"Active filter\">\n                  <CheckCircleIcon className=\"active-filter\" />\n                </LightTooltip>\n              )}\n            </div>\n          </div>\n          <div className=\"status\">{this.props.status}</div>\n        </div>\n      );\n    }\n    // error case\n    return null;\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setStatus: PropTypes.func\n};\n\nexport const mapStateToProps = state => ({\n  storeStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setStatus: status => dispatch(actions.setFilterStatus.dispatchEvent(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobStatus);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector } from 'shared/store/state';\n\nimport { FormattedMessage } from 'react-intl';\nimport { debounce } from 'lodash';\nimport { mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport Paper from '@material-ui/core/Paper';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { SearchInput } from 'shared/components';\nimport { SearchResults } from '../../components';\nimport { setFilterSearch, setFilterType } from 'entities/actions';\n\nimport './search-area.local.scss';\n\nexport class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSearchResults: false,\n      searchTerm: ''\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    if (this.state.showSearchResults) {\n      this.getSearchResults(searchedTerm);\n    }\n  }, 500);\n\n  render() {\n    const {\n      className,\n      getSearchedJobs,\n      entitiesStatus,\n      setSearchFilter,\n      setTypeFilter\n    } = this.props;\n    return (\n      <Paper\n        className={`${className} ${this.state.showSearchResults ? 'no-bottom-radius' : ''}\n        `}\n      >\n        <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n\n        {this.state.searchTerm.length > 0 && (\n          <div className=\"clear-search\">\n            <ClearIcon onClick={this.clearSearch} />\n          </div>\n        )}\n        {this.state.showSearchResults && (\n          <div className=\"search-results-container\">\n            <SearchResults\n              category=\"jobs\"\n              totalResults={getSearchedJobs.get('total_count')}\n              content={getSearchedJobs.get('content')}\n              isLoading={getSearchedJobs.get('fetching')}\n              displayedResults={3}\n              filters={{\n                nameFilter: this.state.searchTerm\n              }}\n            />\n            <SearchResults\n              category=\"processes\"\n              totalResults={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).count\n              }\n              content={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).processes\n              }\n              isLoading={entitiesStatus.process === 'fetching'}\n              displayedResults={3}\n              searchedTerm={this.state.searchTerm}\n              setFilterSearch={setSearchFilter}\n              setFilterType={setTypeFilter}\n            />\n            <div className=\"full-results-container qa-full-search-results\">\n              <div className=\"icon-container\">\n                <SearchIcon />\n              </div>\n              <div className=\"content\">\n                <FormattedMessage id=\"dashboard.view-full-search-results\" />\n              </div>\n              <div className=\"open qa-open-full-results\">\n                <SvgIcon>\n                  <Icon path={mdiChevronRight} />\n                </SvgIcon>\n              </div>\n            </div>\n          </div>\n        )}\n      </Paper>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: 3,\n      page: 1,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n  };\n\n  filterProcesses = (processStatus, searchedTerm) => {\n    if (processStatus === 'fetching' || !searchedTerm) {\n      return { processes: [], count: 0 };\n    }\n    if (this.props.storedProcesses && this.props.storedProcesses.length > 0) {\n      const results = this.props.storedProcesses.filter(p => p.name.includes(searchedTerm));\n\n      return { processes: results.slice(0, 3), count: results.length };\n    }\n    return { processes: [], count: 0 };\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length < 3 && this.state.showSearchResults) {\n      this.setState({ showSearchResults: false });\n    } else if (searchedTerm.length === 3) {\n      if (!this.state.showSearchResults) {\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    } else if (searchedTerm.length > 3) {\n      if (!this.state.showSearchResults) {\n        // used for pasted value\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({\n      showSearchResults: false,\n      searchTerm: ''\n    });\n  };\n}\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  searchJobs: PropTypes.func.isRequired,\n  getSearchedJobs: PropTypes.object.isRequired\n};\n\nSearch.defaultProps = {\n  className: 'search-container'\n};\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state),\n  entitiesStatus: state.entities.fetch_status,\n  storedProcesses: state.entities.data?.process?.data?.data?.processes\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data)),\n  setSearchFilter: data => dispatch(setFilterSearch(data)),\n  setTypeFilter: data => dispatch(setFilterType(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed } from '@mdi/js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport { JobResults } from 'shared/components/JobResults';\nimport { createUrl } from 'shared/lib';\n\nimport './search-results.local.scss';\n\nexport class SearchResultsComponent extends React.PureComponent {\n  render() {\n    const {\n      className,\n      category,\n      totalResults,\n      isLoading,\n      displayedResults,\n      content,\n      searchedTerm = '',\n      setFilterSearch,\n      setFilterType\n    } = this.props;\n    return (\n      <div className={className}>\n        {isLoading ? (\n          <div className=\"header-area\">\n            <div className=\"category-name\">{category}</div>\n            <div className=\"loading\">\n              <CircularProgress size=\"20px\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"header-area\">\n              <div className=\"category-name\">{category}</div>\n              <div className=\"separator\">-</div>\n              <div className=\"total-results\">\n                {totalResults} <FormattedMessage id=\"dashboard.results\" />\n              </div>\n              {totalResults > displayedResults && (\n                <Button className=\"all-results qa-view-all-results\">\n                  {category === 'jobs' && (\n                    <Link to={() => this.createURLLink()}>\n                      <FormattedMessage id=\"dashboard.view-all-results\" />\n                    </Link>\n                  )}\n                  {category === 'processes' && (\n                    <div\n                      role=\"presentation\"\n                      onClick={() => {\n                        setFilterSearch(searchedTerm);\n                        setFilterType('process');\n                      }}\n                    >\n                      <Link to=\"/system/entities\">\n                        <FormattedMessage id=\"dashboard.view-all-results\" />\n                      </Link>\n                    </div>\n                  )}\n                </Button>\n              )}\n            </div>\n            <div className=\"content-area\">\n              {category === 'jobs' && <JobResults jobs={content} fromSearch />}\n              {category === 'processes' && this.renderProcessesResults()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderProcessesResults = () =>\n    this.props.content.map((process, index) => (\n      <div key={index} className=\"result-process-row\">\n        <div className=\"icon-container\">\n          <SvgIcon>\n            <Icon path={mdiPlaySpeed} />\n          </SvgIcon>\n        </div>\n        <div className=\"process-container\">{process.name}</div>\n      </div>\n    ));\n\n  createURLLink = () => {\n    let url = '/jobs';\n    const params = {};\n\n    if (this.props.filters.nameFilter) {\n      params.name_filter = this.props.filters.nameFilter;\n    }\n\n    url = createUrl(url, params);\n    return url;\n  };\n}\n\nexport default SearchResultsComponent;\n\nSearchResultsComponent.propTypes = {\n  className: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  category: PropTypes.string,\n  totalResults: PropTypes.number,\n  isLoading: PropTypes.bool,\n  displayedResults: PropTypes.number\n};\n\nSearchResultsComponent.defaultProps = {\n  className: 'results-container',\n  content: [],\n  category: '',\n  totalResults: 0,\n  isLoading: false,\n  displayedResults: 3\n};\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport { bool } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MUITextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from '../../LightTooltip/LightTooltip';\n\nimport './Input.local.scss';\n\nexport const Input = forwardRef(function InputFw(\n  { inline, error, size, children, description, multiline, variant, ...rest },\n  ref\n) {\n  const InputProps = { ...(rest.InputProps && rest.InputProps) };\n\n  const nrRows = rest?.isPopup ? 9999 : 7;\n\n  if (description) {\n    InputProps.endAdornment = (\n      <>\n        <InputAdornment position=\"end\">\n          <LightTooltip title={description}>\n            <SvgIcon>\n              <path d={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        </InputAdornment>\n        {InputProps.endAdornment}\n      </>\n    );\n  }\n\n  return (\n    <MUITextField\n      ref={ref}\n      fullWidth\n      className={classnames('input-field', { inline, error })}\n      variant={variant || 'outlined'}\n      error={error}\n      {...(multiline && {\n        multiline: true,\n        rows: nrRows\n      })}\n      {...rest}\n      InputProps={InputProps} // eslint-disable-line\n      size={size}\n    >\n      {children}\n    </MUITextField>\n  );\n});\n\nInput.propTypes = {\n  inline: bool,\n  error: bool\n};\n","import React from 'react';\nimport MUIButton from '@material-ui/core/Button';\n\nimport './Button.local.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nexport const Button = ({ to, href, ...props }) => {\n  const link = to || href;\n\n  if (link) {\n    return <MUIButton color=\"primary\" {...props} component={LinkBehavior} to={link} />;\n  }\n\n  return <MUIButton color=\"primary\" {...props} />;\n};\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './ModalFooter.local.scss';\n\nexport const ModalFooter = ({ children }) => {\n  return <footer className=\"modal-footer\">{children}</footer>;\n};\n\nModalFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nModalFooter.Left = LeftSideSlot;\nModalFooter.Right = RightSideSlot;\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ErrorModal.local.scss';\n\nexport const ErrorModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ConfirmationModal.local.scss';\n\nexport const ConfirmationModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '400px',\n          maxHeight: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              No\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.confirm();\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { JobsEffect } from './jobs/jobs.effect';\nimport { JobsConnectionsEffect } from './connections/connections.effect';\nimport { SearchJobsEffect } from './search-jobs/search-jobs.effect';\nimport { SearchProcessesEffect } from './search-processes/search-processes.effect';\nimport { GlobalFiltersEffect } from './global-filters/global-filters.effect';\n\nexport const sharedEffects = [\n  JobsEffect,\n  JobsConnectionsEffect,\n  SearchJobsEffect,\n  SearchProcessesEffect,\n  GlobalFiltersEffect\n];\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Cookie from 'js-cookie';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\n\nimport { Login, Logout } from 'session';\nimport { actionStates } from 'shared/lib/action-creator';\nimport { authorizationSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Layout } from './core';\n\nimport './scoped-css-mui-compatibility';\n\nexport class RootModule extends React.PureComponent {\n  componentDidMount() {\n    if (!Cookie.get('Authorization')) {\n      this.props.history.listen((newLocation, action) => {\n        if (action === 'PUSH') {\n          if (\n            newLocation.pathname !== this.currentPathname ||\n            newLocation.search !== this.currentSearch\n          ) {\n            this.currentPathname = newLocation.pathname;\n            this.currentSearch = newLocation.search;\n            this.props.history.push({\n              pathname: newLocation.pathname,\n              search: newLocation.search\n            });\n          }\n        } else {\n          this.props.history.go(1);\n        }\n      });\n      this.props.history.push('/login');\n      this.props.setAuthorization();\n      return;\n    }\n\n    const username = JSON.parse(localStorage.getItem('username')) || 'mas';\n\n    this.props.checkAuthorization(username);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.authorizationStatus !== prevProps.authorizationStatus &&\n      this.props.authorizationStatus === actionStates.FAIL\n    ) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    if (this.props.authorizationStatus === actionStates.LOADING) {\n      return (\n        <Center>\n          <CircularProgress />\n        </Center>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path={Login.path} component={Login} />\n        <Route exact path={Logout.path} component={Logout} />\n        <Route path=\"/\" component={Layout} />\n      </Switch>\n    );\n  }\n}\n\nRootModule.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  authorizationStatus: PropTypes.oneOf([\n    '',\n    actionStates.SUCCESS,\n    actionStates.LOADING,\n    actionStates.FAIL\n  ]).isRequired,\n  setAuthorization: PropTypes.func.isRequired,\n  checkAuthorization: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  authorizationStatus: authorizationSelector(state).get('status')\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  checkAuthorization: user => dispatch(actions.checkAuthorization.dispatchLoading(user)),\n  setAuthorization: () => dispatch(actions.checkAuthorization.dispatchFail())\n});\n\nexport default hot(connect(mapStateToProps, mapDispatchToProps)(RootModule));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { Dashboard } from 'dashboard';\nimport { Jobs } from 'jobs';\nimport { Entities } from 'entities';\nimport { UsersAndGroups } from 'users-manager';\nimport { Explorer } from 'explorer';\nimport { Sidebar } from './containers';\nimport { JobProcess } from '../job-process';\nimport { ConnectedExecutiveDashboard } from 'executive-dashboard/ExecutiveDashboard';\nimport { LicenseCollection } from 'license-collection/LicenseCollection';\nimport { LicenseAllocation } from '../license-allocation/LicenseAllocation';\nimport { Licensing } from '../licensing/Licensing';\nimport { DbmsType } from '../explorer/SystemExplorerFeatureUtil';\nimport { ConnectedMssqlUsageCollection } from '../usage-collection/mssql/MssqlUsageCollection';\n\nimport './root.local.scss';\n\nexport class RootLayout extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Sidebar />\n        <div className=\"app-container\">\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/jobs/job\" component={JobProcess} />\n            <Route exact path=\"/system/entities\" component={Entities} />\n            <Route path=\"/system/mas-accounts\" component={UsersAndGroups} />\n            <Route exact path=\"/system/explorer\" component={Explorer} />\n            <Route\n              exact\n              path=\"/compliance/executive-dashboard\"\n              component={ConnectedExecutiveDashboard}\n            />\n            <Route\n              exact\n              path=\"/compliance/mssql-executive-dashboard\"\n              render={() => (\n                <ConnectedExecutiveDashboard dbType={DbmsType.MSSQL} />\n              )}\n            />\n            <Route exact path=\"/compliance/license-collection\" component={LicenseCollection} />\n            <Route exact path=\"/compliance/license-allocation\" component={LicenseAllocation} />\n            <Route exact path=\"/compliance/licensing\" component={Licensing} />\n            <Route exact path=\"/compliance/mssql-usage-collection\" component={ConnectedMssqlUsageCollection} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nRootLayout.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector } from 'shared/store/state';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from 'users-manager/store/thunks';\nimport { Header } from 'core/components/Header';\nimport { Center, RangeDatePicker, SimpleSearchInput, Switch, WorkloadGraph } from 'shared/components';\nimport { Main, Paper } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { ConnectedJobList } from './components/job-list/job-list.component';\nimport { JobItem } from './components/job-item';\nimport { Filters } from './containers/filters';\nimport { JobsInvocations } from './containers/jobs-invocations';\nimport { Schedule } from './containers/Schedule/Schedule';\nimport { TotalJobsCount } from './components/total-jobs-count/TotalJobsCount';\nimport { getCurrentUserDetails } from '../session/store/selectors';\nimport { hasCreatePrivilege } from '../entities/utils/privileges';\nimport { SecurityAreas } from '../entities/utils/security-areas';\n\nimport './jobs.local.scss';\n\nfunction renderJobItem(item, index, filters, loggedUser) {\n  return <JobItem extended key={index} job={item} filters={filters} loggedUser={loggedUser} />;\n}\n\nclass RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n    this.state = {\n      range: {\n        startDate: moment.unix(moment().subtract(7, 'days').startOf('day').unix()),\n        endDate: moment.unix(moment().endOf('day').unix())\n      },\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_filter: {\n        dbms: query.get('platform_filter_dbms') || '',\n        name: query.get('platform_filter_name') || ''\n      }, // will have the platform_name_filter and platform_dbms_filter\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      name_filter: query.get('name_filter') || '',\n      user_filter: query.get('user_filter') || '',\n      selectedTab: 'all',\n      isWorkloadDisplayed: false,\n      pageFilters: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.allUsers.length === 0) {\n      this.props.loadAllUsers();\n    }\n  }\n\n  render() {\n    const {\n      shell_host_address_filter,\n      platform_filter,\n      status,\n      database_name_filter,\n      user_filter,\n      selectedTab,\n      isWorkloadDisplayed,\n      range\n    } = this.state;\n\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n    const canCreateSchedule = hasCreatePrivilege(this.props.userDetails, SecurityAreas.SCHEDULE);\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Jobs\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    const formattedStartDate = range.startDate.format('YYYY-MM-DD');\n    const formattedEndDate = range.endDate.format('YYYY-MM-DD');\n\n    return (\n      <JobsInvocations>\n        <Header title=\"Jobs\">\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <NavigationTab\n                tabs={[\n                  { label: 'All jobs', value: 'all' },\n                  { label: 'Current jobs', value: 'current-jobs' },\n                  { label: 'Scheduled', value: 'scheduled' }\n                ]}\n                active={selectedTab}\n                onClick={this.handleOnTabChange}\n              />\n              {(selectedTab === 'all' || selectedTab === 'current-jobs') && (\n                <Button\n                  style={{\n                    whiteSpace: 'nowrap',\n                    lineHeight: '20px',\n                    height: '20px',\n                    paddingTop: '0'\n                  }}\n                  onClick={this.toggleWorkloadDisplay}\n                >\n                  {isWorkloadDisplayed ? 'Hide Workload' : 'Display workload'}\n                </Button>\n              )}\n            </Paper.Header>\n            <Switch value={selectedTab}>\n              <Switch.Case value=\"all\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount jobs={this.props.jobs.get('content').toJS()} status={status} />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: formattedStartDate,\n                            endDate: formattedEndDate\n                          })}\n                          isSingleDay={formattedStartDate === formattedEndDate}\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"current-jobs\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount\n                    jobs={this.props.jobs\n                      .get('content')\n                      .filter(item => item.get('status') !== 'SCHEDULED')\n                      .toJS()}\n                    status={status}\n                  />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: formattedStartDate,\n                            endDate: formattedEndDate\n                          })}\n                          isSingleDay={formattedStartDate === formattedEndDate}\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"scheduled\">\n                <TotalJobsCount\n                  jobs={this.props.jobs\n                    .get('content')\n                    .filter(item => item.get('status') === 'SCHEDULED')\n                    .toJS()}\n                  status=\"SCHEDULED\"\n                />\n              </Switch.Case>\n            </Switch>\n            <Paper.Content scrollable={false}>\n              <div className=\"jobs-filters-controllers\">\n                <div className=\"job-search\">\n                  <SimpleSearchInput\n                    value={this.state.name_filter}\n                    onChange={this.onSearchInputChange}\n                    onKeyDown={this.onKeyDown}\n                  />\n                </div>\n                <Filters\n                  selections={{\n                    shell_host_address_filter,\n                    platform_filter,\n                    status,\n                    database_name_filter,\n                    user_filter\n                  }}\n                  onChange={this.handleOnFilterChange}\n                  excludeStatus={selectedTab === 'scheduled'}\n                  currentTab={selectedTab}\n                />\n              </div>\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Loading jobs list</Loader>\n                </Center>\n              ) : (\n                <ConnectedJobList items={this.returnListBasedOnTab()} filters={this.state.pageFilters}>\n                  {renderJobItem}\n                </ConnectedJobList>\n              )}\n            </Paper.Content>\n            {canCreateSchedule && (\n              <Paper.Footer>\n                <Schedule userDetails={this.props.userDetails} />\n                <Button to=\"/jobs/job\">New Job</Button>\n              </Paper.Footer>\n            )}\n          </Paper>\n        </Main>\n      </JobsInvocations>\n    );\n  }\n\n  toggleWorkloadDisplay = () => {\n    this.setState(prevState => ({\n      isWorkloadDisplayed: !prevState.isWorkloadDisplayed\n    }));\n  };\n\n  updateQSP = (filter, value) => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (typeof value === 'object') {\n      const keys = Object.keys(value);\n\n      keys.forEach(key => {\n        if (!value[key]) {\n          query.delete(`${filter}_${key}`);\n        } else if (query.has(`${filter}_${key}`) && query.get(`${filter}_${key}`) !== value[key]) {\n          query.set(`${filter}_${key}`, value[key]);\n        } else {\n          query.append(`${filter}_${key}`, value[key]);\n        }\n      });\n    } else if (!value) {\n      query.delete(filter);\n    } else if (query.has(filter) && query.get(filter) !== value) {\n      query.set(filter, value);\n    } else {\n      query.append(filter, value);\n    }\n\n    query.toString();\n\n    this.props.history.push({ search: `?${query}` });\n  };\n\n  handleOnTabChange = tab => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (query.get('status')) {\n      query.delete('status');\n      query.toString();\n\n      this.props.history.push({ search: `?${query}` });\n      this.setState({ status: '', selectedTab: tab }, () => {\n        this.performFilter(this.state);\n      });\n    } else {\n      this.setState({ selectedTab: tab });\n    }\n  };\n\n  handleOnFilterChange = (filter, value) => {\n    this.updateQSP(filter, value);\n\n    this.setState(\n      {\n        [filter]: value\n      },\n      () => {\n        this.performFilter(this.state);\n      }\n    );\n  };\n\n  returnListBasedOnTab = () => {\n    const { selectedTab, status } = this.state;\n    const list = this.props.jobs.get('content');\n\n    if (status) {\n      return list.filter(item => item.get('status') === status);\n    }\n\n    if (selectedTab === 'scheduled') {\n      return list.filter(item => item.get('status') === 'SCHEDULED');\n    }\n\n    if (selectedTab === 'current-jobs') {\n      return list.filter(item => item.get('status') !== 'SCHEDULED');\n    }\n\n    return list;\n  };\n\n  performFilter = ({\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter,\n    name_filter,\n    range\n  }) => {\n    if (range.startDate === null || range.endDate === null) return;\n\n    const start = moment(range.startDate.format('YYYY-MM-DD'));\n    const end = moment(range.endDate.format('YYYY-MM-DD'));\n    const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n    const payload = {\n      date_invoke: range.startDate.format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    };\n\n    if (shell_host_address_filter) {\n      payload.shell_host_address_filter = shell_host_address_filter;\n    }\n\n    if (platform_filter) {\n      payload.platform_name_filter = platform_filter.name;\n      payload.platform_dbms_filter = platform_filter.dbms;\n    }\n\n    if (status) {\n      payload.status = status;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (name_filter) {\n      payload.name_filter = name_filter;\n    }\n\n    if (user_filter) {\n      payload.owner = user_filter;\n    }\n\n    this.props.getJobs(payload);\n    this.setState({ pageFilters: payload });\n  };\n\n  onSearchInputChange = event => {\n    this.setState({\n      name_filter: event.target.value\n    });\n  };\n\n  onKeyDown = event => {\n    if (event.key === 'Enter' && !this.props.jobs.get('fetching')) {\n      this.updateQSP('name_filter', event.target.value);\n      this.performFilter(this.state);\n    }\n  };\n\n  onChangeDatesHandler = range => {\n    this.setState(\n      {\n        range: {\n          startDate: range.startDate,\n          endDate: range.endDate\n        }\n      },\n      () => {\n        this.props.setGlobalFilters(range);\n        this.performFilter(this.state);\n      }\n    );\n  };\n}\nRootModule.propTypes = {\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  allUsers: state.usersManager.users.all,\n  userDetails: getCurrentUserDetails(state),\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n  },\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  loadAllUsers: () => dispatch(loadAllUsersThunk())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiClockOutline, mdiDatabase, mdiHexagonMultipleOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { ConnectedDeleteJobModal } from '../../actions/delete/DeleteJobModal';\nimport { JobStatus } from '../job-status';\nimport { InvocationStatus } from '../../../job-process/store/constants';\nimport './job-item.local.scss';\n\nconst ALLOWED_FOR_DELETE = [\n  InvocationStatus.SCHEDULED,\n  InvocationStatus.EXECUTING,\n  InvocationStatus.DELAYED\n];\n\nexport const JobItem = ({ job, filters, loggedUser }) => {\n  const [open, setOpen] = useState(false);\n  const canDelete = loggedUser.get('name') === 'mas' && ALLOWED_FOR_DELETE.includes(job.get('status'));\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n  const [uuid, setUuid] = useState('');\n\n  const formatName = () => {\n    let name = job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas = formatName.canvas || (formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n  return (\n    <>\n      <Link to={`/jobs/job/?invocation=${job.get('uuid')}`}>\n        <div className=\"job-item\">\n          <div className=\"status-icon\">\n            <JobStatus status={job.get('status')} />\n          </div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {job.get('process')}</p>\n                    {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                  </>\n                }\n              >\n                <div className=\"name\">{formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"metadata-element time\">\n                  <SvgIcon>\n                    <path d={mdiClockOutline} />\n                  </SvgIcon>\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"metadata-element run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"metadata-element dbms\">\n                    <SvgIcon>\n                      <path d={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"metadata-element server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"metadata-element database\">\n                    <SvgIcon>\n                      <path d={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n          {canDelete && (\n            <div className=\"job-actions\">\n              <Button\n                color=\"secondary\"\n                onClick={event => {\n                  event.preventDefault();\n                  setOpen(true);\n                  setUuid(job.get('uuid'));\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          )}\n        </div>\n      </Link>\n\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={uuid} filters={filters} />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiCancel,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport './job-status.local.scss';\n\nconst statusMap = {\n  EXECUTING: mdiProgressClock,\n  SUCCEEDED: mdiCheckCircleOutline,\n  SCHEDULED: mdiCalendarArrowRight,\n  DELAYED: mdiTimelineClock,\n  ABORTED: mdiStopCircleOutline,\n  FAILED: mdiAlertRhombusOutline,\n  KILLED: mdiCancel\n};\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return (\n      <LightTooltip placement=\"bottom-start\" title={this.props.status.toUpperCase()}>\n        <div className=\"daemon qa-daemon-status\">\n          <div className={`status ${this.props.status.toLowerCase()}`}>\n            <SvgIcon>\n              <path d={statusMap[this.props.status]} />\n            </SvgIcon>\n          </div>\n        </div>\n      </LightTooltip>\n    );\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string\n};\nJobStatus.defaultProps = {\n  status: ''\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { mapSortInsensitive } from 'users-manager/store/mappers';\nimport { getJobsFiltersOptions } from 'shared/store/selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiHexagonMultipleOutline, mdiDatabase, mdiServer, mdiCircleSlice5 } from '@mdi/js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\nimport { Input } from 'shared/components/controls';\n\nimport './filters.scss';\n\nexport const PLATFORM = [\n  { label: 'MariaDB', name: 'mariadb', dbms: 'mysql', value: { name: 'mariadb', dbms: 'mysql' } },\n  {\n    label: 'MySQL',\n    name: 'mysql',\n    dbms: 'mysql',\n    value: { name: 'mysql', dbms: 'mysql' }\n  },\n  { label: 'Oracle', name: 'oracle', dbms: 'oracle', value: { name: 'oracle', dbms: 'oracle' } },\n  { label: 'PostgreSQL', name: 'pgsql', dbms: 'pgsql', value: { name: 'pgsql', dbms: 'pgsql' } },\n  {\n    label: 'Microsoft SQL Server',\n    name: 'microsoft.sqlserver',\n    dbms: 'mssql',\n    value: { name: 'microsoft.sqlserver', dbms: 'mssql' }\n  },\n  {\n    label: 'Oracle RDS',\n    name: 'rds.oracle',\n    dbms: 'oracle',\n    value: { name: 'rds.oracle', dbms: 'oracle' }\n  }\n];\n\nconst Filters = props => {\n  const { filters, selections, onChange, excludeStatus, allUsers, currentTab } = props;\n  const {\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter\n  } = selections;\n\n  const users = [\n    { value: '', label: 'All' },\n    ...allUsers.map(user => ({ label: user.name, value: user.name }))\n  ];\n  const selectedUser = users.find(u => u.value && u.value === user_filter) ?? '';\n  const platforms = [\n    { value: { name: '', dbms: '' }, label: 'All' },\n    ...PLATFORM.map(el => ({ value: el.value, label: el.label }))\n  ];\n  const selectedPlatform =\n    platforms.find(p => p?.value?.name && p.value.name === platform_filter?.name) ?? '';\n  const servers = [\n    { value: '', label: 'All' },\n    ...filters.address.map(el => ({ value: el, label: el }))\n  ];\n  const selectedServer =\n    servers.find(sv => sv.value && sv.value === shell_host_address_filter) ?? '';\n  const databases = [\n    { value: '', label: 'All' },\n    ...filters.database.map(el => ({ value: el, label: el }))\n  ];\n  const selectedDb = databases.find(db => db.value && db.value === database_name_filter) ?? '';\n  let statuses = [\n    { value: '', label: 'All' },\n    ...filters.status.map(el => ({ value: el, label: el }))\n  ];\n\n  if (currentTab === 'current-jobs') {\n    statuses = statuses.filter(s => s.value !== 'SCHEDULED');\n  }\n\n  const selectedStatus = statuses.find(s => s.value && s.value === status) ?? '';\n\n  return (\n    <div className=\"job-filters\">\n      <Autocomplete\n        disableClearable\n        id=\"users-filter\"\n        options={users}\n        value={selectedUser}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('user_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <AccountCircleOutlinedIcon />\n                <span className=\"job-filter-select-label\">Users</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"platform-filter\"\n        options={platforms}\n        value={selectedPlatform}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('platform_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Platform</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"server-filter\"\n        options={servers}\n        value={selectedServer}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('shell_host_address_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiServer} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Server</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"database-filter\"\n        options={databases}\n        value={selectedDb}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('database_name_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiDatabase} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Database</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      {!excludeStatus && (\n        <Autocomplete\n          disableClearable\n          id=\"status-filter\"\n          options={statuses}\n          value={selectedStatus}\n          getOptionLabel={opt => opt.label || ''}\n          onChange={(e, option) => {\n            onChange('status', option?.value || '');\n          }}\n          style={{ color: 'red' }}\n          renderInput={params => (\n            <Input\n              {...params}\n              size=\"small\"\n              label={\n                <span className=\"job-filter-select-label-wrap\">\n                  <SvgIcon>\n                    <path d={mdiCircleSlice5} />\n                  </SvgIcon>\n                  <span className=\"job-filter-select-label\">Status</span>\n                </span>\n              }\n              variant=\"outlined\"\n            />\n          )}\n        />\n      )}\n    </div>\n  );\n};\nFilters.propTypes = {\n  filters: PropTypes.object.isRequired,\n  selections: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  excludeStatus: PropTypes.bool\n};\n\nexport const mapStateToProps = state => ({\n  filters: getJobsFiltersOptions(state),\n  allUsers: mapSortInsensitive(state.usersManager.users.all)\n});\n\nexport default connect(mapStateToProps)(Filters);\n","import { createSelector } from 'reselect';\n\nimport { connectionsSelector } from '../state';\n\nexport const getJobsFiltersOptions = createSelector(connectionsSelector, connections => {\n  const filters = {\n    address: [], // connections - server\n    protocol: [], // connections - dbms\n    status: ['EXECUTING', 'SUCCEEDED', 'SCHEDULED', 'ABORTED', 'FAILED', 'DELAYED', 'KILLED'], // hardcoded\n    database: [] // connections -  database\n  };\n\n  connections.get('content').forEach(connection => {\n    const address = connection.get('address');\n    const protocol = connection.get('protocol');\n    const database = connection.getIn(['special', 'database']);\n\n    if (address && !filters.address.includes(address)) {\n      filters.address.push(address);\n    }\n\n    if (protocol && !filters.protocol.includes(protocol)) {\n      if (protocol !== 'SSH') {\n        filters.protocol.push(protocol);\n      }\n    }\n\n    if (database && !filters.database.includes(database)) {\n      filters.database.push(database);\n    }\n  });\n  return filters;\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { actions } from 'shared/store/actions';\n\nexport const JobsInvocations = ({ children }) => {\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n\n  const dispatch = useDispatch();\n  const getJobs = data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n    dispatch(actions.getConnections.dispatchLoading(data));\n  };\n\n  React.useEffect(() => {\n    const startDate = moment.unix(moment().subtract(7, 'days').startOf('day').unix()).format('YYYY-MM-DD');\n    const endDate = moment.unix(moment().endOf('day').unix()).format('YYYY-MM-DD');\n    const days = moment(endDate).diff(moment(startDate), 'days');\n\n    getJobs({\n      date_invoke: startDate,\n      period: days + 1,\n      page_size: 2147483645,\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_name_filter: query.get('platform_filter_name') || '',\n      platform_dbms_filter: query.get('platform_filter_dbms') || '',\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      owner: query.get('user_filter') || '',\n      name_filter: query.get('name_filter') || ''\n    });\n  }, []);\n\n  return children;\n};\nJobsInvocations.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","export const deepCopy = (value) => {\n  return JSON.parse(JSON.stringify(value));\n};\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport Container from '@material-ui/core/Container';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MenuItem } from '@material-ui/core';\nimport { fetchEntity, openModal, selectEntity, setFilterSearch, setFilterType } from './actions';\nimport { ENTITY_TYPES, getBreadcrumbs, getEntities, getSelectedEntity } from './selectors';\nimport Entity from './components/Entity';\nimport SelectedEntity from './containers/SelectedEntity';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport debounce from 'lodash/debounce';\nimport { Input } from 'shared/components/controls';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport './root.local.scss';\n\n/* eslint-disable */\n\nconst VIEW_OPTIONS = [{\n  value: 'default',\n  label: 'User View'\n}, {\n  value: 'pro',\n  label: 'Pro View'\n}];\n\nconst ENTITY_ICONS = {\n  root: <FolderIcon />,\n  namespace: <FolderIcon />,\n  constant: <FilterCenterFocusIcon />,\n  form: <AssignmentTurnedInIcon />,\n  schedule: <EventNoteIcon />,\n  account: <VpnKeyIcon />,\n  process: <SlowMotionVideoIcon />,\n  type: <DeveloperModeIcon />,\n  exception: <WarningIcon />,\n  prototype: <AssignmentIcon />,\n  CachedIcon:<CachedIcon />\n};\n\nlet searchWithDebounce = () => {};\n\nfunction RootModule({\n  fetchEntity,\n  selectEntity,\n  columns,\n  breadcrumbs,\n  filters,\n  setFilterType,\n  setFilterSearch,\n  selectedEntity,\n  entitiesStatus,\n  job\n}) {\n  const [viewMode, setViewMode] = useState(VIEW_OPTIONS[0]);\n  const [searchInput, setSearchInput] = useState('');\n\n  useEffect(() => {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'not-fetched' || entitiesStatus[key] === 'failed') {\n        fetchEntity(key);\n      }\n    }\n\n    searchWithDebounce = debounce(value => {\n      setFilterSearch(value);\n    }, 700);\n    if (filters.search) {\n      setSearchInput(filters.search);\n    }\n  }, []);\n\n  function renderBreadcrumb(breadcrumb) {\n    return (\n      <span key={breadcrumb}>\n        <span className=\"breadcrumb\">{breadcrumb}</span> /{' '}\n      </span>\n    );\n  }\n\n  function renderColumn(columns, colNum) {\n    let rows = columns.rows;\n\n    // filter top level entities\n    if (colNum === 0 && viewMode.value === 'default') {\n      rows = findShownNamespaces(rows);\n    }\n\n    return (\n      <div key={colNum}>\n        {rows.map(entity => (\n          <Entity\n            key={entity.name}\n            entity={entity}\n            selectEntity={selectEntity}\n            columns={columns}\n            entityIcons={ENTITY_ICONS}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function handleSearchChange(e) {\n    const val = e.target.value;\n    searchWithDebounce(val);\n    setSearchInput(val);\n  }\n\n  function loadingData() {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'fetching') {\n        return (\n          <div className=\"loading\">\n            <CircularProgress size={15} />\n            <span>Loading {key} entities...</span>\n          </div>\n        );\n      }\n    }\n\n    return null;\n  }\n\n  function findShownNamespaces(topLevelEntities) {\n    return topLevelEntities.filter((entity) => entity?.meta?.defaultview !== 'hide')\n  }\n\n  function renderColumns() {\n    if (Array.isArray(columns) && columns[0]?.rows?.length) {\n      let shownColumns = columns;\n\n      if (viewMode.value === 'default') {\n        const allowedPaths = findShownNamespaces(columns[0].rows).map(entity => entity.name);\n        shownColumns = columns.filter((column, index) => {\n          return index === 0 || allowedPaths.some(rootPath => {\n            const pathFirstToken = column.path.split('.')[0];\n            return pathFirstToken === rootPath;\n          });\n        });\n      }\n\n      return shownColumns.map(renderColumn);\n    }\n\n    if (Object.values(entitiesStatus).find(e => e === 'fetching')) {\n      return null;\n    } else {\n      return 'No Entities Found.';\n    }\n  }\n\n  function clearCache(){\n     window.location.reload(false);\n     sessionStorage.removeItem(\"persist:root\");\n  }\n\n  return (\n    <>\n      <Header title=\"System / Entities\">\n        <Autocomplete\n          className=\"view-mode-filter\"\n          disableClearable\n          id=\"viewMode\"\n          options={VIEW_OPTIONS}\n          value={viewMode}\n          getOptionLabel={opt => opt.label || ''}\n          onChange={(e, option) => {\n            setViewMode(option);\n          }}\n          renderInput={params => (\n            <Input\n              {...params}\n              size=\"small\"\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </Header>\n      <Container maxWidth={false} classes={{ root: 'define-height-container' }}>\n        <div className=\"entities-breadcrumb\">{['root', ...breadcrumbs].map(renderBreadcrumb)}</div> \n        <br />\n        {sessionStorage.getItem(\"persist:root\") && <div><CachedIcon style={{ color: 'green',cursor: 'pointer' }}  onClick={e => clearCache()} /><span onClick={e => clearCch()} style={{fontSize: \"13px\",color: \"#047f04\",fontWeight: \"bolder\",cursor: 'pointer'}}>Clear cache </span> </div> }\n        <div className=\"entities-filters\">\n          <Select value={filters.type} onChange={ev => setFilterType(ev.target.value)}>\n            {[{ type: 'all', title: 'ALL' }, ...ENTITY_TYPES].map(type => (\n              <MenuItem key={type.type} value={type.type}>\n                {type.title}\n              </MenuItem>\n            ))}\n          </Select>\n          <div className=\"entities-search-wrap\">\n            <SimpleSearchInput value={searchInput} onChange={handleSearchChange} />\n          </div>\n        </div>\n        {loadingData()}\n        <div className=\"grid-container define-height-grid-root\">\n          <div className=\"entities-list-container define-height\">\n            <div className=\"columns\">{renderColumns()}</div>\n          </div>\n          <div className=\"selected-entity-container\">\n            <SelectedEntity selectedEntity={selectedEntity} entityIcons={ENTITY_ICONS} />\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nRootModule.propTypes = {\n  fetchEntity: PropTypes.func,\n  selectEntity: PropTypes.func,\n  setFilterType: PropTypes.func,\n  setFilterSearch: PropTypes.func,\n  columns: PropTypes.array,\n  breadcrumbs: PropTypes.array,\n  filters: PropTypes.object,\n  selectedEntity: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    columns: getEntities(state),\n    breadcrumbs: getBreadcrumbs(state),\n    filters: state.entities.filters,\n    selectedEntity: getSelectedEntity(state),\n    entitiesStatus: state.entities.fetch_status\n  }),\n  { fetchEntity, selectEntity, setFilterType, setFilterSearch, openModal }\n)(RootModule);\n","import React from 'react';\nimport { Route, Link, Switch, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header/Header';\n\nimport { Button } from 'shared/components/controls';\n\nimport { HeaderPageSwitch } from './components/HeaderPageSwitch/HeaderPageSwitch';\n\nimport { UsersPage } from './users';\n\nimport { GroupsPage } from './groups';\n\nexport const UsersAndGroupsPage = () => {\n  return (\n    <>\n      <Header>\n        <UserManagementHeaderLinks />\n        <RightSideControls />\n      </Header>\n      <UserManagementSwitch />\n    </>\n  );\n};\n\nexport const UserManagementHeaderLinks = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  const routes = [\n    { to: `${url}/users`, label: 'Users' },\n    { to: `${url}/groups`, label: 'Groups' }\n  ];\n\n  return <HeaderPageSwitch active={location.pathname} routes={routes} />;\n};\n\nexport const RightSideControls = () => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  if (location.pathname.includes('create-new')) {\n    return null;\n  }\n\n  if (location.pathname.includes('users')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/users/create-new`} component={Link}>\n          Create User\n        </Button>\n      </div>\n    );\n  }\n\n  if (location.pathname.includes('groups')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/groups/create-new`} component={Link}>\n          Create Group\n        </Button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const UserManagementSwitch = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${url}`}>\n        <UsersPage />\n      </Route>\n      <Route path={`${url}/groups`}>\n        <GroupsPage />\n      </Route>\n      <Route path={`${url}/users`}>\n        <UsersPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default UsersAndGroupsPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { array, func, object } from 'prop-types';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Center, Main } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from '../store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\nimport { loadAllGroupsThunk } from '../groups/store/thunks';\nimport { ConnectedUserLoader } from './containers/UserLoader';\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { UserCard } from '../components/UserCard/UserCard';\nimport { NoUserSelectedPage } from './pages/NoUsersSelected';\nimport { CreateNewUserPage } from './pages/CreateNewUser/CreateNewUser';\n\nimport './root.scss';\n\nexport const UsersPage = ({\n  allUsers,\n  selectedUser,\n  loadAllUsers,\n  allGroups,\n  loadAllGroups,\n  isLoading\n}) => {\n  useEffect(() => {\n    loadAllUsers();\n    if (allGroups.length === 0) {\n      loadAllGroups();\n    }\n  }, []);\n\n  function filterUserByQuery(user, query) {\n    return user.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const userLink = user => {\n    return `${match.url}/${user.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading users...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"users-search-section\">\n        <SearchableList items={allUsers} filter={filterUserByQuery}>\n          {user => <UserCard selected={selectedUser} user={user} href={userLink(user)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <UserSwitch />\n      </section>\n    </Main>\n  );\n};\n\nUsersPage.propTypes = {\n  allUsers: array,\n  selectedUser: object,\n  loadAllUsers: func\n};\n\nexport const UserSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewUserPage />\n      </Route>\n      <Route path={`${path}/:userName`}>\n        <ConnectedUserLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoUserSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allUsers: mapSortInsensitive(state.usersManager.users.all),\n    selectedUser: state.usersManager.users.selected,\n    allGroups: state.groups.all,\n    isLoading: state.usersManager.flags.users.loading\n  }),\n  dispatch => ({\n    loadAllUsers: () => dispatch(loadAllUsersThunk()),\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(UsersPage);\n","import React, { useEffect } from 'react';\nimport { func, array } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadAllGroupsThunk } from './store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { GroupCard } from './components/GroupCard/GroupCard';\n\nimport { ConnectedGroupLoader } from './pages/GroupView/GroupView';\nimport { CreateNewGroupPage } from './pages/CreateNewGroup/CreateNewGroup';\nimport { NoGroupSelectedPage } from './pages/NoGroupSelected';\n\nimport './root.local.scss';\n\nexport const GroupsPage = ({ allGroups, loadAllGroups, isLoading }) => {\n  useEffect(() => {\n    loadAllGroups();\n  }, []);\n\n  function filterGroupByQuery(group, query) {\n    return group.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const groupLink = group => {\n    return `${match.url}/${group.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading groups...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"search-list-section\">\n        <SearchableList items={allGroups} filter={filterGroupByQuery}>\n          {group => <GroupCard group={group} href={groupLink(group)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <GroupsPagesSwitch />\n      </section>\n    </Main>\n  );\n};\n\nGroupsPage.propTypes = {\n  allGroups: array,\n  loadAllGroups: func\n};\n\nexport const GroupsPagesSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewGroupPage />\n      </Route>\n      <Route path={`${path}/:groupName`}>\n        <ConnectedGroupLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoGroupSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allGroups: mapSortInsensitive(state.groups.all.filter(g => g.name !== 'user')),\n    isLoading: state.groups.ops.all.loading\n  }),\n  dispatch => ({\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(GroupsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func, object } from 'prop-types';\nimport moment from 'moment';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddIcon from '@material-ui/icons/Add';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Center, RangeDatePicker } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper } from 'shared/components/layout';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions } from 'shared/store/actions';\nimport { Button } from 'shared/components/controls';\nimport { Header } from 'core/components/Header';\nimport { loadAllAccountsThunk, loadProtocolsThunk } from './store/thunks';\nimport { Treeview } from './treeview';\nimport { ConnectedBreadcrumbsTitle } from './containers/Breadcrumbs/Breadcrumbs';\nimport { ContentSwitch } from './components/ContentSwitch/ContentSwitch';\nimport { AddServerCard } from './containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from './containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from './containers/ImportCSV/ImportCSV';\nimport { ToggleSystemExplorerView } from './components/ToggleSystemExplorerView/ToggleSystemExplorerView';\nimport { SystemExplorerViewMode } from './components/ToggleSystemExplorerView/SystemExplorerViewMode';\nimport { ConnectedSystemExplorerTable } from './components/TableView/SystemExplorerTable';\n\nimport './root.local.scss';\n\nexport class ExplorerPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      anchorElement: null,\n      viewMode: SystemExplorerViewMode.TABLE\n    };\n  }\n\n  componentDidMount() {\n    const { loadProtocols, loadAllAccounts } = this.props;\n\n    loadProtocols();\n    loadAllAccounts();\n  }\n\n  render() {\n    const {\n      treeviewData,\n      isLoading,\n      storeState: { level }\n    } = this.props;\n\n    const { viewMode } = this.state;\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    return (\n      <>\n        <Header stretchContent>\n          <h1 className=\"header-title\">System / Explorer</h1>\n          {level === 'workload' || level === 'license' ? (\n            <RangeDatePicker\n              onDatesChange={this.onChangeDatesHandler}\n              startDate={moment.unix(this.props.globalFilters.get('startDate'))}\n              endDate={moment.unix(this.props.globalFilters.get('endDate'))}\n            />\n          ) : null}\n\n          <ToggleSystemExplorerView active={viewMode} onClickCallback={(newMode) => this.setState({ viewMode: newMode })} />\n        </Header>\n        <Main mdPage>\n          {isLoading ? (\n            <Center>\n              <Loader>Loading accounts...</Loader>\n            </Center>\n          ) : (\n            viewMode === SystemExplorerViewMode.TILES && (\n              <>\n                <Treeview data={treeviewData} />\n                <Paper className=\"tiles-view-container\">\n                  <Paper.Header>\n                    <h1 className=\"breadcrumbs-title\">\n                      <ConnectedBreadcrumbsTitle />\n                    </h1>\n                    <div className=\"action-container\">\n                      <Button\n                        startIcon={<AddIcon />}\n                        className=\"action-btn\"\n                        aria-controls=\"simple-menu\"\n                        aria-haspopup=\"true\"\n                        onClick={this.handleClick}\n                        disabled={isDisabled}\n                      >\n                        Add connection\n                      </Button>\n                      <Menu\n                        id=\"connections-menu\"\n                        keepMounted\n                        anchorEl={this.state.anchorElement}\n                        open={Boolean(this.state.anchorElement)}\n                        onClose={this.handleClose}\n                      >\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <AddServerCard disabled={isDisabled} />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <AddDatabaseCard disabled={isDisabled} />\n                        </MenuItem>\n                        <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                          <ImportCSV disabled={isDisabled} />\n                        </MenuItem>\n                      </Menu>\n                    </div>\n                  </Paper.Header>\n                  <ContentSwitch activePage={level} />\n                </Paper>\n              </>\n            )\n          )}\n          {!isLoading && viewMode === SystemExplorerViewMode.TABLE && (\n            <>\n              <ConnectedSystemExplorerTable\n                data={treeviewData}\n                switchToTileView={() => this.setState({ viewMode: SystemExplorerViewMode.TILES })}\n              />\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n\n  handleClick = event => {\n    this.setState({ anchorElement: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorElement: null });\n  };\n\n  onChangeDatesHandler = range => {\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n    }\n  };\n}\n\nExplorerPage.propTypes = {\n  treeviewData: array,\n  loadAllAccounts: func,\n  isLoading: bool,\n  storeState: object,\n  globalFilters: object,\n  setGlobalFilters: func\n};\n\nexport default connect(\n  state => ({\n    treeviewData: state.explorer.structured?.dbms || [],\n    isLoading: state.explorer.flags.accounts.loading || state.explorer.flags.protocols.loading,\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    loadAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    loadProtocols: () => dispatch(loadProtocolsThunk()),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(ExplorerPage);\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { ConnectedDBMS } from './layers/Dbms/Dbms';\n\nimport './root.local.scss';\n\nexport class Treeview extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <ul className=\"treeview-container\">\n        {data.map(dbms => (\n          <ConnectedDBMS key={dbms.protocol} data={dbms} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTreeview.propTypes = {\n  data: array\n};\n\nexport default Treeview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StorageSidebar, ObjectsSidebar } from './Sidebar';\nimport { StorageViewer, ObjectsViewer } from './Viewer';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport const DbObjects = ({\n  type,\n  data,\n  list,\n  dbName,\n  protocol,\n  selectedItem,\n  setItem,\n  loadingFlags,\n  invalidObjects\n}) => {\n  const { loadingPoints, loadingDetails, loading } = loadingFlags;\n  const sidebarDisabled = SystemExplorerFeatureUtil.isObjectsSidebarDisabled(protocol);\n  if (type === 'storage') {\n    return (\n      <div className=\"db-objects-tabs\">\n        <StorageSidebar\n          dbName={dbName}\n          isLoading={loadingPoints}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n        <StorageViewer data={data} isLoading={loadingDetails} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"db-objects-tabs\">\n      {!sidebarDisabled && (\n        <ObjectsSidebar\n          dbName={dbName}\n          invalidObjects={invalidObjects}\n          isLoading={loading}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n      )}\n      <ObjectsViewer data={data} isLoading={loading} sidebarDisabled={sidebarDisabled} protocol={protocol} />\n    </div>\n  );\n};\n\nDbObjects.propTypes = {\n  type: PropTypes.string,\n  data: PropTypes.object,\n  list: PropTypes.array,\n  selectedItem: PropTypes.object,\n  setItem: PropTypes.func,\n  dbName: PropTypes.string,\n  protocol: PropTypes.string\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { actions } from 'session/store/actions';\nimport { beHealthSelector, beLicenceSelector, beVersionSelector, currentUserSelector } from 'session/store/state';\nimport { Compile, Navigation, UserMenu } from './components';\nimport pkg from '../../../../../package.json';\nimport MasLogo from '../../../../assets/images/mas_logo_white.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_white.svg';\nimport './sidebar.local.scss';\n\nconst RUNNING = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'rgb(79, 219, 70)',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nconst STATUS_SPAN = {\n  color: '#fff',\n  fontSize: '11px',\n  marginLeft: '14px',\n  textShadow: '1px 1px 1px #3765af3b',\n  position: 'relative',\n  top: '-2px'\n};\n\nconst STOPPED = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'red',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nexport class SidebarContainer extends React.PureComponent {\n  componentDidMount() {\n    this.props.getBeVersion();\n    this.props.getBeLicence();\n    this.props.getBeHealth();\n  }\n\n  render() {\n    const postgresStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.postgresStatus : null;\n    const masDaemonStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.masDaemonStatus : null;\n    const uptime1Minute = this.props.beHealth\n      ? `${this.props.beHealth.masSystemsMonitor.uptime1Minute},${this.props.beHealth.masSystemsMonitor.uptime5Minutes},${this.props.beHealth.masSystemsMonitor.uptime15Minutes}`\n      : null;\n\n    const daysUntilExpire = this.props.beLicence ? this.props.beLicence.licensed_feature[1].daysUntilExpire : null;\n    const expirationDate = this.props.beLicence ? this.props.beLicence.licensed_feature[1].expirationDate : null;\n    const licenseStatus = this.props.beLicence ? this.props.beLicence.licensed_feature[1].licenseStatus : null;\n\n    return (\n      <div className={this.props.className}>\n        <div className=\"logo-container\">\n          <img className=\"vendita-logo img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          <LightTooltip\n            placement=\"right\"\n            title={\n              <>\n                <div>\n                  <span style={{ paddingRight: '2px' }}>UI </span>version:&nbsp;\n                  {pkg.version}\n                </div>\n                <div>\n                  <span>BE </span>version:&nbsp;\n                  {this.props.beVersion}\n                </div>\n\n                <div>\n                <span>BE </span>License: {(licenseStatus ? 'MAS Lite' : 'MAS Full')} <br />\n                  Expiration Date: {expirationDate} <br />\n                  Days Until Expire: {daysUntilExpire} <br />\n                </div>\n              </>\n            }\n          >\n            <img className=\"mas-logo img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n          </LightTooltip>\n        </div>\n        <div className=\"nav-area\">\n          {/*<div style={{ position: 'relative', bottom: '17px', right: '2px' }}>\n          {masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {!masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {!postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {uptime1Minute && (\n            <div style={{ top: '23px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          {!uptime1Minute && (\n            <div style={{ top: '20px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          </div>*/}\n          <Navigation />\n        </div>\n        <div className=\"bottom\">\n          <Compile />\n          <UserMenu user={this.props.currentUser.get('name')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebarContainer.propTypes = {\n  className: PropTypes.string,\n  currentUser: PropTypes.object.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  currentUser: currentUserSelector(state),\n  beVersion: beVersionSelector(state),\n  beLicence: beLicenceSelector(state),\n  beHealth: beHealthSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getBeVersion: data => dispatch(actions.getBeVersion.dispatchLoading(data)),\n  getBeLicence: data => dispatch(actions.getBeLicence.dispatchLoading(data)),\n  getBeHealth: data => dispatch(actions.getBeHealth.dispatchLoading(data))\n});\n\nSidebarContainer.defaultProps = {\n  className: 'sidebar'\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarContainer);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarOutline } from '@mdi/js';\n\nimport './favorites.local.scss';\n\nexport class Favorites extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-nav-favorites`}>\n        <SvgIcon>\n          <Icon path={mdiStarOutline} />\n        </SvgIcon>\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  className: PropTypes.string\n};\n\nFavorites.defaultProps = {\n  className: 'favorites'\n};\n\nexport default Favorites;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { navigationItems } from './constants';\n\nimport './navigation.local.scss';\n\nexport class Navigation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      navId: '',\n      anchorElement: null\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setCurrentNavItem();\n  }\n\n  componentDidUpdate() {\n    this.setCurrentNavItem();\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {navigationItems.map((item, index) => {\n          if (item.items && item.items.length > 0) {\n            return (\n              <div key={index}>\n                <div\n                  role=\"presentation\"\n                  key={index}\n                  className={`nav-item ${\n                    this.state.activeTab === index || this.state.navId === item.id ? ' active ' : ''\n                  } ${item.qaClass ? item.qaClass : ''}`}\n                  onMouseEnter={(event) => this.handlePopoverOpen(event, item.id)}\n                  onMouseLeave={() => this.handlePopoverClose(item.id)}\n                >\n                  <IconButton className=\"icon\">{item.icon}</IconButton>\n                  <p>{item.title}</p>\n                </div>\n                <Popover\n                  className=\"nav-sublist-container\"\n                  anchorEl={this.state.anchorElement}\n                  open={this.state.navId === item.id}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={this.setCloseDropdown}>\n                      <MenuList className=\"nav-sublist-menu\" id=\"menu-list-grow\">\n                        {item.items.map(subItem => (\n                          subItem.group ? (\n                            <div className=\"menu-group-item\">{subItem.title}</div>\n                          ) : (\n                            <MenuItem\n                              key={subItem.to}\n                              className={subItem.qaClass}\n                              to={subItem.to}\n                              component={Link}\n                              onClick={this.setCloseDropdown}\n                            >\n                              {subItem.title}\n                            </MenuItem>\n                          )\n                        ))}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Popover>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              role=\"presentation\"\n              key={item.to}\n              className={`nav-item ${this.state.activeTab === index ? 'active' : ''} ${\n                item.qaClass ? item.qaClass : ''\n              }`}\n              onClick={() => this.setActiveTab(index, item.to)}\n              onMouseEnter={() => this.handlePopoverClose(item.id)}\n            >\n              <IconButton className=\"icon\">{item.icon}</IconButton>\n              <p>{item.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page) {\n      this.props.history.push(page);\n    }\n    this.setState({ navId: '' });\n  };\n\n  handlePopoverOpen = (event, name) => {\n    this.setState({ navId: name, anchorElement: event.target });\n  };\n\n  handlePopoverClose = (name) => {\n    if (this.state.navId !== name) {\n      this.setState({ navId: '', anchorElement: null });\n    }\n  };\n\n  setActiveTab = (newActiveTab, page) => {\n    this.props.history.push(page);\n    this.setState({ activeTab: newActiveTab, navId: '' });\n  };\n\n  setCurrentNavItem() {\n    const index = navigationItems.findIndex(\n      item =>\n        item.to === this.props.location.pathname || this.props.location.pathname.startsWith(item.to)\n    );\n\n    if (this.state.activeTab !== index) {\n      this.setState({ activeTab: index });\n    }\n  }\n}\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nNavigation.defaultProps = {\n  className: 'navigation'\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nimport './notification.local.scss';\n\nexport class Notification extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-notification`}>\n        <NotificationsNoneIcon />\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  className: PropTypes.string\n};\n\nNotification.defaultProps = {\n  className: 'notification'\n};\n\nexport default Notification;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Logout } from 'session/pages';\n\nimport './user-menu.local.scss';\nimport { ChangePassword } from '../../../../../users-manager/users/pages/UserView/containers/ChangePassword';\n\nexport class UserMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n\n    this.menuAnchorRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"user-menu qa-user-menu\"\n          ref={this.menuAnchorRef}\n          onClick={this.setToggleDropdown}\n          role=\"presentation\"\n        >\n          <LightTooltip placement=\"right\" title={this.props.user}>\n            <Avatar className=\"user-avatar\">{this.props.user.substring(0, 2).toUpperCase()}</Avatar>\n          </LightTooltip>\n        </div>\n\n        <Popover\n          className=\"user-menu-list-container\"\n          anchorEl={this.menuAnchorRef.current}\n          open={this.state.isVisible}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList\n                className=\"user-menu-list\"\n                autoFocusItem={this.state.isVisible}\n                id=\"menu-list-grow\"\n              >\n                {/*{this.props.user === 'mas' && (\n                  <MenuItem\n                    className=\"qa-user-menu-admin\"\n                    onClick={event => this.openAdminPage(event)}\n                  >\n                    <FormattedMessage id=\"navigation.admin\" />\n                  </MenuItem>\n                )}*/}\n                {/*<MenuItem\n                  className=\"qa-user-menu-groups\"\n                  onClick={event => this.setCloseDropdown(event, 'help')}\n                >\n                  <FormattedMessage id=\"navigation.help\" />\n                </MenuItem>*/}\n                <MenuItem className=\"qa-user-menu-change-pwd\" onKeyDown={event => event.stopPropagation()}>\n                  <ChangePassword\n                    user={this.props.user}\n                    useLinkTrigger=\"true\"\n                  />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-logout\" to={Logout.path} component={Link}>\n                  <FormattedMessage id=\"navigation.logout\" />\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popover>\n      </>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page === 'help') {\n      window.open(\n        'https://masmanual.venditabeta.com/index.php/Vendita_MAS_Documentation_Library#User_Guides_MAS_3.0',\n        '_blank'\n      );\n    }\n\n    this.setState({ isVisible: false });\n  };\n\n  openAdminPage = (event) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    window.open(\n      `https://${window.location.host}/admin/`,\n      '_blank'\n    );\n\n    this.setState({ isVisible: false });\n  };\n\n  setToggleDropdown = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible\n    }));\n  };\n}\n\nUserMenu.propTypes = {\n  user: PropTypes.string.isRequired\n};\n\nexport default withRouter(UserMenu);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\n\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { postCompile } from 'shared/api/compile';\n\nimport { fetchEntity } from '../../../../../entities/actions';\n\nimport './compile.local.scss';\nimport { useDispatch } from 'react-redux';\n\nexport const Compile = () => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => setOpen(true),\n    close: () => {\n      setOpen(false);\n      setStep('confirmation');\n    }\n  };\n  const [step, setStep] = useState('confirmation');\n\n  return (\n    <>\n      <div className=\"compile\">\n        <Tooltip title=\"Compile\">\n          <VideoLibraryOutlinedIcon onClick={modalActions.open} />\n        </Tooltip>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {step === 'confirmation' && <Confirmation setStep={setStep} />}\n        {step === 'compiler' && <Compiler />}\n      </Modal>\n    </>\n  );\n};\n\nconst Confirmation = ({ setStep }) => {\n  const { actions } = useContext(ModalContext);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '350px',\n        maxHeight: '368px',\n        maxWidth: '65vw'\n      }}\n    >\n      <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n      <Paper.Content scrollable={false}>\n        <Result type=\"fail\">\n          <BodyText>\n            <p style={{ fontWeight: 'normal' }}>\n              This command will recompile all the processes and refresh the process list. This\n              usually takes about 1 to 2 minutes.\n            </p>\n            <p style={{ textAlign: 'center' }}>Do you want to proceed?</p>\n          </BodyText>\n        </Result>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            onClick={() => {\n              actions.close();\n            }}\n          >\n            No\n          </Button>\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            onClick={() => {\n              setStep('compiler');\n            }}\n          >\n            Yes\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </Paper>\n  );\n};\n\nconst Compiler = () => {\n  const [compilation, setCompilation] = useState('compiling');\n  const dispatch = useDispatch();\n\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    console.log('[started compilation'); // eslint-disable-line\n    postCompile()\n      .then(() => {\n        setCompilation('refreshing');\n\n        Promise.all([dispatch(fetchEntity('process')), dispatch(fetchEntity('namespace'))])\n          .then(() => {\n            setCompilation('success');\n            console.log('[succeded compilation'); // eslint-disable-line\n          })\n          .catch(() => {\n            setCompilation('success-no-reload');\n            console.log(results, '[succeded compilation. failed to reload entities.'); // eslint-disable-line\n          });\n      })\n      .catch(() => {\n        setCompilation('failed');\n        console.log('[failed compilation'); // eslint-disable-line\n      });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '430px',\n        minHeight: '330px'\n      }}\n    >\n      <ModalHeader icon={<VideoLibraryOutlinedIcon />} title=\"Compile\" />\n      <Switch value={compilation}>\n        <Switch.Case value=\"compiling\">\n          <Center>\n            <Loader>Running compilation...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"refreshing\">\n          <Center>\n            <Loader>Loading processes...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"failed\">\n          <Center>\n            <Result type=\"fail\">\n              <Result.Text compact>Compilation failed.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success-no-reload\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded</Result.Text>\n              <Result.Text compact>Could not refresh processes list.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header';\n\nimport { Main, Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-process.local.scss';\nimport { Breadcrumbs, Link } from '@material-ui/core';\n\nimport ConnectedJobView from './job-view';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getQuery, getInvocationStatus, getInvocation } from './store/selectors';\nimport { processQuery } from './store/actions';\nimport { InvocationStatus } from './store/constants';\n\nimport './root.local.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\n\nconst JobProcess = () => {\n  const query = useQuery();\n\n  const uuid = query.get('invocation');\n  const processName = query.get('process');\n  const redirected = query.get('redirected');\n\n  return (\n    <>\n      <Header>\n        <Breadcrumbs classes={{ root: 'job-main-breadcrumbs' }} aria-label=\"breadcrumb\">\n          <LinkRouter to=\"/jobs\">Jobs</LinkRouter>\n          <OtherMainLinks />\n        </Breadcrumbs>\n      </Header>\n      <Main>\n        <Paper>\n          <PrepareFlow uuid={uuid} process={processName}>\n            <ConnectedJobView redirected={redirected === 'true'} />\n          </PrepareFlow>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n\nexport default JobProcess;\n\nfunction PrepareFlow({ children, uuid, process }) {\n  const query = useSelector(getQuery);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(processQuery(uuid, process));\n  }, [uuid]);\n\n  if (query.uuid !== uuid) {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Setting up invocation viewer</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return children;\n}\n\nfunction OtherMainLinks() {\n  const status = useSelector(getInvocationStatus);\n  const invocation = useSelector(getInvocation);\n\n  if (status === InvocationStatus.NEW) {\n    return <div className=\"current-job\">New Job</div>;\n  }\n\n  if (invocation && invocation.designation) {\n    return (\n      <LimitlessTooltip\n        placement=\"bottom-start\"\n        title={\n          <>\n            <p>Invocation: {invocation.designation}</p>\n            {invocation.schedule && <p>Schedule: {invocation.schedule}</p>}\n          </>\n        }\n      >\n        <div className=\"current-job\">{invocation.designation}</div>\n      </LimitlessTooltip>\n    );\n  }\n\n  return null;\n}\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  CHECK_AUTHORIZATION: '[session] CHECK_AUTHORIZATION',\n  LOGIN: '[session] LOGIN',\n  LOGOUT: '[session] LOGOUT',\n  BE_VERSION: '[session] BE_VERSION',\n  BE_LICENCE: '[session] BE_LICENCE',\n  BE_HEALTH: '[session] BE_HEALTH'\n};\n\nexport const sessionActions = {\n  checkAuthorization: new ActionCreator(actionsTypes.CHECK_AUTHORIZATION),\n  login: new ActionCreator(actionsTypes.LOGIN),\n  logout: new ActionCreator(actionsTypes.LOGOUT),\n  getBeVersion: new ActionCreator(actionsTypes.BE_VERSION),\n  getBeLicence: new ActionCreator(actionsTypes.BE_LICENCE),\n  getBeHealth: new ActionCreator(actionsTypes.BE_HEALTH)\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* checkAuthorization({ payload }) {\n  RestClient.setBasicAuth();\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_USER(payload), {\n      page_size: 2147483645\n    });\n\n    const userDetails = {\n      name: response.data.data.source.user\n    };\n\n    if (response.data.data.users && response.data.data.users[0]) {\n      [userDetails.details] = response.data.data.users;\n    }\n\n    yield put(actions.checkAuthorization.dispatchSuccess(userDetails));\n  } catch (errors) {\n    yield put(actions.checkAuthorization.dispatchFail());\n  }\n}\n\nexport function* CheckAuthorizationEffect() {\n  yield takeEvery(actions.checkAuthorization.getLoadingAction(), checkAuthorization);\n}\n","export default {\n  INTL: 'en',\n  BASE: {\n    HOST: '/mas',\n    VERSION: '',\n    TIMEOUT: 2000 * 60,\n    ENDPOINTS: {\n      LOGIN: '/authenticate',\n      CURRENT_USER: name => `user/${name}`,\n      CURRENT_TIME: '/current/time',\n      DAEMON_STATUS: 'daemon/status',\n      JOB_COUNT: '/invocation/dashboard/job_count',\n      JOBS: '/invocation',\n      PROCESSES: '/process',\n      USERS: '/user',\n      DATATYPES: '/type',\n      PROTOTYPES: '/prototype',\n      GROUPS: '/group',\n      ACCOUNTS: '/account',\n      FORMS: '/form',\n      FORM: '/form',\n      PROTOCOLS: '/protocol',\n      DOWNLOAD_PACKAGING: '/download/oracle_report',\n      SESSIONS: name => `/system/explorer/${name}/all_sessions`,\n      DB_LAST_BACKUP: '/system/explorer/backup_last_24hr',\n      DB_STATUS: '/system/explorer/dbstate',\n      EXECUTIVE_DASHBOARD: '/nexecdash',\n      MSSQL_EXECUTIVE_DASHBOARD: '/ms_dash',\n      VIRTUAL_EXECUTIVE_DASHBOARD: 'execdashboard/virtual',\n      STORAGE_DF: name => `/system/explorer/${name}/df_free_space`,\n      STORAGE_TS: '/system/explorer/ts_usage',\n      BE_VERSION: '/version',\n      BE_LICENCE: '/mondata?id_montype=1',\n      BE_HEALTH: '/mondata?id_montype=2',\n      UPLOAD_ACCOUNTS: '/account/batch',\n      DOWNLOAD_CSV_TEMPLATE: '/download/csv_batch_import_sample',\n      LICENSES_INFO: '/dbpollster/license_data_fetch',\n      AVAILABLE_SERVERS: '/dbpollster/servers',\n      SUBMIT_LICENSE_ASSIGNMENT: '/dbpollster/license_data_insert',\n      UPDATE_LICENSE_ASSIGNMENT: '/dbpollster/license_data_update',\n      DELETE_LICENSE_ASSIGNMENT: '/dbpollster/license_data_delete',\n      UPLOAD_SUPPORT_RENEWAL_FILE: '/dbpollster/supportrenewals',\n      UPLOAD_MAS_LICENSE_FILE: '/dbpollster/licenses',\n    }\n  }\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\nimport Cookie from 'js-cookie';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* login(action) {\n  try {\n    Cookie.set(\n      'Authorization',\n      Buffer.from(`${action.payload.username}:${action.payload.password}`).toString('base64')\n    );\n    RestClient.setBasicAuth();\n    yield RestClient.post(CONSTANTS.BASE.ENDPOINTS.LOGIN);\n    yield put(actions.login.dispatchSuccess());\n    yield put(actions.checkAuthorization.dispatchLoading(action.payload.username));\n    localStorage.setItem('username', JSON.stringify(action.payload.username));\n  } catch (errors) {\n    if (!errors.response) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: 'Unknown Error. Please contact the administrator!'\n          }\n        ])\n      );\n      return;\n    }\n\n    if (errors.response.data.status === 422) {\n      yield put(actions.login.dispatchFail(errors.response.data.error.details));\n      return;\n    }\n\n    if (errors.response.data.status === 401) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors.response.data.status === 500) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors?.response?.statusText) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    throw errors;\n  }\n}\n\nexport function* LoginEffect() {\n  yield takeEvery(actions.login.getLoadingAction(), login);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { Login } from 'session/pages';\n\nfunction loginPath() {\n  return process.env.NODE_ENV === 'development'\n    ? window.location.replace(Login.path)\n    : window.location.replace(`/ui/#${Login.path}`);\n}\n\nfunction* logout() {\n  localStorage.removeItem('username');\n  RestClient.removeBasicAuth();\n  loginPath();\n  yield put(actions.logout.dispatchSuccess());\n}\n\nexport function* LogoutEffect() {\n  yield takeEvery(actions.logout.getLoadingAction(), logout);\n}\n","module.exports = __webpack_public_path__ + \"svgs/ae6021ac50f5c1e93465ff63ea3769d4.svg\";","module.exports = __webpack_public_path__ + \"svgs/0e998e182da8161761cd7209592a7dae.svg\";","module.exports = __webpack_public_path__ + \"svgs/fc315038f28eb52f1b1228e70e8919d6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { isInclusivelyAfterDay } from 'shared/lib';\n\nimport { DateRangePicker, DateRangePickerPhrases, DateRangePickerShape } from 'react-dates';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n} from './constants';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  // initialStartDate: momentPropTypes.momentObj,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  startDateId: PropTypes.string,\n  startDatePlaceholderText: PropTypes.string,\n  endDateId: PropTypes.string,\n  endDatePlaceholderText: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDates: PropTypes.bool,\n  showDefaultInputIcon: PropTypes.bool,\n  customInputIcon: PropTypes.object,\n  customArrowIcon: PropTypes.node,\n  customCloseIcon: PropTypes.object,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: PropTypes.string,\n  orientation: PropTypes.string,\n  anchorDirection: PropTypes.string,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.string,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDates: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  // navigation related props\n  navPosition: PropTypes.string,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.string,\n  renderDayContents: PropTypes.func,\n  minimumNights: PropTypes.number,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization\n  displayFormat: PropTypes.func,\n  monthFormat: PropTypes.string,\n  phrases: DateRangePickerPhrases,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: (day) => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: (date) => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  render() {\n    const { focusedInput } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={this.props.startDate}\n          endDate={this.props.endDate}\n        />\n      </div>\n    );\n  }\n\n  onDatesChange(range) {\n    this.props.onDatesChange(range);\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  GET_JOBS: '[jobs] GET_JOBS',\n  GET_CONNECTIONS: '[jobs] GET_CONNECTIONS',\n  SEARCH_JOBS: '[jobs] SEARCH_JOBS'\n};\n\nexport const jobsActions = {\n  getJobs: new ActionCreator(actionsTypes.GET_JOBS),\n  getConnections: new ActionCreator(actionsTypes.GET_CONNECTIONS),\n  searchJobs: new ActionCreator(actionsTypes.SEARCH_JOBS)\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SEARCH_PROCESSES: '[processes] SEARCH_PROCESSES',\n};\n\nexport const processActions = {\n  searchProcesses: new ActionCreator(actionsTypes.SEARCH_PROCESSES),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  UPDATE_GLOBAL_FILTERS: '[shared] UPDATE_GLOBAL_FILTERS',\n};\n\nexport const globalFiltersActions = {\n  setGlobalFilters: new ActionCreator(actionsTypes.UPDATE_GLOBAL_FILTERS),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SET_FILTER_STATUS: '[dashboard] SET_FILTER_STATUS'\n};\n\nexport const filterStatusActions = {\n  setFilterStatus: new ActionCreator(actionsTypes.SET_FILTER_STATUS)\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport function checkDaemon() {\n  return RestClient.get(CONSTANTS.BASE.ENDPOINTS.DAEMON_STATUS);\n}\n","import { createSelector } from 'reselect';\n\nexport const isDaemonRunning = createSelector(\n  state => state.daemon,\n  daemon => {\n    return daemon.running;\n  }\n);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Loader } from 'shared/components/loaders';\nimport { Center, Switch } from 'shared/components';\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiServer } from '@mdi/js';\nimport { CircleImg, NumberLabel } from '../../../shared/components';\nimport './ServersList.local.scss';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AddServerCard } from '../../../explorer/containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../../explorer/containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../../explorer/containers/ImportCSV/ImportCSV';\nimport Button from '@material-ui/core/Button';\n\nexport const ServersList = ({ loading, dbms, getAllAccounts }) => {\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  useEffect(() => {\n    getAllAccounts();\n  }, []);\n\n  const handleClick = (event) => {\n    event.stopPropagation();\n    setAnchorElement(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorElement(null);\n  };\n\n  const serversNumber = dbms.reduce((acc, el) => acc + el.servers.length, 0);\n\n  return (\n    <Switch value={loading}>\n      <Switch.Case value>\n        <Center>\n          <Loader>Loading Servers</Loader>\n        </Center>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <header onClick={handleClose} role=\"presentation\">\n          <div className=\"widget-title\">\n            <CircleImg\n              image={\n                <SvgIcon>\n                  <Icon path={mdiServer} />\n                </SvgIcon>\n              }\n            />\n            <NumberLabel number={serversNumber} />\n            <Link className=\"servers-link\" to=\"/system/explorer\">Servers</Link>\n          </div>\n\n          <div>\n            <Button\n              startIcon={<AddIcon />}\n              className=\"action-btn\"\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              Add connection\n            </Button>\n            <Menu\n              id=\"connections-menu\"\n              keepMounted\n              anchorEl={anchorElement}\n              open={Boolean(anchorElement)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddServerCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddDatabaseCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <ImportCSV />\n              </MenuItem>\n            </Menu>\n          </div>\n        </header>\n        <div className=\"servers-list\">\n          {dbms.map(el => (\n            <>\n              {el.servers.map(server => (\n                <div className=\"server-item\">\n                  <div className=\"icon-container\">\n                    <SvgIcon>\n                      <Icon path={mdiDns} />\n                    </SvgIcon>\n                  </div>\n                  <div className=\"name-container\">\n                    <span className=\"name\">\n                      <span className=\"dbms\">{el.name}</span>\n                      <span className=\"separator\">/</span>\n                      <span className=\"server\">{server.address}</span>\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </>\n          ))}\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nexport const ConnectedServersList = connect(\n  state => {\n    return {\n      loading: state.explorer.flags.serversUsage.loading,\n      dbms: state.explorer.structured?.dbms || []\n    };\n  },\n  dispatch => ({\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'dashboard' }))\n  })\n)(ServersList);\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\n// import mock from './_mock.json';\n\nfunction* jobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    // yield put(actions.getJobs.dispatchSuccess(mock));\n    yield put(actions.getJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    let reason = '';\n\n    if (\n      errors &&\n      errors.response &&\n      errors.response.data &&\n      errors.response.data.messages &&\n      errors.response.data.messages[0] &&\n      errors.response.data.messages[0].text &&\n      errors.response.data.messages[0].text.startsWith('permission denied')\n    ) {\n      reason = 'rights';\n    }\n\n    yield put(actions.getJobs.dispatchFail({ reason }));\n  }\n}\n\nexport function* JobsEffect() {\n  yield takeEvery(actions.getJobs.getLoadingAction(), jobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* connections() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n      page_size: 2147483645\n    });\n\n    yield put(actions.getConnections.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getConnections.dispatchFail(errors));\n  }\n}\n\nexport function* JobsConnectionsEffect() {\n  yield takeEvery(actions.getConnections.getLoadingAction(), connections);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchJobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    yield put(actions.searchJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchJobs.dispatchFail(errors));\n  }\n}\n\nexport function* SearchJobsEffect() {\n  yield takeEvery(actions.searchJobs.getLoadingAction(), searchJobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchProcesses(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROCESSES, query.payload);\n\n    yield put(actions.searchProcesses.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchProcesses.dispatchFail(errors));\n  }\n}\n\nexport function* SearchProcessesEffect() {\n  yield takeEvery(actions.searchProcesses.getLoadingAction(), searchProcesses);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\n\nfunction* globalFilters(filters) {\n  yield put(actions.setGlobalFilters.dispatchSuccess(filters.payload));\n}\n\nexport function* GlobalFiltersEffect() {\n  yield takeEvery(actions.setGlobalFilters.getLoadingAction(), globalFilters);\n}\n","import { createReducer, types } from 'shared/lib/redux-utils';\n\nimport {\n  ADD_USER_TO_GROUPS,\n  CREATE_USER,\n  DEACTIVATE_USER,\n  GRANT_PRIVILEGE,\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REMOVE_USER_FROM_GROUPS,\n  REVOKE_PRIVILEGE,\n  SELECT_USER,\n  UPDATE_GROUP_CONNECTIONS_LIMIT,\n  UPDATE_USER_EXPIRATION\n} from '../actions';\n\nimport { mapLoadedUser, mapUsersData } from '../mappers';\n\nexport const initialState = {\n  users: {\n    all: [],\n    selected: null\n  },\n  flags: {\n    users: { loading: false },\n    user: { loading: false, deactivating: false, updateExpiration: false },\n    privileges: { disabled: false },\n    group: { updateConnectionsLimit: false }\n  },\n  debug: {\n    user: {},\n    groups_update: {},\n    privileges: {}\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_USERS)]: draft => {\n    draft.flags.users.loading = true;\n  },\n  [types.success(LOAD_ALL_USERS)]: (draft, { payload }) => {\n    draft.users.all = mapUsersData(payload);\n\n    draft.flags.users.loading = false;\n  },\n  [types.action(SELECT_USER)]: (draft, { payload }) => {\n    draft.users.selected = payload;\n  },\n  [types.loading(LOAD_USER)]: draft => {\n    draft.flags.user.loading = true;\n    draft.users.selected = null;\n  },\n  [types.success(LOAD_USER)]: (draft, { payload }) => {\n    draft.flags.user.loading = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.loading(DEACTIVATE_USER)]: draft => {\n    draft.flags.user.deactivating = true;\n  },\n  [types.success(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.users.all = mapUsersData(payload);\n  },\n  [types.fail(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.action(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.loading(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(REMOVE_USER_FROM_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(CREATE_USER)]: draft => {\n    draft.flags.user.creating = true;\n  },\n  [types.success(CREATE_USER)]: draft => {\n    draft.flags.user.creating = false;\n  },\n  [types.fail(CREATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.creating = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(UPDATE_USER_EXPIRATION)]: draft => {\n    draft.flags.user.updateExpiration = true;\n  },\n  [types.success(UPDATE_USER_EXPIRATION)]: draft => {\n    draft.flags.user.updateExpiration = false;\n  },\n  [types.fail(UPDATE_USER_EXPIRATION)]: (draft) => {\n    draft.flags.user.updateExpiration = false;\n  },\n  [types.loading(UPDATE_GROUP_CONNECTIONS_LIMIT)]: draft => {\n    draft.flags.group.updateConnectionsLimit = true;\n  },\n  [types.success(UPDATE_GROUP_CONNECTIONS_LIMIT)]: draft => {\n    draft.flags.group.updateConnectionsLimit = false;\n  },\n  [types.fail(UPDATE_GROUP_CONNECTIONS_LIMIT)]: (draft) => {\n    draft.flags.group.updateConnectionsLimit = false;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  PATCH_SELECTED_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport const initialState = {\n  all: [],\n  ops: {\n    all: { done: false, loading: false },\n    selected: { done: false, loading: false },\n    privileges: { done: false, loading: false },\n    remove: { loading: false },\n    create: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_GROUPS)]: draft => {\n    draft.ops.all = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.loading(LOAD_GROUP)]: draft => {\n    draft.ops.selected = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_GROUP)]: (draft, { payload }) => {\n    const response = payload;\n    draft.selected = response.data.groups[0]; //eslint-disable-line\n    draft.ops.selected = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_GROUP)]: (draft, { payload }) => {\n    draft.selected = null;\n    draft.ops.selected = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.action(PATCH_SELECTED_GROUP)]: (draft, { payload }) => {\n    draft.selected = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REMOVE_USERS_FROM_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(REMOVE_GROUPS_FROM_GROUP)]: draft => {\n    draft.ops.group_subgroups = { loading: true };\n  },\n  [types.success(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(ADD_USERS_TO_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: true };\n  },\n  [types.success(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: false };\n  },\n  [types.fail(CREATE_GROUP)]: (draft, { payload }) => {\n    draft.ops.create = {\n      loading: false,\n      errors: payload\n    };\n  },\n  [types.loading(DELETE_GROUP)]: draft => {\n    draft.ops.remove = { loading: true };\n  },\n  [types.success(DELETE_GROUP)]: draft => {\n    draft.selected = null;\n    draft.ops.remove = { loading: false };\n  },\n  [types.fail(DELETE_GROUP)]: (draft, { payload }) => {\n    draft.ops.remove = { loading: false, errors: payload };\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_MSSQL_DISK_IO,\n  LOAD_MSSQL_FILE_STORAGE,\n  LOAD_MSSQL_STORAGE_USED,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  mapAccountsNewStructure,\n  mapAccountsTree,\n  mapLicenseReport,\n  mapProtocols,\n  mapUpdateDBStatus\n} from '../mappers';\n\nexport const initialState = {\n  accounts: [],\n  rawAccounts: [],\n  flags: {\n    accounts: { loading: false },\n    protocols: { loading: false },\n    sessions: { loading: false },\n    storage: { loadingPoints: false, loadingDetails: false },\n    objects: { loading: false },\n    license: { loading: false },\n    topSqlStatements: { loading: false },\n    reports: { loading: false },\n    serversUsage: { loading: true },\n    collectionProcesses: {\n      hardware: { loading: false, wasExecuted: false },\n      preSoftware: { loading: false, wasExecuted: false },\n      software: { loading: false, wasExecuted: false },\n      vmware: { loading: false },\n      packaging: { loading: false },\n      mssqlSingleServerUsage: { loading: false },\n      mssqlMultiServerUsage: { loading: false },\n    }\n  },\n  sessions: [],\n  storage: {\n    storedEntries: {},\n    selected: null\n  },\n  objects: {\n    selectedOwner: null,\n    selectedObject: null,\n    storedEntries: {}\n  },\n  licenses: [],\n  reports: {},\n  protocols: [],\n  state: {\n    path: '',\n    level: 'all-dbms'\n  },\n  serversUsage: {},\n  dbLastBackup: [],\n  dbStatus: [],\n  collectionProcesses: {\n    hardware: null,\n    preSoftware: null,\n    software: null,\n    vmware: null,\n    packaging: null,\n    mssqlSingleServerUsage: null,\n    mssqlMultiServerUsage: null,\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_ACCOUNTS)]: draft => {\n    draft.flags.accounts.loading = true;\n  },\n  [types.success(LOAD_ALL_ACCOUNTS)]: (draft, { payload }) => {\n    draft.accounts = mapAccountsTree(payload.data.accounts);\n    draft.structured = mapAccountsNewStructure(payload.data.accounts, payload.protocols);\n    draft.rawAccounts = payload.data.accounts;\n\n    draft.state.path = '';\n    draft.state.level = 'all-dbms';\n\n    draft.flags.accounts.loading = false;\n  },\n  [types.loading(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = true;\n  },\n  [types.success(LOAD_PROTOCOLS)]: (draft, { payload }) => {\n    draft.protocols = mapProtocols(payload.data.protocols);\n    draft.flags.protocols.loading = false;\n  },\n  [types.fail(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = false;\n  },\n  [CHANGE_STATE]: (draft, { payload }, base) => {\n    draft.state = { ...base.state, ...payload };\n  },\n  [types.loading(LOAD_ALL_LICENSES)]: draft => {\n    draft.flags.license.loading = true;\n  },\n  [types.success(LOAD_ALL_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload.data.invocations;\n    draft.flags.license.loading = false;\n  },\n  [types.loading(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = true;\n  },\n  [types.success(LOAD_TOP_SQL_STATEMENTS)]: (draft, { payload }) => {\n    draft.topSqlStatements = payload;\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.fail(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.loading(LICENSE_FULL_REPORT)]: draft => {\n    draft.flags.reports.loading = true;\n  },\n  [types.success(LICENSE_FULL_REPORT)]: (draft, { payload }) => {\n    const { reportData } = payload;\n    draft.reports.data = mapLicenseReport(reportData);\n    draft.flags.reports.loading = false;\n  },\n  [types.loading(PROVIDE_SERVERS_USAGE)]: draft => {\n    draft.flags.serversUsage.loading = true;\n  },\n  [types.success(PROVIDE_SERVERS_USAGE)]: (draft, { payload }) => {\n    draft.flags.serversUsage.loading = false;\n    draft.serversUsage = payload;\n  },\n  [types.loading(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = true;\n  },\n  [types.fail(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.success(LOAD_STORAGE_POINTS)]: (draft, { payload }, base) => {\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      points: payload.data\n    };\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.loading(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = true;\n  },\n  [types.fail(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = false;\n  },\n  [types.success(LOAD_STORAGE_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.storage.loadingDetails = false;\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      details: payload.data\n    };\n  },\n  [types.loading(LOAD_MSSQL_DISK_IO)]: draft => {\n    draft.flags.storage.loadingDiskIO = true;\n  },\n  [types.fail(LOAD_MSSQL_DISK_IO)]: draft => {\n    draft.flags.storage.loadingDiskIO = false;\n  },\n  [types.success(LOAD_MSSQL_DISK_IO)]: (draft, { payload }) => {\n    draft.flags.storage.loadingDiskIO = false;\n    draft.storage.mssqlDiskIO = payload.data;\n  },\n  [types.loading(LOAD_MSSQL_STORAGE_USED)]: draft => {\n    draft.flags.storage.loadingStorageUsed = true;\n  },\n  [types.fail(LOAD_MSSQL_STORAGE_USED)]: draft => {\n    draft.flags.storage.loadingStorageUsed = false;\n  },\n  [types.success(LOAD_MSSQL_STORAGE_USED)]: (draft, { payload }) => {\n    draft.flags.storage.loadingStorageUsed = false;\n    draft.storage.mssqlStorageUsed = payload.data;\n  },\n  [types.loading(LOAD_MSSQL_FILE_STORAGE)]: draft => {\n    draft.flags.storage.loadingFileStorage = true;\n  },\n  [types.fail(LOAD_MSSQL_FILE_STORAGE)]: draft => {\n    draft.flags.storage.loadingFileStorage = false;\n  },\n  [types.success(LOAD_MSSQL_FILE_STORAGE)]: (draft, { payload }) => {\n    draft.flags.storage.loadingFileStorage = false;\n    draft.storage.mssqlFileStorage = payload.data;\n  },\n  [types.success(SET_STORAGE_NS)]: (draft, { payload }) => {\n    draft.storage.selected = payload;\n  },\n  [types.loading(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = true;\n  },\n  [types.fail(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = false;\n  },\n  [types.success(LOAD_OBJECT_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.objects.loading = false;\n    draft.objects.storedEntries[payload.key] = { ...base.objects.storedEntries[payload.key] };\n    payload.data.forEach(({ name, res }) => {\n      draft.objects.storedEntries[payload.key][name] = res;\n    });\n  },\n  [types.success(SET_SELECTED_OBJECT)]: (draft, { payload }) => {\n    draft.objects.selectedObject = payload.object;\n    draft.objects.selectedOwner = payload.owner;\n  },\n  [types.loading(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = true;\n  },\n  [types.success(LOAD_SESSIONS)]: (draft, { payload }) => {\n    draft.flags.sessions.loading = false;\n    // sort flags should be sent to backend and not stored on state.\n    draft.flags.sessions.sort = payload.sort;\n    draft.sessions = payload.data;\n  },\n  [types.fail(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = false;\n  },\n  [types.success(PROVIDE_DB_LAST_BACKUP)]: (draft, { payload }) => {\n    draft.dbLastBackup = payload;\n  },\n  [types.success(PROVIDE_DB_STATUS)]: (draft, { payload }) => {\n    draft.dbStatus = payload;\n  },\n  [types.success(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, true);\n  },\n  [types.fail(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = true;\n  },\n  [types.success(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n    draft.collectionProcesses[payload.name] = payload.data;\n  },\n  [types.fail(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n  },\n  [EXECUTE_COLLECTION_PROCESS]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].wasExecuted = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport {\n  DESELECT_ALL,\n  LOAD_DB_EDITION,\n  LOAD_DB_VERSION,\n  LOAD_LICENSE_DELTA,\n  LOAD_MSSQL_DB_VERSIONS,\n  LOAD_MSSQL_ENVIRONMENT_USAGE,\n  LOAD_MSSQL_NETWORK_EDGES,\n  LOAD_MSSQL_NETWORK_NODES,\n  LOAD_MSSQL_OS_TYPES,\n  LOAD_MSSQL_SERVER_DETAILS,\n  LOAD_MSSQL_USAGE,\n  LOAD_NETWORK_EDGES,\n  LOAD_NETWORK_NODES,\n  LOAD_OS_TYPE,\n  LOAD_SERVER_DETAILS,\n  LOAD_USAGE,\n  LOAD_USAGE_STAT,\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\nimport { mapAllServers, mapVirtualServers } from '../mappers';\n\nexport const initialState = {\n  rawEntries: [],\n  allServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  selectedServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  rawVirtualServers: [],\n  virtualServers: [],\n  flags: {\n    dashboard: { loading: false, callFailed: false },\n    virtual: { loading: false },\n    network: {\n      nodesLoading: false,\n      edgesLoading: false,\n      serverDetailsLoading: false,\n    },\n    techDetails: {\n      osTypeLoading: false,\n      dbEditionLoading: false,\n      dbVersionLoading: false,\n    },\n    licensableFeatures: {\n      loading: false,\n    },\n    usageStat: {\n      loading: false,\n    },\n    licenseDelta: {\n      loading: false,\n    },\n    mssqlLicenseUsage: {\n      loading: false,\n    },\n    mssqlNetwork: {\n      nodesLoading: false,\n      edgesLoading: false,\n      serverDetailsLoading: false,\n    },\n    mssqlEnvironmentUsage: {\n      loading: false,\n    },\n    mssqlDbVersions: {\n      loading: false,\n    },\n    mssqlOsTypes: {\n      loading: false,\n    },\n  },\n  networkNodes: [],\n  networkEdges: [],\n  networkServerDetails: {},\n  techDetails: {\n    osType: [],\n    dbEdition: [],\n    dbVersion: [],\n  },\n  licensableFeatures: [],\n  usageStat: {},\n  licenseDelta: [],\n  mssqlLicenseUsage: [],\n  mssqlNetworkNodes: [],\n  mssqlNetworkEdges: [],\n  mssqlNetworkServerDetails: {},\n  mssqlEnvironmentUsage: [],\n  mssqlDbVersions: [],\n  mssqlOsTypes: []\n};\n\nexport const producers = {\n  [types.loading(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = true;\n  },\n  [types.success(PROVIDE_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawEntries = payload.execdashboard;\n    draft.allServers = mapAllServers(payload.execdashboard);\n    draft.selectedServers = mapAllServers(payload.execdashboard);\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [DESELECT_ALL]: draft => {\n    draft.selectedServers = [];\n  },\n  [SELECT_ALL]: (draft, { payload }) => {\n    draft.selectedServers = mapAllServers(payload);\n  },\n  [TOGGLE_SERVER]: (draft, { payload }) => {\n    draft.selectedServers = payload;\n  },\n  [types.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = true;\n  },\n  [types.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawVirtualServers = payload?.execdashboard_virtual;\n    draft.virtualServers = mapVirtualServers(payload?.execdashboard_virtual);\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [types.loading(LOAD_NETWORK_NODES)]: draft => {\n    draft.flags.network.nodesLoading = true;\n  },\n  [types.success(LOAD_NETWORK_NODES)]: (draft, { payload }) => {\n    draft.networkNodes = payload;\n    draft.flags.network.nodesLoading = false;\n  },\n  [types.fail(LOAD_NETWORK_NODES)]: draft => {\n    draft.flags.network.nodesLoading = false;\n    draft.networkNodes = [];\n  },\n  [types.loading(LOAD_NETWORK_EDGES)]: draft => {\n    draft.flags.network.edgesLoading = true;\n  },\n  [types.success(LOAD_NETWORK_EDGES)]: (draft, { payload }) => {\n    draft.networkEdges = payload;\n    draft.flags.network.edgesLoading = false;\n  },\n  [types.fail(LOAD_NETWORK_EDGES)]: draft => {\n    draft.flags.network.edgesLoading = false;\n    draft.networkEdges = [];\n  },\n  [types.loading(LOAD_SERVER_DETAILS)]: draft => {\n    draft.flags.network.serverDetailsLoading = true;\n  },\n  [types.success(LOAD_SERVER_DETAILS)]: (draft, { payload }) => {\n    draft.networkServerDetails = payload;\n    draft.flags.network.serverDetailsLoading = false;\n  },\n  [types.fail(LOAD_SERVER_DETAILS)]: draft => {\n    draft.flags.network.serverDetailsLoading = false;\n    draft.networkServerDetails = {};\n  },\n  [types.loading(LOAD_OS_TYPE)]: draft => {\n    draft.flags.network.osTypeLoading = true;\n  },\n  [types.success(LOAD_OS_TYPE)]: (draft, { payload }) => {\n    draft.techDetails.osType = payload;\n    draft.flags.techDetails.osTypeLoading = false;\n  },\n  [types.fail(LOAD_OS_TYPE)]: draft => {\n    draft.flags.network.osTypeLoading = false;\n    draft.techDetails.osType = [];\n  },\n  [types.loading(LOAD_DB_EDITION)]: draft => {\n    draft.flags.network.dbEditionLoading = true;\n  },\n  [types.success(LOAD_DB_EDITION)]: (draft, { payload }) => {\n    draft.techDetails.dbEdition = payload;\n    draft.flags.techDetails.dbEditionLoading = false;\n  },\n  [types.fail(LOAD_DB_EDITION)]: draft => {\n    draft.flags.network.dbEditionLoading = false;\n    draft.techDetails.dbEdition = [];\n  },\n  [types.loading(LOAD_DB_VERSION)]: draft => {\n    draft.flags.network.dbVersionLoading = true;\n  },\n  [types.success(LOAD_DB_VERSION)]: (draft, { payload }) => {\n    draft.techDetails.dbVersion = payload;\n    draft.flags.techDetails.dbVersionLoading = false;\n  },\n  [types.fail(LOAD_DB_VERSION)]: draft => {\n    draft.flags.network.dbVersionLoading = false;\n    draft.techDetails.dbVersion = [];\n  },\n  [types.loading(LOAD_USAGE)]: draft => {\n    draft.flags.licensableFeatures.loading = true;\n  },\n  [types.success(LOAD_USAGE)]: (draft, { payload }) => {\n    draft.licensableFeatures = payload;\n    draft.flags.licensableFeatures.loading = false;\n  },\n  [types.fail(LOAD_USAGE)]: draft => {\n    draft.flags.licensableFeatures.loading = false;\n    draft.licensableFeatures = [];\n  },\n  [types.loading(LOAD_USAGE_STAT)]: draft => {\n    draft.flags.usageStat.loading = true;\n  },\n  [types.success(LOAD_USAGE_STAT)]: (draft, { payload }) => {\n    draft.usageStat = payload;\n    draft.flags.usageStat.loading = false;\n  },\n  [types.fail(LOAD_USAGE_STAT)]: draft => {\n    draft.flags.usageStat.loading = false;\n    draft.usageStat = {};\n  },\n  [types.loading(LOAD_LICENSE_DELTA)]: draft => {\n    draft.flags.licenseDelta.loading = true;\n  },\n  [types.success(LOAD_LICENSE_DELTA)]: (draft, { payload }) => {\n    draft.licenseDelta = payload;\n    draft.flags.licenseDelta.loading = false;\n  },\n  [types.fail(LOAD_LICENSE_DELTA)]: draft => {\n    draft.flags.licenseDelta.loading = false;\n    draft.licenseDelta = [];\n  },\n  [types.loading(LOAD_MSSQL_USAGE)]: draft => {\n    draft.flags.mssqlLicenseUsage.loading = true;\n  },\n  [types.success(LOAD_MSSQL_USAGE)]: (draft, { payload }) => {\n    draft.mssqlLicenseUsage = payload;\n    draft.flags.mssqlLicenseUsage.loading = false;\n  },\n  [types.fail(LOAD_MSSQL_USAGE)]: draft => {\n    draft.flags.mssqlLicenseUsage.loading = false;\n    draft.mssqlLicenseUsage = [];\n  },\n  [types.loading(LOAD_MSSQL_NETWORK_NODES)]: draft => {\n    draft.flags.mssqlNetwork.nodesLoading = true;\n  },\n  [types.success(LOAD_MSSQL_NETWORK_NODES)]: (draft, { payload }) => {\n    draft.mssqlNetworkNodes = payload;\n    draft.flags.mssqlNetwork.nodesLoading = false;\n  },\n  [types.fail(LOAD_MSSQL_NETWORK_NODES)]: draft => {\n    draft.flags.mssqlNetwork.nodesLoading = false;\n    draft.mssqlNetworkNodes = [];\n  },\n  [types.loading(LOAD_MSSQL_NETWORK_EDGES)]: draft => {\n    draft.flags.mssqlNetwork.edgesLoading = true;\n  },\n  [types.success(LOAD_MSSQL_NETWORK_EDGES)]: (draft, { payload }) => {\n    draft.mssqlNetworkEdges = payload;\n    draft.flags.mssqlNetwork.edgesLoading = false;\n  },\n  [types.fail(LOAD_MSSQL_NETWORK_EDGES)]: draft => {\n    draft.flags.mssqlNetwork.edgesLoading = false;\n    draft.mssqlNetworkEdges = [];\n  },\n  [types.loading(LOAD_MSSQL_SERVER_DETAILS)]: draft => {\n    draft.flags.mssqlNetwork.serverDetailsLoading = true;\n  },\n  [types.success(LOAD_MSSQL_SERVER_DETAILS)]: (draft, { payload }) => {\n    draft.mssqlNetworkServerDetails = payload;\n    draft.flags.mssqlNetwork.serverDetailsLoading = false;\n  },\n  [types.fail(LOAD_MSSQL_SERVER_DETAILS)]: draft => {\n    draft.flags.mssqlNetwork.serverDetailsLoading = false;\n    draft.mssqlNetworkServerDetails = {};\n  },\n  [types.loading(LOAD_MSSQL_ENVIRONMENT_USAGE)]: draft => {\n    draft.flags.mssqlEnvironmentUsage.loading = true;\n  },\n  [types.success(LOAD_MSSQL_ENVIRONMENT_USAGE)]: (draft, { payload }) => {\n    draft.mssqlEnvironmentUsage = payload;\n    draft.flags.mssqlEnvironmentUsage.loading = false;\n  },\n  [types.fail(LOAD_MSSQL_ENVIRONMENT_USAGE)]: draft => {\n    draft.flags.mssqlEnvironmentUsage.loading = false;\n    draft.mssqlEnvironmentUsage = [];\n  },\n  [types.loading(LOAD_MSSQL_DB_VERSIONS)]: draft => {\n    draft.flags.mssqlDbVersions.loading = true;\n  },\n  [types.success(LOAD_MSSQL_DB_VERSIONS)]: (draft, { payload }) => {\n    draft.mssqlDbVersions = payload;\n    draft.flags.mssqlDbVersions.loading = false;\n  },\n  [types.fail(LOAD_MSSQL_DB_VERSIONS)]: draft => {\n    draft.flags.mssqlDbVersions.loading = false;\n    draft.mssqlDbVersions = [];\n  },\n  [types.loading(LOAD_MSSQL_OS_TYPES)]: draft => {\n    draft.flags.mssqlOsTypes.loading = true;\n  },\n  [types.success(LOAD_MSSQL_OS_TYPES)]: (draft, { payload }) => {\n    draft.mssqlOsTypes = payload;\n    draft.flags.mssqlOsTypes.loading = false;\n  },\n  [types.fail(LOAD_MSSQL_OS_TYPES)]: draft => {\n    draft.flags.mssqlOsTypes.loading = false;\n    draft.mssqlOsTypes = [];\n  },\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport { LOAD_AVAILABLE_SERVERS, LOAD_DB_LICENSES, LOAD_LICENSE_TARGETS, LOAD_LICENSES } from '../actions';\n\nexport const initialState = {\n  licenses: [],\n  dbLicenses: [],\n  licenseTargets: [],\n  availableServers: [],\n  flags: {\n    licenses: { loading: false },\n    dbLicenses: { loading: false },\n    licenseTargets: { loading: false },\n    availableServers: { loading: false },\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_LICENSES)]: draft => {\n    draft.flags.licenses.loading = true;\n  },\n  [types.success(LOAD_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload;\n    draft.flags.licenses.loading = false;\n  },\n  [types.fail(LOAD_LICENSES)]: draft => {\n    draft.flags.licenses.loading = false;\n  },\n\n  [types.loading(LOAD_DB_LICENSES)]: draft => {\n    draft.flags.dbLicenses.loading = true;\n  },\n  [types.success(LOAD_DB_LICENSES)]: (draft, { payload }) => {\n    draft.dbLicenses = payload;\n    draft.flags.dbLicenses.loading = false;\n  },\n  [types.fail(LOAD_DB_LICENSES)]: draft => {\n    draft.flags.dbLicenses.loading = false;\n  },\n\n  [types.loading(LOAD_LICENSE_TARGETS)]: draft => {\n    draft.flags.licenseTargets.loading = true;\n  },\n  [types.success(LOAD_LICENSE_TARGETS)]: (draft, { payload }) => {\n    draft.licenseTargets = payload;\n    draft.flags.licenseTargets.loading = false;\n  },\n  [types.fail(LOAD_LICENSE_TARGETS)]: draft => {\n    draft.flags.licenseTargets.loading = false;\n  },\n\n  [types.loading(LOAD_AVAILABLE_SERVERS)]: draft => {\n    draft.flags.availableServers.loading = true;\n  },\n  [types.success(LOAD_AVAILABLE_SERVERS)]: (draft, { payload }) => {\n    draft.availableServers = payload;\n    draft.flags.availableServers.loading = false;\n  },\n  [types.fail(LOAD_AVAILABLE_SERVERS)]: draft => {\n    draft.flags.availableServers.loading = false;\n  },\n};\n\nexport default createReducer(producers, initialState);\n","export const initialState = {\n  data: {},\n  fetch_status: {\n    account: 'not-fetched',\n    constant: 'not-fetched',\n    exception: 'not-fetched',\n    form: 'not-fetched',\n    namespace: 'not-fetched',\n    process: 'not-fetched',\n    prototype: 'not-fetched',\n    schedule: 'not-fetched',\n    type: 'not-fetched',\n    alias: 'not-fetched'\n  },\n  isLoading: true,\n  breadcrumbs: [],\n  filters: {\n    type: 'all',\n    search: ''\n  }\n};\n\nexport function FETCH_ENTITIES_REQUEST(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'fetching';\n}\n\nexport function FETCH_ENTITIES_SUCCESS(nextState, { entityType, result }) {\n  nextState.data[entityType] = result;\n  nextState.fetch_status[entityType] = 'fetched';\n}\n\nexport function FETCH_ENTITIES_FAILURE(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'failed';\n}\n\nexport function FETCH_ENTITIES_ALL_REQUEST(nextState) {\n  nextState.isLoading = true;\n}\n\nexport function FETCH_ENTITIES_ALL_SUCCESS(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function FETCH_ENTITIES_ALL_FAILURE(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function SELECT_ENTITY(nextState, { entity, index }, state) {\n  nextState.breadcrumbs.splice(index, state.breadcrumbs.length - 1);\n  nextState.breadcrumbs[index] = entity.name.split('.').pop();\n}\n\nexport function CLEAR_SELECTED_ENTITY(nextState) {\n  nextState.breadcrumbs = [];\n}\n\nexport function UPDATE_FILTERS(nextState, { name, value }) {\n  nextState.filters[name] = value;\n  if (name === 'type' || name === 'search') {\n    nextState.breadcrumbs = [];\n  }\n}\n","export const initialState = {\n  running: true\n};\n\nexport function DAEMON_STATUS_REQUEST() {}\n\nexport function DAEMON_STATUS_SUCCESS(nextState, { result }) {\n  nextState.running = !!result?.data?.data?.running;\n}\n\nexport function DAEMON_STATUS_FAILURE(nextState) {\n  nextState.running = false;\n}\n","import { InvocationStatus } from './constants';\n\nexport const initialState = {\n  loading: true,\n  query: { processed: false },\n  fetchedInvocation: false,\n  invocation: { status: 'NOT_FETCHED' }\n};\n\nexport function PROCESS_QUERY(nextState, { uuid, process }) {\n  nextState.query = { processed: true, uuid, process };\n  if (uuid) {\n    nextState.invocation = { status: 'NOT_FETCHED' };\n  } else {\n    nextState.invocation = { status: '__NEW__', process: process || '' };\n  }\n}\n\nexport function FETCH_INVOCATION_SUCCESS(nextState, { result }) {\n  const [recieved] = result.data.data.invocations;\n  nextState.invocation = recieved;\n}\n\nexport function FETCH_INVOCATION_FAILURE(nextState, { process }) {\n  nextState.invocation = { status: InvocationStatus.NEW, process };\n}\n\nexport function REPLACE_INVOCATION(nextState, { invocation }) {\n  nextState.invocation = invocation;\n}\n","export const api = () => next => async action => {\n  const { type, promise, schema, ...rest } = action;\n  const isPromise = promise instanceof Promise;\n  if (!isPromise || !type) {\n    next(action);\n    return;\n  }\n\n  next({ type: `${type}_REQUEST`, ...rest });\n  try {\n    const result = await promise;\n    if (schema) {\n      next({ type, ...rest, data: result, schema });\n    }\n    next({ type: `${type}_SUCCESS`, ...rest, result });\n  } catch (error) {\n    console.error('[middlewares] error: ', error); // eslint-disable-line\n    next({ type: `${type}_FAILURE`, ...rest, error });\n  }\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  ADD_NOTIFICATIONS: '[core] ADD_NOTIFICATIONS',\n  REMOVE_NOTIFICATION: '[core] REMOVE_NOTIFICATION',\n};\n\nexport const notificationActions = {\n  addNotifications: new ActionCreator(actionsTypes.ADD_NOTIFICATIONS),\n  removeNotification: new ActionCreator(actionsTypes.REMOVE_NOTIFICATION),\n};\n","import React from 'react';\nimport { any, func } from 'prop-types';\nimport { Center } from 'shared/components/layout';\nimport './job-list.local.scss';\nimport { connect } from 'react-redux';\nimport { currentUserSelector } from 'session/store/state';\n\nconst JobList = ({ items, filters, children, loggedUser }) => {\n  const noneAvailable = items.size === 0;\n\n  if (noneAvailable) {\n    return <NoJobs />;\n  }\n\n  return (\n    <div className=\"list-container\">\n      <ul>\n        {items.map((item, index, list) => (\n          <li key={index} className=\"list-item\">\n            {children(item, index, filters, loggedUser, list)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nJobList.propTypes = {\n  items: any,\n  children: func\n};\n\nJobList.defaultProps = {\n  items: []\n};\n\nfunction NoJobs() {\n  return (\n    <Center>\n      <p>There are no jobs available with the selected filters</p>\n    </Center>\n  );\n}\n\nexport const ConnectedJobList = connect(\n  state => {\n    return {\n      loggedUser: currentUserSelector(state),\n    };\n  }\n)(JobList);\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { ViewTabs } from '../ViewTabs/ViewTabs';\nimport { Documentation } from '../Documentation/Documentation';\nimport { ConnectedScheduleForm } from '../../containers/ScheduleForm/ScheduleForm';\nimport { getProcess } from 'shared/api/process';\nimport { getSchedule } from 'shared/api/schedule';\n\nexport const ScheduleModal = ({\n  open,\n  actions,\n  invocation,\n  isScheduled,\n  result,\n  setResult,\n  selectedOption,\n  canSelectProcess,\n  filledValues,\n  setFilledValues\n}) => {\n  const [tab, setTab] = useState('schedule');\n  const [processDetails, setProcessDetails] = useState({});\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const newSchedule = selectedOption === 'edit-schedule';\n  const formRef = useRef();\n  useEffect(() => {\n    if (isScheduled && invocation?.schedule) {\n      getSchedule(invocation.schedule)\n        .then(data => {\n          if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n            setScheduleDetails(data.data.data.schedules[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n    if (invocation && invocation.process) {\n      getProcess(invocation.process)\n        .then(data => {\n          if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n            setProcessDetails(data.data.data.processes[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n  }, []);\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '85vw',\n          minHeight: '85vh',\n          maxWidth: '85vw',\n          maxHeight: '85vh'\n        }}\n      >\n        <ModalHeader\n          title=\"New Schedule\"\n          icon={\n            <SvgIcon>\n              <SlowMotionVideoIcon />\n            </SvgIcon>\n          }\n          formikRef={formRef}\n        />\n        <Switch value={result}>\n          <Switch.Case value=\"success\">\n            <Result type=\"success\">\n              <Result.Text>Schedule was added successfully!</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Done\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"fail\">\n            <Result type=\"fail\">\n              <Result.Text>\n                <p>An error occurred and the new schedule could not be added.</p>{' '}\n                <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                  <a\n                    role=\"presentation\"\n                    onClick={() => {\n                      setResult('');\n                    }}\n                  >\n                    Go back to form\n                  </a>\n                </p>\n              </Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Close\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"\">\n            <Paper.Header>\n              <ViewTabs active={tab} changeTab={setTab} invocation={invocation} />\n            </Paper.Header>\n            <Switch value={tab}>\n              <Switch.Case value=\"schedule\">\n                <ConnectedScheduleForm\n                  setResult={setResult}\n                  invocation={newSchedule ? scheduleDetails : invocation}\n                  filledValues={filledValues}\n                  setFilledValues={setFilledValues}\n                  formRef={formRef}\n                  selectedOption={selectedOption}\n                  canSelectProcess={canSelectProcess}\n                  isScheduled={isScheduled}\n                />\n              </Switch.Case>\n              <Switch.Case value=\"documentation\">\n                <Paper.Content>\n                  <Documentation process={processDetails} />\n                </Paper.Content>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nexport function ViewTabs({ active, changeTab, invocation }) {\n  const tabs = [{ label: 'Schedule', value: 'schedule', active: true }];\n\n  if (invocation) {\n    tabs.push({ label: 'Documentation', value: 'documentation' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React from 'react';\n\nimport { Section } from 'shared/components/layout';\n\nexport const Documentation = ({ process }) => {\n  if (!process) {\n    return <Section>Select a process in order to see its documentation</Section>;\n  }\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { fetchEntity } from 'entities/actions';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport {\n  PLATFORMS,\n  PlatformSelect,\n  PROCESS_TYPES,\n  ProcessSelect,\n  ProcessTypeSelect\n} from 'shared/components/form/editors/Custom';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { patchSchedule, postSchedule } from 'shared/api/schedule';\nimport { mapScheduledNames } from 'entities/mappers';\nimport { isEmpty, pickBy } from 'lodash';\nimport { CronValidator } from '../../../../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../../../../shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport moment from 'moment';\n\nimport './ScheduleForm.scss';\n\nclass ScheduleFormComp extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { invocation } = this.props;\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    this.state = {\n      monitor: derivedMonitor,\n      serverTime: null,\n      everyHourWarningShown: false\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n\n    const { wasSCheduleCallDone, request } = this.props;\n    if (!wasSCheduleCallDone) {\n      request('schedule');\n    }\n  }\n\n  render() {\n    const {\n      setResult,\n      request,\n      allScheduledNames,\n      invocation,\n      isScheduled,\n      filledValues,\n      setFilledValues,\n      selectedOption,\n      canSelectProcess,\n      formRef\n    } = this.props;\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    const isEditing = selectedOption === 'edit-schedule';\n\n    const availableProcess = (platformVal, typeVal, processVal) => {\n      const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n      const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n      const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n      const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n      return (platformMatches && typeMatches) ? processVal : '';\n    };\n\n    const nameValue = () => {\n      if (isScheduled && invocation?.name) {\n        const splittedName = invocation.name.split('.');\n        const name = splittedName[splittedName.length - 1];\n\n        return name;\n      }\n\n      return invocation?.name || undefined;\n    };\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          if (isScheduled && invocation?.name) {\n            const splittedName = invocation.name.split('.');\n            const name = splittedName[splittedName.length - 1];\n\n            if (name !== sch_name) {\n              errors.sch_name = 'A schedule with this name already exists';\n            }\n          } else {\n            errors.sch_name = 'A schedule with this name already exists';\n          }\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{}}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, invocation, isEditing, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <PlatformSelect\n                                name=\"platform\"\n                                label=\"Platform\"\n                                description=\"Select a platform to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(value, formik.values.type, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <ProcessTypeSelect\n                                name=\"type\"\n                                label=\"Type\"\n                                description=\"Select a type to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(formik.values.platform, value, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          <Column xs={4}>\n                            <ProcessSelect\n                              name=\"process\"\n                              label=\"Process\"\n                              value={filledValues?.process || invocation?.process}\n                              disabled={invocation !== undefined}\n                              required\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || nameValue()}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || invocation?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || invocation?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_hr\"\n                              label=\"T_hr\"\n                              value={filledValues?.t_hr || invocation?.t_hr || '*'}\n                              description={CronValidator.FORMAT_MSG.HOURS}\n                            />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_day\"\n                              label=\"T_Day\"\n                              value={filledValues?.t_day || invocation?.t_day || '*'}\n                              description={CronValidator.FORMAT_MSG.DAYS}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_mon\"\n                              label=\"T_mon\"\n                              value={filledValues?.t_mon || invocation?.t_mon || '*'}\n                              description={CronValidator.FORMAT_MSG.MONTH}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_wkd\"\n                              label=\"T_wkd\"\n                              value={filledValues?.t_wkd || invocation?.t_wkd || '*'}\n                              description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || invocation?.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nexport const ConnectedScheduleForm = connect(\n  state => {\n    return {\n      wasSCheduleCallDone: state.entities?.data?.schedule,\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(ScheduleFormComp);\n\nasync function handleSubmit(\n  monitor,\n  setResult,\n  request,\n  setFilledValues,\n  invocation,\n  isEditing,\n  values\n) {\n  const {\n    platform,\n    type,\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  if (isEditing) {\n    body.rename = sch_name;\n  } else {\n    body.name = sch_name;\n  }\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  if (isEditing) {\n    patchSchedule(invocation.name, body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  } else {\n    postSchedule(body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  }\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n","export const formatAccount = account => {\n  const prefix = `${account.protocol.toLowerCase()}://${account.user}:******@${account.address}:${\n    account.port\n  }`;\n  const { special } = account;\n\n  if (special?.database) {\n    return `${prefix}/${special.database}`;\n  }\n\n  return prefix;\n};\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default: {\n      const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n      const matches = regex.exec(deflt);\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return Number.parseInt(matches[2]); // eslint-disable-line\n          case 'str': {\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            // const json = `[${matches[2]}]`;\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          }\n\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n    }\n  }\n  return null;\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst Groups = ({ groups, onSelect, eventTypeIcons = [] }) => {\n  const renderGroupsList = () => {\n    if (Array.isArray(groups) && groups.length) {\n      return groups.map(item => {\n        return (\n          <ListItem\n            onClick={() => onSelect(item)}\n            selected={item.selected}\n            key={item.data.name}\n            button\n          >\n            <ListItemIcon>\n              <GroupIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n            </ListItemIcon>\n            <ListItemText primary={item.data.name} />\n            <ListItemSecondaryAction>\n              {item.displayIcons && eventTypeIcons.map(icon => icon)}\n              <SvgIcon size=\"small\" edge=\"end\" color=\"primary\">\n                <path d={item.selected ? mdiChevronLeft : mdiChevronRight} />\n              </SvgIcon>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Groups:</div>\n      </div>\n      <List dense disablePadding>\n        {renderGroupsList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Button } from 'shared/components/controls';\n\nimport './users.scss';\n\nconst Users = ({\n  users,\n  onSelect,\n  onSelectUserAction,\n  isClearActionAvailable,\n  isGroupSelected,\n  eventTypeIcons\n}) => {\n  const renderUsersList = () => {\n    if (Array.isArray(users) && users.length) {\n      let emptyListMessage = '';\n      if (!isGroupSelected) {\n        emptyListMessage = 'Please select a group to view its users.';\n      } else if (!users.find(item => item.display)) {\n        emptyListMessage = 'No users available in the group.';\n      }\n      if (emptyListMessage) {\n        return (\n          <div className=\"notifications-users-empty-list\">\n            <PermIdentityIcon size=\"small\" />\n            <span>{emptyListMessage}</span>\n          </div>\n        );\n      }\n      return users\n        .filter(user => user.display)\n        .map(user => {\n          return (\n            <ListItem\n              onClick={() => onSelect(user)}\n              selected={user.selected}\n              key={user.data.name}\n              button\n            >\n              <ListItemIcon>\n                <PersonIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n              </ListItemIcon>\n              <ListItemText primary={user.data.name} />\n              <ListItemSecondaryAction classes={{ root: 'notifications-users-check-wrap' }}>\n                {user.selected && eventTypeIcons.map(icon => icon)}\n                <Checkbox\n                  onChange={() => onSelect(user)}\n                  edge=\"end\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  checked={user.selected}\n                  classes={{ root: 'checkbox-custom' }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n    }\n    return null;\n  };\n\n  const currentActionLabel = isClearActionAvailable ? 'Clear' : 'Select all';\n  const shouldDisplayAction = isGroupSelected && users.find(item => item.display);\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Users:</div>\n        {shouldDisplayAction && (\n          <Button role=\"presentation\" onClick={() => onSelectUserAction(isClearActionAvailable)}>\n            {currentActionLabel}\n          </Button>\n        )}\n      </div>\n      <List dense disablePadding>\n        {renderUsersList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport classnames from 'classnames';\nimport './events.scss';\n\nconst Events = ({ jobStart, jobCompletion, abnormalEvent, onSelect, areUsersSelected }) => {\n  const classes = classnames('notification-events', { 'events-wrap-disabled': !areUsersSelected });\n  return (\n    <div className={classes}>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-title\">Event type:</div>\n        </div>\n        <span>\n          <PlayCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job start</span>\n        </span>\n        <span>\n          <CheckCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job completion</span>\n        </span>\n        <span>\n          <ErrorOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">abnormal event</span>\n        </span>\n      </div>\n      <div className=\"notification-events-col old-notice\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n      </div>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Center } from 'shared/components/layout';\n\nimport { Button } from 'shared/components/controls';\n\nimport './notification-list.scss';\nimport { withStyles } from '@material-ui/core';\n\nconst UserChip = withStyles({\n  root: {\n    background: 'rgba(55, 101, 175, 0.08)',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '& > svg': {\n      marginLeft: '8px'\n    }\n  }\n})(Chip);\n\nconst NotificationList = ({ users, eventTypeIcons, toggleApplyButton, disabled }) => {\n  const filteredUsers = users.filter(user => user.selected);\n  const renderUserList = () => {\n    if (!filteredUsers.length) {\n      return <Center>No notifications applied</Center>;\n    }\n    return filteredUsers.map(user => {\n      return (\n        <UserChip\n          classes={{ root: 'notification-list-item' }}\n          label={\n            <>\n              <span>{user.data.name}</span>\n              {eventTypeIcons}\n            </>\n          }\n          color=\"default\"\n          icon={<PersonIcon size=\"small\" />}\n        />\n      );\n    });\n  };\n\n  let buttonLabel = 'Add';\n  let buttonIcon = <NotificationsNoneIcon />;\n  if (filteredUsers.length) {\n    buttonLabel = 'Edit';\n    buttonIcon = <EditIcon />;\n  }\n\n  return (\n    <div className=\"notification-list-wrapper\">\n      <div>{renderUserList()}</div>\n      <div className=\"notification-list-edit-section\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={toggleApplyButton}\n          startIcon={buttonIcon}\n          endIcon={<ArrowDropDownIcon />}\n          classes={{ root: 'notifications-add-edit' }}\n          disabled={disabled}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport GroupIcon from '@material-ui/icons/Group';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './Entity.scss';\n\n/* eslint-disable */\nconst Entity = ({ entity, selectEntity, columns, entityIcons }) => {\n  const cls = classnames('entity', {\n    '--isSelected': entity.isSelected,\n    'account-entity': entity.entity === 'account'\n  });\n  const user = entity.user_owner;\n  const aliasStr = entity.alias;\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={cls}\n      onClick={event => {\n        selectEntity(entity, columns.level);\n\n        const target = event.currentTarget;\n        const box = target.getBoundingClientRect();\n        const parent = target.parentNode.parentNode;\n\n        setTimeout(function() {\n          parent.scrollTo({ left: box.right, behavior: 'smooth' });\n        }, 200);\n      }}\n    >\n      <LightTooltip placement=\"bottom\" title={entity.entity || ''}>\n        <div className=\"entity-icon-wrap\">{entityIcons[entity.entity]}</div>\n      </LightTooltip>\n      <div className=\"entity-details\">\n        <div className=\"entity-name\">\n          {!!aliasStr && (\n            <div title={`Alias of ${aliasStr}`}>\n              <FilterNoneIcon />\n            </div>\n          )}\n          <LightTooltip placement=\"bottom\" title={entity.name}>\n            <span>{entity.name}</span>\n          </LightTooltip>\n        </div>\n        <div className=\"entity-user\">\n          <GroupIcon />\n          <span>{user}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/* eslint-enable */\n\nexport default Entity;\n","import React from 'react';\nimport Switch from '../components/Switch';\nimport ActionsNamespace from '../components/ActionsNamespace';\nimport ActionsConstant from '../components/ActionsConstant';\nimport ActionsProcess from '../components/ActionsProcess';\nimport ActionsForm from '../components/ActionsForm';\nimport ActionsRoot from '../components/ActionsRoot';\nimport ActionsPrototype from '../components/ActionsPrototype';\nimport ActionsSchedule from '../components/ActionsSchedule';\nimport ActionsCommon from '../components/ActionsCommon';\nimport GroupIcon from '@material-ui/icons/Group';\nimport './SelectedEntity.scss';\n\nconst SelectedEntity = ({ selectedEntity, entityIcons }) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  return (\n    <div className=\"selected-entity\">\n      <div className=\"selected-entity-title\">\n        <div className=\"selected-entity-title-icon\">{entityIcons[selectedEntity.entity]}</div>\n        <div className=\"selected-entity-title-details\">\n          {selectedEntity.name}\n          <div className=\"selected-entity-title-user\">\n            <GroupIcon />\n            <span>{selectedEntity.user_owner}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"entity-detail-wrap\">\n        <div className=\"entity-description-wrap\">{selectedEntity.description}</div>\n\n        <Switch value={selectedEntity.entity}>\n          <Switch.Case value=\"root\">\n            <ActionsRoot />\n          </Switch.Case>\n\n          <Switch.Case value=\"namespace\">\n            <ActionsNamespace entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"constant\">\n            <ActionsConstant entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"form\">\n            <ActionsForm entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"process\">\n            <ActionsProcess entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"prototype\">\n            <ActionsPrototype entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"schedule\">\n            <ActionsSchedule entity={selectedEntity} />\n          </Switch.Case>\n        </Switch>\n        <ActionsCommon entity={selectedEntity} />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedEntity;\n","import React from 'react';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nimport { ConnectedEditNamespace } from './namespace-actions/EditNamespace';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\nimport { ConnectedDeleteNamespace } from './namespace-actions/DeleteNamespace';\n\nconst ActionsNamespace = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const hasWrite = hasWritePrivileges(entity);\n\n  return (\n    <>\n      <ConnectedNewNamespace namespace={entity} />\n      {hasWrite && <ConnectedEditNamespace namespace={entity} />}\n      {deleteRights(entity, hasWrite) && (\n        <ConnectedDeleteNamespace entity={entity} disabled={disableActions} />\n      )}\n    </>\n  );\n};\n\nfunction deleteRights(entity, hasWrite) {\n  return hasWrite && entity.owner !== 'postgres';\n}\n\nexport default ActionsNamespace;\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { getNamespace, patchNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nfunction parseName(namespace) {\n  const split = namespace.name.split('.');\n  const tail = split.length - 1;\n  const parsed = {\n    name: split[tail],\n    fq: namespace.name\n  };\n\n  if (split.length > 1) {\n    parsed.parent = split.slice(0, tail).join('.');\n  } else {\n    parsed.parent = '';\n  }\n\n  return parsed;\n}\n\nexport const ConnectedEditNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    request: fetchEntity\n  }\n)(EditNamespace);\n\nfunction EditNamespace({ namespace, request, nestedNames }) {\n  const canUpdateName = nestedNames.length === 0;\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const split_name = parseName(namespace);\n\n  const getInitialValues = () => {\n    const values = {};\n\n    values.name = split_name.name || '';\n    values.namespace = split_name.parent;\n    values.description = description;\n\n    return values;\n  };\n\n  const getNamespaceDetails = name => {\n    getNamespace(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.namespaces &&\n          data.data.data.namespaces[0] &&\n          data.data.data.namespaces[0].description\n        ) {\n          setDescription(data.data.data.namespaces[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get namespace] error getting namespace details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getNamespaceDetails(namespace.name);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values, split_name);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              {canUpdateName && (\n                                <Text name=\"name\" label=\"Name\" value={values.name} required />\n                              )}\n                              {!canUpdateName && (\n                                <Text\n                                  name=\"name\"\n                                  label=\"Name\"\n                                  value={values.name}\n                                  required\n                                  disabled\n                                  description=\"To update a namespace name, namespace must be empty!\"\n                                />\n                              )}\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                {canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                  />\n                                )}\n                                {!canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                    disabled\n                                    description=\"To update a namespace parent name, namespace must be empty!\"\n                                  />\n                                )}\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values, split_name) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    description: values.description\n  };\n\n  /*\n    If the old entity fully-qualified name does not match with the form value,\n    then we need to add a rename key with the new name.\n   */\n  if (name !== split_name.fq) {\n    body.rename = name;\n  }\n\n  patchNamespace(split_name.fq, body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    refresh: fetchEntity\n  }\n)(DeleteNamespace);\n\nfunction DeleteNamespace({ disabled, entity, refresh, nestedNames }) {\n  const canDelete = nestedNames.length === 0;\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={canDelete}>\n            <Switch.Case value>\n              <Switch value={result}>\n                <Switch.Case value=\"attempt\">\n                  <Paper.Content scrollable={false}>\n                    <Result type=\"fail\">\n                      <BodyText>\n                        Are you sure you want to remove this {type} ? This could affect the way the\n                        user will be able to interact with the app.\n                      </BodyText>\n                    </Result>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          terminator();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"success\">\n                  <Result type=\"success\">\n                    <BodyText>{name} successfully deleted!</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                          refresh(type);\n                        }}\n                      >\n                        Done\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"fail\">\n                  <Result type=\"fail\">\n                    <BodyText>You do not have permissions to delete this entity.</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                        }}\n                      >\n                        Close\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n            <Switch.Case value={false}>\n              <Result type=\"fail\">\n                <BodyText>To delete a namespace it must be empty!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { patchConstant } from 'shared/api/constant';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsConstant = ({ entity }) => {\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConstant constant={entity} />;\n};\n\nexport default ActionsConstant;\n\nexport const ConnectedEditConstant = connect(null, {\n  request: fetchEntity\n})(EditConstant);\n\nfunction EditConstant({ constant, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = constant?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Constant\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Constant was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the constant could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: constant.name, value: constant.value }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" disabled value={constant.name} />\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"value\"\n                                label=\"Value\"\n                                value={constant.value}\n                                description={constant.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const body = {\n    value: values.value\n  };\n\n  patchConstant(values.name, body)\n    .then(() => {\n      setResult('success');\n      request('constant');\n    })\n    .catch(error => {\n      console.log('[edit constant] patch constant error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function patchConstant(name, body) {\n  return RestClient.patch(`/constant/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { ErrorModal, Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { postSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\nimport { isEmpty, pickBy } from 'lodash';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport { EditProcessModal } from './process-actions/EditProcessModal';\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../shared/lib/rest';\nimport moment from 'moment';\nimport { CONSTANTS } from 'config';\n\nimport './ActionsSchedule.scss';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nconst ActionsProcess = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new job.';\n\n  return (\n    <>\n      {entity?.is_executable === false && (\n        <Button\n          classes={{ root: 'entity-button' }}\n          onClick={() => setOpen(true)}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      {entity?.is_executable && (\n        <Button\n          component={LinkBehavior}\n          classes={{ root: 'entity-button' }}\n          to={`/jobs/job?process=${entity.name}&redirected=true`}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      <ConnectedNewSchedule process={entity} isDisabled={isDisabled} />\n      {hasWritePrivileges(entity) && <EditProcessModal process={entity} />}\n      <ErrorModal open={open} actions={modalActions} message={message} />\n    </>\n  );\n};\n\nexport default ActionsProcess;\n\nexport const ConnectedNewSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(NewSchedule);\n\nfunction NewSchedule({ process, isDisabled, request, allScheduledNames }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const [openErrorModal, setOpenErrorModal] = useState(false);\n  const errorModalActions = {\n    open: () => {\n      setOpenErrorModal(true);\n    },\n    close: () => {\n      setOpenErrorModal(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new schedule.';\n\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  // processDetails might be used at a later date\n  const [processDetails, setProcessDetails] = useState({}); // eslint-disable-line\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n\n  const onClickHandler = () => {\n    if (process.is_executable) {\n      setOpen(true);\n    } else {\n      setOpenErrorModal(true);\n    }\n\n    getProcess(process.name)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        New Schedule\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"New Schedule\"\n            icon={\n              <SvgIcon>\n                <SlowMotionVideoIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={process}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={process} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n      <ErrorModal open={openErrorModal} actions={errorModalActions} message={message} />\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nclass ScheduleForm extends React.PureComponent {\n  derivedMonitor = {\n    enabled: false,\n    events: 0,\n    users: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monitor: this.derivedMonitor,\n      serverTime: null\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n  }\n\n  render() {\n    const {\n      process,\n      setResult,\n      allScheduledNames,\n      request,\n      filledValues,\n      setFilledValues,\n      formRef\n    } = this.props;\n\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          errors.sch_name = 'A schedule with this name already exists';\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{ process: process.name }}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"process\"\n                            label=\"Process\"\n                            description={process.description}\n                            value={process.name}\n                            disabled\n                          />\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || undefined}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_hr\" label=\"T_hr\" value={filledValues?.t_hr || '*'} description={CronValidator.FORMAT_MSG.HOURS} />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_day\" label=\"T_Day\" value={filledValues?.t_day || '*'} description={CronValidator.FORMAT_MSG.DAYS} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_mon\" label=\"T_mon\" value={filledValues?.t_mon || '*'} description={CronValidator.FORMAT_MSG.MONTH} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_wkd\" label=\"T_wkd\" value={filledValues?.t_wkd || '*'} description={CronValidator.FORMAT_MSG.DAY_OF_WEEK} />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || process.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={this.derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nasync function handleSubmit(monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { ProcessEditor } from './ProcessEditor';\n\nimport { fetchEntity } from '../../actions';\n\nexport const EditProcessModal = ({ process }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('editing');\n  const formRef = useRef();\n  const modalActions = {\n    open: useCallback(() => {\n      setResult('editing');\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n\n      if (result === 'success') {\n        dispatch(fetchEntity('process'));\n      }\n    }, [result])\n  };\n\n  return (\n    <>\n      <Button classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Edit Process\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Process\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            desc={process.name}\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"editing\">\n              <ProcessEditor process={process} setResult={setResult} formRef={formRef} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Process was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Done</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the process could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Close</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { QualifiedName } from 'shared/components/form/editors/Custom';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { patchProcess } from 'shared/api/process';\n\nimport './ProcessEditor.local.scss';\n\nexport function ProcessEditor({ process, setResult, formRef }) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        saveProcessEdits(values, process, setResult);\n      }}\n      innerRef={formRef}\n    >\n      {() => {\n        return (\n          <>\n            <Paper.Content>\n              <Form>\n                <Section>\n                  <Section.Header>\n                    <Section.Title>Details</Section.Title>\n                  </Section.Header>\n                  <Section.Content>\n                    <Row>\n                      <Column>\n                        <QualifiedName\n                          name=\"process_name\"\n                          label=\"Name\"\n                          value={process.name}\n                          required\n                        />\n                      </Column>\n                    </Row>\n                  </Section.Content>\n                </Section>\n                <Section>\n                  <Section.Content>\n                    {process.steps.map((step, index) => {\n                      return <Step step={step} step_index={index} />;\n                    })}\n                  </Section.Content>\n                </Section>\n              </Form>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <SubmitButton variant=\"contained\">Save</SubmitButton>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nfunction Step({ step, step_index }) {\n  const expressions = parseEvaluatableExpressions(step, step_index);\n  const noEvaluatableExpressions = !expressions.length;\n\n  if (noEvaluatableExpressions) {\n    return null;\n  }\n\n  return (\n    <div className=\"step\">\n      <div className=\"title\">Step: {step.label}</div>\n      <div className=\"description\">{step.description}</div>\n      <div className=\"expressions\">\n        <div className=\"list\">\n          {expressions.map((exp, index) => (\n            <StepExpression key={index} {...exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction StepExpression({ expression, exp_index, step, step_index }) {\n  const name = `step-${step_index}-expression-${exp_index}`;\n  return (\n    <Row>\n      <Text\n        multiline\n        value={expression.evaluate}\n        label={`Expression ${expression.assign || exp_index} of ${step.label}`}\n        name={name}\n        required\n      />\n    </Row>\n  );\n}\n\nfunction parseEvaluatableExpressions(step, step_index) {\n  const { expressions } = step;\n\n  if (!Array.isArray(expressions) || expressions.length === 0) {\n    return [];\n  }\n\n  return expressions.reduce((acc, exp, index) => {\n    if (exp.evaluate) {\n      acc.push({\n        expression: exp,\n        exp_index: index,\n        step,\n        step_index\n      });\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction saveProcessEdits(values, process, setResult) {\n  const { process_name, ...evaluations } = values;\n  const toSend = {};\n\n  const steps = _.cloneDeep(process.steps);\n\n  /**\n   * extract and remap field values.\n   */\n  const extracted = extractFieldInfo(evaluations);\n\n  extracted.forEach(({ step, expression, value }) => {\n    const path = `[${step}].expressions[${expression}].evaluate`;\n\n    _.set(steps, path, value);\n  });\n\n  /** Prepare patch request body */\n  toSend.steps = steps;\n\n  if (process.name !== process_name) {\n    toSend.rename = values.process_name;\n  }\n\n  patchProcess(process.name, toSend)\n    .then(() => {\n      setResult('success');\n    })\n    .catch(() => {\n      setResult('fail');\n    });\n}\n\nfunction extractFieldInfo(all) {\n  const key_struct = /^step-(\\d+)-expression-(\\d+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      step: matched[1],\n      expression: matched[2],\n      value\n    };\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\nimport { postForm } from 'shared/api/form';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButtonNoDirty } from 'shared/components/form/SubmitButtonNoDirty';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { Ensure } from 'core/components/Ensure';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction findFormPrototype(form, prototypes) {\n  const name = form.prototype;\n  const found = prototypes.find(item => item.name === name);\n\n  return found;\n}\n\nfunction findFormEntry(entity, forms) {\n  if (entity.alias) {\n    return forms.find(entry => entry.name === entity.alias);\n  }\n\n  return entity;\n}\n\nconst ActionsForm = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n  return (\n    <>\n      {canWrite && (\n        <Ensure type=\"prototype\" inlineLoader>\n          {({ data: prototypes }) => (\n            <Ensure type=\"form\" inlineLoader>\n              {({ data: forms }) => (\n                <ConnectedFormModal\n                  disabled={disableActions}\n                  form={findFormEntry(entity, forms)}\n                  prototype={findFormPrototype(entity, prototypes)}\n                />\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      )}\n      <ConnectedCopyForm form={entity} />\n    </>\n  );\n};\n\nexport default ActionsForm;\n\nexport const ConnectedCopyForm = connect(null, {\n  request: fetchEntity\n})(CopyForm);\n\nfunction CopyForm({ form, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = form?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Copy\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '300px'\n          }}\n        >\n          <ModalHeader\n            title=\"Copy Form\"\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was copied successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be copied.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: `${form.name}_copy` }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, form.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              Please choose a new name for the copy of form &apos;{form.name}&apos;.\n                            </Section.Header>\n                            <Row>\n                              <Text\n                                name=\"name\"\n                                label=\"Name\"\n                                value={`${form.name}_copy`}\n                                description={form.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButtonNoDirty variant=\"contained\">Save</SubmitButtonNoDirty>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, formName, values) {\n  const body = {\n    name: values.name\n  };\n\n  postForm(formName, body)\n    .then(() => {\n      setResult('success');\n      request('form');\n    })\n    .catch(error => {\n      console.log('[copy form] put form error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useMemo, useContext } from 'react';\n\nimport { Section, Row, Column } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Ensure } from 'core/components/Ensure';\n\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { PackedContext } from './FormEditor';\n\nexport const FormParameters = ({ packed, prototype }) => {\n  return (\n    <Section>\n      <Section.Header />\n      <Section.Content>\n        <Ensure type=\"form\">\n          {({ data: forms }) => (\n            <Ensure type=\"type\">\n              {({ data: datatypes }) => (\n                <Ensure type=\"prototype\">\n                  {({ data: prototypes }) => (\n                    <Ensure type=\"process\">\n                      <FieldsAndGroupsEditor\n                        prototype={prototype}\n                        groups={packed.groups}\n                        prototypes={prototypes}\n                        datatypes={datatypes}\n                        forms={forms}\n                      />\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nconst DataContext = React.createContext({ datatypes: [], forms: [], prototypes: [] });\n\nfunction FieldsAndGroupsEditor({ groups, datatypes, prototypes, forms }) {\n  const entities = useMemo(\n    () => ({\n      datatypes,\n      prototypes,\n      forms\n    }),\n    [datatypes, prototypes, forms]\n  );\n\n  return (\n    <>\n      <DataContext.Provider value={entities}>\n        {groups.map((group, index) => (\n          <FieldGroup key={index} pointer={index} group={group} />\n        ))}\n      </DataContext.Provider>\n    </>\n  );\n}\n\nfunction FieldGroup({ group, pointer }) {\n  return (\n    <>\n      {group.instances.map((instance, index) => (\n        <GroupInstance\n          key={`${pointer}|${index}`}\n          group={group}\n          instance={instance}\n          pointers={{ group: pointer, instance: index }}\n          count={group.instances.length}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction GroupInstance({ group, instance, pointers, count }) {\n  let title = group.name ? `Group ${group.name}` : null;\n  if (group.iteration_limit > 1) {\n    title = group.name\n      ? `Group ${group.name} (${pointers.instance + 1} of ${count})`\n      : `Group (Unnamed) (${pointers.instance + 1} of ${count})`;\n  }\n\n  const canAdd =\n    group.iteration_limit > 1 && count - 1 === pointers.instance && count < group.iteration_limit;\n\n  const { dispatch } = useContext(PackedContext);\n\n  return (\n    <div>\n      <Section.Title>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}\n        >\n          {title}\n          {count !== 1 && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_GROUP_INSTANCE',\n                  pointers\n                });\n              }}\n            >\n              Remove Group\n            </Button>\n          )}\n        </div>\n      </Section.Title>\n      <div>\n        {instance.fields.map((field, index) => (\n          <Field\n            key={`${pointers.group}|${pointers.instance}|${field.name}`}\n            group={group}\n            instance={instance}\n            pointers={{ ...pointers, field: index }}\n            field={field}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {canAdd && (\n          <Button\n            onClick={() => {\n              const fields = instance.fields.map(field => {\n                return {\n                  ...field,\n                  values: [{ instance: 0, value: null }]\n                };\n              });\n              const newInstance = {\n                ...instance,\n                instance: instance.instance + 1,\n                fields\n              };\n\n              dispatch({\n                type: 'ADD_GROUP_INSTANCE',\n                pointers,\n                instance: newInstance\n              });\n            }}\n          >\n            Add Group\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Field({ field, pointers }) {\n  return (\n    <div>\n      {field.values.map((value, index) => (\n        <Value\n          key={`${pointers.group}|${pointers.instance}|${field.name}|${index}`}\n          field={field}\n          value={value.value}\n          pointers={{ ...pointers, value: index }}\n          count={field.values.length}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Value({ field, value, pointers, count }) {\n  const packet = useContext(DataContext);\n\n  const canRemove = field.is_repeatable && count !== 1;\n  const canAdd = field.is_repeatable && pointers.value + 1 === count;\n\n  const { dispatch } = useContext(PackedContext);\n\n  const label = field.is_repeatable\n    ? `${field.name} (${pointers.value + 1} of ${count})`\n    : field.name;\n\n  function uniquedName(name, idx) {\n    const string = `group-${idx.group}-instance-${idx.instance}-field-${idx.field}-value-${idx.value}---${field.name}`;\n\n    return string;\n  }\n\n  const parameter = normalize(\n    {\n      name: uniquedName(field.name, pointers),\n      provided_field_name: field.name,\n      is_required: field.is_required,\n      value,\n      data_type: field.data_type,\n      description: field.description,\n      deflt: field.deflt,\n      meta: field.meta\n    },\n    packet.datatypes,\n    packet.prototypes,\n    packet.forms\n  );\n\n  // for some reason, is_required is set as false for a supported parameter (eg: mas0300.sys.invocation.server_list prototype)\n  // FIX ME: need to investigate further, for now, will make the value the same as field\n  parameter.is_required = field.is_required;\n  // console.log(parameter, field);\n\n  const is_supported = parameter.is_supported && parameter.editor.type !== 'hidden';\n\n  if (!is_supported) {\n    return (\n      <Row key={pointers.value}>\n        <p>{field.name} (Unsuported)</p>\n        <Parameter\n          normalized={{ ...parameter, is_required: false, editor: { type: 'text' } }}\n          disabled\n          label={label}\n        />\n      </Row>\n    );\n  }\n\n  return (\n    <Row key={pointers.value}>\n      <Column key={field.name}>\n        <Parameter normalized={parameter} label={label} />\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          {canAdd && canRemove && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_FIELD_VALUE',\n                  pointers\n                });\n              }}\n            >\n              Remove\n            </Button>\n          )}\n          {canAdd && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                onClick={() => {\n                  dispatch({\n                    type: 'ADD_FIELD_VALUE',\n                    pointers\n                  });\n                }}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n        </div>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\n\nconst ActionsRoot = () => {\n  return (\n    <>\n      <ConnectedNewNamespace />\n    </>\n  );\n};\n\nexport default ActionsRoot;\n","import React from 'react';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nconst ActionsPrototype = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <ConnectedFormModal isNew prototype={entity} disabled={disableActions} />\n    </>\n  );\n};\n\nexport default ActionsPrototype;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport _, { isEmpty, pickBy } from 'lodash';\n\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { getSchedule, patchSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\n\nimport './ActionsSchedule.scss';\n\nconst ActionsSchedule = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConnectedEditSchedule schedule={entity} isDisabled={isDisabled} />\n    </>\n  );\n};\n\nexport default ActionsSchedule;\n\nexport const ConnectedEditSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(EditSchedule);\n\nfunction EditSchedule({ schedule, isDisabled, allScheduledNames, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const [processDetails, setProcessDetails] = useState({});\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n  const [everyHourWarningShown] = useState({});\n\n  useEffect(() => {\n    if (!_.isEmpty(scheduleDetails) && !_.isEmpty(processDetails)) {\n      setOpen(true);\n    }\n  }, [scheduleDetails, processDetails]);\n\n  const onClickHandler = () => {\n    /** TODO cover the case when one (or both) of the below calls fail or no data is returned from them */\n\n    getSchedule(schedule.name)\n      .then(data => {\n        if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n          setScheduleDetails(data.data.data.schedules[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n\n    getProcess(schedule.process)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Schedule\"\n            icon={\n              <SvgIcon>\n                <EventNoteIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={processDetails}\n                    schedule={scheduleDetails}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                    everyHourWarningShown={everyHourWarningShown}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={processDetails} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({\n  schedule,\n  setResult,\n  allScheduledNames,\n  request,\n  filledValues,\n  setFilledValues,\n  formRef,\n  everyHourWarningShown\n}) => {\n  const derivedMonitor = {\n    enabled: !!schedule?.parameters?.events,\n    events: schedule?.parameters?.events || 0,\n    users: schedule?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const splittedName = schedule.name.split('.');\n  const name = splittedName[splittedName.length - 1];\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name) {\n      if (sch_name.includes('.')) {\n        errors.sch_name = 'Name cannot include \".\"';\n      } else if (sch_name.includes(' ')) {\n        errors.sch_name = 'Name cannot include spaces';\n      } else if (allScheduledNames.includes(sch_name) && name !== sch_name) {\n        errors.sch_name = 'A schedule with this name already exists';\n      }\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n      errors.t_hr = 'At least one value should be populated';\n      errors.t_day = 'At least one value should be populated';\n      errors.t_mon = 'At least one value should be populated';\n      errors.t_wkd = 'At least one value should be populated';\n      return errors;\n    }\n\n    if (!CronValidator.isValidMinutes(t_min)) {\n      errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n    }\n\n    if (!CronValidator.isValidHours(t_hr)) {\n      errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n    }\n\n    if (!CronValidator.isValidDays(t_day)) {\n      errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n    }\n\n    if (!CronValidator.isValidMonth(t_mon)) {\n      errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n    }\n\n    if (!CronValidator.isValidWeekDay(t_wkd)) {\n      errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={values => {\n          handleSubmit(schedule, monitor, setResult, request, setFilledValues, values);\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={schedule.description}\n                          value={schedule.process}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"sch_name\"\n                          label=\"Name\"\n                          value={filledValues?.rename || name}\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={filledValues?.description || schedule.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_min\"\n                            label=\"T_min\"\n                            value={filledValues?.t_min || schedule.t_min}\n                            description={CronValidator.FORMAT_MSG.MINUTES}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_hr\"\n                            label=\"T_hr\"\n                            value={filledValues?.t_hr || schedule.t_hr}\n                            description={CronValidator.FORMAT_MSG.HOURS}\n                          />\n                          {everyHourWarningShown && (\n                            <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                          )}\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_day\"\n                            label=\"T_Day\"\n                            value={filledValues?.t_day || schedule.t_day}\n                            description={CronValidator.FORMAT_MSG.DAYS}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_mon\"\n                            label=\"T_mon\"\n                            value={filledValues?.t_mon || schedule.t_mon}\n                            description={CronValidator.FORMAT_MSG.MONTH}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_wkd\"\n                            label=\"T_wkd\"\n                            value={filledValues?.t_wkd || schedule.t_wkd}\n                            description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <ProcessParameters\n                    recieved={filledValues?.parameters || schedule.parameters}\n                    editable\n                  />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(schedule, monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    rename: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  patchSchedule(schedule.name, body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[edit schedule] edit schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getAlias, patchAlias, postAlias } from 'shared/api/alias';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { ConnectedDeleteEntity } from './common-actions/DeleteEntity';\nimport { PrivilegesModal } from './common-actions/privileges/PrivilegesModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction isEntityDeletable(entity) {\n  return (\n    entity.owner !== 'postgres' &&\n    (entity.entity === 'form' ||\n      entity.entity === 'process' ||\n      entity.entity === 'schedule' ||\n      entity.entity === 'account')\n  );\n}\n\nconst ActionsCommon = ({ entity }) => {\n  const displayActions = entity.entity !== 'root';\n  if (displayActions) {\n    const displayDelete = isEntityDeletable(entity);\n    const isAlias = entity.alias;\n    const disableActions = entity?.meta?.appearance === 'Greyed';\n    const canWrite = hasWritePrivileges(entity);\n\n    return (\n      <>\n        {canWrite && (\n          <PrivilegesModal entity={entity} isAlias={isAlias} disabled={disableActions} />\n        )}\n        {!isAlias && <ConnectedNewAlias entity={entity} />}\n        {isAlias && canWrite && <ConnectedEditAlias entity={entity} />}\n        {canWrite && displayDelete && (\n          <ConnectedDeleteEntity entity={entity} disabled={disableActions} />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nexport default ActionsCommon;\n\n//* These should be moved to the common-actions folder */\n\nexport const ConnectedNewAlias = connect(null, {\n  request: fetchEntity\n})(NewAlias);\n\nfunction NewAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: '',\n                  original: entity ? entity.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const alias = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name: values.original,\n    alias,\n    description: values.description\n  };\n\n  postAlias(body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedEditAlias = connect(null, {\n  request: fetchEntity\n})(EditAlias);\n\nfunction EditAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = entity.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.original = entity ? entity.alias : '';\n    values.description = description;\n\n    return values;\n  };\n\n  const getAliasDetails = name => {\n    getAlias(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.aliases &&\n          data.data.data.aliases[0] &&\n          data.data.data.aliases[0].description\n        ) {\n          setDescription(data.data.data.aliases[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get alias] error getting alias details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getAliasDetails(entity.name);\n        }}\n      >\n        Edit Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleEditSubmit(setResult, request, entity.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleEditSubmit(setResult, request, originalName, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    rename: name,\n    description: values.description\n  };\n\n  patchAlias(originalName, body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity, clearSelectedEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteEntity = connect(null, {\n  clearSelected: clearSelectedEntity,\n  refresh: fetchEntity\n})(DeleteEntity);\n\nfunction DeleteEntity({ disabled, entity, refresh, clearSelected }) {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove this {type} ? This could affect the way the user\n                    will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <BodyText>{name} successfully deleted!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                      clearSelected();\n                      refresh(type);\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <BodyText>You do not have permissions to delete this entity.</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { PrivilegesEditor } from './PrivilegesEditor';\n\nexport const PrivilegesModal = ({ disabled, entity, isAlias }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      // refresh(entity.type);\n      setOpen(false);\n    }, [])\n  };\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Privileges\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vw',\n            minHeight: '648px',\n            maxHeight: '648px'\n          }}\n        >\n          <ModalHeader\n            title=\"Privileges\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <PrivilegesEditor entity={entity} isAlias={isAlias} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\n\nimport { Paper, Center, NavigationTab } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Result, ModalContext } from 'shared/components/overlays';\nimport { Button, Checkbox as LabeledCheckbox } from 'shared/components/controls';\n\nimport { getPrivileges, setPrivileges } from 'shared/api/privileges';\n\nimport './PrivilegesEditor.local.scss';\nimport { mdiAccount } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nexport const PrivilegesEditor = ({ entity }) => {\n  const hasAlias = !!entity.alias;\n  const {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    updatePrivilege\n  } = usePrivileges(entity, hasAlias);\n  const [tab, switchTab] = useState('users');\n  const { actions } = useContext(ModalContext);\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader>Loading privileges for entity</Loader>\n      </Center>\n    );\n  }\n\n  if (!data) {\n    return (\n      <Center>\n        <Result type=\"fail\">\n          <Result.Text compact>Could not load privileges list for {entity.name}</Result.Text>\n        </Result>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab\n          active={tab}\n          tabs={[\n            { label: 'Users', value: 'users' },\n            { label: 'Groups', value: 'groups' }\n          ]}\n          onClick={switchTab}\n        />\n      </Paper.Header>\n      <PrivilegesList\n        privileges={data.privileges.filter(p => {\n          if (p.role === 'mas') {\n            return false;\n          }\n          if (p.role === 'admin') {\n            return false;\n          }\n          if (tab === 'users') {\n            return !p.is_group;\n          }\n\n          return p.is_group;\n        })}\n        updater={privilege => {\n          updatePrivilege(privilege);\n        }}\n        updating={updating}\n        entityType={entity.entity}\n        entityName={hasAlias && editAliasParent ? entity.alias : entity.name}\n        isAlias={hasAlias && !editAliasParent}\n      />\n      <Paper.Footer>\n        {!!entity.alias && (\n          <Paper.Footer.Left>\n            <LabeledCheckbox\n              color=\"primary\"\n              icon={<CheckBoxOutlineBlankIcon />}\n              checkedIcon={<CheckBoxIcon />}\n              checked={editAliasParent}\n              onChange={() => {\n                setEditAliasParent(!editAliasParent);\n              }}\n              label=\"Show parent privileges\"\n            />\n          </Paper.Footer.Left>\n        )}\n        <Paper.Footer.Right>\n          <Button color=\"primary\" variant=\"contained\" onClick={actions.close}>\n            Done\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nfunction PrivilegesList({ privileges, updating, updater, entityType, entityName, isAlias }) {\n  const types = privilegeTypes(entityType, isAlias);\n\n  function renderType(type) {\n    return (\n      <div className=\"column role\" key={type}>\n        {type}\n      </div>\n    );\n  }\n\n  function mapByEntity(user_or_group) {\n    return (\n      <div className=\"item\" key={`alias-${isAlias}-role-${user_or_group.role}`}>\n        <div className=\"column role\">\n          <SvgIcon color=\"primary\">\n            <path d={mdiAccount} />\n          </SvgIcon>\n          {user_or_group.role}\n        </div>\n        <div className=\"types\">\n          {types.map(type => {\n            const granted = user_or_group.effective.includes(type);\n            return (\n              <div\n                className=\"column type \"\n                key={`c-alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n              >\n                <Checkbox\n                  key={`alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n                  classes={{ root: 'privilege-checkbox' }}\n                  checked={granted}\n                  disabled={updating}\n                  onChange={() => {\n                    updater({\n                      privilege: type,\n                      enitity_name: entityName,\n                      alias: isAlias,\n                      role: user_or_group.role,\n                      role_type: user_or_group.is_group ? 'group' : 'user',\n                      granted\n                    });\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"privileges\">\n      <div className=\"header\">\n        {renderType('Name')}\n        <div className=\"types\">{types.map(renderType)}</div>\n      </div>\n      <div className=\"list\">\n        {privileges\n          .sort((a, b) => a?.role?.toLowerCase()?.localeCompare(b?.role?.toLowerCase()))\n          .map(mapByEntity)}\n      </div>\n    </div>\n  );\n}\n\nfunction privilegeTypes(entityType, alias = false) {\n  const type = entityType.toLowerCase();\n  const privileges = [];\n  if (!alias) {\n    if (type === 'namespace') {\n      privileges.push('affiliate');\n    } else if (['account', 'constant', 'form', 'process'].includes(type)) {\n      privileges.push('execute');\n    }\n  }\n  privileges.push('read', 'write');\n  return privileges;\n}\n\nfunction usePrivileges(entity, hasAlias) {\n  const [editAliasParent, setEditAliasParent] = useState(!hasAlias);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getPrivileges(\n      hasAlias && editAliasParent ? entity.alias : entity.name,\n      hasAlias && !editAliasParent\n    )\n      .then(resp => {\n        setData(resp?.data?.data?.entities?.[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setData(null);\n        setLoading(false);\n      });\n  }, [editAliasParent]);\n\n  const updatePrivilege = useCallback(\n    privilege => {\n      setUpdating(true);\n      setPrivileges(privilege)\n        .then(resp => {\n          setData(resp?.data?.data?.entities?.[0]);\n          setUpdating(false);\n        })\n        .catch(() => {\n          setUpdating(false);\n        });\n    },\n    [entity, editAliasParent]\n  );\n\n  return {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    setUpdating,\n    setData,\n    updatePrivilege\n  };\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { arrayOf, node, string, shape } from 'prop-types';\n\nimport './HeaderPageSwitch.local.scss';\n\nexport const HeaderPageSwitch = ({ routes }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header-page-switch\" data-qa=\"header-page-switch\">\n      {routes.map(({ to, label }) => (\n        <div\n          key={to}\n          className={classnames('header-page-switch-link', {\n            'active-link': location.pathname.includes(to)\n          })}\n        >\n          <Link key={to} to={to} data-qa={`header-page-switch-link-to-${to}`}>\n            {label}\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nHeaderPageSwitch.propTypes = {\n  routes: arrayOf(\n    shape({\n      to: string,\n      label: node\n    })\n  )\n};\n\nHeaderPageSwitch.defaultProps = {\n  routes: []\n};\n","import React, { useEffect } from 'react';\nimport { func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadUserThunk } from '../../store/thunks';\n\nimport { ConnectedUserView } from '../pages/UserView/UserView';\n\nexport const UserLoader = ({ loadUser, loading }) => {\n  const { userName } = useParams();\n  useEffect(() => {\n    if (userName) {\n      loadUser(userName);\n    }\n  }, [userName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading User <b>{userName}</b>\n        </Loader>\n      ) : (\n        <ConnectedUserView />\n      )}\n    </>\n  );\n};\n\nUserLoader.propTypes = {\n  loadUser: func,\n  loading: bool\n};\n\nexport const ConnectedUserLoader = connect(\n  state => ({\n    loading: state.usersManager.flags.user.loading\n  }),\n  dispatch => ({ loadUser: name => dispatch(loadUserThunk(name)) })\n)(UserLoader);\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Center, Switch } from 'shared/components';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { UserGroupsContainer } from './containers/UserGroups';\n\nimport './UserView.local.scss';\nimport { deactivateUserThunk } from '../../../store/thunks';\nimport { EditUserDetailsContainer } from './containers/EditUserDetails';\nimport { EditUserInfoContainer } from './containers/EditUserInfo';\n\nimport { currentUserSelector } from 'session/store/state';\nimport { getCurrentUserDetails } from 'session/store/selectors';\n\nimport { isAdmin } from 'entities/utils/privileges';\nimport { AccountExpirationContainer } from './containers/AccountExpiration';\n\nexport const UserView = ({ user, deactivateUser, deactivating, loggedUser, userDetails }) => {\n  const defaultResult = () => {\n    if (loggedUser.get('name') === user?.name) {\n      return 'self';\n    }\n\n    if (!isAdmin(userDetails)) {\n      return 'not-admin';\n    }\n\n    return 'attempt';\n  };\n  const [result, setResult] = useState(defaultResult);\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult(defaultResult);\n      setOpen(false);\n    }, [])\n  };\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  const deactivate = useCallback(() => {\n    deactivateUser(user)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not deactivate user!'); // eslint-disable-line\n      });\n  }, [user]);\n  const titleStyles = { textTransform: 'none' };\n\n  if (noGroups) {\n    titleStyles.fontStyle = 'italic';\n  }\n\n  /* This needs to be written as a result check or 404 page for a user. */\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title style={titleStyles}>{user.name}</Paper.Title>\n        </Paper.Header>\n        <Paper.Content>\n          {user?.name !== 'mas' && loggedUser.get('name') === 'mas' && (\n            <Section>\n              <Section.Title>Expiration Date</Section.Title>\n              <AccountExpirationContainer />\n            </Section>\n          )}\n          <Section>\n            <Section.Title>Global Privileges</Section.Title>\n            <PrivilegesContainer />\n          </Section>\n          <Section>\n            <Section.Title>Member of Groups</Section.Title>\n            <UserGroupsContainer />\n          </Section>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            {user?.name !== 'mas' && (\n              <Button\n                color=\"secondary\"\n                disabled={deactivating || noGroups}\n                onClick={modalActions.open}\n              >\n                Deactivate user\n              </Button>\n            )}\n            <EditUserDetailsContainer />\n            <EditUserInfoContainer />\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Deactivate user\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"self\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>You cannot deactivate yourself.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"not-admin\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Only admin users can deactivate other users.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to deactivate user {user.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('deactivating');\n                      deactivate();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"deactivating\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Deactivating...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const ConnectedUserView = connect(\n  state => ({\n    user: state.usersManager.users.selected,\n    deactivating: state.usersManager.flags.user.removing,\n    loggedUser: currentUserSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    deactivateUser: userName => dispatch(deactivateUserThunk(userName))\n  })\n)(UserView);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../../store/thunks';\n\nexport const Privileges = ({ user, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <div className=\"user-privileges\">\n      <ul className=\"privileges-list\">\n        {privileges.map(entry => {\n          return (\n            <li key={entry.key} className=\"privileges-item\">\n              <Privilege user={user} privilege={entry} actions={actions} disabled={disabled} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPrivileges.propTypes = {\n  user: string,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ user, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(user, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  user: string,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      disabled: user?.name === 'mas' || state.usersManager.flags.privileges.disabled,\n      privileges: mapPrivileges(user.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (user, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      ),\n    revoke: (user, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction mapPrivileges(data) {\n  if (!data) return [];\n\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { ScrollableContainer, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditUserGroupsContainer } from './EditUserGroups';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './UserGroups.local.scss';\nimport { removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const UserGroups = ({ user, groups, removeFromGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeFromGroups(user, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.type === 'fail') {\n          setResult('error');\n          setErrorMessage(response.message);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [user, selectedGroup]);\n\n  const isOnlySelect = groups?.length === 1 && groups[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove user ${user} from group ${selectedGroup}? This\n  could affect the way the user will be able to interact with the app`;\n\n  return (\n    <>\n      <div className=\"user-groups-block\">\n        <ScrollableContainer variant=\"row white\">\n          {passed => (\n            <ul {...passed}>\n              {groups &&\n                groups.map(group_name => (\n                  <li className=\"group-card-item\" key={group_name}>\n                    <AvatarCard\n                      label={group_name}\n                      disabled={user === 'mas'}\n                      avatar={{ fallback: <GroupIcon /> }}\n                      action={\n                        <SvgIcon\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSelectedGroup(group_name);\n                            modalActions.open();\n                          }}\n                        >\n                          <path d={mdiDeleteCircleOutline} />\n                        </SvgIcon>\n                      }\n                      description={retrieveGroupDescription(group_name)}\n                    />\n                  </li>\n                ))}\n              <li className=\"group-card-item\" key=\"add-user-to-groups\">\n                <EditUserGroupsContainer />\n              </li>\n            </ul>\n          )}\n        </ScrollableContainer>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setErrorMessage('An error occurred.');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  removeFromGroups: func\n};\n\nexport const UserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    const visibleGroups = user.member_of?.filter(group => group !== 'user');\n\n    return {\n      user: user.name,\n      groups: visibleGroups,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n  })\n)(UserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './EditUserGroups.local.scss';\nimport { addUserToGroupsThunk, removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const EditUserGroups = ({ user, groups, addToGroups, flags, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  if (user === 'mas') {\n    return null;\n  }\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard label=\"Add to group\" avatar={{ fallback: <AddIcon /> }} />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                user={user}\n                selected={groups}\n                flags={flags}\n                closeModal={closeModal}\n                onAdd={(userName, selections) => {\n                  return addToGroups(userName, selections);\n                }}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nEditUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  addToGroups: func,\n  flags: object\n};\n\nexport const EditUserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      groups: user.member_of,\n      flags: state.usersManager.flags.user,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    addToGroups: (user, groups) => dispatch(addUserToGroupsThunk({ user, groups })),\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n    /** add to group thunk here */\n    /** remove from group thunk here */\n  })\n)(EditUserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nconst GroupsList = ({\n  user,\n  selected,\n  onAdd,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    loading: true,\n    done: false,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => selected && !selected.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, selected]);\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.done && !state.all.length) {\n    return <p>Could not retrieve all groups</p>;\n  }\n\n  if (state.success) {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Added to selected groups succesfully!</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.fail) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>{capitalizeFirstLetter(state.fail)}</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? selected.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that the user is a part of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              onAdd(user, state.selections)\n                .then(response => {\n                  if (typeof response === 'object' && response.type === 'fail') {\n                    setState(\n                      produce(state, draft => {\n                        draft.fail = response.message;\n                      })\n                    );\n                  } else {\n                    setState(\n                      produce(state, draft => {\n                        draft.success = true;\n                      })\n                    );\n                  }\n                })\n                .catch(err => {\n                  setState(\n                    produce(state, draft => {\n                      draft.fail = err;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  user: string,\n  selected: array,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useRef } from 'react';\nimport { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { ChangePasswordContainer } from './ChangePassword';\nimport { UserDatesBox } from '../components/UserDatesBox';\n\n// import './EditUserDetails.local.scss';\n\nexport const EditUserDetails = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        User Details\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '370px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-details\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"User Details\"\n            formikRef={formRef}\n          />\n          <UserDetailsForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserDetails.propTypes = {\n  user: object\n};\n\nexport const EditUserDetailsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserDetails);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserDetailsForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ submitResult: undefined });\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  const initialValues = {\n    description: user.description\n  };\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          if (_.isEqual(initialValues, values)) {\n            actions.setSubmitting(false);\n            modalActions.close();\n          }\n\n          // parse and add user information form data.\n\n          /**\n            patch user description\n            */\n          RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`, {\n            description: values.description\n          })\n            .then(() => {\n              setState(prev => ({ ...prev, submitResult: 'success' }));\n            })\n            .catch(() => {\n              actions.setSubmitting(false);\n\n              setState(prev => ({ ...prev, submitResult: 'fail' }));\n            });\n        }}\n        innerRef={formRef}\n      >\n        {({ dirty, isSubmitting, submitForm }) => (\n          <>\n            <Paper.Content scrollable>\n              <Form>\n                <UserDatesBox created={user.date_created} updated={user.date_updated} />\n                <Row>\n                  <Field name=\"description\">\n                    {({ field, meta }) => {\n                      return (\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          error={meta.error && meta.touched}\n                          helperText={meta.touched ? meta.error : undefined}\n                          label=\"Short Description\"\n                        />\n                      );\n                    }}\n                  </Field>\n                </Row>\n              </Form>\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <ChangePasswordContainer />\n              </Paper.Footer.Left>\n              <Paper.Footer.Right>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || isSubmitting}\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nUserDetailsForm.propTypes = {\n  user: object,\n  modalActions: object\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { SvgIcon } from '@material-ui/core';\nimport { mdiAccountPlus, mdiAccountEdit } from '@mdi/js';\nimport moment from 'moment';\n\nimport './UserDatesBox.local.scss';\n\nexport const UserDatesBox = ({ created, updated }) => (\n  <div className=\"dates-box\">\n    {created && <DateCreated date={created} />}\n    {updated && <DateUpdated date={updated} />}\n  </div>\n);\n\nUserDatesBox.propTypes = { created: string, updated: string };\n\nexport const DateCreated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountPlus} />\n    </SvgIcon>\n    <span>Created on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateCreated.propTypes = { date: string };\n\nexport const DateUpdated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountEdit} />\n    </SvgIcon>\n    <span>Updated on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateUpdated.propTypes = { date: string };\n\nfunction parseDate(date) {\n  return moment(date).format('MMM DD YYYY');\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\n// import './EditUserInfo.local.scss';\n\nexport const EditUserInfo = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Contact Info\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '632px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"Contact Information\"\n            formikRef={formRef}\n          />\n          <UserInfoForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserInfo.propTypes = {\n  user: object\n};\n\nexport const EditUserInfoContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserInfo);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserInfoForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ loading: true });\n\n  useEffect(() => {\n    const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n    const prototypeEndpoint = 'prototype/mas0300.sys.user.information?version=1';\n\n    RestClient.get(prototypeEndpoint).then(formproto => {\n      const proto = formproto.data.data.prototypes[0];\n\n      RestClient.get(formEndpoint)\n        .then(formdata => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: false,\n            data: formdata.data.data.forms[0],\n            proto\n          });\n        })\n        .catch(() => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: true,\n            proto\n          });\n        });\n    });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <>\n        <Center>\n          <Loader />\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"primary\" onClick={modalActions.close}>\n              Cancel\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.result === 'success') {\n    const { fields, values } = mapFormValues(state.proto, state.data);\n\n    return (\n      <>\n        <Formik\n          validateOnChange={false}\n          initialValues={values}\n          onSubmit={(submited, actions) => {\n            if (_.isEqual(values, submited)) {\n              actions.setSubmitting(false);\n              modalActions.close();\n            }\n\n            const sendable_data = fields.reduce((d, entry) => {\n              /** Empty values have to be nulled to be sent in the data :( */\n              let value = submited[entry.name] || null;\n\n              /**\n                TODO: backend accepts array for is_repeatable values\n               */\n              if (entry.is_repeatable && !Array.isArray(value)) {\n                value = [value];\n              }\n\n              d.push({\n                name: entry.label, // for this particular form, the names contain spaces.\n                value\n              });\n\n              return d;\n            }, []);\n            // parse and add user information form data.\n\n            /**\n            Send user.info data to backend\n            */\n            const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n\n            if (state.create) {\n              const body = {\n                name: `mas0000.user.${user.name}.form.user_information`,\n                description: `User information for ${user.name}`,\n                values: sendable_data,\n                prototype: state.proto.name\n              };\n\n              RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.FORM}`, body)\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            } else {\n              RestClient.patch(formEndpoint, {\n                description: state.data.description,\n                rename: state.data.name,\n                values: sendable_data\n              })\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            }\n          }}\n          innerRef={formRef}\n        >\n          {({ dirty, isSubmitting, submitForm }) => (\n            <>\n              <Paper.Content scrollable>\n                <Form style={{ paddingTop: '16px' }}>\n                  {fields.map(entry => (\n                    <Row key={entry.name}>\n                      <FieldSwitch parameter={entry} />\n                    </Row>\n                  ))}\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button color=\"primary\" onClick={modalActions.close}>\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!dirty || isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          )}\n        </Formik>\n      </>\n    );\n  }\n};\n\nfunction mapFormValues(proto, provided) {\n  const { fields } = proto;\n  const data = provided && provided.values;\n\n  return fields.reduce(\n    (dict, entry, index) => {\n      const normalized = entry.name.replace(' ', '_');\n      const value = data && data[index].value;\n\n      if (entry.is_repeatable && Array.isArray(entry.value)) {\n        /**\n          TODO: array values have to be unpacked\n         */\n        dict.values[normalized] = value ? value[0] : '';\n      } else {\n        dict.values[normalized] = value || '';\n      }\n\n      dict.fields.push({\n        ...entry,\n        name: normalized,\n        label: entry.name\n      });\n\n      return dict;\n    },\n    { values: {}, fields: [] }\n  );\n}\n\nexport const TextField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    const schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { updateUserExpirationThunk } from '../../../../store/thunks';\nimport { Form, Formik } from 'formik';\nimport { Column, Row } from 'shared/components/layout';\nimport { Date, Time } from 'shared/components/form/editors/Generic';\nimport { Button } from 'shared/components/controls';\nimport moment from 'moment';\n\nimport './AccountExpiration.local.scss';\n\nconst AccountExpiration = ({ userName, expirationDate, updateExpirationDate, updateInProgress }) => {\n  let dateValue = null;\n  let timeValue = null;\n\n  if (expirationDate) {\n    const expirationMoment = moment.utc(expirationDate, 'YYYY-MM-DDThh:mm:ss');\n    dateValue = expirationMoment.format('MM/DD/YYYY');\n    timeValue = expirationMoment.format('hh:mm');\n  }\n\n  const initialValues = {\n    expirationDate: dateValue,\n    expirationTime: timeValue,\n  };\n\n  const dateTimeValidations = (values) => {\n    const errors = {};\n    const date = values.expirationDate;\n    const time = values.expirationTime;\n\n    if (!moment(date).isValid()) {\n      errors.expirationDate = 'Invalid date format';\n    } else if (moment(date).isSameOrBefore(moment.utc())) {\n      errors.expirationDate = 'Date should be in future';\n    }\n\n    if (!/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/.test(time)) {\n      errors.expirationTime = 'Invalid time format';\n    }\n\n    return errors;\n  };\n\n  return (\n    <div className=\"account-expiration\">\n      <Formik\n        initialValues={initialValues}\n        validate={dateTimeValidations}\n        onSubmit={(values) => {\n          const expirationMoment = moment.utc(`${values.expirationDate} ${values.expirationTime}`, 'MM/DD/YYYY hh:mm');\n          updateExpirationDate(userName, expirationMoment.format('YYYY-MM-DD hh:mm:ss'));\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Form>\n                <Row compact>\n                  <Column xs={5}>\n                    <Date\n                      name=\"expirationDate\"\n                      label=\"Date\"\n                      value={initialValues.expirationDate}\n                      minDate={moment()}\n                      minDateMsg=\"Date should be in future\"\n                      allowBlankValue\n                    />\n                  </Column>\n                  <Column xs={5}>\n                    <Time\n                      name=\"expirationTime\"\n                      label=\"Time (UTC)\"\n                      value={initialValues.expirationTime}\n                      allowBlankValue\n                    />\n                  </Column>\n                  <Column xs={2}>\n                    <Button type=\"submit\" variant=\"contained\" className=\"update-expiration-btn\" disabled={updateInProgress}>Update</Button>\n                  </Column>\n                </Row>\n              </Form>\n            </>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport const AccountExpirationContainer = connect(\n  state => ({\n    userName: state.usersManager.users.selected.name,\n    expirationDate: state.usersManager.users.selected.expiration_datetime,\n    updateInProgress: state.usersManager.flags.user.updateExpiration\n  }),\n  dispatch => ({\n    updateExpirationDate: (user, newDate) => dispatch(updateUserExpirationThunk(user, newDate))\n  })\n)(AccountExpiration);\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAccountOff } from '@mdi/js';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './UserCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const UserCard = ({ href, user }) => {\n  const { pathname } = useLocation();\n  const { name, src } = user;\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  return (\n    <Link\n      to={href}\n      className={classnames('user-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`user-card-of-${name}`}\n    >\n      <Avatar className=\"user-avatar\" alt={name} src={src}>\n        {user.name[0].toUpperCase()}\n      </Avatar>\n      <span className={classnames('user-name', { groupless: noGroups })}>{name}</span>\n      {noGroups && (\n        <LightTooltip placement=\"bottom\" title=\"Deactivated user\">\n          <SvgIcon className=\"deactivated-icon\">\n            <Icon path={mdiAccountOff} />\n          </SvgIcon>\n        </LightTooltip>\n      )}\n    </Link>\n  );\n};\n\nUserCard.propTypes = {\n  href: string,\n  user: object\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoUserSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>User Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a user from the list to view or edit their details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n  </Paper>\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Section, Center, Row, Column } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { NewUserGroups } from './components/NewUserGroups';\n\nimport { createUserThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewUser.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmpassword: Yup.string()\n    .required('Please confim the password you entered')\n    .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  groups: Yup.array()\n});\n\nconst CreateNewUser = ({ submitUserValues, allUsers, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.username) ||\n      (values.username && values.username.substr(-1) === '.')\n    ) {\n      errors.username = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allUsers.map(user => {\n      if (exists) return;\n\n      if (user.name === values.username) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.username = 'A user with this name already exists';\n    }\n\n    if (values.password) {\n      if (/[$\\\\/\":;']/.test(values.password)) {\n        errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n      } else if (values.password.length < 8) {\n        errors.password = 'Password must contain at least eight characters';\n      } else if (!/[a-z]/.test(values.password)) {\n        errors.password = 'Password must have at least a lower case letter (ex: a, b, etc.)';\n      } else if (!/[A-Z]/.test(values.password)) {\n        errors.password = 'Password must have at least a upper case letter (ex: A, B, etc.)';\n      } else if (!/[0-9]/.test(values.password)) {\n        errors.password = 'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n      } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n        errors.password =\n          'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n      }\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /** Not used. Navigating dirrectly to new user */\n    if (operation.result === 'success') {\n      return (\n        <>\n          <Paper>\n            <Paper.Content scrollable={false}>\n              <Center>\n                <Result type={operation.result}>\n                  <Result.Text>User created successfully</Result.Text>\n                </Result>\n              </Center>\n            </Paper.Content>\n            <Paper.Footer>\n              <Button to=\"/system/mas-accounts/users\" component={Link}>\n                Go to user\n              </Button>\n            </Paper.Footer>\n          </Paper>\n        </>\n      );\n    }\n\n    let errorMessage = 'Could not create new user';\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirmpassword: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitUserValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.username));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <Paper>\n          <Form className=\"create-new-user-form\">\n            <Paper.Title>New User</Paper.Title>\n            <Paper.Content>\n              <Section>\n                <Section.Title>User Details</Section.Title>\n                <Section.Content>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"username\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"description\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            label=\"Short Description\"\n                            placeholder=\"Short description\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"password\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"confirmpassword\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            autoComplete=\"off\"\n                            required\n                            label=\"Confirm Password\"\n                            placeholder=\"Confirm Passwords\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                </Section.Content>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <NewUserGroups\n                      groups={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <div className=\"left-side-action\">\n                <Button to=\"/system/mas-accounts/users\" color=\"primary\">\n                  Cancel\n                </Button>\n              </div>\n\n              <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !isValid}>\n                Save\n              </Button>\n            </Paper.Footer>\n          </Form>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewUser.propTypes = { submitUserValues: func };\n\nexport const CreateNewUserPage = connect(\n  state => ({\n    allUsers: state.usersManager.users.all,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitUserValues: values => dispatch(createUserThunk(values))\n  })\n)(CreateNewUser);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './NewUserGroups.local.scss';\n\nexport const NewUserGroups = ({ groups, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {groups.map(group_name => (\n            <li className=\"group-card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = groups.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"group-card-item\" key=\"add-user-to-groups\">\n            <GroupsSelection\n              selected={groups}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nNewUserGroups.propTypes = {\n  username: string,\n  groups: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                selected={selected}\n                helpers={helpers}\n                closeModal={closeModal}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({\n  selected,\n  helpers,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                      setIsFormChanged(true);\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './GroupCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const GroupCard = ({ href, group }) => {\n  const { pathname } = useLocation();\n\n  const { name, src } = group;\n  return (\n    <Link\n      to={href}\n      className={classnames('group-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`group-card-of-${name}`}\n    >\n      <Avatar className=\"group-avatar\" alt={name} src={src}>\n        {group.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"group-name\">{name}</span>\n    </Link>\n  );\n};\n\nGroupCard.propTypes = {\n  href: string,\n  group: object\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Switch, Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\nimport { loadGroupThunk, removeGroupThunk } from '../../store/thunks';\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { GroupUsersContainer } from './containers/GroupUsers';\nimport { SubGroupsContainer } from './containers/SubGroups';\nimport { ConnectionsNumberContainer } from './containers/ConnectionsNumber';\nimport { currentUserSelector } from 'session/store/state';\n\nimport './GroupView.local.scss';\n\nexport const GroupView = ({ group, removing, removeGroup, loggedUser }) => {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const deleteGroup = useCallback(() => {\n    removeGroup(group.name)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n        history.push('/system/mas-accounts/groups');\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group!'); // eslint-disable-line\n      });\n  }, [group]);\n\n  /* This needs to be written as a result check or 404 page for a group. */\n  if (!group) {\n    return <></>;\n  }\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title>{group.name}</Paper.Title>\n        </Paper.Header>\n\n        <Paper.Content scrollable>\n          {loggedUser.get('name') === 'mas' && (\n            <ConnectionsNumberContainer />\n          )}\n          <PrivilegesContainer />\n          <GroupUsersContainer />\n          <SubGroupsContainer />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"secondary\" disabled={removing} onClick={modalActions.open}>\n              Remove\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove group {group.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      deleteGroup();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupView.propTypes = {\n  group: object,\n  removing: bool,\n  removeGroup: func\n};\n\nexport const ConnectedGroupView = connect(\n  state => ({\n    group: state.groups.selected,\n    loggedUser: currentUserSelector(state),\n    removing: state.groups.ops.remove.loading\n  }),\n  dispatch => ({\n    removeGroup: name => dispatch(removeGroupThunk(name))\n  })\n)(GroupView);\n\nexport const GroupLoader = ({ loadGroup, loading }) => {\n  const { groupName } = useParams();\n  useEffect(() => {\n    if (groupName) {\n      loadGroup(groupName);\n    }\n  }, [groupName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading Group <b>{groupName}</b>\n        </Loader>\n      ) : (\n        <ConnectedGroupView />\n      )}\n    </>\n  );\n};\n\nGroupLoader.propTypes = {\n  loadGroup: func,\n  loading: bool\n};\n\nexport const ConnectedGroupLoader = connect(\n  state => ({\n    loading: state.groups.ops.selected.loading\n  }),\n  dispatch => ({ loadGroup: name => dispatch(loadGroupThunk(name)) })\n)(GroupLoader);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { object, string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { Section } from 'shared/components/layout';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../store/thunks';\n\nexport const Privileges = ({ group, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Class privileges:</Section.Title>\n        <Section.Info>\n          Effective class privileges are calculated based on explicit grants and denies in this\n          group and in groups of which this group may be a member\n        </Section.Info>\n      </Section.Header>\n      <div className=\"user-privileges\">\n        <ul className=\"privileges-list\">\n          {privileges.map(entry => {\n            return (\n              <li key={entry.key} className=\"privileges-item\">\n                <Privilege group={group} privilege={entry} actions={actions} disabled={disabled} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nPrivileges.propTypes = {\n  group: object,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ group, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(group.name, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  group: object,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      disabled: state.groups.ops.privileges.loading,\n      privileges: mapPrivileges(group.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (group, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      ),\n    revoke: (group, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport './GroupUsers.local.scss';\nimport { EditGroupUsersContainer } from './EditGroupUsers';\n\nimport { removeUsersFromGroupThunk } from '../../../store/thunks';\n\nexport const GroupUsers = ({ group, removeUsersFromGroup }) => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeUsersFromGroup(group.name, selectedUser)\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [group, selectedUser]);\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Users in this group</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.users.map(user => (\n              <li className=\"card-item\" key={user}>\n                <AvatarCard\n                  label={user}\n                  avatar={{ initial: user.charAt(0) }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setSelectedUser(user);\n                        modalActions.open();\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"card-item\" key=\"add-user-to-groups\">\n              <EditGroupUsersContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {selectedUser} from group {group.name}?\n                    This could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupUsers.propTypes = {\n  group: object,\n  removeUsersFromGroup: func\n};\n\nexport const GroupUsersContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeUsersFromGroup: (group, user) => dispatch(removeUsersFromGroupThunk({ group, user }))\n  })\n)(GroupUsers);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { addUsersToGroupThunk } from '../../../store/thunks';\n\nimport './EditGroupUsers.local.scss';\n\nexport const EditGroupUsers = ({ group, addUsersToGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add user\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the users you want to add this group\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <UsersSelection\n                  group={group}\n                  closeModal={closeModal}\n                  onAdd={selections => {\n                    return addUsersToGroup(group.name, selections);\n                  }}\n                  setIsFormChanged={setIsFormChanged}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditGroupUsers.propTypes = {\n  group: object,\n  addUsersToGroup: func\n};\n\nexport const EditGroupUsersContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    addUsersToGroup: (group, users) => dispatch(addUsersToGroupThunk({ group, users }))\n  })\n)(EditGroupUsers);\n\nconst UsersSelection = ({ group, closeModal, onAdd, setIsFormChanged }) => {\n  const [state, setState] = useState({\n    selections: [],\n    usersFetched: false,\n    usersSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(u => !group.users.includes(u.name));\n  }, [state.all, state.showAll, group]);\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.users;\n            draft.usersFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.usersFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.usersFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>\n              {state.error ? capitalizeFirstLetter(state.error) : 'Could not retrieve user list!'}\n            </Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected users to group succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add users to group!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered.sort((a, b) =>\n              a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n            )}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? group.users.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      initial: entry.name.charAt(0)\n                    }}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show users that are members of this group\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              /**\n                NOTE: (to self)\n\n                This is lim 0 -> complete trash\n\n                Can't use redux for snippets of this operation.\n                The redux action that is required should only be to update final group entry at maximum.\n\n                Either all ops are in redux, or none are.\n               */\n              onAdd(state.selections).then(response => {\n                setState(prev =>\n                  produce(prev, draft => {\n                    draft.loading = false;\n                    draft.usersSubmitted = true;\n                    draft.result = response?.result;\n                    draft.error = response?.messages;\n                  })\n                );\n              });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nUsersSelection.propTypes = {\n  group: object,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiAccountGroup, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditSubGroupsContainer } from './EditSubGroups';\nimport { removeSubGroupsThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ group, removeSubGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeSubGroups(group.name, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group from group!'); // eslint-disable-line\n      });\n  }, [group, selectedGroup]);\n\n  const isOnlySelect = group?.member_of?.length === 1 && group?.member_of[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove group ${group.name} from group ${selectedGroup}?\n      This could affect the way the user will be able to interact with the app.`;\n\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Member of groups</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.member_of\n              .filter(g => g !== 'user')\n              .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n              .map(subgroup => (\n                <li className=\"card-item\" key={subgroup}>\n                  <AvatarCard\n                    label={subgroup}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    action={\n                      <SvgIcon\n                        onClick={e => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setSelectedGroup(subgroup);\n                          modalActions.open();\n                        }}\n                      >\n                        <path d={mdiDeleteCircleOutline} />\n                      </SvgIcon>\n                    }\n                    description={retrieveGroupDescription(subgroup)}\n                  />\n                </li>\n              ))}\n            <li className=\"card-item\" key=\"add-sub-group\">\n              <EditSubGroupsContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nSubGroups.propTypes = {\n  group: object,\n  removeSubGroups: func\n};\n\nexport const SubGroupsContainer = connect(\n  state => ({\n    group: state.groups.selected,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    removeSubGroups: (group, groups) => dispatch(removeSubGroupsThunk({ group, groups }))\n  })\n)(SubGroups);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport { PATCH_SELECTED_GROUP } from '../../../store/actions';\n\nimport './EditSubGroups.local.scss';\n\nexport const EditSubGroups = ({ group, updateGroup, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select which groups this one should be a part of\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupSelection\n                  group={group}\n                  updateGroup={updateGroup}\n                  closeModal={actions.close}\n                  setIsFormChanged={setIsFormChanged}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditSubGroups.propTypes = {\n  group: object,\n  updateGroup: func\n};\n\nexport const EditSubGroupsContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    updateGroup: group => dispatch(creators.action(PATCH_SELECTED_GROUP, group))\n  })\n)(EditSubGroups);\n\nconst GroupSelection = ({\n  group,\n  closeModal,\n  updateGroup,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    groupsFetched: false,\n    subgroupsSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => !group.member_of.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, group]);\n\n  const isDisabled = name => {\n    if (group.name === name) {\n      return true;\n    }\n\n    if (state.showAll) {\n      return group.member_of.includes(name);\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.groups;\n            draft.groupsFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.groupsFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (\n    state.groupsFetched &&\n    (!state.all.length || (state.result === 'fail' && !state.subgroupError))\n  ) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve groups list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected groups succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'fail') {\n    let errorMessage = 'Could not add selected groups!';\n\n    if (\n      state.error &&\n      state.error[0] &&\n      state.error[0].text &&\n      state.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = state.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>{errorMessage}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={isDisabled(entry.name)}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that this one already is a member of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group.name}/grant`, {\n                groups: state.selections\n              })\n                .then(({ data: resolved }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = resolved.result;\n                      draft.subgroupError = false;\n                    })\n                  );\n\n                  updateGroup(resolved.data.groups[0]);\n                })\n                .catch(error => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = 'fail';\n                      draft.error = error?.response?.data?.messages;\n                      draft.subgroupError = true;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupSelection.propTypes = {\n  group: object,\n  updateGroup: func,\n  closeModal: func\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { Column, Row, Section } from 'shared/components/layout';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { Button } from 'shared/components/controls';\n\nimport './ConnectionsNumber.local.scss';\nimport { updateGroupConnectionsLimitThunk } from '../../../../store/thunks';\n\nconst ConnectionsNumber = ({ groupName, connectionsLimit, updateConnectionsLimit, updateInProgress }) => {\n  const initialValues = {\n    maxAmount: connectionsLimit || 0,\n  };\n\n  return (\n    <Section>\n      <Section.Title>Number of Connections</Section.Title>\n        <div className=\"connections-number\">\n          <Formik\n            initialValues={initialValues}\n            onSubmit={(values) => {\n              updateConnectionsLimit(groupName, values.maxAmount);\n            }}\n          >\n            {() => {\n              return (\n                <>\n                  <Form>\n                    <Row compact>\n                      <Column xs={10}>\n                        <Text name=\"maxAmount\" label=\"Enter max number of connections\" required value={initialValues.maxAmount} />\n                      </Column>\n                      <Column xs={2}>\n                        <Button type=\"submit\" variant=\"contained\" className=\"update-connections-btn\" disabled={updateInProgress}>Update</Button>\n                      </Column>\n                    </Row>\n                  </Form>\n                </>\n              );\n            }}\n          </Formik>\n        </div>\n    </Section>\n  );\n};\n\nexport const ConnectionsNumberContainer = connect(\n  state => ({\n    groupName: state.groups.selected.name,\n    connectionsLimit: state.groups.selected.connection_limit,\n    updateInProgress: state.usersManager.flags.group.updateConnectionsLimit\n  }),\n  dispatch => ({\n    updateConnectionsLimit: (group, limit) => dispatch(updateGroupConnectionsLimitThunk(group, limit))\n  })\n)(ConnectionsNumber);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Center } from 'shared/components';\nimport { Paper, Section, Column, Row } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { createGroupThunk } from '../../store/thunks';\n\nimport { SubGroups } from './components/SubGroups';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewGroup.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  groupname: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Group name is required'),\n  groups: Yup.array()\n});\n\nconst CreateNewGroup = ({ submitGroupValues, allGroups, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.groupname) ||\n      (values.groupname && values.groupname.substr(-1) === '.')\n    ) {\n      errors.groupname = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allGroups.map(group => {\n      if (exists) return;\n\n      if (group.name === values.groupname) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.groupname = 'A group with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /**\n     * Failed results are the ony onnes that are shown.\n     * For successfull creation, the user is navigated to the new entry\n     */\n    let errorMessage = 'Could not create new group';\n\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type=\"fail\">\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined, error: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        groupname: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitGroupValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.groupname));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid, submitForm }) => (\n        <Paper>\n          <Paper.Title>New Group</Paper.Title>\n          <Paper.Content>\n            <Form className=\"create-new-group-form\">\n              <Section>\n                <Section.Title>Group Details</Section.Title>\n                <Row>\n                  <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                    <Field name=\"groupname\">\n                      {({ field, meta }) => (\n                        <Input\n                          required\n                          {...field}\n                          label=\"Group Name\"\n                          placeholder=\"Group Name\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                  <Column style={{ maxWidth: '220px' }}>\n                    <Field name=\"description\">\n                      {({ field, meta }) => (\n                        <Input\n                          {...field}\n                          label=\"Short Description\"\n                          placeholder=\"Short Description\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                </Row>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <SubGroups\n                      selections={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Form>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button to=\"/system/mas-accounts/groups\" color=\"primary\">\n                Cancel\n              </Button>\n            </Paper.Footer.Left>\n\n            <Paper.Footer.Right>\n              <Button\n                type=\"submit\"\n                onClick={submitForm}\n                variant=\"contained\"\n                disabled={isSubmitting || !isValid}\n              >\n                Save\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewGroup.propTypes = { submitGroupValues: func };\n\nexport const CreateNewGroupPage = connect(\n  state => ({\n    allGroups: state.groups.all.filter(g => g.name !== 'user'),\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitGroupValues: values => dispatch(createGroupThunk(values))\n  })\n)(CreateNewGroup);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ selections, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {selections.map(group_name => (\n            <li className=\"card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = selections.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-group-to-groups\">\n            <GroupsSelection\n              selected={selections}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nSubGroups.propTypes = {\n  username: string,\n  selections: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    open: openModal,\n    close: closeModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"add-to-group-button\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <GroupAddIcon />\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the groups you want to add this user to\"\n                aria={aria}\n                onClose={actions.close}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupsList\n                  selected={selected}\n                  helpers={helpers}\n                  closeModal={actions.close}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal, retrieveGroupDescription }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ minWidth: '178px', maxWidth: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoGroupSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>Group Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a group from the list to view or edit its details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n    {/* <Paper.Footer /> */}\n  </Paper>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { mdiHexagonMultipleOutline } from '@mdi/js';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { changeStateThunk } from '../../../store/thunks';\n\nimport { ServerList } from '../ServerList/ServerList';\n\nimport './Dbms.local.scss';\n\nexport class DBMS extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"dbms-item\">\n        <header>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.protocol}-dbms`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiHexagonMultipleOutline} />\n              </SvgIcon>\n            </div>\n            <div\n              className={`value ${path.startsWith(data.path) ? 'active' : ''}`}\n              title={data.protocol}\n            >\n              {data.protocol}\n            </div>\n          </div>\n          <div\n            role=\"presentation\"\n            data-qa={`toggle-${data.protocol}-dbms`}\n            className={`status ${path.startsWith(data.path) ? 'active' : ''}`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <RemoveIcon /> : <AddIcon />}\n          </div>\n        </header>\n        <ul className=\"dbms-content\">{isExpanded && <ServerList servers={data.servers} />}</ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nDBMS.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDBMS = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(DBMS);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedServer } from './containers/Server/Server';\n\nexport class ServerList extends React.PureComponent {\n  render() {\n    const { servers } = this.props;\n\n    return servers.map(server => <ConnectedServer key={server.address} data={server} />);\n  }\n}\n\nServerList.propTypes = {\n  servers: array\n};\n\nexport default ServerList;\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { DatabaseList } from '../../../DatabaseList/DatabaseList';\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Server.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../../../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../../../../shared/components';\n\nexport class Server extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"server-item\">\n        <header className={this.isActive(path, data.path)}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.address}-server`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\">\n              <LightTooltip placement=\"top\" title={data.address}>\n                <span>{SystemExplorerFeatureUtil.splitAccountName(data.name) || data.address}</span>\n              </LightTooltip>\n            </div>\n          </div>\n          <div\n            className=\"status\"\n            role=\"presentation\"\n            data-qa={`toggle-${data.address}-server`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n          </div>\n        </header>\n        <ul className=\"server-content\">\n          {isExpanded && <DatabaseList databases={data.databases} />}\n        </ul>\n      </li>\n    );\n  }\n\n  isActive = (path, current) => {\n    const activePath = current.split('--');\n    const storedPath = path.split('--');\n\n    if (activePath[0] === storedPath[0] && activePath[1] === storedPath[1]) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nServer.propTypes = {\n  data: object,\n  storeState: object,\n  changeState: func\n};\n\nexport const ConnectedServer = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Server);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedDatabase } from './containers/Database/Database';\n\nexport class DatabaseList extends React.PureComponent {\n  render() {\n    const { databases } = this.props;\n\n    if (!databases) return null;\n\n    return databases.map(database => <ConnectedDatabase key={database.name} data={database} />);\n  }\n}\n\nDatabaseList.propTypes = {\n  databases: array\n};\n\nexport default DatabaseList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Database.local.scss';\n\nexport class Database extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.storeState.path === props.data.path) {\n      return { isExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n\n    const name = data.special.database;\n\n    return (\n      <li className=\"database-item\">\n        <header className={`${data.path === path ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${name}-database`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDatabase} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={name}>\n              {name}\n            </div>\n          </div>\n        </header>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nDatabase.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDatabase = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Database);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string, func, object } from 'prop-types';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport { changeStateThunk } from '../../store/thunks';\n\nimport './Breadcrumbs.local.scss';\n\nexport class BreadcrumbsTitle extends React.PureComponent {\n  render() {\n    const {\n      storeState: { path }\n    } = this.props;\n\n    return this.renderBreadcrumbs(path);\n  }\n\n  renderBreadcrumbs = path => {\n    const links = path\n      .split(this.props.separator)\n      .filter(e => e)\n      .reduce(\n        (routes, entry, index, list) => {\n          const previous = list.slice(0, index);\n          previous.push(entry);\n          const routePath = previous.join(this.props.separator);\n\n          const route = { label: entry, route: routePath };\n          routes.push(route);\n\n          return routes;\n        },\n        [{ label: 'DBMS', route: '' }]\n      );\n\n    return (\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        {links.map(link => {\n          return (\n            <div\n              data-qa={`breadcrumbs-${link.label}`}\n              className=\"path\"\n              role=\"presentation\"\n              key={link.route}\n              onClick={() => this.navigateTo(link.route)}\n            >\n              {link.label}\n            </div>\n          );\n        })}\n      </Breadcrumbs>\n    );\n  };\n\n  navigateTo = selectedLink => {\n    if (selectedLink === this.props.storeState.path) {\n      return;\n    }\n\n    this.props.changeState({ path: selectedLink });\n\n    this.setActiveLevel(selectedLink);\n  };\n\n  setActiveLevel = selectedLink => {\n    const linkElements = selectedLink.split(this.props.separator).filter(e => e);\n\n    switch (linkElements.length) {\n      case 0:\n        this.props.changeState({ level: 'all-dbms' });\n        break;\n      case 1:\n        this.props.changeState({ level: 'all-servers' });\n        break;\n      case 2:\n        this.props.changeState({ level: 'all-databases' });\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nBreadcrumbsTitle.propTypes = {\n  storeState: object,\n  changeState: func,\n  separator: string\n};\n\nBreadcrumbsTitle.defaultProps = {\n  separator: '--'\n};\n\nexport const ConnectedBreadcrumbsTitle = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(BreadcrumbsTitle);\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { ConnectedAllDbms } from '../../containers/AllDbms/AllDbms';\nimport { ConnectedAllServers } from '../../containers/AllServers/AllServers';\nimport { ConnectedAllDatabases } from '../../containers/AllDatabases/AllDatabases';\nimport { ConnectedWorkload } from '../../containers/Workload/Workload';\nimport { ConnectedLicense } from '../../containers/License/License';\nimport { ConnectedStorage } from '../../containers/Storage/Storage';\nimport { ConnectedObjects } from '../../containers/Objects/Objects';\nimport { ConnectedSessions } from '../../containers/Sessions/Sessions';\nimport { ConnectedTopSQLStatements } from '../../containers/TopSQLStatements/TopSQLStatements';\n\nexport class ContentSwitch extends React.PureComponent {\n  render() {\n    const { activePage } = this.props;\n\n    return this.renderPage(activePage);\n  }\n\n  renderPage = activePage => {\n    switch (activePage) {\n      case 'all-dbms':\n        return <ConnectedAllDbms />;\n      case 'all-servers':\n        return <ConnectedAllServers />;\n      case 'all-databases':\n        return <ConnectedAllDatabases />;\n      case 'workload':\n        return <ConnectedWorkload />;\n      case 'license':\n        return <ConnectedLicense />;\n      case 'storage':\n        return <ConnectedStorage />;\n      case 'objects':\n        return <ConnectedObjects />;\n      case 'sessions':\n        return <ConnectedSessions />;\n      case 'topsql':\n        return <ConnectedTopSQLStatements />;\n      default:\n        return <></>;\n    }\n  };\n}\n\nContentSwitch.propTypes = {\n  activePage: string\n};\n\nexport default ContentSwitch;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHexagonMultipleOutline, mdiChartTimelineVariant } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { getDBMSStatus, getDBMSStatusInfo } from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nexport class AllDbms extends React.PureComponent {\n  render() {\n    const { all, retrieveDBMSStatus, retrieveDBMSStatusInfo } = this.props;\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {all.map(dbms => (\n            <ActionCard\n              key={dbms.name}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n              }\n              status={dbms.name !== 'OTHER' ? retrieveDBMSStatus(dbms) : ''}\n              statusInfo={retrieveDBMSStatusInfo(dbms)}\n              type=\"dbms\"\n              label={dbms.name}\n              onClick={() => this.setPath(dbms.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: dbms.path, level: 'workload' })\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n  };\n}\n\nAllDbms.propTypes = {\n  all: array,\n  changeState: func\n};\n\nexport const ConnectedAllDbms = connect(\n  state => ({\n    all: state.explorer?.structured?.dbms || [],\n    allDbms: state.explorer.accounts,\n    retrieveDBMSStatus: dbms => getDBMSStatus(dbms, state.explorer.dbStatus),\n    retrieveDBMSStatusInfo: dbms => getDBMSStatusInfo(dbms, state.explorer.dbStatus)\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDbms);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiChartTimelineVariant, mdiPercent } from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshServerDbsStatusThunk } from '../../store/thunks';\nimport {\n  getServerStatus,\n  getServerStatusInfo,\n  getEntityPendingStatus\n} from '../../store/selectors';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { ServerSettings } from '../Settings/ServerSettings';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../shared/components';\n\nconst serverLabel = (serverFullName, address) => {\n  if (serverFullName) {\n    return (\n      <LightTooltip placement=\"bottom-end\" title={address}>\n        <span>{SystemExplorerFeatureUtil.splitAccountName(serverFullName)}</span>\n      </LightTooltip>\n    );\n  }\n\n  return <span>{address}</span>;\n};\n\nexport class AllServers extends React.PureComponent {\n  render() {\n    const {\n      all,\n      serversUsage,\n      retrieveServerStatus,\n      userDetails,\n      retrieveServerStatusInfo,\n      reloadAccounts\n    } = this.props;\n    const servers = all;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {servers.map((server, index) => (\n            <ActionCard\n              key={`${server.name}-${index}`}\n              settings={<ServerSettings server={server} disabled={isDisabled} reloadAccounts={reloadAccounts} hasDatabases={server.databases.length > 0} />}\n              status={server.databases.length > 0 ? retrieveServerStatus(server) : ''}\n              statusInfo={retrieveServerStatusInfo(server)}\n              type=\"server\"\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiDns} />\n                </SvgIcon>\n              }\n              label={serverLabel(server.name, server.address)}\n              onClick={() => this.setPath(server.path)}\n              options={this.renderOptions(server)}\n              readOnlyOptions={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiPercent} />\n                    </SvgIcon>\n                  ),\n                  label: 'CPU Load',\n                  fillable: true,\n                  percentage:\n                    serversUsage.find(sv => sv.address === server.address)?.usage || undefined\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n  };\n\n  renderOptions = server => {\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: server.path, level: 'workload' })\n      }\n    ];\n\n    if (server.databases.length > 0) {\n      options.push({\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(server).label,\n        disabled: this.props.retrievePendingStatus(server).loading,\n        onClick: () => this.refreshServerDBs(server)\n      });\n    }\n\n    return options;\n  };\n\n  refreshServerDBs = server => {\n    if (!this.props.retrievePendingStatus(server).loading) {\n      this.props.refreshServerDbsStatus(server);\n    }\n  };\n}\n\nAllServers.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllServers = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const dbms = structured.dbms.find(entry => entry.protocol === path);\n\n    return {\n      all: dbms?.servers || [],\n      allDbms: state.explorer.accounts,\n      storeState: state.explorer.state,\n      serversUsage: state.explorer.serversUsage?.servers || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveServerStatus: server => getServerStatus(server, state.explorer.dbStatus),\n      retrieveServerStatusInfo: server => getServerStatusInfo(server, state.explorer.dbStatus),\n      retrievePendingStatus: server =>\n        getEntityPendingStatus(server, state.explorer.dbStatus, 'server')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshServerDbsStatus: server => dispatch(refreshServerDbsStatusThunk(server)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllServers);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { ServerForm } from '../Forms/ServerForm';\nimport { mdiSettings, mdiDns, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ConfirmationModal, ErrorModal } from '../../../shared/components/overlays';\nimport { deleteAccount } from '../../../shared/api/accounts';\n\nexport const ServerSettings = ({ server, disabled, reloadAccounts, hasDatabases }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteServerOpen, setDeleteServerOpen] = useState(false);\n  const [deleteServerErrorOpen, setDeleteServerErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteServerModalActions = {\n    open: () => {\n      setDeleteServerOpen(true);\n    },\n    close: () => {\n      setDeleteServerOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(server.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteServerErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteServerErrorModalActions = {\n    open: () => {\n      setDeleteServerErrorOpen(true);\n    },\n    close: () => {\n      setDeleteServerErrorOpen(false);\n    }\n  };\n\n  if (disabled) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n      {!hasDatabases && (\n        <IconButton onClick={deleteServerModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditServerContainer server={server} />\n      </Modal>\n\n      <ConfirmationModal open={deleteServerOpen} actions={deleteServerModalActions} message=\"Are you sure you want to delete server?\" />\n      <ErrorModal open={deleteServerErrorOpen} actions={deleteServerErrorModalActions} message=\"Failed to delete Server. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditServer = ({ server, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    fetchProtocols().then(resp => {\n      if (resp.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: resp.protocols || []\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Edit Server\"\n        desc=\"Edit the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <ServerForm\n            server={server}\n            protocols={state.protocols}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditServerContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditServer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiDatabase,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { DatabaseSettings } from '../Settings/DatabaseSettings';\nimport {\n  getBackup,\n  getDBStatus,\n  getDBStatusInfo,\n  getEntityPendingStatus,\n  retrieveServerEntry\n} from '../../store/selectors';\nimport { TopSqlStatementsUtil } from '../TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class AllDatabases extends React.PureComponent {\n  render() {\n    const {\n      databases,\n      retrieveDbBackup,\n      retrieveDbStatus,\n      retrieveDbStatusInfo,\n      userDetails,\n      reloadAccounts\n    } = this.props;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <>\n        <Paper.Content>\n          <CardsLayout>\n            {databases.map(database => (\n              <ActionCard\n                key={database.name}\n                lastBackup={retrieveDbBackup(database)}\n                settings={<DatabaseSettings database={database} disabled={isDisabled} reloadAccounts={reloadAccounts} />}\n                status={retrieveDbStatus(database)}\n                statusInfo={retrieveDbStatusInfo(database)}\n                type=\"database\"\n                icon={\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                }\n                label={database.special.database}\n                onClick={() => this.setPath(database.path)}\n                options={this.renderOptions(database)}\n              />\n            ))}\n          </CardsLayout>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n\n  refreshDBStatus = db => {\n    if (!this.props.retrievePendingStatus(db).loading) {\n      this.props.refreshDatabaseStatus(db);\n    }\n  };\n\n  renderOptions = database => {\n    const [protocol] = database.path.split('--');\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: database.path, level: 'workload' })\n      },\n      {\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(database).label,\n        disabled: this.props.retrievePendingStatus(database).loading,\n        onClick: () => this.refreshDBStatus(database)\n      }\n    ];\n\n    if (SystemExplorerFeatureUtil.isSessionsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiCheckboxMultipleBlankOutline} />\n          </SvgIcon>\n        ),\n        label: 'Sessions',\n        onClick: () => this.props.changeState({ path: database.path, level: 'sessions' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isObjectsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiShape} />\n          </SvgIcon>\n        ),\n        label: 'Objects',\n        onClick: () => this.props.changeState({ path: database.path, level: 'objects' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isStorageAllowed(protocol)) {\n      options.splice(1, 0, {\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiHexagonSlice2} />\n            </SvgIcon>\n          ),\n          label: 'Storage',\n          onClick: () => this.props.changeState({ path: database.path, level: 'storage' })\n        }\n      );\n    }\n\n    if (TopSqlStatementsUtil.isAllowedProtocol(protocol)) {\n      options.splice(2, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiFormatAlignTop} />\n          </SvgIcon>\n        ),\n        label: 'Top SQL statements',\n        onClick: () => this.props.changeState({ path: database.path, level: 'topsql' })\n      });\n\n      options.splice(options.length - 1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        ),\n        label: 'License reporting',\n        onClick: () => this.props.changeState({ path: database.path, level: 'license' })\n      });\n    }\n\n    return options;\n  };\n}\n\nAllDatabases.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllDatabases = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const [protocol, address] = path.split('--');\n    const server = retrieveServerEntry({ protocol, address }, structured);\n    const backups = state.explorer.dbLastBackup;\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      databases: (server && server.databases) || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveDbBackup: database => getBackup(database, backups),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database =>\n        getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllDatabases);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Overflow, Paper } from 'shared/components/layout';\nimport { Center, WorkloadGraph } from 'shared/components';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { JobResults } from 'shared/components/JobResults';\n\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\n\nimport './Workload.local.scss';\n\nexport class Workload extends React.PureComponent {\n  componentDidMount() {\n    this.getJobsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.storeState.path !== prevProps.storeState.path ||\n      this.props.globalFilters !== prevProps.globalFilters\n    ) {\n      this.getJobsData();\n    }\n  }\n\n  render() {\n    const {\n      jobs,\n      storeState: { path, level }\n    } = this.props;\n    const pageLevel = path.split('--').filter(e => e).length;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          {pageLevel === 3 && (\n            <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n          )}\n        </Paper.Header>\n        <Paper.Content>\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader>Loading jobs</Loader>\n            </Center>\n          ) : (\n            <>\n              {jobs.get('total_count') > 0 ? (\n                <>\n                  <div className=\"container\">\n                    <div className=\"graph-container\">\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                        isSingleDay={\n                          moment\n                            .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD') ===\n                          moment\n                            .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD')\n                        }\n                        setSingleDay={this.props.setGlobalFilters}\n                      />\n                    </div>\n                    <div className=\"jobs-container\">\n                      <Overflow>\n                        <JobResults jobs={jobs.get('content')} />\n                      </Overflow>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Center>Job list is empty</Center>\n              )}\n            </>\n          )}\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getJobsData() {\n    const {\n      storeState: { path }\n    } = this.props;\n    const levelFilters = path.split('--').filter(e => e);\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      protocol_filter: levelFilters[0],\n      shell_host_address_filter: levelFilters[1],\n      database_name_filter: levelFilters[2]\n    });\n  }\n}\n\nWorkload.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  jobs: object,\n  getJobs: func,\n  changeState: func\n};\n\nexport const ConnectedWorkload = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    jobs: jobsSelector(state)\n  }),\n  dispatch => ({\n    getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(Workload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, object } from 'prop-types';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { ConnectedReport } from './Report/Report';\nimport { getFullPath } from '../../store/selectors';\n\nimport './License.local.scss';\n\nexport class License extends React.PureComponent {\n  render() {\n    const {\n      storeState: { level, path },\n    } = this.props;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          <ConnectedReport />\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n}\n\nLicense.propTypes = {\n  storeState: object,\n  changeState: func,\n};\n\nexport const ConnectedLicense = connect(\n  state => ({\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state),\n    isLoading: state.explorer.flags.license.loading\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(License);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, func, object } from 'prop-types';\nimport classnames from 'classnames';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { getLicenseReportThunk } from '../../../store/thunks';\nimport { FeaturesUsage } from '../../../components/LicenseReporting/FeaturesUsage/FeaturesUsage';\nimport { UnusedFeatures } from '../../../components/LicenseReporting/UnusedFeatures/UnusedFeatures';\nimport { getFullPath } from '../../../store/selectors';\nimport { FeaturesTable } from '../../../components/LicenseReporting/FeaturesTable/FeaturesTable';\n\nimport './Report.local.scss';\n\nexport class Report extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolled: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getLicenseReport(this.props.fullPath);\n  }\n\n  render() {\n    const { scrolled } = this.state;\n    const { isLoading, reportData, reportTwo } = this.props;\n    return isLoading ? (\n      <Center>\n        <Loader>Loading report details</Loader>\n      </Center>\n    ) : (\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled\n        })}\n      >\n        <div className=\"container\" onWheel={event => this.onWheel(event)}>\n          {reportData && Object.keys(reportData.FEATURES).length > 0 && (\n            <FeaturesTable licenseFeatures={reportData.FEATURES} />\n          )}\n          <FeaturesUsage reportOne={reportData} reportTwo={reportTwo} />\n          <UnusedFeatures reportOne={reportData} reportTwo={reportTwo} />\n        </div>\n      </div>\n    );\n  }\n\n  onWheel = event => {\n    if (event.currentTarget.scrollTop) {\n      if (!this.state.scrolled) {\n        this.setState({ scrolled: true });\n      }\n    } else if (this.state.scrolled) {\n      this.setState({ scrolled: false });\n    }\n\n    scroller(event);\n  };\n}\n\nReport.propTypes = {\n  getLicenseReport: func,\n  isLoading: bool,\n  reportData: object,\n};\n\nexport const ConnectedReport = connect((state) => {\n  const reportData = state.explorer.reports.data;\n  return {\n    isLoading: state.explorer.flags.reports.loading,\n    fullPath: getFullPath(state),\n    reportData\n  };\n}, dispatch => ({\n  getLicenseReport: fullPath => dispatch(getLicenseReportThunk(fullPath))\n}))(Report);\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { object } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './FeaturesUsage.local.scss';\n\nexport class FeaturesUsage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n    return (\n      <div className=\"features-usage-container\">\n        <header>\n          <h1>License Features Usage</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.USED ?? {});\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          <div className=\"value single\">{feature[1].USAGES}</div>\n          <div className=\"label\">{feature[0]}</div>\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const comparableFeatures = {};\n    if (reportOne.USED && reportOne && reportOne.USED) {\n      const reportOneEntries = Object.entries(reportOne.USED);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        comparableFeatures[feature[0]].usage = [parseInt(feature[1].USAGES, 10)];\n        comparableFeatures[feature[0]].usage[1] = 0;\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportTwo.USED);\n\n      reportTwoEntries.map(feature => {\n        if (feature[0] in comparableFeatures) {\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        } else {\n          comparableFeatures[feature[0]] = {};\n          comparableFeatures[feature[0]].usage = [0];\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        }\n\n        return null;\n      });\n    }\n\n    const features = Object.entries(comparableFeatures);\n    return features.map(feature => {\n      return (\n        <LightTooltip\n          key={feature[0]}\n          placement=\"top\"\n          title={\n            <>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportOne.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[0]}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportTwo.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[1]}</div>\n              </div>\n            </>\n          }\n        >\n          <div className=\"feature\">\n            {this.getFeatureValue(\n              comparableFeatures[feature[0]].usage[0],\n              comparableFeatures[feature[0]].usage[1]\n            )}\n            <div className=\"label\">{feature[0]}</div>\n          </div>\n        </LightTooltip>\n      );\n    });\n  };\n\n  getFeatureValue = (rep1, rep2) => {\n    let valueNode = <div className=\"value lower\">{rep1 - rep2}</div>;\n\n    if (rep1 === rep2) {\n      valueNode = <div className=\"value equal\">=</div>;\n    } else if (rep2 > rep1) {\n      valueNode = <div className=\"value higher\">{rep2 - rep1}</div>;\n    }\n\n    return valueNode;\n  };\n}\n\nFeaturesUsage.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesUsage;\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n\n    '& .row': {\n      display: 'flex',\n\n      '& .value': {\n        paddingLeft: '15px',\n        marginLeft: 'auto',\n        fontWeight: '600'\n      }\n    }\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\n\nimport './UnusedFeatures.local.scss';\n\nexport class UnusedFeatures extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"unused-features-container\">\n        <header>\n          <h1>Unused features</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.UNUSED ?? {});\n\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          {feature[0]}\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const features = Object.keys(reportTwo.UNUSED);\n\n    const comparableFeatures = features.filter(feature => {\n      return reportOne.UNUSED[feature] !== undefined;\n    });\n\n    return comparableFeatures.map(feature => {\n      return (\n        <div key={feature} className=\"feature\">\n          {feature}\n        </div>\n      );\n    });\n  };\n}\n\nUnusedFeatures.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default UnusedFeatures;\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheckboxMarkedCircle, mdiCloseCircle } from '@mdi/js';\nimport moment from 'moment';\n\nimport './FeaturesTable.scss';\n\nconst columns = [\n  { label: 'Feature Name', sortKey: 'NAME' },\n  { label: 'Version' },\n  { label: 'Usages', sortKey: 'USAGES' },\n  { label: 'First Usage' },\n  { label: 'Last Usage' },\n  { label: 'Status', sortKey: 'STATUS' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"license-feature-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"license-feature-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index,) => (\n  <Table.Row hover key={`${row.NAME}_${index}`} className=\"license-feature-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.NAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.VERSION}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.DETECTED_USAGES}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.FIRST_USAGE_DATE).isValid() ? moment(row.FIRST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.LAST_USAGE_DATE).isValid() ? moment(row.LAST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        <div className=\"status-container\">\n          {row.CURRENTLY_USED === 'TRUE' ? (\n            <div className=\"status available\">\n              <SvgIcon>\n                <Icon path={mdiCheckboxMarkedCircle} />\n              </SvgIcon>\n              Available\n            </div>\n          ) : (\n            <div className=\"status unavailable\">\n              <SvgIcon>\n                <Icon path={mdiCloseCircle} />\n              </SvgIcon>\n              Unavailable\n            </div>\n          )}\n        </div>\n      </span>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ licenseFeatures, tableProps }) => {\n  return <Table {...tableProps}>{licenseFeatures.map((row, index) => rowRenderer(row, index))}</Table>;\n};\n\nexport class FeaturesTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'NAME', order: 'asc' },\n    };\n  }\n\n  render() {\n    const { licenseFeatures } = this.props;\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sorted = this.sortLicenseFeatures(licenseFeatures);\n\n    return (\n      <TableRenderer\n        licenseFeatures={sorted}\n        tableProps={tableProps}\n      />\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortLicenseFeatures = (licenseFeatures) => {\n    const { sortBehavior } = this.state;\n    const key = sortBehavior.sortKey;\n    const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n    switch (key) {\n      case 'NAME': {\n        return this.sortByName(licenseFeatures, orderMultiplier);\n      }\n      case 'USAGES': {\n        return this.sortByUsages(licenseFeatures, orderMultiplier);\n      }\n      case 'STATUS': {\n        return this.sortByStatus(licenseFeatures, orderMultiplier);\n      }\n      default:\n        return licenseFeatures;\n    }\n  };\n\n  sortByName = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.NAME.localeCompare(o2.NAME)) * order;\n    });\n  };\n\n  sortByUsages = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.DETECTED_USAGES - o2.DETECTED_USAGES) * order;\n    });\n  };\n\n  sortByStatus = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      const firstUsage = o1.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      const secondUsage = o2.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      return (firstUsage - secondUsage) * order;\n    });\n  };\n}\n\nFeaturesTable.propTypes = {\n  licenseFeatures: PropTypes.array,\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  changeStateThunk,\n  loadStorageDetailsThunk,\n  loadStoragePointsThunk,\n  setStorageItemThunk\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport { getFormattedStorage, getFullPath, getStorageDetailsData, haveStorageData } from '../../store/selectors';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { ConnectedMssqlStorage } from './MSSQL/MssqlStorage';\n\nconst Storage = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getStoragePoints,\n  getStorageDetails,\n  storagePoints,\n  storageDetails,\n  selectedItem,\n  setStorageItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  const isMssql = protocol === DbmsType.MSSQL;\n\n  useEffect(() => {\n    if (!storedEntries && !isMssql) {\n      getStoragePoints({ fullPath });\n      getStorageDetails({\n        selectedItem,\n        fullPath\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        {isMssql ? (\n          <ConnectedMssqlStorage />\n        ) : (\n          <DbObjects\n            loadingFlags={loadingFlags}\n            type={level}\n            data={storageDetails}\n            list={storagePoints}\n            selectedItem={selectedItem}\n            setItem={setStorageItem}\n            dbName={dbName}\n          />\n        )}\n      </Paper.Content>\n    </>\n  );\n};\n\nStorage.propTypes = {\n  storeState: PropTypes.object,\n  storagePoints: PropTypes.array,\n  storageDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setStorageItem: PropTypes.func,\n  selectedItem: PropTypes.string,\n  getStoragePoints: PropTypes.func\n};\n\nexport const ConnectedStorage = connect(\n  state => ({\n    storeState: state.explorer.state,\n    storagePoints: getFormattedStorage(state),\n    selectedItem: state.explorer.storage.selected,\n    loadingFlags: state.explorer.flags.storage,\n    storedEntries: haveStorageData(state),\n    storageDetails: getStorageDetailsData(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setStorageItem: path => dispatch(setStorageItemThunk(path)),\n    getStorageDetails: filters => dispatch(loadStorageDetailsThunk(filters)),\n    getStoragePoints: filters => dispatch(loadStoragePointsThunk(filters))\n  })\n)(Storage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getFullPath, getMssqlStorageDetails } from '../../../store/selectors';\nimport { loadMssqlStorageDataThunk } from '../../../store/thunks';\nimport PropTypes from 'prop-types';\nimport { LOAD_MSSQL_DISK_IO, LOAD_MSSQL_FILE_STORAGE, LOAD_MSSQL_STORAGE_USED } from '../../../store/actions';\nimport { Center, Table, LightTooltip } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\n\nimport './MssqlStorage.local.scss';\nimport { formatMemorySizeGb } from '../../../../license-collection/utils/formatMemoryZiseGb';\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"storage-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"storage-cell\">{name}</span>;\n};\n\nconst diskIOColumns = [\n  { label: 'Database Name' },\n  { label: 'Physical Name' },\n  { label: 'ID' },\n  { label: 'IO Stall' },\n  { label: 'IO Stall Queued Read' },\n  { label: 'IO Stall Queued Write' },\n  { label: 'IO Stall Read' },\n  { label: 'IO Stall Write' },\n  { label: 'Number of Bytes Read' },\n  { label: 'Number of Bytes Written' },\n  { label: 'Number of Reads' },\n  { label: 'Number of Writes' },\n  { label: 'Sample' },\n  { label: 'Size On Disk (GB)' },\n  { label: 'Type Desc' },\n];\n\nconst diskIOTableProps = { columns: diskIOColumns, sortBehavior: { sortKey: 'mockedColumn', order: 'desc' }, changeSort: () => {} };\n\nconst diskIORowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"storage-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_name} />\n    </Table.Cell>\n    <Table.Cell>{row.dbid}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_queued_read_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_queued_write_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_read_ms)}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.io_stall_write_ms)}</Table.Cell>\n    <Table.Cell>{row.num_of_bytes_read}</Table.Cell>\n    <Table.Cell>{row.num_of_bytes_written}</Table.Cell>\n    <Table.Cell>{row.num_of_reads}</Table.Cell>\n    <Table.Cell>{row.num_of_writes}</Table.Cell>\n    <Table.Cell>{formatTimePeriod(row.sample_ms)}</Table.Cell>\n    <Table.Cell>{formatMemorySizeGb(row.size_on_disk_bytes)}</Table.Cell>\n    <Table.Cell>{row.type_desc}</Table.Cell>\n  </Table.Row>\n);\n\nconst fileStorageColumns = [\n  { label: 'Name' },\n  { label: 'Physical Name' },\n  { label: 'Data Space ID' },\n  { label: 'File ID' },\n  { label: 'Growth' },\n  { label: 'Size' },\n  { label: 'Max Size' },\n  { label: 'State' },\n  { label: 'State Desc' },\n  { label: 'Type' },\n  { label: 'Type Desc' },\n];\n\nconst fileStorageTableProps = { columns: fileStorageColumns, sortBehavior: { sortKey: 'mockedColumn', order: 'desc' }, changeSort: () => {} };\n\nconst fileStorageRowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.name}_${index}`} className=\"storage-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.name} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_name} />\n    </Table.Cell>\n    <Table.Cell>{row.data_space_id}</Table.Cell>\n    <Table.Cell>{row.file_id}</Table.Cell>\n    <Table.Cell>{row.growth}</Table.Cell>\n    <Table.Cell>{row.size}</Table.Cell>\n    <Table.Cell>{row.max_size}</Table.Cell>\n    <Table.Cell>{row.state}</Table.Cell>\n    <Table.Cell>{row.state_desc}</Table.Cell>\n    <Table.Cell>{row.type}</Table.Cell>\n    <Table.Cell>{row.type_desc}</Table.Cell>\n  </Table.Row>\n);\n\nconst PieChartColors = [\n  '#176BA0', '#A6EAA5', '#E8F9F5', '#1AC9E6', '#6DF0D2',\n  '#7D3AC1', '#EA7369', '#1DE4BD', '#EF7E32', '#F0A58F',\n  '#C02323', '#DB4CB2', '#4C6BDB', '#F1DE2C', '#399137'\n];\n\nconst PieChartTooltip = (entry) => {\n  const { payload } = entry;\n  if (!payload.length) {\n    return '';\n  }\n  const { label, value } = payload[0].payload;\n  return (\n    <span className=\"pie-chart-tooltip\">{label}: {formatMemorySizeGb(value)} GB</span>\n  );\n};\n\nclass MssqlStorage extends React.PureComponent {\n  componentDidMount() {\n    const { fullPath, getMssqlStorageData } = this.props;\n    // timeouts needed for BE to be ready to process next request\n    getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.DiskFileIO', storageKey: LOAD_MSSQL_DISK_IO });\n    setTimeout(() => {\n      getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.StorageUsed', storageKey: LOAD_MSSQL_STORAGE_USED });\n    }, 1000);\n    setTimeout(() => {\n      getMssqlStorageData({ fullPath, process: 'vendita.microsoft.sqlserver.monitor.storage.file_storage', storageKey: LOAD_MSSQL_FILE_STORAGE });\n    }, 2000);\n  }\n\n  render() {\n    const { storageData, loadingFlags } = this.props;\n    const dataLoading = loadingFlags.loadingDiskIO || loadingFlags.loadingStorageUsed || loadingFlags.loadingFileStorage;\n    const usedStorageInfo = storageData.storageUsed && storageData.storageUsed.length ? storageData.storageUsed[0] : null;\n    const hasFileStorageInfo = storageData.fileStorage && storageData.fileStorage.length;\n    const hasDiskIOInfo = storageData.diskIO && storageData.diskIO.length;\n    const hasAnyData = !!usedStorageInfo || hasDiskIOInfo || hasFileStorageInfo;\n    let storagePieData = [];\n\n    if (dataLoading) {\n      return (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      );\n    }\n\n    if (!hasAnyData) {\n      return (\n        <Center>\n          No Storage Data Available.\n        </Center>\n      );\n    }\n\n    if (hasDiskIOInfo) {\n      storagePieData = this.prepareStorageGraphData(storageData);\n    }\n\n    return (\n      <div className=\"mssql-storage-container\">\n        {usedStorageInfo ? (\n          <div className=\"mssql-storage-used\">\n            <div className=\"mssql-storage-used-label\">Database Size:</div>\n            <div className=\"mssql-storage-used-value\">{usedStorageInfo.database_size}</div>\n            <div className=\"mssql-storage-used-label\">Unallocated Space:</div>\n            <div className=\"mssql-storage-used-value\">{usedStorageInfo.unallocated_space}</div>\n          </div>\n        ) : ''}\n        {hasFileStorageInfo ? (\n          <div>\n            <h3 className=\"mssql-table-title\">File Storage</h3>\n            <Table {...fileStorageTableProps} className=\"table\">\n              {storageData.fileStorage.map((db, index) => fileStorageRowRenderer(db, index))}\n            </Table>\n          </div>\n        ) : '' }\n        {hasDiskIOInfo ? (\n          <>\n            <h3 className=\"mssql-table-title\">Disk IO</h3>\n            <Table {...diskIOTableProps} className=\"table\">\n              {storageData.diskIO.map((db, index) => diskIORowRenderer(db, index))}\n            </Table>\n            {storagePieData.length && (\n              <ResponsiveContainer height={400}>\n                <PieChart>\n                  <Pie data={storagePieData} dataKey=\"value\" cx=\"50%\" cy=\"50%\" innerRadius={0} outerRadius={150}>\n                    {storagePieData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={PieChartColors[index]} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={PieChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            )}\n          </>\n        ) : ''}\n      </div>\n    );\n  }\n\n  prepareStorageGraphData = (storageData) => {\n    const logsStorageSize = storageData.diskIO\n      .filter((item) => item.type_desc === 'LOG')\n      .map((item) => item.size_on_disk_bytes)\n      .reduce((sum, item) => {\n        sum += +item;\n        return sum;\n      }, 0);\n\n    return storageData.diskIO\n      .filter((item) => item.type_desc === 'ROWS')\n      .map((item) => {\n        return {\n          label: item.Database_name,\n          value: item.size_on_disk_bytes\n        };\n      }).concat([{\n        label: 'All logs',\n        value: logsStorageSize\n      }]);\n  }\n}\n\nMssqlStorage.propTypes = {\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  getMssqlStorageData: PropTypes.func\n};\n\nexport const ConnectedMssqlStorage = connect(\n  state => ({\n    loadingFlags: state.explorer.flags.storage,\n    fullPath: getFullPath(state),\n    storageData: getMssqlStorageDetails(state)\n  }),\n  dispatch => ({\n    getMssqlStorageData: filters => dispatch(loadMssqlStorageDataThunk(filters))\n  })\n)(MssqlStorage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, objectsLoaderResolver, setSelectedObjectThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport {\n  getFullPath,\n  getInvalidObjects,\n  getStructuredObjects,\n  haveObjectsData,\n  objectsSelectorResolver\n} from '../../store/selectors';\n\nconst Objects = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getObjects,\n  objectsData,\n  invalidObjects,\n  objectDetails,\n  selectedItem,\n  setObjectsItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  useEffect(() => {\n    if (!storedEntries) {\n      getObjects({\n        fullPath,\n        protocol\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          invalidObjects={invalidObjects}\n          data={objectDetails}\n          list={objectsData}\n          selectedItem={selectedItem}\n          setItem={setObjectsItem}\n          dbName={dbName}\n          protocol={protocol}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nObjects.propTypes = {\n  storeState: PropTypes.object,\n  objectsData: PropTypes.array,\n  objectDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setObjectsItem: PropTypes.func,\n  selectedItem: PropTypes.object,\n  getObjects: PropTypes.func\n};\n\nexport const ConnectedObjects = connect(\n  state => {\n    const { state: { path } } = state.explorer;\n    const [protocol] = path.split('--');\n\n    return {\n      storeState: state.explorer.state,\n      objectsData: getStructuredObjects(state),\n      selectedItem: {\n        owner: state.explorer.objects.selectedOwner,\n        object: state.explorer.objects.selectedObject\n      },\n      loadingFlags: state.explorer.flags.objects,\n      objectDetails: objectsSelectorResolver(state, protocol),\n      invalidObjects: getInvalidObjects(state),\n      fullPath: getFullPath(state),\n      storedEntries: haveObjectsData(state)\n    };\n  },\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setObjectsItem: object => dispatch(setSelectedObjectThunk(object)),\n    getObjects: filters => dispatch(objectsLoaderResolver(filters))\n  })\n)(Objects);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  changeStateThunk,\n  disableSessionsLoadingFlag,\n  enableSessionsLoadingFlag,\n  sessionsLoaderResolver\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { Button } from 'shared/components/controls';\nimport { FormattedMessage } from 'react-intl';\nimport { getFullPath, getSortedSessions } from '../../store/selectors';\nimport { CommonSessionsTable } from './tables/CommonSessionsTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlSessionsTable } from './tables/MssqlSessionsTable';\nimport './Sessions.local.scss';\n\nexport class Sessions extends React.PureComponent {\n  componentDidMount() {\n    this.getSessionsData();\n  }\n\n  render() {\n    const {\n      level,\n      sessions,\n      isLoading,\n      changeTab,\n      fullPath,\n      enableLoadingFlag,\n      disableLoadingFlag,\n      storeState: { path }\n    } = this.props;\n\n    const [protocol] = path.split('--');\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol !== DbmsType.MSSQL && (\n            <CommonSessionsTable isLoading={isLoading} sessions={sessions} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlSessionsTable\n              isLoading={isLoading}\n              sessions={sessions}\n              dbms={fullPath}\n              refreshSessions={this.getSessionsData}\n              enableLoadingFlag={enableLoadingFlag}\n              disableLoadingFlag={disableLoadingFlag}\n            />\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getSessionsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getSessionsData = () => {\n    const {\n      fullPath,\n      storeState: { path }\n    } = this.props;\n    const [protocol] = path.split('--');\n\n    this.props.getSessions({\n      fullPath,\n      protocol,\n      page_size: 2147483645\n    });\n  };\n}\n\nSessions.propTypes = {\n  level: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  fullPath: PropTypes.string.isRequired,\n  changeTab: PropTypes.func\n};\n\nexport const ConnectedSessions = connect(\n  state => ({\n    sessions: getSortedSessions(state),\n    level: state.explorer.state.level,\n    isLoading: state.explorer.flags.sessions.loading,\n    fullPath: getFullPath(state),\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getSessions: filters => dispatch(sessionsLoaderResolver(filters)),\n    enableLoadingFlag: () => dispatch(enableSessionsLoadingFlag()),\n    disableLoadingFlag: () => dispatch(disableSessionsLoadingFlag())\n  })\n)(Sessions);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../Sessions.local.scss';\n\nconst columns = [\n  { label: 'Serial #' },\n  { label: 'Username' },\n  { label: 'Status' },\n  { label: 'Machine' },\n  { label: 'SID' },\n  { label: 'Logon time', sortKey: 'LOGON_TIME' },\n  { label: 'Program' },\n  { label: 'Type' }\n  // { label: '' } -> disabled view details button for now...\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row['SERIAL#']} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USERNAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATUS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MACHINE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.LOGON_TIME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PROGRAM} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.TYPE} />\n    </Table.Cell>\n    {/* <Table.Cell padding=\"none\" className=\"view-details\">\n      <LightTooltip placement=\"bottom\" title={<span>View Details</span>}>\n        <SvgIcon>\n          <Icon path={mdiViewCompact} />\n        </SvgIcon>\n      </LightTooltip>\n    </Table.Cell> */}\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map(rowRenderer)}</Table>;\n};\n\nexport class CommonSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'LOGON_TIME', order: 'asc' }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          noDataMessage=\"No Sessions Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.LOGON_TIME - o2.LOGON_TIME) * orderMultiplier;\n    });\n  }\n}\n\nCommonSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDelete } from '@mdi/js';\nimport { ConfirmationModal, ErrorModal } from '../../../../shared/components/overlays';\nimport { invocationOutputPoller, postInvocation } from '../../../../shared/api/invocation';\n\nimport '../Sessions.local.scss';\nimport './MssqlSessionsTable.local.scss';\n\nconst columns = [\n  { label: 'SPID', sortKey: 'spid' },\n  { label: 'ECID' },\n  { label: 'Status' },\n  { label: 'Login Name' },\n  { label: 'Host Name' },\n  { label: 'blk' },\n  { label: 'DB Name' },\n  { label: 'CMD' },\n  { label: 'Request ID' },\n  { label: 'Kill Session' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index, killSession) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.spid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ecid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.status} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.loginame} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.hostname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.blk} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.dbname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.cmd} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.request_id} />\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"icon-cell\">\n        {(row.hostname || '').trim().length > 0 && parseInt(row.spid, 10) >= 50 && (\n          <SvgIcon onClick={() => killSession(row.spid)}>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        )}\n      </div>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps, openKillSessionConfirmation }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map((row, index) => rowRenderer(row, index, (sessionId) => openKillSessionConfirmation(sessionId)))}</Table>;\n};\n\nexport class MssqlSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'spid', order: 'asc' },\n      killSessionConfirmationOpen: false,\n      sessionIdToKill: null\n    };\n\n    this.killSessionConfirmationActions = {\n      open: (sessionId) => {\n        this.setState({ killSessionConfirmationOpen: true, sessionIdToKill: sessionId });\n      },\n      close: () => {\n        this.setState({ killSessionConfirmationOpen: false, sessionIdToKill: null });\n      },\n      confirm: () => {\n        const { sessionIdToKill } = this.state;\n        this.props.enableLoadingFlag();\n        this.killSession(sessionIdToKill).then((result) => {\n          if (result) {\n            this.props.refreshSessions();\n          } else {\n            this.props.disableLoadingFlag();\n            this.killSessionErrorModalActions.open();\n          }\n        });\n      }\n    };\n\n    this.killSessionErrorModalActions = {\n      open: () => {\n        this.setState({ killSessionErrorOpen: true });\n      },\n      close: () => {\n        this.setState({ killSessionErrorOpen: false });\n      }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading,\n    } = this.props;\n\n    const { sortBehavior, killSessionConfirmationOpen, killSessionErrorOpen } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          openKillSessionConfirmation={(sessionId) => this.killSessionConfirmationActions.open(sessionId)}\n          noDataMessage=\"No Sessions Available\"\n        />\n        <ConfirmationModal open={killSessionConfirmationOpen} actions={this.killSessionConfirmationActions} message=\"Are you sure you want to kill this session?\" />\n        <ErrorModal open={killSessionErrorOpen} actions={this.killSessionErrorModalActions} message=\"Failed to kill this session. Please refresh the page and try again.\" />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.spid - o2.spid) * orderMultiplier;\n    });\n  };\n\n  killSession = async (sessionId) => {\n    const { dbms } = this.props;\n    const payload = {\n      parameters: {\n        session_id: sessionId,\n        dbconn: dbms,\n        oformat: 'JSON',\n        compact: true\n      },\n      process: 'dbatools.mssql.security.session_kill',\n      timestamp: null\n    };\n\n    const creationResult = await postInvocation(payload);\n    if (creationResult.invocations.length) {\n      const invocationUuid = creationResult.invocations[0].uuid;\n      return invocationOutputPoller(invocationUuid);\n    }\n    return Promise.resolve(null);\n  };\n}\n\nMssqlSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array,\n  dbms: PropTypes.string,\n  refreshSessions: PropTypes.func,\n  enableLoadingFlag: PropTypes.func,\n  disableLoadingFlag: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeStateThunk, loadTopSQLStatementsThunk } from '../../store/thunks';\nimport { getFullPath, selectTopSqlStatements } from '../../store/selectors';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '../../../shared/components/controls';\nimport { ElapsedTimeChart } from './charts/ElapsedTimeChart';\nimport { TopSqlStatementsUtil } from './TopSqlStatementsUtil';\nimport { OracleTopSQLTable } from './tables/OracleTopSQLTable';\nimport { PostgresTopSQLTable } from './tables/PostgresTopSQLTable';\nimport './TopSQLStatements.local.scss';\nimport { MysqlTopSQLTable } from './tables/MysqlTopSQLTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlTopSQLTable } from './tables/MssqlTopSQLTable';\n\nexport class TopSQLStatements extends React.PureComponent {\n  componentDidMount() {\n    this.getTopSqlStatementsData();\n  }\n\n  render() {\n    const {\n      storeState: { level, path },\n      topSqlStatements,\n      isLoading,\n      changeTab\n    } = this.props;\n\n    const [protocol] = path.split('--');\n    const elapsedTimeChartData = TopSqlStatementsUtil.isChartSupported(protocol) ? this.prepareChartData(topSqlStatements) : null;\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol === DbmsType.ORACLE && (\n            <OracleTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.POSTGRES && (\n            <PostgresTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MYSQL && (\n            <MysqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {TopSqlStatementsUtil.isChartSupported(protocol) && (\n            <div className=\"graph-container\">\n              {elapsedTimeChartData.length > 0 && (\n                <ElapsedTimeChart data={elapsedTimeChartData} />\n              )}\n            </div>\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getTopSqlStatementsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getTopSqlStatementsData = () => {\n    const {\n      storeState: { path },\n      fullPath\n    } = this.props;\n    const [protocol] = path.split('--');\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: TopSqlStatementsUtil.getEndpoint(protocol),\n      timestamp: null\n    };\n\n    this.props.getTopSqlStatements(payload);\n  };\n\n  prepareChartData = (topStatementsData) => {\n    return (topStatementsData || []).map((row) => {\n      const timeMillis = Math.round(row.ELAPSED_TIME / 1000);\n      const cpuTime = Math.round((timeMillis / 100) * row.PCT_CPU);\n      const ioTime = Math.round((timeMillis / 100) * row.PCT_IO);\n      return {\n        sqlId: row.SQL_ID,\n        timeMillisFull: timeMillis,\n        timeMillis: timeMillis - cpuTime - ioTime,\n        cpuTime,\n        ioTime,\n        cpuPercent: row.PCT_CPU,\n        ioPercent: row.PCT_IO\n      };\n    });\n  }\n}\n\nTopSQLStatements.propTypes = {\n  isLoading: PropTypes.bool,\n  getTopSqlStatements: PropTypes.func,\n  storeState: PropTypes.object,\n  topSqlStatements: PropTypes.array\n};\n\nexport const ConnectedTopSQLStatements = connect(\n  state => ({\n    topSqlStatements: selectTopSqlStatements(state),\n    isLoading: state.explorer.flags.topSqlStatements.loading,\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getTopSqlStatements: filters => dispatch(loadTopSQLStatementsThunk(filters))\n  })\n)(TopSQLStatements);\n","import React from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport './ElapsedTimeChart.local.scss';\n\nconst renderCustomXAxisTick = ({ x, y, payload }) => {\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-80)\">{payload.value}</text>\n    </g>\n  );\n};\n\nconst renderLegend = ({ payload }) => {\n  return (\n    <ul className=\"elapsed-time-chart-legend\">\n      {\n        (payload || []).map((entry, index) => (\n          <li className=\"legend-item\" key={`item-${index}`}>\n            <span className=\"icon\" style={{ backgroundColor: entry.color }} />\n            <span className=\"label\" style={{ color: entry.color }}>{entry.value}</span>\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nconst renderChartTooltip = (data) => {\n  if (!data || !data.payload || !data.payload.length) {\n    return '';\n  }\n\n  const [elapsedTimeData] = data.payload;\n  const { sqlId, timeMillisFull, cpuPercent, cpuTime, ioPercent, ioTime } = elapsedTimeData.payload;\n  return (\n    <div className=\"elapsed-time-chart-tooltip\">\n      <div className=\"row\"><strong className=\"label\">SQL ID: </strong><span className=\"value\">{sqlId}</span></div>\n      <div className=\"row\"><strong className=\"label\">Elapsed Time: </strong><span className=\"value\">{formatTimePeriod(timeMillisFull)}</span></div>\n      <div className=\"row\"><strong className=\"label\">CPU: </strong><span className=\"value\">{cpuPercent}% ({formatTimePeriod(cpuTime)})</span></div>\n      <div className=\"row\"><strong className=\"label\">I/O: </strong><span className=\"value\">{ioPercent}% {ioPercent > 0 ? `(${formatTimePeriod(ioTime)})` : ''}</span></div>\n    </div>\n  );\n};\n\nexport const ElapsedTimeChart = ({ data }) => {\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data} margin={{ top: 50, right: 30, left: 70, bottom: 100 }} barGap={-10}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <Legend content={renderLegend} align=\"right\" verticalAlign=\"top\" layout=\"vertical\" width={200} />\n        <Tooltip content={renderChartTooltip} cursor={{ fill: '#eeeeee' }} />\n\n        <XAxis dataKey=\"sqlId\" axisLine=\"false\" interval={0} tick={renderCustomXAxisTick} />\n        <YAxis dataKey=\"timeMillisFull\" domain={['auto', 'auto']} tickFormatter={tick => formatTimePeriod(tick)} />\n\n        <Bar dataKey=\"cpuTime\" stackId=\"common\" name=\"CPU, %\" fill=\"#1ac9e6\" />\n        <Bar dataKey=\"ioTime\" stackId=\"common\" name=\"I/O, %\" fill=\"#c02323\" />\n        <Bar dataKey=\"timeMillis\" stackId=\"common\" name=\"Elapsed Time\" fill=\"#176BA0\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'SQL ID' },\n  { label: 'Child Number' },\n  { label: 'SQL Text' },\n  { label: 'Module' },\n  { label: 'Executions' },\n  { label: 'Elapsed Time', sortKey: 'ELAPSED_TIME' },\n  { label: 'Elapsed Per Exec' },\n  { label: 'CPU, %' },\n  { label: 'I/O, %' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESS_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SQL_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.CHILD_NUMBER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_TEXT); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_TEXT} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MODULE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.EXECUTIONS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_PER_EXEC, 10)))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_CPU} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_IO} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class OracleTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'ELAPSED_TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.ELAPSED_TIME - o2.ELAPSED_TIME) * orderMultiplier;\n    });\n  }\n}\n\nOracleTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'User ID' },\n  { label: 'Query ID' },\n  { label: 'Query' },\n  { label: 'Executions' },\n  { label: 'Average Time', sortKey: 'avg_time_ms' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.queryid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.userid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.queryid} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.query); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.query} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.calls} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.avg_time_ms, 10))} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class PostgresTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'avg_time_ms', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.avg_time_ms - o2.avg_time_ms) * orderMultiplier;\n    });\n  }\n}\n\nPostgresTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'User' },\n  { label: 'SQL Text' },\n  { label: 'Elapsed Time', sortKey: 'TIME' },\n  { label: 'State' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.SESSION_ID}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESSION_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_Text); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_Text} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATE} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MysqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.TIME - o2.TIME) * orderMultiplier;\n    });\n  }\n}\n\nMysqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Database Name' },\n  { label: 'SQL Text' },\n  { label: 'Executions' },\n  { label: 'Total CPU Time' },\n  { label: 'Avg CPU Time' },\n  { label: 'Max Elapsed Time', sortKey: 'MaxElapsedTime' },\n  { label: 'Avg Elapsed Time' },\n  { label: 'Logical Reads' },\n  { label: 'Physical Reads' },\n  { label: 'Logical Writes' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.QueryName); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.QueryName} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ExecutionCount} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row['Total_CPU_Time(second)'], 10) * 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row['Average_CPU_Time(milisecond)'], 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.MaxElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.AvgElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.Logical_Reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.logical_writes} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MssqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'MaxElapsedTime', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.MaxElapsedTime - o2.MaxElapsedTime) * orderMultiplier;\n    });\n  }\n}\n\nMssqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiTable, mdiViewComfy } from '@mdi/js';\nimport { SystemExplorerViewMode } from './SystemExplorerViewMode';\n\nimport './ToggleSystemExplorerView.local.scss';\n\nexport const ToggleSystemExplorerView = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Table View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TABLE\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TABLE)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiTable} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Tiles View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TILES\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TILES)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiViewComfy} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../shared/components';\nimport { array, func } from 'prop-types';\nimport { Paper } from '../../../shared/components/layout';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { connect } from 'react-redux';\nimport { getDBStatus, getDBStatusInfo, getEntityPendingStatus, getServerStatus } from '../../store/selectors';\nimport { StatusLabel } from '../StatusLabel/StatusLabel';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { Button } from 'shared/components/controls';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport Refresh from '@material-ui/icons/Refresh';\nimport { Loader } from '../../../shared/components/loaders';\nimport { AddServerCard } from '../../containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../containers/ImportCSV/ImportCSV';\nimport { DatabaseSettings } from '../../containers/Settings/DatabaseSettings';\n\nimport './SystemExplorerTable.local.scss';\n\nconst HostnameCellWithTooltip = ({ name }) => {\n  if (name && name.length > 15) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"hostname-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"hostname-cell\">{name}</span>;\n};\n\nconst columns = [\n  { label: 'Hostname' },\n  { label: 'Server' },\n  { label: 'Port', align: 'center' },\n  { label: 'User', align: 'center' },\n  { label: 'Server Status', align: 'center' },\n  { label: 'Database Status', align: 'center' },\n  { label: 'Workload', align: 'center' },\n  { label: 'Session', align: 'center' },\n  { label: 'Top SQL', align: 'center' },\n  { label: 'Objects', align: 'center' },\n  { label: 'Storage', align: 'center' },\n];\n\nconst rowRenderer = (database, index, isChecked, updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails) => (\n  <Table.Row hover key={`${database.name}_${index}`} className=\"statement-row\">\n    <Table.Cell padding=\"checkbox\">\n      <Checkbox\n        onChange={(event) => updateSelection(database, event.target.checked)}\n        checked={isChecked}\n        size=\"small\"\n        color=\"primary\"\n        classes={{ root: 'checkbox-custom' }}\n      />\n    </Table.Cell>\n    <Table.Cell padding=\"none\" className=\"host-cell\">\n      <HostnameCellWithTooltip name={SystemExplorerFeatureUtil.splitAccountName(database.name)} />\n    </Table.Cell>\n    <Table.Cell className=\"address-cell\">\n      {database.address}\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"centered-cell\">{database.port}</div>\n    </Table.Cell>\n    <Table.Cell className=\"user-cell\">\n      <div className=\"centered-cell\">{database.user}</div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveServerStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveDbStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isWorkloadAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'workload' })}>\n          <Icon path={mdiChartTimelineVariant} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isSessionsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'sessions' })}>\n          <Icon path={mdiCheckboxMultipleBlankOutline} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isTopSqlAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'topsql' })}>\n          <Icon path={mdiFormatAlignTop} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isObjectsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'objects' })}>\n          <Icon path={mdiShape} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isStorageAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'storage' })}>\n          <Icon path={mdiHexagonSlice2} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    {SystemExplorerFeatureUtil.isLicenseReportingAllowed(database.protocol) && (\n      <Table.Cell>\n        <div className=\"icon-cell\">\n          <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'license' })}>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        </div>\n      </Table.Cell>\n    )}\n  </Table.Row>\n);\n\nconst testConnectionsTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={clickHandler}\n      startIcon={<Refresh />}\n      classes={{ root: 'green-btn toolbar-btn' }}\n      disabled={isDisabled}\n    >\n      Test Connection\n    </Button>\n  );\n};\n\nconst addServerTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Add New Server\n    </Button>\n  );\n};\n\nconst addDatabaseTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Add New Database\n    </Button>\n  );\n};\n\nconst importCsvTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'toolbar-btn' }}\n      onClick={clickHandler}\n    >\n      Import from CSV\n    </Button>\n  );\n};\n\nconst editDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'yellow-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled}\n    >\n      Edit Database\n    </Button>\n  );\n};\n\nconst deleteDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'red-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled}\n    >\n      Delete Database\n    </Button>\n  );\n};\n\nclass SystemExplorerTable extends React.PureComponent {\n  allGroups = [];\n\n  allDatabases = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDbs: []\n    };\n\n    const { data } = this.props;\n    this.allGroups =\n      data.filter(protocolGroup => protocolGroup.databases && protocolGroup.databases.length)\n          .sort((group1, group2) => {\n            return SystemExplorerFeatureUtil.getListOrder(group2.protocol) - SystemExplorerFeatureUtil.getListOrder(group1.protocol);\n          });\n\n    this.allDatabases = this.allGroups.reduce((acc, protocolGroup) => {\n      acc = acc.concat(protocolGroup.databases);\n      return acc;\n    }, []);\n  }\n\n  render() {\n    const {\n      switchToTileView,\n      retrieveDbStatus,\n      retrieveServerStatus,\n      retrievePendingStatus,\n      reloadAccounts,\n      changeState\n    } = this.props;\n    const { selectedDbs } = this.state;\n    const navigateToDetails = (detailsPageParams) => {\n      changeState(detailsPageParams);\n      switchToTileView();\n    };\n\n    return (\n      <Paper>\n        <Paper.Header>\n          <div className=\"system-explorer-table-view\">\n            <div className=\"system-explorer-table-toolbar\">\n              {testConnectionsTrigger(this.testConnections, !selectedDbs.length)}\n              <AddServerCard trigger={addServerTrigger} />\n              <AddDatabaseCard trigger={addDatabaseTrigger} />\n              <ImportCSV trigger={importCsvTrigger} />\n              <DatabaseSettings\n                database={this.getFirstDatabase()}\n                disabled={!this.hasSingleSelection()}\n                editDbTrigger={editDatabaseTrigger}\n                deleteDbTrigger={deleteDatabaseTrigger}\n                reloadAccounts={reloadAccounts}\n              />\n            </div>\n          </div>\n        </Paper.Header>\n        <Paper.Content>\n          <div className=\"system-explorer-table-content\">\n            {this.allGroups.map(protocolGroup => {\n              const columnsConfig = JSON.parse(JSON.stringify(columns));\n              columnsConfig.unshift({ component: this.createCheckboxHeaderColumnConfig(protocolGroup), padding: 'checkbox' });\n              if (SystemExplorerFeatureUtil.isLicenseReportingAllowed(protocolGroup.protocol)) {\n                columnsConfig.push({ label: 'License Reporting', align: 'center' });\n              }\n              const tableProps = { columns: columnsConfig };\n              return (\n                <>\n                  <h3 className=\"protocol-header\">{protocolGroup.protocol}</h3>\n                  <Table {...tableProps} className=\"table\">\n                    {(protocolGroup.databases || []).map((db, index) =>\n                      rowRenderer(db, index, this.isDbSelected(db), this.updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails))}\n                  </Table>\n                </>\n              );\n            })}\n          </div>\n        </Paper.Content>\n      </Paper>\n    );\n  }\n\n  createCheckboxHeaderColumnConfig = (protocolGroup) => {\n    return () => {\n      return (\n        <Checkbox\n          size=\"small\"\n          color=\"primary\"\n          onChange={(event) => this.toggleDbsSelectionByProtocol(event, protocolGroup)}\n          checked={this.isAllDbsByProtocolSelected(protocolGroup.protocol)}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      );\n    };\n  };\n\n  updateSelection = (database, isChecked) => {\n    const { selectedDbs } = this.state;\n    const dbIndex = selectedDbs.findIndex((db) => db.name === database.name);\n\n    if (isChecked && dbIndex === -1) {\n      selectedDbs.push(database);\n    } else if (dbIndex !== -1) {\n      selectedDbs.splice(dbIndex, 1);\n    }\n\n    this.setState({ selectedDbs });\n    this.forceUpdate();\n  };\n\n  toggleDbsSelectionByProtocol = (event, protocolGroup) => {\n    const shouldAddAll = !this.isAllDbsByProtocolSelected(protocolGroup.protocol);\n    const { selectedDbs } = this.state;\n    const allWithoutCurrent = this.clearDbsByProtocol(selectedDbs, protocolGroup.protocol);\n\n    if (shouldAddAll) {\n     this.setState({ selectedDbs: [...allWithoutCurrent, ...protocolGroup.databases] });\n    } else {\n      this.setState({ selectedDbs: [...allWithoutCurrent] });\n    }\n    this.forceUpdate();\n  };\n\n  clearDbsByProtocol = (dbs, protocol) => {\n    return dbs.filter((db) => db.protocol !== protocol);\n  };\n\n  isAllDbsByProtocolSelected = (protocol) => {\n    const allByProtocol = this.allDatabases.filter((db) => db.protocol === protocol);\n    const selectedByProtocol = (this.state.selectedDbs || []).filter((db) => db.protocol === protocol);\n    return allByProtocol.length === selectedByProtocol.length;\n  }\n\n  testConnections = () => {\n    const { selectedDbs } = this.state;\n    const { refreshDatabaseStatus } = this.props;\n    (selectedDbs || []).forEach(db => refreshDatabaseStatus(db));\n  };\n\n  isDbSelected = (db) => {\n    const { selectedDbs } = this.state;\n    return selectedDbs.some((selected) => selected.name === db.name);\n  };\n\n  hasSingleSelection = () => {\n    const { selectedDbs } = this.state;\n    return !!selectedDbs && selectedDbs.length === 1;\n  };\n\n  getFirstDatabase = () => {\n    const { selectedDbs } = this.state;\n    return this.hasSingleSelection() ? selectedDbs[0] : null;\n  };\n}\n\nSystemExplorerTable.propTypes = {\n  data: array,\n  switchToTileView: func\n};\n\nexport const ConnectedSystemExplorerTable = connect(\n  state => {\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      statuses,\n      retrieveServerStatus: server => getServerStatus(server, statuses),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database => getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(SystemExplorerTable);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postCompile() {\n  return RestClient.post('/compile');\n}\n","module.exports = __webpack_public_path__ + \"svgs/6842f8a8cfcb1999b9a1e64174e25a11.svg\";","module.exports = __webpack_public_path__ + \"svgs/727bf5a83867f2c49ff66ab6df50ae78.svg\";","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport './job-process.local.scss';\n\nimport { getInvocation } from './store/selectors';\nimport { invocationPoller } from './store/tasks';\nimport { AllowOutputFor } from './store/constants';\n\nimport JobForm from './job-form';\n\nimport { JobOutput } from './containers/output/output';\nimport { JobStatus } from './components/JobStatus/JobStatus';\n\nexport const JobView = ({ invocation, redirected }) => {\n  const [tab, setTab] = useState('details');\n\n  useEffect(() => {\n    invocationPoller.start();\n\n    return function stopPolling() {\n      invocationPoller.stop();\n    };\n  }, [invocation.status]);\n\n  if (!invocation || invocation.status === 'NOT_FETCHED') {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Fetching invocation</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <ViewTabs invocation={invocation} active={tab} changeTab={setTab} />\n        <JobStatus />\n      </Paper.Header>\n      <Switch value={tab}>\n        <Switch.Case value=\"details\">\n          <JobForm redirected={redirected} />\n        </Switch.Case>\n        <Switch.Case value=\"output\">\n          <JobOutput />\n        </Switch.Case>\n      </Switch>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    invocation: getInvocation(state)\n  };\n}, {})(JobView);\n\nfunction ViewTabs({ active, changeTab, invocation }) {\n  const withOutput = AllowOutputFor.includes(invocation.status);\n  const tabs = [{ label: 'Job Details', value: 'details', active: true }];\n  if (withOutput) {\n    tabs.push({ label: 'Output', value: 'output' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { isEmpty, pickBy } from 'lodash';\nimport moment from 'moment';\nimport { Switch } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Notifications } from './containers/notifications/notifications';\nimport { Formik, Form } from 'formik';\nimport { Text, Date, Time } from 'shared/components/form/editors/Generic';\nimport { PlatformSelect, ProcessTypeSelect, ProcessSelect, PLATFORMS, PROCESS_TYPES } from 'shared/components/form/editors/Custom';\nimport { Button } from 'shared/components/controls';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Section, Row, Column } from '../shared/components/layout';\nimport { getCurrentUserDetails, getCurrentUserName } from '../session/store/selectors';\nimport { getInvocation } from './store/selectors';\nimport { AllowGeneralEditingFor, InvocationStatus } from './store/constants';\nimport { postInvocation } from 'shared/api/invocation';\nimport { ProcessParameters } from './job-parameters';\nimport { Schedule } from 'jobs/containers/Schedule/Schedule';\nimport { ConnectedDeleteJobModal } from 'jobs/actions/delete/DeleteJobModal';\nimport { hasCreatePrivilege } from '../entities/utils/privileges';\nimport { SecurityAreas } from '../entities/utils/security-areas';\n\nimport './job-process.local.scss';\n\nconst JobForm = ({ loggedInAs, invocation, redirected, userDetails }) => {\n  const history = useHistory();\n\n  const [editable, setEditable] = useState(AllowGeneralEditingFor.includes(invocation.status));\n\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const { initialValues, disabledFields } = deriveFormState(invocation, editable);\n\n  const availableProcess = (platformVal, typeVal, processVal) => {\n    const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n    const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n    const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n    const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n    return (platformMatches && typeMatches) ? processVal : '';\n  };\n\n  const userValue = editable ? loggedInAs : invocation.user_owner;\n  const dateValue = editable\n    ? moment()\n        .utc()\n        .format('MM/DD/YYYY')\n    : moment(invocation.date_invoke).format('MM/DD/YYYY');\n  const timeValue = editable\n    ? moment()\n        .utc()\n        .format('HH:mm')\n    : moment(invocation.date_invoke).format('HH:mm');\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n\n  const extraValidations = values => {\n    const errors = {};\n    const { date_invoke, time_invoke } = values;\n\n    if (!moment(date_invoke).isValid()) {\n      errors.date_invoke = 'Invalid date format';\n    }\n\n    if (!/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/.test(time_invoke)) {\n      errors.time_invoke = 'Invalid time format';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(true);\n          handleJobCreation(values, monitor).then(({ result, invocations }) => {\n            if (result === 'success') {\n              const { uuid } = invocations[0];\n\n              history.push(`/jobs/job?invocation=${uuid}`);\n            }\n          });\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Column xs={4}>\n                          <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(value, formik.values.type, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.platform || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessTypeSelect\n                            name=\"type\"\n                            label=\"Type\"\n                            description=\"Select a type to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(formik.values.platform, value, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.type || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessSelect\n                            name=\"process\"\n                            label=\"Process\"\n                            value={invocation.process}\n                            required\n                            disabled={disabledFields.process || !editable || redirected}\n                          />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column xs={3}>\n                          <Date\n                            name=\"date_invoke\"\n                            label=\"Date\"\n                            disabled={!editable}\n                            value={dateValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Time\n                            name=\"time_invoke\"\n                            label=\"MAS system time (UTC)\"\n                            disabled={!editable}\n                            value={timeValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Text name=\"job_user\" label=\"User\" required disabled value={userValue} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation.parameters} editable={editable} />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row spacing={3}>\n                        <Column xs={12}>\n                          <Notifications\n                            name=\"notifications\"\n                            key={invocation.uuid}\n                            disabled={!editable}\n                            recievedData={derivedMonitor}\n                            onApply={n_state => {\n                              if (n_state.events === 0 || isEmpty(n_state.users)) {\n                                setMonitor({\n                                  enabled: false\n                                });\n                              }\n                              setMonitor({\n                                enabled: true,\n                                ...n_state\n                              });\n                            }}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <a href=\"/ui/#/jobs/\">\n                  <Button>Cancel</Button>\n                  </a>\n                  {invocation.status === 'DELAYED' && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setOpen(true);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  )}\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <FormVerbs\n                    status={invocation.status}\n                    editable={editable}\n                    setEditable={setEditable}\n                    monitor={monitor}\n                    invocation={invocation}\n                    userDetails={userDetails}\n                  />\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={invocation.uuid} />\n      )}\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    loggedInAs: getCurrentUserName(state),\n    invocation: getInvocation(state),\n    userDetails: getCurrentUserDetails(state),\n  };\n}, {})(JobForm);\n\n/* eslint-disable no-unused-vars */\nfunction FormVerbs({ status, editable, setEditable, monitor, invocation, userDetails }) {\n  const makeEditable = () => setEditable(true);\n  const canCreateSchedule = hasCreatePrivilege(userDetails, SecurityAreas.SCHEDULE);\n  if (!canCreateSchedule) {\n    return '';\n  }\n\n  return (\n    <Switch value={editable}>\n      <Switch.Case value>\n        <SubmitButton forcedDisable>{monitor.enabled ? 'Monitor' : 'Run'}</SubmitButton>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Schedule invocation={invocation} userDetails={userDetails} />\n          {canCreateSchedule && (\n            <Button onClick={makeEditable}>Edit</Button>\n          )}\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n}\n\nfunction handleJobCreation(values, monitor) {\n  const {\n    process,\n    platform,\n    type,\n    date_invoke,\n    time_invoke,\n    job_user,\n    ...params_with_maybe_replvars\n  } = values;\n  const sendable = {};\n\n  const { parameters, replvars } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (date_invoke) {\n    const dateMoment = moment(date_invoke, 'MM/DD/YYYY');\n\n    const timeMoment = time_invoke ? moment(time_invoke, 'hh:mm') : moment();\n    const currentDate = moment()\n      .utc()\n      .set('second', 0)\n      .format('YYYY-MM-DDTHH:mm:ss');\n\n    const date = dateMoment.format('YYYY-MM-DD');\n    const time = timeMoment.format('HH:mm');\n    const dateTime = moment(date + ' ' + time, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DDTHH:mm:ss'); // eslint-disable-line prefer-template\n\n    const duration = moment.duration(\n      moment(dateTime, 'YYYY-MM-DD HH:mm').diff(moment(currentDate, 'YYYY-MM-DD HH:mm'))\n    );\n    const minutes = duration.asMinutes();\n\n    if (minutes > 0) {\n      sendable.timestamp = dateTime;\n    } else {\n      sendable.timestamp = null;\n    }\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    sendable.process = 'mas.sys.invocation.notify.create';\n\n    sendable.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      when: sendable.timestamp,\n      events: monitor.events,\n      users: monitor.users\n    };\n\n    sendable.timestamp = null;\n  } else {\n    sendable.process = process;\n\n    sendable.parameters = pickBy(parameters, rejector);\n  }\n\n  return postInvocation(sendable);\n}\n\nfunction deriveFormState(invocation) {\n  const values = {\n    platform: '',\n    type: '',\n    process: invocation.process,\n    parameters: { ...invocation.parameters }\n  };\n  const disabledFields = {\n    ...(invocation.status !== InvocationStatus.NEW && {\n      platform: true,\n      type: true,\n      process: true,\n      user: true,\n      parameters: true\n    })\n  };\n\n  return { initialValues: values, disabledFields };\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  } else if (values['fqname--fqname']) {\n    if (values['fqname--namespace']) {\n      values.fqname = `${values['fqname--namespace']}.${values['fqname--fqname']}`;\n    } else {\n      values.fqname = values['fqname--fqname'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--fqname'];\n  }\n  return values;\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Paper } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\nimport { useSelector } from 'react-redux';\nimport { getInvocation } from '../../store/selectors';\nimport { InvocationStatus } from '../../store/constants';\nimport { ListOutput } from '../../components/ListOutput/ListOutput';\nimport { fetchInvocationOutput } from 'shared/api/invocation';\nimport { sendToEmail } from 'license-collection/utils/sendToEmail';\nimport { copyToClipboard } from 'license-collection/utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './output.scss';\n\nfunction noOutput(invocation = {}) {\n  return [\n    {\n      data: {\n        text: 'No output to display.\\n'\n      }\n    },\n    {\n      data: {\n        text: `Status: ${invocation.status}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Process: ${invocation.process}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Invocation: ${invocation.uuid}\\n`\n      }\n    }\n  ];\n}\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const JobOutput = () => {\n  const invocation = useSelector(getInvocation);\n\n  const [loading, setLoading] = React.useState(true);\n  const [output, setOutput] = React.useState(noOutput(invocation));\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = React.useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  React.useEffect(() => {\n    fetchInvocationOutput(invocation.uuid)\n      .then(({ data }) => {\n        const recieved = data.data.outputs;\n\n        if (recieved && recieved.length) {\n          setOutput(recieved);\n        } else {\n          setOutput(noOutput(invocation));\n        }\n\n        setLoading(false);\n      })\n      .catch(() => {\n        setOutput(noOutput(invocation));\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const outputType = invocation.status === InvocationStatus.FAILED ? 'fail' : 'normal';\n\n  const monitoring = output?.[0]?.data?.text?.match?.(\n    /{\"process\": {\"uuid\": \"([0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12})\",/\n  )?.[1];\n\n  console.log(monitoring); // eslint-disable-line\n\n  return (\n    <>\n      <Paper.Content scrollable>\n        <ListOutput\n          type={outputType}\n          output={output}\n          outputFormat={invocation.parameters.oformat}\n          errors={invocation.errors}\n          monitoring={monitoring}\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"primary\"\n            onClick={() => onSendByEmail(invocation, output, invocation.process, modalActions)}\n          >\n            Send to email\n          </Button>\n          <Button color=\"primary\" onClick={() => copyToClipboard(output, invocation)}>\n            Copy to clipboard\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n      <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n    </>\n  );\n};\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nimport './ListOutput.local.scss';\nimport ReactJson from 'react-json-view';\n\nexport const ListOutput = ({ output, type, outputFormat, errors, monitoring }) => {\n  let content;\n  let preparedJSON;\n\n  if (outputFormat === 'JSON') {\n    const [, jsonString] = (output[0].data.text || '').split('\\n');\n    try {\n      preparedJSON = JSON.parse(jsonString);\n    } catch (error) {\n      preparedJSON = null;\n    }\n  }\n\n  if (monitoring) {\n    return (\n      <div className=\"list\">\n        <h3>Monitor</h3>\n        <p>Invocation id: {monitoring}</p>\n        <Button to={`/jobs/job?invocation=${monitoring}`} color=\"primary\">\n          Go to Monitored Invocation\n        </Button>\n      </div>\n    );\n  }\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          <code>\n            <pre>{errors.join('\\n')}</pre>\n          </code>\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              <code>\n                <pre>{output.map(row => row.data.text).join('')}</pre>\n              </code>\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else if (preparedJSON) {\n    content = (\n      <div className=\"list\">\n        <ReactJson\n          src={preparedJSON}\n          enableClipboard={false}\n          displayObjectSize={false}\n          displayDataTypes={false}\n        />\n      </div>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        <code>\n          <pre>{output.map(row => row.data.text).join('')}</pre>\n        </code>\n      </div>\n    );\n  }\n\n  return content;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { want } from 'shared/lib/want';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiTimelineClock,\n  mdiCancel,\n  mdiAlertRhombusOutline,\n  mdiStopCircleOutline\n} from '@mdi/js';\n\nimport { getInvocationStatus } from '../../store/selectors';\nimport {\n  InvocationStatus,\n  CannotShowStatusFor,\n  FAILURES,\n  SUCESSES,\n  WARNINGS\n} from '../../store/constants';\n\nimport './JobStatus.local.scss';\n\nexport const JobStatus = () => {\n  const STATUS = useSelector(getInvocationStatus);\n  const ignore = CannotShowStatusFor.includes(STATUS);\n\n  if (ignore) {\n    return null;\n  }\n\n  return (\n    <div className=\"status-label\" style={{ background: wantStatusColor(STATUS) }}>\n      <SvgIcon fontSize=\"inherit\" color=\"inherit\">\n        <path d={wantStatusIcon(STATUS)} />\n      </SvgIcon>\n      <span className=\"status-label-text\">{STATUS}</span>\n    </div>\n  );\n};\n\nconst wantStatusIcon = want(\n  {\n    [InvocationStatus.EXECUTING]: mdiProgressClock,\n    [InvocationStatus.SUCCEEDED]: mdiCheckCircleOutline,\n    [InvocationStatus.DELAYED]: mdiTimelineClock,\n    [InvocationStatus.SCHEDULED]: mdiCalendarArrowRight,\n    [InvocationStatus.KILLED]: mdiCancel,\n    [InvocationStatus.FAILED]: mdiAlertRhombusOutline,\n    [InvocationStatus.ABORTED]: mdiStopCircleOutline\n  },\n  '',\n  status => status\n);\n\nconst wantStatusColor = want(\n  {\n    fail: '#ED3A4A',\n    warning: '#F1BD5C',\n    success: '#34CC88'\n  },\n  '#3765AF', // progress blue color for unresolved statuses\n  status => {\n    if (FAILURES.includes(status)) {\n      return 'fail';\n    }\n\n    if (SUCESSES.includes(status)) {\n      return 'success';\n    }\n\n    if (WARNINGS.includes(status)) {\n      return 'warning';\n    }\n  }\n);\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nexport function ToggleSelection({ hasSelectedServer, deselectServer }) {\n  if (hasSelectedServer) {\n    return (\n      <Button style={{ color: '#03A9F4' }} onClick={() => deselectServer()}>\n        Deselect\n      </Button>\n    );\n  }\n  return '';\n}\n","import React, { PureComponent } from 'react';\nimport Graph from 'react-graph-vis';\nimport {\n  BASE_NETWORK_GRAPH_OPTIONS,\n  DB_NODE_COLOR,\n  DB_NODE_SHAPE,\n  NODE_SIZE_MULTIPLIER,\n  ROOT_NODE,\n  ROOT_NODE_ID,\n  SERVER_NODE_COLOR,\n  SERVER_NODE_SHAPE\n} from './ServersNetworkConstants';\nimport { connect } from 'react-redux';\nimport { loadNetworkEdgesThunk, loadNetworkNodesThunk, loadServerDetailsThunk } from '../../store/thunks';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport classnames from 'classnames';\nimport { NetworkToolbar } from './Toolbar/NetworkToolbar';\n\nimport 'vis-network/styles/vis-network.css';\nimport './ServersNetworkTile.local.scss';\n\nclass ServersNetworkTile extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullScreen: false,\n      filteredServerIds: []\n    };\n  }\n\n  events = {\n    select: (event) => {\n      const { nodes } = event;\n      if (nodes.length) {\n        const nodeId = nodes[0];\n        const selectedNode = this.networkData.graph.nodes.find((node) => node.id === nodeId);\n        if (selectedNode && selectedNode.isServerNode) {\n          const { onServerChanged, getServerDetails } = this.props;\n          onServerChanged(selectedNode.id);\n          getServerDetails(selectedNode.id);\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    const { getNetworkNodes, getNetworkEdges } = this.props;\n    getNetworkNodes();\n    getNetworkEdges();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getNetworkNodes, getNetworkEdges } = this.props;\n      setTimeout(() => {\n        getNetworkNodes(newProps.selectedServer);\n        getNetworkEdges(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { nodes, edges, selectedServer, serverDetails, isLoading } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container servers-network-graph-container\">\n            <Center>\n              <Loader>Loading Network Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const { fullScreen, filteredServerIds } = this.state;\n    let preparedNodes = this.mapNodes(nodes);\n    const serverNodes = preparedNodes.filter((node) => node.isServerNode);\n    if (preparedNodes.length && !selectedServer) {\n      if (filteredServerIds.length) {\n        const relatedDbIds = edges.filter((edge) => filteredServerIds.includes(edge.from)).map((edge) => edge.to);\n        preparedNodes = preparedNodes.filter((node) => filteredServerIds.includes(node.id) || relatedDbIds.includes(node.id));\n      }\n      preparedNodes.unshift(ROOT_NODE);\n    }\n    this.networkData = {\n      graph: {\n        nodes: preparedNodes,\n        edges: this.mapEdges(edges, serverNodes),\n      }\n    };\n    const hasData = preparedNodes.length && edges.length;\n\n    return (\n      <div className={classnames('exec-dashboard-graph-container servers-network-graph-container', { 'show-full-screen': fullScreen })}>\n        {hasData ? (\n          <>\n            <NetworkToolbar\n              servers={serverNodes}\n              serversUpdate={(servers) => {\n                const serverIds = servers.map((s) => s.value);\n                this.setState({ filteredServerIds: serverIds });\n              }}\n              fullScreen={fullScreen}\n              fullScreenToggle={() => this.setState({ fullScreen: !fullScreen })}\n            />\n            <div className=\"graph-wrapper\">\n              <Graph\n                graph={this.networkData.graph}\n                options={BASE_NETWORK_GRAPH_OPTIONS}\n                events={this.events}\n              />\n            </div>\n            {selectedServer && serverDetails && Object.keys(serverDetails).length ? (\n              <div className=\"server-details-container\">\n                  <div className=\"server-details-row\">Manufacturer: {serverDetails.server_manufacturer}</div>\n                  <div className=\"server-details-row\">Chipset: {serverDetails.processor_identifier}</div>\n                  <div className=\"server-details-row\">Physical Cores: {serverDetails.total_physical_cores}</div>\n                  <div className=\"server-details-row\">Logical Cores: {serverDetails.total_logical_cores}</div>\n                  <div className=\"server-details-row\">Sockets: {serverDetails.physical_sockets_populated}</div>\n              </div>\n            ) : ''}\n          </>\n        ) : (\n          <Center>\n            No Network Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapNodes = (nodes) => {\n    return (nodes || [])\n      .filter((node, index, arr) => {\n        return arr.findIndex(t => (t.id === node.id)) === index;\n      })\n      .map((node) => {\n        const isServerNode = node.title === 'server';\n        const hasWarnings = node.warning === 'yes';\n        const nodeConfig = {\n          ...node,\n          isServerNode,\n          title: node.label,\n          widthConstraint: node.size * NODE_SIZE_MULTIPLIER,\n          color: {\n            background: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR,\n            border: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR\n          },\n          shape: isServerNode ? SERVER_NODE_SHAPE : DB_NODE_SHAPE,\n        };\n\n        if (hasWarnings) {\n          nodeConfig.borderWidth = 3;\n          nodeConfig.color.border = 'red';\n          nodeConfig.title += ' (There is more usage than licenses allocated)';\n        }\n\n        return nodeConfig;\n      });\n  }\n\n  mapEdges = (edges, serverNodes) => {\n    const serverEdges = serverNodes.map((node) => {\n      return { from: ROOT_NODE_ID, to: node.id, width: 5, arrows: { to: { enabled: false } } };\n    });\n    return edges.map((edge) => {\n      return { from: edge.from, to: edge.to, width: 5, arrows: { to: { enabled: false } } };\n    }).concat(serverEdges);\n  }\n}\n\nexport const ConnectedServersNetworkTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.network.nodesLoading ||\n        state.executiveDashboard.flags.network.edgesLoading,\n      nodes: state.executiveDashboard.networkNodes,\n      edges: state.executiveDashboard.networkEdges,\n      serverDetails: state.executiveDashboard.networkServerDetails,\n    };\n  },\n  dispatch => ({\n    getNetworkNodes: (serverId) => dispatch(loadNetworkNodesThunk(serverId)),\n    getNetworkEdges: (serverId) => dispatch(loadNetworkEdgesThunk(serverId)),\n    getServerDetails: (serverId) => dispatch(loadServerDetailsThunk(serverId)),\n  })\n)(ServersNetworkTile);\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from './LicensableFeaturesConstants';\nimport { OptionsList } from '../OptionsTile/components/OptionsList/OptionsList';\nimport { Overflow } from '../../../shared/components/layout';\nimport classnames from 'classnames';\nimport { ChartTooltip } from '../ChartTooltip/ChartTooltip';\nimport { connect } from 'react-redux';\nimport { loadUsageStat, loadUsageThunk } from '../../store/thunks';\nimport { Center } from '../../../shared/components';\nimport { Loader } from '../../../shared/components/loaders';\n\nimport './LicensableFeaturesTile.local.scss';\n\nconst ScoreItem = ({ clazz, label, value }) => {\n  return (\n    <div className={classnames('score-item-container', clazz)}>\n      <div className=\"score-item-title\">{label}</div>\n      <div className=\"score-item-value\">{value}</div>\n    </div>\n  );\n};\n\nclass LicensableFeaturesTile extends PureComponent {\n  componentDidMount() {\n    const { getLicensableFeatures, getUsageStat } = this.props;\n    getLicensableFeatures();\n    getUsageStat();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getLicensableFeatures, getUsageStat } = this.props;\n      setTimeout(() => {\n        getLicensableFeatures(newProps.selectedServer);\n        getUsageStat(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { licensableFeatures, usageStat, isLoading } = this.props;\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container licensable-features-graph-container\">\n            <Center>\n              <Loader>Loading License Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const licensesData = this.mapLicenses(licensableFeatures);\n    const currencyFormatter = new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      maximumFractionDigits: 0,\n    });\n\n    return (\n      <div className=\"exec-dashboard-graph-container licensable-features-graph-container\">\n        {licensesData.length ? (\n          <>\n            <ScoreItem clazz=\"total-risk\" label=\"Total Risk\" value={Number.isFinite(usageStat.totalRisk) ? currencyFormatter.format(usageStat.totalRisk) : '-'} />\n            <ScoreItem clazz=\"license-cost\" label=\"License Cost\" value={Number.isFinite(usageStat.licenseCost) ? currencyFormatter.format(usageStat.licenseCost) : '-'} />\n            <ScoreItem clazz=\"support-cost\" label=\"Support Cost\" value={Number.isFinite(usageStat.supportCost) ? currencyFormatter.format(usageStat.supportCost) : '-'} />\n            <ScoreItem clazz=\"unallocated-licenses\" label=\"Unallocated Licenses\" value={Number.isFinite(usageStat.unallocatedLicenses) ? usageStat.unallocatedLicenses : '-'} />\n\n            <ResponsiveContainer height={420}>\n              <PieChart>\n                <Pie data={licensesData} dataKey=\"value\" cx=\"40%\" cy=\"60%\" innerRadius={65} outerRadius={130} blendStroke>\n                  {licensesData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip content={ChartTooltip} />\n              </PieChart>\n            </ResponsiveContainer>\n\n            <div className=\"graph-legend-container\">\n              <Overflow>\n                <OptionsList options={licensesData} />\n              </Overflow>\n            </div>\n          </>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapLicenses = (licenses) => {\n    return (licenses || []).map((license) => {\n      const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => license.abbreviation === config.type);\n      return {\n        ...license,\n        name: license.product_name,\n        label: license.abbreviation,\n        color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n        secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n      };\n    });\n  }\n}\n\nexport const ConnectedLicensableFeaturesTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.licensableFeatures.loading\n        || state.executiveDashboard.flags.usageStat.loading,\n      licensableFeatures: state.executiveDashboard.licensableFeatures,\n      usageStat: state.executiveDashboard.usageStat,\n    };\n  },\n  dispatch => ({\n    getLicensableFeatures: (serverId) => dispatch(loadUsageThunk(serverId)),\n    getUsageStat: (serverId) => dispatch(loadUsageStat(serverId)),\n  })\n)(LicensableFeaturesTile);\n","import React from 'react';\nimport classnames from 'classnames';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAlert } from '@mdi/js';\nimport { LightTooltip } from 'shared/components';\n\nimport './OptionItem.local.scss';\n\nexport const OptionItem = ({ option }) => {\n  return (\n    <div className={classnames('option', { 'has-issues': option.hasIssues })}>\n      <div className=\"value\" style={{ backgroundColor: option.color }} />\n      {option.tooltip ? (\n        <LightTooltip placement=\"right-start\" title={option.tooltip}>\n          <div className=\"label\">{option.label}</div>\n        </LightTooltip>\n      ) : (\n        <div className=\"label\">{option.label}</div>\n      )}\n      {option.hasIssues && (\n        <SvgIcon className=\"alert-icon\">\n          <Icon path={mdiAlert} />\n        </SvgIcon>\n      )}\n    </div>\n  );\n};\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport './OperatingSystemsTile.local.scss';\nimport {\n  CUSTOM_DB_PRIMARY_COLOR, CUSTOM_DB_SECONDARY_COLOR,\n  DB_VERSION_COLOR_PALETTE,\n  EE_DB_PRIMARY_COLOR,\n  EE_DB_SECONDARY_COLOR,\n  LINUX_OS_PRIMARY_COLOR,\n  LINUX_OS_SECONDARY_COLOR,\n  SE_DB_PRIMARY_COLOR,\n  SE_DB_SECONDARY_COLOR,\n  WINDOWS_OS_PRIMARY_COLOR,\n  WINDOWS_OS_SECONDARY_COLOR\n} from './OperatingSystemsConstants';\nimport { Overflow } from 'shared/components/layout';\nimport { OptionsList } from '../OptionsTile/components/OptionsList/OptionsList';\nimport { ChartTooltip } from '../ChartTooltip/ChartTooltip';\nimport { connect } from 'react-redux';\nimport { loadDBEditionThunk, loadDBVersionThunk, loadOSTypeThunk } from '../../store/thunks';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nclass OperatingSystemsTile extends PureComponent {\n  componentDidMount() {\n    const { getOSType, getDBEdition, getDBVersion } = this.props;\n    getOSType();\n    getDBEdition();\n    getDBVersion();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getOSType, getDBEdition, getDBVersion } = this.props;\n      setTimeout(() => {\n        getOSType(newProps.selectedServer);\n        getDBEdition(newProps.selectedServer);\n        getDBVersion(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { isLoading, selectedServer, graphData } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container operating-systems-graph-container\">\n            <Center>\n              <Loader>Loading Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const preparedOSData = this.mapOS(graphData?.osType);\n    const preparedDBEditionsData = selectedServer ? this.mapDBEditionByServer(graphData?.dbEdition) : this.mapDBEdition(graphData?.dbEdition);\n    const preparedDBVersionsData = this.mapDBVersion(graphData?.dbVersion);\n    const hasData = graphData && (preparedOSData.length || preparedDBEditionsData.length || graphData.dbVersion.length);\n\n    return (\n      <div className=\"exec-dashboard-graph-container operating-systems-graph-container\">\n        {hasData ? (\n          <div className=\"charts-container\">\n            <div className=\"chart\">\n              <div className=\"chart-title\">Operating System</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedOSData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedOSData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedOSData.map((entry, index) => (\n                      <Cell key={`cell-${entry.name}-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"chart\">\n              <div className=\"chart-title\">DB Edition</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedDBEditionsData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedDBEditionsData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedDBEditionsData.map((entry, index) => (\n                      <Cell key={`cell-${entry.database_edition}-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"chart\">\n              <div className=\"chart-title\">DB Version</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedDBVersionsData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedDBVersionsData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedDBVersionsData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapOS = (osData) => {\n    return (osData || []).map((os) => {\n      const isWindowsOS = os.name.indexOf('Windows') !== -1;\n      return {\n        ...os,\n        isWindowsOS,\n        label: os.name,\n        color: isWindowsOS ? WINDOWS_OS_PRIMARY_COLOR : LINUX_OS_PRIMARY_COLOR,\n        secondaryColor: isWindowsOS ? WINDOWS_OS_SECONDARY_COLOR : LINUX_OS_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBEdition = (dbEditionData) => {\n    return (dbEditionData || []).map((dbEdition) => {\n      const editionName = dbEdition.name || dbEdition.database_edition;\n      const isSEEdition = editionName.indexOf('SE') !== -1;\n      let color = isSEEdition ? SE_DB_PRIMARY_COLOR : EE_DB_PRIMARY_COLOR;\n      let secondaryColor = isSEEdition ? SE_DB_SECONDARY_COLOR : EE_DB_SECONDARY_COLOR;\n\n      if (!['SE', 'EE'].includes(editionName)) {\n        color = CUSTOM_DB_PRIMARY_COLOR;\n        secondaryColor = CUSTOM_DB_SECONDARY_COLOR;\n      }\n\n      return {\n        ...dbEdition,\n        isSEEdition,\n        label: dbEdition.name,\n        color,\n        secondaryColor,\n      };\n    });\n  }\n\n  mapDBEditionByServer = (dbEditionData) => {\n    return (dbEditionData || []).map((dbEdition) => {\n      const editionName = dbEdition.database_edition || dbEdition.name;\n      const isSEEdition = editionName.indexOf('SE') !== -1;\n      let color = isSEEdition ? SE_DB_PRIMARY_COLOR : EE_DB_PRIMARY_COLOR;\n      let secondaryColor = isSEEdition ? SE_DB_SECONDARY_COLOR : EE_DB_SECONDARY_COLOR;\n\n      if (!['SE', 'EE'].includes(editionName)) {\n        color = CUSTOM_DB_PRIMARY_COLOR;\n        secondaryColor = CUSTOM_DB_SECONDARY_COLOR;\n      }\n\n      return {\n        ...dbEdition,\n        isSEEdition,\n        name: editionName,\n        value: dbEdition.count || dbEdition.value,\n        label: editionName,\n        color,\n        secondaryColor,\n      };\n    });\n  }\n\n  mapDBVersion = (dbVersionData) => {\n    return (dbVersionData || []).map((db, index) => {\n      const isSupported = db.is_supported === 'SUPPORTED';\n      return {\n        ...db,\n        name: db.database_version,\n        tooltip: `${db.database_version}${!isSupported ? ' (Not supported)' : ''}`,\n        value: db.qty,\n        color: DB_VERSION_COLOR_PALETTE[index].color,\n        secondaryColor: DB_VERSION_COLOR_PALETTE[index].secondaryColor,\n        label: db.db_version_short,\n        hasIssues: !isSupported\n      };\n    });\n  }\n}\n\nexport const ConnectedOperatingSystemsTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.network.nodesLoading ||\n        state.executiveDashboard.flags.network.edgesLoading,\n      graphData: state.executiveDashboard.techDetails,\n    };\n  },\n  dispatch => ({\n    getOSType: (serverId) => dispatch(loadOSTypeThunk(serverId)),\n    getDBEdition: (serverId) => dispatch(loadDBEditionThunk(serverId)),\n    getDBVersion: (serverId) => dispatch(loadDBVersionThunk(serverId)),\n  })\n)(OperatingSystemsTile);\n","import React, { PureComponent } from 'react';\nimport { Bar, BarChart, CartesianGrid, Cell, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { connect } from 'react-redux';\nimport { loadLicenseDeltaThunk } from '../../store/thunks';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from '../LicensableFeaturesGraph/LicensableFeaturesConstants';\nimport { Center, LightTooltip } from '../../../shared/components';\nimport { Loader } from '../../../shared/components/loaders';\nimport { FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\nimport { FullScreenIcon } from '../FullScreenIcon/FullScreenIcon';\nimport classnames from 'classnames';\n\nimport './LicenseDeltaTile.local.scss';\n\nconst LicenseType = {\n  NUP: 'nup',\n  CPU: 'cpu',\n};\n\nexport const LicenseDeltaChartTooltip = (data) => {\n  if (!data || !data.payload || data.payload.length < 3) {\n    return '';\n  }\n\n  const assignedValue = data.payload[0].value;\n  const usedValue = data.payload[1].value;\n  const ownedValue = data.payload[2].value;\n  return (\n    <div className=\"exec-dashboard-chart-tooltip\">\n      <LightTooltip placement=\"bottom-end\">\n        <div className=\"exec-dashboard-chart-tooltip-content\">\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Assigned</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{assignedValue}</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Used</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{usedValue}</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Owned</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{ownedValue}</div>\n          </div>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n\nclass LicenseDeltaTile extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLicenseType: LicenseType.NUP,\n      fullScreen: false,\n    };\n  }\n\n  componentDidMount() {\n    const { getLicenseDelta } = this.props;\n    getLicenseDelta();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getLicenseDelta } = this.props;\n      setTimeout(() => getLicenseDelta(newProps.selectedServer));\n    }\n  }\n\n  render() {\n    const { licenseDelta, selectedServer, isLoading } = this.props;\n    const { selectedLicenseType, fullScreen } = this.state;\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container license-delta-graph-container\">\n            <Center>\n              <Loader>Loading License Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const chartData = this.mapData(licenseDelta, selectedLicenseType);\n    return (\n      <div className={classnames('exec-dashboard-graph-container license-delta-graph-container', { 'show-full-screen': fullScreen })}>\n        <RadioGroup\n          row\n          className=\"license-type\"\n          value={selectedLicenseType}\n          onChange={(event) => this.setState({ selectedLicenseType: event.target.value })}\n        >\n          <FormControlLabel value=\"nup\" control={<Radio color=\"primary\" size=\"small\" />} label=\"NUPs\" />\n          <FormControlLabel value=\"cpu\" control={<Radio color=\"primary\" size=\"small\" />} label=\"CPUs\" />\n        </RadioGroup>\n\n        <FullScreenIcon fullScreen={fullScreen} fullScreenToggle={() => this.setState({ fullScreen: !fullScreen })} />\n\n        {chartData.length ? (\n          <>\n            <div className=\"chart-title\">License Delta</div>\n            <ResponsiveContainer height={fullScreen ? 700 : 380}>\n              <BarChart data={chartData} barGap={0} margin={{ left: 20 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                <XAxis dataKey=\"label\" tickSize={false} axisLine={false} tick={this.renderCustomXAxisTick} />\n                <YAxis\n                  width={50}\n                  tickSize={false}\n                  allowDecimals={false}\n                  type=\"number\"\n                  domain={[0, selectedServer ? 2 : 'dataMax']}\n                  stroke=\"rgba(4, 17, 37, 0.87)\"\n                  label={{ value: 'Count of Feature in envt', angle: -90, position: 'left' }}\n                />\n                <Bar dataKey=\"assigned\" fill=\"#13369f\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#13369f\" />;\n                  })}\n                </Bar>\n                <Bar dataKey=\"used\" fill=\"#f2c94c\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#f2c94c\" />;\n                  })}\n                </Bar>\n                <Bar dataKey=\"owned\" fill=\"#55c667\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#55c667\" />;\n                  })}\n                </Bar>\n                <Tooltip content={LicenseDeltaChartTooltip} cursor={false} />\n                <Legend />\n              </BarChart>\n            </ResponsiveContainer>\n          </>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  renderCustomXAxisTick = ({ x, y, payload }) => {\n    const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => config.type === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"x-axis-label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={licenseConfig?.color || '#aaa'}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  mapData = (licenseData, selectedType) => {\n    const groupedData = (licenseData || [])\n      .reduce((acc, license) => {\n        const key = `${license.product_id}_${license.metric}`;\n        if (acc[key]) {\n          const updated = { ...acc[key] };\n          updated.lic_owned += license.lic_owned;\n          updated.lic_used += license.lic_used;\n          updated.lic_assigned += license.lic_assigned;\n          acc[key] = updated;\n        } else {\n          acc[key] = { ...license, type: license.metric === 'Named User Plus' ? LicenseType.NUP : LicenseType.CPU };\n        }\n        return acc;\n      }, {});\n\n    return Object.values(groupedData)\n      .filter((license) => license.type === selectedType)\n      .map((license) => {\n        const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => license.abbreviation === config.type);\n        return {\n          name: license.product_name,\n          label: license.abbreviation,\n          assigned: license.lic_assigned,\n          used: license.lic_used,\n          owned: license.lic_owned,\n          color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n          secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n        };\n      });\n  };\n}\n\nexport const ConnectedLicenseDeltaTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.licenseDelta.loading,\n      licenseDelta: state.executiveDashboard.licenseDelta,\n    };\n  },\n  dispatch => ({\n    getLicenseDelta: (serverId) => dispatch(loadLicenseDeltaThunk(serverId)),\n  })\n)(LicenseDeltaTile);\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport { connect } from 'react-redux';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from '../../LicensableFeaturesGraph/LicensableFeaturesConstants';\nimport { Overflow } from '../../../../shared/components/layout';\nimport { ChartTooltip } from '../../ChartTooltip/ChartTooltip';\nimport { loadMssqlUsageThunk } from '../../../store/thunks';\nimport { OptionsList } from '../../OptionsTile/components/OptionsList/OptionsList';\nimport { Center } from '../../../../shared/components';\nimport { Loader } from '../../../../shared/components/loaders';\n\nimport './LicenseUsageTile.local.scss';\n\nclass MssqlLicenseUsageTile extends PureComponent {\n  componentDidMount() {\n    const { getLicenseUsage } = this.props;\n    getLicenseUsage();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getLicenseUsage } = this.props;\n      setTimeout(() => {\n        getLicenseUsage(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { mssqlLicenseUsage, isLoading } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container license-usage-graph-container\">\n            <Center>\n              <Loader>Loading License Usage Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const licenseUsageData = this.mapLicenses(mssqlLicenseUsage);\n    return (\n      <div className=\"exec-dashboard-graph-container license-usage-graph-container\">\n        {licenseUsageData.length ? (\n          <>\n            <div className=\"chart-title\">License Usage</div>\n            <ResponsiveContainer height={380}>\n              <PieChart>\n                <Pie data={licenseUsageData} dataKey=\"value\" cx=\"20%\" cy=\"40%\" innerRadius={65} outerRadius={130} blendStroke>\n                  {licenseUsageData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip content={ChartTooltip} />\n              </PieChart>\n            </ResponsiveContainer>\n\n            <div className=\"graph-legend-container\">\n              <Overflow>\n                <OptionsList options={licenseUsageData} />\n              </Overflow>\n            </div>\n          </>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapLicenses = (licenses) => {\n    return (licenses || []).map((license, index) => {\n      const licenseConfig = LICENSABLE_FEATURES_COLORS[index];\n      return {\n        ...license,\n        value: license.count,\n        name: license.license_type,\n        label: license.license_type,\n        color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n        secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n      };\n    });\n  }\n}\n\nexport const MssqlConnectedLicenseUsageTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.mssqlLicenseUsage.loading,\n      mssqlLicenseUsage: state.executiveDashboard.mssqlLicenseUsage,\n    };\n  },\n  dispatch => ({\n    getLicenseUsage: (serverId) => dispatch(loadMssqlUsageThunk(serverId)),\n  })\n)(MssqlLicenseUsageTile);\n","import React, { PureComponent } from 'react';\nimport Graph from 'react-graph-vis';\nimport {\n  BASE_NETWORK_GRAPH_OPTIONS,\n  DB_NODE_COLOR,\n  DB_NODE_SHAPE,\n  NODE_SIZE_MULTIPLIER,\n  ROOT_NODE,\n  ROOT_NODE_ID,\n  SERVER_NODE_COLOR,\n  SERVER_NODE_SHAPE\n} from '../../ServersNetworkTile/ServersNetworkConstants';\nimport { connect } from 'react-redux';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport {\n  loadMssqlNetworkEdgesThunk,\n  loadMssqlNetworkNodesThunk,\n  loadMssqlServerDetailsThunk\n} from '../../../store/thunks';\n\nimport 'vis-network/styles/vis-network.css';\nimport './ServersNetworkTile.local.scss';\nimport classnames from 'classnames';\nimport { NetworkToolbar } from '../../ServersNetworkTile/Toolbar/NetworkToolbar';\n\nclass MssqlServersNetworkTile extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullScreen: false,\n      filteredServerIds: []\n    };\n  }\n\n  events = {\n    select: (event) => {\n      const { nodes } = event;\n      if (nodes.length) {\n        const nodeId = nodes[0];\n        const selectedNode = this.networkData.graph.nodes.find((node) => node.id === nodeId);\n        if (selectedNode && selectedNode.isServerNode) {\n          const { onServerChanged, getServerDetails } = this.props;\n          onServerChanged(selectedNode.id);\n          getServerDetails(selectedNode.id);\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    const { getNetworkNodes, getNetworkEdges } = this.props;\n    getNetworkNodes();\n    getNetworkEdges();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getNetworkNodes, getNetworkEdges } = this.props;\n      setTimeout(() => {\n        getNetworkNodes(newProps.selectedServer);\n        getNetworkEdges(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { nodes, edges, selectedServer, serverDetails, isLoading } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container mssql-servers-network-graph-container\">\n            <Center>\n              <Loader>Loading Network Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const { fullScreen, filteredServerIds } = this.state;\n    let preparedNodes = this.mapNodes(nodes);\n    const serverNodes = preparedNodes.filter((node) => node.isServerNode);\n    const hasData = preparedNodes.length && edges.length;\n\n    if (preparedNodes.length && !selectedServer) {\n      if (filteredServerIds.length) {\n        const relatedDbIds = edges.filter((edge) => filteredServerIds.includes(edge.from)).map((edge) => edge.to);\n        preparedNodes = preparedNodes.filter((node) => filteredServerIds.includes(node.id) || relatedDbIds.includes(node.id));\n      }\n      preparedNodes.unshift(ROOT_NODE);\n    }\n\n    this.networkData = {\n      graph: {\n        nodes: preparedNodes,\n        edges: this.mapEdges(edges, serverNodes),\n      }\n    };\n\n    return (\n      <div className={classnames('exec-dashboard-graph-container mssql-servers-network-graph-container', { 'show-full-screen': fullScreen })}>\n        {hasData ? (\n          <>\n            <NetworkToolbar\n              servers={serverNodes}\n              serversUpdate={(servers) => {\n                const serverIds = servers.map((s) => s.value);\n                this.setState({ filteredServerIds: serverIds });\n              }}\n              fullScreen={fullScreen}\n              fullScreenToggle={() => this.setState({ fullScreen: !fullScreen })}\n            />\n            <div className=\"graph-wrapper\">\n              <Graph\n                graph={this.networkData.graph}\n                options={BASE_NETWORK_GRAPH_OPTIONS}\n                events={this.events}\n              />\n            </div>\n            {selectedServer && serverDetails && Object.keys(serverDetails).length ? (\n              <div className=\"server-details-container\">\n                  <div className=\"server-details-row\">Chipset: {serverDetails.chipset}</div>\n                  <div className=\"server-details-row\">CPU Speed: {serverDetails.cpu_speed}GHz</div>\n                  <div className=\"server-details-row\">Physical Cores: {serverDetails.physical_cores}</div>\n                  <div className=\"server-details-row\">Logical Cores: {serverDetails.logical_cores}</div>\n                  <div className=\"server-details-row\">Server Name: {serverDetails.servername}</div>\n                  <div className=\"server-details-row\">Server Entity Name: {serverDetails.server_entity_name}</div>\n              </div>\n            ) : ''}\n          </>\n        ) : (\n          <Center>\n            No Network Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapNodes = (nodes) => {\n    return (nodes || [])\n      .filter((node, index, arr) => {\n        return arr.findIndex(t => (t.id === node.id)) === index;\n      })\n      .map((node) => {\n        const isServerNode = node.title === 'server';\n        const hasWarnings = node.warning === 'yes';\n        const nodeConfig = {\n          ...node,\n          isServerNode,\n          title: node.label,\n          widthConstraint: node.size * NODE_SIZE_MULTIPLIER,\n          color: {\n            background: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR,\n            border: isServerNode ? SERVER_NODE_COLOR : DB_NODE_COLOR\n          },\n          shape: isServerNode ? SERVER_NODE_SHAPE : DB_NODE_SHAPE,\n        };\n\n        if (hasWarnings) {\n          nodeConfig.borderWidth = 3;\n          nodeConfig.color.border = 'red';\n          nodeConfig.title += ' (There is more usage than licenses allocated)';\n        }\n\n        return nodeConfig;\n      });\n  }\n\n  mapEdges = (edges, serverNodes) => {\n    const serverEdges = serverNodes.map((node) => {\n      return { from: ROOT_NODE_ID, to: node.id, width: 5, arrows: { to: { enabled: false } } };\n    });\n    return edges.map((edge) => {\n      return { from: edge.from, to: edge.to, width: 5, arrows: { to: { enabled: false } } };\n    }).concat(serverEdges);\n  }\n}\n\nexport const MssqlConnectedServersNetworkTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.mssqlNetwork.nodesLoading ||\n        state.executiveDashboard.flags.mssqlNetwork.edgesLoading,\n      nodes: state.executiveDashboard.mssqlNetworkNodes,\n      edges: state.executiveDashboard.mssqlNetworkEdges,\n      serverDetails: state.executiveDashboard.mssqlNetworkServerDetails,\n    };\n  },\n  dispatch => ({\n    getNetworkNodes: (serverId) => dispatch(loadMssqlNetworkNodesThunk(serverId)),\n    getNetworkEdges: (serverId) => dispatch(loadMssqlNetworkEdgesThunk(serverId)),\n    getServerDetails: (serverId) => dispatch(loadMssqlServerDetailsThunk(serverId)),\n  })\n)(MssqlServersNetworkTile);\n","import React, { PureComponent } from 'react';\nimport { Bar, BarChart, CartesianGrid, Cell, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { connect } from 'react-redux';\nimport { loadMssqlEnvironmentUsageThunk } from '../../../store/thunks';\nimport {\n  LICENSABLE_FEATURE_DEFAULT_COLOR,\n  LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n  LICENSABLE_FEATURES_COLORS\n} from '../../LicensableFeaturesGraph/LicensableFeaturesConstants';\nimport { Center, LightTooltip } from '../../../../shared/components';\nimport { Loader } from '../../../../shared/components/loaders';\nimport { FullScreenIcon } from '../../FullScreenIcon/FullScreenIcon';\nimport classnames from 'classnames';\n\nimport './EnvironmentUsageTile.local.scss';\n\nexport const EnvironmentUsageChartTooltip = (data) => {\n  if (!data || !data.payload || data.payload.length < 3) {\n    return '';\n  }\n\n  const coresValue = data.payload[0].value;\n  const maxCoresValue = data.payload[0]?.payload.maxCores;\n  const devicesCalValue = data.payload[1].value;\n  const usersCalValue = data.payload[2].value;\n  return (\n    <div className=\"exec-dashboard-chart-tooltip\">\n      <LightTooltip placement=\"bottom-end\">\n        <div className=\"exec-dashboard-chart-tooltip-content\">\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Cores</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{coresValue} (max {maxCoresValue})</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Devices CAL</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{devicesCalValue}</div>\n          </div>\n          <div className=\"exec-dashboard-chart-tooltip-row\">\n            <div className=\"exec-dashboard-chart-tooltip-name\">Users CAL</div>\n            <div className=\"exec-dashboard-chart-tooltip-value\">{usersCalValue}</div>\n          </div>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n\nclass EnvironmentUsageTile extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fullScreen: false,\n    };\n  }\n\n  componentDidMount() {\n    const { getEnvironmentUsage } = this.props;\n    getEnvironmentUsage();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getEnvironmentUsage } = this.props;\n      setTimeout(() => getEnvironmentUsage(newProps.selectedServer));\n    }\n  }\n\n  render() {\n    const { environmentUsage, selectedServer, isLoading } = this.props;\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container mssql-environment-usage-graph-container\">\n            <Center>\n              <Loader>Loading Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const chartData = this.mapData(environmentUsage);\n    const { fullScreen } = this.state;\n    return (\n      <div className={classnames('exec-dashboard-graph-container mssql-environment-usage-graph-container', { 'show-full-screen': fullScreen })}>\n        <FullScreenIcon fullScreen={fullScreen} fullScreenToggle={() => this.setState({ fullScreen: !fullScreen })} />\n\n        {chartData.length ? (\n          <>\n            <div className=\"chart-title\">Cores / CALs Usage</div>\n            <ResponsiveContainer height={fullScreen ? 700 : 380}>\n              <BarChart data={chartData} barGap={0} margin={{ left: 20 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                <XAxis height={50} dataKey=\"label\" tickSize={false} axisLine={false} tick={this.renderCustomXAxisTick} />\n                <YAxis\n                  width={10}\n                  tickSize={false}\n                  allowDecimals={false}\n                  type=\"number\"\n                  domain={[0, selectedServer ? 2 : 'dataMax']}\n                  stroke=\"rgba(4, 17, 37, 0.87)\"\n                />\n                <Bar dataKey=\"cores\" fill=\"#13369f\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#13369f\" />;\n                  })}\n                </Bar>\n                <Bar dataKey=\"devicesCal\" fill=\"#f2c94c\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#f2c94c\" />;\n                  })}\n                </Bar>\n                <Bar dataKey=\"usersCal\" fill=\"#55c667\">\n                  {chartData.map((entry, index) => {\n                    return <Cell key={`${entry.name}-${index}`} fill=\"#55c667\" />;\n                  })}\n                </Bar>\n                <Tooltip content={EnvironmentUsageChartTooltip} cursor={false} />\n                <Legend />\n              </BarChart>\n            </ResponsiveContainer>\n          </>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  renderCustomXAxisTick = ({ x, y, payload }) => {\n    const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => config.type === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"x-axis-label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={licenseConfig?.color || '#aaa'}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  mapData = (environmentUsage) => {\n    return (environmentUsage || []).map((env) => {\n      const licenseConfig = LICENSABLE_FEATURES_COLORS.find((config) => env.abbreviation === config.type);\n      return {\n        ...env,\n        name: env.servername,\n        label: env.servername,\n        devicesCal: env.estimate_calcount_fordevices,\n        usersCal: env.estimate_calcount_forusers,\n        maxCores: env.max_core,\n        color: licenseConfig ? licenseConfig.color : LICENSABLE_FEATURE_DEFAULT_COLOR,\n        secondaryColor: licenseConfig ? licenseConfig.secondaryColor : LICENSABLE_FEATURE_DEFAULT_SECONDARY_COLOR,\n      };\n    });\n  };\n}\n\nexport const MssqlConnectedEnvironmentUsageTile = connect(\n  state => {\n    return {\n      isLoading: state.executiveDashboard.flags.mssqlEnvironmentUsage.loading,\n      environmentUsage: state.executiveDashboard.mssqlEnvironmentUsage,\n    };\n  },\n  dispatch => ({\n    getEnvironmentUsage: (serverId) => dispatch(loadMssqlEnvironmentUsageThunk(serverId)),\n  })\n)(EnvironmentUsageTile);\n","import React, { PureComponent } from 'react';\nimport { Cell, Pie, PieChart, ResponsiveContainer, Tooltip } from 'recharts';\nimport './DbVersionAndOsTile.local.scss';\nimport {\n  DB_VERSION_COLOR_PALETTE,\n  LINUX_OS_PRIMARY_COLOR,\n  LINUX_OS_SECONDARY_COLOR,\n  WINDOWS_OS_PRIMARY_COLOR,\n  WINDOWS_OS_SECONDARY_COLOR\n} from '../../OperatingSystemsTile/OperatingSystemsConstants';\nimport { Overflow } from 'shared/components/layout';\nimport { OptionsList } from '../../OptionsTile/components/OptionsList/OptionsList';\nimport { ChartTooltip } from '../../ChartTooltip/ChartTooltip';\nimport { connect } from 'react-redux';\nimport { loadMssqlDbVersionsThunk, loadMssqlOsTypesThunk } from '../../../store/thunks';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nclass MssqlDbVersionAndOsTile extends PureComponent {\n  componentDidMount() {\n    const { getOSType, getDBVersion } = this.props;\n    getOSType();\n    getDBVersion();\n  }\n\n  UNSAFE_componentWillReceiveProps(newProps) {\n    if (newProps.selectedServer !== this.props.selectedServer) {\n      const { getOSType, getDBVersion } = this.props;\n      setTimeout(() => {\n        getOSType(newProps.selectedServer);\n        getDBVersion(newProps.selectedServer);\n      });\n    }\n  }\n\n  render() {\n    const { isLoading, dbVersions, osTypes } = this.props;\n\n    if (isLoading) {\n      return (\n        <>\n          <div className=\"exec-dashboard-graph-container mssql-db-version-and-os-graph-container\">\n            <Center>\n              <Loader>Loading Data...</Loader>\n            </Center>\n          </div>\n        </>\n      );\n    }\n\n    const preparedOSData = this.mapOS(osTypes);\n    const preparedDBVersionsData = this.mapDBVersion(dbVersions);\n    const hasData = preparedDBVersionsData.length;\n\n    return (\n      <div className=\"exec-dashboard-graph-container mssql-db-version-and-os-graph-container\">\n        {hasData ? (\n          <div className=\"charts-container\">\n            <div className=\"chart\">\n              <div className=\"chart-title\">Operating System</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedOSData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedOSData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedOSData.map((entry, index) => (\n                      <Cell key={`cell-${entry.name}-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n            <div className=\"chart\">\n              <div className=\"chart-title\">DB Version</div>\n              <div className=\"graph-legend-container\">\n                <Overflow>\n                  <OptionsList options={preparedDBVersionsData} />\n                </Overflow>\n              </div>\n              <ResponsiveContainer height={380}>\n                <PieChart>\n                  <Pie data={preparedDBVersionsData} dataKey=\"value\" cx=\"50%\" cy=\"60%\" innerRadius={40} outerRadius={80} blendStroke>\n                    {preparedDBVersionsData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <Tooltip content={ChartTooltip} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        ) : (\n          <Center>\n            No Data Available\n          </Center>\n        )}\n      </div>\n    );\n  }\n\n  mapOS = (osData) => {\n    return (osData || []).map((os) => {\n      const name = os.name || os.os || '';\n      const isWindowsOS = name.indexOf('Windows') !== -1;\n      return {\n        ...os,\n        isWindowsOS,\n        value: os.value || os.count,\n        label: name,\n        color: isWindowsOS ? WINDOWS_OS_PRIMARY_COLOR : LINUX_OS_PRIMARY_COLOR,\n        secondaryColor: isWindowsOS ? WINDOWS_OS_SECONDARY_COLOR : LINUX_OS_SECONDARY_COLOR,\n      };\n    });\n  }\n\n  mapDBVersion = (dbVersionData) => {\n    return (dbVersionData || []).map((db, index) => {\n      const isSupported = db.is_supported === 'yes';\n      return {\n        ...db,\n        name: db.version_year,\n        tooltip: `${db.version_year}${!isSupported ? ' (Not supported)' : ''}`,\n        value: db.count,\n        color: DB_VERSION_COLOR_PALETTE[index].color,\n        secondaryColor: DB_VERSION_COLOR_PALETTE[index].secondaryColor,\n        label: db.version_year,\n        hasIssues: !isSupported\n      };\n    });\n  }\n}\n\nexport const MssqlConnectedDbVersionAndOsTile = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.mssqlDbVersions.loading ||\n        state.executiveDashboard.flags.mssqlOsTypes.loading,\n      dbVersions: state.executiveDashboard.mssqlDbVersions,\n      osTypes: state.executiveDashboard.mssqlOsTypes,\n    };\n  },\n  dispatch => ({\n    getOSType: (serverId) => dispatch(loadMssqlOsTypesThunk(serverId)),\n    getDBVersion: (serverId) => dispatch(loadMssqlDbVersionsThunk(serverId)),\n  })\n)(MssqlDbVersionAndOsTile);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { ConnectedHardware } from './Pages/Hardware/Hardware';\nimport { ConnectedSoftware } from './Pages/Software/Software';\nimport { ConnectedVMware } from './Pages/VMware/VMware';\nimport { ConnectedPackaging } from './Pages/Packaging/Packaging';\nimport { ConnectedPreSoftware } from './Pages/PreSoftware/PreSoftware';\n\nexport const LicenseCollection = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function changeActiveTab(newActiveTab) {\n    setActiveTab(newActiveTab);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / Oracle / Usage Collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <Navigation active={activeTab} onClickCallback={changeActiveTab} />\n          </Paper.Header>\n          <Paper.Content>\n            <Switch value={activeTab}>\n              <Switch.Case value={0}>\n                <ConnectedHardware />\n              </Switch.Case>\n              <Switch.Case value={1}>\n                <ConnectedPreSoftware />\n              </Switch.Case>\n              <Switch.Case value={2}>\n                <ConnectedSoftware />\n              </Switch.Case>\n              <Switch.Case value={3}>\n                <ConnectedVMware />\n              </Switch.Case>\n              <Switch.Case value={4}>\n                <ConnectedPackaging />\n              </Switch.Case>\n            </Switch>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Navigation.local.scss';\n\nconst data = [\n  { label: '1. Hardware Data Requirements Collection' },\n  { label: '2. Pre-Software Scan Setup' },\n  { label: '3. Software Data Requirements Collection' },\n  { label: '4. vSphere Data Requirements Collection' },\n  { label: '5. Packaging Process' }\n];\n\nexport const Navigation = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"nav-chip-container\">\n      {data.map((chip, index) => (\n        <div\n          className={classnames('nav-chip', { active: active === index })}\n          key={index}\n          onClick={() => onClickCallback(index)}\n          role=\"presentation\"\n          data-qa={`chip-nav-${index}`}\n        >\n          {chip.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiMemory } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk, executeCollectionProcessThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Hardware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.hw_scan';\n\nexport class Hardware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n      request('form');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'hardware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'hardware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"hardware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Hardware scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Hardware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedHardware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.hardware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.hardware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Hardware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n  const matches = regex.exec(deflt);\n  // const json = `[${matches[2]}]`;\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default:\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return parseInt(matches[2], 10);\n          case 'str':\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n  }\n  return null;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiApplication, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Software.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.sw_scan';\n\nexport class Software extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      request,\n      entitiesStatus,\n      requestProcessData,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted\n    } = this.props;\n\n    if (wasHardwareExecuted && wasPreSoftwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'software', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    if (!wasHardwareExecuted || !wasPreSoftwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather Hardware data and Pre-Software Scan Setup before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'software' });\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting, values }) => {\n            return (\n              <Form className=\"software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Database features scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to target server, Target DBMS, Database form for the target\n                      database, SSH connection to the target host, working directory in the repo\n                      host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled, values)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Software Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiApplication} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled, formValues) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        forms={this.props.forms}\n        prototypes={this.props.prototypes}\n        disabled={disabled}\n        currentFormValues={formValues}\n      />\n    );\n  }\n}\n\nexport const ConnectedSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.software,\n    isProcessLoading: state.explorer.flags.collectionProcesses.software.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n    wasPreSoftwareExecuted: state.explorer.flags.collectionProcesses.preSoftware.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Software);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiCubeScan } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './VMware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.vsphere_scan';\n\nexport class VMware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'vmware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const { entitiesStatus, datatypes, prototypes, isProcessLoading, process } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: VMware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"vmware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>vSphere for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>SSH connection to repo server, working directory in the repo host</p>\n                  </div>\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'VMware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiCubeScan} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedVMware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.vmware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.vmware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(VMware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArchiveArrowDownOutline, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport { SuccessModal } from '../../../shared/components/overlays/SuccessModal/SuccessModal';\nimport { downloadFile } from '../../utils/downloadFile';\nimport './Packaging.local.scss';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.packager';\n\nexport class Packaging extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined,\n      successModalOpen: false,\n      failedModalOpen: false,\n      formValues: {},\n      isDownloadDisabled: true,\n      isEmailDisabled: true\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasVsphereExecuted } = this.props;\n\n    if (wasVsphereExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'packaging', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasVsphereExecuted\n    } = this.props;\n    let parameters = null;\n\n    if (!wasVsphereExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather software data before running the Packaging\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined,\n                    formValues: formatParameters(values),\n                    isDownloadDisabled: true,\n                    isEmailDisabled: true\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"packaging-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Package (HW, SW) file for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>Repo working directory, repo SSH connection</p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Paper.Footer.Left>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isDownloadDisabled}\n                      data-qa=\"download-btn\"\n                      onClick={() => {\n                        downloadFile(this.state.formValues);\n                        this.setState({ isEmailDisabled: false });\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isEmailDisabled}\n                      data-qa=\"email-btn\"\n                      onClick={() => this.sendEmail()}\n                    >\n                      Email\n                    </Button>\n                  </Paper.Footer.Left>\n                  <Paper.Footer.Right>\n                    <Button\n                      className=\"btn submit\"\n                      type=\"submit\"\n                      disabled={!dirty || isSubmitting}\n                      variant=\"contained\"\n                      data-qa=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Packaging Process ',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiArchiveArrowDownOutline} />\n            </SvgIcon>\n          )\n        })}\n        {this.renderPackagingSuccessModal()}\n        {this.renderPackagingFailedModal()}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n\n            try {\n              const isSucceeded = invocation.status === 'SUCCEEDED';\n\n              this.setState({\n                output: outputReponse.data.data.outputs,\n                invocation,\n                outputOpen: !isSucceeded,\n                successModalOpen: isSucceeded,\n                failedModalOpen: false,\n                isDownloadDisabled: !isSucceeded\n              });\n            } catch (error) {\n              console.log('[collection-packaging-exec-dashboard-update] error: ', error); // eslint-disable-line\n              this.setState({ outputOpen: false });\n              this.setState({ successModalOpen: false });\n              this.setState({ failedModalOpen: true });\n            }\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        type=\"packaging\"\n        output={this.state.output}\n        processName={processName}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        messages={['Preparing job...', 'Executing job...', 'Preparing files...']}\n      />\n    );\n  };\n\n  renderPackagingSuccessModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ successModalOpen: true });\n      },\n      close: () => {\n        this.setState({ successModalOpen: false });\n      }\n    };\n\n    return (\n      <SuccessModal open={this.state.successModalOpen} actions={actions} message=\"Packaging successfully completed!\" />\n    );\n  }\n\n  renderPackagingFailedModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ failedModalOpen: true });\n      },\n      close: () => {\n        this.setState({ failedModalOpen: false });\n      }\n    };\n\n    return (\n      <ErrorModal open={this.state.failedModalOpen} actions={actions} message=\"Packaging failed! Please check parameters and try again.\" />\n    );\n  }\n\n  sendEmail = () => {\n    const body = 'Please attach the downloaded file. It should be named \"lms-file-bundle.tar\".';\n    window.location.href = `mailto:?subject=Packaging files&body=${encodeURIComponent(body)}`;\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPackaging = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.packaging,\n    isProcessLoading: state.explorer.flags.collectionProcesses.packaging.loading,\n    wasVsphereExecuted: state.explorer.flags.collectionProcesses.software.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Packaging);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async query => {\n  const formatQuery = {\n    lms_repo: query.repo_working_dir,\n    repo_shell: query.repo_shell\n  };\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_PACKAGING, formatQuery);\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'lms-file-bundle.tar';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiMemory, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\nimport { Parameter } from '../../../shared/components/form/parameters';\nimport { Result } from '../../../shared/components/overlays';\n\nimport './PreSoftware.local.scss';\n\nconst PROCESS_NAME = 'vendita.oracle.rdbms.util.lms.hardcoded_hw_scan_lms';\nconst PARAMS_TO_NORMALIZE = [\n  'vendita.oracle.rdbms.util.lms.license_metric_values',\n  'vendita.oracle.rdbms.util.lms.environment_values',\n  'vendita.oracle.rdbms.util.lms.partitioning_values',\n  'vendita.oracle.rdbms.util.lms.database_edition_values',\n];\n\nexport class PreSoftware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasHardwareExecuted } = this.props;\n\n    if (wasHardwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'preSoftware', process: PROCESS_NAME });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess,\n      wasHardwareExecuted,\n    } = this.props;\n\n    if (!wasHardwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather hardware data before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    let parameters = null;\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${PROCESS_NAME} process`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {PROCESS_NAME} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: PROCESS_NAME,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'preSoftware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Pre-Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"pre-software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Pre-Software Scan Setup</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={PROCESS_NAME}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Pre-Software Scan Setup',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={PROCESS_NAME}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    if (PARAMS_TO_NORMALIZE.includes(parameter.data_type)) {\n      const normalizedParam = normalize(parameter, this.props.datatypes, this.props.prototypes, this.props.forms);\n      return <Parameter normalized={normalizedParam} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPreSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.preSoftware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.preSoftware.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(PreSoftware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { ConnectedAllocatedLicensesTable } from './components/AllocatedLicensesTable/AllocatedLicensesTable';\n\nexport class LicenseAllocation extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Header title=\"Compliance / Oracle / License allocation\" />\n        <Main>\n          <Paper>\n            <Paper.Content>\n              <ConnectedAllocatedLicensesTable />\n            </Paper.Content>\n          </Paper>\n        </Main>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadLicenseAllocationThunk } from '../../store/thunks';\nimport { getLicensesData, licensesLoading } from '../../store/selectors';\nimport { Center, LightTooltip, Table } from 'shared/components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPencil } from '@mdi/js';\nimport { AssignLicenseModal } from '../assign-license-modal/AssignLicenseModal';\n\nimport './AllocatedLicensesTable.local.scss';\n\nconst columns = [\n  { label: '' },\n  { label: 'Product' },\n  { label: 'Server' },\n  { label: 'Metric' },\n  { label: 'Term' },\n  { label: 'Type' },\n  { label: 'Assigned' },\n  { label: 'Available' },\n  { label: '' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"tooltip-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"tooltip-cell\">{name}</span>;\n};\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nconst rowRenderer = (row, index, isParentRow, hasChildren, openLicenseAssignments, expandedProducts, toggleGroup) => (\n  <Table.Row hover key={`${row.license_id}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      {isParentRow && hasChildren && (\n        <span tabIndex={0} role=\"button\" className=\"license-table-expandable-icon\" onClick={() => toggleGroup(row.product_name, expandedProducts)}>\n          {expandedProducts[row.product_name] ? '-' : '+'}\n        </span>\n      )}\n    </Table.Cell>\n    <Table.Cell>\n      {isParentRow && (\n        <CellWithTooltip name={row.product_name} />\n      )}\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.host_name}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{isParentRow ? row.license_metric : ''}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{isParentRow ? row.license_term : ''}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{isParentRow ? row.license_type : ''}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{row.licenses_assigned}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-table-cell\">{isParentRow ? row.licenses_available : ''}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-target-cell action-cell\">\n        <LightTooltip placement=\"top\" title=\"Edit assignment\">\n          <SvgIcon onClick={() => openLicenseAssignments(row, isParentRow)}>\n            <Icon path={mdiPencil} />\n          </SvgIcon>\n        </LightTooltip>\n      </span>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, licenses, noDataMessage, tableProps, openLicenseAssignments, expandedProducts, toggleGroup }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (licenses.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>\n            {licenses.map((row, index) => {\n              const hasChildren = row?.children?.length;\n              return (\n                <>\n                  {rowRenderer(row, index, true, hasChildren, openLicenseAssignments, expandedProducts, toggleGroup)}\n                  {hasChildren && expandedProducts[row.product_name] && (\n                    row.children.map((child, childIndex) =>\n                      rowRenderer(child, `${index}_${childIndex}`, false, false, openLicenseAssignments, expandedProducts, toggleGroup))\n                  )}\n                </>\n              );\n            })}\n         </Table>;\n};\n\nclass AllocatedLicensesTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'product_name', order: 'desc' },\n      assignLicenseModalOpened: false,\n      selectedAssignment: null,\n      expandedProducts: {},\n      editableServer: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getLicenses();\n  }\n\n  render() {\n    const { licensesData, isLoading } = this.props;\n    const { sortBehavior, assignLicenseModalOpened, selectedAssignment, expandedProducts, editableServer } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const groupedLicenses = this.groupLicenses(licensesData);\n    const assignLicenseModalActions = {\n      open: (assignmentToEdit, canModifyServer) => {\n        this.setState({ assignLicenseModalOpened: true, selectedAssignment: assignmentToEdit, editableServer: canModifyServer });\n      },\n      close: () => {\n        this.setState({ assignLicenseModalOpened: false, selectedAssignment: null, editableServer: false });\n      }\n    };\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          licenses={groupedLicenses}\n          tableProps={tableProps}\n          openLicenseAssignments={assignLicenseModalActions.open}\n          expandedProducts={expandedProducts}\n          toggleGroup={this.toggleGroup}\n          noDataMessage=\"No License Data Available\"\n        />\n\n        <AssignLicenseModal\n          modalActions={assignLicenseModalActions}\n          open={assignLicenseModalOpened}\n          selectedAssignment={selectedAssignment}\n          editableServer={editableServer}\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  toggleGroup = (productName, expandedProducts) => {\n    if (expandedProducts[productName]) {\n      delete expandedProducts[productName];\n    } else {\n      expandedProducts[productName] = true;\n    }\n    this.setState({ expandedProducts });\n    this.forceUpdate();\n  };\n\n  groupLicenses = (licenses) => {\n    return Object.values(licenses.reduce((acc, current) => {\n      // const groupKey = `${current.product_name}_${current.license_metric}`;\n      const groupKey = `${current.license_id}`;\n      if (acc[groupKey]) {\n        acc[groupKey].children.push(current);\n        acc[groupKey].licenses_assigned += current.licenses_assigned;\n      } else {\n        const topLevelItem = { ...current, children: [current] };\n        delete topLevelItem.server_id;\n        delete topLevelItem.host_name;\n        acc[groupKey] = topLevelItem;\n      }\n      return acc;\n    }, {})).map((license) => {\n      if (license.licenses_assigned === 0) {\n        delete license.children;\n      }\n      return license;\n    });\n  };\n}\n\nexport const ConnectedAllocatedLicensesTable = connect(\n  state => ({\n    isLoading: licensesLoading(state),\n    licensesData: getLicensesData(state)\n  }),\n  dispatch => ({\n    getLicenses: () => dispatch(loadLicenseAllocationThunk())\n  })\n)(AllocatedLicensesTable);\n","import React, { useEffect, useRef } from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiLicense } from '@mdi/js';\nimport { connect } from 'react-redux';\nimport { getAvailableServersData, getLicensesData } from '../../store/selectors';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { Column, Paper, Row } from 'shared/components/layout';\nimport { Form, Formik } from 'formik';\nimport {\n  loadAvailableServersThunk,\n  loadLicenseAllocationThunk,\n  updateLicenseAssignmentThunk\n} from '../../store/thunks';\nimport { Integer } from '../../../shared/components/form/editors/Generic';\nimport { SubmitButtonNoDirty } from '../../../shared/components/form/SubmitButtonNoDirty';\n\nimport './AssignLicenseModal.local.scss';\n\nexport const AssignLicenseModal = ({ modalActions, open, selectedAssignment, editableServer }) => {\n  return (\n    <>\n      <Modal open={open} actions={modalActions}>\n        <ConnectedAssignLicense\n          closeModal={modalActions.close}\n          selectedAssignment={selectedAssignment}\n          canEditServer={editableServer}\n        />\n      </Modal>\n    </>\n  );\n};\n\nconst AssignLicense = (\n  {\n    licensesData,\n    availableServers,\n    getAvailableServers,\n    updateLicenseAssignment,\n    selectedAssignment,\n    canEditServer,\n    closeModal,\n    refreshLicenses\n  }) => {\n  const formRef = useRef();\n  const initialValues = {\n    server_id: selectedAssignment.server_id || '',\n    license_id: selectedAssignment.license_id || '',\n    metric: selectedAssignment.license_metric || '',\n    term: selectedAssignment.license_term || '',\n    type: selectedAssignment.license_type || '',\n    quantity: selectedAssignment.licenses_available || '',\n  };\n\n  const extraValidations = (values) => {\n    const errors = {};\n    if (values.license_id && selectedAssignment) {\n      const available = selectedAssignment.licenses_available || 0;\n      const assigned = selectedAssignment.licenses_assigned || 0;\n\n      if (!values.quantity) {\n        errors.quantity = 'Please specify positive or negative quantity';\n      } else if (values.quantity < 0 && Math.abs(values.quantity) > assigned) {\n        errors.quantity = `You have only ${assigned} assigned licenses. You can't decrease more.`;\n      } else if (values.quantity > 0 && values.quantity > available) {\n        errors.quantity = `You have only ${available} available licenses`;\n      }\n    }\n    return errors;\n  };\n\n  const licenseOptions = (licensesData || []).map((license) => {\n    return {\n      label: license.product_name,\n      value: license.license_id,\n      disabled: license.licenses_available <= 0\n    };\n  });\n\n  const assignedServers = !canEditServer || !selectedAssignment.children ? [] : selectedAssignment.children.map((child) => child.host_name);\n  const availableServersOptions = (availableServers || [])\n    .filter((serverInfo) => {\n      return !canEditServer || assignedServers.indexOf(serverInfo.host_name) === -1;\n    })\n    .map((serverInfo) => {\n      return {\n        label: `${serverInfo.host_name} (${serverInfo.ip_address})`,\n        value: serverInfo.server_id\n      };\n    });\n\n  useEffect(() => {\n    getAvailableServers();\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '700px',\n        minHeight: '565px',\n        maxHeight: '800px'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiLicense} />\n          </SvgIcon>\n        }\n        title=\"Assign Licenses\"\n        desc=\"Select target server and assign licenses to it\"\n        formikRef={formRef}\n      />\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={(values) => {\n          const isInitialAssignment = !selectedAssignment.server_id || selectedAssignment.server_id !== values.server_id;\n          updateLicenseAssignment(isInitialAssignment, values).then(() => {\n            refreshLicenses();\n            closeModal();\n          });\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form className=\"assign-license-form\">\n                  <Row>\n                    <Column xs={12}>\n                      <Text\n                        type=\"text\"\n                        name=\"server_id\"\n                        label=\"Server\"\n                        options={availableServersOptions}\n                        value={initialValues.server_id}\n                        disabled={!canEditServer}\n                        required\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs={12}>\n                      <Text\n                        type=\"text\"\n                        name=\"license_id\"\n                        label=\"License\"\n                        options={licenseOptions}\n                        value={initialValues.license_id}\n                        disabled\n                        required\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs=\"6\">\n                      <Text\n                        type=\"text\"\n                        name=\"term\"\n                        label=\"Term\"\n                        value={initialValues.term}\n                        disabled\n                      />\n                    </Column>\n                    <Column xs=\"6\">\n                      <Text\n                        type=\"text\"\n                        name=\"type\"\n                        label=\"Type\"\n                        value={initialValues.type}\n                      />\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column xs=\"8\">\n                      <Text\n                        type=\"text\"\n                        name=\"metric\"\n                        label=\"Metric\"\n                        value={initialValues.metric}\n                        disabled\n                      />\n                    </Column>\n                    <Column xs=\"4\">\n                      <Integer\n                        type=\"text\"\n                        name=\"quantity\"\n                        label=\"Quantity\"\n                        value={initialValues.quantity}\n                        required\n                      />\n                    </Column>\n                  </Row>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButtonNoDirty variant=\"contained\" confirmation>\n                    Submit\n                  </SubmitButtonNoDirty>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport const ConnectedAssignLicense = connect(\n  state => ({\n    licensesData: getLicensesData(state),\n    availableServers: getAvailableServersData(state),\n  }),\n  dispatch => ({\n    getAvailableServers: () => dispatch(loadAvailableServersThunk()),\n    updateLicenseAssignment: (isInitialAssignment, payload) => dispatch(updateLicenseAssignmentThunk(isInitialAssignment, payload)),\n    refreshLicenses: () => dispatch(loadLicenseAllocationThunk())\n  })\n)(AssignLicense);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Center, Main, Paper } from 'shared/components/layout';\nimport { Result, ErrorModal } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\nimport { downloadFileByLink } from 'shared/lib/download-file/download-file';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from '../config';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { SuccessModal } from 'shared/components/overlays/SuccessModal/SuccessModal';\n\nimport './Licensing.local.scss';\n\nexport const Licensing = () => {\n  const [selectedSupportRenewalFile, setSelectedSupportRenewalFile] = useState(null);\n  const [supportRenewalFileResult, setSupportRenewalFileResult] = useState('');\n  const [uploadSupportRenewalFileDisabled, setUploadSupportRenewalFileDisabled] = useState(true);\n  const supportRenewalFileName = selectedSupportRenewalFile?.name || 'No file chosen';\n\n  const [selectedMasLicenseFile, setSelectedMasLicenseFile] = useState(null);\n  const [masLicenseFileResult, setMasLicenseFileResult] = useState('');\n  const [selectedMasLicenseFileDisabled, setSelectedMasLicenseFileDisabled] = useState(true);\n  const masLicenseFileName = selectedMasLicenseFile?.name || 'No file chosen';\n\n  const [successModalOpen, setSuccessModalOpen] = useState(false);\n  const [failedModalOpen, setFailedModalOpen] = useState(false);\n\n  // const formRef = useRef();\n\n  const uploadSupportRenewalFile = () => {\n    if (!selectedSupportRenewalFile) {\n      setSupportRenewalFileResult('error');\n\n      return;\n    }\n    setSupportRenewalFileResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedSupportRenewalFile);\n\n    RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_SUPPORT_RENEWAL_FILE, data)\n      .then(() => {\n        setSupportRenewalFileResult('');\n        setSuccessModalOpen(true);\n      })\n      .catch(() => {\n        setSupportRenewalFileResult('');\n        setFailedModalOpen(true);\n      });\n  };\n\n  const uploadMasLicenseFile = () => {\n    if (!selectedMasLicenseFile) {\n      setMasLicenseFileResult('error');\n\n      return;\n    }\n    setMasLicenseFileResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedMasLicenseFile);\n\n    RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_MAS_LICENSE_FILE, data)\n      .then(() => {\n        setMasLicenseFileResult('');\n        setSuccessModalOpen(true);\n      })\n      .catch(() => {\n        setMasLicenseFileResult('');\n        setFailedModalOpen(true);\n      });\n  };\n\n  const renderUploadSuccessModal = () => {\n    const actions = {\n      open: () => setSuccessModalOpen(true),\n      close: () => setSuccessModalOpen(false)\n    };\n\n    return (\n      <SuccessModal open={successModalOpen} actions={actions} message=\"Your file was successfully uploaded.\" />\n    );\n  };\n\n  const renderUploadFailedModal = () => {\n    const actions = {\n      open: () => setFailedModalOpen(true),\n      close: () => setFailedModalOpen(false)\n    };\n\n    return (\n      <ErrorModal open={failedModalOpen} actions={actions} message=\"Something went wrong. Please try again.\" />\n    );\n  };\n\n  return (\n    <>\n      <Header title=\"Compliance / Oracle / License Collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <span className=\"licensing-title\">\n              By providing MAS with your organization&apos;s Oracle license information,\n              we can help you optimize your Oracle investment. By comparing your Oracle product\n              usage with the licenses you purchased, we can identify any gaps in license coverage,\n              inform you of your financial exposure from an Oracle License Audit, and help identify\n              opportunities to save by reviewing your existing Oracle license strategy.\n              To get started, simply use one of the methods below to load and review\n              your Oracle license portfolio.\n            </span>\n          </Paper.Header>\n          <Paper.Content>\n            <div className=\"widgets-container\">\n              <div className=\"widget\">\n                <h3 className=\"widget-title\">Oracle Support Renewal File</h3>\n                <p className=\"widget-desc\">\n                  Use this option if you don&apos;t have, or cannot easily obtain, your organization&apos;s\n                  license information.<br /><br />\n                  This option uses the Detailed Support Renewal report that you can produce from within the\n                  Oracle Support Renewal Portal. Simply create and download the CSV file, browse to that\n                  file using the file browser below, then click Upload Support Renewal. We will determine\n                  your Oracle licenses from the file and ask you to confirm them before saving them\n                  in MAS. It&apos;s that easy!\n                </p>\n\n                <Switch value={supportRenewalFileResult}>\n                  <Switch.Case value=\"\">\n                    <div className=\"actions-container\">\n                      <label htmlFor=\"renewal-file-upload\" className=\"browse-file\">\n                        Choose file\n                        <input\n                          type=\"file\"\n                          id=\"renewal-file-upload\"\n                          name=\"csv\"\n                          accept=\".csv\"\n                          onChange={(event) => {\n                            setSelectedSupportRenewalFile(event.target.files[0]);\n                            setUploadSupportRenewalFileDisabled(!event.target.files[0]);\n                          }}\n                        />\n                      </label>\n                      <LimitlessTooltip placement=\"bottom\" title={supportRenewalFileName}>\n                        <span className=\"file-name\">{supportRenewalFileName}</span>\n                      </LimitlessTooltip>\n                      <Button className=\"upload-file-btn\" disabled={uploadSupportRenewalFileDisabled} onClick={uploadSupportRenewalFile}>\n                        Upload Support Renewal File\n                      </Button>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"loading\">\n                    <div className=\"loading-container\">\n                      <Center>\n                        <Loader>Uploading file...</Loader>\n                      </Center>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"error\">\n                    <div className=\"failed-result-container\">\n                      <Result type=\"fail\">\n                        <Result.Text>Something went wrong with uploading the file</Result.Text>\n                      </Result>\n                      <Button onClick={() => setSupportRenewalFileResult('')}>Back</Button>\n                    </div>\n                  </Switch.Case>\n                </Switch>\n              </div>\n              <div className=\"widget\">\n                <h3 className=\"widget-title\">MAS License Template</h3>\n                <p className=\"widget-desc\">\n                  Use this option if you have your organization&apos;s Oracle license information.<br /><br />\n                  This option offers a fast and accurate method for entering your Oracle license data.\n                  Simply download and complete the spreadsheet. Once all of your licenses have been added\n                  to the spreadsheet, save the file as a comma-separated value (CSV) file.\n                  Then, select the .csv file using the file browser and click Upload MAS License File.\n                </p>\n                <Button className=\"download-template-btn\" onClick={() => downloadFileByLink('https://venditapublic.s3.amazonaws.com/license_template.xlsx')}>\n                  Download template file here\n                </Button>\n\n                <Switch value={masLicenseFileResult}>\n                  <Switch.Case value=\"\">\n                    <div className=\"actions-container\">\n                      <label htmlFor=\"mas-file-upload\" className=\"browse-file\">\n                        Choose file\n                        <input\n                          type=\"file\"\n                          id=\"mas-file-upload\"\n                          name=\"csv\"\n                          accept=\".csv\"\n                          onChange={(event) => {\n                            setSelectedMasLicenseFile(event.target.files[0]);\n                            setSelectedMasLicenseFileDisabled(!event.target.files[0]);\n                          }}\n                        />\n                      </label>\n                      <LimitlessTooltip placement=\"bottom\" title={masLicenseFileName}>\n                        <span className=\"file-name\">{masLicenseFileName}</span>\n                      </LimitlessTooltip>\n                      <Button className=\"upload-file-btn\" disabled={selectedMasLicenseFileDisabled} onClick={uploadMasLicenseFile}>\n                        Upload MAS License File\n                      </Button>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"loading\">\n                    <div className=\"loading-container\">\n                      <Center>\n                        <Loader>Uploading file...</Loader>\n                      </Center>\n                    </div>\n                  </Switch.Case>\n                  <Switch.Case value=\"error\">\n                    <div className=\"failed-result-container\">\n                      <Result type=\"fail\">\n                        <Result.Text>Something went wrong with uploading the file</Result.Text>\n                      </Result>\n                      <Button onClick={() => setMasLicenseFileResult('')}>Back</Button>\n                    </div>\n                  </Switch.Case>\n                </Switch>\n              </div>\n              {\n                /* <div className=\"widget\">\n                <h3 className=\"widget-title\">Manual License Entry</h3>\n\n                <Formik\n                  initialValues={{\n                    csiNumber: '',\n                    productName: '',\n                    licenseType: '',\n                    licenseMetric: '',\n                    licenseTerm: '',\n                    licenseQuantity: '',\n                    licenseStatus: '',\n                    licensePurchased: '',\n                    isSupported: '',\n                  }}\n                  onSubmit={values => {\n                    console.log(values);\n                  }}\n                  innerRef={formRef}\n                >\n                  {({ values }) => {\n                    return (\n                      <>\n                        <Form className=\"license-entry-form\">\n                          <Section>\n                            <Row>\n                              <Text name=\"csiNumber\" label=\"CSI Number\" value={values.csiNumber} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"productName\" label=\"Product Name\" value={values.productName} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseType\" label=\"License Type\" value={values.licenseType} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseMetric\" label=\"License Metric\" value={values.licenseMetric} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseTerm\" label=\"License Term\" value={values.licenseTerm} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseQuantity\" label=\"License Quantity\" value={values.licenseQuantity} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licenseStatus\" label=\"License Status\" value={values.licenseStatus} required />\n                            </Row>\n                            <Row>\n                              <Text name=\"licensePurchased\" label=\"License Purchased\" value={values.licensePurchased} required />\n                            </Row>\n                            <Text name=\"isSupported\" label=\"Is Supported\" value={values.isSupported} required />\n                          </Section>\n                        </Form>\n                        <div className=\"save-license-btn\">\n                          <SubmitButton>Save License Information</SubmitButton>\n                        </div>\n                      </>\n                    );\n                  }}\n                </Formik>\n              </div> */\n              }\n            </div>\n          </Paper.Content>\n        </Paper>\n      </Main>\n      {renderUploadSuccessModal()}\n      {renderUploadFailedModal()}\n    </>\n  );\n};\n","import React from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { connect } from 'react-redux';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport { Center, LightTooltip } from '../../shared/components';\nimport { Loader } from '../../shared/components/loaders';\nimport { formatParameters, getInitialValues } from '../../license-collection/utils/formikFormatter';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiMemory, mdiPlaySpeed } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport normalizeParameter from '../../license-collection/utils/normalizeParameter';\nimport _ from 'lodash';\nimport { TextField as Input } from '../../license-collection/controls/TextField/TextField';\nimport { DropdownField } from '../../license-collection/controls/DropdownField/DropdownField';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from '../../shared/lib/rest';\nimport { executeCollectionProcessThunk } from '../../explorer/store/thunks';\nimport { OutputModal } from '../../license-collection/components/OutputModal/OutputModal';\nimport { FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\nimport { fetchEntity } from '../../entities/actions';\n\nimport './MssqlUsageCollection.local.scss';\n\nconst SINGLE_SERVER_PROCESS = 'vendita.microsoft.sqlserver.util.CoreVersionRpt';\nconst MULTI_SERVER_PROCESS = 'vendita.microsoft.sqlserver.util.multiDBLicenseScan';\n\nexport class MssqlUsageCollection extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      singleServer: true,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  async componentDidMount() {\n    const { requestProcessData, singleServerProcess, entitiesStatus, request } = this.props;\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n      request('form');\n    }\n\n    if (!singleServerProcess) {\n      requestProcessData({ name: 'mssqlSingleServerUsage', process: SINGLE_SERVER_PROCESS });\n    }\n  }\n\n  async componentDidUpdate() {\n    const {\n      requestProcessData,\n      singleServerProcess,\n      multiServerProcess,\n      isSingleProcessLoading,\n      isMultiProcessLoading\n    } = this.props;\n    const { singleServer } = this.state;\n\n    if (singleServer && !singleServerProcess && !isSingleProcessLoading) {\n      requestProcessData({ name: 'mssqlSingleServerUsage', process: SINGLE_SERVER_PROCESS });\n    } else if (!singleServer && !multiServerProcess && !isMultiProcessLoading) {\n      requestProcessData({ name: 'mssqlMultiServerUsage', process: MULTI_SERVER_PROCESS });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const {\n      isSingleProcessLoading,\n      isMultiProcessLoading,\n      singleServerProcess,\n      multiServerProcess,\n      datatypes,\n      prototypes,\n      executeCollectionProcess\n    } = this.props;\n    const { singleServer } = this.state;\n    const selectedProcessName = singleServer ? SINGLE_SERVER_PROCESS : MULTI_SERVER_PROCESS;\n\n    if (singleServer && !singleServerProcess && !isSingleProcessLoading) {\n      return <Center>{`There is a problem with ${SINGLE_SERVER_PROCESS} process`}</Center>;\n    }\n\n    if (!singleServer && !multiServerProcess && !isMultiProcessLoading) {\n      return <Center>{`There is a problem with ${MULTI_SERVER_PROCESS} process`}</Center>;\n    }\n\n    if (singleServer ? isSingleProcessLoading : isMultiProcessLoading) {\n      return (\n        <Center>\n          <Loader>Loading {selectedProcessName} information</Loader>\n        </Center>\n      );\n    }\n\n    const currentProcess = singleServer ? singleServerProcess : multiServerProcess;\n    let parameters = null;\n    if (currentProcess) {\n      parameters = currentProcess.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    return (\n      <>\n        <Header title=\"Compliance / Microsoft / Usage Collection\" />\n        <Main>\n          <Formik\n            initialValues={getInitialValues(parameters)}\n            onSubmit={async values => {\n              try {\n                const payload = {\n                  process: selectedProcessName,\n                  parameters: formatParameters(values),\n                  timestamp: null\n                };\n                const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n                executeCollectionProcess({ name: 'hardware' });\n\n                if (\n                  response.data.data &&\n                  response.data.data.invocations &&\n                  response.data.data.invocations[0]\n                ) {\n                  this.setState(\n                    {\n                      invocation: response.data.data.invocations[0],\n                      outputOpen: true,\n                      output: undefined\n                    },\n                    () => {\n                      this.runPoller();\n                    }\n                  );\n                }\n              } catch (error) {\n                console.log('[MSSQL Usage Collection] submit form error: ', error); // eslint-disable-line\n              }\n            }}\n          >\n            {({ dirty, isSubmitting }) => {\n              return (\n                <Form className=\"mssql-usage-collection-form\">\n                  <Paper>\n                    <Paper.Content>\n                      <RadioGroup\n                        row\n                        className=\"process-type\"\n                        value={singleServer ? 'single' : 'multi'}\n                        onChange={(event) => {\n                          this.setState({ singleServer: event.target.value === 'single' });\n                        }}\n                      >\n                        <FormControlLabel value=\"single\" control={<Radio color=\"primary\" size=\"small\" />} label=\"Single server\" />\n                        <FormControlLabel value=\"multi\" control={<Radio color=\"primary\" size=\"small\" />} label=\"Multiple servers\" />\n                      </RadioGroup>\n\n                      <div className=\"info\">\n                        <h1>Job</h1>\n                        <p>{singleServer ? 'Single' : 'Multi'} server usage collection</p>\n                      </div>\n                      <FormControl className=\"field full-width\" variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                        <OutlinedInput\n                          id=\"outlined-adornment-process\"\n                          type=\"text\"\n                          readOnly\n                          disabled\n                          value={selectedProcessName}\n                          labelWidth={70}\n                          startAdornment={\n                            <InputAdornment position=\"start\">\n                              <SvgIcon>\n                                <Icon path={mdiPlaySpeed} />\n                              </SvgIcon>\n                            </InputAdornment>\n                          }\n                          endAdornment={\n                            <LightTooltip placement=\"bottom-end\" title={process.description}>\n                              <InputAdornment position=\"end\">\n                                <SvgIcon>\n                                  <Icon path={mdiHelpCircleOutline} />\n                                </SvgIcon>\n                              </InputAdornment>\n                            </LightTooltip>\n                          }\n                        />\n                      </FormControl>\n                      <div className=\"info\">\n                        <h1>Job Parameters</h1>\n                      </div>\n\n                      <div className=\"form-fields-container\">\n                        {parameters.map(parameter => {\n                          return (\n                            <div key={parameter.name} className=\"form-field\">\n                              {this.chooseField(parameter, false)}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </Paper.Content>\n\n                    <Paper.Footer>\n                      <Button\n                        className=\"btn output\"\n                        disabled={!this.state.invocation}\n                        data-qa=\"view-output\"\n                        onClick={() => this.setState({ outputOpen: true })}\n                      >\n                        View Output\n                      </Button>\n                      <Button\n                        className=\"btn submit\"\n                        type=\"submit\"\n                        disabled={!dirty || isSubmitting}\n                        variant=\"contained\"\n                        data-qa=\"submit\"\n                      >\n                        Submit\n                      </Button>\n                    </Paper.Footer>\n                  </Paper>\n                </Form>\n              );\n            }}\n          </Formik>\n          {this.renderModal({\n            title: `Microsoft Usage Collection ${singleServer ? '(single server)' : '(multiple servers)'}`,\n            icon: (\n              <SvgIcon>\n                <Icon path={mdiMemory} />\n              </SvgIcon>\n            )\n          }, selectedProcessName)}\n        </Main>\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = (modalDetails, processName) => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    if (parameter.data_type === 'mas0300.fmt.format' || parameter.data_type === 'boolean') {\n      return <Input parameter={parameter} disabled />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedMssqlUsageCollection = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    entitiesStatus: state.entities.fetch_status,\n    singleServerProcess: state.explorer.collectionProcesses.mssqlSingleServerUsage,\n    multiServerProcess: state.explorer.collectionProcesses.mssqlMultiServerUsage,\n    isSingleProcessLoading: state.explorer.flags.collectionProcesses.mssqlSingleServerUsage.loading,\n    isMultiProcessLoading: state.explorer.flags.collectionProcesses.mssqlMultiServerUsage.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data)),\n  })\n)(MssqlUsageCollection);\n","import { en } from './en';\n\nexport const i18nMessages = {\n  en,\n};\n","import dashboard from './dashboard.json';\nimport general from './general.json';\nimport session from './session.json';\nimport header from './header.json';\n\nexport const en = {\n  ...dashboard,\n  ...general,\n  ...session,\n  ...header,\n};\n","import 'babel-polyfill';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport store from 'core/store';\nimport { App } from './app';\nimport { CONSTANTS } from './app/config';\nimport { i18nMessages } from './i18n';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport './assets/fonts/Lato-Regular.ttf';\nimport './assets/fonts/OpenSans-Regular.ttf';\nimport './style.scss';\n\nconst persistor = persistStore(store);\n\nconst provider = (\n  <IntlProvider locale={CONSTANTS.INTL} messages={i18nMessages[CONSTANTS.INTL]}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter basename={process.env.NODE_ENV === 'development' ? '/' : '/ui/#/'}>\n          <Switch>\n            <Route component={App} path=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </IntlProvider>\n);\n\nrender(provider, document.getElementById('root'));\n","var map = {\n\t\"./af\": 723,\n\t\"./af.js\": 723,\n\t\"./ar\": 724,\n\t\"./ar-dz\": 725,\n\t\"./ar-dz.js\": 725,\n\t\"./ar-kw\": 726,\n\t\"./ar-kw.js\": 726,\n\t\"./ar-ly\": 727,\n\t\"./ar-ly.js\": 727,\n\t\"./ar-ma\": 728,\n\t\"./ar-ma.js\": 728,\n\t\"./ar-sa\": 729,\n\t\"./ar-sa.js\": 729,\n\t\"./ar-tn\": 730,\n\t\"./ar-tn.js\": 730,\n\t\"./ar.js\": 724,\n\t\"./az\": 731,\n\t\"./az.js\": 731,\n\t\"./be\": 732,\n\t\"./be.js\": 732,\n\t\"./bg\": 733,\n\t\"./bg.js\": 733,\n\t\"./bm\": 734,\n\t\"./bm.js\": 734,\n\t\"./bn\": 735,\n\t\"./bn-bd\": 736,\n\t\"./bn-bd.js\": 736,\n\t\"./bn.js\": 735,\n\t\"./bo\": 737,\n\t\"./bo.js\": 737,\n\t\"./br\": 738,\n\t\"./br.js\": 738,\n\t\"./bs\": 739,\n\t\"./bs.js\": 739,\n\t\"./ca\": 740,\n\t\"./ca.js\": 740,\n\t\"./cs\": 741,\n\t\"./cs.js\": 741,\n\t\"./cv\": 742,\n\t\"./cv.js\": 742,\n\t\"./cy\": 743,\n\t\"./cy.js\": 743,\n\t\"./da\": 744,\n\t\"./da.js\": 744,\n\t\"./de\": 745,\n\t\"./de-at\": 746,\n\t\"./de-at.js\": 746,\n\t\"./de-ch\": 747,\n\t\"./de-ch.js\": 747,\n\t\"./de.js\": 745,\n\t\"./dv\": 748,\n\t\"./dv.js\": 748,\n\t\"./el\": 749,\n\t\"./el.js\": 749,\n\t\"./en-au\": 750,\n\t\"./en-au.js\": 750,\n\t\"./en-ca\": 751,\n\t\"./en-ca.js\": 751,\n\t\"./en-gb\": 752,\n\t\"./en-gb.js\": 752,\n\t\"./en-ie\": 753,\n\t\"./en-ie.js\": 753,\n\t\"./en-il\": 754,\n\t\"./en-il.js\": 754,\n\t\"./en-in\": 755,\n\t\"./en-in.js\": 755,\n\t\"./en-nz\": 756,\n\t\"./en-nz.js\": 756,\n\t\"./en-sg\": 757,\n\t\"./en-sg.js\": 757,\n\t\"./eo\": 758,\n\t\"./eo.js\": 758,\n\t\"./es\": 759,\n\t\"./es-do\": 760,\n\t\"./es-do.js\": 760,\n\t\"./es-mx\": 761,\n\t\"./es-mx.js\": 761,\n\t\"./es-us\": 762,\n\t\"./es-us.js\": 762,\n\t\"./es.js\": 759,\n\t\"./et\": 763,\n\t\"./et.js\": 763,\n\t\"./eu\": 764,\n\t\"./eu.js\": 764,\n\t\"./fa\": 765,\n\t\"./fa.js\": 765,\n\t\"./fi\": 766,\n\t\"./fi.js\": 766,\n\t\"./fil\": 767,\n\t\"./fil.js\": 767,\n\t\"./fo\": 768,\n\t\"./fo.js\": 768,\n\t\"./fr\": 769,\n\t\"./fr-ca\": 770,\n\t\"./fr-ca.js\": 770,\n\t\"./fr-ch\": 771,\n\t\"./fr-ch.js\": 771,\n\t\"./fr.js\": 769,\n\t\"./fy\": 772,\n\t\"./fy.js\": 772,\n\t\"./ga\": 773,\n\t\"./ga.js\": 773,\n\t\"./gd\": 774,\n\t\"./gd.js\": 774,\n\t\"./gl\": 775,\n\t\"./gl.js\": 775,\n\t\"./gom-deva\": 776,\n\t\"./gom-deva.js\": 776,\n\t\"./gom-latn\": 777,\n\t\"./gom-latn.js\": 777,\n\t\"./gu\": 778,\n\t\"./gu.js\": 778,\n\t\"./he\": 779,\n\t\"./he.js\": 779,\n\t\"./hi\": 780,\n\t\"./hi.js\": 780,\n\t\"./hr\": 781,\n\t\"./hr.js\": 781,\n\t\"./hu\": 782,\n\t\"./hu.js\": 782,\n\t\"./hy-am\": 783,\n\t\"./hy-am.js\": 783,\n\t\"./id\": 784,\n\t\"./id.js\": 784,\n\t\"./is\": 785,\n\t\"./is.js\": 785,\n\t\"./it\": 786,\n\t\"./it-ch\": 787,\n\t\"./it-ch.js\": 787,\n\t\"./it.js\": 786,\n\t\"./ja\": 788,\n\t\"./ja.js\": 788,\n\t\"./jv\": 789,\n\t\"./jv.js\": 789,\n\t\"./ka\": 790,\n\t\"./ka.js\": 790,\n\t\"./kk\": 791,\n\t\"./kk.js\": 791,\n\t\"./km\": 792,\n\t\"./km.js\": 792,\n\t\"./kn\": 793,\n\t\"./kn.js\": 793,\n\t\"./ko\": 794,\n\t\"./ko.js\": 794,\n\t\"./ku\": 795,\n\t\"./ku.js\": 795,\n\t\"./ky\": 796,\n\t\"./ky.js\": 796,\n\t\"./lb\": 797,\n\t\"./lb.js\": 797,\n\t\"./lo\": 798,\n\t\"./lo.js\": 798,\n\t\"./lt\": 799,\n\t\"./lt.js\": 799,\n\t\"./lv\": 800,\n\t\"./lv.js\": 800,\n\t\"./me\": 801,\n\t\"./me.js\": 801,\n\t\"./mi\": 802,\n\t\"./mi.js\": 802,\n\t\"./mk\": 803,\n\t\"./mk.js\": 803,\n\t\"./ml\": 804,\n\t\"./ml.js\": 804,\n\t\"./mn\": 805,\n\t\"./mn.js\": 805,\n\t\"./mr\": 806,\n\t\"./mr.js\": 806,\n\t\"./ms\": 807,\n\t\"./ms-my\": 808,\n\t\"./ms-my.js\": 808,\n\t\"./ms.js\": 807,\n\t\"./mt\": 809,\n\t\"./mt.js\": 809,\n\t\"./my\": 810,\n\t\"./my.js\": 810,\n\t\"./nb\": 811,\n\t\"./nb.js\": 811,\n\t\"./ne\": 812,\n\t\"./ne.js\": 812,\n\t\"./nl\": 813,\n\t\"./nl-be\": 814,\n\t\"./nl-be.js\": 814,\n\t\"./nl.js\": 813,\n\t\"./nn\": 815,\n\t\"./nn.js\": 815,\n\t\"./oc-lnc\": 816,\n\t\"./oc-lnc.js\": 816,\n\t\"./pa-in\": 817,\n\t\"./pa-in.js\": 817,\n\t\"./pl\": 818,\n\t\"./pl.js\": 818,\n\t\"./pt\": 819,\n\t\"./pt-br\": 820,\n\t\"./pt-br.js\": 820,\n\t\"./pt.js\": 819,\n\t\"./ro\": 821,\n\t\"./ro.js\": 821,\n\t\"./ru\": 822,\n\t\"./ru.js\": 822,\n\t\"./sd\": 823,\n\t\"./sd.js\": 823,\n\t\"./se\": 824,\n\t\"./se.js\": 824,\n\t\"./si\": 825,\n\t\"./si.js\": 825,\n\t\"./sk\": 826,\n\t\"./sk.js\": 826,\n\t\"./sl\": 827,\n\t\"./sl.js\": 827,\n\t\"./sq\": 828,\n\t\"./sq.js\": 828,\n\t\"./sr\": 829,\n\t\"./sr-cyrl\": 830,\n\t\"./sr-cyrl.js\": 830,\n\t\"./sr.js\": 829,\n\t\"./ss\": 831,\n\t\"./ss.js\": 831,\n\t\"./sv\": 832,\n\t\"./sv.js\": 832,\n\t\"./sw\": 833,\n\t\"./sw.js\": 833,\n\t\"./ta\": 834,\n\t\"./ta.js\": 834,\n\t\"./te\": 835,\n\t\"./te.js\": 835,\n\t\"./tet\": 836,\n\t\"./tet.js\": 836,\n\t\"./tg\": 837,\n\t\"./tg.js\": 837,\n\t\"./th\": 838,\n\t\"./th.js\": 838,\n\t\"./tk\": 839,\n\t\"./tk.js\": 839,\n\t\"./tl-ph\": 840,\n\t\"./tl-ph.js\": 840,\n\t\"./tlh\": 841,\n\t\"./tlh.js\": 841,\n\t\"./tr\": 842,\n\t\"./tr.js\": 842,\n\t\"./tzl\": 843,\n\t\"./tzl.js\": 843,\n\t\"./tzm\": 844,\n\t\"./tzm-latn\": 845,\n\t\"./tzm-latn.js\": 845,\n\t\"./tzm.js\": 844,\n\t\"./ug-cn\": 846,\n\t\"./ug-cn.js\": 846,\n\t\"./uk\": 847,\n\t\"./uk.js\": 847,\n\t\"./ur\": 848,\n\t\"./ur.js\": 848,\n\t\"./uz\": 849,\n\t\"./uz-latn\": 850,\n\t\"./uz-latn.js\": 850,\n\t\"./uz.js\": 849,\n\t\"./vi\": 851,\n\t\"./vi.js\": 851,\n\t\"./x-pseudo\": 852,\n\t\"./x-pseudo.js\": 852,\n\t\"./yo\": 853,\n\t\"./yo.js\": 853,\n\t\"./zh-cn\": 854,\n\t\"./zh-cn.js\": 854,\n\t\"./zh-hk\": 855,\n\t\"./zh-hk.js\": 855,\n\t\"./zh-mo\": 856,\n\t\"./zh-mo.js\": 856,\n\t\"./zh-tw\": 857,\n\t\"./zh-tw.js\": 857\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1506;","/**\n * A IFFE to ignore warnings of prop-types validation\n * from Material-UI components used with scoped-css-loader.\n *\n * They are invalid and will not appear in prod builds, they are\n * cumbersome for development for now.\n *\n * TODO: investigate if there is another option when there is time.\n * For now it looks like there is not.\n */\n\n/* eslint-disable */\n(function clearMUIDataVWarnings() {\n  const error = console.error.bind(console);\n  const partial = /Warning:.*data-v-/;\n\n  console.error = (message, ...args) => {\n    if (typeof message === 'string' && message.search(partial) !== -1) {\n      return;\n    }\n\n    error(message, ...args);\n  };\n})();\n\n/* eslint-enable */\n","module.exports = \"../fonts/2d36b1a925432bae7f3c53a340868c6e.ttf\";","module.exports = \"../fonts/3ed9575dcc488c3e3a5bd66620bdf5a4.ttf\";"],"sourceRoot":""}