{"version":3,"sources":["webpack:///./src/app/config.js","webpack:///./src/app/shared/components/form/editors/Generic.jsx","webpack:///./src/app/shared/components/overlays/Result/Result.jsx","webpack:///./src/app/explorer/store/actions/index.js","webpack:///./src/app/explorer/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/actions.js","webpack:///./src/app/shared/lib/cron-validator/cron-validator.js","webpack:///./src/app/explorer/SystemExplorerFeatureUtil.js","webpack:///./src/app/users-manager/store/actions/index.js","webpack:///./src/app/entities/actions.js","webpack:///./src/app/session/store/actions/index.js","webpack:///./src/app/shared/store/actions/index.js","webpack:///./src/app/explorer/store/selectors/index.js","webpack:///./src/app/shared/components/tooltip/Tooltip.jsx","webpack:///./src/app/shared/components/form/editors/Custom.jsx","webpack:///./src/app/job-process/store/constants.js","webpack:///./src/app/entities/utils/privileges.js","webpack:///./src/app/shared/components/form/SubmitButton.jsx","webpack:///./src/app/users-manager/components/AvatarCard/AvatarCard.jsx","webpack:///./src/app/shared/components/form/editors/field-level-validations.js","webpack:///./src/app/shared/store/state/index.js","webpack:///./src/app/session/store/selectors/index.js","webpack:///./src/app/executive-dashboard/store/actions/index.js","webpack:///./src/app/shared/api/invocation.js","webpack:///./src/app/users-manager/store/thunks/index.js","webpack:///./src/app/users-manager/groups/store/thunks.js","webpack:///./src/app/license-collection/utils/formatTimePeriod.js","webpack:///./src/app/license-collection/utils/formikFormatter.js","webpack:///./src/app/users-manager/components/SearchableList/SearchableList.jsx","webpack:///./src/app/shared/components/form/parameters/variants.jsx","webpack:///./src/app/job-process/store/selectors.js","webpack:///./src/app/core/components/Ensure/Ensure.jsx","webpack:///./src/app/session/store/state/index.js","webpack:///./src/app/entities/selectors.js","webpack:///./src/app/users-manager/store/mappers/index.js","webpack:///./src/app/license-collection/utils/copyToClipboard.js","webpack:///./src/app/shared/components/layout/NavigationTab/NavigationTab.jsx","webpack:///./src/app/users-manager/store/selectors/index.js","webpack:///./src/app/explorer/components/NavigationTab/NavigationTab.jsx","webpack:///./src/app/shared/api/accounts.js","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSqlStatementsUtil.js","webpack:///./src/app/license-collection/utils/normalizeParameter.jsx","webpack:///./src/app/license-collection/controls/TextField/TextField.jsx","webpack:///./src/app/license-collection/controls/DropdownField/DropdownField.jsx","webpack:///./src/app/license-collection/components/OutputModal/OutputModal.jsx","webpack:///./src/app/shared/api/schedule.js","webpack:///./src/app/explorer/store/mappers/index.js","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/SystemExplorerViewMode.js","webpack:///./src/app/core/store/index.js","webpack:///./src/app/entities/components/Switch.jsx","webpack:///./src/app/shared/components/simple-search-input/simple-search-input.jsx","webpack:///./src/app/shared/api/protocols.js","webpack:///./src/app/job-process/job-parameters.jsx","webpack:///./src/app/shared/components/form/parameters/normalizeParameter.js","webpack:///./src/app/job-process/containers/notifications/notifications.jsx","webpack:///./src/app/shared/api/process.js","webpack:///./src/app/executive-dashboard/store/thunks/index.js","webpack:///./src/app/shared/components/range-date-picker/constants.js","webpack:///./src/app/shared/components/form/parameters/index.jsx","webpack:///./src/app/core/components/Header/Header.jsx","webpack:///./src/app/dashboard/store/state/index.js","webpack:///./src/app/dashboard/store/actions/index.js","webpack:///./src/app/explorer/containers/AddServerCard/AddServerCard.jsx","webpack:///./src/app/explorer/containers/AddDatabaseCard/AddDatabaseCard.jsx","webpack:///./src/app/explorer/containers/ImportCSV/ImportCSV.jsx","webpack:///./src/app/shared/api/delete.js","webpack:///./src/app/entities/mappers.js","webpack:///./src/app/explorer/components/ActionCard/ActionCard.jsx","webpack:///./src/app/explorer/components/CardsLayout/CardsLayout.jsx","webpack:///./src/app/shared/lib/want/index.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/ChangePassword.jsx","webpack:///./src/app/shared/components/overlays/Modal/Modal.jsx","webpack:///./src/app/shared/api/namespace.js","webpack:///./src/app/shared/api/form.js","webpack:///./src/app/entities/components/form-actions/FormEditor.jsx","webpack:///./src/app/executive-dashboard/store/mappers/index.js","webpack:///./src/app/shared/components/center/center.component.jsx","webpack:///./src/app/shared/lib/react-dates/isBeforeDay.js","webpack:///./src/app/shared/components/LightTooltip/LightTooltip.jsx","webpack:///./src/app/shared/components/layout/Overflow/Overflow.jsx","webpack:///./src/app/shared/components/overlays/ModalHeader/ModalHeader.jsx","webpack:///./src/app/shared/components/controls/Checkbox/Checkbox.jsx","webpack:///./src/app/shared/lib/polling/index.js","webpack:///./src/app/explorer/containers/Forms/ServerForm.jsx","webpack:///./src/app/shared/api/datatypes.js","webpack:///./src/app/explorer/containers/Forms/DatabaseForm.jsx","webpack:///./src/app/jobs/actions/delete/DeleteJobModal.jsx","webpack:///./src/app/jobs/containers/Schedule/Schedule.jsx","webpack:///./src/app/entities/components/namespace-actions/NewNamespace.jsx","webpack:///./src/app/entities/components/form-actions/FormModal.jsx","webpack:///./src/app/explorer/containers/Settings/DatabaseSettings.jsx","webpack:///./src/app/license-collection/utils/getOutputText.js","webpack:///./src/app/job-process/store/actions.js","webpack:///./src/app/license-collection/utils/sendToEmail.js","webpack:///./src/app/executive-dashboard/components/ServerCard/ServerCard.jsx","webpack:///./src/app/executive-dashboard/components/ServersTile/ServersTile.jsx","webpack:///./src/app/executive-dashboard/utils/HorizontalStackedBar/HorizontalStackedBar.jsx","webpack:///./src/app/executive-dashboard/components/DatabasesTile/DatabasesTile.jsx","webpack:///./src/app/session/store/effects/be-version/be-version.effect.js","webpack:///./src/app/jobs/components/total-jobs-count/TotalJobsCount.jsx","webpack:///./src/app/shared/api/alias.js","webpack:///./src/app/session/store/reducers/reducer.js","webpack:///./src/app/dashboard/store/tasks.js","webpack:///./src/app/dashboard/store/reducers/reducer.js","webpack:///./src/app/shared/store/reducers/reducer.js","webpack:///./src/app/core/store/reducers/reducer.js","webpack:///./src/app/core/store/actions/index.js","webpack:///./src/app/shared/components/form/parameters/wishes.jsx","webpack:///./src/app/shared/components/form/editors/filters.js","webpack:///./src/app/entities/components/form-actions/utils.js","webpack:///./src/app/shared/api/privileges.js","webpack:///./src/app/explorer/components/DbObjects/Sidebar.jsx","webpack:///./src/app/explorer/components/DbObjects/Viewer.jsx","webpack:///./src/app/explorer/components/StatusLabel/StatusLabel.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/constants.jsx","webpack:///./src/app/job-process/store/tasks.js","webpack:///./src/app/license-collection/components/ListOutput/ListOutput.jsx","webpack:///./src/app/session/store/reducers/index.js","webpack:///./src/app/shared/lib/bind-reducer/bind-reducer.js","webpack:///./src/app/shared/lib/action-creator/action-states.js","webpack:///./src/app/shared/lib/action-creator/action-creator.class.js","webpack:///./src/app/shared/lib/slugify/slugify.js","webpack:///./src/app/shared/lib/create-url/create-url.js","webpack:///./src/app/shared/lib/number-pretty/number-pretty.js","webpack:///./src/app/shared/lib/smart-number/smart-number.js","webpack:///./src/app/shared/lib/capitalize-first-letter/capitalize-first-letter.js","webpack:///./src/app/shared/lib/patterns/email.js","webpack:///./src/app/shared/lib/patterns/phone-number.js","webpack:///./src/app/shared/lib/patterns/url.js","webpack:///./src/app/shared/lib/random-generator/string.js","webpack:///./src/app/shared/lib/random-generator/unique-id.js","webpack:///./src/app/shared/lib/function-placeholder/index.js","webpack:///./src/app/shared/lib/delay/index.js","webpack:///./src/app/shared/lib/react-dates/isInclusivelyAfterDay.js","webpack:///./src/app/shared/lib/redux-utils/actions.utils.js","webpack:///./src/app/shared/lib/redux-utils/reducers.utils.js","webpack:///./src/app/shared/lib/workload/parseData.js","webpack:///./src/app/session/store/effects/index.js","webpack:///./src/app/shared/lib/rest/try-async.js","webpack:///./src/app/shared/lib/rest/rest-client.js","webpack:///./src/app/session/pages/login/login.page.jsx","webpack:///./src/app/session/components/container/container.component.jsx","webpack:///./src/app/session/pages/login/components/form/form.component.jsx","webpack:///./src/app/shared/components/rest-errors/rest-errors.component.jsx","webpack:///./src/app/shared/components/job-item/job-item.component.jsx","webpack:///./src/app/shared/components/workload-graph/workload-graph.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-tooltip/custom-tooltip.component.jsx","webpack:///./src/app/shared/components/workload-graph/components/custom-axis-tick/custom-axis-tick.component.jsx","webpack:///./src/app/shared/components/circle-img/circle-img.component.jsx","webpack:///./src/app/shared/components/number-label/number-label.component.jsx","webpack:///./src/app/shared/components/string-label/string-label.component.jsx","webpack:///./src/app/shared/components/search-input/search-input.component.jsx","webpack:///./src/app/shared/components/dropdown/dropdown.component.jsx","webpack:///./src/app/shared/components/small-input/small-input.component.jsx","webpack:///./src/app/shared/components/single-date-picker/single-date-picker.component.jsx","webpack:///./src/app/shared/components/range-date-picker/range-date-picker.component.jsx","webpack:///./src/app/shared/components/JobResults/JobResults.jsx","webpack:///./src/app/shared/components/switch/Switch.jsx","webpack:///./src/app/shared/components/Table/Table.jsx","webpack:///./src/app/session/pages/logout/logout.page.jsx","webpack:///./src/app/dashboard/root.module.jsx","webpack:///./src/app/shared/components/loaders/Loader/Loader.jsx","webpack:///./src/app/shared/components/loaders/ParameterLoader/ParameterLoader.jsx","webpack:///./src/app/shared/components/layout/Paper/Paper.jsx","webpack:///./src/app/shared/components/layout/Main/Main.jsx","webpack:///./src/app/shared/components/layout/Section/Section.jsx","webpack:///./src/app/shared/components/layout/ScrollableContainer/ScrollableContainer.jsx","webpack:///./src/app/shared/components/layout/Column/Column.jsx","webpack:///./src/app/shared/components/layout/Row/Row.jsx","webpack:///./src/app/dashboard/containers/status/status.container.jsx","webpack:///./src/app/dashboard/containers/status/components/daemon/daemon.component.jsx","webpack:///./src/app/dashboard/containers/status/components/job-status/job-status.component.jsx","webpack:///./src/app/dashboard/containers/search-area/search-area.container.jsx","webpack:///./src/app/dashboard/components/search-results/search-results.component.jsx","webpack:///./src/app/shared/components/controls/Input/Input.jsx","webpack:///./src/app/shared/components/controls/Button/Button.jsx","webpack:///./src/app/shared/components/overlays/ModalFooter/ModalFooter.jsx","webpack:///./src/app/shared/components/overlays/ErrorModal/ErrorModal.jsx","webpack:///./src/app/shared/components/overlays/ConfirmationModal/ConfirmationModal.jsx","webpack:///./src/app/dashboard/store/reducers/index.js","webpack:///./src/app/shared/store/reducers/index.js","webpack:///./src/app/shared/store/effects/index.js","webpack:///./src/app/root.module.jsx","webpack:///./src/app/core/root.layout.jsx","webpack:///./src/app/jobs/root.module.jsx","webpack:///./src/app/jobs/components/job-item/job-item.component.jsx","webpack:///./src/app/jobs/components/job-status/job-status.component.jsx","webpack:///./src/app/jobs/containers/filters/filters.container.jsx","webpack:///./src/app/shared/store/selectors/connections.js","webpack:///./src/app/jobs/containers/jobs-invocations/jobs-invocations.container.jsx","webpack:///./src/app/shared/lib/deep-copy/deep-copy.js","webpack:///./src/app/entities/root.module.jsx","webpack:///./src/app/users-manager/root.jsx","webpack:///./src/app/users-manager/users/root.jsx","webpack:///./src/app/users-manager/groups/root.jsx","webpack:///./src/app/explorer/root.jsx","webpack:///./src/app/explorer/treeview/root.jsx","webpack:///./src/app/explorer/components/DbObjects/DbObjects.jsx","webpack:///./src/app/core/containers/sidebar/sidebar.container.jsx","webpack:///./src/app/core/containers/sidebar/components/favorites/favorites.component.jsx","webpack:///./src/app/core/containers/sidebar/components/navigation/navigation.component.jsx","webpack:///./src/app/core/containers/sidebar/components/notification/notification.component.jsx","webpack:///./src/app/core/containers/sidebar/components/user-menu/user-menu.component.jsx","webpack:///./src/app/core/containers/sidebar/components/compile/compile.component.jsx","webpack:///./src/app/job-process/root.module.jsx","webpack:///./src/app/session/store/actions/session.action.js","webpack:///./src/app/session/store/effects/check-authorization/check-authorization.effect.js","webpack:///./src/app/constants.js","webpack:///./src/app/session/store/effects/login/login.effect.js","webpack:///./src/app/session/store/effects/logout/logout.effect.js","webpack:///./src/assets/images/login_graphic.svg","webpack:///./src/assets/images/vendita_logo_blue.svg","webpack:///./src/assets/images/mas_logo_blue.svg","webpack:///./src/app/shared/components/range-date-picker/range-date-range-picker.container.jsx","webpack:///./src/app/shared/store/actions/jobs.action.js","webpack:///./src/app/shared/store/actions/process.action.js","webpack:///./src/app/shared/store/actions/global-filters.action.js","webpack:///./src/app/dashboard/store/actions/filter-status.action.js","webpack:///./src/app/shared/api/daemon.js","webpack:///./src/app/dashboard/store/selectors/index.js","webpack:///./src/app/dashboard/containers/servers-list/ServersList.jsx","webpack:///./src/app/explorer/containers/ImportCSV/downloadTemplate.js","webpack:///./src/app/shared/store/effects/jobs/jobs.effect.js","webpack:///./src/app/shared/store/effects/connections/connections.effect.js","webpack:///./src/app/shared/store/effects/search-jobs/search-jobs.effect.js","webpack:///./src/app/shared/store/effects/search-processes/search-processes.effect.js","webpack:///./src/app/shared/store/effects/global-filters/global-filters.effect.js","webpack:///./src/app/users-manager/store/reducers/index.js","webpack:///./src/app/users-manager/groups/store/reducer.js","webpack:///./src/app/explorer/store/reducers/index.js","webpack:///./src/app/executive-dashboard/store/reducers/index.js","webpack:///./src/app/entities/reducer.js","webpack:///./src/app/dashboard/store/reducers/daemon.js","webpack:///./src/app/job-process/store/reducer.js","webpack:///./src/app/core/store/middlewares.js","webpack:///./src/app/core/store/reducers/index.js","webpack:///./src/app/core/store/actions/notification.action.js","webpack:///./src/app/jobs/components/job-list/job-list.component.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ScheduleModal/ScheduleModal.jsx","webpack:///./src/app/jobs/containers/Schedule/components/ViewTabs/ViewTabs.jsx","webpack:///./src/app/jobs/containers/Schedule/components/Documentation/Documentation.jsx","webpack:///./src/app/jobs/containers/Schedule/containers/ScheduleForm/ScheduleForm.jsx","webpack:///./src/app/shared/components/form/editors/formatters.js","webpack:///./src/app/shared/components/form/parameters/extractDefault.js","webpack:///./src/app/job-process/components/notification-groups/notification-groups.jsx","webpack:///./src/app/job-process/components/notification-users/notification-users.jsx","webpack:///./src/app/job-process/components/notification-events/notification-events.jsx","webpack:///./src/app/job-process/components/notification-list/notification-list.jsx","webpack:///./src/app/entities/components/Entity.jsx","webpack:///./src/app/entities/containers/SelectedEntity.jsx","webpack:///./src/app/entities/components/ActionsNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/EditNamespace.jsx","webpack:///./src/app/entities/components/namespace-actions/DeleteNamespace.jsx","webpack:///./src/app/entities/components/ActionsConstant.jsx","webpack:///./src/app/shared/api/constant.js","webpack:///./src/app/entities/components/ActionsProcess.jsx","webpack:///./src/app/entities/components/process-actions/EditProcessModal.jsx","webpack:///./src/app/entities/components/process-actions/ProcessEditor.jsx","webpack:///./src/app/entities/components/ActionsForm.jsx","webpack:///./src/app/shared/components/form/SubmitButtonNoDirty.jsx","webpack:///./src/app/entities/components/form-actions/FormParameters.jsx","webpack:///./src/app/entities/components/ActionsRoot.jsx","webpack:///./src/app/entities/components/ActionsPrototype.jsx","webpack:///./src/app/entities/components/ActionsSchedule.jsx","webpack:///./src/app/entities/components/ActionsCommon.jsx","webpack:///./src/app/entities/components/common-actions/DeleteEntity.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesModal.jsx","webpack:///./src/app/entities/components/common-actions/privileges/PrivilegesEditor.jsx","webpack:///./src/app/users-manager/components/HeaderPageSwitch/HeaderPageSwitch.jsx","webpack:///./src/app/users-manager/users/containers/UserLoader.jsx","webpack:///./src/app/users-manager/users/pages/UserView/UserView.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/Privileges.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/UserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserDetails.jsx","webpack:///./src/app/users-manager/users/pages/UserView/components/UserDatesBox.jsx","webpack:///./src/app/users-manager/users/pages/UserView/containers/EditUserInfo.jsx","webpack:///./src/app/users-manager/components/UserCard/UserCard.jsx","webpack:///./src/app/users-manager/users/pages/NoUsersSelected.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/CreateNewUser.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/NewUserGroups.jsx","webpack:///./src/app/users-manager/users/pages/CreateNewUser/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/components/GroupCard/GroupCard.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/GroupView.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/Privileges.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/GroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditGroupUsers.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/GroupView/containers/EditSubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/CreateNewGroup.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/SubGroups.jsx","webpack:///./src/app/users-manager/groups/pages/CreateNewGroup/components/GroupsSelection.jsx","webpack:///./src/app/users-manager/groups/pages/NoGroupSelected.jsx","webpack:///./src/app/explorer/treeview/layers/Dbms/Dbms.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/ServerList.jsx","webpack:///./src/app/explorer/treeview/layers/ServerList/containers/Server/Server.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/DatabaseList.jsx","webpack:///./src/app/explorer/treeview/layers/DatabaseList/containers/Database/Database.jsx","webpack:///./src/app/explorer/containers/Breadcrumbs/Breadcrumbs.jsx","webpack:///./src/app/explorer/components/ContentSwitch/ContentSwitch.jsx","webpack:///./src/app/explorer/containers/AllDbms/AllDbms.jsx","webpack:///./src/app/explorer/containers/AllServers/AllServers.jsx","webpack:///./src/app/explorer/containers/Settings/ServerSettings.jsx","webpack:///./src/app/explorer/containers/AllDatabases/AllDatabases.jsx","webpack:///./src/app/explorer/containers/Workload/Workload.jsx","webpack:///./src/app/explorer/containers/License/License.jsx","webpack:///./src/app/explorer/containers/License/Report/Report.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesUsage/FeaturesUsage.jsx","webpack:///./src/app/explorer/components/LicenseReporting/UnusedFeatures/UnusedFeatures.jsx","webpack:///./src/app/explorer/components/LicenseReporting/FeaturesTable/FeaturesTable.jsx","webpack:///./src/app/explorer/containers/Storage/Storage.jsx","webpack:///./src/app/explorer/containers/Objects/Objects.jsx","webpack:///./src/app/explorer/containers/Sessions/Sessions.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/CommonSessionsTable.jsx","webpack:///./src/app/explorer/containers/Sessions/tables/MssqlSessionsTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/TopSQLStatements.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/charts/ElapsedTimeChart.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/OracleTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/PostgresTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MysqlTopSQLTable.jsx","webpack:///./src/app/explorer/containers/TopSQLStatements/tables/MssqlTopSQLTable.jsx","webpack:///./src/app/explorer/components/ToggleSystemExplorerView/ToggleSystemExplorerView.jsx","webpack:///./src/app/explorer/components/TableView/SystemExplorerTable.jsx","webpack:///./src/app/shared/api/compile.js","webpack:///./src/assets/images/mas_logo_white.svg","webpack:///./src/assets/images/vendita_logo_white.svg","webpack:///./src/app/job-process/job-view.jsx","webpack:///./src/app/job-process/job-form.jsx","webpack:///./src/app/job-process/containers/output/output.jsx","webpack:///./src/app/job-process/components/ListOutput/ListOutput.jsx","webpack:///./src/app/job-process/components/JobStatus/JobStatus.jsx","webpack:///./src/app/executive-dashboard/ExecutiveDashboard.jsx","webpack:///./src/app/executive-dashboard/components/RefreshDashboard/RefreshDashboard.jsx","webpack:///./src/app/executive-dashboard/components/ToggleDashboard/ToggleDashboard.jsx","webpack:///./src/app/executive-dashboard/components/PhysicalDashboard/PhysicalDashboard.jsx","webpack:///./src/app/executive-dashboard/containers/SearchSection/SearchSection.jsx","webpack:///./src/assets/images/server_core.svg","webpack:///./src/app/executive-dashboard/components/SwitchContent/SwitchContent.jsx","webpack:///./src/app/executive-dashboard/components/EmptyContent/EmptyContent.jsx","webpack:///./src/app/executive-dashboard/containers/Dashboard/Dashboard.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/OptionsTile.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsList/OptionsList.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionItem/OptionItem.jsx","webpack:///./src/app/executive-dashboard/components/OptionsTile/components/OptionsChart/OptionsChart.jsx","webpack:///./src/app/executive-dashboard/containers/ServerView/ServerView.jsx","webpack:///./src/app/executive-dashboard/components/UsedOptions/UsedOptions.jsx","webpack:///./src/app/executive-dashboard/components/VirtualDashboard/VirtualDashboard.jsx","webpack:///./src/app/executive-dashboard/components/NoData/NoData.jsx","webpack:///./src/app/executive-dashboard/containers/ToggleSelection/ToggleSelection.jsx","webpack:///./src/app/license-collection/LicenseCollection.jsx","webpack:///./src/app/license-collection/components/Navigation/Navigation.jsx","webpack:///./src/app/license-collection/Pages/Hardware/Hardware.jsx","webpack:///./src/app/license-collection/utils/extractDefault.js","webpack:///./src/app/license-collection/Pages/Software/Software.jsx","webpack:///./src/app/license-collection/Pages/VMware/VMware.jsx","webpack:///./src/app/license-collection/Pages/Packaging/Packaging.jsx","webpack:///./src/app/shared/components/overlays/SuccessModal/SuccessModal.jsx","webpack:///./src/app/license-collection/utils/downloadFile.js","webpack:///./src/app/license-collection/Pages/PreSoftware/PreSoftware.jsx","webpack:///./src/i18n/index.js","webpack:///./src/i18n/en/index.js","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/app/scoped-css-mui-compatibility.js","webpack:///./src/assets/fonts/Lato-Regular.ttf","webpack:///./src/assets/fonts/OpenSans-Regular.ttf"],"names":["CONSTANTS","defaultConstants","Text","forwardRef","ref","options","validate","defaultValue","value","required","reactToChange","props","useState","shouldValidate","setShouldValidate","validation","useMemo","check","useField","touched","name","field","meta","helpers","formikCtx","useFormikContext","useEffect","setValue","setTouched","multiline","isPopup","undefined","setError","length","selected","find","o","description","disableClearable","id","getOptionLabel","option","label","getOptionDisabled","disabled","onChange","e","renderInput","params","type","error","helperText","Email","validations","merge","email","PhoneNumber","phone","Integer","required_not_null","Password","BOOL_OPTIONS","BooleanSelect","Date","moment","format","utc","fullWidth","utils","MomentUtils","disableToolbar","inputVariant","KeyboardButtonProps","date","Time","ampm","mask","Select","isNamespace","getOptionSelected","desription","icons_map","success","mdiCheckDecagram","fail","mdiAlertDecagram","Result","children","className","classnames","fontSize","d","propTypes","oneOf","node","ResultText","compact","bool","ResultMessages","messages","map","msg","index","key","text","split","Messages","LOAD_ALL_ACCOUNTS","CHANGE_STATE","LOAD_ALL_LICENSES","LOAD_TOP_SQL_STATEMENTS","LICENSE_FULL_REPORT","PROVIDE_SERVERS_USAGE","LOAD_STORAGE_POINTS","SET_STORAGE_NS","LOAD_STORAGE_DETAILS","LOAD_OBJECT_DETAILS","SET_SELECTED_OBJECT","LOAD_SESSIONS","PROVIDE_DB_LAST_BACKUP","PROVIDE_DB_STATUS","UPDATE_DB_STATUS","LOAD_PROTOCOLS","LOAD_COLLECTION_PROCESS","EXECUTE_COLLECTION_PROCESS","loadAllAccountsThunk","payload","dispatch","getState","creators","loading","RestClient","get","BASE","ENDPOINTS","ACCOUNTS","page_size","response","data","protocols","explorer","from","provideServersUsageThunk","provideDBLastBackupThunks","provideDBStatusThunks","loadProtocolsThunk","PROTOCOLS","changeStateThunk","newState","action","loadAllLicensesThunk","JOBS","loadTopSQLStatementsThunk","postInvocation","creationResult","invocations","invocationUuid","uuid","statusChecksCount","isFinished","sleep","fetchInvocation","bind","invocationStatus","invocation","status","fetchInvocationOutput","invocationOutput","result","outputs","timeout","ms","Promise","resolve","setTimeout","fn","args","getLicenseReportThunk","fullPath","dbconn","Array","isArray","reportData","loadSessionsThunk","filters","SESSIONS","sort","loadSessionsByProcessThunk","protocol","dbmsProperty","TopSqlStatementsUtil","getDbmsPropertyName","parameters","oformat","process","SystemExplorerFeatureUtil","getSessionsEndpoint","timestamp","resultTxt","statementsJson","sessionsData","JSON","parse","sessionsLoaderResolver","shouldLoadSessionsByProcess","enableSessionsLoadingFlag","disableSessionsLoadingFlag","loadStorageDetailsThunk","STORAGE_DF","setStorageItemThunk","ns","loadStoragePointsThunk","STORAGE_TS","loadObjectsThunk","objectApis","path","allSettled","api","dbms","allData","res","loadObjectsByProcessThunk","getObjectsEndpoint","objectsJSON","invocationOutputPoller","output","parseInvocationResult","item","objectsLoaderResolver","shouldLoadObjectsByProcess","setSelectedObjectThunk","servers","structured","slice","usageResult","server","loadUsagePerDb","filter","push","address","usage","highLoadCount","a","b","parseFloat","Oracle","r","Mysql","Pgsql","Mssql","databases","db","special","database","dbLastBackup","loadDBLastBackup","backup","dbStatus","loadDBStatus","message","dbName","refreshServerDbsStatusThunk","retrieveDBStatus","shell","DB_STATUS","toString","toLowerCase","parseInt","refreshDBStatusThunk","selectedDBMS","sv","loadProcessDetailsThunk","PROCESSES","details","processes","executeCollectionProcessThunk","HOST_CPU","s","DB_LAST_BACKUP","isValid","LOAD_ALL_GROUPS","LOAD_GROUP","DELETE_GROUP","GRANT_PRIVILEGE","REVOKE_PRIVILEGE","ADD_USERS_TO_GROUP","REMOVE_USERS_FROM_GROUP","REMOVE_GROUPS_FROM_GROUP","PATCH_SELECTED_GROUP","CREATE_GROUP","MONTH_LIST","WEEKDAYS_LIST","CronValidator","minutes","isValidNumberValue","cleanValue","hours","days","month","isValidAlternativeValue","weekDay","time","maxVal","zeroAllowed","includes","every","part","isValidNumberPart","rangeNumbersArr","el","isValidNumberRange","timeNumber","trim","dataArray","element","allowedValues","isValidAlternativePart","rangeValues","isValidAlternativeRange","indexOf","values","FORMAT_MSG","MINUTES","HOURS","DAYS","MONTH","DAY_OF_WEEK","EVERY_HOUR_WARNING","ALLOWED_MINUTES_OPTIONS","DbmsType","ORACLE","POSTGRES","MYSQL","MSSQL","OTHER","DbmsFeature","WORKLOAD","TOP_SQL","OBJECTS","STORAGE","LICENSE_REPORTING","FEATURE_BY_TYPE_MAP","LOAD_SESSIONS_BY_PROCESS","LOAD_OBJECTS_BY_PROCESS","OBJECTS_SIDEBAR_DISABLED","SESSIONS_ENDPOINT_MAP","OBJECTS_ENDPOINT_MAP","DBMS_LIST_ORDER","OBJECTS_DATA_MAPPERS","OBJECT_NAME","CREATED","create_date","OBJECT_ID","object_id","LAST_DDL_TIME","modify_date","dbmsType","feature","isFeatureAllowed","fullName","startsWith","startIdx","lastIndexOf","substr","LOAD_ALL_USERS","SELECT_USER","LOAD_USER","ADD_USER_TO_GROUPS","REMOVE_USER_FROM_GROUPS","DEACTIVATE_USER","CREATE_USER","fetchEntities","promises","ENTITY_TYPES_FETCH","query","url","concat","encodeURIComponent","promise","entityType","fetchEntity","eType","definition","desc","console","warn","selectEntity","entity","clearSelectedEntity","setFilterType","setFilterSearch","openModal","actions","sessionActions","jobsActions","processActions","globalFiltersActions","pipe","fns","arg","reduce","prev","filterBy","selector","equalityFn","retrieveFilteredAccounts","state","accounts","nodes","stateValue","currentValue","Object","keys","currentServer","retrieveServerEntry","structure","entry","retrieveDatabaseEntry","getStatePath","getStructured","getSessions","sessions","getSessionsFlags","flags","getTopSqlStatements","topSqlStatements","getTopSqlStatementsFlags","getStoragePointsLoadingFlag","storage","loadingPoints","getStorageDetailsLoadingFlag","loadingDetails","getSelectedStorage","getStoredEntries","storedEntries","getSelectedObject","objects","selectedObject","getSelectedOwner","selectedOwner","getObjectsEntries","getObjectsLoadingFlag","getFullPath","createSelector","pathArr","haveStorageData","selectedStorage","getFormattedStorage","isLoading","points","_","point","Used_MB","Total_MB","Tablespace","freePerc","freeGB","Free_MB","totalGB","usedGB","haveObjectsData","selectedObjects","getStorageDetailsData","list","selectedNS","tablespace","files","TABLESPACE_NAME","getStructuredObjects","tree","acc","forEach","object","OWNER","owner","getInvalidObjects","invalidObjects","included","findIndex","STATUS","getSelectedObjectData","isObject","getObjectsDataByProcess","objectsSelectorResolver","getSortedSessions","sortFunction","order","sortKey","getTime","selectTopSqlStatements","statementsTxt","getBackup","backups","getDBStatus","statuses","getDBStatusInfo","info","dbMessage","STATUS_TYPES","down","up","notConnected","notFound","getDBMSStatus","allStatuses","getDBMSStatusInfo","dbmsStatus","getServerStatus","getServerStatusInfo","serverStatus","getEntityPendingStatus","en","LightTooltip","withStyles","tooltip","color","backgroundColor","letterSpacing","lineHeight","fontFamily","Tooltip","LimitlessTooltip","maxWidth","RSAKey","FQName","recieved","fqname","namespace","parts","initial","join","last","style","marginBottom","NamespaceSelect","QualifiedName","masName","AccountSelect","showUrls","setShowUrls","boxName","showToggle","useCallback","target","checked","inlineLoader","ADDITIONAL_ACCOUNT_FILTERS","filterFn","deepCopy","account","formatAccount","Boolean","size","PLATFORMS","tester","PROCESS_TYPES","PlatformSelect","platformValue","platform","processValue","reverse","test","ProcessTypeSelect","typeValue","ProcessSelect","p","OPTIONS","appearance","is_executable","customVal","namespaces","FormPrototypeSelect","prototype","ModeSelect","mode","modes","enumerations","variadicListReducer","produce","draft","deflt","pop","useVariadicList","useReducer","replvars","Variadic","displayDeftlDesc","selectedProcess","Header","Title","Content","dataType","Fragment","VariadicInstance","defltDesc","types","display","alignItems","justifyContent","onClick","name_base","parsedDeflt","replace","firstCharLetter","Multiline","open","setOpen","InputProps","startAdornment","title","cursor","mdiArrowExpand","width","height","variant","Footer","Right","Replvalues","valuesNr","replvaluesParams","i","replvalues","repl","Uuid","InvocationStatus","NEW","ALL","NOT_FETCHED","ABORTED","SCHEDULED","SUCCEEDED","FAILED","EXECUTING","DELAYED","KILLED","AllowOutputFor","AllowGeneralEditingFor","CannotShowStatusFor","FAILURES","SUCESSES","WARNINGS","hasWritePrivileges","privileges","effective","hasOnlyReadPrivilege","isOnlySelectGroup","userDetails","toJS","member_of","isAdmin","SubmitButton","confirmation","submitForm","isSubmitting","isValidating","dirty","modalActions","close","log","minWidth","maxHeight","icon","scrollable","BodyText","Left","fontStyle","fontWeight","marginTop","AvatarCard","avatar","onSelect","focusable","onFocus","event","stopPropagation","tabIndex","data-qa","alt","src","fallback","containEvent","placement","mdiInformationOutline","preventDefault","shape","string","func","mergeValidations","callbacks","provided","checkRequired","Yup","nullable","checkRequiredNotNullable","checkEmail","validateSync","checkPhoneNumber","matches","excludeEmptyString","checkUnsignedInt","checkName","checkFirstLetter","checkUuid","noop","unsigned_int","unsigned_float","signed_float","localState","shared","jobsSelector","connectionsSelector","jobsSearchedSelector","processesSearchedSelector","globalFiltersSelector","getCurrentUserName","session","getCurrentUserDetails","PROVIDE_EXECUTIVE_DASHBOARD","PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD","SELECT_ALL","DESELECT_ALL","TOGGLE_SERVER","body","post","requestInvocation","pollerFinished","succeeded","this","resultJsonString","loadAllUsersThunk","USERS","loadUserThunk","grantPrivilegeThunk","user","patch","revokePrivilegeThunk","addUserToGroupsThunk","groups","allUsers","errorMsg","removeUserFromGroupsThunk","deactivateUserThunk","createUserThunk","username","password","refreshed","loadAllGroupsThunk","GROUPS","loadGroupThunk","createGroupThunk","groupname","group","removeUsersFromGroupThunk","removeSubGroupsThunk","addUsersToGroupThunk","users","all","removeGroupThunk","delete","DAY","formatTimePeriod","timeMillis","millisLeft","seconds","Math","floor","getInitialValues","initialValues","parameter","getValidationSchema","validationSchema","is_required","formatParameters","SearchableList","items","visibleScroll","scrolled","setScrolled","onWheel","currentTarget","scrollTop","scroller","setQuery","filtered","scrollBy","top","deltaY","left","deltaX","array","defaultProps","extractParameter","others","editor","additional","field_name","TextParameter","passable","PasswordParameter","PhoneNumberParameter","BooleanParameter","IntegerParameter","EmailParameter","ProcessParameter","AccountParameter","VariadicParameter","ReplvaluesParameter","FQNameParameter","RSAKeyParameter","MultilineParameter","UuidParameter","getQuery","invocation_viewer","getInvocation","getInvocationStatus","Ensure","connect","entitySelectors","request","Ensurer","fresh","Loading","ParameterLoader","Loader","authorizationSelector","currentUserSelector","loginSelector","beVersionSelector","beLicenceSelector","beHealthSelector","ENTITY_TYPES","dataEnclosure","ROOT_ENTITY","getBreadcrumbs","entities","breadcrumbs","collectData","namespacesWithMeta","collection","aliases","alias","alias_type","aliasedEntity","dataItem","ownNamespace","selectors","def","fetch_status","namespaceWithMetaSelector","dataNamespaces","getFilteredEntities","accumulator","getEntitiesAsHashMap","filteredEntities","search","domainArray","paths","findEntity","notPersisted","getEntities","entitiesMap","roots","entityName","names","isSelected","columns","breadcrumb","level","rows","bucket","entityLevel","getSelectedEntity","namespaceChildrenListSelector","selectedEntity","mapUsersData","mapLoadedUser","mapSortInsensitive","localeCompare","copyTextToClipboard","textToCopy","makeCopyToClipboard","copyToClipboard","getOutputText","navigator","permissions","then","clipboard","writeText","legacyMethod","textArea","document","createElement","appendChild","classList","add","focus","select","execCommand","removeChild","NavigationTab","active","tabs","indicatorColor","textColor","tab","React","PureComponent","getGroupDescription","allGroups","groupDetails","isOracle","isAllowedProtocol","isSessionsAllowed","isObjectsAllowed","postAccount","patchAccount","deleteAccount","getConnection","patchConnection","postFile","file","UPLOAD_ACCOUNTS","ALLOWED_DBMS","ALLOWED_FOR_CHARTS","PROCESS_ENDPOINT_MAP","DBMS_PROPERTY_NAME_MAP","supportedDataTypes","dataTypes","prototypes","position","Number","MAX_SAFE_INTEGER","data_type","substring","is_supported","extractDefault","getLabel","getIcon","labels","icons","target_working_dir","target_shell","repo_shell","repo_working_dir","form","vsphere_account","vcenterservername","partitioning_methods","mdiFolderHome","mdiLanConnect","mdiSourceRepository","mdiHexagonMultipleOutline","mdiCubeOutline","TextField","placeholder","endAdornment","mdiHelpCircleOutline","filterDbmsByShell","formValues","shellAccount","dbmsAccount","ADDITIONAL_OPTIONS_FILTERS","DropdownField","datatypes","rawAccounts","forms","currentFormValues","datatype","additionalFilter","opt","meta2","readOnly","toggle","onSendByEmail","processName","sendToEmail","OutputModal","content","interval","modalDetails","setMessage","sendToEmailWarningOpen","setSendToEmailWarningOpen","setInterval","clearInterval","errors","minHeight","postSchedule","getSchedule","patchSchedule","mapAccountsTree","splitIntoRootsByProtocol","root","splitIntoRootsByAddress","splitIntoRootsByDatabase","serversMap","existingEntry","databaseMap","mapAccountsNewStructure","raw","protocolsArr","dbServer","dbmsServerEntry","otherIndex","splice","mapProtocols","is_abstract","special_required","mapUpdateDBStatus","existingDb","mapLicenseReport","currentItem","DETECTED_USAGES","USED","NAME","_mapUsedLicense","UNUSED","FEATURES","license","USAGES","VERSION","LAST_USE","LAST_USAGE_DATE","FIRST_USE","FIRST_USAGE_DATE","SystemExplorerViewMode","TILES","TABLE","saga","createSagaMiddleware","persistConfig","storageSession","whitelist","configStore","appReducer","persistReducer","combineReducers","core","sessionReducer","dashboard","dashboardReducer","sharedReducer","usersManager","usersManagerReducer","groupsReducer","createReducer","explorerReducer","executiveDashboard","executiveDashboardReducer","daemon","effects","sessionEffects","sharedEffects","store","createStore","routing","window","location","reload","composeWithDevTools","applyMiddleware","thunk","effect","run","Context","createContext","Switch","Provider","Case","useContext","SimpleSearchInput","fetchProtocols","ProcessParameters","editable","allValues","xs","normalize","chunk","spacing","normalized","space_begone","space_summon","param","defaults","defineEditor","maybeDisabled","parseProtocols","metaEditor","proto","sortBy","Notifications","getEventTypeIcons","jobStart","jobCompletion","abnormalEvent","notice","fullLog","toggleApplyButton","setState","isEditing","checkIfAllUsersSelectedCurrentGroup","selectedGroup","getSelectedGroup","usersData","onSelectGroup","groupsData","onSelectUser","setFlagGroupsIfContainSelectedUser","onSelectUserAction","shouldClear","displayIcons","onSelectEventType","recievedData","events","areUsersSelected","isClearActionAvailable","isGroupSelected","eventTypeIcons","onApply","mappedState","getProcess","patchProcess","loadExecutiveDashboardThunk","EXECUTIVE_DASHBOARD","deselectAllThunk","selectAllThunk","rawEntries","toggleServerThunk","allServers","selectedServers","svIndex","nrCores","loadVirtualExecutiveDashboardThunk","VIRTUAL_EXECUTIVE_DASHBOARD","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","NAV_POSITION_TOP","ANCHOR_LEFT","WEEKDAYS","MODIFIER_KEY_NAMES","Set","RepeatableParameter","Parameter","is_repeatable","stretchContent","PropTypes","filterStatusSelector","filterStatusActions","checkDeamonStatus","checkDaemon","AddServerCard","trigger","AddNewServerContainer","AddNewServer","reloadAccounts","ModalContext","formRef","useRef","resp","mdiDns","formikRef","handleSubmission","isNew","AddDatabaseCard","AddNewDatabaseContainer","AddNewDatabase","fetchDataTypes","pr","mr","data_types","mdiDatabase","ImportCSV","ImportCSVContainer","ImportCSVFile","selectedFile","setSelectedFile","setResult","fileName","htmlFor","accept","downloadTemplate","FormData","append","catch","deleteEntity","deleteInvocation","mapScheduledNames","allScheduled","nameArr","ActionCard","settings","addOnly","readOnlyOptions","lastBackup","statusInfo","addable","mdiContentSave","NEW_CUSTOMER_POC_ENABLED","role","capitalizeFirstLetter","fillable","percentage","CardsLayout","want","Unresolved","keygen","settler","wantComponent","Picked","ChangePassword","useLinkTrigger","done","confirm","onSubmit","setSubmitting","innerRef","handleSubmit","ChangePasswordContainer","selectedUser","Modal","providedId","aria","onClose","disableBackdropClick","oneOfType","ModalHeader","getNamespace","patchNamespace","postNamespace","postForm","createForm","updateForm","pointers","instances","instance","fields","PackedContext","FormEditor","initialPacked","groupForm","cloneDeep","split_name","packed","contextValue","validateOnChange","form_name","protoName","extracted","extractFieldInfo","exclusions","filteredExtractions","val","packedCopy","set","unpacked","ungroupForm","v","rename","version","request_args","unshift","key_struct","entries","matched","exec","lower","mapAllServers","groupServers","entryInfo","srvname","model","sid","collDate","Ncore","totalDBs","eelic_count","selic_count","sids","installedOptions","aa_count","ac_count","as_count","dv_count","mt_count","adg_count","rac_count","olap_count","part_count","in_mem_db_count","rac_one_node_count","real_app_test_count","totalInstalledOptions","mapVirtualServers","vmname","vmguesthostname","vmguestos","vmipaddress","hosts_nr","cpu","cpucores","allSids","o1","o2","diff","CenterComponent","isRequired","isBeforeDay","isMoment","aYear","year","aMonth","bYear","bMonth","isSameYear","Overflow","component","nodeRef","scrollableX","setScrollableX","scrollableY","setScrollableY","scrolledX","setScrolledX","scrolledY","setScrolledY","Tag","onScroll","scrollLeft","current","box","clientWidth","clientHeight","scrollHeight","scrollWidth","closeable","providedAria","changedForm","context","fieldChanged","changed","Checkbox","rest","control","checkedIcon","task","duration","running","runTask","start","stop","ServerForm","editing","submission","setSubmission","passwordEditable","setPasswordEditable","showRSA","setShowRSA","handleAccountCreation","getCreateAccountHandler","allowedProtocols","availablePorts","default_port","host","port","server_password","user_key","confirm_server_password","rsa_key","loadNewAccountHandler","validateOnBlur","validateOnMount","formik","setFieldValue","PasswordOrRSA","allowed","onInput","request_body","server_user","DATATYPES","DatabaseForm","mapAccountValues","confirm_password","selectedProtocol","allowRSA","allow_rsa_key","withDatabase","withMode","padded","handler","ConnectedDeleteJobModal","globalFilters","getJobs","sharedActions","dispatchLoading","DeleteJobModal","terminator","startDate","unix","endDate","end","asDays","date_invoke","period","getQSP","mdiTrashCan","Schedule","setFilledValues","filledValues","selectedOption","setSelectedOption","canSelectProcess","setCanSelectProcess","onClickHandler","btnLabel","isScheduled","schedule","ConnectedNewNamespace","NewNamespace","isDisabled","classes","handleSubmitNew","ConnectedFormModal","refresh","FormModal","mdiClipboardCheck","DatabaseSettings","editDbTrigger","deleteDbTrigger","deleteDbOpen","setDeleteDbOpen","deleteDbErrorOpen","setDeleteDbErrorOpen","deleteDbModalActions","deleteDbErrorModalActions","mdiSettings","mdiDelete","EditDatabaseContainer","EditDatabase","row","processQuery","updateInvocation","subject","href","tooltipTitle","ServerCard","toggleSelectedCallback","mdiCubeScan","mdiMemory","Cores","mdiCalendarBlank","colors","1","2","4","6","8","16","24","ServersTile","isSingle","total","cores","count","padding","image","number","showTextIn","fontColor","HorizontalBar","listBars","prevProps","prevState","isEqual","getListBarWithOtherParameters","widthTotal","bar","calcWidthTotal","barWidth","assign","evt","random","g","showTextInsteadValue","showTextWithValue","float","showValueIn","fill","randomColor","x","y","dy","textAlign","getListTextBar","showTextUp","showValueUp","renderLabel","renderBars","showTextDown","showValueDown","Component","DatabasesTile","dbs","getBeVersion","getBeLicence","getBeHeath","BeLicenceEffect","BeHealthEffect","BeVersionEffect","BE_VERSION","put","dispatchSuccess","dispatchFail","BE_LICENCE","BE_HEALTH","getBeHealth","takeEvery","getLoadingAction","TotalJobsCount","jobs","job","boxShadow","borderRadius","getAlias","patchAlias","postAlias","initialState","login","authorization","actionStates","LOADING","currentUser","beVersion","reducerActions","checkAuthorization","setIn","getSuccessAction","fromJS","SUCCESS","getFailAction","FAIL","Error","daemonPoller","withPolling","filterStatus","setFilterStatus","getEventAction","sessionGlobalFilters","subtract","startOf","localStorage","getItem","page_count","total_count","fetching","callFailed","reason","connections","searchResults","setGlobalFilters","nextState","setItem","stringify","logout","removeItem","getConnections","searchJobs","searchProcesses","notifications","addNotifications","removeNotification","notificationIndex","removeIn","notificationActions","WantParameter","boolean","variadic_parameter","filterShellByPlatform","shellFieldName","PLATFORM_VALUE_TO_TYPE","PostgreSQL","MySQL","platformTree","platformAddresses","hasOwnProperty","maxPosition","max","virtual","currentGroup","upper","nextGroup","iteration_limit","instanceCount","f","grouped","subvalues","dropRight","getPrivileges","isAlias","cls","setPrivileges","granted","role_type","privilege","enitity_name","VerticalUsageBar","viewBox","rx","ry","SidebarStorageItem","StorageSidebar","selectedItem","mdiFileTableBox","iconMapper","triggers","mdiAlertOutline","tables","mdiTable","indexes","mdiTableColumnWidth","procedures","mdiAlphaPBox","packages","mdiInbox","packageBodies","mdiInboxFull","objectsSidebarMapper","invalidChildren","mdiFileTree","isObjectSelected","isInvalid","invalid","ObjectsSidebar","KPIDisplay","suffix","colorFormatting","digits","valueString","toLocaleString","minimumFractionDigits","maximumFractionDigits","NoDataComponent","mdiHelpRhombusOutline","StorageDetailsList","PCT_USED","FILE_NAME","SIZE_MB","MAXSIZE_MB","filePath","extension","chartType","loader","toFixed","is3D","rootProps","StorageViewer","ObjectsViewer","sidebarDisabled","objectsDataMapper","getObjectsDataMapper","mdiArrangeBringToFront","mdiFlashCircle","STATUS_LABEL_MAP","StatusLabel","navigationItems","to","qaClass","mdiClipboardPlayMultipleOutline","mdiShieldCheckOutline","invocationPoller","ListOutput","reducer","bindReducer","ActionCreatorHandler","slugify","createUrl","paramsUrl","numberPretty","formatNumber","pow","decimals","smartNumber","charAt","toUpperCase","emailPattern","phoneNumberPattern","urlPattern","randomStringGenerator","possible","generateUniqueId","btoa","valueOf","emptyFunc","delay","timer","isInclusivelyAfterDay","STATES","stateKey","unchanged","reducers","reducerInitialState","getWorkloadData","dateRange","isSingleDay","currentDate","jobsWithFormattedInvokedDate","orderBy","groupJobsByDate","groupBy","intervalArray","totalDays","getHoursArray","getDaysArray","day","dateArray","CheckAuthorizationEffect","LoginEffect","LogoutEffect","tryAsync","onError","RestClientClass","authentications","basicAuth","accessToken","baseUrl","HOST","client","axios","create","TIMEOUT","baseURL","headers","Accept","head","Cookie","remove","getRequestConfig","LoginPage","history","submit","resetErrors","mapStateToProps","mapDispatchToProps","ContainerComponent","MasLogo","VenditaLogo","LoginGraphic","FormComponent","setShowPassword","showPassword","handleMouseDownPassword","submitHandler","restErrors","getRestErrors","noValidate","autoComplete","autoFocus","getError","valueChangeHandler","inputProps","InputLabelProps","aria-label","onMouseDown","edge","labelWidth","RestErrorsComponent","JobItemComponent","jobStatus","formatName","nameContainerWidth","getElementById","offsetWidth","starPath","formattedName","canvas","getContext","metrics","measureText","shift","extended","statusChild","local","WorkloadGraphComponent","setSingleDay","activeLabel","margin","right","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","tickSize","axisLine","tick","stroke","strokeWidth","fillOpacity","CustomTooltipComponent","nextProps","CustomAxisTickComponent","transform","textAnchor","CircleImgComponent","NumberLabelComponent","StringLabelComponent","SearchInputComponent","DropdownComponent","handleToggle","isDropdownOpen","setCloseDropdown","anchorRef","contains","onClickCallback","itemIndex","createRef","parentWidth","isOpen","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onClickAway","SmallInputComponent","SingleDatePickerComponent","focused","onDateChange","onFocusChange","numberOfMonths","customInputIcon","isOutsideRange","hideKeyboardShortcutsPanel","displayFormat","navPrev","mdiChevronLeft","navNext","mdiChevronRight","RangeDatePicker","renderDayContents","anchorDirection","block","customArrowIcon","mdiArrowLeftRight","customCloseIcon","enableOutsideDays","endDateId","endDatePlaceholderText","horizontalMargin","initialEndDate","initialStartDate","initialVisibleMonth","isDayBlocked","isDayHighlighted","isRTL","keepOpenOnDateSelect","minimumNights","monthFormat","navPosition","onNextMonthClick","onPrevMonthClick","orientation","phrases","calendarLabel","chooseAvailableEndDate","chooseAvailableStartDate","clearDates","closeDatePicker","dateIsSelected","dateIsSelectedAsEndDate","dateIsSelectedAsStartDate","dateIsUnavailable","enterKey","escape","focusStartDate","homeEnd","jumpToNextMonth","jumpToPrevMonth","keyboardBackwardNavigationInstructions","keyboardForwardNavigationInstructions","keyboardShortcuts","leftArrowRightArrow","moveFocusByOneDay","moveFocusByOneMonth","moveFocusByOneWeek","moveFocustoStartAndEndOfWeek","openThisPanel","pageUpPageDown","questionMark","returnFocusToInput","roleDescription","selectFocusedDate","showKeyboardShortcutsPanel","upArrowDownArrow","regular","renderCalendarDay","renderMonthText","reopenPickerOnClearDates","screenReaderInputMessage","showClearDates","showDefaultInputIcon","small","startDateId","startDatePlaceholderText","stateDateWrapper","withFullScreenPortal","withPortal","onDatesChange","focusedInput","JobResults","renderJobsResults","mdiProgressClock","mdiCheckCircleOutline","mdiCalendarArrowRight","mdiStopCircleOutline","mdiTimelineClock","mdiAlertRhombusOutline","mdiCancel","jobName","fromSearch","any","Table","sortBehavior","changeSort","stickyHeader","HeaderCell","column","align","sortDirection","direction","Row","TableRow","Cell","TableCell","LogoutPage","RootModule","filteredJobs","totalFilteredJobs","range","onChangeDatesHandler","entitiesStatus","averageJobs","round","storeFilterStatus","mdiChartTimelineVariant","inline","Paper","flex","PaperHeader","PaperContent","PaperFooter","LeftSideSlot","RightSideSlot","PaperTitle","Main","mdPage","Section","full","SectionTitle","SectionHeader","SectionInfo","SectionContent","Info","ScrollableContainer","Column","StatusContainer","filterJobs","executing","scheduled","aborted","failed","Daemon","useSelector","isDaemonRunning","JobStatus","filterByStatus","storeStatus","setStatus","renderContent","dispatchEvent","Search","apiSearchWithDebounce","debounce","searchedTerm","showSearchResults","getSearchResults","QSP","name_filter","page","filterProcesses","processStatus","storedProcesses","results","handleOnChange","searchTerm","clearSearch","getSearchedJobs","setSearchFilter","setTypeFilter","category","totalResults","displayedResults","nameFilter","SearchResultsComponent","renderProcessesResults","mdiPlaySpeed","createURLLink","Input","nrRows","LinkBehavior","Button","link","ModalFooter","ErrorModal","ConfirmationModal","JobsEffect","JobsConnectionsEffect","SearchJobsEffect","SearchProcessesEffect","GlobalFiltersEffect","listen","newLocation","pathname","currentPathname","currentSearch","go","setAuthorization","authorizationStatus","exact","Login","Logout","Layout","hot","RootLayout","Jobs","JobProcess","Entities","UsersAndGroups","Explorer","ConnectedExecutiveDashboard","LicenseCollection","renderJobItem","loggedUser","toggleWorkloadDisplay","isWorkloadDisplayed","updateQSP","URLSearchParams","has","handleOnTabChange","selectedTab","performFilter","handleOnFilterChange","returnListBasedOnTab","shell_host_address_filter","platform_filter","database_name_filter","user_filter","platform_name_filter","platform_dbms_filter","pageFilters","onSearchInputChange","onKeyDown","loadAllUsers","whiteSpace","paddingTop","selections","excludeStatus","currentTab","ALLOWED_FOR_DELETE","JobItem","canDelete","setUuid","mdiClockOutline","statusMap","PLATFORM","Filters","u","platforms","selectedPlatform","selectedServer","selectedDb","selectedStatus","mdiServer","mdiCircleSlice5","getJobsFiltersOptions","connection","getIn","JobsInvocations","useLocation","useDispatch","ENTITY_ICONS","constant","exception","CachedIcon","searchWithDebounce","searchInput","setSearchInput","renderColumn","colNum","entityIcons","clearCach","sessionStorage","ev","loadingData","UsersAndGroupsPage","UserManagementHeaderLinks","RightSideControls","UserManagementSwitch","useRouteMatch","routes","Link","UsersPage","loadAllGroups","match","userLink","UserSwitch","GroupsPage","groupLink","GroupsPagesSwitch","ops","ExplorerPage","handleClick","anchorElement","handleClose","viewMode","loadProtocols","loadAllAccounts","treeviewData","storeState","newMode","startIcon","aria-controls","aria-haspopup","keepMounted","activePage","switchToTileView","Treeview","DbObjects","loadingFlags","isObjectsSidebarDisabled","RUNNING","STATUS_SPAN","marginLeft","textShadow","STOPPED","SidebarContainer","postgresStatus","beHealth","masSystemsMonitor","masDaemonStatus","uptime1Minute","uptime5Minutes","uptime15Minutes","daysUntilExpire","beLicence","licensed_feature","expirationDate","licenseStatus","paddingRight","pkg","Favorites","mdiStarOutline","Navigation","navId","handlePopoverOpen","handlePopoverClose","setActiveTab","newActiveTab","activeTab","setCurrentNavItem","onMouseEnter","onMouseLeave","subItem","withRouter","Notification","UserMenu","menuAnchorRef","isVisible","openAdminPage","setToggleDropdown","autoFocusItem","Compile","setStep","step","Confirmation","Compiler","compilation","setCompilation","postCompile","useQuery","LinkRouter","RouterLink","redirected","OtherMainLinks","PrepareFlow","designation","actionsTypes","CHECK_AUTHORIZATION","LOGIN","LOGOUT","ActionCreator","setBasicAuth","CURRENT_USER","source","INTL","CURRENT_TIME","DAEMON_STATUS","JOB_COUNT","PROTOTYPES","FORMS","FORM","DOWNLOAD_PACKAGING","DOWNLOAD_CSV_TEMPLATE","Buffer","statusText","loginPath","removeBasicAuth","module","exports","autoFocusEndDate","momentPropTypes","momentObj","DateRangePickerPhrases","omit","DateRangePickerShape","localeData","longDateFormat","DateRangePickerWrapper","GET_JOBS","GET_CONNECTIONS","SEARCH_JOBS","SEARCH_PROCESSES","UPDATE_GLOBAL_FILTERS","SET_FILTER_STATUS","ServersList","getAllAccounts","setAnchorElement","serversNumber","ConnectedServersList","serversUsage","blobData","blob","Blob","blobURL","URL","webkitURL","createObjectURL","tempLink","setAttribute","click","revokeObjectURL","deactivating","debug","groups_update","producers","updating_groups","creating","group_users","group_subgroups","reports","collectionProcesses","hardware","wasExecuted","preSoftware","software","vmware","packaging","licenses","base","rawVirtualServers","virtualServers","execdashboard","execdashboard_virtual","FETCH_ENTITIES_REQUEST","FETCH_ENTITIES_SUCCESS","FETCH_ENTITIES_FAILURE","FETCH_ENTITIES_ALL_REQUEST","FETCH_ENTITIES_ALL_SUCCESS","FETCH_ENTITIES_ALL_FAILURE","SELECT_ENTITY","CLEAR_SELECTED_ENTITY","UPDATE_FILTERS","DAEMON_STATUS_REQUEST","DAEMON_STATUS_SUCCESS","DAEMON_STATUS_FAILURE","processed","fetchedInvocation","PROCESS_QUERY","FETCH_INVOCATION_SUCCESS","FETCH_INVOCATION_FAILURE","REPLACE_INVOCATION","next","schema","ADD_NOTIFICATIONS","REMOVE_NOTIFICATION","JobList","NoJobs","ConnectedJobList","ScheduleModal","setTab","processDetails","setProcessDetails","scheduleDetails","setScheduleDetails","newSchedule","schedules","textDecoration","changeTab","ViewTabs","Documentation","ScheduleFormComp","derivedMonitor","enabled","monitor","serverTime","everyHourWarningShown","wasSCheduleCallDone","allScheduledNames","masTimeFormatted","currentTime","availableProcess","platformVal","typeVal","processVal","selectedType","platformMatches","typeMatches","nameValue","splittedName","t_min","t_hr","t_day","t_mon","t_wkd","sch_name","isValidMinutes","isValidHours","isValidDays","isValidMonth","isValidWeekDay","n_state","isEmpty","ConnectedScheduleForm","rejector","sch_description","params_with_maybe_replvars","extractReplVars","pickBy","rawValues","extractFQName","cleanUpReplVars","prefix","Groups","dense","disablePadding","button","primary","Users","currentActionLabel","shouldDisplayAction","emptyListMessage","renderUsersList","Events","UserChip","background","Chip","NotificationList","filteredUsers","buttonLabel","buttonIcon","endIcon","Entity","user_owner","aliasStr","getBoundingClientRect","parent","parentNode","scrollTo","behavior","SelectedEntity","ActionsNamespace","disableActions","hasWrite","deleteRights","parseName","tail","parsed","fq","ConnectedEditNamespace","nestedNames","EditNamespace","canUpdateName","setDescription","ConnectedDeleteNamespace","DeleteNamespace","ActionsConstant","ConnectedEditConstant","EditConstant","mdiImageFilterCenterFocus","patchConstant","ActionsProcess","ConnectedNewSchedule","NewSchedule","openErrorModal","setOpenErrorModal","errorModalActions","ScheduleForm","EditProcessModal","ProcessEditor","saveProcessEdits","steps","Step","step_index","expressions","parseEvaluatableExpressions","exp","StepExpression","expression","exp_index","evaluate","process_name","evaluations","toSend","findFormPrototype","findFormEntry","ActionsForm","canWrite","ConnectedCopyForm","CopyForm","formName","SubmitButtonNoDirty","FormParameters","FieldsAndGroupsEditor","DataContext","FieldGroup","pointer","GroupInstance","canAdd","Field","newInstance","Value","packet","canRemove","idx","provided_field_name","ActionsRoot","ActionsPrototype","ActionsSchedule","ConnectedEditSchedule","EditSchedule","setMonitor","isEntityDeletable","ActionsCommon","displayDelete","ConnectedNewAlias","ConnectedEditAlias","NewAlias","original","EditAlias","splittedNamespace","handleEditSubmit","originalName","ConnectedDeleteEntity","clearSelected","DeleteEntity","PrivilegesModal","PrivilegesEditor","hasAlias","usePrivileges","editAliasParent","updating","setEditAliasParent","updatePrivilege","switchTab","PrivilegesList","is_group","updater","privilegeTypes","renderType","user_or_group","mdiAccount","setLoading","setUpdating","setData","HeaderPageSwitch","arrayOf","UserLoader","loadUser","userName","useParams","ConnectedUserLoader","UserView","deactivateUser","defaultResult","noGroups","deactivate","titleStyles","textTransform","ConnectedUserView","removing","Privileges","grant","revoke","Privilege","capitalize","PrivilegesContainer","mapPrivileges","class_privileges","actual","str","UserGroups","removeFromGroups","retrieveGroupDescription","setSelectedGroup","errorMessage","setErrorMessage","isOnlySelect","questionMessage","passed","group_name","mdiDeleteCircleOutline","UserGroupsContainer","visibleGroups","EditUserGroups","addToGroups","isFormChanged","setIsFormChanged","closeModal","aria-labelledby","aria-describedby","GroupsList","onAdd","EditUserGroupsContainer","showAll","err","EditUserDetails","UserDetailsForm","EditUserDetailsContainer","submitResult","created","date_created","updated","date_updated","UserDatesBox","DateCreated","DateUpdated","mdiAccountPlus","parseDate","mdiAccountEdit","EditUserInfo","UserInfoForm","EditUserInfoContainer","formEndpoint","formproto","formdata","mapFormValues","submited","sendable_data","FieldSwitch","dict","EmailField","PhoneNumberField","notRequired","Field_Types","FieldComponent","getComponent","UserCard","endsWith","groupless","mdiAccountOff","NoUserSelectedPage","min","confirmpassword","CreateNewUser","submitUserValues","useHistory","operation","setOperation","exists","marginRight","CreateNewUserPage","NewUserGroups","existing","GroupsSelection","mdiAccountGroup","GroupCard","GroupView","removeGroup","deleteGroup","ConnectedGroupView","GroupLoader","loadGroup","groupName","ConnectedGroupLoader","GroupUsers","removeUsersFromGroup","setSelectedUser","GroupUsersContainer","EditGroupUsers","addUsersToGroup","mdiAccountMultiplePlus","UsersSelection","EditGroupUsersContainer","usersFetched","usersSubmitted","resolved","rejected","SubGroups","removeSubGroups","subgroup","SubGroupsContainer","EditSubGroups","updateGroup","GroupSelection","EditSubGroupsContainer","groupsFetched","subgroupsSubmitted","subgroupError","CreateNewGroup","submitGroupValues","CreateNewGroupPage","NoGroupSelectedPage","DBMS","toggleExpanded","isExpanded","setPath","changeState","autoExpanded","ConnectedDBMS","ServerList","Server","isActive","activePath","storedPath","splitAccountName","ConnectedServer","DatabaseList","Database","ConnectedDatabase","BreadcrumbsTitle","renderBreadcrumbs","links","separator","previous","route","navigateTo","selectedLink","setActiveLevel","ConnectedBreadcrumbsTitle","ContentSwitch","renderPage","AllDbms","retrieveDBMSStatus","retrieveDBMSStatusInfo","ConnectedAllDbms","allDbms","serverLabel","serverFullName","AllServers","renderOptions","retrievePendingStatus","refreshServerDBs","refreshServerDbsStatus","retrieveServerStatus","retrieveServerStatusInfo","hasDatabases","mdiPercent","ConnectedAllServers","ServerSettings","deleteServerOpen","setDeleteServerOpen","deleteServerErrorOpen","setDeleteServerErrorOpen","deleteServerModalActions","deleteServerErrorModalActions","EditServerContainer","EditServer","AllDatabases","refreshDBStatus","refreshDatabaseStatus","mdiCheckboxMultipleBlankOutline","mdiShape","mdiHexagonSlice2","mdiFormatAlignTop","mdiLicense","retrieveDbBackup","retrieveDbStatus","retrieveDbStatusInfo","ConnectedAllDatabases","Workload","newTab","getJobsData","pageLevel","levelFilters","protocol_filter","ConnectedWorkload","License","ConnectedLicense","Report","getLicenseReport","reportTwo","licenseFeatures","reportOne","ConnectedReport","FeaturesUsage","renderSingleReport","renderComparableReports","comparableFeatures","getFeatureValue","rep1","rep2","valueNode","needsExpansion","listRef","offsetHeight","flexDirection","paddingLeft","UnusedFeatures","CellWithTooltip","rowRenderer","hover","CURRENTLY_USED","mdiCheckboxMarkedCircle","mdiCloseCircle","TableRenderer","tableProps","FeaturesTable","sortLicenseFeatures","orderMultiplier","sortByName","sortByUsages","sortByStatus","sorted","Storage","getStoragePoints","getStorageDetails","storagePoints","storageDetails","setStorageItem","ConnectedStorage","Objects","getObjects","objectsData","objectDetails","setObjectsItem","ConnectedObjects","Sessions","getSessionsData","enableLoadingFlag","disableLoadingFlag","refreshSessions","ConnectedSessions","USERNAME","MACHINE","SID","LOGON_TIME","PROGRAM","TYPE","noDataMessage","CommonSessionsTable","sortSessions","sortedSessions","killSession","spid","ecid","loginame","hostname","blk","dbname","cmd","request_id","openKillSessionConfirmation","sessionId","MssqlSessionsTable","session_id","killSessionConfirmationOpen","sessionIdToKill","killSessionConfirmationActions","killSessionErrorModalActions","killSessionErrorOpen","TopSQLStatements","getTopSqlStatementsData","getEndpoint","prepareChartData","topStatementsData","ELAPSED_TIME","cpuTime","PCT_CPU","ioTime","PCT_IO","sqlId","SQL_ID","timeMillisFull","cpuPercent","ioPercent","elapsedTimeChartData","isChartSupported","ConnectedTopSQLStatements","renderCustomXAxisTick","renderLegend","renderChartTooltip","ElapsedTimeChart","barGap","strokeDasharray","verticalAlign","layout","domain","tickFormatter","stackId","SESS_ID","CHILD_NUMBER","SQL_TEXT","mdiContentCopy","MODULE","EXECUTIONS","ELAPSED_PER_EXEC","sqlStatements","OracleTopSQLTable","sortSqlStatements","sortedStatements","queryid","userid","calls","avg_time_ms","PostgresTopSQLTable","SESSION_ID","USER","SQL_Text","TIME","STATE","MysqlTopSQLTable","Database_name","QueryName","ExecutionCount","MaxElapsedTime","AvgElapsedTime","Logical_Reads","physical_reads","logical_writes","MssqlTopSQLTable","ToggleSystemExplorerView","mdiViewComfy","HostnameCellWithTooltip","isChecked","updateSelection","navigateToDetails","isWorkloadAllowed","isTopSqlAllowed","isStorageAllowed","isLicenseReportingAllowed","testConnectionsTrigger","clickHandler","addServerTrigger","addDatabaseTrigger","importCsvTrigger","editDatabaseTrigger","deleteDatabaseTrigger","SystemExplorerTable","allDatabases","createCheckboxHeaderColumnConfig","protocolGroup","toggleDbsSelectionByProtocol","isAllDbsByProtocolSelected","selectedDbs","dbIndex","forceUpdate","shouldAddAll","allWithoutCurrent","clearDbsByProtocol","allByProtocol","selectedByProtocol","testConnections","isDbSelected","some","hasSingleSelection","getFirstDatabase","group1","group2","getListOrder","detailsPageParams","columnsConfig","ConnectedSystemExplorerTable","JobView","JobForm","loggedInAs","setEditable","deriveFormState","disabledFields","userValue","dateValue","timeValue","time_invoke","handleJobCreation","FormVerbs","sendable","job_user","dateMoment","timeMoment","dateTime","asMinutes","when","noOutput","JobOutput","setOutput","outputType","monitoring","outputFormat","preparedJSON","enableClipboard","displayObjectSize","displayDataTypes","wantStatusColor","wantStatusIcon","warning","ExecutiveDashboard","getExecutiveDashboard","getVirtualExecutiveDashboard","dashboardType","setDashboardType","RefreshDashboard","mdiChartDonut","ToggleDashboard","PhysicalDashboard","nrSelected","SearchSection","toggleServer","isServerSelected","toggleSelected","ConnectedSearchSection","SwitchContent","EmptyContent","Dashboard","ConnectedDashboard","OptionsTile","serversToGroup","filteredServers","groupedServers","serverKey","chartOptions","secondaryColor","OptionsList","OptionItem","OptionsChart","allowDecimals","ServerView","ConnectedServerView","optionType","mdiCheck","UsedOptions","selectedForComparison","uniqueId","visibleSids","inComparison","compareSelected","resetSelected","VirtualDashboard","found","NoData","ToggleSelection","deselectAll","selectAll","ConnectedToggleSelection","chip","Hardware","poller","runPoller","pollInvocation","outputReponse","clearTimeout","renderModal","outputOpen","requestProcessData","isProcessLoading","executeCollectionProcess","loadingPrototypes","loadingDatatypes","loadingAccounts","loadingForms","normalizeParameter","chooseField","ConnectedHardware","Software","wasHardwareExecuted","wasPreSoftwareExecuted","mdiApplication","ConnectedSoftware","VMware","ConnectedVMware","Packaging","lms_repo","isSucceeded","successModalOpen","failedModalOpen","isDownloadDisabled","renderPackagingSuccessModal","renderPackagingFailedModal","sendEmail","isEmailDisabled","wasVsphereExecuted","downloadFile","mdiArchiveArrowDownOutline","ConnectedPackaging","SuccessModal","formatQuery","PROCESS_NAME","PARAMS_TO_NORMALIZE","PreSoftware","normalizedParam","ConnectedPreSoftware","i18nMessages","general","header","persistor","persistStore","provider","locale","basename","App","render","webpackContext","req","webpackContextResolve","__webpack_require__","code","partial"],"mappings":"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","file":"js/app.dc63ba593f73fde934ca.js","sourcesContent":["import defaultConstants from './constants';\n\nexport const CONSTANTS = defaultConstants;\n","import React, { forwardRef, useMemo, useEffect, useState } from 'react';\n\nimport moment from 'moment';\nimport MomentUtils from '@date-io/moment';\n\nimport { useField, useFormikContext } from 'formik';\n\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { ParameterLoader } from 'shared/components/loaders';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n  KeyboardTimePicker\n} from '@material-ui/pickers';\n\nimport { Input } from 'shared/components/controls';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport check from './field-level-validations';\n\nexport const Text = forwardRef(function Text(\n  { options, validate, defaultValue = '', value, required, reactToChange, ...props },\n  ref\n) {\n  const [shouldValidate, setShouldValidate] = useState(false);\n  const validation = useMemo(() => {\n    if (!shouldValidate) {\n      return null;\n    }\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required, shouldValidate]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  const formikCtx = useFormikContext();\n\n  useEffect(() => {\n    // used to allow the \"\" (empty string) value\n    if (value === undefined || value === null) {\n      helpers.setValue(defaultValue);\n    } else {\n      helpers.setValue(value);\n    }\n    helpers.setTouched(false);\n    setShouldValidate(true);\n  }, [value]);\n\n  useEffect(() => {\n    /**\n     * accepts a reaction function, ideally called when setValue is called.\n     * It should be used to update other known field names in reaction to this one changing.\n     */\n    reactToChange && reactToChange(value, formikCtx);\n  }, [value]);\n\n  useEffect(() => {\n    /** Unmount cleanup ? */\n    return () => {\n      if (!props.multiline || !props.isPopup) {\n        helpers.setValue(undefined);\n        // helpers.setTouched(false);\n        helpers.setError(undefined);\n      }\n    };\n  }, []);\n\n  if (field.value === undefined) {\n    return <ParameterLoader>Mounting Field</ParameterLoader>;\n  }\n\n  if (options && options.length) {\n    const selected = options.find(o => o.value === field.value) ?? null;\n    const description = options.find(o => o.value === field.value)?.description || undefined;\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        value={selected}\n        getOptionLabel={option => option.label || field.value}\n        getOptionDisabled={option => option.disabled}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n\n          /**\n            only on Select option changes for now. Can be modified for generic text,\n            but should be done when needed.\n            onChange from '...field' can be decorated.\n           */\n          reactToChange && reactToChange(option.value, formikCtx);\n        }}\n        disabled={props.disabled}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              description={description}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n\nexport function Email(props) {\n  const validations = useMemo(() => check.merge(check.email, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"email\" />;\n}\n\nexport function PhoneNumber(props) {\n  const validations = useMemo(() => check.merge(check.phone, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} />;\n}\n/* TODO: fix Integer required validation checks. Investigate how Yup returns the validateSync for this particular instance */\nexport function Integer({ validate, ...props }) {\n  const validations = useMemo(() => check.merge(props.required ?? check.required_not_null), [\n    props.required,\n    validate\n  ]); // validate is given by the parameter normalizer.\n  // it should be a list of check keys. TODO: map to validation functions to merge\n\n  return <Text {...props} validate={validations} type=\"number\" />;\n}\n\nexport function Password(props) {\n  return <Text {...props} type=\"password\" />;\n}\n\nconst BOOL_OPTIONS = [\n  { label: 'True', value: true },\n  { label: 'False', value: false }\n];\n\nexport const BooleanSelect = forwardRef(function Boolean({ options, ...props }, ref) {\n  return <Text type=\"text\" value defaultValue {...props} ref={ref} options={BOOL_OPTIONS} />;\n});\n\nexport const Date = forwardRef(function Date(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value ? moment(field.value).format('MM/DD/YYYY') : moment().utc();\n\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardDatePicker\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"MM/DD/YYYY\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => helpers.setValue(date?.format('MM/DD/YYYY') || ' ')}\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Time = forwardRef(function Time(props, ref) {\n  const [field, meta, helpers] = useField({\n    name: props.name\n  });\n\n  useEffect(() => {\n    helpers.setValue(props.value);\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, [props.value]);\n\n  const value = field.value\n    ? moment(field.value, 'HH:mm')\n    : moment()\n        .utc()\n        .format('HH:mm');\n  return (\n    <FormControl fullWidth error={meta.error && meta.touched}>\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <KeyboardTimePicker\n          ampm={false}\n          ref={ref}\n          disableToolbar\n          inputVariant=\"outlined\"\n          format=\"HH:mm\"\n          label={props.label}\n          disabled={props.disabled}\n          KeyboardButtonProps={{\n            'aria-label': 'change date'\n          }}\n          error={meta.error && meta.touched}\n          value={value}\n          onChange={date => {\n            helpers.setValue(date?.format('HH:mm') || ' ');\n          }}\n          mask=\"__:__\"\n        />\n      </MuiPickersUtilsProvider>\n    </FormControl>\n  );\n});\n\nexport const Select = forwardRef(function Select(\n  { options, validate, defaultValue, value, required, isNamespace, ...props },\n  ref\n) {\n  const validation = useMemo(() => {\n    if (validate) {\n      return validate;\n    }\n\n    if (required) {\n      return check.required;\n    }\n  }, [validate, required]);\n\n  const [field, meta, helpers] = useField({\n    touched: false,\n    name: props.name,\n    validate: validation\n  });\n\n  useEffect(() => {\n    helpers.setValue(value || defaultValue || '');\n    helpers.setTouched(false);\n\n    /** Unmount cleanup ? */\n    return () => {\n      helpers.setValue(undefined);\n      helpers.setTouched(false);\n      helpers.setError(undefined);\n    };\n  }, []);\n\n  /**\n   * This should be moved to it's own thing.\n   * For now, it satisfies... :(((\n   */\n  if (options && options.length) {\n    return (\n      <Autocomplete\n        disableClearable\n        id={`autocomplete-${props.name}`}\n        options={options}\n        getOptionSelected={option => option.value === field.value}\n        getOptionLabel={option => option.label || value || ''}\n        value={value}\n        onChange={(e, option) => {\n          helpers.setValue(option.value);\n        }}\n        renderInput={params => {\n          return (\n            <Input\n              {...props}\n              {...params}\n              ref={ref}\n              type=\"text\"\n              error={meta.error && meta.touched}\n              helperText={meta.touched ? meta.error : ''}\n              desription={undefined}\n            />\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <Input\n      {...props}\n      {...field}\n      ref={ref}\n      type=\"text\"\n      error={meta.error && meta.touched}\n      helperText={meta.touched ? meta.error : ''}\n    />\n  );\n});\n","import React from 'react';\nimport classnames from 'classnames';\nimport { mdiCheckDecagram, mdiAlertDecagram } from '@mdi/js';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { node, oneOf, bool } from 'prop-types';\n\nimport './Result.local.scss';\n\nconst icons_map = {\n  success: mdiCheckDecagram,\n  fail: mdiAlertDecagram\n};\n\nexport const Result = ({ children, type }) => {\n  return (\n    <div\n      className={classnames('result-display', {\n        [type]: type\n      })}\n    >\n      <div className=\"result-icon\">\n        <SvgIcon fontSize=\"inherit\">\n          <path d={icons_map[type] || mdiAlertDecagram} />\n        </SvgIcon>\n      </div>\n      <div>{children}</div>\n    </div>\n  );\n};\n\nResult.propTypes = {\n  type: oneOf(['success', 'fail']),\n  children: node\n};\n\nexport const ResultText = ({ children, compact }) => (\n  <h2 className={classnames('result-text', { compact })}>{children}</h2>\n);\n\nResultText.propTypes = {\n  compact: bool,\n  children: node\n};\n\nexport const ResultMessages = ({ messages = [] }) => (\n  <div className=\"result-messages\">\n    {messages.map((msg, index) => (\n      <div className=\"message-entry\" key={index}>\n        <p>{msg?.text?.split?.('\\n')?.[0]}</p>\n      </div>\n    ))}\n  </div>\n);\n\nResultText.propTypes = {\n  children: node\n};\n\nResult.Text = ResultText;\nResult.Messages = ResultMessages;\n","export const LOAD_ALL_ACCOUNTS = 'LOAD_ALL_ACCOUNTS';\nexport const CHANGE_STATE = 'CHANGE_STATE';\nexport const LOAD_ALL_LICENSES = 'LOAD_ALL_LICENSES';\nexport const LOAD_TOP_SQL_STATEMENTS = 'LOAD_TOP_SQL_STATEMENTS';\nexport const LICENSE_FULL_REPORT = 'LICENSE_FULL_REPORT';\nexport const PROVIDE_SERVERS_USAGE = 'PROVIDE_SERVERS_USAGE';\nexport const LOAD_STORAGE_POINTS = 'LOAD_STORAGE_POINTS';\nexport const SET_STORAGE_NS = 'SET_STORAGE_NS';\nexport const LOAD_STORAGE_DETAILS = 'LOAD_STORAGE_DETAILS';\nexport const LOAD_OBJECT_DETAILS = 'LOAD_OBJECT_DETAILS';\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT';\nexport const LOAD_SESSIONS = 'LOAD_SESSIONS';\nexport const PROVIDE_DB_LAST_BACKUP = 'PROVIDE_DB_LAST_BACKUP';\nexport const PROVIDE_DB_STATUS = 'PROVIDE_DB_STATUS';\nexport const UPDATE_DB_STATUS = 'UPDATE_DB_STATUS';\nexport const LOAD_PROTOCOLS = 'LOAD_PROTOCOLS';\nexport const LOAD_COLLECTION_PROCESS = 'LOAD_COLLECTION_PROCESS';\nexport const EXECUTE_COLLECTION_PROCESS = 'EXECUTE_COLLECTION_PROCESS';\n","import moment from 'moment';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  fetchInvocation,\n  fetchInvocationOutput,\n  invocationOutputPoller,\n  parseInvocationResult,\n  postInvocation\n} from '../../../shared/api/invocation';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport function loadAllAccountsThunk(payload) {\n  return async (dispatch, getState) => {\n    dispatch(creators.loading(LOAD_ALL_ACCOUNTS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n        page_size: 2147483645\n      });\n\n      response.data.protocols = getState().explorer.protocols;\n\n      dispatch(creators.success(LOAD_ALL_ACCOUNTS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_ACCOUNTS, error));\n      return;\n    }\n\n    if (payload?.from === 'dashboard') {\n      dispatch(provideServersUsageThunk());\n    } else {\n      dispatch(provideDBLastBackupThunks());\n      dispatch(provideDBStatusThunks());\n    }\n  };\n}\n\nexport function loadProtocolsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_PROTOCOLS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n      dispatch(creators.success(LOAD_PROTOCOLS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_PROTOCOLS, error));\n    }\n  };\n}\n\nexport function changeStateThunk(newState) {\n  return dispatch => {\n    dispatch(creators.action(CHANGE_STATE, newState));\n\n    return 'done';\n  };\n}\n\nexport function loadAllLicensesThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_LICENSES));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n      dispatch(creators.success(LOAD_ALL_LICENSES, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_LICENSES, error));\n    }\n  };\n}\n\nexport function loadTopSQLStatementsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, null));\n    dispatch(creators.loading(LOAD_TOP_SQL_STATEMENTS));\n\n    try {\n      const creationResult = await postInvocation(payload);\n\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const result = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        dispatch(creators.success(LOAD_TOP_SQL_STATEMENTS, result));\n      } else {\n        dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_TOP_SQL_STATEMENTS, error));\n    }\n  };\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n\nexport function getLicenseReportThunk(fullPath) {\n  return async dispatch => {\n    dispatch(creators.loading(LICENSE_FULL_REPORT));\n    try {\n      const response = await RestClient.get('license_data', { dbconn: fullPath });\n      if (!Array.isArray(response.data)) {\n        response.data = [];\n      }\n      dispatch(creators.success(LICENSE_FULL_REPORT, { reportData: response.data }));\n    } catch (error) {\n      dispatch(creators.fail(LICENSE_FULL_REPORT, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.SESSIONS(filters.fullPath), {\n        page_size: filters.page_size\n      });\n      dispatch(creators.success(LOAD_SESSIONS, { data: response.data, sort: filters.sort }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadSessionsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n\n    const { fullPath, protocol } = filters;\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: SystemExplorerFeatureUtil.getSessionsEndpoint(protocol),\n      timestamp: null\n    };\n\n    try {\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        let statusChecksCount = 0;\n        let isFinished = false;\n\n        while (statusChecksCount < 10 && !isFinished) {\n          const invocationStatus = await sleep(fetchInvocation.bind(this, invocationUuid)); // eslint-disable-line\n          statusChecksCount++;\n          isFinished = invocationStatus.invocation.status === 'SUCCEEDED' || invocationStatus.invocation.status === 'FAILED';\n        }\n\n        const invocationOutput = await fetchInvocationOutput(invocationUuid);\n        const resultTxt = invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n        const statementsJson = (resultTxt || '').split('\\n')[1];\n        const sessionsData = statementsJson ? JSON.parse(statementsJson) : [];\n        dispatch(creators.success(LOAD_SESSIONS, { data: sessionsData, sort: filters.sort }));\n      } else {\n        dispatch(creators.fail(LOAD_SESSIONS, 'Did not find the invocation'));\n      }\n    } catch (error) {\n      dispatch(creators.fail(LOAD_SESSIONS, error));\n    }\n  };\n}\n\nexport function sessionsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadSessionsByProcess(protocol)) {\n    return loadSessionsByProcessThunk(filters);\n  }\n  return loadSessionsThunk(filters);\n}\n\nexport function enableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_SESSIONS));\n  };\n}\n\nexport function disableSessionsLoadingFlag() {\n  return async dispatch => {\n    dispatch(creators.fail(LOAD_SESSIONS));\n  };\n}\n\nexport function loadStorageDetailsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_DETAILS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_DF(filters.fullPath));\n      const data =\n        response.data && response.data.length\n          ? { data: response.data, key: filters.fullPath }\n          : { data: [], key: filters.fullPath };\n      dispatch(creators.success(LOAD_STORAGE_DETAILS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_DETAILS, error));\n    }\n  };\n}\n\nexport function setStorageItemThunk(ns) {\n  return creators.success(SET_STORAGE_NS, ns);\n}\n\nexport function loadStoragePointsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_STORAGE_POINTS));\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.STORAGE_TS, {\n        dbconn: filters.fullPath\n      });\n      const data = { data: response.data, key: filters.fullPath } || {\n        data: {},\n        key: filters.fullPath\n      };\n      dispatch(creators.success(LOAD_STORAGE_POINTS, data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_STORAGE_POINTS, error));\n    }\n  };\n}\n\nexport function loadObjectsThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n    const objectApis = [\n      { name: 'triggers', path: '/object_trigger' },\n      { name: 'tables', path: '/object_table' },\n      { name: 'indexes', path: '/object_index' },\n      { name: 'procedures', path: '/object_procedure' },\n      { name: 'packages', path: '/object_package' },\n      { name: 'packageBodies', path: '/object_package_body' }\n    ];\n    try {\n      let allData = await Promise.allSettled(\n        objectApis.map(api =>\n          RestClient.get(`/system/explorer${api.path}`, {\n            dbms: filters.fullPath,\n            page_size: 2147483645\n          })\n        )\n      );\n      allData = objectApis.map((api, index) => {\n        return {\n          res: allData[index]?.value?.data,\n          name: api.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function loadObjectsByProcessThunk(filters) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_OBJECT_DETAILS));\n\n    try {\n      const { fullPath, protocol } = filters;\n      const payload = {\n        parameters: {\n          dbconn: fullPath,\n          oformat: 'JSON',\n          compact: true\n        },\n        process: SystemExplorerFeatureUtil.getObjectsEndpoint(protocol),\n        timestamp: null\n      };\n\n      let objectsJSON = [];\n      const creationResult = await postInvocation(payload);\n      if (creationResult.invocations.length) {\n        const invocationUuid = creationResult.invocations[0].uuid;\n        const output = await invocationOutputPoller(invocationUuid);\n        objectsJSON = parseInvocationResult(output);\n      }\n\n      const allData = objectsJSON.map((item) => {\n        return {\n          res: item,\n          name: item.name\n        };\n      });\n      dispatch(creators.success(LOAD_OBJECT_DETAILS, { data: allData, key: filters.fullPath }));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_OBJECT_DETAILS, error));\n    }\n  };\n}\n\nexport function objectsLoaderResolver(filters) {\n  const { protocol } = filters;\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return loadObjectsByProcessThunk(filters);\n  }\n  return loadObjectsThunk(filters);\n}\n\nexport function setSelectedObjectThunk(selected) {\n  return creators.success(SET_SELECTED_OBJECT, selected);\n}\n\nexport function provideServersUsageThunk() {\n  return async function serversUsage(dispatch, getState) {\n    let servers = [];\n\n    if (getState().explorer.structured.dbms.find(d => d.protocol === 'ORACLE')) {\n      servers = getState()\n        .explorer.structured.dbms.find(d => d.protocol === 'ORACLE')\n        .servers.slice();\n    }\n\n    const usageResult = { servers: [] };\n\n    const allResults = await Promise.allSettled(\n      servers.map(server => {\n        return loadUsagePerDb(server);\n      })\n    );\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        usageResult.servers.push({\n          dbms: result.value.dbms,\n          address: result.value.server,\n          usage: result.value.usage || 0\n        });\n\n        return null;\n      });\n\n    usageResult.highLoadCount = usageResult.servers.filter(server => server.usage >= 75).length;\n    usageResult.servers.sort((a, b) => parseFloat(b.usage) - parseFloat(a.usage));\n\n    dispatch(creators.success(PROVIDE_SERVERS_USAGE, usageResult));\n\n    return usageResult;\n  };\n}\n\nexport function provideDBLastBackupThunks() {\n  return async function getDBLastBackup(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases.filter(db => db.special.database === 'mysql')];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [\n        ...databases,\n        ...Pgsql.databases.filter(db => db.special.database === 'postgres')\n      ];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases.filter(db => db.special.database === 'master')];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbLastBackup = [];\n\n    const allResults = await Promise.allSettled(databases.map((db) => loadDBLastBackup(db, servers)));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbLastBackup.push({\n          name: result.value.name,\n          backup: result.value.backup\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_LAST_BACKUP, dbLastBackup));\n\n    return dbLastBackup;\n  };\n}\n\nexport function provideDBStatusThunks() {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n    const Oracle = structured.dbms.find(r => r.protocol === 'ORACLE');\n    const Mysql = structured.dbms.find(r => r.protocol === 'MYSQL');\n    const Pgsql = structured.dbms.find(r => r.protocol === 'PGSQL');\n    const Mssql = structured.dbms.find(r => r.protocol === 'MSSQL');\n\n    let servers = [];\n    let databases = [];\n\n    // for Oracle Dbms do a call for all its databases\n    if (Oracle) {\n      databases = Oracle.databases;\n      servers = Oracle.servers;\n    }\n\n    // for Myssql Dbms do a call only for mysql databases\n    if (Mysql) {\n      databases = [...databases, ...Mysql.databases];\n      servers = [...servers, ...Mysql.servers];\n    }\n\n    // for Pgsql dbms do a call only for posgres databases\n    if (Pgsql) {\n      databases = [...databases, ...Pgsql.databases];\n      servers = [...servers, ...Pgsql.servers];\n    }\n\n    // for Mssql dbms do a call only for master databases\n    if (Mssql) {\n      databases = [...databases, ...Mssql.databases];\n      servers = [...servers, ...Mssql.servers];\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(\n      databases.map((db) => loadDBStatus(db, servers))\n    );\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          message: result.value.message,\n          dbName: result.value.dbName\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(PROVIDE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshServerDbsStatusThunk(server) {\n  return async function refreshDbStatus(dispatch, getState) {\n    const { databases } = server;\n\n    async function retrieveDBStatus(database) {\n      dispatch(\n        creators.loading(UPDATE_DB_STATUS, [\n          {\n            name: database.name,\n            server: database.address,\n            dbms: database.protocol,\n            dbName: database?.special?.database,\n            status:\n              getState().explorer.dbStatus.find(db => db.name === database.name)?.status ||\n              'not-connected'\n          }\n        ])\n      );\n\n      const dbms = database.name;\n      const shell = server.name;\n      try {\n        const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, { dbms, shell });\n\n        let status = response.data.status?.toString().toLowerCase() || 'error';\n        // there is a case where API simply returns only 64, for not it will be treated as down\n        if (parseInt(response.data, 10) === 64) {\n          status = 'down';\n        }\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          message: response?.data?.message,\n          status\n        };\n      } catch (error) {\n        dispatch(\n          creators.fail(UPDATE_DB_STATUS, [\n            {\n              name: database.name,\n              server: database.address,\n              dbms: database.protocol,\n              dbName: database?.special?.database,\n              status: 'error',\n              error\n            }\n          ])\n        );\n\n        return {\n          name: database.name,\n          server: database.address,\n          dbms: database.protocol,\n          dbName: database?.special?.database,\n          status: 'error',\n          error\n        };\n      }\n    }\n\n    const dbStatus = [];\n    const allResults = await Promise.allSettled(databases.map(retrieveDBStatus));\n\n    allResults\n      .filter(result => result.status === 'fulfilled')\n      .map(result => {\n        dbStatus.push({\n          name: result.value.name,\n          status: result.value.status,\n          server: result.value.server,\n          dbms: result.value.dbms,\n          dbName: result.value.dbName,\n          message: result.value.message\n        });\n\n        return null;\n      });\n\n    dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n\n    return dbStatus;\n  };\n}\n\nexport function refreshDBStatusThunk(db) {\n  return async function getDBStatus(dispatch, getState) {\n    const { structured } = getState().explorer;\n\n    const selectedDBMS = structured.dbms.find(r => r.protocol === db.protocol);\n\n    const dbms = db.name;\n    const shell = selectedDBMS\n      ? selectedDBMS.servers.find(sv => sv.address === db.address)?.name\n      : undefined;\n\n    dispatch(\n      creators.loading(UPDATE_DB_STATUS, [\n        {\n          name: db.name,\n          server: db.address,\n          dbms: db.protocol,\n          status: getState().explorer.dbStatus.find(d => d.name === db.name)?.status\n        }\n      ])\n    );\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n        dbms,\n        shell\n      });\n\n      let status = response.data.status?.toString().toLowerCase() || 'error';\n      // there is a case where API simply returns only 64, for not it will be treated as down\n      if (parseInt(response.data, 10) === 64) {\n        status = 'down';\n      }\n\n      const dbStatus = [\n        {\n          name: dbms,\n          server: db.address,\n          dbms: db.protocol,\n          status\n        }\n      ];\n      dispatch(creators.success(UPDATE_DB_STATUS, dbStatus));\n      return dbStatus;\n    } catch (error) {\n      dispatch(\n        creators.fail(UPDATE_DB_STATUS, [\n          {\n            name: db.name,\n            server: db.address,\n            dbms: db.protocol,\n            status: 'error',\n            error\n          }\n        ])\n      );\n    }\n  };\n}\n\nexport function loadProcessDetailsThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_COLLECTION_PROCESS, { name: payload.name }));\n\n    try {\n      const response = await RestClient.get(\n        `${CONSTANTS.BASE.ENDPOINTS.PROCESSES}/${payload.process}`\n      );\n\n      const details = {\n        name: payload.name,\n        data: response?.data?.data?.processes[0] || {}\n      };\n\n      dispatch(creators.success(LOAD_COLLECTION_PROCESS, details));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_COLLECTION_PROCESS, { name: payload.name, error }));\n    }\n  };\n}\n\nexport function executeCollectionProcessThunk(payload) {\n  return async dispatch => {\n    dispatch(creators.action(EXECUTE_COLLECTION_PROCESS, { name: payload.name }));\n\n    return 'done';\n  };\n}\n\nasync function loadUsagePerDb(server) {\n  const database = server.databases[0];\n  const response = await RestClient.get(`/system/explorer/${database.name}/cpu_load_server`);\n\n  const usage = parseFloat(response.data.HOST_CPU);\n\n  return {\n    dbms: database.protocol,\n    server: database.address,\n    usage\n  };\n}\n\nasync function loadDBLastBackup(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_LAST_BACKUP, {\n    dbms,\n    shell\n  });\n\n  return {\n    name: database.name,\n    backup: moment(response.data.backup).isValid()\n      ? moment(response.data.backup).format('MMM DD YYYY')\n      : null\n  };\n}\n\nasync function loadDBStatus(database, servers) {\n  const dbms = database.name;\n  const shell = servers.find(\n    s => s.databases && s.databases.find(d => d.name === database.name)\n  )?.name;\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DB_STATUS, {\n      dbms,\n      shell\n    });\n\n    let status = response.data.status?.toString().toLowerCase() || 'error';\n    // there is a case where API simply returns only 64, for not it will be treated as down\n    if (parseInt(response.data, 10) === 64) {\n      status = 'down';\n    }\n\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: response?.data?.message,\n      dbName: database?.special?.database,\n      status\n    };\n  } catch (error) {\n    return {\n      name: database.name,\n      server: database.address,\n      dbms: database.protocol,\n      message: database?.data?.message,\n      dbName: database?.special?.database,\n      status: 'error'\n    };\n  }\n}\n","export const LOAD_ALL_GROUPS = 'LOAD_ALL_GROUPS';\nexport const LOAD_GROUP = 'LOAD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GRANT_PRIVILEGE = 'GRANT_GROUP_PRIVILEGE';\nexport const REVOKE_PRIVILEGE = 'REVOKE_GROUP_PRIVILEGE';\nexport const ADD_USERS_TO_GROUP = 'ADD_USERS_TO_GROUP';\nexport const REMOVE_USERS_FROM_GROUP = 'REMOVE_USERS_FROM_GROUP';\nexport const ADD_GROUPS_TO_GROUP = 'ADD_GROUPS_TO_GROUP';\nexport const REMOVE_GROUPS_FROM_GROUP = 'REMOVE_GROUPS_FROM_GROUP';\nexport const PATCH_SELECTED_GROUP = 'PATCH_SELECTED_GROUP';\nexport const CREATE_GROUP = 'CREATE_GROUP';\n","const MONTH_LIST = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\nconst WEEKDAYS_LIST = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\nconst MAX_MINUTES_VALUE = 59;\nconst MAX_HOUR_VALUE = 23;\nconst MAX_DAY_VALUE = 31;\nconst MAX_MONTH_VALUE = 12;\nconst MAX_WEEKDAY_VALUE = 7;\n\nexport class CronValidator {\n  // public methods\n  static isValidMinutes(minutes) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(minutes), MAX_MINUTES_VALUE);\n  }\n\n  static isValidHours(hours) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(hours), MAX_HOUR_VALUE);\n  }\n\n  static isValidDays(days) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(days), MAX_DAY_VALUE);\n  }\n\n  static isValidMonth(month) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(month), MAX_MONTH_VALUE, false)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(month), MONTH_LIST);\n  }\n\n  static isValidWeekDay(weekDay) {\n    return CronValidator.isValidNumberValue(CronValidator.cleanValue(weekDay), MAX_WEEKDAY_VALUE)\n      || CronValidator.isValidAlternativeValue(CronValidator.cleanValue(weekDay), WEEKDAYS_LIST);\n  }\n\n  static FORMAT_MSG = {\n    MINUTES: 'Minute value is required',\n    HOURS: 'Hour values must be between 0 and 23 and can contain special symbols: , - *',\n    DAYS: 'Day values must be between 0 and 31 and can contain special symbols: , - *',\n    MONTH: 'Month values must be between 1 and 12, or JAN-DEC, and can contain special symbols: , - *',\n    DAY_OF_WEEK: 'Day-of-Week values must be between 0 and 7, or SUN-SAT, and can contain special symbols: , - *',\n    EVERY_HOUR_WARNING: 'You have selected a process to run every hour. This may not be advisable for processes that consume significant storage resources, like backup processes.'\n  };\n\n  static ALLOWED_MINUTES_OPTIONS = ['0', '10', '20', '30', '40', '50'];\n\n  // private methods\n  static isValidNumberValue(time, maxVal, zeroAllowed = true) {\n    if (time === '*' || (zeroAllowed && time === '0')) {\n      return true;\n    }\n\n    if (time.includes(',')) {\n      return time.split(',').every((part) => {\n        return CronValidator.isValidNumberPart(part, maxVal, zeroAllowed);\n      });\n    }\n\n    return CronValidator.isValidNumberPart(time, maxVal, zeroAllowed);\n  }\n\n  static isValidNumberPart(time, maxVal, zeroAllowed = true) {\n    if (time.includes('/')) {\n      return false;\n    }\n    // Uncomment if we should allow a `/` symbol for Cron schedule\n    /*\n    if (time.includes('/')) {\n      const stepParts = time.split('/');\n      if (stepParts.length !== 2) {\n        return false;\n      }\n\n      const stepPartsValid = CronValidator.isValidNumberPart(stepParts[0], maxVal, zeroAllowed)\n        && CronValidator.isValidNumberPart(stepParts[1], maxVal, zeroAllowed);\n\n      return stepPartsValid || (stepParts[0] === '*' && CronValidator.isValidNumberPart([stepParts[1]], maxVal, zeroAllowed));\n    }\n    */\n\n    if (time.includes('-')) {\n      const rangeNumbersArr = time.split('-').map((el) => parseInt(el, 10));\n      return CronValidator.isValidNumberRange(rangeNumbersArr, maxVal) && rangeNumbersArr.length === 2 && rangeNumbersArr[0] <= rangeNumbersArr[1];\n    }\n\n    const timeNumber = parseInt(time, 10);\n    if (zeroAllowed) {\n      return timeNumber >= 0 && timeNumber <= maxVal;\n    }\n    return timeNumber > 0 && timeNumber <= maxVal;\n  }\n\n  static cleanValue(value) {\n    return (value || '').trim().toLowerCase();\n  }\n\n  static isValidNumberRange(dataArray, maxVal, zeroAllowed = true) {\n    return dataArray.every((element) => {\n      if (zeroAllowed) {\n        return element >= 0 && element <= maxVal;\n      }\n      return element > 0 && element <= maxVal;\n    });\n  }\n\n  static isValidAlternativeValue(value, allowedValues) {\n    if (value.includes(',')) {\n      return value.split(',').every((part) => {\n        return CronValidator.isValidAlternativePart(part, allowedValues);\n      });\n    }\n\n    return CronValidator.isValidAlternativePart(value, allowedValues);\n  }\n\n  static isValidAlternativePart(value, allowedValues) {\n    if (value.includes('/')) {\n      return false;\n      /*\n      const stepValues = value.split('/');\n      return CronValidator.isValidAlternativeRange(stepValues, allowedValues);\n      */\n    }\n\n    if (value.includes('-')) {\n      const rangeValues = value.split('-');\n      return CronValidator.isValidAlternativeRange(rangeValues, allowedValues) && rangeValues.length === 2\n        && allowedValues.indexOf(rangeValues[0]) <= allowedValues.indexOf(rangeValues[1]);\n    }\n\n    return CronValidator.isValidAlternativeRange([value], allowedValues);\n  }\n\n  static isValidAlternativeRange(values, allowedValues) {\n    return values.every((value) => {\n      return allowedValues.includes(CronValidator.cleanValue(value));\n    });\n  }\n}\n","export const DbmsType = {\n  ORACLE: 'ORACLE',\n  POSTGRES: 'PGSQL',\n  MYSQL: 'MYSQL',\n  MSSQL: 'MSSQL',\n  OTHER: 'OTHER',\n};\n\nexport const DbmsFeature = {\n  WORKLOAD: 'WORKLOAD',\n  SESSIONS: 'SESSIONS',\n  TOP_SQL: 'TOP_SQL',\n  OBJECTS: 'OBJECTS',\n  STORAGE: 'STORAGE',\n  LICENSE_REPORTING: 'LICENSE_REPORTING',\n};\n\nconst FEATURE_BY_TYPE_MAP = {\n  [DbmsType.ORACLE]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.STORAGE, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL, DbmsFeature.LICENSE_REPORTING],\n  [DbmsType.MYSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.POSTGRES]: [DbmsFeature.WORKLOAD, DbmsFeature.TOP_SQL],\n  [DbmsType.MSSQL]: [DbmsFeature.WORKLOAD, DbmsFeature.OBJECTS, DbmsFeature.SESSIONS, DbmsFeature.TOP_SQL],\n  [DbmsType.OTHER]: [DbmsFeature.WORKLOAD],\n};\n\nconst LOAD_SESSIONS_BY_PROCESS = [DbmsType.MSSQL];\nconst LOAD_OBJECTS_BY_PROCESS = [DbmsType.MSSQL];\nconst OBJECTS_SIDEBAR_DISABLED = [DbmsType.MSSQL];\n\nconst SESSIONS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.sessions.sp_who'\n};\n\nconst OBJECTS_ENDPOINT_MAP = {\n  [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.database.all_objects'\n};\n\nconst ACCOUNT_ENTITY_PREFIX = 'mas0000.';\nconst ACCOUNT_ENTITY_NAME_TOKEN = '.account.';\n\nconst DBMS_LIST_ORDER = {\n  [DbmsType.ORACLE]: 50,\n  [DbmsType.MSSQL]: 40,\n  [DbmsType.MYSQL]: 30,\n  [DbmsType.POSTGRES]: 20,\n  [DbmsType.OTHER]: 10,\n};\n\nconst OBJECTS_DATA_MAPPERS = {\n  [DbmsType.MSSQL]: (item) => {\n    return {\n      OBJECT_NAME: item.name,\n      CREATED: item.create_date,\n      OBJECT_ID: item.object_id,\n      LAST_DDL_TIME: item.modify_date,\n    };\n  },\n};\n\nexport class SystemExplorerFeatureUtil {\n  static isFeatureAllowed(dbmsType, feature) {\n    if (!dbmsType || !feature || !FEATURE_BY_TYPE_MAP[dbmsType]) {\n      return false;\n    }\n    return FEATURE_BY_TYPE_MAP[dbmsType].includes(feature);\n  }\n\n  static isWorkloadAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.WORKLOAD);\n  }\n\n  static isSessionsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.SESSIONS);\n  }\n\n  static isTopSqlAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.TOP_SQL);\n  }\n\n  static isObjectsAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.OBJECTS);\n  }\n\n  static isObjectsSidebarDisabled(dbmsType) {\n    return OBJECTS_SIDEBAR_DISABLED.includes(dbmsType);\n  }\n\n  static isStorageAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.STORAGE);\n  }\n\n  static isLicenseReportingAllowed(dbmsType) {\n    return SystemExplorerFeatureUtil.isFeatureAllowed(dbmsType, DbmsFeature.LICENSE_REPORTING);\n  }\n\n  static splitAccountName(fullName) {\n    fullName = fullName || '';\n    if (!fullName.startsWith(ACCOUNT_ENTITY_PREFIX)) {\n      return '';\n    }\n    const startIdx = fullName.lastIndexOf(ACCOUNT_ENTITY_NAME_TOKEN);\n    if (startIdx === -1) {\n      return '';\n    }\n    return fullName.substr(startIdx + ACCOUNT_ENTITY_NAME_TOKEN.length);\n  }\n\n  static shouldLoadSessionsByProcess(dbmsType) {\n    return LOAD_SESSIONS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static shouldLoadObjectsByProcess(dbmsType) {\n    return LOAD_OBJECTS_BY_PROCESS.includes(dbmsType);\n  }\n\n  static getSessionsEndpoint(dbmsType) {\n    return SESSIONS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsEndpoint(dbmsType) {\n    return OBJECTS_ENDPOINT_MAP[dbmsType];\n  }\n\n  static getObjectsDataMapper(dbmsType) {\n    return OBJECTS_DATA_MAPPERS[dbmsType];\n  }\n\n  static getListOrder(dbmsType) {\n    return DBMS_LIST_ORDER[dbmsType] || 0;\n  }\n}\n","export const LOAD_ALL_USERS = 'LOAD_ALL_USERS';\nexport const SELECT_USER = 'SELECT_USER';\n\nexport const LOAD_USER = 'LOAD_USER';\n\nexport const REVOKE_PRIVILEGE = 'REVOKE_PRIVILEGE';\nexport const GRANT_PRIVILEGE = 'GRANT_PRIVILEGE';\n\nexport const ADD_USER_TO_GROUPS = 'ADD_USER_TO_GROUPS';\nexport const REMOVE_USER_FROM_GROUPS = 'REMOVE_USER_FROM_GROUPS';\nexport const DEACTIVATE_USER = 'DEACTIVATE_USER';\nexport const CREATE_USER = 'CREATE_USER';\n","import { RestClient } from 'shared/lib/rest';\nimport { ENTITY_TYPES_FETCH } from './selectors';\n\nexport function fetchEntities() {\n  return function thunk(dispatch) {\n    const promises = ENTITY_TYPES_FETCH.map(({ type, query }) => {\n      let url = `${type}`;\n      if (query) {\n        url = url.concat(`/${encodeURIComponent(query)}`);\n      }\n      const promise = RestClient.get(url, { page_size: 2147483645 });\n      dispatch({\n        type: 'FETCH_ENTITIES',\n        promise,\n        entityType: type\n      });\n      return promise;\n    });\n\n    dispatch({\n      type: 'FETCH_ENTITIES_ALL',\n      promise: promises\n    });\n  };\n}\n\nexport function fetchEntity(eType) {\n  const definition = ENTITY_TYPES_FETCH.find(desc => eType === desc.type);\n\n  if (!definition) {\n    return function notFound() {\n      console.warn('[fetchEntity] invalid entity type:', eType); // eslint-disable-line\n    };\n  }\n\n  return function thunk(dispatch) {\n    const promise = RestClient.get(\n      `${definition.type}${definition.query ? `/${definition.query}` : ''}?page_size=2147483645`\n    );\n\n    dispatch({\n      type: 'FETCH_ENTITIES',\n      promise,\n      entityType: definition.type\n    });\n\n    return promise;\n  };\n}\n\nexport function selectEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'SELECT_ENTITY'\n  };\n}\n\nexport function clearSelectedEntity(entity, index) {\n  return {\n    entity,\n    index,\n    type: 'CLEAR_SELECTED_ENTITY'\n  };\n}\n\nexport function setFilterType(value) {\n  return {\n    name: 'type',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function setFilterSearch(value) {\n  return {\n    name: 'search',\n    value,\n    type: 'UPDATE_FILTERS'\n  };\n}\n\nexport function openModal(name) {\n  return {\n    type: 'OPEN_ENTITIES_MODAL',\n    name\n  };\n}\n","import { sessionActions } from './session.action';\n\nexport const actions = {\n  ...sessionActions,\n};\n","import { jobsActions } from './jobs.action';\nimport { processActions } from './process.action';\nimport { globalFiltersActions } from './global-filters.action';\n\nexport const actions = {\n  ...jobsActions,\n  ...processActions,\n  ...globalFiltersActions,\n};\n","// function Node(payload) {\n//   const data = payload;\n//   const edges = [];\n\n//   return {\n//     getEdges() {\n//       return edges;\n//     },\n//     getData() {\n//       return data;\n//     },\n//     addEdge(edge) {\n//       edges.push(edge);\n//       return edges;\n//     }\n//   };\n// }\n\nimport _ from 'lodash';\nimport { createSelector } from 'reselect';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nfunction pipe(...fns) {\n  return arg => fns.reduce((prev, fn) => fn(prev), arg);\n}\n\nfunction filterBy(selector, equalityFn, value) {\n  return data => {\n    if (value) {\n      return data.filter(el => equalityFn(selector(el), value));\n    }\n\n    return data;\n  };\n}\n\nexport function retrieveFilteredAccounts(protocol, server) {\n  return state => {\n    const { accounts } = state.explorer;\n\n    const filterByProtocol = filterBy(\n      el => (el.nodes[0] ? el.nodes[0].protocol : ''),\n      (stateValue, currentValue) => stateValue === currentValue,\n      protocol\n    );\n\n    const filterByServer = filterBy(\n      el => Object.keys(el.servers),\n      (servers, currentServer) => servers.includes(currentServer),\n      server\n    );\n\n    return pipe(filterByProtocol, filterByServer)(accounts);\n  };\n}\n\nexport function retrieveServerEntry({ protocol, address }, structure) {\n  const dbms = structure.dbms.find(entry => entry.protocol === protocol);\n  return dbms && dbms.servers.find(server => server.address === address);\n}\n\nexport function retrieveDatabaseEntry({ database, protocol, address }, structure) {\n  const server = retrieveServerEntry({ protocol, address }, structure);\n\n  return server.databases.find(db => db.special.database === database);\n}\n\nconst getStatePath = state => state.explorer.state.path;\nconst getStructured = state => state.explorer.structured.dbms;\nconst getSessions = state => state.explorer.sessions;\nconst getSessionsFlags = state => state.explorer.flags.sessions;\nconst getTopSqlStatements = state => state.explorer.topSqlStatements;\nconst getTopSqlStatementsFlags = state => state.explorer.flags.topSqlStatements;\nconst getStoragePointsLoadingFlag = state => state.explorer.flags.storage.loadingPoints;\nconst getStorageDetailsLoadingFlag = state => state.explorer.flags.storage.loadingDetails;\nconst getSelectedStorage = state => state.explorer.storage.selected;\nconst getStoredEntries = state => state.explorer.storage.storedEntries;\nconst getSelectedObject = state => state.explorer.objects.selectedObject;\nconst getSelectedOwner = state => state.explorer.objects.selectedOwner;\nconst getObjectsEntries = state => state.explorer.objects.storedEntries;\nconst getObjectsLoadingFlag = state => state.explorer.flags.objects.loading;\n\nexport const getFullPath = createSelector([getStatePath, getStructured], (fullPath, dbms) => {\n  const pathArr = fullPath.split('--');\n  return dbms\n    .find(({ path }) => path === pathArr[0])\n    ?.servers.find(({ address }) => address === pathArr[1])\n    ?.databases.find(({ special }) => special.database === pathArr[2])?.name;\n});\n\nexport const haveStorageData = createSelector(\n  [getFullPath, getStoredEntries],\n  (fullPath, storedEntries) => {\n    const selectedStorage = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedStorage).length > 0;\n  }\n);\n\nexport const getFormattedStorage = createSelector(\n  [getFullPath, getStoredEntries, getStoragePointsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    const points = storedEntries[fullPath]?.points;\n    if (isLoading || !_.isArray(points)) {\n      return [];\n    }\n    const factor = 1024;\n    return points.map(point => {\n      let usage = (point.Used_MB / point.Total_MB) * 100;\n      if (usage < 0) {\n        usage = 0;\n      }\n      return {\n        ns: point.Tablespace,\n        freePerc: point['Pct._Free'],\n        freeGB: point.Free_MB / factor,\n        totalGB: point.Total_MB / factor,\n        usedGB: point.Used_MB / factor,\n        usage\n      };\n    });\n  }\n);\n\nexport const haveObjectsData = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const selectedObjects = storedEntries[fullPath] || {};\n\n    return Object.keys(selectedObjects).length > 0;\n  }\n);\n\nexport const getStorageDetailsData = createSelector(\n  [\n    getFullPath,\n    getStoredEntries,\n    getFormattedStorage,\n    getStorageDetailsLoadingFlag,\n    getSelectedStorage\n  ],\n  (fullPath, storedEntries, list, isLoading, selectedNS) => {\n    const details = storedEntries[fullPath]?.details;\n    if (isLoading || !_.isArray(details)) {\n      return {\n        tablespace: {},\n        files: []\n      };\n    }\n    return {\n      tablespace: list.find(({ ns }) => ns === selectedNS),\n      files: details.filter(({ TABLESPACE_NAME }) => TABLESPACE_NAME === selectedNS)\n    };\n  }\n);\n\nexport const getStructuredObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n\n    const objects = storedEntries[fullPath] || {};\n    const tree = Object.keys(objects).reduce((acc, key) => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          if (acc[object.OWNER] && !acc[object.OWNER].includes(key)) {\n            acc[object.OWNER].push(key);\n          } else {\n            acc[object.OWNER] = [key];\n          }\n        });\n      return acc;\n    }, []);\n    return Object.keys(tree).map(key => ({ owner: key, objects: tree[key] }));\n  }\n);\n\nexport const getInvalidObjects = createSelector(\n  [getFullPath, getObjectsEntries, getObjectsLoadingFlag],\n  (fullPath, storedEntries, isLoading) => {\n    if (isLoading) {\n      return [];\n    }\n    const invalidObjects = [];\n    const objects = storedEntries[fullPath] || {};\n    Object.keys(objects).forEach(key => {\n      _.isArray(objects[key]) &&\n        objects[key].forEach(object => {\n          const included = invalidObjects.findIndex(\n            ({ owner, object: name }) => owner === object?.OWNER && name === key\n          );\n          if (object && object.STATUS !== 'VALID' && included === -1) {\n            invalidObjects.push({ owner: object.OWNER, object: key });\n          }\n        });\n    });\n    return invalidObjects;\n  }\n);\n\nexport const getSelectedObjectData = createSelector(\n  [getSelectedObject, getSelectedOwner, getFullPath, getObjectsEntries],\n  (object, owner, fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!object || !owner || !_.isObject(objects) || !_.isArray(objects[object])) {\n      return [];\n    }\n    return objects[object].filter(({ OWNER }) => OWNER === owner);\n  }\n);\n\nexport const getObjectsDataByProcess = createSelector(\n  [getFullPath, getObjectsEntries],\n  (fullPath, storedEntries) => {\n    const objects = storedEntries[fullPath];\n    if (!_.isObject(objects)) {\n      return [];\n    }\n    return Object.values(objects);\n  }\n);\n\nexport function objectsSelectorResolver(state, protocol) {\n  if (SystemExplorerFeatureUtil.shouldLoadObjectsByProcess(protocol)) {\n    return getObjectsDataByProcess(state);\n  }\n  return getSelectedObjectData(state);\n}\n\nexport const getSortedSessions = createSelector(\n  [getSessions, getSessionsFlags],\n  (sessions, { loading, sort }) => {\n    if (loading || !_.isArray(sessions)) {\n      return [];\n    }\n    if (sort === undefined) {\n      return sessions;\n    }\n    let sortFunction;\n    // Backend doesn't support sorting at this time. Consider moving sort to backend though\n    if (sort.order === 'asc') {\n      sortFunction = (a, b) => {\n        return new Date(a[sort.sortKey]).getTime() - new Date(b[sort.sortKey]).getTime();\n      };\n    } else {\n      sortFunction = (a, b) => {\n        return new Date(b[sort.sortKey]).getTime() - new Date(a[sort.sortKey]).getTime();\n      };\n    }\n    return sessions.slice().sort(sortFunction);\n  }\n);\n\nexport const selectTopSqlStatements = createSelector(\n  [getTopSqlStatements, getTopSqlStatementsFlags],\n  (statementsTxt, { loading }) => {\n    if (loading || !statementsTxt) {\n      return [];\n    }\n\n    const statementsJson = (statementsTxt || '').split('\\n')[1];\n    return statementsJson ? JSON.parse(statementsJson) : [];\n  }\n);\n\nexport const getBackup = (database, backups) => {\n  const backup = backups.find(db => db.name === database.name)?.backup;\n\n  return backup;\n};\n\nexport const getDBStatus = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n\n  return status;\n};\n\nexport const getDBStatusInfo = (database, statuses) => {\n  const status = statuses.find(db => db.name === database.name)?.status || 'not-connected';\n  const info = statuses.find(db => db.name === database.name)?.message;\n\n  return dbMessage(status, info);\n};\n\nexport const STATUS_TYPES = {\n  down: 'down',\n  up: 'up',\n  error: 'error',\n  notConnected: 'not-connected',\n  notFound: 'not found',\n};\n\nexport const getDBMSStatus = (dbms, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n\n  const allStatuses = {};\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n\n  return 'not-connected';\n};\n\nexport const getDBMSStatusInfo = (dbms, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const dbmsStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': []\n  };\n\n  statuses\n    .filter(d => d.dbms === dbms.name)\n    .forEach(function findStatus(entry) {\n      dbmsStatus[entry.status] && dbmsStatus[entry.status].push({\n        server: entry.server,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (dbmsStatus.down.length > 0) {\n    if (dbmsStatus.down.length === 1) {\n      message += `${dbmsStatus.down[0].server} has a database down. `;\n    } else {\n      message += `The following servers: ${dbmsStatus.down.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database down. `;\n    }\n  }\n\n  if (dbmsStatus.error.length > 0) {\n    if (dbmsStatus.error.length === 1) {\n      message += `${dbmsStatus.error[0].server} has a database with error. `;\n    } else {\n      message += `\\n The following servers: ${dbmsStatus.error.map((sv, index) => {\n        if (index < dbmsStatus.down.length - 1) {\n          return sv.server;\n        }\n        return ` ${sv.server}`;\n      })} have at least one database with error. `;\n    }\n  }\n\n  if (dbmsStatus['not-connected'].length > 0) {\n    if (dbmsStatus['not-connected'].length === 1) {\n      message += `${dbmsStatus['not-connected'][0].server} server has a database which status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases from servers: (${dbmsStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    dbmsStatus.down.length === 0 &&\n    dbmsStatus.error.length === 0 &&\n    dbmsStatus['not-connected'].length === 0 &&\n    dbmsStatus.up.length > 0\n  ) {\n    message = 'All servers are up.';\n  }\n\n  return message;\n};\n\nexport const getServerStatus = (server, statuses) => {\n  if (statuses.length === 0) return 'not-connected';\n  const allStatuses = {};\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      allStatuses[entry.status] = true;\n    });\n\n  if (allStatuses[STATUS_TYPES.up]) return 'up';\n  if (allStatuses[STATUS_TYPES.error]) return 'error';\n  if (allStatuses[STATUS_TYPES.down]) return 'down';\n  if (allStatuses[STATUS_TYPES.notFound]) return 'not found';\n\n  return 'not-connected';\n};\n\nexport const getServerStatusInfo = (server, statuses) => {\n  if (statuses.length === 0) {\n    return '';\n  }\n\n  const serverStatus = {\n    down: [],\n    error: [],\n    up: [],\n    'not-connected': [],\n    'not found': [],\n  };\n\n  statuses\n    .filter(sv => sv.server === server.address)\n    .forEach(function findStatus(entry) {\n      serverStatus[entry.status] && serverStatus[entry.status].push({\n        dbName: entry.dbName,\n        message: dbMessage(entry.status, entry.message)\n      });\n    });\n\n  let message = '';\n\n  if (serverStatus.down.length > 0) {\n    if (serverStatus.down.length === 1) {\n      message += `${serverStatus.down[0].dbName} database is down. `;\n    } else {\n      message += `The following databases: ${serverStatus.down.map(sv => sv.dbName)} are down. `;\n    }\n  }\n\n  if (serverStatus.error.length > 0) {\n    if (serverStatus.error.length === 1) {\n      message += `${serverStatus.error[0].dbName} database has errors. `;\n    } else {\n      message += `Errors reported in databases: (${serverStatus.error.map(sv => sv.dbName)}). `;\n    }\n  }\n\n  if (serverStatus['not-connected'].length > 0) {\n    if (serverStatus['not-connected'].length === 1) {\n      message += `${serverStatus['not-connected'][0].dbName} database status could not be determined. Please refresh. `;\n    } else {\n      message += `Unknown status for databases: (${serverStatus['not-connected'].map(\n        sv => sv.dbName\n      )}). Please refresh. `;\n    }\n  }\n\n  if (\n    serverStatus.down.length === 0 &&\n    serverStatus.error.length === 0 &&\n    serverStatus['not-connected'].length === 0 &&\n    serverStatus.up.length > 0\n  ) {\n    message = 'All databases are up.';\n  }\n\n  return message;\n};\n\nexport const getEntityPendingStatus = (entity, statuses, type) => {\n  const pathArray = entity.path.split('--');\n  const dbms = pathArray[0];\n  if (statuses.length === 0) return { label: `Loading ${type} status...`, loading: true };\n\n  if (type === 'server') {\n    return statuses\n      .filter(en => en.dbms === dbms && en.server === entity.address)\n      .find(e => e.loading)\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh dbs status', loading: false };\n  }\n\n  if (type === 'db') {\n    return statuses.find(db => db.name === entity.name)?.loading\n      ? { label: 'Refreshing...', loading: true }\n      : { label: 'Refresh db status', loading: false };\n  }\n\n  return { label: 'Refresh', type: false };\n};\n\nexport const dbMessage = (status, message) => {\n  if (!message) {\n    if (status === 'up') {\n      return 'Instance is up.';\n    }\n\n    if (status === 'error') {\n      return 'An unknown error has occurred on this instance.';\n    }\n\n    if (status === 'down') {\n      return 'Instance is down.';\n    }\n\n    if (status === 'not-connected' || status === 'not found') {\n      return 'Please refresh in order to get the instance status.';\n    }\n  }\n\n  return message;\n};\n","import Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const LimitlessTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n    maxWidth: 'none'\n  }\n}))(Tooltip);\n","import React, { useState, useCallback, useMemo, useReducer } from 'react';\nimport { produce } from 'immer';\nimport { useFormikContext } from 'formik';\nimport _ from 'lodash';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { mdiArrowExpand } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Modal } from 'shared/components/overlays';\nimport { ParameterLoader } from 'shared/components/loaders';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Ensure } from 'core/components/Ensure/Ensure';\nimport { Checkbox } from '../../controls/Checkbox/Checkbox';\nimport { Text } from './Generic';\nimport { formatAccount } from './formatters';\nimport check from './field-level-validations';\nimport { ADDITIONAL_ACCOUNT_FILTERS } from './filters';\nimport { deepCopy } from 'shared/lib/deep-copy';\n\nexport const RSAKey = props => {\n  return <Text multiline {...props} />;\n};\n\nexport const FQName = ({ recieved, ...props }) => {\n  const { values } = useFormikContext();\n\n  const fqname = recieved?.fqname || recieved?.name || null;\n  let name = values[`fqname--${props?.name}`];\n  let namespace = values['fqname--namespace'];\n\n  // use the value received from the invocation\n  if (fqname && name === undefined) {\n    const parts = fqname.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  // use the value that was manually typed\n  if (name !== undefined && name.slice(-1) !== '.') {\n    const parts = name.split('.');\n\n    if (parts.length === 1) {\n      [name] = parts;\n    }\n\n    if (parts.length > 1) {\n      namespace = _.initial(parts).join('.');\n      name = _.last(parts);\n    }\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '30px' }}\n        value={name}\n        description=\"The relative or fully-qualified name of the process to be created.\"\n        required\n        name={`fqname--${props?.name}`}\n        label=\"name\"\n        disabled={props.disabled}\n      />\n      <NamespaceSelect\n        name=\"fqname--namespace\"\n        label=\"Parent namespace\"\n        description=\"namespace (leave blank for relative name)\"\n        value={namespace}\n        disabled={props.disabled}\n        type=\"fqname\"\n      />\n    </>\n  );\n};\n\nexport function QualifiedName(props) {\n  const validations = useMemo(() => check.merge(check.masName, props.required ?? check.required), [\n    props.required\n  ]);\n\n  return <Text validate={validations} {...props} type=\"text\" />;\n}\n\n/**\n * TODO:\n * These should be retireved through a connection\n * Platforms are protocols associated for accounts\n * For now they can be hardcoded\n */\nexport const AccountSelect = ({ protocols = [], ...props }) => {\n  const { values } = useFormikContext();\n  const [showUrls, setShowUrls] = useState(false);\n  const boxName = `${props.name}-show-urls`;\n\n  const showToggle = useCallback(e => {\n    setShowUrls(e.target.checked);\n  }, []);\n\n  return (\n    <Ensure type=\"account\" inlineLoader>\n      {({ data: accounts }) => {\n        let list = accounts;\n\n        if (protocols && protocols.length) {\n          if (ADDITIONAL_ACCOUNT_FILTERS[props.name]) {\n            const additionalFilters = ADDITIONAL_ACCOUNT_FILTERS[props.name];\n            list = additionalFilters.reduce((acc, filterFn) => {\n              acc = filterFn(deepCopy(acc), values);\n              return acc;\n            }, accounts);\n          }\n\n          list = list.filter(account => protocols.includes(account.protocol));\n        }\n\n        const options = list.map(account => ({\n          label: showUrls ? formatAccount(account) : account.name,\n          value: account.name\n        }));\n\n        /**\n          TODO: filter by protocol\n         */\n        if (protocols.length) {\n          accounts.filter(Boolean);\n        }\n\n        return (\n          <FormGroup>\n            <Text {...props} options={options} />\n            <Checkbox\n              size=\"small\"\n              id={boxName}\n              name={boxName}\n              onChange={showToggle}\n              disabled={props.disabled}\n              label=\"Show Account URLs\"\n            />\n          </FormGroup>\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const PLATFORMS = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'MariaDB', value: 'MariaDB', tester: /mariadb\\./ },\n  { label: 'MySQL', value: 'MySQL', tester: /mysql\\./ },\n  { label: 'Oracle', value: 'Oracle', tester: /oracle\\./ },\n  { label: 'PostgreSQL', value: 'PostgreSQL', tester: /pgsql\\./ },\n  {\n    label: 'Microsoft SQL Server',\n    value: 'Microsoft SQL Server',\n    tester: /microsoft\\.sqlserver\\./\n  },\n  { label: 'Oracle RDS', value: 'Oracle RDS', tester: /.rds\\.oracle\\./ }\n];\n\nexport const PROCESS_TYPES = [\n  { label: 'All', value: 'All', tester: /^./ },\n  { label: 'Backup', value: 'backup', tester: /\\.backup\\./ },\n  { label: 'Config', value: 'config', tester: /\\.config\\./ },\n  { label: 'Import', value: 'import', tester: /\\.import\\./ },\n  { label: 'Monitor', value: 'monitor', tester: /\\.monitor\\./ },\n  { label: 'Oda', value: 'oda', tester: /\\.oda\\./ },\n  { label: 'Patch', value: 'patch', tester: /\\.patch\\./ },\n  { label: 'Patching', value: 'patching', tester: /\\.patching\\./ },\n  { label: 'RDS', value: 'rds', tester: /\\.rds\\./ },\n  { label: 'Run', value: 'run', tester: /\\.run\\./ },\n  { label: 'Security', value: 'security', tester: /\\.security\\./ },\n  { label: 'Util', value: 'util', tester: /\\.util\\./ },\n];\n\nexport const PlatformSelect = props => {\n  const { values } = useFormikContext();\n\n  let platformValue = values?.platform ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availablePlatforms = PLATFORMS.slice(1).reverse();\n    platformValue =\n      availablePlatforms.find(platform => platform.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={platformValue} name=\"platform\" {...props} options={PLATFORMS} />;\n};\n\nexport const ProcessTypeSelect = props => {\n  const { values } = useFormikContext();\n\n  let typeValue = values?.type ?? 'All';\n  const processValue = values?.process ?? '';\n\n  if (processValue) {\n    const availableTypes = PROCESS_TYPES.slice(1).reverse();\n    typeValue =\n      availableTypes.find(type => type.tester.test(processValue))?.value ?? 'All';\n  }\n\n  return <Text type=\"text\" value={typeValue} name=\"type\" {...props} options={PROCESS_TYPES} />;\n};\n\nexport const ProcessSelect = props => {\n  const { values } = useFormikContext();\n  const platformValue = values?.platform ?? '';\n  const typeValue = values?.type ?? '';\n\n  let platform = PLATFORMS[0];\n  let type = PROCESS_TYPES[0];\n\n  if (platformValue) {\n    platform = PLATFORMS.find(p => p.value === platformValue);\n  }\n\n  if (typeValue) {\n    type = PROCESS_TYPES.find(p => p.value === typeValue);\n  }\n\n  return (\n    <Ensure type=\"namespace\" inlineLoader>\n      <Ensure type=\"process\" inlineLoader>\n        {({ data }) => {\n          let processes = data;\n\n          if (platform && platform.value !== 'all') {\n            processes = processes.filter(process => platform.tester.test(process.name));\n          }\n\n          if (type && type.value !== 'all') {\n            processes = processes.filter(process => type.tester.test(process.name));\n          }\n\n          /** TODO, CHECK */\n          processes = processes.filter(process => {\n            if (processes.meta && process.meta.appearance) {\n              return process.meta.appearance !== 'Hidden';\n            }\n\n            return true;\n          });\n\n          // display only processes that have the is_executable === true\n          // the others need to be compiled first\n          const OPTIONS = processes\n            .filter(p => p.is_executable)\n            .map(item => ({\n              value: item.name,\n              label: item.name,\n              description: item.description,\n              disabled: item.meta && item.meta.appearance === 'Greyed'\n            }));\n\n          return <Text type=\"text\" defaultValue=\"\" name=\"process\" {...props} options={OPTIONS} />;\n        }}\n      </Ensure>\n    </Ensure>\n  );\n};\n\nexport const NamespaceSelect = ({ value, ...props }) => {\n  const { values } = useFormikContext();\n  const defaultValue = values.namespace || '';\n  let customVal = value;\n\n  return (\n    <Ensure type=\"namespace\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading namespaces...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load namespaces.</ParameterLoader>;\n        }\n\n        let namespaces = data;\n\n        namespaces = namespaces.filter(namespace => {\n          if (namespace.meta && namespace.meta.appearance) {\n            return namespace.meta.appearance !== 'Hidden';\n          }\n\n          return true;\n        });\n\n        const OPTIONS = namespaces.map(item => ({\n          value: item.name,\n          label: item.name,\n          disabled: item.meta && item.meta.appearance === 'Greyed'\n        }));\n\n        if (props?.type === 'fqname') {\n          customVal = OPTIONS.find(o => o.value === value)?.value || '';\n        }\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            name=\"namespace\"\n            value={customVal}\n            {...props}\n            options={OPTIONS}\n            required\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nexport const FormPrototypeSelect = props => {\n  return (\n    <Ensure type=\"prototype\" inlineLoader>\n      {({ data: prototypes }) => {\n        const list = prototypes || [];\n\n        const options = list.map(prototype => ({\n          label: prototype.name,\n          value: prototype.name\n        }));\n\n        return <Text fullWidth {...props} description=\"\" options={options} />;\n      }}\n    </Ensure>\n  );\n};\n\nexport const ModeSelect = props => {\n  const { values } = useFormikContext();\n  const defaultValue = values.mode || '';\n\n  return (\n    <Ensure type=\"type\" pipe>\n      {({ status, data }) => {\n        if (status === 'fetching' || !data) {\n          return <ParameterLoader>Loading type...</ParameterLoader>;\n        }\n\n        if (status === 'failed') {\n          return <ParameterLoader>Failed to load types.</ParameterLoader>;\n        }\n\n        const modes = data.filter(type => type.name === 'mas0300.sys.account.privilege_mode')[0];\n\n        if (modes.meta && modes.meta.appearance === 'Hidden') {\n          return null;\n        }\n\n        const OPTIONS =\n          modes.enumerations &&\n          modes.enumerations.map(item => ({\n            value: item.label,\n            label: item.label,\n            disabled: item.meta && item.meta.appearance === 'Greyed'\n          }));\n\n        return (\n          <Text\n            type=\"text\"\n            defaultValue={defaultValue}\n            disabled={modes.meta && modes.meta.appearance === 'Greyed'}\n            name=\"process\"\n            {...props}\n            options={OPTIONS}\n          />\n        );\n      }}\n    </Ensure>\n  );\n};\n\nfunction variadicListReducer(list, action) {\n  switch (action.type) {\n    case 'add_new_parameter':\n      return produce(list, draft => {\n        draft.push({ name: '', type: '', deflt: undefined, description: null, value: '' });\n      });\n\n    case 'remove_parameter':\n      return produce(list, draft => {\n        draft.pop();\n      });\n\n    default:\n      return list;\n  }\n}\n\nfunction useVariadicList(recieved) {\n  const [list, dispatch] = useReducer(variadicListReducer, recieved?.replvars || []);\n\n  return { list, dispatch };\n}\n\nexport const Variadic = ({ recieved, disabled }) => {\n  const { values } = useFormikContext();\n  const displayDeftlDesc = selectedProcess !== 'vendita.oracle.rdbms.cli.sqlplus.execute';\n\n  const { list, dispatch } = useVariadicList(recieved);\n\n  const selectedProcess = values.process;\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvars</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Ensure type=\"type\">\n          {({ data: datatypes }) => {\n            const options = datatypes\n              .filter(dataType => {\n                if (\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.script' ||\n                  selectedProcess === 'mas0300.os.svc.db.data.sql.query_import' ||\n                  selectedProcess === 'vendita.oracle.rdbms.cli.sqlplus.execute' ||\n                  selectedProcess === 'dbatools.oracle.run.import_sqlplus_query'\n                ) {\n                  return dataType.name === 'string' || dataType.name === 'integer';\n                }\n                return true;\n              })\n              .map(dataType => {\n                return {\n                  label: dataType.name,\n                  value: dataType.name\n                };\n              });\n\n            return (\n              <>\n                <div>\n                  {list.map((item, index) => (\n                    <React.Fragment key={index}>\n                      <VariadicInstance\n                        data={item}\n                        index={index}\n                        defltDesc={displayDeftlDesc}\n                        types={options}\n                        disabled={disabled}\n                      />\n                    </React.Fragment>\n                  ))}\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'flex-end'\n                  }}\n                >\n                  {list.length > 0 && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        dispatch({ type: 'remove_parameter' });\n                      }}\n                      disabled={disabled}\n                    >\n                      Remove\n                    </Button>\n                  )}\n                  <Button\n                    onClick={() => {\n                      dispatch({ type: 'add_new_parameter' });\n                    }}\n                    disabled={disabled}\n                  >\n                    Add\n                  </Button>\n                </div>\n              </>\n            );\n          }}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nfunction VariadicInstance({ data = {}, index, defltDesc, types, disabled }) {\n  const name_base = `replvar--${index}`;\n\n  let parsedDeflt = data.deflt;\n\n  if (data.deflt) {\n    parsedDeflt = data.deflt.replace(\"str('\\\"'\", '').replace(\"'\\\"')\", '');\n  }\n\n  return (\n    <>\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Name\"\n        type=\"text\"\n        name={`${name_base}--name`}\n        value={data.name}\n        disabled={disabled}\n        validate={check.merge(check.firstCharLetter, check.masName)}\n        required\n      />\n      <Text\n        style={{ marginBottom: '15px' }}\n        label=\"Type\"\n        type=\"text\"\n        name={`${name_base}--type`}\n        options={types}\n        value={data.type}\n        disabled={disabled}\n        required\n      />\n      {defltDesc && (\n        <>\n          <Text\n            style={{ marginBottom: '15px' }}\n            label=\"Deflt\"\n            type=\"text\"\n            name={`${name_base}--deflt`}\n            value={parsedDeflt}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n          <Text\n            style={{ marginBottom: '30px' }}\n            label=\"Description\"\n            type=\"text\"\n            name={`${name_base}--description`}\n            value={data.description}\n            defaultValue={null}\n            disabled={disabled}\n            validate={check.firstCharLetter}\n          />\n        </>\n      )}\n      {!defltDesc && (\n        <Text\n          style={{ marginBottom: '15px' }}\n          label=\"Value\"\n          type=\"text\"\n          name={`${name_base}--value`}\n          value={data.value}\n          disabled={disabled}\n        />\n      )}\n    </>\n  );\n}\n\nexport const Multiline = props => {\n  const [open, setOpen] = useState(false);\n  const { values } = useFormikContext();\n  const value = values[props.name];\n\n  return (\n    <>\n      <Text\n        InputProps={{\n          startAdornment: (\n            <InputAdornment>\n              <LightTooltip title=\"Expand\">\n                <SvgIcon\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    setOpen(true);\n                  }}\n                >\n                  <path d={mdiArrowExpand} />\n                </SvgIcon>\n              </LightTooltip>\n            </InputAdornment>\n          )\n        }}\n        value={value}\n        isPopup={open}\n        multiline\n        {...props}\n      />\n      <Modal open={open}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <Paper.Content>\n            <Text value={value} multiline isPopup={open} variant=\"standard\" {...props} />\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={() => setOpen(false)}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const Replvalues = ({ recieved, disabled, ...props }) => {\n  const { values } = useFormikContext();\n  const keys = Object.keys(values);\n  const replvars = keys.filter(key => key.startsWith('replvar'));\n  const valuesNr = replvars.length / 4;\n  const replvaluesParams = [];\n\n  if (valuesNr > 0) {\n    for (let i = 0; i < valuesNr; i++) {\n      const type =\n        values[`replvar--${i}--type`] === 'integer' ? 'number' : values[`replvar--${i}--type`];\n      const label = values[`replvar--${i}--name`];\n      const name = `replvalue--${i}`;\n      const value =\n        recieved?.replvalues && recieved.replvalues[values[`replvar--${i}--name`]]\n          ? recieved.replvalues[values[`replvar--${i}--name`]]\n          : values[`replvalue--${i}`];\n      replvaluesParams.push({ type, label, name, value });\n    }\n  }\n\n  if (replvaluesParams.length > 0) {\n    return (\n      <>\n        <Section>\n          <Section.Header>\n            <Section.Title>replvalues</Section.Title>\n          </Section.Header>\n        </Section>\n        {replvaluesParams.map((repl, index) => {\n          return (\n            <Text\n              key={index}\n              style={{ marginBottom: '15px' }}\n              label={repl.label}\n              type={repl.type}\n              name={repl.name}\n              value={repl.value}\n              disabled={disabled}\n              description={props.description}\n            />\n          );\n        })}\n      </>\n    );\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>replvalues</Section.Title>\n      </Section.Header>\n    </Section>\n  );\n};\n\nexport const Uuid = props => {\n  return <Text validate={check.uuid} {...props} />;\n};\n","export const InvocationStatus = {\n  NEW: '__NEW__',\n  ALL: '__ALL__',\n  NOT_FETCHED: 'NOT_FETCHED',\n  ABORTED: 'ABORTED',\n  SCHEDULED: 'SCHEDULED',\n  SUCCEEDED: 'SUCCEEDED',\n  FAILED: 'FAILED',\n  EXECUTING: 'EXECUTING',\n  DELAYED: 'DELAYED',\n  KILLED: 'KILLED'\n};\n\nexport const AllowOutputFor = [\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED,\n  InvocationStatus.FAILED,\n  InvocationStatus.SUCCEEDED,\n  InvocationStatus.EXECUTING\n];\n\nexport const AllowGeneralEditingFor = [InvocationStatus.NEW];\n\nexport const CannotShowStatusFor = [\n  InvocationStatus.NEW,\n  InvocationStatus.ALL,\n  InvocationStatus.NOT_FETCHED\n];\n\nexport const FAILURES = [\n  InvocationStatus.FAILED,\n  InvocationStatus.ABORTED,\n  InvocationStatus.KILLED\n];\n\nexport const SUCESSES = [InvocationStatus.SUCCEEDED];\n\nexport const WARNINGS = [InvocationStatus.DELAYED, InvocationStatus.SCHEDULED];\n","export function hasWritePrivileges(entity) {\n  return entity?.privileges?.effective?.includes?.('write');\n}\n\nexport function hasOnlyReadPrivilege(entity) {\n  if (entity?.privileges?.effective?.length === 1 && entity?.privileges?.effective[0] === 'read') {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isOnlySelectGroup(details) {\n  if (!details) return false;\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (\n    (userDetails.member_of.length === 1 && userDetails.member_of[0] === 'select') ||\n    (userDetails.member_of.length === 2 &&\n      userDetails.member_of.includes('select') &&\n      userDetails.member_of.includes('user'))\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isAdmin(details) {\n  if (!details) return false;\n\n  const userDetails = details.toJS();\n\n  if (!userDetails.member_of) return false;\n\n  if (userDetails.member_of.includes('admin')) {\n    return true;\n  }\n\n  return false;\n}\n","import React, { useState } from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nexport const SubmitButton = ({ children = 'Submit', confirmation, ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating, dirty } = useFormikContext();\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        disabled={!dirty || isSubmitting || isValidating}\n        onClick={() => {\n          console.log('submitting', values); // eslint-disable-line\n          if (confirmation) {\n            setOpen(true);\n          } else {\n            submitForm();\n          }\n        }}\n        {...props}\n      >\n        {children}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '350px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n          <Paper.Content scrollable={false}>\n            <Result type=\"fail\">\n              <BodyText>Are you sure you want to save?</BodyText>\n            </Result>\n          </Paper.Content>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                }}\n              >\n                No\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button\n                onClick={() => {\n                  setOpen(false);\n                  submitForm();\n                }}\n              >\n                Yes\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { bool, func, node, shape, object, string } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './AvatarCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nexport const AvatarCard = ({\n  label,\n  avatar = {},\n  selected,\n  data,\n  onSelect,\n  action,\n  description,\n  ...props\n}) => {\n  const focusable = {\n    ...(onSelect && {\n      onFocus: useCallback(\n        event => {\n          event.stopPropagation();\n          onSelect(data);\n        },\n        [onSelect, data]\n      ),\n      tabIndex: props.disabled ? -1 : 0\n    })\n  };\n\n  return (\n    <div\n      {...focusable}\n      className={classnames('avatar-card', { selected })}\n      data-qa={`avatar-card-of-${label}`}\n      {...props}\n    >\n      <Avatar className=\"card-avatar\" alt={label} src={avatar.src}>\n        {avatar.initial || avatar.fallback}\n      </Avatar>\n      <span className=\"card-label\">{label}</span>\n      <div className=\"right-slot\">\n        {action && (\n          <span onClick={containEvent} className=\"action-slot\">\n            {action}\n          </span>\n        )}\n        {typeof description === 'string' && (\n          <LightTooltip placement=\"right\" title={description}>\n            <SvgIcon>\n              <Icon path={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction containEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nAvatarCard.propTypes = {\n  label: node,\n  selected: bool,\n  disabled: bool,\n  avatar: shape({\n    src: string,\n    fallback: node\n  }),\n  data: object,\n  onSelect: func,\n  action: node\n};\n","import * as Yup from 'yup';\n\nexport const mergeValidations = (...callbacks) => value => {\n  let error;\n\n  callbacks.forEach(provided => {\n    if (provided && typeof provided === 'function') {\n      error = provided(value);\n    }\n  });\n\n  return error;\n};\n\nexport const checkRequired = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkRequiredNotNullable = async value => {\n  try {\n    await Yup.string()\n      .required('Field is required')\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkEmail = value => {\n  try {\n    Yup.string()\n      .nullable()\n      .email('Invalid email format.')\n      .validateSync(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkPhoneNumber = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUnsignedInt = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[-]!$/, {\n        excludeEmptyString: true,\n        message: 'The parameter must be unsigned.'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkName = value => {\n  if (!/^(?:[a-z_][a-z0-9_\\\\.]*)$/i.test(value) || (value && value.substr(-1) === '.')) {\n    return 'A valid MAS relative name is required.';\n  }\n};\n\nexport const checkFirstLetter = async value => {\n  try {\n    await Yup.string()\n      .nullable()\n      .matches(/^[a-zA-Z].*/, {\n        excludeEmptyString: true,\n        message: 'First character must be a letter'\n      })\n      .validate(value);\n  } catch (e) {\n    return e.message;\n  }\n};\n\nexport const checkUuid = value => {\n  if (value) {\n    if (!/^[a-fA-F0-9-]+$/.test(value)) {\n      return 'Only hexadecimal values (0-9, a-f, A-F) and hyphens (\"-\") are allowed';\n    }\n    const copy = value.replace(/-/g, '');\n    if (copy.length !== 32) {\n      return 'A string of 32 hexadecimal with hyphens (\"-\") is required (ex: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)';\n    }\n  }\n};\n\nexport const noop = () => {};\n\nexport default {\n  merge: mergeValidations,\n  required: checkRequired,\n  required_not_null: checkRequiredNotNullable,\n  email: checkEmail,\n  phone: checkPhoneNumber,\n  unsigned_int: checkUnsignedInt,\n  unsigned_float: noop,\n  signed_float: noop,\n  masName: checkName,\n  firstCharLetter: checkFirstLetter,\n  uuid: checkUuid\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.shared;\n\nexport const jobsSelector = createSelector(localState, state => state.get('jobs'));\n\nexport const connectionsSelector = createSelector(localState, state => state.get('connections'));\n\nexport const jobsSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('jobs')\n); // eslint-disable-line\n\nexport const processesSearchedSelector = createSelector(localState, state =>\n  state.get('searchResults').get('processes')\n); // eslint-disable-line\n\nexport const globalFiltersSelector = createSelector(localState, state =>\n  state.get('globalFilters')\n); // eslint-disable-line\n","import { createSelector } from 'reselect';\n\n//\nexport const getCurrentUserName = createSelector(\n  state => state.session,\n  session => {\n    /** ImmutableJs object :( */\n    return session.get('currentUser').get('name');\n  }\n);\n\nexport const getCurrentUserDetails = createSelector(\n  state => state.session,\n  session => {\n    return session.get('currentUser').get('details');\n  }\n);\n","export const PROVIDE_EXECUTIVE_DASHBOARD = 'PROVIDE_EXECUTIVE_DASHBOARD';\nexport const PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD = 'PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD';\n\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const TOGGLE_SERVER = 'TOGGLE_SERVER';\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function postInvocation(body) {\n  try {\n    const { data } = await RestClient.post('/invocation', body);\n\n    return { result: data.result, invocations: data.data.invocations };\n  } catch (e) {\n    return { result: 'fail', invocations: [], messages: e.messages };\n  }\n}\n\nexport function requestInvocation(uuid) {\n  return RestClient.get(`/invocation/${uuid}`);\n}\n\nexport async function fetchInvocation(uuid) {\n  try {\n    const response = await RestClient.get(`/invocation/${uuid}`);\n\n    return {\n      result: 'success',\n      invocation: response.data.data.invocations[0]\n    };\n  } catch (e) {\n    console.log(e); // eslint-disable-line\n    return { result: 'fail' };\n  }\n}\n\nexport async function fetchInvocationOutput(uuid) {\n  return RestClient.get(`/invocation/${uuid}/display`, {\n    page_size: 2147483645\n  });\n}\n\nexport async function invocationOutputPoller(uuid) {\n  let statusChecksCount = 0;\n  let pollerFinished = false;\n  let succeeded = false;\n\n  while (statusChecksCount < 10 && !pollerFinished) {\n    const invocationStatus = await sleep(fetchInvocation.bind(this, uuid)); // eslint-disable-line\n    statusChecksCount++;\n    succeeded = invocationStatus.invocation.status === 'SUCCEEDED';\n    pollerFinished = succeeded || invocationStatus.invocation.status === 'FAILED';\n  }\n\n  return succeeded ? fetchInvocationOutput(uuid) : Promise.resolve(null);\n}\n\nexport function parseInvocationResult(invocationOutput) {\n  const resultText = invocationOutput && invocationOutput.data.data.outputs ? invocationOutput.data.data.outputs[0].data.text : null;\n  const resultJsonString = (resultText || '').split('\\n')[1];\n  return resultJsonString ? JSON.parse(resultJsonString) : [];\n}\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function sleep(fn, ...args) {\n  await timeout(1000);\n  return fn(...args);\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nexport function loadAllUsersThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_USERS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_USERS, error));\n    }\n\n    return 'done';\n  };\n}\n\nexport function loadUserThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_USER, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_USER, error));\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(GRANT_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { user, key, type } = params;\n\n    dispatch(creators.loading(REVOKE_PRIVILEGE, user));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n    }\n  };\n}\n\nexport function addUserToGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/grant`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, allUsers.data));\n\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function removeUserFromGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(ADD_USER_TO_GROUPS, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(ADD_USER_TO_GROUPS, response.data));\n      return 'done';\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USER_TO_GROUPS, errorMsg));\n      return { type: 'fail', message: errorMsg };\n    }\n  };\n}\n\nexport function deactivateUserThunk(user) {\n  return async dispatch => {\n    dispatch(creators.loading(DEACTIVATE_USER, user));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}/revoke`, {\n        groups: user.member_of\n      });\n\n      const allUsers = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(DEACTIVATE_USER, allUsers.data));\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`);\n      dispatch(creators.success(LOAD_USER, response.data));\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DEACTIVATE_USER, error));\n\n      return error.data;\n    }\n  };\n}\n\nexport function createUserThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.username,\n      password: values.password,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_USER, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.USERS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_USERS, refreshed.data));\n\n      dispatch(creators.success(CREATE_USER));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_USER, error));\n      return error?.response?.data;\n    }\n  };\n}\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport function loadAllGroupsThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_ALL_GROUPS));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_ALL_GROUPS, error.data));\n\n      return error.data;\n    }\n  };\n}\n\nexport function loadGroupThunk(name) {\n  return async dispatch => {\n    dispatch(creators.loading(LOAD_GROUP, name));\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${name}`);\n      dispatch(creators.success(LOAD_GROUP, response.data));\n    } catch (error) {\n      dispatch(creators.fail(LOAD_GROUP, error.data));\n    }\n  };\n}\n\nexport function createGroupThunk(values) {\n  return async dispatch => {\n    const body = {\n      name: values.groupname,\n      description: values.description,\n      groups: values.groups\n    };\n    dispatch(creators.loading(CREATE_GROUP, body));\n\n    try {\n      const response = await RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, body);\n\n      const refreshed = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, {\n        page_size: 2147483645\n      });\n      dispatch(creators.success(LOAD_ALL_GROUPS, refreshed.data));\n\n      dispatch(creators.success(CREATE_GROUP));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(CREATE_GROUP, error));\n      return error?.response?.data;\n    }\n  };\n}\n\nexport function grantPrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(GRANT_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/grant/${type}/${key}`\n      );\n      dispatch(creators.success(GRANT_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(GRANT_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function revokePrivilegeThunk(params) {\n  return async dispatch => {\n    const { group, key, type } = params;\n    dispatch(creators.loading(REVOKE_PRIVILEGE, group));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}/revoke/${type}/${key}`\n      );\n      dispatch(creators.success(REVOKE_PRIVILEGE, response.data));\n\n      return response.data;\n    } catch (error) {\n      dispatch(creators.fail(REVOKE_PRIVILEGE, error));\n      return error.data;\n    }\n  };\n}\n\nexport function removeUsersFromGroupThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_USERS_FROM_GROUP, params));\n\n    try {\n      await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${params.user}/revoke`, {\n        groups: [params.group]\n      });\n\n      const group = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(REMOVE_USERS_FROM_GROUP, group.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_USERS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeSubGroupsThunk(params) {\n  return async dispatch => {\n    dispatch(creators.loading(REMOVE_GROUPS_FROM_GROUP, params));\n\n    try {\n      const response = await RestClient.patch(\n        `${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}/revoke`,\n        { groups: params.groups }\n      );\n      dispatch(creators.success(REMOVE_GROUPS_FROM_GROUP, response.data));\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(REMOVE_GROUPS_FROM_GROUP, { result: 'fail', messages: errorMsg }));\n\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function addUsersToGroupThunk(params) {\n  return async dispatch => {\n    const { group, users } = params;\n\n    dispatch(creators.loading(ADD_USERS_TO_GROUP, params));\n\n    try {\n      await Promise.all(\n        users.map(async user => {\n          return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}/grant`, {\n            groups: [group]\n          });\n        })\n      );\n\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${params.group}`);\n\n      dispatch(creators.success(ADD_USERS_TO_GROUP, response.data));\n\n      return response.data;\n    } catch (error) {\n      let errorMsg = error;\n      if (\n        error?.response?.data?.messages &&\n        error.response.data.messages.length > 0 &&\n        error.response.data.messages[0]?.text\n      ) {\n        errorMsg = error.response.data.messages[0]?.text.split('\\n')[0];\n      }\n\n      dispatch(creators.fail(ADD_USERS_TO_GROUP, errorMsg));\n      return { result: 'fail', messages: errorMsg };\n    }\n  };\n}\n\nexport function removeGroupThunk(group) {\n  return async dispatch => {\n    dispatch(creators.loading(DELETE_GROUP, group));\n\n    try {\n      await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group}`);\n      dispatch(creators.success(DELETE_GROUP));\n\n      dispatch(loadAllGroupsThunk());\n\n      return 'done';\n    } catch (error) {\n      dispatch(creators.fail(DELETE_GROUP, error));\n\n      return error.data;\n    }\n  };\n}\n","const DAY = 86400000;\nconst HOUR = 3600000;\nconst MINUTE = 60000;\nconst SECOND = 1000;\n\nexport const formatTimePeriod = (timeMillis) => {\n  let millisLeft = timeMillis;\n  const days = millisLeft / DAY;\n  millisLeft %= DAY;\n  const hours = millisLeft / HOUR;\n  millisLeft %= HOUR;\n  const minutes = millisLeft / MINUTE;\n  millisLeft %= MINUTE;\n  const seconds = millisLeft / SECOND;\n  millisLeft %= SECOND;\n\n  return [\n    days >= 1 ? `${Math.floor(days)}d` : null,\n    hours >= 1 ? `${Math.floor(hours)}h` : null,\n    minutes >= 1 ? `${Math.floor(minutes)}m` : null,\n    seconds >= 1 ? `${Math.floor(seconds)}s` : null,\n    millisLeft >= 1 ? `${Math.floor(millisLeft)}ms` : null\n  ].filter(Boolean).join(' ');\n};\n","import * as Yup from 'yup';\n\nexport function getInitialValues(parameters) {\n  const initialValues = {};\n\n  parameters.map(parameter => {\n    initialValues[parameter.name] = parameter.deflt !== null ? parameter.deflt : '';\n    return null;\n  });\n\n  return initialValues;\n}\n\nexport function getValidationSchema(parameters) {\n  const validationSchema = {};\n\n  parameters.map(parameter => {\n    validationSchema[parameter.name] = Yup.string();\n\n    if (parameter.is_required) {\n      validationSchema[parameter.name].required('A value is required');\n    }\n\n    return null;\n  });\n}\n\nexport function formatParameters(values) {\n  const parameters = {};\n\n  Object.keys(values).map(value => {\n    if (typeof values[value] === 'string') {\n      if (values[value].length > 0 || values[value].trim()) {\n        parameters[value] = values[value];\n      }\n    } else if (typeof values[value] === 'object') {\n      if (values[value].name && (values[value].name.length > 0 || values[value].name.trim())) {\n        parameters[value] = values[value].name;\n      }\n    }\n\n    return null;\n  });\n\n  return parameters;\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { array, func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './SearchableList.local.scss';\n\nexport const SearchableList = ({ items, children, filter, variant, visibleScroll }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  const [query, setQuery] = useState('');\n  const filtered = items.filter(item => filter(item, query));\n\n  return (\n    <>\n      <div className=\"search-input-slot\">\n        <SimpleSearchInput\n          data-qa=\"users-search-input\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <div\n        className={classnames('searchable-list-slot', {\n          visibleScroll,\n          scrolled,\n          [variant]: variant\n        })}\n      >\n        <ul\n          className={classnames('list', {\n            [variant]: variant\n          })}\n          onWheel={onWheel}\n        >\n          {filtered.map((item, index, list) => (\n            <li key={index} className=\"list-item\">\n              {children(item, index, list)}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nSearchableList.propTypes = {\n  items: array,\n  children: func,\n  filter: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nSearchableList.defaultProps = {\n  items: [],\n  filter: (item, query) => item === query\n};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport { Text, Email, Integer, Password, PhoneNumber, BooleanSelect } from '../editors/Generic';\nimport {\n  ProcessSelect,\n  AccountSelect,\n  RSAKey,\n  FQName,\n  Variadic,\n  Multiline,\n  Replvalues,\n  Uuid\n} from '../editors/Custom';\n\nfunction extractParameter({ parameter, recieved, ...others }) {\n  const { type, ...additional } = parameter.editor;\n\n  return {\n    key: parameter.name,\n    label: parameter.label || parameter.name,\n    name: parameter.field_name || parameter.name,\n    required: parameter.is_required,\n    defaultValue: parameter.deflt || parameter.value,\n    description: parameter.description,\n    ...additional,\n    ...others\n  };\n}\n\nexport const TextParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Text {...passable} />;\n};\n\nexport const PasswordParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Password {...passable} />;\n};\n\nexport const PhoneNumberParameter = props => {\n  const passable = extractParameter(props);\n\n  return <PhoneNumber {...passable} />;\n};\n\nexport const BooleanParameter = props => {\n  const passable = extractParameter(props);\n\n  return <BooleanSelect {...passable} />;\n};\n\nexport const IntegerParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Integer {...passable} />;\n};\n\nexport const EmailParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Email {...passable} />;\n};\n\nexport const ProcessParameter = props => {\n  const passable = extractParameter(props);\n\n  return <ProcessSelect {...passable} />;\n};\n\nexport const AccountParameter = props => {\n  const passable = extractParameter(props);\n\n  return <AccountSelect protocols={[]} {...passable} />;\n};\n\nexport const VariadicParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Variadic recieved={props.recieved} {...passable} />;\n};\n\nexport const ReplvaluesParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Replvalues recieved={props.recieved} {...passable} />;\n};\n\nexport const FQNameParameter = props => {\n  const passable = extractParameter(props);\n\n  return <FQName recieved={props.recieved} {...passable} />;\n};\n\nexport const RSAKeyParameter = props => {\n  const passable = extractParameter(props);\n\n  return <RSAKey {...passable} />;\n};\n\nexport const MultilineParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Multiline {...passable} />;\n};\n\nexport const UuidParameter = props => {\n  const passable = extractParameter(props);\n\n  return <Uuid {...passable} />;\n};\n","import { createSelector } from 'reselect';\n\nexport const getQuery = createSelector(\n  state => state.invocation_viewer.query,\n  query => query\n);\n\nexport const getInvocation = createSelector(\n  state => state.invocation_viewer.invocation,\n  invocation => invocation\n);\n\nexport const getInvocationStatus = createSelector(getInvocation, invocation => invocation.status);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../../entities/actions';\nimport { entitySelectors } from '../../../entities/selectors';\n\nimport { Loader, ParameterLoader } from 'shared/components/loaders';\nimport { Center } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nexport const Ensure = connect(\n  (state, { type }) => {\n    const selector = entitySelectors[type];\n\n    return selector(state);\n  },\n  {\n    request: fetchEntity\n  }\n)(Ensurer);\n\nfunction Ensurer({ children, fresh, pipe = false, type, inlineLoader, data, status, request }) {\n  useEffect(() => {\n    if (status === 'fetching') return;\n    if (status === 'fetching') return;\n\n    if (status === 'fetched' && !fresh) return;\n\n    request(type);\n  }, []);\n\n  if (!status || status === 'not-fetched') {\n    return null;\n  }\n\n  if (status === 'fetching' && !pipe) {\n    const Loading = inlineLoader ? ParameterLoader : Loader;\n\n    return (\n      <Center>\n        <Loading>Loading {type}...</Loading>\n      </Center>\n    );\n  }\n\n  if (status === 'failed' && !pipe) {\n    return (\n      <Result type=\"fail\">\n        <Result.Text>Could not fetch {type} data!</Result.Text>\n      </Result>\n    );\n  }\n\n  if (typeof children === 'function') {\n    return <>{children({ status, data, request: () => request(type) })}</>;\n  }\n\n  return <>{children}</>;\n}\n\nexport default Ensure;\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.session;\n\nexport const authorizationSelector = createSelector(localState, state =>\n  state.get('authorization')\n);\n\nexport const currentUserSelector = createSelector(localState, state => state.get('currentUser'));\n\nexport const loginSelector = createSelector(localState, state => state.get('login'));\n\nexport const beVersionSelector = createSelector(localState, state => state.get('beVersion'));\nexport const beLicenceSelector = createSelector(localState, state => state.get('beLicence'));\nexport const beHealthSelector = createSelector(localState, state => state.get('beHealth'));\n","import { createSelector } from 'reselect';\n\nexport const ENTITY_TYPES = [\n  {\n    type: 'account',\n    title: 'CONNECTION',\n    dataEnclosure: 'accounts',\n    query: '*'\n  },\n  {\n    type: 'constant',\n    title: 'CONSTANT',\n    dataEnclosure: 'constants',\n    query: '*'\n  },\n  {\n    type: 'exception',\n    title: 'EXCEPTION',\n    dataEnclosure: 'exceptions',\n    query: '*'\n  },\n  {\n    type: 'form',\n    title: 'FORM',\n    dataEnclosure: 'forms',\n    query: '*'\n  },\n  {\n    type: 'namespace',\n    title: 'NAMESPACE',\n    query: '*',\n    dataEnclosure: 'namespaces'\n  },\n  {\n    type: 'process',\n    query: '*',\n    title: 'PROCESS',\n    dataEnclosure: 'processes'\n  },\n  {\n    type: 'prototype',\n    query: '*',\n    title: 'PROTOTYPE',\n    dataEnclosure: 'prototypes'\n  },\n  {\n    type: 'schedule',\n    title: 'SCHEDULE',\n    dataEnclosure: 'schedules',\n    query: '*'\n  },\n  {\n    type: 'type',\n    query: '*',\n    title: 'TYPE',\n    dataEnclosure: 'data_types'\n  }\n];\n\nexport const ENTITY_TYPES_FETCH = ENTITY_TYPES.concat({\n  type: 'alias'\n});\n\nconst ROOT_ENTITY = {\n  name: 'root',\n  entity: 'root',\n  description: 'Main container for all of the entities within MAS.'\n};\n\nexport const getBreadcrumbs = state => state.entities.breadcrumbs;\n\nfunction collectData(data, { type, dataEnclosure }, namespacesWithMeta) {\n  let collection = data[type]?.data?.data?.[dataEnclosure];\n\n  if (collection) {\n    const aliases = data.alias?.data?.data.aliases\n      .filter(item => item.alias_type === type)\n      .map(item => {\n        const { entity, alias, alias_type, ...props } = item;\n\n        /**\n         * Merging properties that the alias does not have,\n         * with properties the entity it aliases, has.\n         * Will avoid having to reconcile this at the usage level.\n         * And keep aliases viewable here.\n         */\n        const aliasedEntity = data[type]?.data?.data[dataEnclosure].find(e => e.name === alias);\n\n        return { ...(aliasedEntity && aliasedEntity), alias, ...props, entity: alias_type };\n      });\n\n    if (aliases) {\n      /** Concat the aliases for this collection with the collection itself */\n      collection = data[type]?.data?.data[dataEnclosure].concat(aliases);\n    }\n\n    /* filter out colllection items where appearance meta is hidden */\n\n    /** FIXME:\n     *  what about aliases ? If their aliasing root entity would have meta apearance hidden, should it as well ?\n     *  */\n    if (Array.isArray(namespacesWithMeta)) {\n      collection = collection.reduce((acc, dataItem) => {\n        const ownNamespace = namespacesWithMeta.find(ns => dataItem.name.startsWith(ns.name));\n\n        if (ownNamespace) {\n          if (ownNamespace?.meta?.appearance === 'Hidden') {\n            return acc;\n          }\n\n          return acc.concat([\n            {\n              ...dataItem,\n              meta: {\n                ...dataItem.meta,\n                ...ownNamespace.meta\n              }\n            }\n          ]);\n        }\n\n        return acc.concat(dataItem);\n      }, []);\n    }\n  }\n\n  return collection;\n}\n\nexport const entitySelectors = ENTITY_TYPES.reduce((selectors, def) => {\n  selectors[def.type] = createSelector(\n    state => state.entities.data,\n    state => state.entities.fetch_status,\n    state => namespaceWithMetaSelector(state),\n    (data, status, namespacesWithMeta) => {\n      return {\n        data: collectData(data, def, namespacesWithMeta),\n        status: status?.[def.type]\n      };\n    }\n  );\n\n  return selectors;\n}, {});\n\nexport const namespaceWithMetaSelector = createSelector(\n  state => state.entities.data,\n  data => {\n    const dataNamespaces = data.namespace?.data?.data?.namespaces;\n    if (Array.isArray(dataNamespaces)) {\n      return dataNamespaces.filter(\n        item => item.meta && item.meta.appearance && item.meta.appearance !== 'Normal'\n      );\n    }\n    return [];\n  }\n);\n\nexport const getFilteredEntities = createSelector(\n  state => state.entities.data,\n  state => state.entities.filters,\n  state => namespaceWithMetaSelector(state),\n  (data, filters, namespacesWithMeta) => {\n    const types =\n      filters.type === 'all'\n        ? ENTITY_TYPES\n        : ENTITY_TYPES.filter(type => type.type === filters.type || type.type === 'namespace');\n    return types\n      .reduce((accumulator, type) => {\n        return accumulator.concat(collectData(data, type, namespacesWithMeta));\n      }, [])\n      .filter(Boolean);\n  }\n);\n\nexport const getEntitiesAsHashMap = createSelector(\n  getFilteredEntities,\n  state => state.entities.filters,\n  (entities, filters) => {\n    let filteredEntities = entities;\n    if (filters.type !== 'all' && filters.type !== 'namespace') {\n      filteredEntities = entities.filter(item => item.entity !== 'namespace');\n    }\n    if (filters.search) {\n      filteredEntities = filteredEntities.filter(item => {\n        if (filters.type !== 'all' && filters.type !== 'namespace') {\n          const domainArray = item.name.split('.');\n          const shortName = domainArray[domainArray.length - 1];\n          return shortName.includes(filters.search);\n        }\n        return item.name.includes(filters.search);\n      });\n    }\n    return filteredEntities.reduce((accumulator, entity) => {\n      const paths = entity.name.includes('.') ? entity.name.split('.') : [];\n      paths.forEach((path, index) => {\n        const key = paths.slice(0, index).join('.');\n        if (!accumulator[key]) {\n          const findEntity = entities.find(item => item.name === key);\n          accumulator[key] = findEntity || {\n            name: key,\n            notPersisted: true\n          };\n        }\n      });\n      accumulator[entity.name] = entity;\n\n      return accumulator;\n    }, {});\n  }\n);\n\nexport const getEntities = createSelector(\n  getBreadcrumbs,\n  getEntitiesAsHashMap,\n  (breadcrumbs, entitiesMap) => {\n    const entities = Object.values(entitiesMap);\n    const roots = Object.keys(entitiesMap)\n      .filter((entityName, index, names) => {\n        return (\n          !entityName.includes('.') &&\n          (names.find(name => name.startsWith(`${entityName}.`)) ||\n            entitiesMap[entityName].entity === 'namespace')\n        );\n      })\n      .map(key => ({\n        ...entitiesMap[key],\n        isSelected: breadcrumbs.includes(entitiesMap[key].name)\n      }));\n    const columns = breadcrumbs.map((breadcrumb, index) => {\n      return {\n        level: index,\n        path: index === 0 ? '.' : breadcrumbs.slice(0, index).join('.'),\n        rows: []\n      };\n    });\n    columns.push({\n      level: breadcrumbs.length,\n      path: `${breadcrumbs.join('.')}.`,\n      rows: []\n    });\n\n    return entities.reduce((accumulator, entity) => {\n      const path = entity.name.split('.');\n      if (accumulator.length < path.length) {\n        return accumulator;\n      }\n      const bucket = accumulator[path.length - 1];\n      if (!bucket) {\n        return accumulator;\n      }\n      if (bucket.path === '.') {\n        bucket.rows = roots;\n        return accumulator;\n      }\n\n      if (!entity.name.startsWith(bucket.path)) {\n        return accumulator;\n      }\n      const name = entity.name.replace(bucket.path, '').replace('.', '');\n      const entityLevel = entity.name.split('.').length - 1;\n      bucket.rows.push({\n        ...entity,\n        name,\n        isSelected: breadcrumbs[entityLevel] ? breadcrumbs[entityLevel] === name : false\n      });\n\n      return accumulator;\n    }, columns);\n  }\n);\n\nexport const getSelectedEntity = createSelector(\n  getEntitiesAsHashMap,\n  getBreadcrumbs,\n  (entities, breadcrumbs) => {\n    const path = breadcrumbs.join('.');\n    const entity = entities[path];\n    return entity?.notPersisted ? ROOT_ENTITY : entity;\n  }\n);\n\nexport const namespaceChildrenListSelector = createSelector(\n  getSelectedEntity,\n  getEntitiesAsHashMap,\n  (selectedEntity, entities) => {\n    const list = Object.keys(entities);\n    const namespace = `${selectedEntity.name}.`;\n\n    return list.filter(name => name.startsWith(namespace) && name !== namespace);\n  }\n);\n","export function mapUsersData(payload) {\n  return payload.data.users;\n}\n\nexport function mapLoadedUser(payload) {\n  return payload.data.users[0]; // the first returned user is the one in question\n}\n\nexport function mapSortInsensitive(payload) {\n  return payload.slice().sort(function sortInsensitive(a, b) {\n    return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n  });\n}\n","import { getOutputText } from './getOutputText';\n\nexport const copyTextToClipboard = (textToCopy) => {\n  makeCopyToClipboard(textToCopy);\n};\n\nexport const copyToClipboard = (output, invocation) => {\n  const text = getOutputText(output, invocation);\n  makeCopyToClipboard(text);\n};\n\nfunction makeCopyToClipboard(text) {\n  navigator.permissions.query({ name: 'clipboard-write' }).then(result => {\n    if (result.state === 'granted' || result.state === 'prompt') {\n      /* write to the clipboard */\n      navigator.clipboard.writeText(text).then(\n        () => {\n          /* successful */\n          console.log('[copyTextToClipboard] Copied:', text); // eslint-disable-line\n        },\n        () => {\n          /* write failed */\n          console.warn('[copyTextToClipboard] --- unable to write to clipboard!'); // eslint-disable-line\n        }\n      );\n    } else {\n      legacyMethod(text);\n    }\n  }, legacyMethod.bind(this, text));\n}\n\nfunction legacyMethod(text) {\n  const textArea = document.createElement('textarea');\n\n  textArea.value = text;\n  document.body.appendChild(textArea);\n  textArea.classList.add('copyToClipboardInput');\n  textArea.focus();\n  textArea.select();\n  document.execCommand('copy');\n  document.body.removeChild(textArea);\n  console.log('[copyTextToClipboard-legacy] Copied:', text); // eslint-disable-line\n}\n","import React from 'react';\nimport { array, string, func } from 'prop-types';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport './NavigationTab.local.scss';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, tabs } = this.props;\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={tabs.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {tabs.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func,\n  tabs: array\n};\n\nNavigationTab.defaultProps = {\n  tabs: []\n};\n\nexport default NavigationTab;\n","export const getGroupDescription = (name, allGroups) => {\n  const groupDetails = allGroups.find(group => group.name === name);\n\n  return groupDetails?.description || '';\n};\n","import React from 'react';\nimport { func, string } from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport './NavigationTab.local.scss';\nimport { TopSqlStatementsUtil } from '../../containers/TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class NavigationTab extends React.PureComponent {\n  render() {\n    const { active, onClick, protocol } = this.props;\n    const isOracle = protocol === 'ORACLE';\n\n    const data = [\n      { label: 'Workload', value: 'workload' },\n      TopSqlStatementsUtil.isAllowedProtocol(protocol) ? { label: 'Top SQL statements', value: 'topsql' } : false,\n      SystemExplorerFeatureUtil.isSessionsAllowed(protocol) ? { label: 'Sessions', value: 'sessions' } : false,\n      SystemExplorerFeatureUtil.isObjectsAllowed(protocol) ? { label: 'Objects', value: 'objects' } : false,\n      isOracle ? { label: 'Storage', value: 'storage' } : false\n    ].filter(Boolean);\n\n    if (protocol === 'ORACLE') {\n      data.push({ label: 'License reporting', value: 'license' });\n    }\n\n    return (\n      <div className=\"navigation-tab\">\n        <Tabs\n          value={data.map(e => e.value).indexOf(active)}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          {data.map(tab => (\n            <Tab\n              key={tab.label}\n              label={tab.label}\n              onClick={() => onClick(tab.value)}\n              data-qa={`navigate-to-${tab.value}`}\n            />\n          ))}\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nNavigationTab.propTypes = {\n  active: string,\n  onClick: func\n};\n\nexport default NavigationTab;\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function postAccount(body) {\n  try {\n    const { data } = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function patchAccount(name, body) {\n  try {\n    const { data } = await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body);\n\n    return { result: data.result, accounts: data.data.accounts };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport async function deleteAccount(name) {\n  try {\n    const { data } = await RestClient.delete(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`);\n    return { result: data.result, messages: data.messages };\n  } catch (e) {\n    return { result: 'fail', accounts: [], messages: e.response.data?.messages };\n  }\n}\n\nexport function getConnection(name) {\n  return RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchConnection(name, body) {\n  return RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.ACCOUNTS}/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postFile(file) {\n  return RestClient.post(CONSTANTS.BASE.ENDPOINTS.UPLOAD_ACCOUNTS, file);\n}\n","import { DbmsType } from '../../SystemExplorerFeatureUtil';\n\nconst ALLOWED_DBMS = [DbmsType.ORACLE, DbmsType.POSTGRES, DbmsType.MYSQL, DbmsType.MSSQL];\nconst ALLOWED_FOR_CHARTS = [DbmsType.ORACLE];\n\nconst PROCESS_ENDPOINT_MAP = {\n    [DbmsType.ORACLE]: 'vendita.oracle.rdbms.util.monitor.session.performance.topsql',\n    [DbmsType.POSTGRES]: 'vendita.pgsql.rdbms.session.topsql_postgres',\n    [DbmsType.MYSQL]: 'vendita.mysql.rdbms.session.topsql_mysql',\n    [DbmsType.MSSQL]: 'vendita.microsoft.sqlserver.monitor.tuning.top50longrunningsql',\n};\n\nconst DBMS_PROPERTY_NAME_MAP = {\n    [DbmsType.ORACLE]: 'dbms',\n    [DbmsType.POSTGRES]: 'dbms',\n    [DbmsType.MYSQL]: 'dbms',\n    [DbmsType.MSSQL]: 'dbconn',\n};\n\nexport class TopSqlStatementsUtil {\n  static isAllowedProtocol(dbms) {\n    return ALLOWED_DBMS.includes(dbms);\n  }\n\n  static isChartSupported(dbms) {\n    return ALLOWED_FOR_CHARTS.includes(dbms);\n  }\n\n  static getEndpoint(dbms) {\n    return PROCESS_ENDPOINT_MAP[dbms] || '';\n  }\n\n  static getDbmsPropertyName(dbms) {\n    return DBMS_PROPERTY_NAME_MAP[dbms] || '';\n  }\n}\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiSourceRepository,\n  mdiFolderHome,\n  mdiLanConnect,\n  mdiHexagonMultipleOutline,\n  mdiCubeOutline\n} from '@mdi/js';\n\nimport extractDefault from './extractDefault';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'float',\n  'integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter',\n  'string',\n  'unsigned_float',\n  'unsigned_integer'\n];\n\nexport default (parameter, dataTypes, prototypes) => {\n  parameter = { ...parameter };\n  parameter.position = parameter.meta.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n  if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    parameter.is_supported = false;\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.value = 'TEXT';\n  }\n\n  parameter.label = getLabel(parameter.name);\n  parameter.icon = getIcon(parameter.name);\n\n  return parameter;\n};\n\nconst getLabel = name => {\n  return labels[name] || name;\n};\n\nconst getIcon = name => {\n  return icons[name] || null;\n};\n\nconst labels = {\n  target_working_dir: 'Working directory',\n  target_shell: 'Target server SSH',\n  repo_shell: 'Repo server SSH',\n  repo_working_dir: 'Repo directory',\n  form: 'Database form',\n  dbms: 'Target DBMS',\n  vsphere_account: 'vSphere account',\n  vcenterservername: 'vCenter server name',\n  partitioning_methods: 'Virtualization Partitioning Technologies'\n};\n\nconst icons = {\n  target_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  target_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_shell: (\n    <SvgIcon>\n      <Icon path={mdiLanConnect} />\n    </SvgIcon>\n  ),\n  repo_working_dir: (\n    <SvgIcon>\n      <Icon path={mdiSourceRepository} />\n    </SvgIcon>\n  ),\n  dbms: (\n    <SvgIcon>\n      <Icon path={mdiHexagonMultipleOutline} />\n    </SvgIcon>\n  ),\n  form: (\n    <SvgIcon>\n      <Icon path={mdiFolderHome} />\n    </SvgIcon>\n  ),\n  vsphere_account: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  ),\n  vcenterservername: (\n    <SvgIcon>\n      <Icon path={mdiCubeOutline} />\n    </SvgIcon>\n  )\n};\n","import React from 'react';\nimport { object } from 'prop-types';\nimport { Field } from 'formik';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiLanConnect } from '@mdi/js';\n\nimport './TextField.local.scss';\n\nexport const TextField = ({ parameter, disabled }) => {\n  const validate = value => {\n    if (parameter.is_required) {\n      if (!value) {\n        return 'This Field is Required';\n      }\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <MUITextField\n            className={disabled ? 'disabled' : ''}\n            {...field}\n            variant=\"outlined\"\n            type=\"text\"\n            fullWidth\n            disabled={disabled}\n            error={meta.error && meta.touched}\n            helperText={meta.touched && meta.error ? meta.error : undefined}\n            label={parameter.label}\n            placeholder={parameter.label}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {parameter.icon ? (\n                    parameter.icon\n                  ) : (\n                    <SvgIcon>\n                      <Icon path={mdiLanConnect} />\n                    </SvgIcon>\n                  )}\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <LightTooltip placement=\"bottom-end\" title={parameter.description}>\n                  <InputAdornment position=\"end\">\n                    <SvgIcon>\n                      <Icon path={mdiHelpCircleOutline} />\n                    </SvgIcon>\n                  </InputAdornment>\n                </LightTooltip>\n              )\n            }}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Field } from 'formik';\nimport { array, object } from 'prop-types';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { TextField as MUITextField } from '@material-ui/core';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { mdiLanConnect } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport { Dropdown } from 'shared/components';\n\nimport './DropdownField.local.scss';\n\nfunction filterDbmsByShell(options, formValues) {\n  options = options || [];\n  if (!formValues || !formValues.target_shell) {\n    return options;\n  }\n\n  const shellAccount = formValues.target_shell;\n  return options.filter(dbmsAccount => dbmsAccount.address === shellAccount.address);\n}\n\nconst ADDITIONAL_OPTIONS_FILTERS = {\n  dbms: filterDbmsByShell,\n};\n\nexport const DropdownField = ({\n  parameter,\n  datatypes,\n  rawAccounts,\n  forms,\n  prototypes,\n  disabled,\n  currentFormValues\n}) => {\n  const dataType = datatypes.find(datatype => datatype.name === parameter.data_type);\n  let protocols = null;\n\n  if (dataType) {\n    if (\n      dataType.name.startsWith('mas0000.sys.account.conn.') ||\n      dataType.name === 'mas0000.sys.account.vsphere'\n    ) {\n      if (Array.isArray(dataType.protocol) && dataType.protocol.length > 0) {\n        protocols = [];\n        dataType.protocol.forEach(protocol => {\n          if (protocol === 'DBMS') {\n            // This is quick and dirty until we have a configuration-driven solution\n            // in the UI.\n            protocols = [...protocols, 'MSSQL', 'MYSQL', 'ORACLE', 'PGSQL'];\n          } else {\n            protocols.push(protocol);\n          }\n        });\n\n        if (currentFormValues && ADDITIONAL_OPTIONS_FILTERS[parameter.name]) {\n          const additionalFilter = ADDITIONAL_OPTIONS_FILTERS[parameter.name];\n          rawAccounts = additionalFilter(rawAccounts, currentFormValues);\n        }\n\n        const options = rawAccounts\n          .map(account => ({ name: account.name, value: account }))\n          .filter(option => protocols === null || protocols.includes(option.value.protocol));\n\n        const validate = value => {\n          if (parameter.is_required) {\n            if (!value) {\n              return 'This Field is Required';\n            }\n          }\n        };\n\n        return (\n          <Field name={parameter.name} validate={validate}>\n            {({ field, meta }) => {\n              return (\n                <Dropdown\n                  onSelect={(index, opt) => {\n                    field.onChange({ target: { name: parameter.name, value: opt.value } });\n                  }}\n                  disabled={disabled}\n                  target={(meta2, actions) => (\n                    <MUITextField\n                      className={disabled ? 'disabled' : ''}\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      variant=\"outlined\"\n                      fullWidth\n                      label={parameter.label}\n                      placeholder={parameter.label}\n                      {...field}\n                      value={field.value ? field.value.name : ''}\n                      onChange={() => {}}\n                      onClick={actions.toggle}\n                      ref={meta2.ref}\n                      error={meta.error && meta.touched}\n                      helperText={meta.touched && meta.error ? meta.error : undefined}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {parameter.icon ? (\n                              parameter.icon\n                            ) : (\n                              <SvgIcon>\n                                <Icon path={mdiLanConnect} />\n                              </SvgIcon>\n                            )}\n                          </InputAdornment>\n                        ),\n\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <ArrowDropDownIcon />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                  )}\n                  items={options}\n                />\n              );\n            }}\n          </Field>\n        );\n      }\n    }\n  } else {\n    const prototype = prototypes.find(p => p.name === parameter.data_type);\n\n    if (prototype) {\n      const options = forms\n        .filter(form => form.prototype === prototype.name)\n        .map(form => ({ name: form.name, value: form.name }));\n\n      const validate = value => {\n        if (parameter.is_required) {\n          if (!value) {\n            return 'This Field is Required';\n          }\n        }\n      };\n\n      return (\n        <Field name={parameter.name} validate={validate}>\n          {({ field, meta }) => {\n            return (\n              <Dropdown\n                onSelect={(index, opt) => {\n                  field.onChange({ target: { name: parameter.name, value: opt.value } });\n                }}\n                disabled={disabled}\n                target={(meta2, actions) => (\n                  <MUITextField\n                    className={disabled ? 'disabled' : ''}\n                    type=\"text\"\n                    readOnly\n                    disabled\n                    variant=\"outlined\"\n                    fullWidth\n                    label={parameter.label}\n                    placeholder={parameter.label}\n                    {...field}\n                    value={field.value ? field.value : ''}\n                    onChange={() => {}}\n                    onClick={actions.toggle}\n                    ref={meta2.ref}\n                    error={meta.error && meta.touched}\n                    helperText={meta.touched && meta.error ? meta.error : undefined}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          {parameter.icon ? (\n                            parameter.icon\n                          ) : (\n                            <SvgIcon>\n                              <Icon path={mdiLanConnect} />\n                            </SvgIcon>\n                          )}\n                        </InputAdornment>\n                      ),\n\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <ArrowDropDownIcon />\n                        </InputAdornment>\n                      )\n                    }}\n                  />\n                )}\n                items={options}\n              />\n            );\n          }}\n        </Field>\n      );\n    }\n  }\n\n  return <div>Currently not supported input</div>;\n};\n\nDropdownField.propTypes = {\n  parameter: object,\n  datatypes: array,\n  rawAccounts: array,\n  forms: array,\n  prototypes: array\n};\n","import React, { useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport { ListOutput } from '../ListOutput/ListOutput';\nimport { sendToEmail } from '../../utils/sendToEmail';\nimport { copyToClipboard } from '../../utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './OutputModal.local.scss';\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const OutputModal = ({\n  open,\n  actions,\n  output,\n  invocation,\n  modalDetails,\n  processName,\n  messages\n}) => {\n  let content;\n\n  const [message, setMessage] = useState(messages[0]);\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  let interval;\n\n  useEffect(() => {\n    if (messages && messages.length > 1) {\n      if (!open) {\n        clearInterval(interval);\n      } else {\n        let index = 1;\n        interval = setInterval(() => {\n          setMessage(messages[index]);\n          if (index + 1 < messages.length) {\n            index += 1;\n          }\n        }, 4000);\n\n        return () => clearInterval(interval);\n      }\n    }\n  }, [open]);\n\n  if (!output && invocation.status !== 'SUCCEEDED' && invocation.status !== 'FAILED') {\n    content = (\n      <>\n        <Center>\n          <Loader>{message}</Loader>\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (invocation.status === 'FAILED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput type=\"fail\" output={output} errors={invocation.errors} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (invocation.status === 'SUCCEEDED') {\n    content = (\n      <>\n        <Paper.Content scrollable={false}>\n          <div className=\"container\">\n            <ListOutput output={output} />\n          </div>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              className=\"btn\"\n              onClick={() => onSendByEmail(invocation, output, processName, modalActions)}\n              data-qa=\"send-in-email\"\n            >\n              Send in email\n            </Button>\n            <Button\n              className=\"btn\"\n              onClick={() => copyToClipboard(output, invocation)}\n              data-qa=\"copy-to-clipboard\"\n            >\n              Copy to clipboard\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n        <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n      </>\n    );\n  }\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '75vh',\n          minHeight: '75vh',\n          width: '75vh',\n          height: '75vh'\n        }}\n      >\n        <ModalHeader\n          title={modalDetails.title}\n          desc={invocation.status === 'FAILED' ? 'An error orccured!' : 'Output'}\n          avatar={\n            <Avatar\n              className={classnames('output-icon', { error: invocation.status === 'FAILED' })}\n            >\n              {modalDetails.icon}\n            </Avatar>\n          }\n        />\n        {content}\n      </Paper>\n    </Modal>\n  );\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postSchedule(body) {\n  return RestClient.post('schedule', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function getSchedule(name) {\n  return RestClient.get(`schedule/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchSchedule(name, body) {\n  return RestClient.patch(`schedule/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","export function mapAccountsTree(data) {\n  // data is split into 3 levels,\n  // first level is defined by `protocol`\n  // we find root nodes by matching protocols.\n  const roots = data.reduce(splitIntoRootsByProtocol, []);\n  roots.forEach(root => {\n    // define the servers map\n    // all server and database objects for this protocol\n    root.servers = root.nodes.reduce(splitIntoRootsByAddress, {});\n    const servers = Object.keys(root.servers);\n    servers.forEach(name => {\n      const server = root.servers[name];\n      server.databases = server.nodes.reduce(splitIntoRootsByDatabase, {});\n    });\n  });\n  return roots;\n}\nexport function splitIntoRootsByProtocol(acc, item) {\n  const protocolBlacklist = ['SSH'];\n  const { protocol } = item;\n  if (protocolBlacklist.includes(protocol)) {\n    return acc;\n  }\n  if (!(item.special && item.special.database)) {\n    return acc;\n  }\n  const root = acc.find(r => r.name === protocol);\n  if (root) {\n    root.nodes = [...root.nodes, item];\n  } else {\n    acc.push({\n      name: item.protocol,\n      path: item.protocol,\n      type: 'dbms',\n      nodes: [item],\n      servers: []\n    });\n  }\n  return acc;\n}\nfunction splitIntoRootsByAddress(serversMap, item) {\n  const { address } = item;\n  const existingEntry = serversMap[address];\n  if (existingEntry) {\n    existingEntry.nodes = [...existingEntry.nodes, item];\n  } else {\n    serversMap[address] = {\n      name: item.address,\n      path: `${item.protocol}--${item.address}`,\n      type: 'server',\n      nodes: [item]\n    };\n  }\n  return serversMap;\n}\nfunction splitIntoRootsByDatabase(databaseMap, item) {\n  const {\n    special: { database: name }\n  } = item;\n  databaseMap[name] = {\n    name,\n    path: `${item.protocol}--${item.address}--${name}`,\n    node: item\n  };\n  return databaseMap;\n}\n\n/**\n *\n * @param {*} content // /account call data\n *\n * This will resturcture the list of accounts into a list of dbms entries with servers and databases.\n */\n\nexport function mapAccountsNewStructure(content, protocols) {\n  const accounts = { raw: content };\n\n  let protocolsArr = protocols.map(p => p.name);\n\n  if (protocolsArr.length === 0) {\n    protocolsArr = ['CREDENTIAL', 'ILOM', 'SSH'];\n  }\n\n  accounts.databases = content.filter(account => account.special.database);\n  accounts.dbms = [];\n\n  /* eslint-disable */\n  accounts.databases.forEach(function resolver(entry) {\n    /**\n     * Add a path def to the database entry\n     * path descriptions are made here, to mimic somewhat the old mapping.\n     * Keep other properties.\n     */\n    const database = {\n      ...entry,\n      path: `${entry.protocol}--${entry.address}--${entry.special.database}`\n    };\n\n    let dbms = accounts.dbms.find(dbms => dbms.name === database.protocol);\n\n    const dbServer = accounts.raw.find(\n      account => protocolsArr.includes(account.protocol) && account.address === database.address\n    );\n\n    let server;\n\n    // a server entry exists\n    if (dbServer) {\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        ...dbServer,\n        databases: [database]\n      };\n    } else {\n      // db does not have an associated server connection so create a 'placeholder' for server\n      server = {\n        path: `${database.protocol}--${database.address}`,\n        address: database.address,\n        databases: [database]\n      };\n    }\n\n    if (!dbms) {\n      /**\n       * Add a new dbms entry\n       *\n       * path descriptions are made here, to mimic somewhat the old mapping.\n       */\n      accounts.dbms.push({\n        name: database.protocol,\n        protocol: database.protocol,\n        path: database.protocol,\n        databases: [database],\n        servers: [server]\n      });\n\n      return;\n    }\n\n    /**\n     * DBMS exists. Update it\n     */\n    dbms.databases.push(database);\n\n    // find server entr\n    let dbmsServerEntry = dbms.servers.find(sv => sv.address === database.address);\n\n    if (!dbmsServerEntry) {\n      dbms.servers.push({ ...server, databases: [database] });\n    } else {\n      if (dbmsServerEntry.databases) {\n        dbmsServerEntry.databases.push(database);\n      } else {\n        dbmsServerEntry.databases = [database];\n      }\n    }\n  }, accounts);\n\n  // find all existing servers\n  const allServers = content.filter(entry => protocolsArr.includes(entry.protocol));\n\n  // check if servers have a database\n  // if they don't add them in a DBMS called \"OTHER\".\n  // will be removed from there as soon as they get a database\n  allServers.forEach(server => {\n    const exists = accounts.databases.find(db => db.address === server.address);\n\n    if (!exists) {\n      const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n\n      if (otherIndex > -1) {\n        accounts.dbms[otherIndex].servers.push({\n          path: `OTHER--${server.address}`,\n          ...server,\n          databases: []\n        });\n      } else {\n        accounts.dbms.push({\n          name: 'OTHER',\n          path: 'OTHER',\n          protocol: 'OTHER',\n          servers: [{ path: `OTHER--${server.address}`, ...server, databases: [] }]\n        });\n      }\n    }\n  });\n\n  const otherIndex = accounts.dbms.findIndex(d => d.name === 'OTHER');\n  if (otherIndex > -1 && accounts.dbms[otherIndex].servers.length === 0) {\n    accounts.dbms.splice(otherIndex, 1);\n  }\n  return accounts;\n}\n\nexport function mapProtocols(protocols) {\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return allowedProtocols;\n}\n\nexport function mapUpdateDBStatus(existingDb, databases, isLoading) {\n  let statuses = [...existingDb];\n\n  databases.forEach(function(db) {\n    const index = existingDb.findIndex(d => d.name === db.name);\n    if (index > -1) {\n      statuses[index] = { ...db, loading: isLoading };\n    } else {\n      statuses = [...statuses, { ...db, loading: isLoading }];\n    }\n  });\n\n  return statuses;\n}\n\nexport function mapLicenseReport(reportData) {\n  const result = (reportData || []).reduce((acc, currentItem) => {\n    if (currentItem.DETECTED_USAGES > 0) {\n      acc.USED[currentItem.NAME] = _mapUsedLicense(currentItem);\n    } else {\n      acc.UNUSED[currentItem.NAME] = currentItem;\n    }\n    acc.FEATURES.push(currentItem);\n    return acc;\n  }, { UNUSED: {}, USED: {}, FEATURES: [] });\n  console.log(result);\n  return result;\n}\n\nfunction _mapUsedLicense(license) {\n  return {\n    USAGES: license.DETECTED_USAGES,\n    VERSION: license.VERSION,\n    LAST_USE: license.LAST_USAGE_DATE,\n    FIRST_USE: license.FIRST_USAGE_DATE\n  }\n}\n","export const SystemExplorerViewMode = {\n  TILES: 'TILES',\n  TABLE: 'TABLE',\n};\n","/**\n * This file will be updated with any new module (adding the module reducer)\n */\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { sessionEffects, sessionReducer } from 'session';\nimport { dashboardReducer } from 'dashboard';\nimport { sharedEffects, sharedReducer } from 'shared/store/';\nimport { createReducer } from 'shared/lib/redux-utils';\n\nimport usersManagerReducer from 'users-manager/store/reducers';\nimport groupsReducer from 'users-manager/groups/store/reducer';\nimport explorerReducer from 'explorer/store/reducers';\nimport executiveDashboardReducer from 'executive-dashboard/store/reducers';\nimport * as entities from 'entities/reducer';\nimport * as daemon from 'dashboard/store/reducers/daemon';\n\nimport * as invocations from 'job-process/store/reducer';\n\nimport { api } from './middlewares';\nimport { reducer as core } from './reducers';\n\nconst saga = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession,\n  whitelist: ['entities']\n  /*\n  //Well I just whitelist entities,\n  since it's the one that has all expensive network requests\n  */\n};\n\nexport const configStore = () => {\n  const appReducer = persistReducer(persistConfig, combineReducers({\n    core,\n    session: sessionReducer,\n    dashboard: dashboardReducer,\n    shared: sharedReducer,\n    usersManager: usersManagerReducer,\n    groups: groupsReducer,\n    entities: createReducer(entities),\n    explorer: explorerReducer,\n    invocation_viewer: createReducer(invocations),\n    executiveDashboard: executiveDashboardReducer,\n    daemon: createReducer(daemon)\n  }));\n\n  const reducer = (state, action) => {\n    // clear redux store on logout action\n    if (action.type === '[session] LOGOUT__SUCCESS') {\n      const { routing } = state;\n      state = { routing };\n      window.location.reload();\n    }\n    return appReducer(state, action);\n  };\n\n  const effects = [...sessionEffects, ...sharedEffects];\n\n  const store = createStore(reducer, composeWithDevTools(applyMiddleware(saga, thunk, api)));\n\n  effects.forEach(effect => {\n    saga.run(effect);\n  });\n\n  return store;\n};\n\nexport default configStore();\n","import React, { createContext, useContext } from 'react';\n\nconst Context = createContext();\n\nexport default function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nSwitch.Case = Case;\n","import React from 'react';\nimport { string, func } from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './simple-search-input.local.scss';\n\nexport const SimpleSearchInput = ({ value, onChange, ...props }) => {\n  return (\n    <div className=\"search-input\">\n      <i className=\"search-icon-slot\">\n        <SearchIcon fontSize=\"default\" />\n      </i>\n      <input\n        value={value}\n        onChange={onChange}\n        className=\"search-input-control\"\n        placeholder=\"Search\"\n        {...props}\n      />\n    </div>\n  );\n};\n\nSimpleSearchInput.propTypes = {\n  value: string,\n  onChange: func\n};\n\nexport default SimpleSearchInput;\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchProtocols() {\n  try {\n    const { data } = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROTOCOLS);\n\n    return { result: data.result, protocols: data.data.protocols };\n  } catch (e) {\n    return { result: 'fail', protocols: [] };\n  }\n}\n","import React from 'react';\nimport { Switch } from 'shared/components';\nimport { Ensure } from 'core/components/Ensure/Ensure';\n\nimport { useFormikContext } from 'formik';\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { chunk } from 'lodash';\n\n/** accepts recived parameters for invocations that are already scheduled */\nexport const ProcessParameters = ({ recieved = {}, editable }) => {\n  const { values } = useFormikContext();\n\n  /**\n   * Returns a parameter list from a given list of parameters, and a Process name\n   * This could be turned into a connected component that can take the processes from entities for itself.\n   * */\n  function selectParametersForProcess(processName, processes) {\n    const process = processes.find(item => item.name === processName);\n\n    if (process) {\n      return process.parameters.map(p => ({ ...p, value: recieved[p.name], disabled: !editable }));\n    }\n    return [];\n  }\n\n  function currentValue(allValues, parameter) {\n    if (allValues[parameter.name] !== undefined) {\n      return allValues[parameter.name];\n    }\n\n    if (allValues?.parameters && allValues?.parameters[parameter.name] !== undefined) {\n      return allValues?.parameters[parameter.name];\n    }\n\n    return undefined;\n  }\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Parameters</Section.Title>\n      </Section.Header>\n      <Section.Content>\n        <Switch value={!!values.process}>\n          <Switch.Case value={false}>\n            <Column xs={12}>\n              <p>Select a process to edit parameters</p>\n            </Column>\n          </Switch.Case>\n          <Switch.Case value>\n            <Ensure type=\"form\">\n              {({ data: forms }) => (\n                <Ensure type=\"type\">\n                  {({ data: datatypes }) => (\n                    <Ensure type=\"prototype\">\n                      {({ data: prototypes }) => (\n                        <Ensure type=\"process\">\n                          {({ data }) => {\n                            const parameters = selectParametersForProcess(values.process, data);\n\n                            const normalized = parameters.map(parameter => {\n                              return normalize(parameter, datatypes, prototypes, forms);\n                            });\n\n                            /*  << +- 1 of '/' to toggle\n                            const notSupported = false;\n                            /* /\n\n                            // In old app, if at least one normalized parameter exists that is not supported,\n                            // the whole process is disregarded.\n\n                            const notSupported = normalized.some(p => !p.is_supported);\n                            // */\n\n                            const filtered = normalized\n                              .filter(p => p.editor.type !== 'hidden')\n                              .sort((a, b) => a.position - b.position); // sort parameters based on the meta.position\n\n                            // if (notSupported || filtered.length === 0) {\n                            if (filtered.length === 0) {\n                              return (\n                                <Row>\n                                  <Column>\n                                    <p>\n                                      This process contains unsuported parameters with no defaults,\n                                      and cannot be run from the web interface.\n                                    </p>\n                                  </Column>\n                                </Row>\n                              );\n                            }\n\n                            const chunks = chunk(filtered, 2);\n\n                            return chunks.map((params, index) => (\n                              <Row key={index} spacing={3}>\n                                {params.map(parameter => (\n                                  <Column key={parameter.name} xs={6}>\n                                    <Parameter\n                                      normalized={parameter}\n                                      value={currentValue(values, parameter)}\n                                      disabled={!editable}\n                                      recieved={recieved}\n                                    />\n                                  </Column>\n                                ))}\n                              </Row>\n                            ));\n                          }}\n                        </Ensure>\n                      )}\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          </Switch.Case>\n        </Switch>\n      </Section.Content>\n    </Section>\n  );\n};\n","import extractDefault from './extractDefault';\n\nimport { sortBy } from 'lodash';\n\nimport check from '../editors/field-level-validations';\n\nconst supportedDataTypes = [\n  'boolean',\n  'ename',\n  'string',\n  'integer',\n  'float',\n  'uuid',\n  'unsigned_float',\n  'unsigned_integer',\n  'mas0000.os.exec.system_user',\n  'mas0000.sys.email_address',\n  'mas0000.sys.phone_number',\n  'mas0000.sys.process.process',\n  'mas0000.sys.process.variadic_parameter'\n];\n\nexport function space_begone(name) {\n  return name.replace(/\\s/g, '___');\n}\n\nexport function space_summon(name) {\n  return name.replace(/___/g, ' ');\n}\n\nexport default function normalize(param, dataTypes, prototypes, forms) {\n  const parameter = { ...param };\n\n  defaults(parameter, dataTypes, prototypes, forms);\n\n  parameter.editor = defineEditor(parameter, dataTypes, prototypes, forms);\n\n  parameter.field_name = space_begone(parameter.name);\n\n  maybeDisabled(parameter);\n\n  return parameter;\n}\n\nfunction maybeDisabled(parameter) {\n  const { appearance } = parameter.meta;\n\n  if (appearance === 'Grayed' && parameter.editor) {\n    parameter.editor.disabled = true;\n  }\n}\n\nfunction defaults(parameter, dataTypes, prototypes) {\n  parameter.position = parameter.meta?.position || Number.MAX_SAFE_INTEGER;\n  if (typeof parameter.is_required !== 'boolean') {\n    parameter.is_required = true;\n  }\n\n  // hardcode stuff for replvalues params\n  if (parameter.data_type === 'optional_dict' && parameter.name === 'replvalues') {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n  } else if (parameter.data_type.startsWith('optional_')) {\n    // An optional_ required parameter makes no sense\n    parameter.is_required = false;\n    parameter.data_type = parameter.data_type.substring(parameter.data_type.indexOf('_') + 1);\n  }\n\n  if (parameter.deflt !== null) {\n    // A required parameter with a default makes no sense\n    parameter.is_required = false;\n  }\n  parameter.is_supported = true;\n  if (parameter.is_required) {\n    /**\n     * TODO: this was done to help exclude parameters like, any\n     * Or other stuff that cannot be parsed correctly\n     *\n     * Will remove them for now.\n     * Any types mostly are multiline input data, so we'll default them to that.\n     */\n    parameter.is_supported = false;\n\n    if (prototypes.find(({ name }) => name === parameter.data_type)) {\n      parameter.is_supported = true;\n    } else {\n      const dataType = dataTypes.find(({ name }) => name === parameter.data_type);\n      if (dataType) {\n        if (Array.isArray(dataType.enumerations)) {\n          parameter.is_supported = dataType.enumerations.length > 0;\n        } else if (\n          dataType.name.startsWith('mas0000.sys.account.conn.') ||\n          dataType.name === 'mas0000.sys.account.vsphere'\n        ) {\n          parameter.is_supported = true;\n        } else {\n          /**\n           * Allow support for all types of parameters, defaulting to a Text multiline.\n           */\n          parameter.is_supported = supportedDataTypes.includes(parameter.data_type);\n\n          parameter.editor = {\n            type: 'string',\n            multiline: true,\n            deflt: ''\n          };\n        }\n      }\n    }\n  }\n  // Attempt to convert the deflt from Python to JS.\n  parameter.deflt = extractDefault(parameter.deflt);\n\n  if (parameter.data_type === 'mas0300.fmt.format' && parameter.value === null) {\n    parameter.deflt = 'TEXT';\n  }\n\n  // hardcode default value for oformat parameter to \"TEXT\"\n  // was decided to be done on the UI because for the BE alot of processess had to be manually changed\n  // and at the moment we are pressed on time\n  if (parameter.name === 'oformat') {\n    parameter.deflt = parameter.value ? parameter.value : 'TEXT';\n  }\n}\n\nfunction parseProtocols(protocols) {\n  if (!protocols) {\n    return [];\n  }\n\n  if (!Array.isArray(protocols)) {\n    return [protocols];\n  }\n\n  return protocols.reduce((bucket, protocol) => {\n    // quick and dirty (as he said)\n    if (protocol === 'DBMS') {\n      bucket.push('MSSQL', 'MYSQL', 'ORACLE', 'PGSQL');\n    } else {\n      bucket.push(protocol);\n    }\n\n    return bucket;\n  }, []);\n}\n\nfunction defineEditor(parameter, dataTypes, prototypes, forms) {\n  if (!parameter.is_supported) {\n    return { type: 'hidden', disabled: true, value: '' };\n    // return { type: 'text', disabled: true, value: '' };\n  }\n\n  const { meta } = parameter;\n  const { editor: metaEditor, appearance } = meta;\n\n  if (appearance === 'Hidden') {\n    return { type: 'hidden' };\n  }\n\n  if (metaEditor === 'Hidden') {\n    return { type: 'text', disabled: true };\n  }\n\n  const prototype = prototypes.find(proto => proto.name === parameter.data_type);\n\n  if (prototype) {\n    const options = forms\n      .filter(form => form.prototype === prototype.name)\n      .map(form => ({ label: form.name, value: form.name }));\n    return {\n      type: 'select',\n      options\n    };\n  }\n\n  const dataType = dataTypes.find(type => type.name === parameter.data_type);\n\n  if (!dataType) {\n    return { type: 'text', disabled: true, readOnly: true };\n  }\n\n  if (dataType.enumerations !== null && dataType.enumerations.length > 0) {\n    const enumerations = sortBy(dataType.enumerations, 'weight');\n    const options = enumerations.map(({ label }) => ({ label, value: label }));\n\n    return { type: 'select', options };\n  }\n\n  if (\n    dataType.name.startsWith('mas0000.sys.account.conn.') ||\n    dataType.name === 'mas0000.sys.account.vsphere'\n  ) {\n    return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n  }\n\n  switch (dataType.name) {\n    case 'ename':\n      switch (metaEditor) {\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'fqname' };\n      }\n    case 'string':\n      switch (metaEditor) {\n        case 'password':\n          return { type: 'password' };\n        case 'fqname':\n        case 'ename':\n          return { type: 'fqname' };\n        case 'multiline':\n          // return { type: 'text', multiline: true };\n          return { type: 'multiline' };\n        case 'key':\n          return { type: 'rsa', multiline: true };\n        case 'account':\n          return { type: 'account', protocols: parseProtocols(meta.protocol) };\n        default:\n          return { type: 'text' };\n      }\n    case 'boolean':\n      return { type: 'boolean' };\n    case 'integer':\n      return { type: 'number' };\n    case 'float':\n      return { type: 'number', validate: [check.signed_float] };\n    case 'uuid':\n      return { type: 'uuid' };\n    case 'unsigned_float':\n      return { type: 'number', validate: [check.unsigned_float] };\n    case 'unsigned_integer':\n      return { type: 'number', validate: [check.unsigned_int] };\n    case 'mas0000.os.exec.system_user':\n      return { type: 'account', protocols: parseProtocols(dataType.protocol) };\n    case 'mas0000.sys.email_address':\n      return { type: 'email' };\n    case 'mas0000.sys.phone_number':\n      return { type: 'phone' };\n    case 'mas0000.sys.process.process':\n      return { type: 'process' };\n    case 'mas0000.sys.process.variadic_parameter':\n      return { type: 'variadic_parameter' /** needsSelectedProcessName */ };\n    case 'optional_dict':\n      // hardcord for replvalues\n      if (parameter.name === 'replvalues') {\n        return { type: 'replvalues' };\n      }\n      return { type: 'text', multiline: true };\n    default:\n      return { type: 'text', multiline: true };\n  }\n\n  // return { type: 'hidden' };\n}\n","import React from 'react';\nimport Groups from '../../components/notification-groups/notification-groups';\nimport Users from '../../components/notification-users/notification-users';\nimport Events from '../../components/notification-events/notification-events';\nimport NotificationList from '../../components/notification-list/notification-list';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport { Button } from 'shared/components/controls';\n\nimport classnames from 'classnames';\n\nimport './notifications.scss';\nimport { RestClient } from 'shared/lib/rest';\n\nexport class Notifications extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { recievedData } = props;\n\n    const startFullLog = [1, 3, 5, 7];\n    const completionFullLog = [2, 3, 6, 7];\n    const abnormalFullLog = [4, 6, 7];\n\n    this.state = {\n      groupsData: [],\n      usersData: [],\n      jobStart: {\n        notice: false,\n        fullLog: startFullLog.includes(recievedData.events)\n      },\n      jobCompletion: {\n        notice: false,\n        fullLog: completionFullLog.includes(recievedData.events)\n      },\n      abnormalEvent: {\n        notice: false,\n        fullLog: abnormalFullLog.includes(recievedData.events)\n      },\n      isEditing: false\n    };\n  }\n\n  async componentDidMount() {\n    const { recievedData = { users: [] } } = this.props;\n\n    RestClient.get('/group', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.groups) {\n        this.setState({\n          groupsData: res.data.data.groups.map(item => {\n            return { data: item, selected: false, displayIcons: false };\n          })\n        });\n      }\n    });\n    RestClient.get('/user', { page_size: 2147483645 }).then(res => {\n      if (res && res.data && res.data.data && res.data.data.users) {\n        this.setState({\n          usersData: res.data.data.users.map(item => {\n            return {\n              data: item,\n              selected: recievedData.users.includes(item.name),\n              display: false\n            };\n          })\n        });\n      }\n    });\n  }\n\n  render() {\n    const { usersData, groupsData, jobStart, jobCompletion, abnormalEvent, isEditing } = this.state;\n    const selectedGroup = this.getSelectedGroup();\n    const areUsersSelected = usersData.find(item => item.selected);\n    const isClearActionAvailable = this.checkIfAllUsersSelectedCurrentGroup();\n    return (\n      <div\n        className={classnames('monitor-and-notifications', {\n          disabled: this.props.disabled\n        })}\n      >\n        {isEditing ? (\n          <div className=\"notifications-editor\">\n            <Groups onSelect={this.onSelectGroup} groups={groupsData} />\n            <Users\n              onSelect={this.onSelectUser}\n              onSelectUserAction={this.onSelectUserAction}\n              isClearActionAvailable={isClearActionAvailable}\n              users={usersData}\n              isGroupSelected={!!selectedGroup}\n              eventTypeIcons={this.getEventTypeIcons()}\n            />\n            <div className=\"right-side-container\">\n              <Events\n                jobStart={jobStart}\n                jobCompletion={jobCompletion}\n                abnormalEvent={abnormalEvent}\n                onSelect={this.onSelectEventType}\n                areUsersSelected={areUsersSelected}\n              />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={() => {\n                  this.props.onApply(mappedState(this.state));\n                  this.toggleApplyButton();\n                }}\n              >\n                Apply\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <NotificationList\n            users={usersData}\n            eventTypeIcons={this.getEventTypeIcons()}\n            toggleApplyButton={this.toggleApplyButton}\n            disabled={this.props.disabled}\n          />\n        )}\n      </div>\n    );\n  }\n\n  getEventTypeIcons = () => {\n    const { jobStart, jobCompletion, abnormalEvent } = this.state;\n    const icons = [];\n    if (jobStart.notice || jobStart.fullLog) {\n      icons.push(<PlayCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (jobCompletion.notice || jobCompletion.fullLog) {\n      icons.push(<CheckCircleOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    if (abnormalEvent.notice || abnormalEvent.fullLog) {\n      icons.push(<ErrorOutlineIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />);\n    }\n    return icons;\n  };\n\n  toggleApplyButton = () => {\n    this.setState(state => ({ isEditing: !state.isEditing }));\n  };\n\n  checkIfAllUsersSelectedCurrentGroup = () => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      return this.state.usersData\n        .filter(item => selectedGroup.data.users.indexOf(item.data.name) !== -1)\n        .every(item => item.selected);\n    }\n  };\n\n  onSelectGroup = group => {\n    this.setState(state => ({\n      groupsData: state.groupsData.map(item => ({\n        ...item,\n        selected: group.data.name === item.data.name\n      })),\n      usersData: state.usersData.map(item => ({\n        ...item,\n        display: group.data.users.indexOf(item.data.name) !== -1\n      }))\n    }));\n  };\n\n  onSelectUser = user => {\n    /* eslint-disable react/no-access-state-in-setstate */\n    const usersData = this.state.usersData.map(item => {\n      if (item.data.name === user.data.name) {\n        return { ...item, selected: !item.selected };\n      }\n      return item;\n    });\n    this.setState({ usersData, groupsData: this.setFlagGroupsIfContainSelectedUser(usersData) });\n  };\n\n  onSelectUserAction = shouldClear => {\n    const selectedGroup = this.getSelectedGroup();\n    if (selectedGroup) {\n      const usersData = this.state.usersData.map(item => {\n        if (selectedGroup.data.users.indexOf(item.data.name) !== -1) {\n          return { ...item, selected: !shouldClear };\n        }\n        return item;\n      });\n      this.setState({\n        usersData,\n        groupsData: this.setFlagGroupsIfContainSelectedUser(usersData)\n      });\n    }\n  };\n\n  setFlagGroupsIfContainSelectedUser = usersData => {\n    return this.state.groupsData.map(group => ({\n      ...group,\n      displayIcons: !!usersData.find(user => {\n        return user.selected && user.data.member_of.indexOf(group.data.name) !== -1;\n      })\n    }));\n  };\n\n  onSelectEventType = (type, key) => {\n    this.setState(state => ({ [type]: { ...state[type], [key]: !state[type][key] } }));\n  };\n\n  getSelectedGroup() {\n    return this.state.groupsData.find(item => item.selected);\n  }\n}\n\nexport default Notifications;\n\n/**\n * State mapper for backend request.\n *\n * events is a composite number,\n *\n * notice unsuported for now\n * groups are redundant now that the ui preselects all users in a group.\n */\n/* eslint-disable no-unused-vars */\nfunction mappedState({ groupsData, usersData, jobStart, jobCompletion, abnormalEvent }) {\n  const users = usersData.filter(user => user.selected).map(user => user.data.name);\n\n  let events = 0;\n\n  if (jobStart.fullLog) {\n    events += 1;\n  }\n\n  if (jobCompletion.fullLog) {\n    events += 2;\n  }\n\n  if (abnormalEvent.fullLog) {\n    events += 4;\n  }\n\n  return { users, events };\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getProcess(name) {\n  return RestClient.get(`/process/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchProcess(name, body) {\n  return RestClient.patch(`/process/${name}`, body);\n}\n","import { CONSTANTS } from 'config';\n\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport {\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  DESELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\n\nexport function loadExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n\nexport function deselectAllThunk() {\n  return dispatch => {\n    dispatch(creators.action(DESELECT_ALL));\n\n    return 'done';\n  };\n}\n\nexport function selectAllThunk() {\n  return function selectAll(dispatch, getState) {\n    const { rawEntries } = getState().executiveDashboard;\n\n    dispatch(creators.action(SELECT_ALL, rawEntries));\n\n    return 'done';\n  };\n}\n\nexport function toggleServerThunk(server) {\n  return function toggleServer(dispatch, getState) {\n    const { allServers } = getState().executiveDashboard;\n    let { selectedServers } = getState().executiveDashboard;\n\n    const svIndex = allServers.findIndex(sv => sv.name === server.name);\n\n    if (selectedServers.find(sv => sv.name === server.name)) {\n      selectedServers = selectedServers.filter(sv => sv.name !== server.name);\n    } else {\n      selectedServers = [...selectedServers, allServers[svIndex]];\n    }\n\n    selectedServers.sort((a, b) => a.nrCores - b.nrCores);\n\n    dispatch(creators.action(TOGGLE_SERVER, selectedServers));\n    return 'done';\n  };\n}\n\nexport function loadVirtualExecutiveDashboardThunk() {\n  return async dispatch => {\n    dispatch(creators.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD));\n\n    try {\n      const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.VIRTUAL_EXECUTIVE_DASHBOARD, {\n        page_size: 2147483645\n      });\n\n      dispatch(creators.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, response.data.data));\n    } catch (error) {\n      dispatch(creators.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD, error));\n    }\n  };\n}\n","export const DISPLAY_FORMAT = 'L';\nexport const ISO_FORMAT = 'YYYY-MM-DD';\nexport const ISO_MONTH_FORMAT = 'YYYY-MM'; // TODO delete this line of dead code on next breaking change\n\nexport const START_DATE = 'startDate';\nexport const END_DATE = 'endDate';\n\nexport const HORIZONTAL_ORIENTATION = 'horizontal';\nexport const VERTICAL_ORIENTATION = 'vertical';\nexport const VERTICAL_SCROLLABLE = 'verticalScrollable';\n\nexport const NAV_POSITION_BOTTOM = 'navPositionBottom';\nexport const NAV_POSITION_TOP = 'navPositionTop';\n\nexport const ICON_BEFORE_POSITION = 'before';\nexport const ICON_AFTER_POSITION = 'after';\n\nexport const INFO_POSITION_TOP = 'top';\nexport const INFO_POSITION_BOTTOM = 'bottom';\nexport const INFO_POSITION_BEFORE = 'before';\nexport const INFO_POSITION_AFTER = 'after';\n\nexport const ANCHOR_LEFT = 'left';\nexport const ANCHOR_RIGHT = 'right';\n\nexport const OPEN_DOWN = 'down';\nexport const OPEN_UP = 'up';\n\nexport const DAY_SIZE = 39;\nexport const BLOCKED_MODIFIER = 'blocked';\nexport const WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nexport const FANG_WIDTH_PX = 20;\nexport const FANG_HEIGHT_PX = 10;\nexport const DEFAULT_VERTICAL_SPACING = 22;\n\nexport const MODIFIER_KEY_NAMES = new Set(['Shift', 'Control', 'Alt', 'Meta']);\n","import React from 'react';\n\nimport { WantParameter } from './wishes';\n\nexport function RepeatableParameter({ normalized, ...others }) {\n  return <WantParameter parameter={normalized} {...others} />;\n}\n\nexport const Parameter = ({ normalized, ...others }) => {\n  if (normalized.is_repeatable) {\n    return <RepeatableParameter {...others} normalized={normalized} />;\n  }\n\n  return <WantParameter {...others} parameter={normalized} />;\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport './Header.local.scss';\n\nexport const Header = ({ title, children, stretchContent }) => (\n  <header className={`header ${stretchContent ? 'stretched-content' : ''}`}>\n    { title && <h1 className=\"header-title\">{title}</h1>}\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  title: '',\n};\n","import { createSelector } from 'reselect';\n\nconst localState = state => state.dashboard;\n\nexport const filterStatusSelector = createSelector(localState, state => state.get('filterStatus'));\n","import { filterStatusActions } from './filter-status.action';\n\nimport { checkDaemon } from 'shared/api/daemon';\n\nexport const actions = {\n  ...filterStatusActions\n};\n\n/** TODO: The Above actions should be expanded to the new structure at some point */\n\nexport function checkDeamonStatus() {\n  return function daemon_thunk(dispatch) {\n    dispatch({\n      type: 'DAEMON_STATUS',\n      promise: checkDaemon()\n    });\n  };\n}\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDns } from '@mdi/js';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ServerForm } from '../Forms/ServerForm';\n\nimport './AddServerCard.local.scss';\n\nexport const AddServerCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Server\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewServerContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewServer = ({ server = { protocol: 'SSH' }, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const { actions } = useContext(ModalContext);\n  const formRef = useRef();\n\n  useEffect(() => {\n    fetchProtocols().then(resp => {\n      setState({\n        loading: false,\n        result: resp.result,\n        protocols: resp.protocols || []\n      });\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Add New Server\"\n        desc=\"Input the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading protocols list</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <ServerForm\n                server={server}\n                handleSubmission={reloadAccounts}\n                protocols={state.protocols}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Paper.Content>\n                <Result>\n                  <Result.Text>Could not load protocols list.</Result.Text>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button color=\"primary\" onClick={actions.close}>\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewServerContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewServer);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDatabase } from '@mdi/js';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Paper, Center } from 'shared/components/layout';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\n\nimport './AddDatabaseCard.local.scss';\n\nexport const AddDatabaseCard = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Add New Database\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <AddNewDatabaseContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const AddNewDatabase = ({ account, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Add New Database\"\n        desc=\"Input the database connection information\"\n        formikRef={formRef}\n      />\n\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader>Loading Required Protocols and Privilege Modes</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <Switch value={state.result}>\n            <Switch.Case value=\"success\">\n              <DatabaseForm\n                protocols={state.protocols}\n                modes={state.modes}\n                account={account}\n                handleSubmission={reloadAccounts}\n                isNew\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Center>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load required protocols or privilege modes list.\n                  </Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </Switch.Case>\n          </Switch>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const AddNewDatabaseContainer = connect(\n  state => () => {\n    const path = state.explorer.state.path.split('--');\n    return {\n      account: {\n        protocol: path[0],\n        address: path[1]\n      }\n    };\n  },\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AddNewDatabase);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { postFile } from 'shared/api/accounts';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { downloadTemplate } from './downloadTemplate';\n\nimport './ImportCSV.local.scss';\n\nexport const ImportCSV = ({ disabled, trigger }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <>\n      {trigger && trigger(modalActions.open, disabled)}\n      {!trigger && (\n        <Button className=\"action-btn\" onClick={modalActions.open} disabled={disabled}>\n          Import from CSV\n        </Button>\n      )}\n      <Modal open={open} actions={modalActions}>\n        <ImportCSVContainer />\n      </Modal>\n    </>\n  );\n};\n\nexport const ImportCSVFile = ({ reloadAccounts }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [result, setResult] = useState('');\n  const fileName = selectedFile?.name || 'No file chosen';\n\n  const onChangeHandler = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const uploadFile = () => {\n    if (!selectedFile) {\n      setResult('error');\n\n      return;\n    }\n    setResult('loading');\n    const data = new FormData();\n    data.append('csv', selectedFile);\n\n    postFile(data)\n      .then(() => {\n        setResult('');\n        reloadAccounts();\n      })\n      .catch(() => {\n        // at the current BE version, even though the call is a success\n        // a \"false\" error is returned, so the reload account call should be made\n        setResult('');\n        reloadAccounts();\n      });\n  };\n\n  return (\n    <Paper\n      style={{\n        width: '50vw',\n        height: '50vh'\n      }}\n    >\n      <ModalHeader icon={<PostAddIcon />} title=\"Import CSV\" />\n      <Switch value={result}>\n        <Switch.Case value=\"\">\n          <div className=\"container\">\n            <label htmlFor=\"file-upload\" className=\"csv-file-upload\">\n              Choose file\n              <input type=\"file\" id=\"file-upload\" name=\"csv\" accept=\".csv\" onChange={onChangeHandler} />\n            </label>\n            <LimitlessTooltip placement=\"bottom\" title={fileName}>\n              <span className=\"file-name\">{fileName}</span>\n            </LimitlessTooltip>\n          </div>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button\n                onClick={() => {\n                  downloadTemplate();\n                }}\n              >\n                Download template\n              </Button>\n            </Paper.Footer.Left>\n            <Paper.Footer.Right>\n              <Button onClick={uploadFile}>Upload</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"loading\">\n          <Center>\n            <Loader>Uploading file...</Loader>\n          </Center>\n        </Switch.Case>\n        <Switch.Case value=\"error\">\n          <Result type=\"fail\">\n            <Result.Text>You forgot to select a file</Result.Text>\n          </Result>\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button onClick={() => setResult('')}>Back</Button>\n            </Paper.Footer.Left>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const ImportCSVContainer = connect(\n  () => ({}),\n  dispatch => ({\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(ImportCSVFile);\n","import { RestClient } from 'shared/lib/rest';\n\nexport async function deleteEntity(name, type) {\n  try {\n    const { data } = await RestClient.delete(`/${type}/${name}`);\n\n    return { result: data.result };\n  } catch (e) {\n    return { result: 'fail' };\n  }\n}\n\nexport function deleteInvocation(uuid) {\n  return RestClient.delete(`/invocation/${uuid}`);\n}\n","export function mapScheduledNames(allScheduled = []) {\n  const names = allScheduled.reduce((acc, entry) => {\n    const nameArr = entry.name.split('.');\n    const name = nameArr[nameArr.length - 1];\n    acc.push(name);\n    return acc;\n  }, []);\n\n  return names;\n}\n","import React from 'react';\nimport { bool, node, string, array, func } from 'prop-types';\nimport classnames from 'classnames';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiContentSave } from '@mdi/js';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\nimport { CONSTANTS } from 'config';\n\nimport './ActionCard.local.scss';\n\nexport class ActionCard extends React.PureComponent {\n  render() {\n    const {\n      settings,\n      status,\n      icon,\n      label,\n      addOnly,\n      options,\n      onClick,\n      readOnlyOptions,\n      lastBackup,\n      type = '',\n      statusInfo = ''\n    } = this.props;\n\n    return (\n      <div className={classnames('action-card', { addable: addOnly })}>\n        <header>\n          {lastBackup && (\n            <div className=\"last-backup\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiContentSave} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{lastBackup}</span>\n            </div>\n          )}\n          {settings && !CONSTANTS.NEW_CUSTOMER_POC_ENABLED && <div className=\"settings\">{settings}</div>}\n        </header>\n        <div className=\"main-icon\" onClick={onClick} role=\"presentation\">\n          {status && (\n            <LightTooltip placement=\"bottom\" title={capitalizeFirstLetter(statusInfo)}>\n              <div className={`status ${status} ${type}`} />\n            </LightTooltip>\n          )}\n          {icon}\n        </div>\n        <div className=\"main-label\">{label}</div>\n        {options &&\n          options.map((option, index) => (\n            <div\n              className={classnames('option', { disabled: option.disabled })}\n              key={`${option.label}-${index}`}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n            </div>\n          ))}\n        {readOnlyOptions &&\n          readOnlyOptions.map(option => (\n            <div\n              className=\"option presentation\"\n              key={option.label}\n              onClick={option.onClick}\n              role=\"presentation\"\n            >\n              {option.fillable && option.percentage && (\n                <div className=\"filled\" style={{ width: `${option.percentage}%` }} />\n              )}\n              <div className=\"icon\">{option.icon}</div>\n              <div className=\"label\">{option.label}</div>\n              {option.percentage && <div className=\"end-icon\">{option.percentage}%</div>}\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\n\nActionCard.propTypes = {\n  settings: node,\n  icon: node,\n  label: string,\n  addOnly: bool,\n  options: array,\n  onClick: func,\n  status: string,\n  readOnlyOptions: array\n};\n\nexport default ActionCard;\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './CardsLayout.local.scss';\n\nexport class CardsLayout extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"container\">{children}</div>;\n  }\n}\n\nCardsLayout.propTypes = {\n  children: node\n};\n\nexport default CardsLayout;\n","import React from 'react';\n\nexport function want(map, Unresolved = () => null, keygen = key => key) {\n  function settler(props) {\n    const key = keygen(props);\n    return map[key] ?? Unresolved;\n  }\n\n  return settler;\n}\n\nexport function wantComponent(settler) {\n  function Picker(props) {\n    const Picked = settler(props);\n\n    return <Picked {...props} />;\n  }\n\n  return Picker;\n}\n","import React, { useRef, useState } from 'react';\nimport { string } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Field, Form, Formik } from 'formik';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Button, Input } from 'shared/components/controls';\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Center } from 'shared/components';\nimport './ChangePassword.local.scss';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const ChangePassword = ({ user, useLinkTrigger }) => {\n  const [open, setOpen] = useState(false);\n  /**\n   * Backend call result\n   */\n  const [result, setResult] = useState({ done: false, error: undefined });\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult({ done: false, error: undefined });\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const parseError = error => {\n    if (\n      error?.response?.data?.messages &&\n      error.response.data.messages.length > 0 &&\n      error.response.data.messages[0]?.text\n    ) {\n      return error.response.data.messages[0]?.text.split('\\n')[0];\n    }\n\n    return 'Password Change Failed!';\n  };\n\n  return (\n    <>\n      {!useLinkTrigger && (\n        <Button color=\"primary\" onClick={modalActions.open}>\n          Change Password\n        </Button>\n      )}\n      {useLinkTrigger && (\n        <a role=\"presentation\" onClick={modalActions.open}>\n          Change Password\n        </a>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '600px',\n            height: '450px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-password\">\n                <GroupIcon />\n              </Avatar>\n            }\n            title=\"Change Password\"\n            formikRef={formRef}\n          />\n          {result.done ? (\n            <>\n              <Center>\n                <Result type={result.error ? 'fail' : 'success'}>\n                  <Result.Text>{result.error ? result.error : 'Password Changed!'}</Result.Text>\n                </Result>\n              </Center>\n              <Paper.Footer />\n            </>\n          ) : (\n            <Formik\n              initialValues={{\n                password: '',\n                confirm: ''\n              }}\n              validate={values => {\n                const errors = {};\n\n                if (!values.password) {\n                  errors.password = 'Field is required';\n                }\n\n                if (!values.confirm) {\n                  errors.confirm = 'Please reenter your new password';\n                }\n\n                if (values.password !== values.confirm) {\n                  errors.confirm = 'Passwords do not match';\n                }\n\n                if (values.password) {\n                  if (/[$\\\\/\":;']/.test(values.password)) {\n                    errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n                  } else if (values.password.length < 8) {\n                    errors.password = 'Password must contain at least eight characters';\n                  } else if (!/[a-z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a lower case letter (ex: a, b, etc.)';\n                  } else if (!/[A-Z]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least a upper case letter (ex: A, B, etc.)';\n                  } else if (!/[0-9]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n                  } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n                    errors.password =\n                      'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n                  }\n                }\n\n                return errors;\n              }}\n              onSubmit={async (values, actions) => {\n                actions.setSubmitting(true);\n\n                try {\n                  await RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user}`, {\n                    password: values.password\n                  });\n\n                  actions.setSubmitting(false);\n                  setResult({ done: true });\n                } catch (e) {\n                  actions.setSubmitting(false);\n                  setResult({ done: true, error: parseError(e) });\n                }\n              }}\n              innerRef={formRef}\n            >\n              {({ dirty, isSubmitting, isValid, handleSubmit }) => (\n                <>\n                  <Paper.Content scrollable>\n                    <Form className=\"password-form\">\n                      <Row>\n                        <Field name=\"password\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                required\n                                label=\"Password\"\n                                placeholder=\"New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                      <Row>\n                        <Field name=\"confirm\">\n                          {({ field, meta }) => {\n                            return (\n                              <Input\n                                {...field}\n                                type=\"password\"\n                                required\n                                error={!!meta.error}\n                                helperText={meta.error}\n                                label=\"Confirm Password\"\n                                placeholder=\"Confirm New Password\"\n                              />\n                            );\n                          }}\n                        </Field>\n                      </Row>\n                    </Form>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={handleSubmit}\n                        disabled={!dirty || !isValid || isSubmitting}\n                      >\n                        Save\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </>\n              )}\n            </Formik>\n          )}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nChangePassword.propTypes = {\n  user: string\n};\n\nexport const ChangePasswordContainer = connect(state => {\n  const user = selectedUser(state);\n\n  return { user: user.name };\n})(ChangePassword);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n","import React, { createContext } from 'react';\nimport uuid from 'uuid';\nimport MUIModal from '@material-ui/core/Modal';\nimport { bool, string, oneOfType, node, func, shape } from 'prop-types';\n\nimport './Modal.local.scss';\n\nimport { ModalHeader } from '../ModalHeader/ModalHeader';\n\nexport const ModalContext = createContext({});\n\nexport const Modal = ({ open, actions, id: providedId, children }) => {\n  const id = providedId || uuid();\n  const aria = {\n    'aria-labelledby': `${id}-modal-title`,\n    'aria-describedby': `${id}-modal-description`\n  };\n\n  return (\n    <ModalContext.Provider value={{ aria, actions }}>\n      <MUIModal {...aria} open={open} onClose={actions?.close} disableBackdropClick>\n        <div className=\"overlay\">\n          {typeof children === 'function' ? children({ id, aria, open, actions }) : children}\n        </div>\n      </MUIModal>\n    </ModalContext.Provider>\n  );\n};\n\nModal.propTypes = {\n  actions: shape({\n    open: func,\n    close: func\n  }),\n  children: oneOfType([node, func]),\n  open: bool,\n  id: string\n};\n\nModal.ModalHeader = ModalHeader;\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getNamespace(name) {\n  return RestClient.get(`/namespace/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchNamespace(name, body) {\n  return RestClient.patch(`/namespace/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postNamespace(body) {\n  return RestClient.post('/namespace', body, {\n    page_size: 2147483645\n  });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postForm(name, body) {\n  return RestClient.post(`/form/${name}/clone`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function createForm(body) {\n  return RestClient.post('/form', body, {\n    page_size: 2147483645\n  });\n}\n\nexport function updateForm(name, body) {\n  return RestClient.patch(`/form/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useReducer, createContext } from 'react';\n\nimport _ from 'lodash';\n\nimport { produce } from 'immer';\n\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { QualifiedName, FormPrototypeSelect } from 'shared/components/form/editors/Custom';\n\nimport { space_summon } from 'shared/components/form/parameters/normalizeParameter';\n\nimport { FormParameters } from './FormParameters';\n\nimport { groupForm, ungroupForm } from './utils';\n\nimport { createForm, updateForm } from 'shared/api/form';\n\nconst groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_GROUP_INSTANCE': {\n      return produce(state, draft => {\n        draft.groups[action.pointers.group].instances.push(action.instance);\n      });\n    }\n\n    case 'REMOVE_GROUP_INSTANCE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances.splice(pointers.instance, 1);\n      });\n    }\n    case 'ADD_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        const field =\n          draft.groups[pointers.group].instances[pointers.instance].fields[pointers.field];\n\n        field.values.push({ instance: field.values.length, value: null });\n      });\n    }\n    case 'REMOVE_FIELD_VALUE': {\n      const { pointers } = action;\n\n      return produce(state, draft => {\n        draft.groups[pointers.group].instances[pointers.instance].fields[\n          pointers.field\n        ].values.splice(action.index, 1);\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const PackedContext = createContext({ groups: [] });\n\nexport function FormEditor({ isNew, form, prototype, setResult, formRef }) {\n  const initialPacked = groupForm(prototype, _.cloneDeep(form));\n  /** Prepare initial relative name */\n  const split_name = form?.name?.split?.('.') || [''];\n\n  initialPacked.name = _.last(split_name);\n\n  const [packed, dispatch] = useReducer(groupsReducer, initialPacked);\n\n  const contextValue = { packed, dispatch };\n\n  return (\n    <PackedContext.Provider value={contextValue}>\n      <Formik\n        initialValues={{}}\n        validateOnChange={false}\n        onSubmit={(values, actions) =>\n          handleSubmit({\n            form,\n            packed,\n            isNew,\n            prototype,\n            values,\n            actions,\n            setResult\n          })}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Form details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <QualifiedName name=\"form_name\" label=\"Name\" value={packed.name} required />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"description\"\n                          label=\"Description\"\n                          value={packed.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column>\n                          <FormPrototypeSelect\n                            value={prototype?.name}\n                            disabled\n                            label=\"Form\"\n                            name=\"prototype\"\n                          />\n                        </Column>\n                      </Row>\n                      <FormParameters packed={packed} prototype={prototype} />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </PackedContext.Provider>\n  );\n}\n\nasync function handleSubmit({\n  prototype,\n  packed,\n  values,\n  setResult,\n  isNew,\n  form\n}) {\n  const { form_name, description, prototype: protoName, ...fields } = values;\n\n  const extracted = extractFieldInfo(fields);\n\n  const exclusions = [null, 'None', ''];\n\n  const filteredExtractions = extracted.filter(entry => !exclusions.includes(entry.val));\n\n  const packedCopy = _.cloneDeep(packed);\n\n  /**\n   * Update name and description\n   */\n\n  /**\n   * extract and remap field values.\n   */\n  filteredExtractions.forEach(entry => {\n    const path = `groups[${entry.group}].instances[${entry.instance}].fields[${entry.field}].values[${entry.index}].value`;\n\n    _.set(packedCopy, path, entry.value);\n  });\n\n  /**\n   * unpack and prepare for sending\n   */\n  const unpacked = ungroupForm(packedCopy);\n\n  /**\n   * Very Important!\n   * Please read.\n   * Another cleanup process is needed.\n   * So there cannot be values for repeatable parameters where there is an empty array.\n   * It requires for some DAMNED reason, to have at least one null value.\n   */\n  unpacked.values = unpacked.values.map(value => {\n    if (Array.isArray(value.value)) {\n      /** for some reason, it's not removed from the first iteration for values. */\n      const filtered = { ...value, value: value.value.filter(v => !!v) };\n\n      if (filtered.value.length === 0) {\n        filtered.value = [null];\n      }\n\n      return filtered;\n    }\n\n    return value;\n  });\n\n  const name = form_name;\n\n  unpacked.name = name;\n\n  if (!isNew) {\n    const rename = [..._.initial(form.name.split('.')), form_name].join('.');\n    if (rename !== form.name) {\n      unpacked.rename = rename;\n      delete unpacked.name;\n    }\n  }\n\n  unpacked.description = description;\n  unpacked.prototype = protoName;\n  unpacked.version = prototype.version;\n\n  const request = isNew ? createForm : updateForm;\n\n  const request_args = [unpacked];\n\n  if (!isNew) {\n    // prepend name to request arguments.\n    request_args.unshift(form.name);\n  }\n\n  try {\n    await request(...request_args);\n    setResult('success');\n  } catch (e) {\n    setResult('fail');\n  }\n}\n\n// /** berry important :) */\nfunction extractFieldInfo(all) {\n  const key_struct = /^group-(\\d+)-instance-(\\d+)-field-(\\d+)-value-(\\d+)---(\\w+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      name: space_summon(matched[5]),\n      index: matched[4],\n      field: matched[3],\n      instance: matched[2],\n      lower: matched[1],\n      group: matched[1],\n      value\n    };\n  });\n}\n","import moment from 'moment';\n\nexport function mapAllServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const entryInfo = {\n      name: entry.srvname,\n      model: entry.model,\n      version: entry.version,\n      sid: entry.sid,\n      collDate: entry.collDate,\n      nrCores: entry.Ncore,\n      totalDBs: 1,\n      eelic_count: entry.eelic_count,\n      selic_count: entry.selic_count,\n      sids: [entry],\n      installedOptions: {\n        aa_count: entry.aa_count ? 1 : 0,\n        ac_count: entry.ac_count ? 1 : 0,\n        as_count: entry.as_count ? 1 : 0,\n        dv_count: entry.dv_count ? 1 : 0,\n        mt_count: entry.mt_count ? 1 : 0,\n        adg_count: entry.adg_count ? 1 : 0,\n        rac_count: entry.rac_count ? 1 : 0,\n        olap_count: entry.olap_count ? 1 : 0,\n        part_count: entry.part_count ? 1 : 0,\n        in_mem_db_count: entry.in_mem_db_count ? 1 : 0,\n        rac_one_node_count: entry.rac_one_node_count ? 1 : 0,\n        real_app_test_count: entry.real_app_test_count ? 1 : 0\n      }\n    };\n\n    const totalInstalledOptions = Object.values(entryInfo.installedOptions).reduce((a, b) => a + b);\n    entryInfo.sids = [{ ...entry, totalInstalledOptions }];\n    entryInfo.totalInstalledOptions = totalInstalledOptions;\n\n    acc.push(entryInfo);\n    return acc;\n  }, []);\n\n  return groupServers(serversInfo).sort((a, b) => a.nrCores - b.nrCores);\n}\n\nexport function mapVirtualServers(entries) {\n  const serversInfo = entries.reduce((acc, entry) => {\n    const index = acc.findIndex(sv => sv.vcenterservername === entry.vcenterservername);\n\n    if (index > -1) {\n      if (\n        entry.vmname !== null ||\n        entry.vmguesthostname !== null ||\n        entry.vmguestos !== null ||\n        entry.vmipaddress !== null\n      ) {\n        acc[index].hosts_nr += 1;\n      }\n    } else {\n      acc.push({\n        vcenterservername: entry.vcenterservername,\n        cpu: entry.cpu,\n        cpucores: entry.cpucores,\n        hosts_nr:\n          entry.vmname !== null ||\n          entry.vmguesthostname !== null ||\n          entry.vmguestos !== null ||\n          entry.vmipaddress !== null\n            ? 1\n            : 0\n      });\n    }\n    return acc;\n  }, []);\n\n  return serversInfo;\n}\n\nfunction groupServers(servers) {\n  return Object.values(servers.reduce((acc, entry) => {\n    if (!acc[entry.name]) {\n      acc[entry.name] = entry;\n    } else {\n      const allSids = [...acc[entry.name].sids, ...entry.sids]\n        .sort((o1, o2) => -moment(o1.collDate).diff(moment(o2.collDate)));\n\n      acc[entry.name] = entry;\n      acc[entry.name].sids = allSids;\n      acc[entry.name].collDate = allSids[0].collDate;\n    }\n    return acc;\n  }, {}));\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './center.local.scss';\n\nexport class CenterComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.children}</div>;\n  }\n}\n\nexport default CenterComponent;\n\nCenterComponent.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired\n};\n\nCenterComponent.defaultProps = {\n  className: 'center-container'\n};\n","import moment from 'moment';\n\nexport function isBeforeDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n\n  const aYear = a.year();\n  const aMonth = a.month();\n\n  const bYear = b.year();\n  const bMonth = b.month();\n\n  const isSameYear = aYear === bYear;\n  const isSameMonth = aMonth === bMonth;\n\n  if (isSameYear && isSameMonth) return a.date() < b.date();\n  if (isSameYear) return aMonth < bMonth;\n  return aYear < bYear;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nexport const LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useEffect, useState, useCallback, useRef } from 'react';\n\nimport { string, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Overflow.scss';\n\nexport const Overflow = ({ className, component, children, variant }) => {\n  const nodeRef = useRef(null);\n  const [scrollableX, setScrollableX] = useState(false);\n  const [scrollableY, setScrollableY] = useState(false);\n  const [scrolledX, setScrolledX] = useState(false);\n  const [scrolledY, setScrolledY] = useState(false);\n\n  const Tag = component || 'div';\n\n  const onScroll = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolledY) {\n          setScrolledY(true);\n        }\n      } else if (scrolledY) {\n        setScrolledY(false);\n      }\n\n      if (event.currentTarget.scrollLeft) {\n        if (!scrolledX) {\n          setScrolledX(true);\n        }\n      } else if (scrolledX) {\n        setScrolledX(false);\n      }\n    },\n    [scrollableX, scrollableY, scrolledX, scrolledY]\n  );\n\n  useEffect(() => {\n    if (nodeRef.current) {\n      const element = nodeRef.current;\n      const box = {\n        width: element.clientWidth,\n        height: element.clientHeight,\n        scrollHeight: element.scrollHeight,\n        scrollWidth: element.scrollWidth\n      };\n\n      if (box.width < box.scrollWidth && !scrollableX) {\n        setScrollableX(true);\n      }\n\n      if (box.height < box.scrollHeight && !scrollableY) {\n        setScrollableY(true);\n      }\n    }\n  }, [children]);\n\n  return (\n    <div\n      className={classnames(\n        'overflow-container',\n\n        {\n          [variant]: variant,\n          scrollableX,\n          scrollableY,\n          scrolledX,\n          scrolledY\n        },\n        className\n      )}\n    >\n      <Tag ref={nodeRef} className={classnames('overflow-scroller')} onScroll={onScroll}>\n        {children}\n      </Tag>\n    </div>\n  );\n};\n\nOverflow.propTypes = {\n  children: node,\n  className: string,\n  variant: oneOf(['white'])\n};\n\nOverflow.defaultProps = {};\n","import React, { useContext, useState } from 'react';\nimport { string, node, func, shape, bool } from 'prop-types';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport { ModalContext } from '../Modal/Modal';\n\nimport { Modal } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\n\nimport './ModalHeader.local.scss';\n\nexport const ModalHeader = ({\n  avatar,\n  icon,\n  title,\n  desc,\n  closeable,\n  onClose,\n  aria: providedAria,\n  formikRef,\n  changedForm = false\n}) => {\n  const context = useContext(ModalContext);\n  const aria = context.aria || providedAria;\n  const actions = context.actions || { close: onClose };\n  const [open, setOpen] = useState(false);\n\n  const close = () => {\n    if (changedForm || (formikRef?.current?.dirty && fieldChanged(formikRef?.current?.touched))) {\n      setOpen(true);\n    } else {\n      actions.close();\n    }\n  };\n\n  const fieldChanged = fields => {\n    let changed = false;\n    const fieldsArr = Object.keys(fields);\n\n    fieldsArr.map(field => {\n      if (fields[field]) {\n        changed = true;\n      }\n\n      return null;\n    });\n\n    return changed;\n  };\n\n  return (\n    <header className=\"modal-header\">\n      {avatar && <div className=\"icon-slot\">{avatar}</div>}\n      {/** TODO: this should actually be avatar :((( ... don't have time to refactor now need to patch through */}\n      {icon && (\n        <div className=\"icon-slot\">\n          <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n            {icon}\n          </Avatar>\n        </div>\n      )}\n      <div className=\"modal-title-slot\" id={aria['aria-labelledby']}>\n        <h1 className=\"modal-title\">{title}</h1>\n        {desc && (\n          <p className=\"modal-desc\" id={aria['aria-describedby']}>\n            {desc}\n          </p>\n        )}\n      </div>\n      {closeable && actions.close && (\n        <>\n          <div className=\"modal-close-button-slot\">\n            <button className=\"modal-close-button\" onClick={close}>\n              <CloseIcon fontSize=\"large\" />\n            </button>\n          </div>\n\n          <Modal open={open}>\n            <Paper\n              style={{\n                minWidth: '350px',\n                maxHeight: '368px',\n                maxWidth: '65vw'\n              }}\n            >\n              <Paper.Header>\n                <div className=\"modal-header\">\n                  <div className=\"icon-slot\">\n                    <Avatar className=\"generic-avatar\" alt=\"header-icon\">\n                      <WarningIcon />\n                    </Avatar>\n                  </div>\n                  <div className=\"modal-title-slot\">\n                    <h1 className=\"modal-title\">Warning</h1>\n                  </div>\n                  <div className=\"modal-close-button-slot\">\n                    <button\n                      className=\"modal-close-button\"\n                      onClick={() => {\n                        setOpen(false);\n                      }}\n                    >\n                      <CloseIcon fontSize=\"large\" />\n                    </button>\n                  </div>\n                </div>\n              </Paper.Header>\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Exit without saving?</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    No\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      setOpen(false);\n                      actions.close();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Paper>\n          </Modal>\n        </>\n      )}\n    </header>\n  );\n};\n\nModalHeader.propTypes = {\n  title: node,\n  desc: node,\n  onClose: func,\n  closeable: bool,\n  avatar: node,\n  icon: node,\n  aria: shape({\n    'aria-labelledby': string,\n    'aria-describedby': string\n  })\n};\n\nModalHeader.defaultProps = {\n  closeable: true\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport { Checkbox as MUICheckbox, FormControlLabel } from '@material-ui/core';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nimport './Checkbox.local.scss';\n\nexport const Checkbox = ({ label, disabled, ...rest }) => {\n  return (\n    <FormControlLabel\n      disabled={disabled}\n      className=\"checkbox-label\"\n      control={\n        <MUICheckbox\n          className=\"checkbox\"\n          color=\"primary\"\n          icon={<CheckBoxOutlineBlankIcon />}\n          checkedIcon={<CheckBoxIcon />}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  label: node,\n  disabled: bool\n};\n","export default (task, duration = 10000) => {\n  let running = false;\n\n  async function runTask() {\n    if (!running) {\n      return;\n    }\n\n    try {\n      await task();\n      running = false;\n    } catch (e) {\n      setTimeout(() => runTask(), duration);\n    }\n  }\n\n  return {\n    start() {\n      if (running) {\n        return;\n      }\n      running = true;\n      runTask();\n    },\n    stop() {\n      running = false;\n    }\n  };\n};\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nexport const ServerForm = ({\n  server = {},\n  protocols,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [submission, setSubmission] = useState({});\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [showRSA, setShowRSA] = useState(false);\n  const handleAccountCreation = getCreateAccountHandler({\n    showRSA,\n    passwordEditable,\n    setSubmission,\n    isNew,\n    server\n  });\n\n  const allowedProtocols = protocols.filter(p => {\n    if (p.is_abstract) {\n      return false;\n    }\n\n    if (p?.special_required?.includes?.('database')) {\n      return false;\n    }\n\n    return true;\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapServerValues(entry) {\n    return {\n      name: entry.name || '',\n      description: entry.description || '',\n      host: entry.address || '',\n      port: entry.port || availablePorts[entry.protocol || 'SSH'],\n      user: entry.user || '',\n      server_password: entry.user_key || '',\n      confirm_server_password: '',\n      rsa_key: entry.user_key || '',\n      protocol: entry.protocol || 'SSH'\n    };\n  }\n\n  const initialValues = mapServerValues(server);\n\n  const extraValidations = values => {\n    const errors = {};\n    if (passwordEditable && !showRSA) {\n      if (values.server_password !== values.confirm_server_password) {\n        errors.confirm_server_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column>\n                          <Row>\n                            <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                          </Row>\n                          <Row>\n                            <Column>\n                              <Text\n                                name=\"protocol\"\n                                required\n                                label=\"Protocol\"\n                                disabled={!isNew}\n                                options={allowedProtocols.map(p => ({\n                                  value: p.name,\n                                  label: p.name\n                                }))}\n                                value={initialValues.protocol}\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue('port', availablePorts[value]);\n                                }}\n                              />\n                            </Column>\n                          </Row>\n                        </Column>\n                        <Column>\n                          <Text\n                            name=\"description\"\n                            multiline\n                            required\n                            label=\"Description\"\n                            value={initialValues.description}\n                          />\n                        </Column>\n                      </Row>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Row>\n                        <Column style={{ maxWidth: '80%', width: '80%' }}>\n                          <Text\n                            name=\"host\"\n                            label=\"Host\"\n                            required\n                            value={initialValues.host}\n                            disabled={editing}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column>\n                          <Text\n                            name=\"server_user\"\n                            label=\"User\"\n                            required\n                            value={initialValues.user}\n                          />\n                        </Column>\n                        {passwordEditable && <PasswordOrRSA allowed showRSA={showRSA} />}\n                      </Row>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" required label=\"RSA Key\" />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row>\n          <Password name=\"server_password\" label=\"Password\" required />\n        </Row>\n        <Row>\n          <Password name=\"confirm_server_password\" label=\"Confirm Password\" required />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ showRSA, passwordEditable, setSubmission, isNew, server }) {\n  return function handleAccountCreation(values) {\n    const request_body = {\n      protocol: values.protocol,\n      user: values.server_user,\n      description: values.description,\n      address: values.host,\n      ...(passwordEditable && {\n        user_key: showRSA ? values.rsa_key : values.server_password\n      }),\n      port: Number.parseInt(values.port, 10)\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(server.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handleSubmission) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    // add this entry to redux structure\n    // addNewAccount(newAccount);\n    handleSubmission();\n  };\n}\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport async function fetchDataTypes(type = '') {\n  try {\n    const { data } = await RestClient.get(\n      `${CONSTANTS.BASE.ENDPOINTS.DATATYPES}${type ? `/${type}` : ''}`\n    );\n\n    return { result: data.result, data_types: data.data.data_types };\n  } catch (e) {\n    return { result: 'fail', data_types: [] };\n  }\n}\n","import React, { useState } from 'react';\n\nimport { Result } from 'shared/components/overlays';\n\nimport { Switch } from 'shared/components';\n\nimport { Formik, Form } from 'formik';\n\nimport { Button, Checkbox } from 'shared/components/controls';\nimport { Text, Password } from 'shared/components/form/editors/Generic';\n\nimport { Paper, Center, Section, Row, Column } from 'shared/components/layout';\n\nimport { postAccount, patchAccount } from 'shared/api/accounts';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport _ from 'lodash';\n\nexport const DatabaseForm = ({\n  account = {},\n  protocols = [],\n  modes,\n  handleSubmission,\n  editing,\n  isNew,\n  formRef\n}) => {\n  const [passwordEditable, setPasswordEditable] = useState(!editing);\n  const [submission, setSubmission] = useState({});\n  const allowedProtocols = protocols.filter(p => {\n    const special = p?.special_required;\n\n    return special && special.includes('database');\n  });\n  const [showRSA, setShowRSA] = useState(false);\n\n  const handleAccountCreation = getCreateAccountHandler({\n    protocols: allowedProtocols,\n    modes,\n    showRSA,\n    isNew,\n    setSubmission,\n    account\n  });\n\n  const availablePorts = allowedProtocols.reduce((map, p) => {\n    map[p.name] = p.default_port;\n\n    return map;\n  }, {});\n\n  function mapAccountValues(entry = {}) {\n    return {\n      name: _.get(entry, 'name', ''),\n      protocol: _.get(entry, 'protocol', ''),\n      description: _.get(entry, 'description', ''),\n\n      host: _.get(entry, 'address', ''),\n\n      port: _.get(entry, 'port', availablePorts[_.get(entry, 'protocol')]),\n\n      database: _.get(entry, 'special.database', ''),\n      user: _.get(entry, 'user', ''),\n      mode: _.get(entry, 'special.mode', '')\n    };\n  }\n\n  const initialValues = mapAccountValues(account);\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (passwordEditable && !showRSA) {\n      if (values.password !== values.confirm_password) {\n        errors.confirm_password = 'Passwords do not match';\n      }\n    }\n\n    if (values.port) {\n      if (!/^\\d+$/.test(values.port)) {\n        errors.port = 'Only numeric values are allowed';\n      }\n    }\n\n    return errors;\n  };\n\n  return (\n    <Switch value={submission?.result}>\n      <Switch.Case value=\"success\">\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>{isNew ? 'Added new' : 'Updated'} account.</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button onClick={loadNewAccountHandler(submission.accounts, handleSubmission)}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Switch.Case>\n      <Switch.Case value=\"fail\">\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not {isNew ? 'create new' : 'update'} account.</Result.Text>\n            <Result.Messages messages={submission.messages} />\n          </Result>\n        </Center>\n        <Paper.Footer />\n      </Switch.Case>\n      <Switch.Case value={undefined}>\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleAccountCreation}\n          validate={extraValidations}\n          validateOnBlur\n          // validateOnChange={false}\n          validateOnMount={false}\n          innerRef={formRef}\n        >\n          {({ values }) => {\n            const selectedProtocol =\n              values.protocol && protocols.find(protocol => protocol.name === values.protocol);\n            const allowRSA = !!selectedProtocol?.allow_rsa_key;\n            const withDatabase = selectedProtocol?.special_required?.includes('database');\n            const withMode = selectedProtocol?.name === 'ORACLE';\n\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Details:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column>\n                            <Row padded>\n                              <Text name=\"name\" required label=\"Name\" value={initialValues.name} />\n                            </Row>\n                            <Row padded>\n                              <Column>\n                                <Text\n                                  name=\"protocol\"\n                                  required\n                                  label=\"Protocol\"\n                                  reactToChange={(value, formik) => {\n                                    formik.setFieldValue('port', availablePorts[value]);\n                                  }}\n                                  options={allowedProtocols.map(p => ({\n                                    value: p.name,\n                                    label: p.name\n                                  }))}\n                                  value={initialValues.protocol}\n                                />\n                              </Column>\n                            </Row>\n                          </Column>\n                          <Column>\n                            <Text\n                              multiline\n                              name=\"description\"\n                              label=\"Description\"\n                              required\n                              value={initialValues.description}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Connection Info:</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Column style={{ maxWidth: '80%', width: '80%' }}>\n                            <Text name=\"host\" required label=\"Host\" value={initialValues.host} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"port\" required label=\"Port\" value={initialValues.port} />\n                          </Column>\n                        </Row>\n                        <Row>\n                          {withDatabase && (\n                            <Column style={{ minWidth: '80%', width: '100%', maxWidth: '100%' }}>\n                              <Text\n                                name=\"database\"\n                                required\n                                label=\"Database\"\n                                value={initialValues.database}\n                              />\n                            </Column>\n                          )}\n                          {withMode && (\n                            <Column style={{ maxWidth: '20%' }}>\n                              <Text\n                                name=\"mode\"\n                                label=\"Mode\"\n                                required\n                                options={modes.map(mode => ({\n                                  value: mode.label,\n                                  label: mode.label\n                                }))}\n                                value={initialValues.mode}\n                              />\n                            </Column>\n                          )}\n                        </Row>\n                        <Row>\n                          <Column>\n                            <Text\n                              name=\"user\"\n                              label=\"User\"\n                              required\n                              value={initialValues.user || ''}\n                            />\n                          </Column>\n                          {passwordEditable && (\n                            <PasswordOrRSA allowed={allowRSA} showRSA={showRSA} />\n                          )}\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  {editing && (\n                    <Paper.Footer.Left>\n                      {!passwordEditable && (\n                        <Button onClick={() => setPasswordEditable(true)}>\n                          Change existing password\n                        </Button>\n                      )}\n                      {passwordEditable && allowRSA && (\n                        <Checkbox\n                          checked={showRSA}\n                          onInput={() => setShowRSA(prev => !prev)}\n                          label=\"Use RSA key\"\n                        />\n                      )}\n                    </Paper.Footer.Left>\n                  )}\n                  {!editing && allowRSA && (\n                    <Paper.Footer.Left>\n                      <Checkbox\n                        checked={showRSA}\n                        onInput={() => setShowRSA(prev => !prev)}\n                        label=\"Use RSA key\"\n                      />\n                    </Paper.Footer.Left>\n                  )}\n                  <Paper.Footer.Right>\n                    <SubmitButton confirmation>Submit</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nconst PasswordOrRSA = ({ allowed, showRSA }) => (\n  <Column>\n    <Switch value={allowed && showRSA}>\n      <Switch.Case value>\n        <Text multiline name=\"rsa_key\" label=\"RSA Key\" required />\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <Row padded>\n          <Password name=\"password\" required label=\"Password\" />\n        </Row>\n        <Row padded>\n          <Password name=\"confirm_password\" required label=\"Confirm Password\" />\n        </Row>\n      </Switch.Case>\n    </Switch>\n  </Column>\n);\n\nfunction getCreateAccountHandler({ protocols, showRSA, setSubmission, isNew, account }) {\n  return function handleAccountCreation(values) {\n    const selectedProtocol = protocols.find(protocol => protocol.name === values.protocol);\n    const allowRSA = !!selectedProtocol?.allow_rsa_key;\n    const withDatabase = selectedProtocol?.special_required?.includes('database');\n    const withMode = selectedProtocol?.name === 'ORACLE';\n\n    const request_body = {\n      user: values.user,\n      description: values.description,\n      protocol: values.protocol,\n      address: values.host,\n      user_key: allowRSA && showRSA ? values.rsa_key : values.password,\n      port: Number.parseInt(values.port, 10),\n      special: {\n        ...(withDatabase && { database: values.database }),\n        ...(withMode && { mode: values.mode })\n      }\n    };\n\n    if (isNew) {\n      request_body.name = values.name;\n    } else {\n      request_body.rename = values.name;\n    }\n\n    if (isNew) {\n      postAccount(request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    } else {\n      patchAccount(account.name, request_body).then(response => {\n        setSubmission({\n          ...response\n        });\n      });\n    }\n  };\n}\n\nfunction loadNewAccountHandler(accounts, handler) {\n  return function loadNewAccountFromResult() {\n    // const newAccount = accounts[0];\n\n    handler();\n  };\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { deleteInvocation } from 'shared/api/delete';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions as sharedActions } from 'shared/store/actions';\nimport './DeleteJobModal.local.scss';\n\nexport const ConnectedDeleteJobModal = connect(\n  state => {\n    return {\n      globalFilters: globalFiltersSelector(state)\n    };\n  },\n  dispatch => {\n    return {\n      getJobs: data => {\n        dispatch(sharedActions.getJobs.dispatchLoading(data));\n      }\n    };\n  }\n)(DeleteJobModal);\n\nfunction DeleteJobModal({ open, actions, uuid, filters, globalFilters, getJobs }) {\n  const [result, setResult] = useState('attempt');\n  const getQSP = () => {\n    if (!filters || !Object.keys(filters).length) {\n      const startDate = moment.unix(globalFilters.get('startDate'));\n      const endDate = moment.unix(globalFilters.get('endDate'));\n      const start = moment(startDate.format('YYYY-MM-DD'));\n      const end = moment(endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n      const payload = {\n        date_invoke: startDate.format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      };\n\n      return payload;\n    }\n    return filters;\n  };\n\n  const terminator = useCallback(() => {\n    deleteInvocation(uuid)\n      .then(() => {\n        setResult('success');\n        if (filters) {\n          getJobs(getQSP());\n        }\n      })\n      .catch(() => {\n        setResult('fail');\n      });\n  }, uuid);\n  return (\n    <>\n      <Modal open={open} actions={actions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Delete\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <div className=\"container\">\n                    <p>Are you sure you want to delete this invocation and future invocations of this job?</p>\n                  </div>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('loading');\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <h2 className=\"container\">Invocation successfully deleted!</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <h2 className=\"container\">Invocation could not be deleted.</h2>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      actions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"loading\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { ScheduleModal } from './components/ScheduleModal/ScheduleModal';\n\nexport const Schedule = ({ invocation }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setFilledValues({});\n      setResult('');\n      setOpen(false);\n    }\n  };\n  const [filledValues, setFilledValues] = useState({});\n  const [result, setResult] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [canSelectProcess, setCanSelectProcess] = useState(true);\n\n  const onClickHandler = option => {\n    setSelectedOption(option);\n    setCanSelectProcess(!invocation);\n    setOpen(true);\n  };\n\n  const btnLabel = invocation ? 'Schedule' : 'New Schedule';\n  const isScheduled = invocation?.status === 'SCHEDULED' && invocation?.schedule;\n\n  return (\n    <>\n      {isScheduled && (\n        <Button style={{ minWidth: '140px' }} onClick={() => onClickHandler('edit-schedule')}>\n          Edit Schedule\n        </Button>\n      )}\n      <Button\n        onClick={() => {\n          onClickHandler('schedule');\n        }}\n      >\n        {btnLabel}\n      </Button>\n      <ScheduleModal\n        open={open}\n        actions={modalActions}\n        invocation={invocation}\n        isScheduled={isScheduled}\n        selectedOption={selectedOption}\n        canSelectProcess={canSelectProcess}\n        result={result}\n        setResult={setResult}\n        filledValues={filledValues}\n        setFilledValues={setFilledValues}\n      />\n    </>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { postNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\n\nexport const ConnectedNewNamespace = connect(null, {\n  request: fetchEntity\n})(NewNamespace);\n\nfunction NewNamespace({ namespace, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Namespace\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: namespace ? namespace.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name,\n    description: values.description\n  };\n\n  postNamespace(body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { FormEditor } from './FormEditor';\n\nexport const ConnectedFormModal = connect(null, {\n  refresh: fetchEntity\n})(FormModal);\n\nfunction FormModal({ disabled, form = null, prototype, refresh }) {\n  const isNew = form === null;\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('use_form');\n  const formRef = useRef();\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setResult('use_form');\n      setOpen(false);\n      // should refresh be here as well?\n      // refresh('form');\n    }\n  };\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        {isNew ? 'New Form' : 'Edit'}\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px',\n            maxHeight: '80vh'\n          }}\n        >\n          <ModalHeader\n            title={`${isNew ? 'New' : 'Edit'} Form`}\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"use_form\">\n              <FormEditor\n                isNew={isNew}\n                form={form}\n                prototype={prototype}\n                setResult={setResult}\n                formRef={formRef}\n              />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was {isNew ? 'created' : 'updated'} successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      refresh('form');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ConfirmationModal } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { DatabaseForm } from '../Forms/DatabaseForm';\nimport { mdiSettings, mdiDatabase, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { fetchDataTypes } from 'shared/api/datatypes';\nimport { deleteAccount } from 'shared/api/accounts';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nexport const DatabaseSettings = ({ database, disabled, reloadAccounts, editDbTrigger, deleteDbTrigger }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteDbOpen, setDeleteDbOpen] = useState(false);\n  const [deleteDbErrorOpen, setDeleteDbErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteDbModalActions = {\n    open: () => {\n      setDeleteDbOpen(true);\n    },\n    close: () => {\n      setDeleteDbOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(database.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteDbErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteDbErrorModalActions = {\n    open: () => {\n      setDeleteDbErrorOpen(true);\n    },\n    close: () => {\n      setDeleteDbErrorOpen(false);\n    }\n  };\n\n  if (disabled && !editDbTrigger && !deleteDbTrigger) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      {editDbTrigger && editDbTrigger(modalActions.open, disabled)}\n      {!editDbTrigger && (\n        <IconButton onClick={modalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiSettings} />\n          </SvgIcon>\n        </IconButton>\n      )}\n      {deleteDbTrigger && deleteDbTrigger(deleteDbModalActions.open, disabled)}\n      {!deleteDbTrigger && (\n        <IconButton onClick={deleteDbModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditDatabaseContainer database={database} />\n      </Modal>\n\n      <ConfirmationModal open={deleteDbOpen} actions={deleteDbModalActions} message=\"Are you sure you want to delete database?\" />\n      <ErrorModal open={deleteDbErrorOpen} actions={deleteDbErrorModalActions} message=\"Failed to delete Database. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditDatabase = ({ database, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [], modes: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    Promise.all([\n      fetchProtocols(),\n      fetchDataTypes('mas0300.sys.account.privilege_mode', true)\n    ]).then(([pr, mr]) => {\n      if (pr.result === 'success' && mr.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: pr.protocols,\n          modes: mr.data_types[0]?.enumerations\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: [],\n          modes: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDatabase} />\n          </SvgIcon>\n        }\n        title=\"Edit Database\"\n        desc=\"Edit the database connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <DatabaseForm\n            account={database}\n            protocols={state.protocols}\n            modes={state.modes}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditDatabaseContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditDatabase);\n","export const getOutputText = (output, invocation) => {\n  if (!invocation || (!output && invocation.status !== 'FAILED')) return '';\n\n  let outputText = '';\n\n  if (invocation.status === 'FAILED') {\n    outputText = `The following error(s) occurred:\n      ${invocation.errors.map(error => `• ${error}`).join('\\n')}\\n ${\n      output && output.length > 0 ? `Output: \\n${output.map(row => row.data.text).join('\\n')}` : ''\n    }`;\n  } else {\n    outputText = output.map(row => row.data.text).join('\\n');\n  }\n\n  return outputText;\n};\n","import { requestInvocation } from 'shared/api/invocation';\n\nexport function processQuery(uuid, process) {\n  return {\n    type: 'PROCESS_QUERY',\n    uuid,\n    process\n  };\n}\n\nexport function fetchInvocation(uuid, process) {\n  return function thunk(dispatch) {\n    dispatch({\n      type: 'FETCH_INVOCATION',\n      uuid,\n      process,\n      promise: requestInvocation(uuid)\n    });\n  };\n}\n\nexport function updateInvocation(invocation) {\n  return {\n    type: 'UPDATE_INVOCATION',\n    invocation\n  };\n}\n","import moment from 'moment';\nimport { getOutputText } from './getOutputText';\n\nconst EMAIL_BODY_MAX_LENGTH = 2000;\n\nexport const sendToEmail = (invocation, output, processName) => {\n  const text = getOutputText(output, invocation);\n  if (text.length > EMAIL_BODY_MAX_LENGTH) {\n    return false; // Max allowed body length exceeded\n  }\n\n  const date = moment(invocation.date_invoke).format('MMM DD YYYY, H:mm:ss');\n  const subject = processName ? `${processName} output` : 'Job output';\n  const body = `PROCESS: ${processName}\\nDATE: ${date}\\nSTATUS: ${invocation.status}\\n\\nOUTPUT:\\n\\n${text}`;\n  window.location.href = `mailto:?subject=${subject}&body=${encodeURIComponent(body)}`;\n  return true;\n};\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCalendarBlank, mdiCubeOutline, mdiCubeScan, mdiDns, mdiMemory } from '@mdi/js';\nimport Cores from '../../../../assets/images/server_core.svg';\n\nimport './ServerCard.local.scss';\n\nconst tooltipTitle = (server) => {\n  return (\n    <>\n      <div><strong>Name:</strong> {server.name}</div>\n      <div><strong>Model:</strong> {server.model}</div>\n      <div><strong>Version:</strong> {server.version}</div>\n    </>\n  );\n};\n\nexport const ServerCard = ({ server, selected, toggleSelectedCallback, type }) => {\n  if (type === 'virtual') {\n    return (\n      <div className=\"virtual-server-card\">\n        <Avatar className=\"server-avatar\">\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </Avatar>\n        <div className=\"server-info\">\n          <span className=\"name\">{server.vcenterservername}</span>\n          <div className=\"details\">\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiCubeScan} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.hosts_nr}</span>\n              <span className=\"label\">Hosts</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <SvgIcon>\n                  <Icon path={mdiMemory} />\n                </SvgIcon>\n              </span>\n              <span className=\"value\">{server.cpu}</span>\n              <span className=\"label\">CPUs</span>\n            </div>\n            <div className=\"feature\">\n              <span className=\"icon\">\n                <img className=\"img-responsive\" src={Cores} alt=\"server core icon\" />\n              </span>\n              <span className=\"value\">{server.cpucores}</span>\n              <span className=\"label\">Cores</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={classnames('server-card', { selected })}\n      onClick={() => toggleSelectedCallback(server)}\n      role=\"presentation\"\n    >\n      <Avatar className=\"server-avatar\">\n        <SvgIcon>\n          <Icon path={mdiDns} />\n        </SvgIcon>\n      </Avatar>\n      <LightTooltip placement=\"bottom\" title={tooltipTitle(server)}>\n        <span className=\"server-name\">{server.name}</span>\n      </LightTooltip>\n      <LightTooltip\n        placement=\"bottom\"\n        title={`Last updated: ${moment(server.collDate).format('MMM DD YYYY')}`}\n      >\n        <span className=\"calendar-icon\">\n          <SvgIcon>\n            <Icon path={mdiCalendarBlank} />\n          </SvgIcon>\n        </span>\n      </LightTooltip>\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './ServersTile.local.scss';\n\nconst colors = {\n  1: '#6DF0D2',\n  2: '#1DE4BD',\n  4: '#1AC9E6',\n  6: '#7D3AC1',\n  8: '#EA7369',\n  16: '#EF7E32',\n  24: '#EABD3B'\n};\n\nexport const ServersTile = ({ servers, isSingle }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.nrCores;\n  }, 0);\n\n  const cores = [];\n  servers.map(sv => {\n    const index = cores.findIndex(core => core.nrCores === sv.nrCores);\n    if (index > -1) {\n      cores[index].count += 1;\n    } else {\n      cores.push({ count: 1, nrCores: sv.nrCores });\n    }\n\n    return null;\n  });\n\n  function getData() {\n    const data = [];\n\n    cores.map(core => {\n      data.push({\n        value: core.count,\n        description: `${core.nrCores}C`,\n        color: colors[core.nrCores]\n      });\n\n      return null;\n    });\n\n    return data;\n  }\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDns} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={servers.length} />\n        <StringLabel text={isSingle ? 'Server' : 'Total servers'} />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"first-column\">\n          <div className=\"value\">{total}</div>\n          <div className=\"label\">Cores</div>\n        </div>\n\n        <div className=\"second-column\">\n          <div className=\"bar-chart\">\n            <HorizontalBar\n              height={36}\n              showTextIn\n              fontColor=\"#fff\"\n              fontWeight=\"bold\"\n              data={getData()}\n            />\n          </div>\n          <div className=\"label\">Server Cores Distribution</div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","/* eslint-disable */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nexport default class HorizontalBar extends Component {\n  constructor(props) {\n    super(props);\n    //\n    this.state = {\n      listBars: [],\n      data: this.props.data\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!_.isEqual(this.props, prevProps)) {\n      this.setState(state => ({\n        ...state,\n        listBars: this.getListBarWithOtherParameters(),\n        data: this.props.data\n      }));\n    }\n  }\n\n  componentDidMount() {\n    this.setState(state => ({\n      ...state,\n      listBars: this.getListBarWithOtherParameters(),\n      data: this.props.data\n    }));\n  }\n\n  /**\n   * Make the calculus of total width\n   */\n  calcWidthTotal() {\n    let widthTotal = 0;\n    this.props.data.forEach(bar => {\n      widthTotal = widthTotal + bar.value;\n    });\n    return widthTotal;\n  }\n\n  /**\n   * Returns the same list of bars with position and barWidth\n   */\n  getListBarWithOtherParameters() {\n    const widthTotal = this.calcWidthTotal();\n    let position = 0;\n    let barWidth = 0;\n    const listBars = this.props.data.map(bar => {\n      position = position + barWidth;\n      barWidth = (bar.value * 100) / widthTotal;\n      bar = Object.assign({ position: position, barWidth: barWidth }, bar);\n      return bar;\n    });\n    return listBars;\n  }\n\n  /**\n   * OnClick Event\n   */\n  onClick(evt, bar) {\n    Object.assign(evt, { bar: bar });\n    if (this.props.onClick) {\n      this.props.onClick(evt);\n    }\n  }\n\n  /**\n   * Returns a new calculated rgb color\n   */\n  randomColor() {\n    const r = Math.floor(Math.random() * 255);\n    const g = Math.floor(Math.random() * 255);\n    const b = Math.floor(Math.random() * 255);\n\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  /**\n   * Returns a list of texts of the bars into a div component\n   */\n  getListTextBar(showTextInsteadValue) {\n    const { showTextWithValue } = this.props;\n    const listText = this.state.listBars.map((bar, index) => {\n      return (\n        <div\n          key={index}\n          style={{\n            position: 'relative',\n            float: 'left',\n            width: `${bar.barWidth}%`,\n            fontSize: '90%'\n          }}\n          onClick={e => this.onClick(e, bar)}\n        >\n          {showTextInsteadValue && bar.name}\n          {showTextInsteadValue && bar.name && showTextWithValue ? ': ' : ''}\n          {(!showTextInsteadValue || showTextWithValue) && (bar.description || bar.value || '')}\n        </div>\n      );\n    });\n    return listText;\n  }\n\n  renderBars() {\n    const listBars = [];\n    const { showTextWithValue, showTextIn, showValueIn } = this.props;\n\n    listBars.push(\n      this.state.listBars.map((bar, index) => {\n        return (\n          <g key={index} onClick={e => this.onClick(e, bar)}>\n            <rect\n              width={`${bar.barWidth + 0.1}%`}\n              height={this.props.height}\n              style={{\n                fill: bar.color || this.randomColor()\n              }}\n              x={`${bar.position}%`}\n            />\n            {(this.props.showTextIn || this.props.showValueIn) && (\n              <text\n                style={{ fill: this.props.fontColor, fontSize: '90%' }}\n                fontWeight={this.props.fontWeight || 'normal'}\n                x={`${bar.position + (bar.barWidth + 0.1) / 2}%`}\n                y=\"50%\"\n                dy=\"0.35em\"\n              >\n                {showTextIn && bar.name}\n                {bar.name && showTextIn ? ': ' : ''}\n                {(showValueIn || showTextWithValue) && (bar.description || bar.value || '1')}\n              </text>\n            )}\n            <title>{`${bar.name || ''}${bar.name ? ': ' : ''}${bar.description ||\n              bar.value ||\n              '1'}`}</title>\n          </g>\n        );\n      })\n    );\n    return listBars;\n  }\n\n  renderLabel(showTextInsteadValue) {\n    return (\n      <div\n        id={`${this.props.id}_text`}\n        style={{\n          textAlign: 'left',\n          display: 'flex',\n          width: '100%'\n        }}\n      >\n        {this.getListTextBar(showTextInsteadValue)}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.props.showTextUp || this.props.showValueUp) &&\n          this.renderLabel(this.props.showTextUp)}\n        <svg id={this.props.id} width=\"100%\" height={this.props.height}>\n          {this.renderBars()}\n        </svg>\n        {(this.props.showTextDown || this.props.showValueDown) &&\n          this.renderLabel(this.props.showTextDown)}\n      </React.Fragment>\n    );\n  }\n}\n\nHorizontalBar.propTypes = {\n  data: PropTypes.array.isRequired,\n  id: PropTypes.string,\n  height: PropTypes.number,\n  showTextIn: PropTypes.bool,\n  showTextUp: PropTypes.bool,\n  showTextDown: PropTypes.bool,\n  showTextWithValue: PropTypes.bool,\n  showValueIn: PropTypes.bool,\n  showValueUp: PropTypes.bool,\n  showValueDown: PropTypes.bool,\n  fontColor: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nHorizontalBar.defaultProps = {\n  height: 30,\n  showTextIn: false,\n  showTextUp: false,\n  showTextDown: false,\n  showTextWithValue: true,\n  showValueIn: false,\n  showValueUp: false,\n  showValueDown: false,\n  fontColor: 'white',\n  id: 'hsbar'\n};\n","import React from 'react';\n\nimport { CircleImg, NumberLabel, StringLabel } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport HorizontalBar from '../../utils/HorizontalStackedBar/HorizontalStackedBar';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport './DatabasesTile.local.scss';\n\nexport const DatabasesTile = ({ servers }) => {\n  const total = servers.reduce((acc, sv) => {\n    return acc + sv.totalDBs;\n  }, 0);\n\n  const dbs = {\n    eelic_count: 0,\n    selic_count: 0\n  };\n  servers.map(sv => {\n    dbs.eelic_count += sv.eelic_count;\n    dbs.selic_count += sv.selic_count;\n\n    return null;\n  });\n\n  return (\n    <Paper style={{ height: '160px', padding: '16px' }}>\n      <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n        <CircleImg\n          image={\n            <SvgIcon>\n              <Icon path={mdiDatabase} />\n            </SvgIcon>\n          }\n        />\n        <NumberLabel number={total} />\n        <StringLabel text=\"Total databases\" />\n      </Paper.Header>\n      <div className=\"content\">\n        <div className=\"info\">\n          <div className=\"first-column\">\n            <div className=\"value-eed\">{dbs.eelic_count}</div>\n            <div className=\"label\">Enterprise Edition Databases</div>\n          </div>\n          <div className=\"second-column\">\n            <div className=\"value-sed\">{dbs.selic_count}</div>\n            <div className=\"label\">Standard Edition Databases</div>\n          </div>\n        </div>\n        <div className=\"bar-chart\">\n          <HorizontalBar\n            height={8}\n            data={[\n              { value: dbs.eelic_count, color: '#19AADE' },\n              { value: dbs.selic_count, color: '#7D3AC1' }\n            ]}\n          />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* getBeVersion() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_VERSION);\n    yield put(actions.getBeVersion.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeVersion.dispatchFail());\n  }\n}\n\nfunction* getBeLicence() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_LICENCE);\n    yield put(actions.getBeLicence.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeLicence.dispatchFail());\n  }\n}\n\nfunction* getBeHeath() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.BE_HEALTH);\n    yield put(actions.getBeHealth.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getBeHealth.dispatchFail());\n  }\n}\n\nexport function* BeLicenceEffect() {\n  yield takeEvery(actions.getBeLicence.getLoadingAction(), getBeLicence);\n}\n\nexport function* BeHealthEffect() {\n  yield takeEvery(actions.getBeHealth.getLoadingAction(), getBeHeath);\n}\n\nexport function* BeVersionEffect() {\n  yield takeEvery(actions.getBeVersion.getLoadingAction(), getBeVersion);\n}\n","import React from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './TotalJobsCount.local.scss';\n\nexport const TotalJobsCount = ({ jobs, status }) => {\n  const jobsTotal = () => {\n    return (\n      <div className=\"tooltip-container\">\n        <div className=\"row executing\">\n          <span className=\"label\"> EXECUTING:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'EXECUTING').length}</span>\n        </div>\n        <div className=\"row succeeded\">\n          <span className=\"label\"> SUCCEEDED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SUCCEEDED').length}</span>\n        </div>\n        <div className=\"row scheduled\">\n          <span className=\"label\"> SCHEDULED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'SCHEDULED').length}</span>\n        </div>\n        <div className=\"row delayed\">\n          <span className=\"label\">DELAYED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'DELAYED').length}</span>\n        </div>\n        <div className=\"row aborted\">\n          <span className=\"label\">ABORTED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'ABORTED').length}</span>\n        </div>\n        <div className=\"row failed\">\n          <span className=\"label\">FAILED: </span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'FAILED').length}</span>\n        </div>\n        <div className=\"row killed\">\n          <span className=\"label\">KILLED:</span>{' '}\n          <span className=\"value\">{jobs.filter(job => job.status === 'KILLED').length}</span>\n        </div>\n      </div>\n    );\n  };\n\n  if (status) {\n    return (\n      <div className=\"count-jobs\">\n        {jobs.length} {status} {jobs.length === 1 ? 'job' : 'jobs'}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"count-jobs\">\n      <LightTooltip placement=\"bottom\" title={jobsTotal()}>\n        <span>{jobs.length}</span>\n      </LightTooltip>{' '}\n      total jobs\n    </div>\n  );\n};\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    backgroundColor: '#fff',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontWeight: '700',\n    fontFamily: 'Open Sans',\n    boxShadow: '0px 4px 8px rgba(4, 17, 37, 0.1)',\n    borderRadius: '8px'\n  }\n}))(Tooltip);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getAlias(name) {\n  return RestClient.get(`/alias/${name}`, {\n    page_size: 2147483645\n  });\n}\n\nexport function patchAlias(name, body) {\n  return RestClient.patch(`/alias/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n\nexport function postAlias(body) {\n  return RestClient.post('/alias', body, {\n    page_size: 2147483645\n  });\n}\n","import { actions } from 'session/store/actions';\nimport { actionStates } from 'shared/lib';\nimport { fromJS } from 'immutable';\n\nexport const initialState = {\n  login: {\n    status: '',\n    errors: []\n  },\n  authorization: {\n    status: actionStates.LOADING\n  },\n  currentUser: {\n    name: '',\n    details: {}\n  },\n  beVersion: ''\n};\n\nexport const reducerActions = {\n  // authorization Check\n  [actions.checkAuthorization.getLoadingAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.LOADING),\n  [actions.checkAuthorization.getSuccessAction()]: (state, payload) =>\n    state\n      .set(\n        'currentUser',\n        fromJS({\n          name: payload.name,\n          details: payload.details\n        })\n      )\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.checkAuthorization.getFailAction()]: state =>\n    state.setIn(['authorization', 'status'], actionStates.FAIL),\n\n  // login\n  [actions.login.getLoadingAction()]: state =>\n    state.setIn(['login', 'status'], actionStates.LOADING),\n  [actions.login.getSuccessAction()]: state =>\n    state\n      .setIn(['login', 'status'], actionStates.SUCCESS)\n      .setIn(['authorization', 'status'], actionStates.SUCCESS),\n  [actions.login.getFailAction()]: (state, errors) =>\n    state.setIn(['login', 'status'], actionStates.FAIL).setIn(['login', 'errors'], fromJS(errors)),\n  [actions.getBeVersion.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beVersion', payload.data);\n    return nextState;\n  },\n  [actions.getBeLicence.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beLicence', payload.data);\n    return nextState;\n  },\n  [actions.getBeHealth.getSuccessAction()]: (state, payload) => {\n    const nextState = state.set('beHealth', payload.data);\n    return nextState;\n  }\n};\n","import { checkDeamonStatus } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  await store.dispatch(checkDeamonStatus());\n\n  throw new Error('polling-daemon');\n}\n\nexport const daemonPoller = withPolling(task, 60000);\n","import { actions } from 'dashboard/store/actions';\n\nexport const initialState = {\n  filterStatus: 'ALL'\n};\n\nexport const reducerActions = {\n  [actions.setFilterStatus.getEventAction()]: (state, status) => {\n    const nextState = state.set('filterStatus', status);\n    return nextState;\n  }\n};\n","import { actions } from 'shared/store/actions';\nimport { actions as sessionActions } from 'session/store/actions';\nimport { fromJS } from 'immutable';\nimport moment from 'moment';\n\nlet sessionGlobalFilters = {\n  startDate: moment()\n    .subtract(7, 'd')\n    .startOf('day')\n    .unix(),\n  endDate: moment()\n    .add(1, 'days')\n    .startOf('day')\n    .unix()\n};\n\nsessionGlobalFilters = JSON.parse(localStorage.getItem('global-filters')) || sessionGlobalFilters;\n\nexport const initialState = {\n  globalFilters: sessionGlobalFilters,\n  jobs: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false,\n    callFailed: false,\n    reason: ''\n  },\n  connections: {\n    content: [],\n    page_count: 1,\n    total_count: 0,\n    fetching: false\n  },\n  searchResults: {\n    jobs: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    },\n    processes: {\n      content: [],\n      total_count: 0,\n      fetching: false\n    }\n  }\n};\n\nexport const reducerActions = {\n  [actions.setGlobalFilters.getSuccessAction()]: (state, payload) => {\n    const nextState = state\n      .setIn(['globalFilters', 'startDate'], payload.startDate.unix())\n      .setIn(['globalFilters', 'endDate'], payload.endDate.unix());\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.login.getSuccessAction()]: state => {\n    const nextState = state\n      .setIn(\n        ['globalFilters', 'startDate'],\n        moment()\n          .subtract(7, 'd')\n          .startOf('day')\n          .unix()\n      )\n      .setIn(\n        ['globalFilters', 'endDate'],\n        moment()\n          .add(1, 'days')\n          .startOf('day')\n          .unix()\n      );\n\n    const globalFilters = nextState.get('globalFilters').toJS();\n    localStorage.setItem('global-filters', JSON.stringify(globalFilters));\n\n    return nextState;\n  },\n  [sessionActions.logout.getSuccessAction()]: state => {\n    localStorage.removeItem('global-filters');\n    return state;\n  },\n  [actions.getJobs.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        content: payload.data.invocations,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false,\n        callFailed: false,\n        reason: ''\n      })\n    ),\n  [actions.getJobs.getFailAction()]: (state, payload) =>\n    state.set(\n      'jobs',\n      fromJS({\n        callFailed: true,\n        fetching: false,\n        page_count: 1,\n        content: [],\n        total_count: 0,\n        reason: payload.reason\n      })\n    ),\n  [actions.getJobs.getLoadingAction()]: state => state.setIn(['jobs', 'fetching'], true),\n  [actions.getConnections.getSuccessAction()]: (state, payload) =>\n    state.set(\n      'connections',\n      fromJS({\n        content: payload.data.accounts,\n        page_count: payload.data.page_count,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.getConnections.getLoadingAction()]: state =>\n    state.setIn(['connections', 'fetching'], true),\n  [actions.searchJobs.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'jobs'],\n      fromJS({\n        content: payload.data.invocations,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchJobs.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], true),\n  [actions.searchJobs.getFailAction()]: state =>\n    state.setIn(['searchResults', 'jobs', 'fetching'], false),\n  [actions.searchProcesses.getSuccessAction()]: (state, payload) =>\n    state.setIn(\n      ['searchResults', 'processes'],\n      fromJS({\n        content: payload.data.processes,\n        total_count: payload.data.total_count,\n        fetching: false\n      })\n    ),\n  [actions.searchProcesses.getLoadingAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], true),\n  [actions.searchProcesses.getFailAction()]: state =>\n    state.setIn(['searchResults', 'processes', 'fetching'], false)\n};\n","import { actions } from 'core/store/actions';\n\nexport const initialState = {\n  notifications: [],\n};\n\nexport const reducerActions = {\n  [actions.addNotifications.getEventAction()]: (state, payload) => state\n    .merge('notifications', payload),\n  [actions.removeNotification.getEventAction()]: (state, notificationIndex) => state\n    .removeIn(['notifications', notificationIndex]),\n};\n","import { notificationActions } from './notification.action';\n\nexport const actions = {\n  ...notificationActions,\n};\n","import {\n  TextParameter,\n  BooleanParameter,\n  IntegerParameter,\n  EmailParameter,\n  PhoneNumberParameter,\n  ProcessParameter,\n  VariadicParameter,\n  AccountParameter,\n  FQNameParameter,\n  PasswordParameter,\n  MultilineParameter,\n  ReplvaluesParameter,\n  UuidParameter\n} from './variants';\n\nimport { want, wantComponent } from 'shared/lib/want';\n\n/**\n * Main switcher for Parameter fields.\n */\nexport const WantParameter = wantComponent(\n  want(\n    {\n      text: TextParameter,\n      number: IntegerParameter,\n      select: TextParameter,\n      phone: PhoneNumberParameter,\n      boolean: BooleanParameter,\n      email: EmailParameter,\n      fqname: FQNameParameter,\n      account: AccountParameter,\n      process: ProcessParameter,\n      variadic_parameter: VariadicParameter,\n      password: PasswordParameter,\n      multiline: MultilineParameter,\n      replvalues: ReplvaluesParameter,\n      uuid: UuidParameter\n    },\n    TextParameter,\n    props => {\n      const { editor } = props.parameter;\n\n      return editor.type;\n    }\n  )\n);\n\nexport default WantParameter;\n","import { mapAccountsTree } from '../../../../explorer/store/mappers';\n\nexport const ADDITIONAL_ACCOUNT_FILTERS = {\n  dbms: [\n    filterDbmsByShell.bind(null, 'shell'),\n    filterDbmsByShell.bind(null, 'target_shell'),\n  ],\n  target_shell: [filterShellByPlatform],\n  shell: [filterShellByPlatform],\n};\n\nfunction filterDbmsByShell(shellFieldName, accounts, formValues) {\n  accounts = accounts || [];\n  if (!formValues || !formValues[shellFieldName]) {\n    return accounts;\n  }\n\n  const shellAccount = accounts.find((account) => account.name === formValues[shellFieldName]);\n  if (!shellAccount) {\n    return accounts;\n  }\n\n  return accounts.filter(account => account.address === shellAccount.address);\n}\n\nconst PLATFORM_VALUE_TO_TYPE = {\n  Oracle: 'ORACLE',\n  PostgreSQL: 'PGSQL',\n  MySQL: 'MYSQL',\n  'Microsoft SQL Server': 'MSSQL',\n};\n\nfunction filterShellByPlatform(accounts, formValues) {\n  accounts = accounts || [];\n\n  if (!formValues || !formValues.platform) {\n    return accounts;\n  }\n\n  const accountsTree = mapAccountsTree(accounts);\n  const platformTree = accountsTree.find((platform) => platform.name === PLATFORM_VALUE_TO_TYPE[formValues.platform]);\n  if (!platformTree) {\n    return accounts;\n  }\n\n  const platformAddresses = Object.keys(platformTree.servers);\n  return accounts.filter(account => platformAddresses.indexOf(account.address) !== -1);\n}\n","/* eslint-disable */\n\nimport _ from 'lodash';\n\nexport const groupForm = (prototype, form = null) => {\n  if (form === null) {\n    form = {\n      name: null,\n      description: null,\n      prototype: prototype.name,\n      version: prototype.version,\n      groups: [...prototype.groups],\n      values: prototype.fields.map(field => {\n        return { ...field, value: field.deflt };\n      })\n    };\n  }\n\n  if (!form.hasOwnProperty('groups')) {\n    form.groups = [...prototype.groups];\n    form.values = prototype.fields.map(field => {\n      const value = form.values.find(value => value.position === field.position);\n      return {\n        ...value,\n        ...field\n      };\n    });\n  }\n\n  if (form.hasOwnProperty('values')) {\n    const maxPosition = _.max(form.values.map(value => value.position));\n\n    // important point\n    if (form.groups.length > 0) {\n      // Mark any existing groups as non-virtual\n      form.groups = form.groups.map(group => {\n        return { ...group, virtual: false };\n      });\n      // Make sure groups are properly sorted\n      form.groups = _.sortBy(form.groups, 'lower');\n      // First we need to create any virtual groups, if needed\n      let position = 0;\n      while (position <= maxPosition) {\n        // First, find the group of which this value is a member, if any\n        const currentGroup = form.groups.find(\n          group => group.lower <= position && group.upper > position\n        );\n        if (!!currentGroup) {\n          // We already have a group for this position. Leapfrog to the next\n          position = currentGroup.upper;\n        } else {\n          // OK, we couldn't find the current group, so find the next one\n          const nextGroup = form.groups.find(group => group.lower > position);\n          if (!!nextGroup) {\n            // Add a new virtual group that covers this position up to the next group\n            form.groups = [\n              {\n                name: null,\n                virtual: true,\n                lower: position,\n                upper: nextGroup.lower,\n                iteration_limit: 1\n              },\n              ...form.groups\n            ];\n            // Leapfrog\n            position = nextGroup.upper;\n          } else {\n            // We're at the end. Add a covering virtual group\n            form.groups.push({\n              name: null,\n              virtual: true,\n              lower: position,\n              upper: maxPosition + 1,\n              iteration_limit: 1\n            });\n          }\n        }\n      }\n    } else {\n      // We have no groups at all. Create a single virtual group for all values.\n      form.groups.push({\n        name: null,\n        virtual: true,\n        lower: 0,\n        upper: maxPosition + 1,\n        iteration_limit: 1\n      });\n    }\n\n    form.groups = _.sortBy(form.groups, 'lower').map(group => {\n      group.instances = [];\n      return group;\n    });\n    form.values = _.sortBy(form.values, 'position');\n    // OK, we have the groups, now we need to add the instances and fields\n    for (let group of form.groups) {\n      const values = form.values.filter(\n        value => value.position >= group.lower && value.position < group.upper\n      );\n      if (!group.virtual || group.iteration_limit > 1) {\n        // How many instances do we need?\n        const instanceCount = Math.max(\n          1,\n          _.max(values.map(value => (value.value === null ? 1 : value.value.length)))\n        );\n        for (let g = 0; g < instanceCount; g++) {\n          let instance = {\n            instance: g,\n            fields: values.map(value => {\n              let field = {\n                name: value.name,\n                description: value.description,\n                meta: value.meta,\n                position: value.position,\n                data_type: value.data_type,\n                is_repeatable: value.is_repeatable,\n                is_required: value.is_required,\n                values: []\n              };\n              if (Array.isArray(value.value) && value.value.length > g) {\n                if (value.is_repeatable) {\n                  for (let f = 0; f < value.value[g].length; f++) {\n                    field.values.push({\n                      instance: f,\n                      value: value.value[g][f]\n                    });\n                  }\n                } else {\n                  field.values.push({\n                    instance: 0,\n                    value: value.value[g]\n                  });\n                }\n              }\n              return field;\n            })\n          };\n          group.instances.push(instance);\n        }\n      } else {\n        // Iteration limit is 1\n        let instance = {\n          instance: 0,\n          fields: values.map(value => {\n            let field = {\n              name: value.name,\n              description: value.description,\n              meta: value.meta,\n              position: value.position,\n              data_type: value.data_type,\n              is_repeatable: value.is_repeatable,\n              is_required: value.is_required,\n              values: []\n            };\n            if (field.is_repeatable) {\n              if (Array.isArray(value.value)) {\n                for (let f = 0; f < value.value.length; f++) {\n                  field.values.push({\n                    instance: f,\n                    value: value.value[f]\n                  });\n                }\n              }\n            } else {\n              field.values.push({\n                instance: 0,\n                value: value.value\n              });\n            }\n            return field;\n          })\n        };\n        group.instances.push(instance);\n      }\n    }\n    delete form.values;\n  }\n  // For repeating groups and fields, there must always be one \"empty\" group and/or field at the end.\n  for (let group of form.groups) {\n    // if (group.iteration_limit > 1) {\n    //     const instance = _.last(group.instances)\n    //     const values = _.flatten(instance.fields.map(field => field.values.map(value => value.value)))\n    //     // If at least one value is non-null, then we need to add a new empty group at the end.\n    //     if (!_.every(values, value => value === null)) {\n    //         // OK, we need to add another empty instance\n    //         group.instances.push({\n    //             instance: instance.instance + 1,\n    //             fields: instance.fields.map(field => {\n    //                 return {\n    //                     ...field,\n    //                     values: []\n    //                 }\n    //             })\n    //         })\n    //     }\n    // }\n\n    // Now we check the individual fields\n    // Each field must have at least one value.\n    // For repeating fields, there must always be a final empty instance.\n    for (let instance of group.instances) {\n      for (let field of instance.fields) {\n        if (field.values.length === 0) {\n          field.values.push({\n            instance: 0,\n            value: null\n          });\n          // } else if (field.is_repeatable) {\n          //     const value = _.last(field.values)\n          //     if (value.value !== null) {\n          //         field.values.push({\n          //             instance: value.instance + 1,\n          //             value: null\n          //         })\n          //     }\n        }\n      }\n    }\n  }\n  return form;\n};\n\nexport const ungroupForm = form => {\n  let packed = {\n    description: form.description,\n    values: []\n  };\n  let names = {};\n  for (const group of form.groups) {\n    for (const instance of group.instances) {\n      for (const field of instance.fields) {\n        names[field.name] = {\n          position: field.position,\n          grouped: !group.virtual || group.iteration_limit > 1,\n          is_repeatable: field.is_repeatable\n        };\n      }\n    }\n  }\n  for (const name in names) {\n    const info = names[name];\n    const group = form.groups.find(\n      group => group.lower <= info.position && group.upper > info.position\n    );\n    if (info.grouped && info.is_repeatable) {\n      // Array of arrays\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        if (_.last(subvalues) === null) {\n          subvalues = _.dropRight(subvalues, 1);\n        }\n        values.push(subvalues);\n        while (Array.isArray(_.last(values)) && _.last(values).length === 0) {\n          values = _.dropRight(values, 1);\n        }\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.grouped) {\n      // Just a plain array\n      let values = [];\n      for (const instance of group.instances) {\n        let subvalues = instance.fields\n          .find(field => field.name === name)\n          .values.map(value => value.value);\n        values.push(subvalues[0]);\n      }\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else if (info.is_repeatable) {\n      // Just a plain array\n      const instance = group.instances[0];\n      let values = instance.fields\n        .find(field => field.name === name)\n        .values.map(value => value.value);\n      while (values.length > 0 && _.last(values) === null) {\n        values = _.dropRight(values, 1);\n      }\n      packed.values.push({ name, value: values });\n    } else {\n      // Simple value\n      const instance = group.instances[0];\n      const value = instance.fields.find(field => field.name === name).values[0].value;\n      packed.values.push({ name, value });\n    }\n  }\n  packed.values = packed.values.filter(value => value.value !== null);\n  return packed;\n};\n","import { RestClient } from 'shared/lib/rest';\n\nexport function getPrivileges(name, isAlias) {\n  return RestClient.get(`/entity/${name}/privileges`, {\n    ...(isAlias && { cls: 'alias' }),\n    page_size: 2147483645\n  });\n}\n\n/**\n    privilege: type,\n    enitity_name: entityName,\n    alias: isAlias\n    role: user_or_group.role,\n    role_type: user_or_group.is_group ? 'group' : 'user',\n    explicit_grant: user_or_group.granted.includes(type),\n    explicit_denied: user_or_group.denied.includes(type),\n    action: granted ? 'revoke' : 'grant'\n  }}\n */\nexport async function setPrivileges(data) {\n  const { granted, alias } = data;\n\n  const actions = granted ? ['revoke', 'deny'] : ['grant', 'allow'];\n\n  try {\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[0]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    await RestClient.patch(\n      `/${data.role_type}/${data.role}/${actions[1]}/${data.privilege}/${data.enitity_name}`,\n      alias ? { cls: 'alias' } : undefined,\n      {\n        page_size: 2147483645\n      }\n    );\n\n    return getPrivileges(data.enitity_name, data.alias);\n  } catch (e) {\n    throw new Error('failed');\n  }\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport {\n  mdiFileTableBox,\n  mdiDatabase,\n  mdiFileTree,\n  mdiTable,\n  mdiAlertOutline,\n  mdiTableColumnWidth,\n  mdiAlphaPBox,\n  mdiInboxFull,\n  mdiInbox\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\n\nimport './root.local.scss';\n\nconst VerticalUsageBar = ({ usage, className }) => {\n  let fill;\n  if (usage > 75) {\n    fill = '#ED3A4A';\n  } else if (usage > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  return (\n    <div className={className}>\n      <svg viewBox=\"-2 -2 62 102\">\n        <rect x=\"0\" y=\"0\" rx=\"8\" ry=\"8\" height=\"100\" width=\"60\" fill=\"rgba(12, 50, 110, 0.38)\" />\n        <rect x=\"0\" y={100 - usage} rx=\"8\" ry=\"8\" height={usage} width=\"60\" fill={fill} />\n      </svg>\n    </div>\n  );\n};\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nconst SidebarStorageItem = ({ ns, usage, setItem, isSelected }) => (\n  <div\n    className={classnames('sidebar-item', { selected: isSelected })}\n    role=\"button\"\n    onClick={() => setItem(ns)}\n  >\n    <VerticalUsageBar usage={usage} className=\"usage-icon\" />\n    {ns}\n  </div>\n);\n\nexport const StorageSidebar = ({ list, setItem, selectedItem, isLoading }) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiFileTableBox} />\n        </SvgIcon>\n        Tablespaces\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          list.map((element, index) => (\n            <SidebarStorageItem\n              isSelected={selectedItem === element.ns}\n              key={index}\n              {...element}\n              setItem={setItem}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst iconMapper = {\n  triggers: { icon: mdiAlertOutline, label: 'Triggers' },\n  tables: { icon: mdiTable, label: 'Tables' },\n  indexes: { icon: mdiTableColumnWidth, label: 'Indexes' },\n  procedures: { icon: mdiAlphaPBox, label: 'Procedures' },\n  packages: { icon: mdiInbox, label: 'Packages' },\n  packageBodies: { icon: mdiInboxFull, label: 'Package Bodies' }\n};\n\nconst objectsSidebarMapper = (setItem, selectedItem, invalidObjects) => (\n  { owner, objects },\n  index\n) => {\n  const isSelected = owner === selectedItem.owner;\n  const invalidChildren = invalidObjects.filter(({ owner: name }) => name === owner);\n  return (\n    <React.Fragment key={index}>\n      <div\n        className={classnames('sidebar-item', {\n          selected: isSelected,\n          'rotate-cw': !isSelected,\n          'rotate-ccw': isSelected\n        })}\n        role=\"button\"\n        onClick={() => setItem({ owner: isSelected ? null : owner, object: null })}\n      >\n        <SvgIcon>\n          <path d={mdiFileTree} />\n        </SvgIcon>\n        {owner}\n      </div>\n      {isSelected &&\n        objects.map((object, i) => {\n          const isObjectSelected = object === selectedItem.object;\n          const isInvalid = invalidChildren.findIndex(({ object: name }) => name === object) !== -1;\n          return (\n            <div\n              key={`${index}_${i}`}\n              className={classnames('child', 'sidebar-item', {\n                selected: isObjectSelected,\n                invalid: isInvalid\n              })}\n              role=\"button\"\n              onClick={() => setItem({ owner, object })}\n            >\n              <SvgIcon>\n                <path d={iconMapper[object].icon} />\n              </SvgIcon>\n              {iconMapper[object].label}\n            </div>\n          );\n        })}\n    </React.Fragment>\n  );\n};\n\nexport const ObjectsSidebar = ({\n  setItem,\n  selectedItem,\n  list,\n  isLoading,\n  invalidObjects\n}) => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiDatabase} />\n        </SvgIcon>\n        Schema\n      </div>\n      <div className=\"content\">\n        {isLoading ? (\n          <Center>\n            <Loader>Loading data...</Loader>\n          </Center>\n        ) : (\n          <div className=\"sidebar-container\">\n            {list.map(objectsSidebarMapper(setItem, selectedItem, invalidObjects))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/jsx-indent-props */\nimport React from 'react';\nimport { mdiArrangeBringToFront, mdiFileTableBox, mdiFlashCircle, mdiHelpRhombusOutline, mdiTable } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { Center } from 'shared/components';\nimport { Overflow } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Chart } from 'react-google-charts';\nimport classnames from 'classnames';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nconst KPIDisplay = ({ value, suffix, colorFormatting = false }) => {\n  let fill;\n  if (value > 75) {\n    fill = '#ED3A4A';\n  } else if (value > 50) {\n    fill = '#F1BD5C';\n  } else {\n    fill = '#34CC88';\n  }\n  const digits = value > 10 ? 0 : 2;\n  const valueString = value.toLocaleString(undefined, {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: digits\n  });\n  return (\n    <span style={colorFormatting ? { color: fill } : {}}>\n      {valueString}\n      {suffix}\n    </span>\n  );\n};\n\nconst NoDataComponent = ({ name }) => (\n  <div className=\"content dashed-and-centered\">\n    <SvgIcon>\n      <path d={mdiHelpRhombusOutline} />\n    </SvgIcon>\n    <p>Please select a {name} in order to view its children</p>\n  </div>\n);\n\nconst StorageDetailsList = ({ data, isLoading }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <Loader>Loading data...</Loader>\n      </Center>\n    );\n  }\n\n  const { tablespace, files } = data;\n\n  if (!tablespace || !tablespace.ns) {\n    return <NoDataComponent name=\"tablespace\" />;\n  }\n\n  return (\n    <div className=\"content\">\n      <div className=\"detail-row\">\n        <div className=\"ts-name\">\n          <SvgIcon>\n            <path d={mdiFileTableBox} />\n          </SvgIcon>\n          {tablespace.ns}\n        </div>\n        <div className=\"details\">\n          <div className=\"block\">\n            <div className=\"top\">Total:</div>\n            <div>\n              <KPIDisplay value={tablespace.totalGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used size:</div>\n            <div>\n              <KPIDisplay value={tablespace.usedGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Used %:</div>\n            <div>\n              <KPIDisplay value={tablespace.usage} suffix=\"%\" colorFormatting />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free size:</div>\n            <div>\n              <KPIDisplay value={tablespace.freeGB} suffix=\"GB\" />\n            </div>\n          </div>\n          <div className=\"block\">\n            <div className=\"top\">Free %:</div>\n            <div>\n              <KPIDisplay value={tablespace.freePerc} suffix=\"%\" />\n            </div>\n          </div>\n        </div>\n\n      </div>\n      {files.map(({ PCT_USED, FILE_NAME, SIZE_MB, MAXSIZE_MB }, index) => {\n        const filePath = FILE_NAME.split('/');\n        const [fileName, extension] = filePath[filePath.length - 1].split('.');\n        return (\n          <div key={index} className=\"detail-row\">\n            <div className=\"file-name\">\n              <SvgIcon>\n                <path d={mdiTable} />\n              </SvgIcon>\n              {fileName}\n              <span className=\"extension\">.{extension}</span>\n            </div>\n            <div className=\"details\">\n              <div className=\"block\">\n                <div className=\"top\">Used %:</div>\n                <div>\n                  <KPIDisplay value={PCT_USED} suffix=\"%\" colorFormatting />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Size:</div>\n                <div>\n                  <KPIDisplay value={SIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n              <div className=\"block\">\n                <div className=\"top\">Max size:</div>\n                <div>\n                  <KPIDisplay value={MAXSIZE_MB / 1024} suffix=\"GB\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n      <div>\n        <Center>\n          <Chart\n            width=\"700px\"\n            height=\"400px\"\n            chartType=\"PieChart\"\n            loader={<div>Loading Chart</div>}\n            data={[\n              ['Task', 'Hours per Day'],\n              [`Free  ${tablespace.freeGB.toFixed(2)} GB`, tablespace.freePerc],\n              [`Used  ${tablespace.usedGB.toFixed(2)} GB`, tablespace.usage]\n            ]}\n            options={{\n              backgroundColor: 'transparent',\n              is3D: true,\n              colors: ['rgb(52, 204, 136)', 'rgb(237, 58, 74)']\n            }}\n            rootProps={{ 'data-testid': '1' }}\n          />\n        </Center>\n      </div>\n    </div>\n  );\n};\n\nexport const StorageViewer = ({ data, isLoading }) => {\n  return (\n    <div className=\"viewer\">\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiTable} />\n        </SvgIcon>\n        Data Files\n      </div>\n      <StorageDetailsList data={data} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport const ObjectsViewer = ({ data, isLoading, sidebarDisabled, protocol }) => {\n  const objectsDataMapper = SystemExplorerFeatureUtil.getObjectsDataMapper(protocol);\n  if (!!objectsDataMapper && data && data.length > 0) {\n    data = data.slice().map(objectsDataMapper);\n  }\n\n  return (\n    <div className={classnames('viewer', {\n        'sidebar-disabled': sidebarDisabled\n      })}\n    >\n      <div className=\"title\">\n        <SvgIcon>\n          <path d={mdiArrangeBringToFront} />\n        </SvgIcon>\n        Objects\n      </div>\n      {isLoading ? (\n        <Center>\n          <Loader>Loading data...</Loader>\n        </Center>\n      ) : (\n        <div className=\"content\">\n          <Overflow>\n            {!data || data.length === 0 ? (\n              <NoDataComponent name=\"object\" />\n            ) : (\n              data.map(({ OBJECT_NAME, CREATED, OBJECT_ID, LAST_DDL_TIME }) => {\n                return (\n                  <div key={OBJECT_ID} className=\"detail-row\">\n                    <div className=\"file-name\">\n                      <SvgIcon>\n                        <path d={mdiFlashCircle} />\n                      </SvgIcon>\n                      {OBJECT_NAME}\n                    </div>\n                    <div className=\"details\">\n                      <div className=\"object-block\">\n                        <div className=\"top\">Last DDL Time</div>\n                        <div>{LAST_DDL_TIME}</div>\n                      </div>\n                      <div className=\"object-block\">\n                        <div className=\"top\">Created</div>\n                        <div>{CREATED}</div>\n                      </div>\n                      {/* Designs have some buttons here */}\n                    </div>\n                  </div>\n                );\n              })\n            )}\n          </Overflow>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { STATUS_TYPES } from '../../store/selectors';\n\nimport './StatusLabel.local.scss';\n\nconst STATUS_LABEL_MAP = {\n  [STATUS_TYPES.down]: 'Down',\n  [STATUS_TYPES.up]: 'Up',\n  [STATUS_TYPES.error]: 'Has errors',\n  [STATUS_TYPES.notConnected]: 'Not connected',\n  [STATUS_TYPES.notFound]: 'Not found',\n};\n\nexport class StatusLabel extends React.PureComponent {\n  render() {\n    const {\n      status\n    } = this.props;\n\n    return (\n      <div className={`status ${status.replace(/\\s/g, '-')}`} role=\"presentation\">{STATUS_LABEL_MAP[status]}</div>\n    );\n  }\n}\n\nStatusLabel.propTypes = {\n  status: string\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\nimport LayersOutlinedIcon from '@material-ui/icons/LayersOutlined';\nimport { mdiClipboardPlayMultipleOutline, mdiShieldCheckOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nexport const navigationItems = [\n  {\n    title: <FormattedMessage id=\"navigation.dashboard\" />,\n    to: '/dashboard',\n    id: 'dashboard',\n    icon: <DashboardOutlinedIcon />,\n    qaClass: 'qa-nav-dashboard'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.jobs\" />,\n    to: '/jobs',\n    id: 'jobs',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiClipboardPlayMultipleOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-jobs'\n  },\n  {\n    title: <FormattedMessage id=\"navigation.system\" />,\n    to: '/system',\n    id: 'system',\n    icon: <LayersOutlinedIcon />,\n    qaClass: 'qa-nav-system',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.entitites\" />,\n        to: '/system/entities',\n        qaClass: 'qa-nav-entities'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.explorer\" />,\n        to: '/system/explorer',\n        qaClass: 'qa-nav-explorer'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.user.and.groups\" />,\n        to: '/system/mas-accounts/users',\n        qaClass: 'qa-nav-mas-accounts'\n      }\n    ]\n  },\n  {\n    title: <FormattedMessage id=\"navigation.compliance\" />,\n    to: '/compliance',\n    id: 'compliance',\n    icon: (\n      <SvgIcon>\n        <Icon path={mdiShieldCheckOutline} />\n      </SvgIcon>\n    ),\n    qaClass: 'qa-nav-compliance',\n    items: [\n      {\n        title: <FormattedMessage id=\"navigation.license.collection\" />,\n        to: '/compliance/license-collection',\n        qaClass: 'qa-nav-license-collection'\n      },\n      {\n        title: <FormattedMessage id=\"navigation.executive.dashboard\" />,\n        to: '/compliance/executive-dashboard',\n        qaClass: 'qa-nav-executive-dashboard'\n      }\n    ]\n  }\n];\n","import { getQuery, getInvocationStatus } from './selectors';\n\nimport { InvocationStatus } from './constants';\n\nimport { fetchInvocation } from './actions';\n\nimport withPolling from 'shared/lib/polling';\n\nimport store from 'core/store';\n\nasync function task() {\n  const { uuid, process } = getQuery(store.getState());\n\n  if (uuid) {\n    await store.dispatch(fetchInvocation(uuid, process));\n  }\n\n  const STATUS = getInvocationStatus(store.getState());\n\n  switch (STATUS) {\n    case InvocationStatus.EXECUTING:\n    case InvocationStatus.SCHEDULED:\n    case InvocationStatus.DELAYED:\n    case 'NOT_FETCHED':\n      console.log('[invocation-poller] - polling', STATUS); // eslint-disable-line\n      throw new Error('need to poll invocation...');\n    default:\n      break;\n  }\n\n  console.log('[invocation-poller] - done'); // eslint-disable-line\n\n  return Promise.resolve();\n}\n\nexport const invocationPoller = withPolling(task, 5000);\n","import React from 'react';\n\nimport './ListOutput.local.scss';\n\nexport const ListOutput = ({ output, type, errors }) => {\n  let content;\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          {errors.map((error, index) => {\n            return <p key={index}>• {error}</p>;\n          })}\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              {output.map((row, index) => {\n                return (\n                  <p className=\"row\" key={`${row.data.text}-${index}`}>\n                    {row.data.text}\n                  </p>\n                );\n              })}\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        {output.map((row, index) => {\n          return (\n            <p className=\"row\" key={index}>\n              {row.data.text}\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return content;\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { fromJS } from 'immutable';\n\nexport const bindReducer = (initialState, actions) => (state = fromJS(initialState), action) => {\n  if (typeof actions[action.type] === 'function') {\n    return actions[action.type](state, action.payload);\n  }\n\n  return state;\n};\n","export const actionStates = {\n  LOADING: 'LOADING',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS',\n};\n","import { actionStates } from 'shared/lib';\n\nexport class ActionCreatorHandler {\n  constructor(action) {\n    this.action = action;\n  }\n\n  getEventAction() {\n    return this.action;\n  }\n\n  getLoadingAction() {\n    return `${this.action}__${actionStates.LOADING}`;\n  }\n\n  getFailAction() {\n    return `${this.action}__${actionStates.FAIL}`;\n  }\n\n  getSuccessAction() {\n    return `${this.action}__${actionStates.SUCCESS}`;\n  }\n\n  dispatchLoading(payload) {\n    return {\n      type: this.getLoadingAction(),\n      payload,\n    };\n  }\n\n  dispatchFail(payload) {\n    return {\n      type: this.getFailAction(),\n      payload,\n    };\n  }\n\n  dispatchSuccess(payload) {\n    return {\n      type: this.getSuccessAction(),\n      payload,\n    };\n  }\n\n  dispatchEvent(payload) {\n    return {\n      type: this.action,\n      payload,\n    };\n  }\n}\n","export const slugify = (text) => text.toString().toLowerCase()\n  .trim()\n  .replace(/[^a-z0-9 -]/g, '')\n  .replace(/\\s+/g, '-')\n  .replace(/-+/g, '-');\n","export const createUrl = (url, params = {}) => {\n  if (typeof params !== 'object' || !params) {\n    return url;\n  }\n  let path = url;\n  const query = { ...params };\n  Object.keys(query).forEach((key) => {\n    if (typeof query[key] !== 'undefined' && path.includes(`:${key}`)) {\n      path = path.replace(`:${key}`, query[key]);\n      delete query[key];\n    }\n  });\n\n  if (!Object.keys(query).length || !Object.keys(query).find(((key) => typeof query[key] !== 'undefined'))) {\n    return path;\n  }\n\n  const paramsUrl = Object.keys(query).filter((key) => query[key])\n    .map((key) => `${key}=${encodeURIComponent(query[key])}`)\n    .join('&');\n  return `${path}${'?'.concat(...paramsUrl)}`;\n};\n","export const numberPretty = (number) => {\n  if (!number) {\n    return number;\n  }\n  const parts = number.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  return parts.join('.');\n};\n","const formatNumber = (number, pow, decimals = 1) => (number / (10 ** pow)).toFixed(decimals);\n\nexport const smartNumber = (number, decimals = false) => {\n  if (typeof number !== 'number') {\n    return number;\n  }\n  if (number < 10 ** 3) {\n    if (typeof decimals === 'number') {\n      return +number.toFixed(+decimals);\n    }\n    return number;\n  }\n\n  if (number < 10 ** 6) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 3, decimals)} K`;\n    }\n    return `${formatNumber(number, 3)} K`;\n  }\n\n  if (number < 10 ** 9) {\n    if (typeof decimals === 'number') {\n      return `${formatNumber(number, 6, decimals)} M`;\n    }\n    return `${formatNumber(number, 6)} M`;\n  }\n\n  if (typeof decimals === 'number') {\n    return `${formatNumber(number, 9, decimals)} B`;\n  }\n  return `${formatNumber(number, 9)} B`;\n};\n","export const capitalizeFirstLetter = (s) => s.toString().charAt(0).toUpperCase() + s.slice(1);\n","export const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n","/* eslint-disable */\nexport const phoneNumberPattern = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n","export const urlPattern = /^(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)$/;\n","export const randomStringGenerator = (length = 5) => {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n\n  for (let i = 0; i < length; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n","export const generateUniqueId = () => btoa(Math.floor(new Date().valueOf() * Math.random())).replace(/=/g, '').slice(0, 16);\n","export const emptyFunc = () => null;\n","export const delay = (timer) => new Promise((resolve) => {\n  setTimeout(() => {\n    resolve();\n  }, timer);\n});\n","import moment from 'moment';\n\nimport { isBeforeDay } from './isBeforeDay';\n\nexport function isInclusivelyAfterDay(a, b) {\n  if (!moment.isMoment(a) || !moment.isMoment(b)) return false;\n  return !isBeforeDay(a, b);\n}\n","const STATES = {\n  loading: 'LOADING',\n  fail: 'FAIL',\n  success: 'SUCCESS'\n};\n\nexport const SEPARATOR = '__';\n\nexport function type(name, stateKey) {\n  const state = STATES[stateKey];\n\n  if (state) {\n    return name + SEPARATOR + state;\n  }\n\n  return name;\n}\n\n/**\n *\n * These could be written as classes with static methods.\n *\n * */\n\nexport const types = {\n  action: type,\n  loading: function loadingType(name) {\n    return type(name, 'loading');\n  },\n  success: function successType(name) {\n    return type(name, 'success');\n  },\n  fail: function failType(name) {\n    return type(name, 'fail');\n  }\n};\n\nexport const creators = {\n  action: function action(name, payload) {\n    return { type: name, payload };\n  },\n  loading: function loadingAction(name, payload) {\n    return { type: type(name, 'loading'), payload };\n  },\n  success: function successAction(name, payload) {\n    return { type: type(name, 'success'), payload };\n  },\n  fail: function failAction(name, payload) {\n    return { type: type(name, 'fail'), payload };\n  }\n};\n","import { produce } from 'immer';\n\nfunction unchanged(state) {\n  return state;\n}\n\nexport function createReducer(reducers, initialState = {}) {\n  const reducerInitialState = reducers.initialState || initialState;\n\n  return function r(state = reducerInitialState, action) {\n    const { type } = action;\n\n    if (!type) {\n      console.error('[createReducer] action does not have a type', action); // eslint-disable-line\n      return unchanged(state);\n    }\n\n    const reducer = reducers[action.type];\n\n    if (reducer) {\n      return produce(state, nextState => {\n        reducer(nextState, action, state);\n      });\n    }\n\n    return unchanged(state);\n  };\n}\n","import moment from 'moment';\nimport _ from 'lodash';\n\nexport function getWorkloadData(jobs, dateRange) {\n  const isSingleDay =\n    moment(dateRange.currentDate).format('MMM D YY') ===\n    moment(dateRange.endDate).format('MMM D YY');\n\n  if (jobs.length === 0) return [];\n\n  const jobsWithFormattedInvokedDate = _.orderBy(jobs, ['date_invoke'], ['asc']).map(job => ({\n    ...job,\n    date_invoke: isSingleDay\n      ? `${moment(job.date_invoke).format('H')}:00`\n      : moment(job.date_invoke).format('MMM D YY')\n  }));\n  const groupJobsByDate = _.groupBy(jobsWithFormattedInvokedDate, 'date_invoke');\n  const data = [];\n\n  // if no process was executed during selected interval, simply return an empty array\n  if (Object.keys(groupJobsByDate).length === 0) {\n    return [];\n  }\n\n  Object.keys(groupJobsByDate).forEach(date => {\n    const item = { name: date, SUCCEEDED: 0, FAILED: 0, ABORTED: 0, total: 0 };\n    groupJobsByDate[date].forEach(el => {\n      item[el.status]++;\n      if (el.status === 'SUCCEEDED' || el.status === 'FAILED' || el.status === 'ABORTED') {\n        item.total++;\n      }\n    });\n\n    data.push(item);\n  });\n\n  // display all days between the first one that run a process and the last one\n  // or all hours from 0->23\n  const intervalArray = [];\n  const daylist = isSingleDay ? getHoursArray(dateRange) : getDaysArray(dateRange);\n  const totalDays = daylist.reduce((o, key) => ({ ...o, [key]: '' }), {});\n\n  // update the total days from the interval array with the days that have some processes executed\n  data.forEach(day => {\n    totalDays[day.name] = day;\n  });\n\n  Object.keys(totalDays).forEach(date => {\n    // for the days in the interval that have no executed process, add an empty entry\n    if (typeof totalDays[date] === 'string') {\n      totalDays[date] = {\n        name: date,\n        SUCCEEDED: 0,\n        FAILED: 0,\n        ABORTED: 0,\n        total: 0\n      };\n    }\n    intervalArray.push(totalDays[date]);\n  });\n\n  return intervalArray;\n}\n/**\n * Creates an array for the selected interval of days\n */\nfunction getDaysArray(dateRange) {\n  let { currentDate } = dateRange;\n  const { endDate } = dateRange;\n  const dateArray = [];\n\n  while (currentDate <= endDate) {\n    dateArray.push(moment(currentDate).format('MMM D YY'));\n    currentDate = moment(currentDate).add(1, 'days');\n  }\n\n  return dateArray;\n}\n\n/**\n *\n * Creates an array for all the hours in a day 0 -> 23\n */\nfunction getHoursArray() {\n  const dateArray = [];\n\n  for (let i = 0; i < 24; i++) {\n    dateArray.push(`${i}:00`);\n  }\n  return dateArray;\n}\n","import { CheckAuthorizationEffect } from './check-authorization/check-authorization.effect';\nimport { LoginEffect } from './login/login.effect';\nimport { LogoutEffect } from './logout/logout.effect';\nimport { BeHealthEffect, BeLicenceEffect, BeVersionEffect } from './be-version/be-version.effect';\n\nexport const sessionEffects = [\n  CheckAuthorizationEffect,\n  LoginEffect,\n  LogoutEffect,\n  BeVersionEffect,\n  BeLicenceEffect,\n  BeHealthEffect,\n];\n","import { emptyFunc } from 'shared/lib';\n\nexport const tryAsync = async (action, onError = emptyFunc) => {\n  try {\n    await action();\n  } catch (e) {\n    onError(e);\n  }\n};\n","import Cookie from 'js-cookie';\nimport axios from 'axios';\n\nimport { CONSTANTS } from 'config';\nimport { createUrl } from 'shared/lib';\n\nclass RestClientClass {\n  constructor() {\n    this.authentications = {\n      basicAuth: {\n        name: 'Authorization',\n        accessToken: '',\n      },\n    };\n\n    this.baseUrl = CONSTANTS.BASE.HOST;\n\n    if (CONSTANTS.BASE.VERSION) {\n      this.baseUrl = `${CONSTANTS.BASE.HOST}/${CONSTANTS.BASE.VERSION}`;\n    }\n\n    this.client = axios.create({\n      timeout: CONSTANTS.BASE.TIMEOUT,\n      baseURL: this.baseUrl,\n      // withCredentials: true,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    this.get = this.get.bind(this);\n    this.delete = this.delete.bind(this);\n    this.head = this.head.bind(this);\n    this.post = this.post.bind(this);\n    this.put = this.put.bind(this);\n    this.patch = this.patch.bind(this);\n  }\n\n  setBasicAuth() {\n    this.authentications.basicAuth.accessToken = `Basic ${Cookie.get('Authorization')}`;\n  }\n\n  removeBasicAuth() {\n    this.authentications.basicAuth.accessToken = Cookie.remove('Authorization');\n  }\n\n  getRequestConfig() {\n    return {\n      headers: {\n        [this.authentications.basicAuth.name]: this.authentications.basicAuth.accessToken,\n      },\n    };\n  }\n\n  get(path, query) {\n    const url = createUrl(path, query);\n    return this.client.get(url, this.getRequestConfig());\n  }\n\n  delete(path, query) {\n    const url = createUrl(path, query);\n    return this.client.delete(url, this.getRequestConfig());\n  }\n\n  head(path, query) {\n    const url = createUrl(path, query);\n    return this.client.head(url, this.getRequestConfig());\n  }\n\n  post(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.post(url, body, this.getRequestConfig());\n  }\n\n  put(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.put(url, body, this.getRequestConfig());\n  }\n\n  patch(path, body, query) {\n    const url = createUrl(path, query);\n    return this.client.patch(url, body, this.getRequestConfig());\n  }\n}\n\nexport const RestClient = new RestClientClass();\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Cookie from 'js-cookie';\n\nimport { actionStates } from 'shared/lib';\nimport { loginSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nimport { Form } from './components';\n\nexport class LoginPage extends React.PureComponent {\n  componentDidMount() {\n    Cookie.remove('Authorization');\n  }\n\n  componentDidUpdate() {\n    if (this.props.status === actionStates.SUCCESS) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.login.title\"\n        isLoading={this.props.status === actionStates.LOADING}\n      >\n        <Form\n          isLoading={this.props.status === actionStates.LOADING}\n          errors={this.props.errors}\n          submit={this.props.login}\n          resetErrors={this.props.resetErrors}\n        />\n      </Container>\n    );\n  }\n\n  static path = '/login';\n}\n\nLoginPage.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  errors: PropTypes.object.isRequired,\n  status: PropTypes.oneOf([actionStates.LOADING, actionStates.SUCCESS, actionStates.FAIL, '']).isRequired,\n  login: PropTypes.func.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n};\n\nexport const mapStateToProps = (state) => ({\n  errors: loginSelector(state).get('errors'),\n  status: loginSelector(state).get('status'),\n});\n\nexport const mapDispatchToProps = (dispatch) => ({\n  login: (data) => dispatch(actions.login.dispatchLoading(data)),\n  resetErrors: () => dispatch(actions.login.dispatchFail([])),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport LoginGraphic from '../../../../assets/images/login_graphic.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_blue.svg';\nimport MasLogo from '../../../../assets/images/mas_logo_blue.svg';\n\nimport './container.local.scss';\n\nexport class ContainerComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={`${className} flex`}>\n        <div className={`${className}__wrapper`}>\n          <div className=\"header\">\n            <div className=\"mas-logo-container\">\n              <img className=\"img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n            </div>\n            <Typography className={`${className}__title`} variant=\"h3\" component=\"h2\">\n              <FormattedMessage id={this.props.title} />\n            </Typography>\n            {!!this.props.description && (\n              <div className={`${className}__description`}>\n                {this.props.description}\n              </div>\n            )}\n          </div>\n          {this.props.children}\n        </div>\n        <div className={`${className}__graphics`}>\n          <div className=\"logo-container\">\n            <img className=\"img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          </div>\n          <div className=\"graphic-container\">\n            <img className=\"img-responsive\" src={LoginGraphic} alt=\"Login graphic\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nContainerComponent.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  description: PropTypes.string,\n  className: PropTypes.string,\n};\n\nContainerComponent.defaultProps = {\n  className: 'container',\n  description: '',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { RestErrors } from 'shared/components';\n\nimport './form.local.scss';\n\nexport class FormComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false\n    };\n\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  render() {\n    const { className } = this.props;\n    const restErrors = this.getRestErrors();\n\n    return (\n      <div className={className}>\n        <form onSubmit={this.submitHandler} noValidate autoComplete=\"off\">\n          <div className=\"flex direction-column\">\n            <TextField\n              autoFocus\n              className={`${className}__field`}\n              helperText={this.getError('username')}\n              onChange={this.valueChangeHandler('username')}\n              variant=\"outlined\"\n              label={<FormattedMessage id=\"general.form.username\" />}\n              inputProps={{\n                className: 'qa-login-username',\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n              InputLabelProps={{\n                style: { fontSize: '14px', fontFamily: 'Lato' }\n              }}\n            />\n\n            <FormControl className={`${className}__field`} variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={this.state.showPassword ? 'text' : 'password'}\n                value={this.state.password}\n                onChange={this.valueChangeHandler('password')}\n                inputProps={{\n                  className: 'qa-login-password',\n                  style: { fontSize: '14px', fontFamily: 'Lato' }\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <div className=\"password-icon\">\n                      <IconButton\n                        className=\"qa-login-toggle-password-visibility\"\n                        aria-label=\"toggle password visibility\"\n                        onClick={this.setShowPassword}\n                        onMouseDown={this.handleMouseDownPassword}\n                        edge=\"end\"\n                        color=\"inherit\"\n                      >\n                        {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </div>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </div>\n          {restErrors.size > 0 && (\n            <div className={`${className}__errors`}>\n              <RestErrors errors={restErrors} />\n            </div>\n          )}\n          <div className={`${className}__actions flex`}>\n            <Button\n              className=\"qa-login-btn\"\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={\n                this.props.isLoading || this.state.username === '' || this.state.password === ''\n              }\n            >\n              <FormattedMessage id=\"session.login.button\" />\n            </Button>\n            {/* <div className=\"forgot-password qa-forgot-password\">\n              <FormattedMessage id=\"session.login.forgot-password\" />\n            </div> */}\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  setShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n\n  handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  getError(field) {\n    const error = this.props.errors.find(item => item.get('path') === `.${field}`);\n    if (!error) {\n      return '';\n    }\n\n    return error.get('message') || 'This field is invalid';\n  }\n\n  getRestErrors() {\n    return this.props.errors.filter(\n      item => item.get('path') !== '.username' && item.get('path') !== '.password'\n    );\n  }\n\n  resetErrors() {\n    if (this.props.errors.size) {\n      this.props.resetErrors();\n    }\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    this.props.submit({\n      username: this.state.username,\n      password: this.state.password\n    });\n  }\n\n  valueChangeHandler(name) {\n    return event => {\n      this.resetErrors();\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n  }\n}\n\nFormComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  resetErrors: PropTypes.func.isRequired,\n  submit: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nFormComponent.defaultProps = {\n  className: 'form'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { slugify } from 'shared/lib';\n\nimport './rest-errors.local.scss';\n\nexport class RestErrorsComponent extends React.PureComponent {\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={className}>\n        {this.props.errors.map((error) => (\n          <div key={slugify(error.get('message'))}>\n            {error.get('message')}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nRestErrorsComponent.propTypes = {\n  errors: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nRestErrorsComponent.defaultProps = {\n  className: 'rest-errors',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiHexagonMultipleOutline, mdiDatabase } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport './job-item.local.scss';\n\nexport class JobItemComponent extends React.PureComponent {\n  render() {\n    const { extended } = this.props;\n    if (extended) {\n      return (\n        <div className={`${this.props.className} ${this.jobStatus()}`}>\n          <div className=\"status-icon\">{this.props.statusChild}</div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {this.props.job.get('process')}</p>\n                    {this.props.job.get('schedule') && (\n                      <p>Schedule: {this.props.job.get('schedule')}</p>\n                    )}\n                  </>\n                }\n              >\n                <div className=\"name\">{this.formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {this.props.job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {this.props.job.get('user_owner')}\n                </div>\n              )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('shell') &&\n                this.props.job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('shell') &&\n                      this.props.job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {this.props.job.get('connections') &&\n                this.props.job.get('connections').get('dbms') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                this.props.job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {this.props.job.get('connections') &&\n                      this.props.job.get('connections').get('dbms') &&\n                      this.props.job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"date\">\n                  {moment(this.props.job.get('date_invoke'))\n                    .local()\n                    .format('MMM DD YYYY')}\n                </div>\n              </LimitlessTooltip>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${this.props.className} ${this.jobStatus()}`}>\n        <Link to={`/jobs/job?invocation=${this.props.job.get('uuid')}`}>\n          <div className=\"first-row\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {this.props.job.get('process')}</p>\n                  {this.props.job.get('schedule') && (\n                    <p>Schedule: {this.props.job.get('schedule')}</p>\n                  )}\n                </>\n              }\n            >\n              <div className=\"name\">{this.formatName()}</div>\n            </LimitlessTooltip>\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"time\">\n                {moment(this.props.job.get('date_invoke')).format('HH:mm:ss')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n          <div className=\"second-row\">\n            {this.props.job.get('user_owner') && (\n              <div className=\"run-by\">\n                <AccountCircleOutlinedIcon />\n                {this.props.job.get('user_owner')}\n              </div>\n            )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('name') && (\n                <div className=\"dbms\">\n                  <SvgIcon>\n                    <Icon path={mdiHexagonMultipleOutline} />\n                  </SvgIcon>\n                  {this.props.job\n                    .get('connections')\n                    .get('dbms')\n                    .get('name')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('shell') &&\n              this.props.job\n                .get('connections')\n                .get('shell')\n                .get('host_address') && (\n                <div className=\"server\">\n                  <StorageIcon />\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('shell') &&\n                    this.props.job\n                      .get('connections')\n                      .get('shell')\n                      .get('host_address')}\n                </div>\n              )}\n            {this.props.job.get('connections') &&\n              this.props.job.get('connections').get('dbms') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special') &&\n              this.props.job\n                .get('connections')\n                .get('dbms')\n                .get('protocol_special')\n                .get('database') && (\n                <div className=\"database\">\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                  {this.props.job.get('connections') &&\n                    this.props.job.get('connections').get('dbms') &&\n                    this.props.job\n                      .get('connections')\n                      .get('dbms')\n                      .get('protocol_special')\n                      .get('database')}\n                </div>\n              )}\n            <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n              <div className=\"date\">\n                {moment(this.props.job.get('date_invoke')).format('MMM DD YYYY')}\n              </div>\n            </LimitlessTooltip>\n          </div>\n        </Link>\n      </div>\n    );\n  }\n\n  jobStatus = () => {\n    switch (this.props.job.get('status')) {\n      case 'EXECUTING':\n        return 'executing';\n      case 'SUCCEEDED':\n        return 'succeeded';\n      case 'SCHEDULED':\n        return 'scheduled';\n      case 'DELAYED':\n        return 'delayed';\n      case 'ABORTED':\n        return 'aborted';\n      case 'FAILED':\n        return 'failed';\n      case 'KILLED':\n        return 'killed';\n      default:\n        return '';\n    }\n  };\n\n  formatName = () => {\n    let name = this.props.job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas =\n      this.formatName.canvas || (this.formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n}\n\nJobItemComponent.propTypes = {\n  className: PropTypes.string,\n  job: PropTypes.object.isRequired,\n  extended: PropTypes.bool,\n  statusChild: PropTypes.element\n};\n\nJobItemComponent.defaultProps = {\n  className: 'job-item',\n  extended: false,\n  statusChild: null\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { AreaChart, Area, XAxis, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Center } from 'shared/components';\n\nimport { CustomTooltip, CustomAxisTick } from './components';\n\nimport './workload-graph.local.scss';\n\nexport class WorkloadGraphComponent extends React.PureComponent {\n  render() {\n    if (this.props.data.length === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <div className={this.props.className}>\n        <ResponsiveContainer>\n          <AreaChart\n            data={this.props.data}\n            margin={{ top: 16, right: 5, left: 5, bottom: 16 }}\n            onClick={this.setSingleDay}\n          >\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0.16} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <defs>\n              <linearGradient id=\"chartStroke\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                <stop offset=\"0%\" stopColor=\"#3765AF\" stopOpacity={0} />\n                <stop offset=\"5%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"95%\" stopColor=\"#3765AF\" stopOpacity={1} />\n                <stop offset=\"100%\" stopColor=\"#3765AF\" stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              dataKey=\"name\"\n              tickSize={false}\n              axisLine={false}\n              interval=\"preserveStartEnd\"\n              tick={<CustomAxisTick />}\n            />\n            <Tooltip\n              content={<CustomTooltip isSingleDay={this.props.isSingleDay} />}\n              offset={0}\n              cursor={false}\n              viewBox={{ width: 750, height: 144 }}\n              position={{ x: 'auto', y: 0 }}\n            />\n            <Area\n              type=\"monotone\"\n              dataKey=\"total\"\n              stroke=\"url(#chartStroke)\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#gradient)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n\n  setSingleDay = e => {\n    if (!this.props.isSingleDay && e && this.props.setSingleDay) {\n      this.props.setSingleDay({\n        startDate: moment(e.activeLabel),\n        endDate: moment(e.activeLabel)\n      });\n    }\n  };\n}\n\nexport default WorkloadGraphComponent;\n\nWorkloadGraphComponent.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.array.isRequired\n};\n\nWorkloadGraphComponent.defaultProps = {\n  className: 'workload-graph'\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport './custom-tooltip.local.scss';\n\nexport class CustomTooltipComponent extends React.Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.label !== this.props.label) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    if (!this.props.active || !this.props.payload || !this.props.payload.length) return null;\n\n    const label = this.props.isSingleDay\n      ? this.props.payload[0].payload.name\n      : moment(this.props.payload[0].payload.name).format('MMM DD YYYY');\n\n    return (\n      <div className={this.props.className} position={{ x: '100%', y: '-100%' }}>\n        {this.props.payload && (\n          <>\n            <div className=\"date\">{label}</div>\n            <div className=\"info-container\">\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.succeeded\" />\n                </div>\n                <div className=\"value success\">{this.props.payload[0].payload.SUCCEEDED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.aborted\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.ABORTED}</div>\n              </div>\n              <div className=\"info-row\">\n                <div className=\"label\">\n                  <FormattedMessage id=\"dashboard.failed\" />\n                </div>\n                <div className=\"value error\">{this.props.payload[0].payload.FAILED}</div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CustomTooltipComponent;\n\nCustomTooltipComponent.propTypes = {\n  className: PropTypes.string,\n  payload: PropTypes.array,\n  active: PropTypes.bool,\n  label: PropTypes.string\n};\n\nCustomTooltipComponent.defaultProps = {\n  className: 'custom-tooltip',\n  payload: [],\n  active: false,\n  label: ''\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './custom-axis-tick.local.scss';\n\nexport class CustomAxisTickComponent extends React.PureComponent {\n  render() {\n    return (\n      <g transform={`translate(${this.props.x},${this.props.y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill=\"rgba(12, 50, 110, 0.38)\">{this.props.payload.value}</text>\n      </g>\n    );\n  }\n}\n\nexport default CustomAxisTickComponent;\n\nCustomAxisTickComponent.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  payload: PropTypes.object,\n};\n\nCustomAxisTickComponent.defaultProps = {\n  x: null,\n  y: null,\n  payload: {},\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './circle-img.local.scss';\n\nexport class CircleImgComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.image}\n      </div>\n    );\n  }\n}\n\nexport default CircleImgComponent;\n\nCircleImgComponent.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.object.isRequired,\n};\n\nCircleImgComponent.defaultProps = {\n  className: 'circle-img',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './number-label.local.scss';\n\nexport class NumberLabelComponent extends React.PureComponent {\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.props.number}\n      </div>\n    );\n  }\n}\n\nexport default NumberLabelComponent;\n\nNumberLabelComponent.propTypes = {\n  className: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nNumberLabelComponent.defaultProps = {\n  className: 'number-label',\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport './string-label.local.scss';\n\nexport class StringLabelComponent extends React.PureComponent {\n  render() {\n    return <div className={this.props.className}>{this.props.text}</div>;\n  }\n}\n\nexport default StringLabelComponent;\n\nStringLabelComponent.propTypes = {\n  className: PropTypes.string,\n  text: PropTypes.node.isRequired\n};\n\nStringLabelComponent.defaultProps = {\n  className: 'string-label'\n};\n","import React, { PureComponent } from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport './search-input.local.scss';\n\nexport class SearchInputComponent extends PureComponent {\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <>\n        <div className=\"search-icon\">\n          <SearchIcon />\n        </div>\n        <InputBase\n          className=\"search-input-container\"\n          placeholder=\"Search\"\n          value={value}\n          onChange={onChange}\n          inputProps={{\n            className: 'search qa-search',\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchInputComponent;\n\nSearchInputComponent.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport classnames from 'classnames';\n\nimport './dropdown.local.scss';\n\nexport class DropdownComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDropdownOpen: false\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.isDropdownOpen) {\n      this.setState({ isDropdownOpen: true });\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    let parentWidth;\n\n    if (this.anchorRef && this.anchorRef.current && this.anchorRef.current.offsetWidth) {\n      parentWidth = this.anchorRef.current.offsetWidth;\n    }\n    return (\n      <>\n        {this.props.target(\n          { isOpen: this.state.isDropdownOpen, ref: this.anchorRef },\n          { toggle: this.handleToggle }\n        )}\n        {items && (\n          <Popover\n            open={this.state.isDropdownOpen}\n            anchorEl={this.anchorRef.current}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'left'\n            }}\n          >\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList className=\"dropdown-menu-container\" style={{ width: parentWidth }}>\n                {items.map((item, index) => (\n                  <MenuItem\n                    className={classnames('', { disabled: item.disabled })}\n                    key={index}\n                    onClick={() => this.onClickCallback(index)}\n                  >\n                    {item.icon && <ListItemIcon className=\"icon\">{item.icon}</ListItemIcon>}\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </MenuList>\n            </ClickAwayListener>\n          </Popover>\n        )}\n      </>\n    );\n  }\n\n  handleToggle = () => {\n    if (this.props.disabled) {\n      return false;\n    }\n    this.setState(prevState => ({\n      isDropdownOpen: !prevState.isDropdownOpen\n    }));\n  };\n\n  setCloseDropdown = event => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ isDropdownOpen: false });\n  };\n\n  onClickCallback = itemIndex => {\n    this.props.onSelect(itemIndex, this.props.items[itemIndex]);\n    this.setState({ isDropdownOpen: false });\n  };\n}\n\nexport default DropdownComponent;\n\nDropdownComponent.propTypes = {\n  onSelect: PropTypes.func,\n  target: PropTypes.func,\n  items: PropTypes.array,\n  isDropdownOpen: PropTypes.bool\n};\n\nDropdownComponent.defaultProps = {\n  onSelect: () => {},\n  items: [],\n  target: (meta, actions) => (\n    <Button ref={meta.ref} onClick={actions.toggle}>\n      {meta.isOpen ? 'Close' : 'Dropdown'}\n    </Button>\n  ),\n  isDropdownOpen: false\n};\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './small-input.local.scss';\n\nexport const SmallInputComponent = forwardRef(({ value, icon, disabled, ...others }, ref) => (\n  <div\n    ref={ref}\n    className={classnames('small-input', { disabled, active: value.length })}\n  >\n    { icon && <div className=\"icon\">{icon}</div> }\n    <input\n      className=\"input\"\n      type=\"text\"\n      value={value}\n      {...others}\n    />\n  </div>\n));\n\nSmallInputComponent.propTypes = {\n  icon: PropTypes.node,\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nSmallInputComponent.defaultProps = {\n  icon: null,\n  value: '',\n  disabled: false,\n};\n\nexport default SmallInputComponent;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { SingleDatePicker } from 'react-dates';\nimport { mdiCalendarBlank, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './single-date-picker.local.scss';\n\nexport class SingleDatePickerComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      focused: true\n    };\n  }\n\n  render() {\n    const { date, onDateChange, ...others } = this.props;\n\n    return (\n      <div className=\"date-picker-container\">\n        <SingleDatePicker\n          date={date}\n          onDateChange={onDateChange}\n          focused={this.state.focused}\n          onFocusChange={({ focused }) => this.setState({ focused })}\n          id=\"date-picker\"\n          numberOfMonths={1}\n          customInputIcon={\n            <SvgIcon>\n              <Icon path={mdiCalendarBlank} />\n            </SvgIcon>\n          }\n          placeholder=\"Select Date\"\n          isOutsideRange={() => false}\n          readOnly\n          hideKeyboardShortcutsPanel\n          displayFormat=\"MMM DD YYYY\"\n          /** TODO: @Razvan, look at this please. */\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          {...others}\n        />\n      </div>\n    );\n  }\n}\n\nSingleDatePickerComponent.propTypes = {\n  date: PropTypes.object,\n  onDateChange: PropTypes.func.isRequired\n};\n\nSingleDatePickerComponent.defaultProps = {\n  date: null\n};\n\nexport default SingleDatePickerComponent;\n","import React from 'react';\nimport moment from 'moment';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArrowLeftRight, mdiChevronLeft, mdiChevronRight } from '@mdi/js';\n\nimport DateRangePickerWrapper from './range-date-range-picker.container';\nimport 'react-dates/initialize'; // necessary for latest version\nimport 'react-dates/lib/css/_datepicker.css';\n\nimport './range-date-picker.local.scss';\n\nexport class RangeDatePicker extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"date-picker-container\">\n        <DateRangePickerWrapper\n          anchorDirection=\"left\"\n          autoFocus={false}\n          block={false}\n          readOnly\n          customArrowIcon={\n            <SvgIcon>\n              <Icon path={mdiArrowLeftRight} />\n            </SvgIcon>\n          }\n          customCloseIcon={null}\n          customInputIcon={null}\n          disabled={false}\n          displayFormat=\"MMM D YYYY\"\n          enableOutsideDays={false}\n          endDateId=\"endDate\"\n          endDatePlaceholderText=\"End Date\"\n          horizontalMargin={0}\n          initialEndDate={null}\n          initialStartDate={moment()}\n          initialVisibleMonth={null}\n          isDayBlocked={() => false}\n          isDayHighlighted={() => false}\n          isOutsideRange={() => false}\n          isRTL={false}\n          keepOpenOnDateSelect={false}\n          minimumNights={0}\n          monthFormat=\"MMMM YYYY\"\n          navPrev={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_leftButton__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronLeft} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navNext={\n            <div className=\"DayPickerNavigation_button DayPickerNavigation_button_1 DayPickerNavigation_button__default DayPickerNavigation_button__default_2 DayPickerNavigation_button__horizontal DayPickerNavigation_button__horizontal_3 DayPickerNavigation_button__horizontalDefault DayPickerNavigation_button__horizontalDefault_4 DayPickerNavigation_rightButton__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault_5 DayPicker-nav-icon\">\n              <SvgIcon>\n                <Icon path={mdiChevronRight} size={6} />\n              </SvgIcon>\n            </div>\n          }\n          navPosition=\"navPositionTop\"\n          numberOfMonths={2}\n          onClose={() => false}\n          onNextMonthClick={() => false}\n          onPrevMonthClick={() => false}\n          orientation=\"horizontal\"\n          phrases={{\n            calendarLabel: 'Calendar',\n            chooseAvailableEndDate: function noRefCheck() {},\n            chooseAvailableStartDate: function noRefCheck() {},\n            clearDates: 'Clear Dates',\n            closeDatePicker: 'Close',\n            dateIsSelected: function noRefCheck() {},\n            dateIsSelectedAsEndDate: function noRefCheck() {},\n            dateIsSelectedAsStartDate: function noRefCheck() {},\n            dateIsUnavailable: function noRefCheck() {},\n            enterKey: 'Enter key',\n            escape: 'Escape key',\n            focusStartDate: 'Interact with the calendar and add the check-in date for your trip.',\n            hideKeyboardShortcutsPanel: 'Close the shortcuts panel.',\n            homeEnd: 'Home and end keys',\n            jumpToNextMonth: 'Move forward to switch to the next month.',\n            jumpToPrevMonth: 'Move backward to switch to the previous month.',\n            keyboardBackwardNavigationInstructions:\n              'Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardForwardNavigationInstructions:\n              'Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.',\n            keyboardShortcuts: 'Keyboard Shortcuts',\n            leftArrowRightArrow: 'Right and left arrow keys',\n            moveFocusByOneDay: 'Move backward (left) and forward (right) by one day.',\n            moveFocusByOneMonth: 'Switch months.',\n            moveFocusByOneWeek: 'Move backward (up) and forward (down) by one week.',\n            moveFocustoStartAndEndOfWeek: 'Go to the first or last day of a week.',\n            openThisPanel: 'Open this panel.',\n            pageUpPageDown: 'page up and page down keys',\n            questionMark: 'Question mark',\n            returnFocusToInput: 'Return to the date input field.',\n            roleDescription: 'datepicker',\n            selectFocusedDate: 'Select the date in focus.',\n            showKeyboardShortcutsPanel: 'Open the keyboard shortcuts panel.',\n            upArrowDownArrow: 'up and down arrow keys'\n          }}\n          regular={false}\n          renderCalendarDay={undefined}\n          renderDayContents={text => this.renderDayContents(text)}\n          renderMonthText={null}\n          reopenPickerOnClearDates={false}\n          required={false}\n          screenReaderInputMessage=\"\"\n          showClearDates={false}\n          showDefaultInputIcon={false}\n          small={false}\n          startDateId=\"startDate\"\n          startDatePlaceholderText=\"Start Date\"\n          stateDateWrapper={() => false}\n          withFullScreenPortal={false}\n          withPortal={false}\n          onDatesChange={this.props.onDatesChange}\n          endDate={this.props.endDate}\n          startDate={this.props.startDate}\n          focusedInput={null}\n          hideKeyboardShortcutsPanel\n        />\n      </div>\n    );\n  }\n\n  renderDayContents = text => (\n    <div className=\"wrapper-custom-date\">\n      <div className=\"custom-date\">{text.date()}</div>\n    </div>\n  );\n}\n\nRangeDatePicker.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onDatesChange: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { array, object, oneOfType } from 'prop-types';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline,\n  mdiCancel,\n  mdiHexagonMultipleOutline,\n  mdiDatabase\n} from '@mdi/js';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nimport { LightTooltip, LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { Center } from 'shared/components';\n\nimport './JobResults.local.scss';\n\nexport class JobResults extends React.PureComponent {\n  render() {\n    const { jobs, fromSearch } = this.props;\n\n    if (jobs && jobs.size === 0) {\n      if (fromSearch) {\n        return <></>;\n      }\n      return <Center>Job list is empty</Center>;\n    }\n    return <>{this.renderJobsResults(jobs)}</>;\n  }\n\n  renderJobsResults = jobs =>\n    jobs.map((job, index) => (\n      <Link key={index} to={`/jobs/job?invocation=${job.get('uuid')}`}>\n        <div className=\"result-job-row\">\n          <LightTooltip placement=\"bottom-start\" title={job.get('status').toUpperCase()}>\n            <div className=\"job-status-container\">{this.jobStatus(job.get('status'))}</div>\n          </LightTooltip>\n          <div className=\"job-content\">\n            <LimitlessTooltip\n              placement=\"bottom-start\"\n              title={\n                <>\n                  <p>Invocation: {job.get('process')}</p>\n                  {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                </>\n              }\n            >\n              <div className=\"first-row\">{this.formatName(job.get('process'))}</div>\n            </LimitlessTooltip>\n\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"time\">\n                  <ScheduleIcon />\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"dbms\">\n                    <SvgIcon>\n                      <Icon path={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"database\">\n                    <SvgIcon>\n                      <Icon path={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </Link>\n    ));\n\n  jobStatus = status => {\n    switch (status) {\n      case 'EXECUTING':\n        return (\n          <div className=\"job-status executing\">\n            <SvgIcon>\n              <Icon path={mdiProgressClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SUCCEEDED':\n        return (\n          <div className=\"job-status succeeded\">\n            <SvgIcon>\n              <Icon path={mdiCheckCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'SCHEDULED':\n        return (\n          <div className=\"job-status scheduled\">\n            <SvgIcon>\n              <Icon path={mdiCalendarArrowRight} />\n            </SvgIcon>\n          </div>\n        );\n      case 'ABORTED':\n        return (\n          <div className=\"job-status aborted\">\n            <SvgIcon>\n              <Icon path={mdiStopCircleOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'DELAYED':\n        return (\n          <div className=\"job-status delayed\">\n            <SvgIcon>\n              <Icon path={mdiTimelineClock} />\n            </SvgIcon>\n          </div>\n        );\n      case 'FAILED':\n        return (\n          <div className=\"job-status failed\">\n            <SvgIcon>\n              <Icon path={mdiAlertRhombusOutline} />\n            </SvgIcon>\n          </div>\n        );\n      case 'KILLED':\n        return (\n          <div className=\"job-status killed\">\n            <SvgIcon>\n              <Icon path={mdiCancel} />\n            </SvgIcon>\n          </div>\n        );\n      default:\n        return '';\n    }\n  };\n\n  formatName = jobName => {\n    const formattedName = [];\n    const name = jobName.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    return formattedName;\n  };\n}\n\nJobResults.propTypes = {\n  jobs: oneOfType([array, object])\n};\n\nexport default JobResults;\n","import React, { createContext, useContext } from 'react';\nimport { any, node } from 'prop-types';\n\nconst Context = createContext();\n\nexport function Switch({ value, children }) {\n  return <Context.Provider value={value}>{children}</Context.Provider>;\n}\n\nSwitch.propTypes = {\n  value: any,\n  children: node\n};\n\nfunction Case({ value, children }) {\n  const contextValue = useContext(Context);\n\n  if (contextValue !== value) {\n    return null;\n  }\n\n  return children;\n}\n\nCase.propTypes = {\n  value: any,\n  children: node\n};\n\nSwitch.Case = Case;\n\nexport default Switch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MUITable from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nimport './Table.local.scss';\n\nexport const Table = ({ columns, children, sortBehavior, changeSort, className }) => {\n  return (\n    <MUITable stickyHeader className={className}>\n      <TableHead className=\"sticky-head\">\n        <TableRow>\n          {columns.map(HeaderCell(sortBehavior, changeSort))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {children}\n      </TableBody>\n    </MUITable>\n  );\n};\n\nconst HeaderCell = (sortBehavior, changeSort) => (column, index) => (\n  <TableCell\n    key={`header_column_${index}`}\n    align={column.align}\n    padding={column.padding}\n    sortDirection={sortBehavior ? sortBehavior.order : false}\n    variant={column.variant}\n  >\n    {column.sortKey && (\n      <TableSortLabel\n        active={sortBehavior.sortKey === column.sortKey}\n        direction={sortBehavior.order}\n        onClick={changeSort(column.sortKey, sortBehavior.order === 'asc' ? 'desc' : 'asc')}\n      >\n        {column.component ? column.component() : column.label}\n      </TableSortLabel>\n    )}\n    {!column.sortKey && (\n      column.component ? column.component() : column.label\n    )}\n  </TableCell>\n);\n\nTable.Row = TableRow;\nTable.Cell = TableCell;\n\nTable.propTypes = {\n  columns: PropTypes.array.isRequired,\n  sortBehavior: PropTypes.shape({\n    order: PropTypes.string,\n    sortKey: PropTypes.string\n  }),\n  changeSort: PropTypes.func\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { actions } from 'session/store/actions';\nimport { Container } from 'session/components';\n\nexport class LogoutPage extends React.PureComponent {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return (\n      <Container\n        title=\"session.logout.title\"\n        isLoading\n      >\n        <div />\n      </Container>\n    );\n  }\n\n  static path = '/logout';\n}\n\nLogoutPage.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport const mapDispatchToProps = (dispatch) => ({\n  logout: (data) => dispatch(actions.logout.dispatchLoading(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(LogoutPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FormattedMessage } from 'react-intl';\n\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartTimelineVariant } from '@mdi/js';\n\nimport {\n  Center,\n  CircleImg,\n  JobItem,\n  NumberLabel,\n  RangeDatePicker,\n  StringLabel,\n  WorkloadGraph\n} from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Main, Paper } from 'shared/components/layout';\nimport { filterStatusSelector } from './store/state';\nimport { Header } from 'core/components/Header';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { fetchEntity } from 'entities/actions';\nimport { Search, StatusContainer } from './containers';\n\nimport './root.module.scss';\nimport { ConnectedServersList } from './containers/servers-list/ServersList';\n\nexport class RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      }\n    };\n\n    this.onChangeDatesHandler = this.onChangeDatesHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    });\n\n    if (\n      this.props.entitiesStatus.process === 'not-fetched' ||\n      this.props.entitiesStatus.process === 'failed'\n    ) {\n      this.props.request('process');\n    }\n  }\n\n  render() {\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Dashboard\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    const averageJobs = Math.round(parseInt(this.props.jobs.get('total_count'), 10) / (days + 1));\n\n    return (\n      <div className={this.props.className}>\n        <Header>\n          <h1 className=\"header-title\">Dashboard</h1>\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Search />\n        <StatusContainer />\n        <div className=\"summary-container\">\n          <div className=\"jobs-container\">\n            {this.props.jobs.get('fetching') ? (\n              <Center>\n                <Loader>Loading jobs</Loader>\n              </Center>\n            ) : (\n              <>\n                <div className=\"jobs-content\" id=\"jobs-content\">\n                  {this.filteredJobs(this.props.storeFilterStatus)}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"workload-container\">\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Generating Workload Chart</Loader>\n                </Center>\n              ) : (\n                <>\n                  <div className=\"workload-header\">\n                    <CircleImg\n                      image={\n                        <SvgIcon>\n                          <Icon path={mdiChartTimelineVariant} />\n                        </SvgIcon>\n                      }\n                    />\n                    <NumberLabel number={averageJobs} />\n                    <StringLabel\n                      text={\n                        <>\n                          <FormattedMessage id=\"dashboard.jobs\" />/\n                          <FormattedMessage id=\"dashboard.day\" />\n                        </>\n                      }\n                    />\n                  </div>\n                  <div className=\"workload-content\">\n                    <WorkloadGraph\n                      data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                        currentDate: moment.unix(\n                          this.props.globalFilters.get('startDate'),\n                          'YYYY-MM-DD'\n                        ),\n                        endDate: moment.unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                      })}\n                      isSingleDay={\n                        moment\n                          .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD') ===\n                        moment\n                          .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                          .format('YYYY-MM-DD')\n                      }\n                      setSingleDay={this.onChangeDatesHandler}\n                    />\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"servers-usage-container\">\n              <ConnectedServersList />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  filteredJobs = status => {\n    const { jobs } = this.props;\n\n    if (status === 'ALL') {\n      if (jobs.get('content').size === 0) {\n        return <Center>There are no jobs available with the selected filters</Center>;\n      }\n\n      return (\n        <>\n          {jobs\n            .get('content')\n            .slice(0, 20)\n            .map((item, index) => (\n              <JobItem key={index} job={item} />\n            ))}\n          {jobs.get('total_count') > 20 && (\n            <Button className=\"full-log center qa-view-full-log\">\n              <Link to=\"/jobs\">\n                <FormattedMessage id=\"dashboard.view-full-log\" />\n              </Link>\n            </Button>\n          )}\n        </>\n      );\n    }\n\n    const totalFilteredJobs = jobs.get('content').filter(job => job.get('status') === status).size;\n\n    if (totalFilteredJobs === 0) {\n      return <Center>There are no jobs available with the selected filters</Center>;\n    }\n\n    return (\n      <>\n        {jobs\n          .get('content')\n          .filter(job => job.get('status') === status)\n          .slice(0, 20)\n          .map((item, index) => (\n            <JobItem key={index} job={item} />\n          ))}\n        {totalFilteredJobs > 20 && (\n          <Button className=\"full-log center qa-view-full-log\">\n            <Link to={`/jobs?status=${status}`}>\n              <FormattedMessage id=\"dashboard.view-full-log\" />\n            </Link>\n          </Button>\n        )}\n      </>\n    );\n  };\n\n  onChangeDatesHandler(range) {\n    this.setState({\n      range: {\n        startDate: range.startDate,\n        endDate: range.endDate\n      }\n    });\n\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n\n      const start = moment(range.startDate.format('YYYY-MM-DD'));\n      const end = moment(range.endDate.format('YYYY-MM-DD'));\n      const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n      this.props.getJobs({\n        date_invoke: moment(range.startDate).format('YYYY-MM-DD'),\n        period: days + 1,\n        page_size: 2147483645\n      });\n    }\n  }\n}\n\nRootModule.propTypes = {\n  className: PropTypes.string,\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nRootModule.defaultProps = {\n  className: 'dashboard'\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  storeFilterStatus: filterStatusSelector(state),\n  entitiesStatus: state.entities.fetch_status\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  request: data => dispatch(fetchEntity(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { node } from 'prop-types';\nimport classnames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Loader.local.scss';\n\nexport const Loader = ({ children, inline, left, ...props }) => {\n  return (\n    <div className={classnames('loader', { inline, left })}>\n      <CircularProgress {...props} />\n      {children && <div className=\"loader-text\">{children}</div>}\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  children: node\n};\n","import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './ParameterLoader.local.scss';\n\nexport const ParameterLoader = ({ children }) => {\n  return (\n    <div className=\"loader\">\n      {children && <div className=\"loader-text\">{children}</div>}\n      <div className=\"loader-slot\">\n        <LinearProgress variant=\"indeterminate\" />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { bool, node, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport { Overflow } from '../Overflow/Overflow';\n\nimport './Paper.local.scss';\n\nexport const Paper = ({ padded, flex, children, ...rest }) => (\n  <div className={classnames('paper', { padded, [flex]: flex })} {...rest}>\n    {children}\n  </div>\n);\n\nPaper.propTypes = {\n  children: node,\n  padded: bool,\n  flex: oneOf(['column', 'row'])\n};\n\nPaper.defaultProps = {\n  padded: true,\n  flex: 'column'\n};\n\nexport const PaperHeader = ({ children, ...rest }) => (\n  <header className=\"paper-header\" {...rest}>\n    {children}\n  </header>\n);\n\nPaperHeader.propTypes = {\n  children: node\n};\n\nexport const PaperContent = ({ children, scrollable }) => {\n  if (scrollable) {\n    return (\n      <Overflow className=\"paper-content\" variant=\"white\">\n        {children}\n      </Overflow>\n    );\n  }\n\n  return <main className=\"paper-content\">{children}</main>;\n};\n\nPaperContent.propTypes = {\n  scrollable: bool,\n  children: node\n};\n\nPaperContent.defaultProps = {\n  scrollable: true\n};\n\nexport const PaperFooter = ({ children }) => <footer className=\"paper-footer\">{children}</footer>;\n\nPaperFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nPaperFooter.Left = LeftSideSlot;\nPaperFooter.Right = RightSideSlot;\n\nexport const PaperTitle = ({ children, ...rest }) => (\n  <h2 className=\"paper-title\" {...rest}>\n    {children}\n  </h2>\n);\n\nPaperTitle.propTypes = {\n  children: node\n};\n\nPaper.Header = PaperHeader;\nPaper.Title = PaperTitle;\nPaper.Content = PaperContent;\nPaper.Footer = PaperFooter;\n","import React from 'react';\nimport { node, bool } from 'prop-types';\nimport classnames from 'classnames';\nimport './Main.local.scss';\n\nexport const Main = ({ flex, mdPage, children }) => (\n  <main\n    className={classnames('page-main', { flex, 'md-page': mdPage })}\n  >\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: node,\n  flex: bool,\n  mdPage: bool,\n};\n\nMain.defaultProps = {\n  flex: true,\n  mdPage: false\n};\n","import React from 'react';\nimport { bool, node } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './Section.local.scss';\n\nexport const Section = ({ children, full }) => (\n  <section\n    className={classnames('section-block', {\n      full\n    })}\n  >\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  children: node,\n  full: bool\n};\n\nexport const SectionTitle = ({ children, info }) => (\n  <>\n    <h3 className=\"section-title\">{children}</h3>\n    {info && <h4 className=\"section-title-info\">{info}</h4>}\n  </>\n);\n\nSectionTitle.propTypes = {\n  children: node,\n  info: node\n};\n\nexport const SectionHeader = ({ children }) => (\n  <>\n    <header className=\"section-header\">{children}</header>\n  </>\n);\n\nSectionHeader.propTypes = {\n  children: node\n};\n\nexport const SectionInfo = ({ children }) => (\n  <>\n    <h4 className=\"section-title-info\">{children}</h4>\n  </>\n);\n\nSectionInfo.propTypes = {\n  children: node\n};\n\nexport const SectionContent = ({ children }) => (\n  <>\n    <main className=\"section-content\">{children}</main>\n  </>\n);\n\nSection.Header = SectionHeader;\nSection.Content = SectionContent;\nSection.Title = SectionTitle;\nSection.Info = SectionInfo;\n","import React, { useState, useCallback } from 'react';\n\nimport { func, oneOf } from 'prop-types';\nimport classnames from 'classnames';\n\nimport './ScrollableContainer.local.scss';\n\nexport const ScrollableContainer = ({ children, variant }) => {\n  const [scrolled, setScrolled] = useState(false);\n  const onWheel = useCallback(\n    event => {\n      if (event.currentTarget.scrollTop) {\n        if (!scrolled) {\n          setScrolled(true);\n        }\n      } else if (scrolled) {\n        setScrolled(false);\n      }\n\n      scroller(event);\n    },\n    [scrolled]\n  );\n\n  return (\n    <div\n      className={classnames('scrollable-container', {\n        scrolled,\n        [variant]: variant\n      })}\n    >\n      {children({\n        className: classnames('scrollable-element', {\n          [variant]: variant\n        }),\n        onWheel\n      })}\n    </div>\n  );\n};\n\nScrollableContainer.propTypes = {\n  children: func,\n  variant: oneOf(['row', 'white', 'row white'])\n};\n\nScrollableContainer.defaultProps = {};\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\n\nimport './Column.local.scss';\n\nexport const Column = ({ children, ...rest }) => {\n  return (\n    <div className=\"column\" {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Row.local.scss';\n\nexport const Row = ({ children, compact, ...rest }) => {\n  return (\n    <div className={classnames('row', { compact })} {...rest}>\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport { Center } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { jobsSelector } from 'shared/store/state';\nimport { filterStatusSelector } from '../../store/state';\n\nimport { Daemon, JobStatus } from './components';\n\nimport './status.local.scss';\n\nexport class StatusContainer extends React.PureComponent {\n  render() {\n    const { className, jobs } = this.props;\n    return (\n      <Paper className={className}>\n        <Daemon />\n        <div className=\"jobs-status-container\">\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader inline>Loading jobs</Loader>\n            </Center>\n          ) : (\n            this.filterJobs(jobs.toJS().content)\n          )}\n        </div>\n      </Paper>\n    );\n  }\n\n  filterJobs = jobs => {\n    const { active } = this.props;\n    const count = {\n      executing: 0,\n      succeeded: 0,\n      scheduled: 0,\n      aborted: 0,\n      failed: 0\n    };\n    count.executing = jobs.filter(job => job.status === 'EXECUTING')?.length;\n    count.succeeded = jobs.filter(job => job.status === 'SUCCEEDED')?.length;\n    count.scheduled = jobs.filter(job => job.status === 'SCHEDULED')?.length;\n    count.aborted = jobs.filter(job => job.status === 'ABORTED')?.length;\n    count.failed = jobs.filter(job => job.status === 'FAILED')?.length;\n\n    return (\n      <>\n        <JobStatus count={count.executing} status=\"EXECUTING\" active={active} />\n        <JobStatus count={count.succeeded} status=\"SUCCEEDED\" active={active} />\n        <JobStatus count={count.scheduled} status=\"SCHEDULED\" active={active} />\n        <JobStatus count={count.aborted} status=\"ABORTED\" active={active} />\n        <JobStatus count={count.failed} status=\"FAILED\" active={active} />\n      </>\n    );\n  };\n}\n\nStatusContainer.propTypes = {\n  className: PropTypes.string,\n  jobs: PropTypes.object.isRequired\n};\n\nStatusContainer.defaultProps = {\n  className: 'status-container'\n};\n\nexport const mapStateToProps = state => ({\n  jobs: jobsSelector(state),\n  active: filterStatusSelector(state)\n});\n\nexport default connect(mapStateToProps)(StatusContainer);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { daemonPoller } from '../../../../store/tasks';\nimport { isDaemonRunning } from '../../../../store/selectors';\n\nimport './daemon.local.scss';\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n\nexport const Daemon = () => {\n  const running = useSelector(isDaemonRunning);\n\n  useEffect(() => {\n    daemonPoller.start();\n\n    return () => {\n      daemonPoller.stop();\n    };\n  }, []);\n\n  return (\n    <div className=\"daemon qa-daemon-status\">\n      {running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.running\" />}>\n          <div className=\"status running\">\n            <PlayCircleOutlineIcon />\n          </div>\n        </LightTooltip>\n      )}\n\n      {!running && (\n        <LightTooltip placement=\"bottom-start\" title={<FormattedMessage id=\"daemon.not.running\" />}>\n          <div className=\"status not-running\">\n            <ErrorOutlineIcon className=\"not-running\" />\n          </div>\n        </LightTooltip>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Icon from '@mdi/react';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport { actions } from 'dashboard/store/actions';\nimport { filterStatusSelector } from 'dashboard/store/state';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-status.local.scss';\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return <>{this.renderContent()}</>;\n  }\n\n  filterByStatus = status => {\n    if (this.props.storeStatus === status.toUpperCase()) {\n      this.props.setStatus('ALL');\n    } else {\n      this.props.setStatus(status.toUpperCase());\n    }\n  };\n\n  renderContent() {\n    let icon = null;\n    let status = '';\n    switch (this.props.status) {\n      case 'EXECUTING':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiProgressClock} />\n          </SvgIcon>\n        );\n        status = 'executing';\n        break;\n      case 'SUCCEEDED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCheckCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'succeeded';\n        break;\n      case 'SCHEDULED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiCalendarArrowRight} />\n          </SvgIcon>\n        );\n        status = 'scheduled';\n        break;\n      case 'ABORTED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiStopCircleOutline} />\n          </SvgIcon>\n        );\n        status = 'aborted';\n        break;\n      case 'FAILED':\n        icon = (\n          <SvgIcon>\n            <Icon path={mdiAlertRhombusOutline} />\n          </SvgIcon>\n        );\n        status = 'failed';\n        break;\n      default:\n        // error message\n        break;\n    }\n\n    if (icon) {\n      return (\n        <div\n          className={classnames(`job-status ${status}`, {\n            active: this.props.status === this.props.active\n          })}\n          role=\"presentation\"\n          onClick={() => this.filterByStatus(status)}\n        >\n          <div className=\"header\">\n            <div className=\"icon\">{icon}</div>\n            <div className=\"count\">\n              {this.props.count}\n              {this.props.status === this.props.active && (\n                <LightTooltip placement=\"right\" title=\"Active filter\">\n                  <CheckCircleIcon className=\"active-filter\" />\n                </LightTooltip>\n              )}\n            </div>\n          </div>\n          <div className=\"status\">{this.props.status}</div>\n        </div>\n      );\n    }\n    // error case\n    return null;\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  setStatus: PropTypes.func\n};\n\nexport const mapStateToProps = state => ({\n  storeStatus: filterStatusSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  setStatus: status => dispatch(actions.setFilterStatus.dispatchEvent(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobStatus);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from 'shared/store/actions';\nimport { jobsSearchedSelector } from 'shared/store/state';\n\nimport { FormattedMessage } from 'react-intl';\nimport { debounce } from 'lodash';\nimport { mdiChevronRight } from '@mdi/js';\nimport Icon from '@mdi/react';\nimport Paper from '@material-ui/core/Paper';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nimport { SearchInput } from 'shared/components';\nimport { SearchResults } from '../../components';\nimport { setFilterSearch, setFilterType } from 'entities/actions';\n\nimport './search-area.local.scss';\n\nexport class Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSearchResults: false,\n      searchTerm: ''\n    };\n  }\n\n  apiSearchWithDebounce = debounce(searchedTerm => {\n    if (this.state.showSearchResults) {\n      this.getSearchResults(searchedTerm);\n    }\n  }, 500);\n\n  render() {\n    const {\n      className,\n      getSearchedJobs,\n      entitiesStatus,\n      setSearchFilter,\n      setTypeFilter\n    } = this.props;\n    return (\n      <Paper\n        className={`${className} ${this.state.showSearchResults ? 'no-bottom-radius' : ''}\n        `}\n      >\n        <SearchInput value={this.state.searchTerm} onChange={this.handleOnChange} />\n\n        {this.state.searchTerm.length > 0 && (\n          <div className=\"clear-search\">\n            <ClearIcon onClick={this.clearSearch} />\n          </div>\n        )}\n        {this.state.showSearchResults && (\n          <div className=\"search-results-container\">\n            <SearchResults\n              category=\"jobs\"\n              totalResults={getSearchedJobs.get('total_count')}\n              content={getSearchedJobs.get('content')}\n              isLoading={getSearchedJobs.get('fetching')}\n              displayedResults={3}\n              filters={{\n                nameFilter: this.state.searchTerm\n              }}\n            />\n            <SearchResults\n              category=\"processes\"\n              totalResults={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).count\n              }\n              content={\n                this.filterProcesses(entitiesStatus.process, this.state.searchTerm).processes\n              }\n              isLoading={entitiesStatus.process === 'fetching'}\n              displayedResults={3}\n              searchedTerm={this.state.searchTerm}\n              setFilterSearch={setSearchFilter}\n              setFilterType={setTypeFilter}\n            />\n            <div className=\"full-results-container qa-full-search-results\">\n              <div className=\"icon-container\">\n                <SearchIcon />\n              </div>\n              <div className=\"content\">\n                <FormattedMessage id=\"dashboard.view-full-search-results\" />\n              </div>\n              <div className=\"open qa-open-full-results\">\n                <SvgIcon>\n                  <Icon path={mdiChevronRight} />\n                </SvgIcon>\n              </div>\n            </div>\n          </div>\n        )}\n      </Paper>\n    );\n  }\n\n  getSearchResults = searchedTerm => {\n    const QSP = {\n      name_filter: searchedTerm,\n      page_size: 3,\n      page: 1,\n      date_invoke: '2000-01-01',\n      period: 36500\n    };\n\n    // date_invoke and period are required in order for the API to work\n    // those values are hardcored just to make sure the call will cover all available data\n    this.props.searchJobs(QSP);\n  };\n\n  filterProcesses = (processStatus, searchedTerm) => {\n    if (processStatus === 'fetching' || !searchedTerm) {\n      return { processes: [], count: 0 };\n    }\n    if (this.props.storedProcesses && this.props.storedProcesses.length > 0) {\n      const results = this.props.storedProcesses.filter(p => p.name.includes(searchedTerm));\n\n      return { processes: results.slice(0, 3), count: results.length };\n    }\n    return { processes: [], count: 0 };\n  };\n\n  handleOnChange = e => {\n    const searchedTerm = e.target.value;\n    this.setState({ searchTerm: searchedTerm });\n\n    if (searchedTerm.length < 3 && this.state.showSearchResults) {\n      this.setState({ showSearchResults: false });\n    } else if (searchedTerm.length === 3) {\n      if (!this.state.showSearchResults) {\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    } else if (searchedTerm.length > 3) {\n      if (!this.state.showSearchResults) {\n        // used for pasted value\n        this.setState({ showSearchResults: true }, () => {\n          this.getSearchResults(searchedTerm);\n        });\n      } else {\n        this.apiSearchWithDebounce(searchedTerm);\n      }\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({\n      showSearchResults: false,\n      searchTerm: ''\n    });\n  };\n}\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  searchJobs: PropTypes.func.isRequired,\n  getSearchedJobs: PropTypes.object.isRequired\n};\n\nSearch.defaultProps = {\n  className: 'search-container'\n};\n\nexport const mapStateToProps = state => ({\n  getSearchedJobs: jobsSearchedSelector(state),\n  entitiesStatus: state.entities.fetch_status,\n  storedProcesses: state.entities.data?.process?.data?.data?.processes\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  searchJobs: data => dispatch(actions.searchJobs.dispatchLoading(data)),\n  setSearchFilter: data => dispatch(setFilterSearch(data)),\n  setTypeFilter: data => dispatch(setFilterType(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed } from '@mdi/js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport { JobResults } from 'shared/components/JobResults';\nimport { createUrl } from 'shared/lib';\n\nimport './search-results.local.scss';\n\nexport class SearchResultsComponent extends React.PureComponent {\n  render() {\n    const {\n      className,\n      category,\n      totalResults,\n      isLoading,\n      displayedResults,\n      content,\n      searchedTerm = '',\n      setFilterSearch,\n      setFilterType\n    } = this.props;\n    return (\n      <div className={className}>\n        {isLoading ? (\n          <div className=\"header-area\">\n            <div className=\"category-name\">{category}</div>\n            <div className=\"loading\">\n              <CircularProgress size=\"20px\" />\n            </div>\n          </div>\n        ) : (\n          <>\n            <div className=\"header-area\">\n              <div className=\"category-name\">{category}</div>\n              <div className=\"separator\">-</div>\n              <div className=\"total-results\">\n                {totalResults} <FormattedMessage id=\"dashboard.results\" />\n              </div>\n              {totalResults > displayedResults && (\n                <Button className=\"all-results qa-view-all-results\">\n                  {category === 'jobs' && (\n                    <Link to={() => this.createURLLink()}>\n                      <FormattedMessage id=\"dashboard.view-all-results\" />\n                    </Link>\n                  )}\n                  {category === 'processes' && (\n                    <div\n                      role=\"presentation\"\n                      onClick={() => {\n                        setFilterSearch(searchedTerm);\n                        setFilterType('process');\n                      }}\n                    >\n                      <Link to=\"/system/entities\">\n                        <FormattedMessage id=\"dashboard.view-all-results\" />\n                      </Link>\n                    </div>\n                  )}\n                </Button>\n              )}\n            </div>\n            <div className=\"content-area\">\n              {category === 'jobs' && <JobResults jobs={content} fromSearch />}\n              {category === 'processes' && this.renderProcessesResults()}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n\n  renderProcessesResults = () =>\n    this.props.content.map((process, index) => (\n      <div key={index} className=\"result-process-row\">\n        <div className=\"icon-container\">\n          <SvgIcon>\n            <Icon path={mdiPlaySpeed} />\n          </SvgIcon>\n        </div>\n        <div className=\"process-container\">{process.name}</div>\n      </div>\n    ));\n\n  createURLLink = () => {\n    let url = '/jobs';\n    const params = {};\n\n    if (this.props.filters.nameFilter) {\n      params.name_filter = this.props.filters.nameFilter;\n    }\n\n    url = createUrl(url, params);\n    return url;\n  };\n}\n\nexport default SearchResultsComponent;\n\nSearchResultsComponent.propTypes = {\n  className: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  category: PropTypes.string,\n  totalResults: PropTypes.number,\n  isLoading: PropTypes.bool,\n  displayedResults: PropTypes.number\n};\n\nSearchResultsComponent.defaultProps = {\n  className: 'results-container',\n  content: [],\n  category: '',\n  totalResults: 0,\n  isLoading: false,\n  displayedResults: 3\n};\n","import React, { forwardRef } from 'react';\nimport classnames from 'classnames';\nimport { bool } from 'prop-types';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MUITextField from '@material-ui/core/TextField';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiInformationOutline } from '@mdi/js';\n\nimport { LightTooltip } from '../../LightTooltip/LightTooltip';\n\nimport './Input.local.scss';\n\nexport const Input = forwardRef(function InputFw(\n  { inline, error, size, children, description, multiline, variant, ...rest },\n  ref\n) {\n  const InputProps = { ...(rest.InputProps && rest.InputProps) };\n\n  const nrRows = rest?.isPopup ? 9999 : 7;\n\n  if (description) {\n    InputProps.endAdornment = (\n      <>\n        <InputAdornment position=\"end\">\n          <LightTooltip title={description}>\n            <SvgIcon>\n              <path d={mdiInformationOutline} />\n            </SvgIcon>\n          </LightTooltip>\n        </InputAdornment>\n        {InputProps.endAdornment}\n      </>\n    );\n  }\n\n  return (\n    <MUITextField\n      ref={ref}\n      fullWidth\n      className={classnames('input-field', { inline, error })}\n      variant={variant || 'outlined'}\n      error={error}\n      {...(multiline && {\n        multiline: true,\n        rows: nrRows\n      })}\n      {...rest}\n      InputProps={InputProps} // eslint-disable-line\n      size={size}\n    >\n      {children}\n    </MUITextField>\n  );\n});\n\nInput.propTypes = {\n  inline: bool,\n  error: bool\n};\n","import React from 'react';\nimport MUIButton from '@material-ui/core/Button';\n\nimport './Button.local.scss';\n\nimport { Link } from 'react-router-dom';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nexport const Button = ({ to, href, ...props }) => {\n  const link = to || href;\n\n  if (link) {\n    return <MUIButton color=\"primary\" {...props} component={LinkBehavior} to={link} />;\n  }\n\n  return <MUIButton color=\"primary\" {...props} />;\n};\n","import React from 'react';\nimport { node } from 'prop-types';\n\nimport './ModalFooter.local.scss';\n\nexport const ModalFooter = ({ children }) => {\n  return <footer className=\"modal-footer\">{children}</footer>;\n};\n\nModalFooter.propTypes = {\n  children: node\n};\n\nexport const LeftSideSlot = ({ children }) => {\n  return <div className=\"slot-left\">{children}</div>;\n};\n\nLeftSideSlot.propTypes = {\n  children: node\n};\n\nexport const RightSideSlot = ({ children }) => {\n  return <div className=\"slot-right\">{children}</div>;\n};\n\nRightSideSlot.propTypes = {\n  children: node\n};\n\nModalFooter.Left = LeftSideSlot;\nModalFooter.Right = RightSideSlot;\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ErrorModal.local.scss';\n\nexport const ErrorModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\n\nimport WarningIcon from '@material-ui/icons/Warning';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport './ConfirmationModal.local.scss';\n\nexport const ConfirmationModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '400px',\n          maxHeight: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Warning\"\n          icon={\n            <SvgIcon>\n              <WarningIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"fail\">\n            <div className=\"content\">{message}</div>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              No\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.confirm();\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { JobsEffect } from './jobs/jobs.effect';\nimport { JobsConnectionsEffect } from './connections/connections.effect';\nimport { SearchJobsEffect } from './search-jobs/search-jobs.effect';\nimport { SearchProcessesEffect } from './search-processes/search-processes.effect';\nimport { GlobalFiltersEffect } from './global-filters/global-filters.effect';\n\nexport const sharedEffects = [\n  JobsEffect,\n  JobsConnectionsEffect,\n  SearchJobsEffect,\n  SearchProcessesEffect,\n  GlobalFiltersEffect\n];\n","import React from 'react';\nimport { hot } from 'react-hot-loader/root';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Cookie from 'js-cookie';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\n\nimport { Login, Logout } from 'session';\nimport { actionStates } from 'shared/lib/action-creator';\nimport { authorizationSelector } from 'session/store/state';\nimport { actions } from 'session/store/actions';\nimport { Layout } from './core';\n\nimport './scoped-css-mui-compatibility';\n\nexport class RootModule extends React.PureComponent {\n  componentDidMount() {\n    if (!Cookie.get('Authorization')) {\n      this.props.history.listen((newLocation, action) => {\n        if (action === 'PUSH') {\n          if (\n            newLocation.pathname !== this.currentPathname ||\n            newLocation.search !== this.currentSearch\n          ) {\n            this.currentPathname = newLocation.pathname;\n            this.currentSearch = newLocation.search;\n            this.props.history.push({\n              pathname: newLocation.pathname,\n              search: newLocation.search\n            });\n          }\n        } else {\n          this.props.history.go(1);\n        }\n      });\n      this.props.history.push('/login');\n      this.props.setAuthorization();\n      return;\n    }\n\n    const username = JSON.parse(localStorage.getItem('username')) || 'mas';\n\n    this.props.checkAuthorization(username);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.authorizationStatus !== prevProps.authorizationStatus &&\n      this.props.authorizationStatus === actionStates.FAIL\n    ) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    if (this.props.authorizationStatus === actionStates.LOADING) {\n      return (\n        <Center>\n          <CircularProgress />\n        </Center>\n      );\n    }\n\n    return (\n      <Switch>\n        <Route exact path={Login.path} component={Login} />\n        <Route exact path={Logout.path} component={Logout} />\n        <Route path=\"/\" component={Layout} />\n      </Switch>\n    );\n  }\n}\n\nRootModule.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  authorizationStatus: PropTypes.oneOf([\n    '',\n    actionStates.SUCCESS,\n    actionStates.LOADING,\n    actionStates.FAIL\n  ]).isRequired,\n  setAuthorization: PropTypes.func.isRequired,\n  checkAuthorization: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  authorizationStatus: authorizationSelector(state).get('status')\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  checkAuthorization: user => dispatch(actions.checkAuthorization.dispatchLoading(user)),\n  setAuthorization: () => dispatch(actions.checkAuthorization.dispatchFail())\n});\n\nexport default hot(connect(mapStateToProps, mapDispatchToProps)(RootModule));\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { Dashboard } from 'dashboard';\nimport { Jobs } from 'jobs';\nimport { Entities } from 'entities';\nimport { UsersAndGroups } from 'users-manager';\nimport { Explorer } from 'explorer';\nimport { Sidebar } from './containers';\nimport { JobProcess } from '../job-process';\nimport { ConnectedExecutiveDashboard } from 'executive-dashboard/ExecutiveDashboard';\nimport { LicenseCollection } from 'license-collection/LicenseCollection';\n\nimport './root.local.scss';\n\nexport class RootLayout extends React.PureComponent {\n  render() {\n    return (\n      <>\n        <Sidebar />\n        <div className=\"app-container\">\n          <Switch>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/jobs\" component={Jobs} />\n            <Route exact path=\"/jobs/job\" component={JobProcess} />\n            <Route exact path=\"/system/entities\" component={Entities} />\n            <Route path=\"/system/mas-accounts\" component={UsersAndGroups} />\n            <Route exact path=\"/system/explorer\" component={Explorer} />\n            <Route\n              exact\n              path=\"/compliance/executive-dashboard\"\n              component={ConnectedExecutiveDashboard}\n            />\n            <Route exact path=\"/compliance/license-collection\" component={LicenseCollection} />\n            <Redirect to=\"/dashboard\" />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n\nRootLayout.propTypes = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { connect } from 'react-redux';\n\nimport { getWorkloadData } from 'shared/lib/workload';\n\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector, jobsSelector } from 'shared/store/state';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from 'users-manager/store/thunks';\n\nimport { Header } from 'core/components/Header';\nimport { Center, RangeDatePicker, SimpleSearchInput, Switch, WorkloadGraph } from 'shared/components';\nimport { Main, Paper } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { ConnectedJobList } from './components/job-list/job-list.component';\nimport { JobItem } from './components/job-item';\nimport { Filters } from './containers/filters';\nimport { JobsInvocations } from './containers/jobs-invocations';\n\nimport { Schedule } from './containers/Schedule/Schedule';\nimport { TotalJobsCount } from './components/total-jobs-count/TotalJobsCount';\n\nimport './jobs.local.scss';\n\nfunction renderJobItem(item, index, filters, loggedUser) {\n  return <JobItem extended key={index} job={item} filters={filters} loggedUser={loggedUser} />;\n}\n\nclass RootModule extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const query = new URLSearchParams(this.props.location.search);\n\n    this.state = {\n      range: {\n        startDate: moment.unix(props.globalFilters.get('startDate')),\n        endDate: moment.unix(props.globalFilters.get('endDate'))\n      },\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_filter: {\n        dbms: query.get('platform_filter_dbms') || '',\n        name: query.get('platform_filter_name') || ''\n      }, // will have the platform_name_filter and platform_dbms_filter\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      name_filter: query.get('name_filter') || '',\n      user_filter: query.get('user_filter') || '',\n      selectedTab: 'all',\n      isWorkloadDisplayed: false,\n      pageFilters: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.allUsers.length === 0) {\n      this.props.loadAllUsers();\n    }\n  }\n\n  render() {\n    const {\n      shell_host_address_filter,\n      platform_filter,\n      status,\n      database_name_filter,\n      user_filter,\n      selectedTab,\n      isWorkloadDisplayed\n    } = this.state;\n\n    const callFailed = this.props.jobs.get('callFailed');\n    const reason = this.props.jobs.get('reason');\n\n    if (callFailed && reason === 'rights' && !this.props.jobs.get('fetching')) {\n      return (\n        <>\n          <Header title=\"Jobs\" />\n          <Main>\n            <Paper>\n              <Paper.Content>\n                <Result type=\"fail\">\n                  <BodyText>\n                    You don&apos;t have sufficient privileges to access invocation data. Please\n                    contact your administrator.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n            </Paper>\n          </Main>\n        </>\n      );\n    }\n\n    return (\n      <JobsInvocations>\n        <Header title=\"Jobs\">\n          <RangeDatePicker\n            onDatesChange={this.onChangeDatesHandler}\n            startDate={this.state.range.startDate}\n            endDate={this.state.range.endDate}\n          />\n        </Header>\n        <Main>\n          <Paper>\n            <Paper.Header>\n              <NavigationTab\n                tabs={[\n                  { label: 'All jobs', value: 'all' },\n                  { label: 'Current jobs', value: 'current-jobs' },\n                  { label: 'Scheduled', value: 'scheduled' }\n                ]}\n                active={selectedTab}\n                onClick={this.handleOnTabChange}\n              />\n              {(selectedTab === 'all' || selectedTab === 'current-jobs') && (\n                <Button\n                  style={{\n                    whiteSpace: 'nowrap',\n                    lineHeight: '20px',\n                    height: '20px',\n                    paddingTop: '0'\n                  }}\n                  onClick={this.toggleWorkloadDisplay}\n                >\n                  {isWorkloadDisplayed ? 'Hide Workload' : 'Display workload'}\n                </Button>\n              )}\n            </Paper.Header>\n            <Switch value={selectedTab}>\n              <Switch.Case value=\"all\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount jobs={this.props.jobs.get('content').toJS()} status={status} />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"current-jobs\">\n                {!this.props.jobs.get('fetching') && (\n                  <TotalJobsCount\n                    jobs={this.props.jobs\n                      .get('content')\n                      .filter(item => item.get('status') !== 'SCHEDULED')\n                      .toJS()}\n                    status={status}\n                  />\n                )}\n                {isWorkloadDisplayed && (\n                  <Paper.Header>\n                    <div style={{ height: 220, width: '100%' }}>\n                      {this.props.jobs.get('fetching') ? (\n                        <Center>\n                          <Loader>Computing workload</Loader>\n                        </Center>\n                      ) : (\n                        <WorkloadGraph\n                          data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                            currentDate: moment.unix(\n                              this.props.globalFilters.get('startDate'),\n                              'YYYY-MM-DD'\n                            ),\n                            endDate: moment.unix(\n                              this.props.globalFilters.get('endDate'),\n                              'YYYY-MM-DD'\n                            )\n                          })}\n                          isSingleDay={\n                            moment\n                              .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD') ===\n                            moment\n                              .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                              .format('YYYY-MM-DD')\n                          }\n                          setSingleDay={this.onChangeDatesHandler}\n                        />\n                      )}\n                    </div>\n                  </Paper.Header>\n                )}\n                {!isWorkloadDisplayed && <></>}\n              </Switch.Case>\n              <Switch.Case value=\"scheduled\">\n                <TotalJobsCount\n                  jobs={this.props.jobs\n                    .get('content')\n                    .filter(item => item.get('status') === 'SCHEDULED')\n                    .toJS()}\n                  status=\"SCHEDULED\"\n                />\n              </Switch.Case>\n            </Switch>\n            <Paper.Content scrollable={false}>\n              <div className=\"jobs-filters-controllers\">\n                <div className=\"job-search\">\n                  <SimpleSearchInput\n                    value={this.state.name_filter}\n                    onChange={this.onSearchInputChange}\n                    onKeyDown={this.onKeyDown}\n                  />\n                </div>\n                <Filters\n                  selections={{\n                    shell_host_address_filter,\n                    platform_filter,\n                    status,\n                    database_name_filter,\n                    user_filter\n                  }}\n                  onChange={this.handleOnFilterChange}\n                  excludeStatus={selectedTab === 'scheduled'}\n                  currentTab={selectedTab}\n                />\n              </div>\n              {this.props.jobs.get('fetching') ? (\n                <Center>\n                  <Loader>Loading jobs list</Loader>\n                </Center>\n              ) : (\n                <ConnectedJobList items={this.returnListBasedOnTab()} filters={this.state.pageFilters}>\n                  {renderJobItem}\n                </ConnectedJobList>\n              )}\n            </Paper.Content>\n            <Paper.Footer>\n              <Schedule />\n              <Button to=\"/jobs/job\">New Job</Button>\n            </Paper.Footer>\n          </Paper>\n        </Main>\n      </JobsInvocations>\n    );\n  }\n\n  toggleWorkloadDisplay = () => {\n    this.setState(prevState => ({\n      isWorkloadDisplayed: !prevState.isWorkloadDisplayed\n    }));\n  };\n\n  updateQSP = (filter, value) => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (typeof value === 'object') {\n      const keys = Object.keys(value);\n\n      keys.forEach(key => {\n        if (!value[key]) {\n          query.delete(`${filter}_${key}`);\n        } else if (query.has(`${filter}_${key}`) && query.get(`${filter}_${key}`) !== value[key]) {\n          query.set(`${filter}_${key}`, value[key]);\n        } else {\n          query.append(`${filter}_${key}`, value[key]);\n        }\n      });\n    } else if (!value) {\n      query.delete(filter);\n    } else if (query.has(filter) && query.get(filter) !== value) {\n      query.set(filter, value);\n    } else {\n      query.append(filter, value);\n    }\n\n    query.toString();\n\n    this.props.history.push({ search: `?${query}` });\n  };\n\n  handleOnTabChange = tab => {\n    const query = new URLSearchParams(this.props.location.search);\n\n    if (query.get('status')) {\n      query.delete('status');\n      query.toString();\n\n      this.props.history.push({ search: `?${query}` });\n      this.setState({ status: '', selectedTab: tab }, () => {\n        this.performFilter(this.state);\n      });\n    } else {\n      this.setState({ selectedTab: tab });\n    }\n  };\n\n  handleOnFilterChange = (filter, value) => {\n    this.updateQSP(filter, value);\n\n    this.setState(\n      {\n        [filter]: value\n      },\n      () => {\n        this.performFilter(this.state);\n      }\n    );\n  };\n\n  returnListBasedOnTab = () => {\n    const { selectedTab, status } = this.state;\n    const list = this.props.jobs.get('content');\n\n    if (status) {\n      return list.filter(item => item.get('status') === status);\n    }\n\n    if (selectedTab === 'scheduled') {\n      return list.filter(item => item.get('status') === 'SCHEDULED');\n    }\n\n    if (selectedTab === 'current-jobs') {\n      return list.filter(item => item.get('status') !== 'SCHEDULED');\n    }\n\n    return list;\n  };\n\n  performFilter = ({\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter,\n    name_filter,\n    range\n  }) => {\n    if (range.startDate === null || range.endDate === null) return;\n\n    const start = moment(range.startDate.format('YYYY-MM-DD'));\n    const end = moment(range.endDate.format('YYYY-MM-DD'));\n    const days = parseInt(moment.duration(end.diff(start)).asDays(), 10);\n\n    const payload = {\n      date_invoke: range.startDate.format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645\n    };\n\n    if (shell_host_address_filter) {\n      payload.shell_host_address_filter = shell_host_address_filter;\n    }\n\n    if (platform_filter) {\n      payload.platform_name_filter = platform_filter.name;\n      payload.platform_dbms_filter = platform_filter.dbms;\n    }\n\n    if (status) {\n      payload.status = status;\n    }\n\n    if (database_name_filter) {\n      payload.database_name_filter = database_name_filter;\n    }\n\n    if (name_filter) {\n      payload.name_filter = name_filter;\n    }\n\n    if (user_filter) {\n      payload.owner = user_filter;\n    }\n\n    this.props.getJobs(payload);\n    this.setState({ pageFilters: payload });\n  };\n\n  onSearchInputChange = event => {\n    this.setState({\n      name_filter: event.target.value\n    });\n  };\n\n  onKeyDown = event => {\n    if (event.key === 'Enter' && !this.props.jobs.get('fetching')) {\n      this.updateQSP('name_filter', event.target.value);\n      this.performFilter(this.state);\n    }\n  };\n\n  onChangeDatesHandler = range => {\n    this.setState(\n      {\n        range: {\n          startDate: range.startDate,\n          endDate: range.endDate\n        }\n      },\n      () => {\n        this.props.setGlobalFilters(range);\n        this.performFilter(this.state);\n      }\n    );\n  };\n}\nRootModule.propTypes = {\n  globalFilters: PropTypes.object.isRequired,\n  setGlobalFilters: PropTypes.func.isRequired,\n  jobs: PropTypes.object.isRequired,\n  getJobs: PropTypes.func.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  globalFilters: globalFiltersSelector(state),\n  jobs: jobsSelector(state),\n  allUsers: state.usersManager.users.all\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getJobs: data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n  },\n  setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data)),\n  loadAllUsers: () => dispatch(loadAllUsersThunk())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootModule);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport { mdiClockOutline, mdiDatabase, mdiHexagonMultipleOutline } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport { Button } from 'shared/components/controls';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\nimport { ConnectedDeleteJobModal } from '../../actions/delete/DeleteJobModal';\nimport { JobStatus } from '../job-status';\nimport { InvocationStatus } from '../../../job-process/store/constants';\nimport './job-item.local.scss';\n\nconst ALLOWED_FOR_DELETE = [\n  InvocationStatus.SCHEDULED,\n  InvocationStatus.EXECUTING,\n  InvocationStatus.DELAYED\n];\n\nexport const JobItem = ({ job, filters, loggedUser }) => {\n  const [open, setOpen] = useState(false);\n  const canDelete = loggedUser.get('name') === 'mas' && ALLOWED_FOR_DELETE.includes(job.get('status'));\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n  const [uuid, setUuid] = useState('');\n\n  const formatName = () => {\n    let name = job.get('process');\n    const nameContainerWidth =\n      (document.getElementById('jobs-content') &&\n        document.getElementById('jobs-content').offsetWidth -\n          (5 / 100) * document.getElementById('jobs-content').offsetWidth) ||\n      600; // time container\n    const starPath = <span className=\"word cutted\">.../</span>;\n    const formattedName = [];\n    name = name.split('.');\n    for (let i = 0; i < name.length; i++) {\n      if (i < name.length - 1) {\n        formattedName.push(\n          <span key={i}>\n            <span className=\"word\">{name[i]}</span>.\n          </span>\n        );\n      } else {\n        formattedName.push(\n          <span key={i} className=\"word\">\n            {name[i]}\n          </span>\n        );\n      }\n    }\n\n    const canvas = formatName.canvas || (formatName.canvas = document.createElement('canvas'));\n    const context = canvas.getContext('2d');\n    let metrics = context.measureText(formattedName);\n\n    if (metrics.width > nameContainerWidth) {\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n    }\n\n    while (metrics.width > nameContainerWidth) {\n      // remove first word from the name (it is ../)\n      formattedName.shift();\n      // remove first word form the actual name\n      formattedName.shift();\n      // add '../' as the first word in the name\n      formattedName.unshift(starPath);\n      // recheck width\n      metrics = context.measureText(formattedName);\n    }\n\n    return formattedName;\n  };\n  return (\n    <>\n      <Link to={`/jobs/job/?invocation=${job.get('uuid')}`}>\n        <div className=\"job-item\">\n          <div className=\"status-icon\">\n            <JobStatus status={job.get('status')} />\n          </div>\n          <div className=\"job-metadata\">\n            <div className=\"first-row\">\n              <LimitlessTooltip\n                placement=\"bottom-start\"\n                title={\n                  <>\n                    <p>Invocation: {job.get('process')}</p>\n                    {job.get('schedule') && <p>Schedule: {job.get('schedule')}</p>}\n                  </>\n                }\n              >\n                <div className=\"name\">{formatName()}</div>\n              </LimitlessTooltip>\n            </div>\n            <div className=\"second-row\">\n              <LimitlessTooltip placement=\"bottom-start\" title=\"MAS system time (UTC)\">\n                <div className=\"metadata-element time\">\n                  <SvgIcon>\n                    <path d={mdiClockOutline} />\n                  </SvgIcon>\n                  {moment(job.get('date_invoke')).format('MMM DD YYYY, HH:mm:ss')}\n                </div>\n              </LimitlessTooltip>\n              {job.get('user_owner') && (\n                <div className=\"metadata-element run-by\">\n                  <AccountCircleOutlinedIcon />\n                  {job.get('user_owner')}\n                </div>\n              )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('name') && (\n                  <div className=\"metadata-element dbms\">\n                    <SvgIcon>\n                      <path d={mdiHexagonMultipleOutline} />\n                    </SvgIcon>\n                    {job\n                      .get('connections')\n                      .get('dbms')\n                      .get('name')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('shell') &&\n                job\n                  .get('connections')\n                  .get('shell')\n                  .get('host_address') && (\n                  <div className=\"metadata-element server\">\n                    <StorageIcon />\n                    {job.get('connections') &&\n                      job.get('connections').get('shell') &&\n                      job\n                        .get('connections')\n                        .get('shell')\n                        .get('host_address')}\n                  </div>\n                )}\n              {job.get('connections') &&\n                job.get('connections').get('dbms') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special') &&\n                job\n                  .get('connections')\n                  .get('dbms')\n                  .get('protocol_special')\n                  .get('database') && (\n                  <div className=\"metadata-element database\">\n                    <SvgIcon>\n                      <path d={mdiDatabase} />\n                    </SvgIcon>\n                    {job.get('connections') &&\n                      job.get('connections').get('dbms') &&\n                      job\n                        .get('connections')\n                        .get('dbms')\n                        .get('protocol_special')\n                        .get('database')}\n                  </div>\n                )}\n            </div>\n          </div>\n          {canDelete && (\n            <div className=\"job-actions\">\n              <Button\n                color=\"secondary\"\n                onClick={event => {\n                  event.preventDefault();\n                  setOpen(true);\n                  setUuid(job.get('uuid'));\n                }}\n              >\n                Delete\n              </Button>\n            </div>\n          )}\n        </div>\n      </Link>\n\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={uuid} filters={filters} />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiStopCircleOutline,\n  mdiCancel,\n  mdiTimelineClock,\n  mdiAlertRhombusOutline\n} from '@mdi/js';\n\nimport './job-status.local.scss';\n\nconst statusMap = {\n  EXECUTING: mdiProgressClock,\n  SUCCEEDED: mdiCheckCircleOutline,\n  SCHEDULED: mdiCalendarArrowRight,\n  DELAYED: mdiTimelineClock,\n  ABORTED: mdiStopCircleOutline,\n  FAILED: mdiAlertRhombusOutline,\n  KILLED: mdiCancel\n};\n\nexport class JobStatus extends React.PureComponent {\n  render() {\n    return (\n      <LightTooltip placement=\"bottom-start\" title={this.props.status.toUpperCase()}>\n        <div className=\"daemon qa-daemon-status\">\n          <div className={`status ${this.props.status.toLowerCase()}`}>\n            <SvgIcon>\n              <path d={statusMap[this.props.status]} />\n            </SvgIcon>\n          </div>\n        </div>\n      </LightTooltip>\n    );\n  }\n}\n\nJobStatus.propTypes = {\n  status: PropTypes.string\n};\nJobStatus.defaultProps = {\n  status: ''\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { mapSortInsensitive } from 'users-manager/store/mappers';\nimport { getJobsFiltersOptions } from 'shared/store/selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiHexagonMultipleOutline, mdiDatabase, mdiServer, mdiCircleSlice5 } from '@mdi/js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\n\nimport { Input } from 'shared/components/controls';\n\nimport './filters.scss';\n\nexport const PLATFORM = [\n  { label: 'MariaDB', name: 'mariadb', dbms: 'mysql', value: { name: 'mariadb', dbms: 'mysql' } },\n  {\n    label: 'MySQL',\n    name: 'mysql',\n    dbms: 'mysql',\n    value: { name: 'mysql', dbms: 'mysql' }\n  },\n  { label: 'Oracle', name: 'oracle', dbms: 'oracle', value: { name: 'oracle', dbms: 'oracle' } },\n  { label: 'PostgreSQL', name: 'pgsql', dbms: 'pgsql', value: { name: 'pgsql', dbms: 'pgsql' } },\n  {\n    label: 'Microsoft SQL Server',\n    name: 'microsoft.sqlserver',\n    dbms: 'mssql',\n    value: { name: 'microsoft.sqlserver', dbms: 'mssql' }\n  },\n  {\n    label: 'Oracle RDS',\n    name: 'rds.oracle',\n    dbms: 'oracle',\n    value: { name: 'rds.oracle', dbms: 'oracle' }\n  }\n];\n\nconst Filters = props => {\n  const { filters, selections, onChange, excludeStatus, allUsers, currentTab } = props;\n  const {\n    shell_host_address_filter,\n    platform_filter,\n    status,\n    database_name_filter,\n    user_filter\n  } = selections;\n\n  const users = [\n    { value: '', label: 'All' },\n    ...allUsers.map(user => ({ label: user.name, value: user.name }))\n  ];\n  const selectedUser = users.find(u => u.value && u.value === user_filter) ?? '';\n  const platforms = [\n    { value: { name: '', dbms: '' }, label: 'All' },\n    ...PLATFORM.map(el => ({ value: el.value, label: el.label }))\n  ];\n  const selectedPlatform =\n    platforms.find(p => p?.value?.name && p.value.name === platform_filter?.name) ?? '';\n  const servers = [\n    { value: '', label: 'All' },\n    ...filters.address.map(el => ({ value: el, label: el }))\n  ];\n  const selectedServer =\n    servers.find(sv => sv.value && sv.value === shell_host_address_filter) ?? '';\n  const databases = [\n    { value: '', label: 'All' },\n    ...filters.database.map(el => ({ value: el, label: el }))\n  ];\n  const selectedDb = databases.find(db => db.value && db.value === database_name_filter) ?? '';\n  let statuses = [\n    { value: '', label: 'All' },\n    ...filters.status.map(el => ({ value: el, label: el }))\n  ];\n\n  if (currentTab === 'current-jobs') {\n    statuses = statuses.filter(s => s.value !== 'SCHEDULED');\n  }\n\n  const selectedStatus = statuses.find(s => s.value && s.value === status) ?? '';\n\n  return (\n    <div className=\"job-filters\">\n      <Autocomplete\n        disableClearable\n        id=\"users-filter\"\n        options={users}\n        value={selectedUser}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('user_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <AccountCircleOutlinedIcon />\n                <span className=\"job-filter-select-label\">Users</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"platform-filter\"\n        options={platforms}\n        value={selectedPlatform}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('platform_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Platform</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"server-filter\"\n        options={servers}\n        value={selectedServer}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('shell_host_address_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiServer} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Server</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      <Autocomplete\n        disableClearable\n        id=\"database-filter\"\n        options={databases}\n        value={selectedDb}\n        getOptionLabel={opt => opt.label || ''}\n        onChange={(e, option) => {\n          onChange('database_name_filter', option?.value || '');\n        }}\n        renderInput={params => (\n          <Input\n            {...params}\n            size=\"small\"\n            label={\n              <span className=\"job-filter-select-label-wrap\">\n                <SvgIcon>\n                  <path d={mdiDatabase} />\n                </SvgIcon>\n                <span className=\"job-filter-select-label\">Database</span>\n              </span>\n            }\n            variant=\"outlined\"\n          />\n        )}\n      />\n\n      {!excludeStatus && (\n        <Autocomplete\n          disableClearable\n          id=\"status-filter\"\n          options={statuses}\n          value={selectedStatus}\n          getOptionLabel={opt => opt.label || ''}\n          onChange={(e, option) => {\n            onChange('status', option?.value || '');\n          }}\n          style={{ color: 'red' }}\n          renderInput={params => (\n            <Input\n              {...params}\n              size=\"small\"\n              label={\n                <span className=\"job-filter-select-label-wrap\">\n                  <SvgIcon>\n                    <path d={mdiCircleSlice5} />\n                  </SvgIcon>\n                  <span className=\"job-filter-select-label\">Status</span>\n                </span>\n              }\n              variant=\"outlined\"\n            />\n          )}\n        />\n      )}\n    </div>\n  );\n};\nFilters.propTypes = {\n  filters: PropTypes.object.isRequired,\n  selections: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  excludeStatus: PropTypes.bool\n};\n\nexport const mapStateToProps = state => ({\n  filters: getJobsFiltersOptions(state),\n  allUsers: mapSortInsensitive(state.usersManager.users.all)\n});\n\nexport default connect(mapStateToProps)(Filters);\n","import { createSelector } from 'reselect';\n\nimport { connectionsSelector } from '../state';\n\nexport const getJobsFiltersOptions = createSelector(connectionsSelector, connections => {\n  const filters = {\n    address: [], // connections - server\n    protocol: [], // connections - dbms\n    status: ['EXECUTING', 'SUCCEEDED', 'SCHEDULED', 'ABORTED', 'FAILED', 'DELAYED', 'KILLED'], // hardcoded\n    database: [] // connections -  database\n  };\n\n  connections.get('content').forEach(connection => {\n    const address = connection.get('address');\n    const protocol = connection.get('protocol');\n    const database = connection.getIn(['special', 'database']);\n\n    if (address && !filters.address.includes(address)) {\n      filters.address.push(address);\n    }\n\n    if (protocol && !filters.protocol.includes(protocol)) {\n      if (protocol !== 'SSH') {\n        filters.protocol.push(protocol);\n      }\n    }\n\n    if (database && !filters.database.includes(database)) {\n      filters.database.push(database);\n    }\n  });\n  return filters;\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { actions } from 'shared/store/actions';\nimport { globalFiltersSelector } from 'shared/store/state';\n\nexport const JobsInvocations = ({ children }) => {\n  const location = useLocation();\n  const query = new URLSearchParams(location.search);\n\n  const dispatch = useDispatch();\n  const getJobs = data => {\n    dispatch(actions.getJobs.dispatchLoading(data));\n    dispatch(actions.getConnections.dispatchLoading(data));\n  };\n  const globalFilters = useSelector(globalFiltersSelector);\n\n  React.useEffect(() => {\n    const days = moment\n      .unix(globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n\n    getJobs({\n      date_invoke: moment.unix(globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      shell_host_address_filter: query.get('shell_host_address_filter') || '',\n      platform_name_filter: query.get('platform_filter_name') || '',\n      platform_dbms_filter: query.get('platform_filter_dbms') || '',\n      status: query.get('status') || '',\n      database_name_filter: query.get('database_name_filter') || '',\n      owner: query.get('user_filter') || '',\n      name_filter: query.get('name_filter') || ''\n    });\n  }, []);\n\n  return children;\n};\nJobsInvocations.propTypes = {\n  children: PropTypes.any.isRequired\n};\n","export const deepCopy = (value) => {\n  return JSON.parse(JSON.stringify(value));\n};\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport Container from '@material-ui/core/Container';\nimport FilterCenterFocusIcon from '@material-ui/icons/FilterCenterFocus';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { MenuItem } from '@material-ui/core';\nimport { fetchEntity, openModal, selectEntity, setFilterSearch, setFilterType } from './actions';\nimport { ENTITY_TYPES, getBreadcrumbs, getEntities, getSelectedEntity } from './selectors';\nimport Entity from './components/Entity';\nimport SelectedEntity from './containers/SelectedEntity';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport DeveloperModeIcon from '@material-ui/icons/DeveloperMode';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport debounce from 'lodash/debounce';\n\nimport './root.local.scss';\n\n/* eslint-disable */\n\n\nconst ENTITY_ICONS = {\n  root: <FolderIcon />,\n  namespace: <FolderIcon />,\n  constant: <FilterCenterFocusIcon />,\n  form: <AssignmentTurnedInIcon />,\n  schedule: <EventNoteIcon />,\n  account: <VpnKeyIcon />,\n  process: <SlowMotionVideoIcon />,\n  type: <DeveloperModeIcon />,\n  exception: <WarningIcon />,\n  prototype: <AssignmentIcon />,\n  CachedIcon:<CachedIcon />\n};\n\nlet searchWithDebounce = () => {};\n\nfunction RootModule({\n  fetchEntity,\n  selectEntity,\n  columns,\n  breadcrumbs,\n  filters,\n  setFilterType,\n  setFilterSearch,\n  selectedEntity,\n  entitiesStatus,\n  job\n}) {\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'not-fetched' || entitiesStatus[key] === 'failed') {\n        fetchEntity(key);\n      }\n    }\n\n    searchWithDebounce = debounce(value => {\n      setFilterSearch(value);\n    }, 700);\n    if (filters.search) {\n      setSearchInput(filters.search);\n    }\n  }, []);\n\n  function renderBreadcrumb(breadcrumb) {\n    return (\n      <span key={breadcrumb}>\n        <span className=\"breadcrumb\">{breadcrumb}</span> /{' '}\n      </span>\n    );\n  }\n\n  function renderColumn(columns, colNum) {\n    return (\n      <div key={colNum}>\n        {columns.rows.map(entity => (\n          <Entity\n            key={entity.name}\n            entity={entity}\n            selectEntity={selectEntity}\n            columns={columns}\n            entityIcons={ENTITY_ICONS}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function handleSearchChange(e) {\n    const val = e.target.value;\n    searchWithDebounce(val);\n    setSearchInput(val);\n  }\n\n  function loadingData() {\n    const entitiesKey = Object.keys(entitiesStatus);\n    for (const key of entitiesKey) {\n      if (entitiesStatus[key] === 'fetching') {\n        return (\n          <div className=\"loading\">\n            <CircularProgress size={15} />\n            <span>Loading {key} entities...</span>\n          </div>\n        );\n      }\n    }\n\n    return null;\n  }\n\n\n  function renderColumns() {\n    if (Array.isArray(columns) && columns[0]?.rows?.length) {\n      return columns.map(renderColumn);\n    }\n\n    if (Object.values(entitiesStatus).find(e => e === 'fetching')) {\n      return null;\n    } else {\n      return 'No Entities Found.';\n    }\n  }\n\n  function clearCach(){\n     window.location.reload(false);\n     sessionStorage.removeItem(\"persist:root\");\n    \n  }\n\n  return (\n    <>\n      <Header title=\"System / Entities\" />\n      <Container maxWidth={false} classes={{ root: 'define-height-container' }}>\n        <div className=\"entities-breadcrumb\">{['root', ...breadcrumbs].map(renderBreadcrumb)}</div> \n        <br />\n        {sessionStorage.getItem(\"persist:root\") && <div><CachedIcon style={{ color: 'green',cursor: 'pointer' }}  onClick={e => clearCach()} /><span onClick={e => clearCach()} style={{fontSize: \"13px\",color: \"#047f04\",fontWeight: \"bolder\",cursor: 'pointer'}}>Clear cache </span> </div> }\n        <div className=\"entities-filters\">\n          <Select value={filters.type} onChange={ev => setFilterType(ev.target.value)}>\n            {[{ type: 'all', title: 'ALL' }, ...ENTITY_TYPES].map(type => (\n              <MenuItem key={type.type} value={type.type}>\n                {type.title}\n              </MenuItem>\n            ))}\n          </Select>\n          <div className=\"entities-search-wrap\">\n            <SimpleSearchInput value={searchInput} onChange={handleSearchChange} />\n          </div>\n        </div>\n        {loadingData()}\n        <div className=\"grid-container define-height-grid-root\">\n          <div className=\"entities-list-container define-height\">\n            <div className=\"columns\">{renderColumns()}</div>\n          </div>\n          <div className=\"selected-entity-container\">\n            <SelectedEntity selectedEntity={selectedEntity} entityIcons={ENTITY_ICONS} />\n          </div>\n        </div>\n      </Container>\n    </>\n  );\n}\n\nRootModule.propTypes = {\n  fetchEntity: PropTypes.func,\n  selectEntity: PropTypes.func,\n  setFilterType: PropTypes.func,\n  setFilterSearch: PropTypes.func,\n  columns: PropTypes.array,\n  breadcrumbs: PropTypes.array,\n  filters: PropTypes.object,\n  selectedEntity: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    columns: getEntities(state),\n    breadcrumbs: getBreadcrumbs(state),\n    filters: state.entities.filters,\n    selectedEntity: getSelectedEntity(state),\n    entitiesStatus: state.entities.fetch_status\n  }),\n  { fetchEntity, selectEntity, setFilterType, setFilterSearch, openModal }\n)(RootModule);\n","import React from 'react';\nimport { Route, Link, Switch, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header/Header';\n\nimport { Button } from 'shared/components/controls';\n\nimport { HeaderPageSwitch } from './components/HeaderPageSwitch/HeaderPageSwitch';\n\nimport { UsersPage } from './users';\n\nimport { GroupsPage } from './groups';\n\nexport const UsersAndGroupsPage = () => {\n  return (\n    <>\n      <Header>\n        <UserManagementHeaderLinks />\n        <RightSideControls />\n      </Header>\n      <UserManagementSwitch />\n    </>\n  );\n};\n\nexport const UserManagementHeaderLinks = () => {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n\n  const routes = [\n    { to: `${url}/users`, label: 'Users' },\n    { to: `${url}/groups`, label: 'Groups' }\n  ];\n\n  return <HeaderPageSwitch active={location.pathname} routes={routes} />;\n};\n\nexport const RightSideControls = () => {\n  const location = useLocation();\n  const { url } = useRouteMatch();\n\n  if (location.pathname.includes('create-new')) {\n    return null;\n  }\n\n  if (location.pathname.includes('users')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/users/create-new`} component={Link}>\n          Create User\n        </Button>\n      </div>\n    );\n  }\n\n  if (location.pathname.includes('groups')) {\n    return (\n      <div className=\"side-controls\" style={{ margin: '0 0 0 auto' }}>\n        <Button color=\"primary\" to={`${url}/groups/create-new`} component={Link}>\n          Create Group\n        </Button>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport const UserManagementSwitch = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${url}`}>\n        <UsersPage />\n      </Route>\n      <Route path={`${url}/groups`}>\n        <GroupsPage />\n      </Route>\n      <Route path={`${url}/users`}>\n        <UsersPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default UsersAndGroupsPage;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { array, func, object } from 'prop-types';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { Center, Main } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { loadAllUsersThunk } from '../store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\nimport { loadAllGroupsThunk } from '../groups/store/thunks';\nimport { ConnectedUserLoader } from './containers/UserLoader';\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { UserCard } from '../components/UserCard/UserCard';\nimport { NoUserSelectedPage } from './pages/NoUsersSelected';\nimport { CreateNewUserPage } from './pages/CreateNewUser/CreateNewUser';\n\nimport './root.scss';\n\nexport const UsersPage = ({\n  allUsers,\n  selectedUser,\n  loadAllUsers,\n  allGroups,\n  loadAllGroups,\n  isLoading\n}) => {\n  useEffect(() => {\n    loadAllUsers();\n    if (allGroups.length === 0) {\n      loadAllGroups();\n    }\n  }, []);\n\n  function filterUserByQuery(user, query) {\n    return user.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const userLink = user => {\n    return `${match.url}/${user.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading users...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"users-search-section\">\n        <SearchableList items={allUsers} filter={filterUserByQuery}>\n          {user => <UserCard selected={selectedUser} user={user} href={userLink(user)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <UserSwitch />\n      </section>\n    </Main>\n  );\n};\n\nUsersPage.propTypes = {\n  allUsers: array,\n  selectedUser: object,\n  loadAllUsers: func\n};\n\nexport const UserSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewUserPage />\n      </Route>\n      <Route path={`${path}/:userName`}>\n        <ConnectedUserLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoUserSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allUsers: mapSortInsensitive(state.usersManager.users.all),\n    selectedUser: state.usersManager.users.selected,\n    allGroups: state.groups.all,\n    isLoading: state.usersManager.flags.users.loading\n  }),\n  dispatch => ({\n    loadAllUsers: () => dispatch(loadAllUsersThunk()),\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(UsersPage);\n","import React, { useEffect } from 'react';\nimport { func, array } from 'prop-types';\n\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Main, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadAllGroupsThunk } from './store/thunks';\nimport { mapSortInsensitive } from '../store/mappers';\n\nimport { SearchableList } from '../components/SearchableList/SearchableList';\nimport { GroupCard } from './components/GroupCard/GroupCard';\n\nimport { ConnectedGroupLoader } from './pages/GroupView/GroupView';\nimport { CreateNewGroupPage } from './pages/CreateNewGroup/CreateNewGroup';\nimport { NoGroupSelectedPage } from './pages/NoGroupSelected';\n\nimport './root.local.scss';\n\nexport const GroupsPage = ({ allGroups, loadAllGroups, isLoading }) => {\n  useEffect(() => {\n    loadAllGroups();\n  }, []);\n\n  function filterGroupByQuery(group, query) {\n    return group.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  const match = useRouteMatch();\n\n  const groupLink = group => {\n    return `${match.url}/${group.name}`;\n  };\n\n  if (isLoading) {\n    return (\n      <Main>\n        <Center>\n          <Loader>Loading groups...</Loader>\n        </Center>\n      </Main>\n    );\n  }\n\n  return (\n    <Main mdPage>\n      <section className=\"search-list-section\">\n        <SearchableList items={allGroups} filter={filterGroupByQuery}>\n          {group => <GroupCard group={group} href={groupLink(group)} />}\n        </SearchableList>\n      </section>\n      <section className=\"details-view-section\">\n        <GroupsPagesSwitch />\n      </section>\n    </Main>\n  );\n};\n\nGroupsPage.propTypes = {\n  allGroups: array,\n  loadAllGroups: func\n};\n\nexport const GroupsPagesSwitch = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}/create-new`}>\n        <CreateNewGroupPage />\n      </Route>\n      <Route path={`${path}/:groupName`}>\n        <ConnectedGroupLoader />\n      </Route>\n      <Route exact path={`${path}`}>\n        <NoGroupSelectedPage />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default connect(\n  state => ({\n    allGroups: mapSortInsensitive(state.groups.all.filter(g => g.name !== 'user')),\n    isLoading: state.groups.ops.all.loading\n  }),\n  dispatch => ({\n    loadAllGroups: () => dispatch(loadAllGroupsThunk())\n  })\n)(GroupsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, bool, func, object } from 'prop-types';\nimport moment from 'moment';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddIcon from '@material-ui/icons/Add';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Center, RangeDatePicker } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main, Paper } from 'shared/components/layout';\nimport { globalFiltersSelector } from 'shared/store/state';\nimport { actions } from 'shared/store/actions';\nimport { Button } from 'shared/components/controls';\nimport { Header } from 'core/components/Header';\nimport { loadAllAccountsThunk, loadProtocolsThunk } from './store/thunks';\nimport { Treeview } from './treeview';\nimport { ConnectedBreadcrumbsTitle } from './containers/Breadcrumbs/Breadcrumbs';\nimport { ContentSwitch } from './components/ContentSwitch/ContentSwitch';\nimport { AddServerCard } from './containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from './containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from './containers/ImportCSV/ImportCSV';\nimport { ToggleSystemExplorerView } from './components/ToggleSystemExplorerView/ToggleSystemExplorerView';\nimport { SystemExplorerViewMode } from './components/ToggleSystemExplorerView/SystemExplorerViewMode';\nimport { ConnectedSystemExplorerTable } from './components/TableView/SystemExplorerTable';\nimport { CONSTANTS } from 'config';\n\nimport './root.local.scss';\n\nexport class ExplorerPage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      anchorElement: null,\n      viewMode: SystemExplorerViewMode.TABLE\n    };\n  }\n\n  componentDidMount() {\n    const { loadProtocols, loadAllAccounts } = this.props;\n\n    loadProtocols();\n    loadAllAccounts();\n  }\n\n  render() {\n    const {\n      treeviewData,\n      isLoading,\n      storeState: { level }\n    } = this.props;\n\n    const { viewMode } = this.state;\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    return (\n      <>\n        <Header stretchContent>\n          <h1 className=\"header-title\">System / Explorer</h1>\n          {level === 'workload' || level === 'license' ? (\n            <RangeDatePicker\n              onDatesChange={this.onChangeDatesHandler}\n              startDate={moment.unix(this.props.globalFilters.get('startDate'))}\n              endDate={moment.unix(this.props.globalFilters.get('endDate'))}\n            />\n          ) : null}\n\n          <ToggleSystemExplorerView active={viewMode} onClickCallback={(newMode) => this.setState({ viewMode: newMode })} />\n        </Header>\n        <Main mdPage>\n          {isLoading ? (\n            <Center>\n              <Loader>Loading accounts...</Loader>\n            </Center>\n          ) : (\n            viewMode === SystemExplorerViewMode.TILES && (\n              <>\n                <Treeview data={treeviewData} />\n                <Paper className=\"tiles-view-container\">\n                  <Paper.Header>\n                    <h1 className=\"breadcrumbs-title\">\n                      <ConnectedBreadcrumbsTitle />\n                    </h1>\n                    {!CONSTANTS.NEW_CUSTOMER_POC_ENABLED && (\n                      <div className=\"action-container\">\n                        <Button\n                          startIcon={<AddIcon />}\n                          className=\"action-btn\"\n                          aria-controls=\"simple-menu\"\n                          aria-haspopup=\"true\"\n                          onClick={this.handleClick}\n                          disabled={isDisabled}\n                        >\n                          Add connection\n                        </Button>\n                        <Menu\n                          id=\"connections-menu\"\n                          keepMounted\n                          anchorEl={this.state.anchorElement}\n                          open={Boolean(this.state.anchorElement)}\n                          onClose={this.handleClose}\n                        >\n                          <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                            <AddServerCard disabled={isDisabled} />\n                          </MenuItem>\n                          <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                            <AddDatabaseCard disabled={isDisabled} />\n                          </MenuItem>\n                          <MenuItem onClick={this.handleClose} onKeyDown={event => event.stopPropagation()}>\n                            <ImportCSV disabled={isDisabled} />\n                          </MenuItem>\n                        </Menu>\n                      </div>\n                    )}\n                  </Paper.Header>\n                  <ContentSwitch activePage={level} />\n                </Paper>\n              </>\n            )\n          )}\n          {!isLoading && viewMode === SystemExplorerViewMode.TABLE && (\n            <>\n              <ConnectedSystemExplorerTable\n                data={treeviewData}\n                switchToTileView={() => this.setState({ viewMode: SystemExplorerViewMode.TILES })}\n              />\n            </>\n          )}\n        </Main>\n      </>\n    );\n  }\n\n  handleClick = event => {\n    this.setState({ anchorElement: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorElement: null });\n  };\n\n  onChangeDatesHandler = range => {\n    if (range.startDate && range.endDate) {\n      this.props.setGlobalFilters(range);\n    }\n  };\n}\n\nExplorerPage.propTypes = {\n  treeviewData: array,\n  loadAllAccounts: func,\n  isLoading: bool,\n  storeState: object,\n  globalFilters: object,\n  setGlobalFilters: func\n};\n\nexport default connect(\n  state => ({\n    treeviewData: state.explorer.structured?.dbms || [],\n    isLoading: state.explorer.flags.accounts.loading || state.explorer.flags.protocols.loading,\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    loadAllAccounts: () => dispatch(loadAllAccountsThunk()),\n    loadProtocols: () => dispatch(loadProtocolsThunk()),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(ExplorerPage);\n","import React from 'react';\nimport { array } from 'prop-types';\nimport { ConnectedDBMS } from './layers/Dbms/Dbms';\n\nimport './root.local.scss';\n\nexport class Treeview extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <ul className=\"treeview-container\">\n        {data.map(dbms => (\n          <ConnectedDBMS key={dbms.protocol} data={dbms} />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTreeview.propTypes = {\n  data: array\n};\n\nexport default Treeview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StorageSidebar, ObjectsSidebar } from './Sidebar';\nimport { StorageViewer, ObjectsViewer } from './Viewer';\n\nimport './root.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport const DbObjects = ({\n  type,\n  data,\n  list,\n  dbName,\n  protocol,\n  selectedItem,\n  setItem,\n  loadingFlags,\n  invalidObjects\n}) => {\n  const { loadingPoints, loadingDetails, loading } = loadingFlags;\n  const sidebarDisabled = SystemExplorerFeatureUtil.isObjectsSidebarDisabled(protocol);\n  if (type === 'storage') {\n    return (\n      <div className=\"db-objects-tabs\">\n        <StorageSidebar\n          dbName={dbName}\n          isLoading={loadingPoints}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n        <StorageViewer data={data} isLoading={loadingDetails} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"db-objects-tabs\">\n      {!sidebarDisabled && (\n        <ObjectsSidebar\n          dbName={dbName}\n          invalidObjects={invalidObjects}\n          isLoading={loading}\n          list={list}\n          selectedItem={selectedItem}\n          setItem={setItem}\n        />\n      )}\n      <ObjectsViewer data={data} isLoading={loading} sidebarDisabled={sidebarDisabled} protocol={protocol} />\n    </div>\n  );\n};\n\nDbObjects.propTypes = {\n  type: PropTypes.string,\n  data: PropTypes.object,\n  list: PropTypes.array,\n  selectedItem: PropTypes.object,\n  setItem: PropTypes.func,\n  dbName: PropTypes.string,\n  protocol: PropTypes.string\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { actions } from 'session/store/actions';\nimport { beHealthSelector, beLicenceSelector, beVersionSelector, currentUserSelector } from 'session/store/state';\nimport { Compile, Navigation, UserMenu } from './components';\nimport pkg from '../../../../../package.json';\nimport MasLogo from '../../../../assets/images/mas_logo_white.svg';\nimport VenditaLogo from '../../../../assets/images/vendita_logo_white.svg';\nimport './sidebar.local.scss';\n\nconst RUNNING = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'rgb(79, 219, 70)',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nconst STATUS_SPAN = {\n  color: '#fff',\n  fontSize: '11px',\n  marginLeft: '14px',\n  textShadow: '1px 1px 1px #3765af3b',\n  position: 'relative',\n  top: '-2px'\n};\n\nconst STOPPED = {\n  height: '10px',\n  width: '10px',\n  backgroundColor: 'red',\n  borderRadius: '50%',\n  position: 'relative',\n  left: '6px',\n  top: '20px'\n};\n\nexport class SidebarContainer extends React.PureComponent {\n  componentDidMount() {\n    this.props.getBeVersion();\n    this.props.getBeLicence();\n    this.props.getBeHealth();\n  }\n\n  render() {\n    const postgresStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.postgresStatus : null;\n    const masDaemonStatus = this.props.beHealth ? this.props.beHealth.masSystemsMonitor.masDaemonStatus : null;\n    const uptime1Minute = this.props.beHealth\n      ? `${this.props.beHealth.masSystemsMonitor.uptime1Minute},${this.props.beHealth.masSystemsMonitor.uptime5Minutes},${this.props.beHealth.masSystemsMonitor.uptime15Minutes}`\n      : null;\n\n    const daysUntilExpire = this.props.beLicence ? this.props.beLicence.licensed_feature[1].daysUntilExpire : null;\n    const expirationDate = this.props.beLicence ? this.props.beLicence.licensed_feature[1].expirationDate : null;\n    const licenseStatus = this.props.beLicence ? this.props.beLicence.licensed_feature[1].licenseStatus : null;\n\n    return (\n      <div className={this.props.className}>\n        <div className=\"logo-container\">\n          <img className=\"vendita-logo img-responsive\" src={VenditaLogo} alt=\"Vendita logo\" />\n          <LightTooltip\n            placement=\"right\"\n            title={\n              <>\n                <div>\n                  <span style={{ paddingRight: '2px' }}>UI </span>version:&nbsp;\n                  {pkg.version}\n                </div>\n                <div>\n                  <span>BE </span>version:&nbsp;\n                  {this.props.beVersion}\n                </div>\n\n                <div>\n                <span>BE </span>License: {(licenseStatus ? 'MAS Lite' : 'MAS Full')} <br />\n                  Expiration Date: {expirationDate} <br />\n                  Days Until Expire: {daysUntilExpire} <br />\n                </div>\n              </>\n            }\n          >\n            <img className=\"mas-logo img-responsive\" src={MasLogo} alt=\"MAS logo\" />\n          </LightTooltip>\n        </div>\n        <div className=\"nav-area\">\n          <div style={{ position: 'relative', bottom: '17px', right: '2px' }}>\n          {masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {!masDaemonStatus && (\n            <div style={{ top: '14px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">MAS</a></span>\n              </div>\n            </div>\n          )}\n          {postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {!postgresStatus && (\n            <div style={{ top: '18px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Postgres</a></span>\n              </div>\n            </div>\n          )}\n          {uptime1Minute && (\n            <div style={{ top: '23px', position: 'relative' }}>\n              <div style={RUNNING}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          {!uptime1Minute && (\n            <div style={{ top: '20px', position: 'relative' }}>\n              <div style={STOPPED}>\n                <span style={STATUS_SPAN}><a target=\"_blank\" href=\"/masmon.html\">Load {uptime1Minute && uptime1Minute}</a></span>\n              </div>\n            </div>\n          )}\n          </div>\n          <Navigation />\n        </div>\n        <div className=\"bottom\">\n          <Compile />\n          <UserMenu user={this.props.currentUser.get('name')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebarContainer.propTypes = {\n  className: PropTypes.string,\n  currentUser: PropTypes.object.isRequired\n};\n\nexport const mapStateToProps = state => ({\n  currentUser: currentUserSelector(state),\n  beVersion: beVersionSelector(state),\n  beLicence: beLicenceSelector(state),\n  beHealth: beHealthSelector(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  getBeVersion: data => dispatch(actions.getBeVersion.dispatchLoading(data)),\n  getBeLicence: data => dispatch(actions.getBeLicence.dispatchLoading(data)),\n  getBeHealth: data => dispatch(actions.getBeHealth.dispatchLoading(data))\n});\n\nSidebarContainer.defaultProps = {\n  className: 'sidebar'\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarContainer);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiStarOutline } from '@mdi/js';\n\nimport './favorites.local.scss';\n\nexport class Favorites extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-nav-favorites`}>\n        <SvgIcon>\n          <Icon path={mdiStarOutline} />\n        </SvgIcon>\n      </div>\n    );\n  }\n}\n\nFavorites.propTypes = {\n  className: PropTypes.string\n};\n\nFavorites.defaultProps = {\n  className: 'favorites'\n};\n\nexport default Favorites;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { navigationItems } from './constants';\n\nimport './navigation.local.scss';\n\nexport class Navigation extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      navId: '',\n      anchorElement: null\n    };\n\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setCurrentNavItem();\n  }\n\n  componentDidUpdate() {\n    this.setCurrentNavItem();\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {navigationItems.map((item, index) => {\n          if (item.items && item.items.length > 0) {\n            return (\n              <div key={index}>\n                <div\n                  role=\"presentation\"\n                  key={index}\n                  className={`nav-item ${\n                    this.state.activeTab === index || this.state.navId === item.id ? ' active ' : ''\n                  } ${item.qaClass ? item.qaClass : ''}`}\n                  onMouseEnter={(event) => this.handlePopoverOpen(event, item.id)}\n                  onMouseLeave={() => this.handlePopoverClose(item.id)}\n                >\n                  <IconButton className=\"icon\">{item.icon}</IconButton>\n                  <p>{item.title}</p>\n                </div>\n                <Popover\n                  className=\"nav-sublist-container\"\n                  anchorEl={this.state.anchorElement}\n                  open={this.state.navId === item.id}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                  }}\n                >\n                  <Paper>\n                    <ClickAwayListener onClickAway={this.setCloseDropdown}>\n                      <MenuList className=\"nav-sublist-menu\" id=\"menu-list-grow\">\n                        {item.items.map(subItem => (\n                          <MenuItem\n                            key={subItem.to}\n                            className={subItem.qaClass}\n                            to={subItem.to}\n                            component={Link}\n                            onClick={this.setCloseDropdown}\n                          >\n                            {subItem.title}\n                          </MenuItem>\n                        ))}\n                      </MenuList>\n                    </ClickAwayListener>\n                  </Paper>\n                </Popover>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              role=\"presentation\"\n              key={item.to}\n              className={`nav-item ${this.state.activeTab === index ? 'active' : ''} ${\n                item.qaClass ? item.qaClass : ''\n              }`}\n              onClick={() => this.setActiveTab(index, item.to)}\n              onMouseEnter={() => this.handlePopoverClose(item.id)}\n            >\n              <IconButton className=\"icon\">{item.icon}</IconButton>\n              <p>{item.title}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.anchorRef.current && this.anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page) {\n      this.props.history.push(page);\n    }\n    this.setState({ navId: '' });\n  };\n\n  handlePopoverOpen = (event, name) => {\n    this.setState({ navId: name, anchorElement: event.target });\n  };\n\n  handlePopoverClose = (name) => {\n    if (this.state.navId !== name) {\n      this.setState({ navId: '', anchorElement: null });\n    }\n  };\n\n  setActiveTab = (newActiveTab, page) => {\n    this.props.history.push(page);\n    this.setState({ activeTab: newActiveTab, navId: '' });\n  };\n\n  setCurrentNavItem() {\n    const index = navigationItems.findIndex(\n      item =>\n        item.to === this.props.location.pathname || this.props.location.pathname.startsWith(item.to)\n    );\n\n    if (this.state.activeTab !== index) {\n      this.setState({ activeTab: index });\n    }\n  }\n}\n\nNavigation.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nNavigation.defaultProps = {\n  className: 'navigation'\n};\n\nexport default withRouter(Navigation);\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nimport './notification.local.scss';\n\nexport class Notification extends React.PureComponent {\n  render() {\n    return (\n      <div className={`${this.props.className} qa-notification`}>\n        <NotificationsNoneIcon />\n      </div>\n    );\n  }\n}\n\nNotification.propTypes = {\n  className: PropTypes.string\n};\n\nNotification.defaultProps = {\n  className: 'notification'\n};\n\nexport default Notification;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport Popover from '@material-ui/core/Popover';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { Logout } from 'session/pages';\n\nimport './user-menu.local.scss';\nimport { ChangePassword } from '../../../../../users-manager/users/pages/UserView/containers/ChangePassword';\n\nexport class UserMenu extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isVisible: false\n    };\n\n    this.menuAnchorRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"user-menu qa-user-menu\"\n          ref={this.menuAnchorRef}\n          onClick={this.setToggleDropdown}\n          role=\"presentation\"\n        >\n          <LightTooltip placement=\"right\" title={this.props.user}>\n            <Avatar className=\"user-avatar\">{this.props.user.substring(0, 2).toUpperCase()}</Avatar>\n          </LightTooltip>\n        </div>\n\n        <Popover\n          className=\"user-menu-list-container\"\n          anchorEl={this.menuAnchorRef.current}\n          open={this.state.isVisible}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left'\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={this.setCloseDropdown}>\n              <MenuList\n                className=\"user-menu-list\"\n                autoFocusItem={this.state.isVisible}\n                id=\"menu-list-grow\"\n              >\n                {this.props.user === 'mas' && (\n                  <MenuItem\n                    className=\"qa-user-menu-admin\"\n                    onClick={event => this.openAdminPage(event)}\n                  >\n                    <FormattedMessage id=\"navigation.admin\" />\n                  </MenuItem>\n                )}\n                <MenuItem\n                  className=\"qa-user-menu-groups\"\n                  onClick={event => this.setCloseDropdown(event, 'help')}\n                >\n                  <FormattedMessage id=\"navigation.help\" />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-change-pwd\" onKeyDown={event => event.stopPropagation()}>\n                  <ChangePassword\n                    user={this.props.user}\n                    useLinkTrigger=\"true\"\n                  />\n                </MenuItem>\n                <MenuItem className=\"qa-user-menu-logout\" to={Logout.path} component={Link}>\n                  <FormattedMessage id=\"navigation.logout\" />\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popover>\n      </>\n    );\n  }\n\n  setCloseDropdown = (event, page) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    if (page === 'help') {\n      window.open(\n        'https://masmanual.venditabeta.com/index.php/Vendita_MAS_Documentation_Library#User_Guides_MAS_3.0',\n        '_blank'\n      );\n    }\n\n    this.setState({ isVisible: false });\n  };\n\n  openAdminPage = (event) => {\n    if (this.menuAnchorRef.current && this.menuAnchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    window.open(\n      `https://${window.location.host}/admin/`,\n      '_blank'\n    );\n\n    this.setState({ isVisible: false });\n  };\n\n  setToggleDropdown = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible\n    }));\n  };\n}\n\nUserMenu.propTypes = {\n  user: PropTypes.string.isRequired\n};\n\nexport default withRouter(UserMenu);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState, useEffect, useContext } from 'react';\n\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { Modal, ModalHeader, ModalContext, Result } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Button } from 'shared/components/controls';\nimport { Switch } from 'shared/components';\n\nimport VideoLibraryOutlinedIcon from '@material-ui/icons/VideoLibraryOutlined';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { postCompile } from 'shared/api/compile';\n\nimport { fetchEntity } from '../../../../../entities/actions';\n\nimport './compile.local.scss';\nimport { useDispatch } from 'react-redux';\n\nexport const Compile = () => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => setOpen(true),\n    close: () => {\n      setOpen(false);\n      setStep('confirmation');\n    }\n  };\n  const [step, setStep] = useState('confirmation');\n\n  return (\n    <>\n      <div className=\"compile\">\n        <Tooltip title=\"Compile\">\n          <VideoLibraryOutlinedIcon onClick={modalActions.open} />\n        </Tooltip>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {step === 'confirmation' && <Confirmation setStep={setStep} />}\n        {step === 'compiler' && <Compiler />}\n      </Modal>\n    </>\n  );\n};\n\nconst Confirmation = ({ setStep }) => {\n  const { actions } = useContext(ModalContext);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '350px',\n        maxHeight: '368px',\n        maxWidth: '65vw'\n      }}\n    >\n      <ModalHeader title=\"Warning\" icon={<WarningIcon />} />\n      <Paper.Content scrollable={false}>\n        <Result type=\"fail\">\n          <BodyText>\n            <p style={{ fontWeight: 'normal' }}>\n              This command will recompile all the processes and refresh the process list. This\n              usually takes about 1 to 2 minutes.\n            </p>\n            <p style={{ textAlign: 'center' }}>Do you want to proceed?</p>\n          </BodyText>\n        </Result>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            onClick={() => {\n              actions.close();\n            }}\n          >\n            No\n          </Button>\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            onClick={() => {\n              setStep('compiler');\n            }}\n          >\n            Yes\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </Paper>\n  );\n};\n\nconst Compiler = () => {\n  const [compilation, setCompilation] = useState('compiling');\n  const dispatch = useDispatch();\n\n  const { actions } = useContext(ModalContext);\n\n  useEffect(() => {\n    console.log('[started compilation'); // eslint-disable-line\n    postCompile()\n      .then(() => {\n        setCompilation('refreshing');\n\n        Promise.all([dispatch(fetchEntity('process')), dispatch(fetchEntity('namespace'))])\n          .then(() => {\n            setCompilation('success');\n            console.log('[succeded compilation'); // eslint-disable-line\n          })\n          .catch(() => {\n            setCompilation('success-no-reload');\n            console.log(results, '[succeded compilation. failed to reload entities.'); // eslint-disable-line\n          });\n      })\n      .catch(() => {\n        setCompilation('failed');\n        console.log('[failed compilation'); // eslint-disable-line\n      });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        minWidth: '430px',\n        minHeight: '330px'\n      }}\n    >\n      <ModalHeader icon={<VideoLibraryOutlinedIcon />} title=\"Compile\" />\n      <Switch value={compilation}>\n        <Switch.Case value=\"compiling\">\n          <Center>\n            <Loader>Running compilation...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"refreshing\">\n          <Center>\n            <Loader>Loading processes...</Loader>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"failed\">\n          <Center>\n            <Result type=\"fail\">\n              <Result.Text compact>Compilation failed.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Close</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n        <Switch.Case value=\"success-no-reload\">\n          <Center>\n            <Result type=\"success\">\n              <Result.Text compact>Compilation succeeded</Result.Text>\n              <Result.Text compact>Could not refresh processes list.</Result.Text>\n            </Result>\n          </Center>\n          <Paper.Footer>\n            <Paper.Footer.Right>\n              <Button onClick={actions.close}>Done</Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useLocation, Link as RouterLink } from 'react-router-dom';\n\nimport { Header } from 'core/components/Header';\n\nimport { Main, Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { LimitlessTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './job-process.local.scss';\nimport { Breadcrumbs, Link } from '@material-ui/core';\n\nimport ConnectedJobView from './job-view';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getQuery, getInvocationStatus, getInvocation } from './store/selectors';\nimport { processQuery } from './store/actions';\nimport { InvocationStatus } from './store/constants';\n\nimport './root.local.scss';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst LinkRouter = props => <Link {...props} component={RouterLink} />;\n\nconst JobProcess = () => {\n  const query = useQuery();\n\n  const uuid = query.get('invocation');\n  const processName = query.get('process');\n  const redirected = query.get('redirected');\n\n  return (\n    <>\n      <Header>\n        <Breadcrumbs classes={{ root: 'job-main-breadcrumbs' }} aria-label=\"breadcrumb\">\n          <LinkRouter to=\"/jobs\">Jobs</LinkRouter>\n          <OtherMainLinks />\n        </Breadcrumbs>\n      </Header>\n      <Main>\n        <Paper>\n          <PrepareFlow uuid={uuid} process={processName}>\n            <ConnectedJobView redirected={redirected === 'true'} />\n          </PrepareFlow>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n\nexport default JobProcess;\n\nfunction PrepareFlow({ children, uuid, process }) {\n  const query = useSelector(getQuery);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(processQuery(uuid, process));\n  }, [uuid]);\n\n  if (query.uuid !== uuid) {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Setting up invocation viewer</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return children;\n}\n\nfunction OtherMainLinks() {\n  const status = useSelector(getInvocationStatus);\n  const invocation = useSelector(getInvocation);\n\n  if (status === InvocationStatus.NEW) {\n    return <div className=\"current-job\">New Job</div>;\n  }\n\n  if (invocation && invocation.designation) {\n    return (\n      <LimitlessTooltip\n        placement=\"bottom-start\"\n        title={\n          <>\n            <p>Invocation: {invocation.designation}</p>\n            {invocation.schedule && <p>Schedule: {invocation.schedule}</p>}\n          </>\n        }\n      >\n        <div className=\"current-job\">{invocation.designation}</div>\n      </LimitlessTooltip>\n    );\n  }\n\n  return null;\n}\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  CHECK_AUTHORIZATION: '[session] CHECK_AUTHORIZATION',\n  LOGIN: '[session] LOGIN',\n  LOGOUT: '[session] LOGOUT',\n  BE_VERSION: '[session] BE_VERSION',\n  BE_LICENCE: '[session] BE_LICENCE',\n  BE_HEALTH: '[session] BE_HEALTH'\n};\n\nexport const sessionActions = {\n  checkAuthorization: new ActionCreator(actionsTypes.CHECK_AUTHORIZATION),\n  login: new ActionCreator(actionsTypes.LOGIN),\n  logout: new ActionCreator(actionsTypes.LOGOUT),\n  getBeVersion: new ActionCreator(actionsTypes.BE_VERSION),\n  getBeLicence: new ActionCreator(actionsTypes.BE_LICENCE),\n  getBeHealth: new ActionCreator(actionsTypes.BE_HEALTH)\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* checkAuthorization({ payload }) {\n  RestClient.setBasicAuth();\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_USER(payload), {\n      page_size: 2147483645\n    });\n\n    const userDetails = {\n      name: response.data.data.source.user\n    };\n\n    if (response.data.data.users && response.data.data.users[0]) {\n      [userDetails.details] = response.data.data.users;\n    }\n\n    yield put(actions.checkAuthorization.dispatchSuccess(userDetails));\n  } catch (errors) {\n    yield put(actions.checkAuthorization.dispatchFail());\n  }\n}\n\nexport function* CheckAuthorizationEffect() {\n  yield takeEvery(actions.checkAuthorization.getLoadingAction(), checkAuthorization);\n}\n","export default {\n  INTL: 'en',\n  BASE: {\n    HOST: '/mas',\n    VERSION: '',\n    TIMEOUT: 2000 * 60,\n    ENDPOINTS: {\n      LOGIN: '/authenticate',\n      CURRENT_USER: name => `user/${name}`,\n      CURRENT_TIME: '/current/time',\n      DAEMON_STATUS: 'daemon/status',\n      JOB_COUNT: '/invocation/dashboard/job_count',\n      JOBS: '/invocation',\n      PROCESSES: '/process',\n      USERS: '/user',\n      DATATYPES: '/type',\n      PROTOTYPES: '/prototype',\n      GROUPS: '/group',\n      ACCOUNTS: '/account',\n      FORMS: '/form',\n      FORM: '/form',\n      PROTOCOLS: '/protocol',\n      DOWNLOAD_PACKAGING: '/download/oracle_report',\n      SESSIONS: name => `/system/explorer/${name}/all_sessions`,\n      DB_LAST_BACKUP: '/system/explorer/backup_last_24hr',\n      DB_STATUS: '/system/explorer/dbstate',\n      EXECUTIVE_DASHBOARD: '/execdashboard',\n      VIRTUAL_EXECUTIVE_DASHBOARD: 'execdashboard/virtual',\n      STORAGE_DF: name => `/system/explorer/${name}/df_free_space`,\n      STORAGE_TS: '/system/explorer/ts_usage',\n      BE_VERSION: '/version',\n      BE_LICENCE: '/mondata?id_montype=1',\n      BE_HEALTH: '/mondata?id_montype=2',\n      UPLOAD_ACCOUNTS: '/account/batch',\n      DOWNLOAD_CSV_TEMPLATE: '/download/csv_batch_import_sample'\n    }\n  },\n  NEW_CUSTOMER_POC_ENABLED: true\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\nimport Cookie from 'js-cookie';\n\nimport { CONSTANTS } from 'config';\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\n\nfunction* login(action) {\n  try {\n    Cookie.set(\n      'Authorization',\n      Buffer.from(`${action.payload.username}:${action.payload.password}`).toString('base64')\n    );\n    RestClient.setBasicAuth();\n    yield RestClient.post(CONSTANTS.BASE.ENDPOINTS.LOGIN);\n    yield put(actions.login.dispatchSuccess());\n    yield put(actions.checkAuthorization.dispatchLoading(action.payload.username));\n    localStorage.setItem('username', JSON.stringify(action.payload.username));\n  } catch (errors) {\n    if (!errors.response) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: 'Unknown Error. Please contact the administrator!'\n          }\n        ])\n      );\n      return;\n    }\n\n    if (errors.response.data.status === 422) {\n      yield put(actions.login.dispatchFail(errors.response.data.error.details));\n      return;\n    }\n\n    if (errors.response.data.status === 401) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors.response.data.status === 500) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    if (errors?.response?.statusText) {\n      yield put(\n        actions.login.dispatchFail([\n          {\n            message: errors.response.statusText\n          }\n        ])\n      );\n\n      return;\n    }\n\n    throw errors;\n  }\n}\n\nexport function* LoginEffect() {\n  yield takeEvery(actions.login.getLoadingAction(), login);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'session/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { Login } from 'session/pages';\n\nfunction loginPath() {\n  return process.env.NODE_ENV === 'development'\n    ? window.location.replace(Login.path)\n    : window.location.replace(`/ui/#${Login.path}`);\n}\n\nfunction* logout() {\n  localStorage.removeItem('username');\n  RestClient.removeBasicAuth();\n  loginPath();\n  yield put(actions.logout.dispatchSuccess());\n}\n\nexport function* LogoutEffect() {\n  yield takeEvery(actions.logout.getLoadingAction(), logout);\n}\n","module.exports = __webpack_public_path__ + \"svgs/ae6021ac50f5c1e93465ff63ea3769d4.svg\";","module.exports = __webpack_public_path__ + \"svgs/0e998e182da8161761cd7209592a7dae.svg\";","module.exports = __webpack_public_path__ + \"svgs/fc315038f28eb52f1b1228e70e8919d6.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport { isInclusivelyAfterDay } from 'shared/lib';\n\nimport { DateRangePicker, DateRangePickerPhrases, DateRangePickerShape } from 'react-dates';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n} from './constants';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  // initialStartDate: momentPropTypes.momentObj,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  startDateId: PropTypes.string,\n  startDatePlaceholderText: PropTypes.string,\n  endDateId: PropTypes.string,\n  endDatePlaceholderText: PropTypes.string,\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  screenReaderInputMessage: PropTypes.string,\n  showClearDates: PropTypes.bool,\n  showDefaultInputIcon: PropTypes.bool,\n  customInputIcon: PropTypes.object,\n  customArrowIcon: PropTypes.node,\n  customCloseIcon: PropTypes.object,\n  block: PropTypes.bool,\n  small: PropTypes.bool,\n  regular: PropTypes.bool,\n\n  // calendar presentation and interaction related props\n  renderMonthText: PropTypes.string,\n  orientation: PropTypes.string,\n  anchorDirection: PropTypes.string,\n  horizontalMargin: PropTypes.number,\n  withPortal: PropTypes.bool,\n  withFullScreenPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.string,\n  numberOfMonths: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  reopenPickerOnClearDates: PropTypes.bool,\n  isRTL: PropTypes.bool,\n\n  // navigation related props\n  navPosition: PropTypes.string,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n\n  // day presentation and interaction related props\n  renderCalendarDay: PropTypes.string,\n  renderDayContents: PropTypes.func,\n  minimumNights: PropTypes.number,\n  enableOutsideDays: PropTypes.bool,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n\n  // internationalization\n  displayFormat: PropTypes.func,\n  monthFormat: PropTypes.string,\n  phrases: DateRangePickerPhrases,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: (day) => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: (date) => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  render() {\n    const { focusedInput } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={this.props.startDate}\n          endDate={this.props.endDate}\n        />\n      </div>\n    );\n  }\n\n  onDatesChange(range) {\n    this.props.onDatesChange(range);\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  GET_JOBS: '[jobs] GET_JOBS',\n  GET_CONNECTIONS: '[jobs] GET_CONNECTIONS',\n  SEARCH_JOBS: '[jobs] SEARCH_JOBS'\n};\n\nexport const jobsActions = {\n  getJobs: new ActionCreator(actionsTypes.GET_JOBS),\n  getConnections: new ActionCreator(actionsTypes.GET_CONNECTIONS),\n  searchJobs: new ActionCreator(actionsTypes.SEARCH_JOBS)\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SEARCH_PROCESSES: '[processes] SEARCH_PROCESSES',\n};\n\nexport const processActions = {\n  searchProcesses: new ActionCreator(actionsTypes.SEARCH_PROCESSES),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  UPDATE_GLOBAL_FILTERS: '[shared] UPDATE_GLOBAL_FILTERS',\n};\n\nexport const globalFiltersActions = {\n  setGlobalFilters: new ActionCreator(actionsTypes.UPDATE_GLOBAL_FILTERS),\n};\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  SET_FILTER_STATUS: '[dashboard] SET_FILTER_STATUS'\n};\n\nexport const filterStatusActions = {\n  setFilterStatus: new ActionCreator(actionsTypes.SET_FILTER_STATUS)\n};\n","import { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nexport function checkDaemon() {\n  return RestClient.get(CONSTANTS.BASE.ENDPOINTS.DAEMON_STATUS);\n}\n","import { createSelector } from 'reselect';\n\nexport const isDaemonRunning = createSelector(\n  state => state.daemon,\n  daemon => {\n    return daemon.running;\n  }\n);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Loader } from 'shared/components/loaders';\nimport { Center, Switch } from 'shared/components';\nimport { loadAllAccountsThunk } from 'explorer/store/thunks';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiServer } from '@mdi/js';\nimport { CircleImg, NumberLabel } from '../../../shared/components';\nimport './ServersList.local.scss';\nimport { Link } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { AddServerCard } from '../../../explorer/containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../../explorer/containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../../explorer/containers/ImportCSV/ImportCSV';\nimport Button from '@material-ui/core/Button';\n\nexport const ServersList = ({ loading, dbms, getAllAccounts }) => {\n  const [anchorElement, setAnchorElement] = useState(null);\n\n  useEffect(() => {\n    getAllAccounts();\n  }, []);\n\n  const handleClick = (event) => {\n    event.stopPropagation();\n    setAnchorElement(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorElement(null);\n  };\n\n  const serversNumber = dbms.reduce((acc, el) => acc + el.servers.length, 0);\n\n  return (\n    <Switch value={loading}>\n      <Switch.Case value>\n        <Center>\n          <Loader>Loading Servers</Loader>\n        </Center>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <header onClick={handleClose} role=\"presentation\">\n          <div className=\"widget-title\">\n            <CircleImg\n              image={\n                <SvgIcon>\n                  <Icon path={mdiServer} />\n                </SvgIcon>\n              }\n            />\n            <NumberLabel number={serversNumber} />\n            <Link className=\"servers-link\" to=\"/system/explorer\">Servers</Link>\n          </div>\n\n          <div>\n            <Button\n              startIcon={<AddIcon />}\n              className=\"action-btn\"\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              Add connection\n            </Button>\n            <Menu\n              id=\"connections-menu\"\n              keepMounted\n              anchorEl={anchorElement}\n              open={Boolean(anchorElement)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddServerCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <AddDatabaseCard />\n              </MenuItem>\n              <MenuItem onClick={handleClose} onKeyDown={event => event.stopPropagation()}>\n                <ImportCSV />\n              </MenuItem>\n            </Menu>\n          </div>\n        </header>\n        <div className=\"servers-list\">\n          {dbms.map(el => (\n            <>\n              {el.servers.map(server => (\n                <div className=\"server-item\">\n                  <div className=\"icon-container\">\n                    <SvgIcon>\n                      <Icon path={mdiDns} />\n                    </SvgIcon>\n                  </div>\n                  <div className=\"name-container\">\n                    <span className=\"name\">\n                      <span className=\"dbms\">{el.name}</span>\n                      <span className=\"separator\">/</span>\n                      <span className=\"server\">{server.address}</span>\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </>\n          ))}\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n};\n\nexport const ConnectedServersList = connect(\n  state => {\n    return {\n      loading: state.explorer.flags.serversUsage.loading,\n      dbms: state.explorer.structured?.dbms || []\n    };\n  },\n  dispatch => ({\n    getAllAccounts: () => dispatch(loadAllAccountsThunk({ from: 'dashboard' }))\n  })\n)(ServersList);\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadTemplate = async () => {\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_CSV_TEMPLATE);\n\n    const fileName = 'CSV_Template.csv';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\n// import mock from './_mock.json';\n\nfunction* jobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    // yield put(actions.getJobs.dispatchSuccess(mock));\n    yield put(actions.getJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    let reason = '';\n\n    if (\n      errors &&\n      errors.response &&\n      errors.response.data &&\n      errors.response.data.messages &&\n      errors.response.data.messages[0] &&\n      errors.response.data.messages[0].text &&\n      errors.response.data.messages[0].text.startsWith('permission denied')\n    ) {\n      reason = 'rights';\n    }\n\n    yield put(actions.getJobs.dispatchFail({ reason }));\n  }\n}\n\nexport function* JobsEffect() {\n  yield takeEvery(actions.getJobs.getLoadingAction(), jobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* connections() {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.ACCOUNTS, {\n      page_size: 2147483645\n    });\n\n    yield put(actions.getConnections.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.getConnections.dispatchFail(errors));\n  }\n}\n\nexport function* JobsConnectionsEffect() {\n  yield takeEvery(actions.getConnections.getLoadingAction(), connections);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchJobs(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.JOBS, query.payload);\n\n    yield put(actions.searchJobs.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchJobs.dispatchFail(errors));\n  }\n}\n\nexport function* SearchJobsEffect() {\n  yield takeEvery(actions.searchJobs.getLoadingAction(), searchJobs);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nfunction* searchProcesses(query) {\n  try {\n    const response = yield RestClient.get(CONSTANTS.BASE.ENDPOINTS.PROCESSES, query.payload);\n\n    yield put(actions.searchProcesses.dispatchSuccess(response.data));\n  } catch (errors) {\n    yield put(actions.searchProcesses.dispatchFail(errors));\n  }\n}\n\nexport function* SearchProcessesEffect() {\n  yield takeEvery(actions.searchProcesses.getLoadingAction(), searchProcesses);\n}\n","import { put, takeEvery } from '@redux-saga/core/effects';\n\nimport { actions } from 'shared/store/actions';\n\nfunction* globalFilters(filters) {\n  yield put(actions.setGlobalFilters.dispatchSuccess(filters.payload));\n}\n\nexport function* GlobalFiltersEffect() {\n  yield takeEvery(actions.setGlobalFilters.getLoadingAction(), globalFilters);\n}\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_USERS,\n  SELECT_USER,\n  LOAD_USER,\n  REVOKE_PRIVILEGE,\n  GRANT_PRIVILEGE,\n  ADD_USER_TO_GROUPS,\n  REMOVE_USER_FROM_GROUPS,\n  DEACTIVATE_USER,\n  CREATE_USER\n} from '../actions';\n\nimport { mapUsersData, mapLoadedUser } from '../mappers';\n\nexport const initialState = {\n  users: {\n    all: [],\n    selected: null\n  },\n  flags: {\n    users: { loading: false },\n    user: { loading: false, deactivating: false },\n    privileges: { disabled: false }\n  },\n  debug: {\n    user: {},\n    groups_update: {},\n    privileges: {}\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_USERS)]: draft => {\n    draft.flags.users.loading = true;\n  },\n  [types.success(LOAD_ALL_USERS)]: (draft, { payload }) => {\n    draft.users.all = mapUsersData(payload);\n\n    draft.flags.users.loading = false;\n  },\n  [types.action(SELECT_USER)]: (draft, { payload }) => {\n    draft.users.selected = payload;\n  },\n  [types.loading(LOAD_USER)]: draft => {\n    draft.flags.user.loading = true;\n    draft.users.selected = null;\n  },\n  [types.success(LOAD_USER)]: (draft, { payload }) => {\n    draft.flags.user.loading = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.loading(DEACTIVATE_USER)]: draft => {\n    draft.flags.user.deactivating = true;\n  },\n  [types.success(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.users.all = mapUsersData(payload);\n  },\n  [types.fail(DEACTIVATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.deactivating = false;\n    draft.debug.user.errors = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.flags.privileges.disabled = true;\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.flags.privileges.disabled = false;\n    draft.debug.privileges.errors = payload;\n  },\n  [types.action(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.loading(ADD_USER_TO_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(ADD_USER_TO_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(REMOVE_USER_FROM_GROUPS)]: draft => {\n    draft.flags.user.updating_groups = true;\n  },\n  [types.success(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.users.selected = mapLoadedUser(payload);\n  },\n  [types.fail(REMOVE_USER_FROM_GROUPS)]: (draft, { payload }) => {\n    draft.flags.user.updating_groups = false;\n    draft.debug.groups_update.errors = payload;\n  },\n  [types.loading(CREATE_USER)]: draft => {\n    draft.flags.user.creating = true;\n  },\n  [types.success(CREATE_USER)]: draft => {\n    draft.flags.user.creating = false;\n  },\n  [types.fail(CREATE_USER)]: (draft, { payload }) => {\n    draft.flags.user.creating = false;\n    draft.debug.user.errors = payload;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\n\nimport {\n  LOAD_ALL_GROUPS,\n  LOAD_GROUP,\n  GRANT_PRIVILEGE,\n  REVOKE_PRIVILEGE,\n  REMOVE_USERS_FROM_GROUP,\n  REMOVE_GROUPS_FROM_GROUP,\n  ADD_USERS_TO_GROUP,\n  PATCH_SELECTED_GROUP,\n  CREATE_GROUP,\n  DELETE_GROUP\n} from './actions';\n\nexport const initialState = {\n  all: [],\n  ops: {\n    all: { done: false, loading: false },\n    selected: { done: false, loading: false },\n    privileges: { done: false, loading: false },\n    remove: { loading: false },\n    create: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_GROUPS)]: draft => {\n    draft.ops.all = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_ALL_GROUPS)]: (draft, { payload }) => {\n    const response = payload;\n    draft.all = response.data.groups;\n    draft.ops.all = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.loading(LOAD_GROUP)]: draft => {\n    draft.ops.selected = {\n      loading: true\n    };\n  },\n  [types.success(LOAD_GROUP)]: (draft, { payload }) => {\n    const response = payload;\n    draft.selected = response.data.groups[0]; //eslint-disable-line\n    draft.ops.selected = {\n      loading: false,\n      result: response.result,\n      errors: response.messages\n    };\n  },\n  [types.fail(LOAD_GROUP)]: (draft, { payload }) => {\n    draft.selected = null;\n    draft.ops.selected = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.action(PATCH_SELECTED_GROUP)]: (draft, { payload }) => {\n    draft.selected = payload;\n  },\n  [types.loading(GRANT_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(GRANT_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REVOKE_PRIVILEGE)]: draft => {\n    draft.ops.privileges = { loading: true };\n  },\n  [types.success(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REVOKE_PRIVILEGE)]: (draft, { payload }) => {\n    draft.ops.privileges = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(REMOVE_USERS_FROM_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_USERS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(REMOVE_GROUPS_FROM_GROUP)]: draft => {\n    draft.ops.group_subgroups = { loading: true };\n  },\n  [types.success(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(REMOVE_GROUPS_FROM_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_subgroups = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n\n  [types.loading(ADD_USERS_TO_GROUP)]: draft => {\n    draft.ops.group_users = { loading: true };\n  },\n  [types.success(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: undefined\n    };\n\n    const [group] = payload.data.groups;\n\n    draft.selected = group;\n  },\n  [types.fail(ADD_USERS_TO_GROUP)]: (draft, { payload }) => {\n    draft.ops.group_users = {\n      loading: false,\n      result: payload.result,\n      errors: payload.messages\n    };\n  },\n  [types.loading(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: true };\n  },\n  [types.success(CREATE_GROUP)]: draft => {\n    draft.ops.create = { loading: false };\n  },\n  [types.fail(CREATE_GROUP)]: (draft, { payload }) => {\n    draft.ops.create = {\n      loading: false,\n      errors: payload\n    };\n  },\n  [types.loading(DELETE_GROUP)]: draft => {\n    draft.ops.remove = { loading: true };\n  },\n  [types.success(DELETE_GROUP)]: draft => {\n    draft.selected = null;\n    draft.ops.remove = { loading: false };\n  },\n  [types.fail(DELETE_GROUP)]: (draft, { payload }) => {\n    draft.ops.remove = { loading: false, errors: payload };\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { createReducer, types } from 'shared/lib/redux-utils';\nimport {\n  CHANGE_STATE,\n  EXECUTE_COLLECTION_PROCESS,\n  LICENSE_FULL_REPORT,\n  LOAD_ALL_ACCOUNTS,\n  LOAD_ALL_LICENSES,\n  LOAD_COLLECTION_PROCESS,\n  LOAD_OBJECT_DETAILS,\n  LOAD_PROTOCOLS,\n  LOAD_SESSIONS,\n  LOAD_STORAGE_DETAILS,\n  LOAD_STORAGE_POINTS,\n  LOAD_TOP_SQL_STATEMENTS,\n  PROVIDE_DB_LAST_BACKUP,\n  PROVIDE_DB_STATUS,\n  PROVIDE_SERVERS_USAGE,\n  SET_SELECTED_OBJECT,\n  SET_STORAGE_NS,\n  UPDATE_DB_STATUS\n} from '../actions';\nimport {\n  mapAccountsNewStructure,\n  mapAccountsTree,\n  mapLicenseReport,\n  mapProtocols,\n  mapUpdateDBStatus\n} from '../mappers';\n\nexport const initialState = {\n  accounts: [],\n  rawAccounts: [],\n  flags: {\n    accounts: { loading: false },\n    protocols: { loading: false },\n    sessions: { loading: false },\n    storage: { loadingPoints: false, loadingDetails: false },\n    objects: { loading: false },\n    license: { loading: false },\n    topSqlStatements: { loading: false },\n    reports: { loading: false },\n    serversUsage: { loading: true },\n    collectionProcesses: {\n      hardware: { loading: false, wasExecuted: false },\n      preSoftware: { loading: false, wasExecuted: false },\n      software: { loading: false, wasExecuted: false },\n      vmware: { loading: false },\n      packaging: { loading: false }\n    }\n  },\n  sessions: [],\n  storage: {\n    storedEntries: {},\n    selected: null\n  },\n  objects: {\n    selectedOwner: null,\n    selectedObject: null,\n    storedEntries: {}\n  },\n  licenses: [],\n  reports: {},\n  protocols: [],\n  state: {\n    path: '',\n    level: 'all-dbms'\n  },\n  serversUsage: {},\n  dbLastBackup: [],\n  dbStatus: [],\n  collectionProcesses: {\n    hardware: null,\n    preSoftware: null,\n    software: null,\n    vmware: null,\n    packaging: null\n  }\n};\n\nexport const producers = {\n  [types.loading(LOAD_ALL_ACCOUNTS)]: draft => {\n    draft.flags.accounts.loading = true;\n  },\n  [types.success(LOAD_ALL_ACCOUNTS)]: (draft, { payload }) => {\n    draft.accounts = mapAccountsTree(payload.data.accounts);\n    draft.structured = mapAccountsNewStructure(payload.data.accounts, payload.protocols);\n    draft.rawAccounts = payload.data.accounts;\n\n    draft.state.path = '';\n    draft.state.level = 'all-dbms';\n\n    draft.flags.accounts.loading = false;\n  },\n  [types.loading(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = true;\n  },\n  [types.success(LOAD_PROTOCOLS)]: (draft, { payload }) => {\n    draft.protocols = mapProtocols(payload.data.protocols);\n    draft.flags.protocols.loading = false;\n  },\n  [types.fail(LOAD_PROTOCOLS)]: draft => {\n    draft.flags.protocols.loading = false;\n  },\n  [CHANGE_STATE]: (draft, { payload }, base) => {\n    draft.state = { ...base.state, ...payload };\n  },\n  [types.loading(LOAD_ALL_LICENSES)]: draft => {\n    draft.flags.license.loading = true;\n  },\n  [types.success(LOAD_ALL_LICENSES)]: (draft, { payload }) => {\n    draft.licenses = payload.data.invocations;\n    draft.flags.license.loading = false;\n  },\n  [types.loading(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = true;\n  },\n  [types.success(LOAD_TOP_SQL_STATEMENTS)]: (draft, { payload }) => {\n    draft.topSqlStatements = payload;\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.fail(LOAD_TOP_SQL_STATEMENTS)]: draft => {\n    draft.flags.topSqlStatements.loading = false;\n  },\n  [types.loading(LICENSE_FULL_REPORT)]: draft => {\n    draft.flags.reports.loading = true;\n  },\n  [types.success(LICENSE_FULL_REPORT)]: (draft, { payload }) => {\n    const { reportData } = payload;\n    draft.reports.data = mapLicenseReport(reportData);\n    draft.flags.reports.loading = false;\n  },\n  [types.loading(PROVIDE_SERVERS_USAGE)]: draft => {\n    draft.flags.serversUsage.loading = true;\n  },\n  [types.success(PROVIDE_SERVERS_USAGE)]: (draft, { payload }) => {\n    draft.flags.serversUsage.loading = false;\n    draft.serversUsage = payload;\n  },\n  [types.loading(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = true;\n  },\n  [types.fail(LOAD_STORAGE_POINTS)]: draft => {\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.success(LOAD_STORAGE_POINTS)]: (draft, { payload }, base) => {\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      points: payload.data\n    };\n    draft.flags.storage.loadingPoints = false;\n  },\n  [types.loading(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = true;\n  },\n  [types.fail(LOAD_STORAGE_DETAILS)]: draft => {\n    draft.flags.storage.loadingDetails = false;\n  },\n  [types.success(LOAD_STORAGE_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.storage.loadingDetails = false;\n    draft.storage.storedEntries[payload.key] = {\n      ...base.storage.storedEntries[payload.key],\n      details: payload.data\n    };\n  },\n  [types.success(SET_STORAGE_NS)]: (draft, { payload }) => {\n    draft.storage.selected = payload;\n  },\n  [types.loading(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = true;\n  },\n  [types.fail(LOAD_OBJECT_DETAILS)]: draft => {\n    draft.flags.objects.loading = false;\n  },\n  [types.success(LOAD_OBJECT_DETAILS)]: (draft, { payload }, base) => {\n    draft.flags.objects.loading = false;\n    draft.objects.storedEntries[payload.key] = { ...base.objects.storedEntries[payload.key] };\n    payload.data.forEach(({ name, res }) => {\n      draft.objects.storedEntries[payload.key][name] = res;\n    });\n  },\n  [types.success(SET_SELECTED_OBJECT)]: (draft, { payload }) => {\n    draft.objects.selectedObject = payload.object;\n    draft.objects.selectedOwner = payload.owner;\n  },\n  [types.loading(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = true;\n  },\n  [types.success(LOAD_SESSIONS)]: (draft, { payload }) => {\n    draft.flags.sessions.loading = false;\n    // sort flags should be sent to backend and not stored on state.\n    draft.flags.sessions.sort = payload.sort;\n    draft.sessions = payload.data;\n  },\n  [types.fail(LOAD_SESSIONS)]: draft => {\n    draft.flags.sessions.loading = false;\n  },\n  [types.success(PROVIDE_DB_LAST_BACKUP)]: (draft, { payload }) => {\n    draft.dbLastBackup = payload;\n  },\n  [types.success(PROVIDE_DB_STATUS)]: (draft, { payload }) => {\n    draft.dbStatus = payload;\n  },\n  [types.success(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, true);\n  },\n  [types.fail(UPDATE_DB_STATUS)]: (draft, { payload }, base) => {\n    draft.dbStatus = mapUpdateDBStatus(base.dbStatus, payload, false);\n  },\n  [types.loading(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = true;\n  },\n  [types.success(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n    draft.collectionProcesses[payload.name] = payload.data;\n  },\n  [types.fail(LOAD_COLLECTION_PROCESS)]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].loading = false;\n  },\n  [EXECUTE_COLLECTION_PROCESS]: (draft, { payload }) => {\n    draft.flags.collectionProcesses[payload.name].wasExecuted = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","import { types, createReducer } from 'shared/lib/redux-utils';\nimport {\n  PROVIDE_EXECUTIVE_DASHBOARD,\n  PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD,\n  SELECT_ALL,\n  DESELECT_ALL,\n  TOGGLE_SERVER\n} from '../actions';\nimport { mapAllServers, mapVirtualServers } from '../mappers';\n\nexport const initialState = {\n  rawEntries: [],\n  allServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  selectedServers: [\n    {\n      name: '',\n      nrCores: 0,\n      collDate: null,\n      totalDBs: 0,\n      eelic_count: 0,\n      selic_count: 0,\n      sids: [],\n      installedOptions: {},\n      totalInstalledOptions: 0\n    }\n  ],\n  rawVirtualServers: [],\n  virtualServers: [],\n  flags: {\n    dashboard: { loading: false, callFailed: false },\n    virtual: { loading: false }\n  }\n};\n\nexport const producers = {\n  [types.loading(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = true;\n  },\n  [types.success(PROVIDE_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawEntries = payload.execdashboard;\n    draft.allServers = mapAllServers(payload.execdashboard);\n    draft.selectedServers = mapAllServers(payload.execdashboard);\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.dashboard.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  },\n  [DESELECT_ALL]: draft => {\n    draft.selectedServers = [];\n  },\n  [SELECT_ALL]: (draft, { payload }) => {\n    draft.selectedServers = mapAllServers(payload);\n  },\n  [TOGGLE_SERVER]: (draft, { payload }) => {\n    draft.selectedServers = payload;\n  },\n  [types.loading(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = true;\n  },\n  [types.success(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: (draft, { payload }) => {\n    draft.rawVirtualServers = payload?.execdashboard_virtual;\n    draft.virtualServers = mapVirtualServers(payload?.execdashboard_virtual);\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = false;\n  },\n  [types.fail(PROVIDE_VIRTUAL_EXECUTIVE_DASHBOARD)]: draft => {\n    draft.flags.virtual.loading = false;\n    draft.flags.dashboard.callFailed = true;\n  }\n};\n\nexport default createReducer(producers, initialState);\n","export const initialState = {\n  data: {},\n  fetch_status: {\n    account: 'not-fetched',\n    constant: 'not-fetched',\n    exception: 'not-fetched',\n    form: 'not-fetched',\n    namespace: 'not-fetched',\n    process: 'not-fetched',\n    prototype: 'not-fetched',\n    schedule: 'not-fetched',\n    type: 'not-fetched',\n    alias: 'not-fetched'\n  },\n  isLoading: true,\n  breadcrumbs: [],\n  filters: {\n    type: 'all',\n    search: ''\n  }\n};\n\nexport function FETCH_ENTITIES_REQUEST(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'fetching';\n}\n\nexport function FETCH_ENTITIES_SUCCESS(nextState, { entityType, result }) {\n  nextState.data[entityType] = result;\n  nextState.fetch_status[entityType] = 'fetched';\n}\n\nexport function FETCH_ENTITIES_FAILURE(nextState, { entityType }) {\n  nextState.fetch_status[entityType] = 'failed';\n}\n\nexport function FETCH_ENTITIES_ALL_REQUEST(nextState) {\n  nextState.isLoading = true;\n}\n\nexport function FETCH_ENTITIES_ALL_SUCCESS(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function FETCH_ENTITIES_ALL_FAILURE(nextState) {\n  nextState.isLoading = false;\n}\n\nexport function SELECT_ENTITY(nextState, { entity, index }, state) {\n  nextState.breadcrumbs.splice(index, state.breadcrumbs.length - 1);\n  nextState.breadcrumbs[index] = entity.name.split('.').pop();\n}\n\nexport function CLEAR_SELECTED_ENTITY(nextState) {\n  nextState.breadcrumbs = [];\n}\n\nexport function UPDATE_FILTERS(nextState, { name, value }) {\n  nextState.filters[name] = value;\n  if (name === 'type' || name === 'search') {\n    nextState.breadcrumbs = [];\n  }\n}\n","export const initialState = {\n  running: true\n};\n\nexport function DAEMON_STATUS_REQUEST() {}\n\nexport function DAEMON_STATUS_SUCCESS(nextState, { result }) {\n  nextState.running = !!result?.data?.data?.running;\n}\n\nexport function DAEMON_STATUS_FAILURE(nextState) {\n  nextState.running = false;\n}\n","import { InvocationStatus } from './constants';\n\nexport const initialState = {\n  loading: true,\n  query: { processed: false },\n  fetchedInvocation: false,\n  invocation: { status: 'NOT_FETCHED' }\n};\n\nexport function PROCESS_QUERY(nextState, { uuid, process }) {\n  nextState.query = { processed: true, uuid, process };\n  if (uuid) {\n    nextState.invocation = { status: 'NOT_FETCHED' };\n  } else {\n    nextState.invocation = { status: '__NEW__', process: process || '' };\n  }\n}\n\nexport function FETCH_INVOCATION_SUCCESS(nextState, { result }) {\n  const [recieved] = result.data.data.invocations;\n  nextState.invocation = recieved;\n}\n\nexport function FETCH_INVOCATION_FAILURE(nextState, { process }) {\n  nextState.invocation = { status: InvocationStatus.NEW, process };\n}\n\nexport function REPLACE_INVOCATION(nextState, { invocation }) {\n  nextState.invocation = invocation;\n}\n","export const api = () => next => async action => {\n  const { type, promise, schema, ...rest } = action;\n  const isPromise = promise instanceof Promise;\n  if (!isPromise || !type) {\n    next(action);\n    return;\n  }\n\n  next({ type: `${type}_REQUEST`, ...rest });\n  try {\n    const result = await promise;\n    if (schema) {\n      next({ type, ...rest, data: result, schema });\n    }\n    next({ type: `${type}_SUCCESS`, ...rest, result });\n  } catch (error) {\n    console.error('[middlewares] error: ', error); // eslint-disable-line\n    next({ type: `${type}_FAILURE`, ...rest, error });\n  }\n};\n","import { bindReducer } from 'shared/lib';\nimport { initialState, reducerActions } from './reducer';\n\nexport const reducer = bindReducer(initialState, reducerActions);\n","import { ActionCreator } from 'shared/lib';\n\nconst actionsTypes = {\n  ADD_NOTIFICATIONS: '[core] ADD_NOTIFICATIONS',\n  REMOVE_NOTIFICATION: '[core] REMOVE_NOTIFICATION',\n};\n\nexport const notificationActions = {\n  addNotifications: new ActionCreator(actionsTypes.ADD_NOTIFICATIONS),\n  removeNotification: new ActionCreator(actionsTypes.REMOVE_NOTIFICATION),\n};\n","import React from 'react';\nimport { any, func } from 'prop-types';\nimport { Center } from 'shared/components/layout';\nimport './job-list.local.scss';\nimport { connect } from 'react-redux';\nimport { currentUserSelector } from 'session/store/state';\n\nconst JobList = ({ items, filters, children, loggedUser }) => {\n  const noneAvailable = items.size === 0;\n\n  if (noneAvailable) {\n    return <NoJobs />;\n  }\n\n  return (\n    <div className=\"list-container\">\n      <ul>\n        {items.map((item, index, list) => (\n          <li key={index} className=\"list-item\">\n            {children(item, index, filters, loggedUser, list)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nJobList.propTypes = {\n  items: any,\n  children: func\n};\n\nJobList.defaultProps = {\n  items: []\n};\n\nfunction NoJobs() {\n  return (\n    <Center>\n      <p>There are no jobs available with the selected filters</p>\n    </Center>\n  );\n}\n\nexport const ConnectedJobList = connect(\n  state => {\n    return {\n      loggedUser: currentUserSelector(state),\n    };\n  }\n)(JobList);\n","import React, { useState, useEffect, useRef } from 'react';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { ViewTabs } from '../ViewTabs/ViewTabs';\nimport { Documentation } from '../Documentation/Documentation';\nimport { ConnectedScheduleForm } from '../../containers/ScheduleForm/ScheduleForm';\nimport { getProcess } from 'shared/api/process';\nimport { getSchedule } from 'shared/api/schedule';\n\nexport const ScheduleModal = ({\n  open,\n  actions,\n  invocation,\n  isScheduled,\n  result,\n  setResult,\n  selectedOption,\n  canSelectProcess,\n  filledValues,\n  setFilledValues\n}) => {\n  const [tab, setTab] = useState('schedule');\n  const [processDetails, setProcessDetails] = useState({});\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const newSchedule = selectedOption === 'edit-schedule';\n  const formRef = useRef();\n  useEffect(() => {\n    if (isScheduled && invocation?.schedule) {\n      getSchedule(invocation.schedule)\n        .then(data => {\n          if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n            setScheduleDetails(data.data.data.schedules[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n    if (invocation && invocation.process) {\n      getProcess(invocation.process)\n        .then(data => {\n          if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n            setProcessDetails(data.data.data.processes[0]);\n          }\n        })\n        .catch(error => {\n          console.log('[get process] error getting process details: ', error); // eslint-disable-line\n        });\n    }\n  }, []);\n\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          minWidth: '85vw',\n          minHeight: '85vh',\n          maxWidth: '85vw',\n          maxHeight: '85vh'\n        }}\n      >\n        <ModalHeader\n          title=\"New Schedule\"\n          icon={\n            <SvgIcon>\n              <SlowMotionVideoIcon />\n            </SvgIcon>\n          }\n          formikRef={formRef}\n        />\n        <Switch value={result}>\n          <Switch.Case value=\"success\">\n            <Result type=\"success\">\n              <Result.Text>Schedule was added successfully!</Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Done\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"fail\">\n            <Result type=\"fail\">\n              <Result.Text>\n                <p>An error occurred and the new schedule could not be added.</p>{' '}\n                <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                  <a\n                    role=\"presentation\"\n                    onClick={() => {\n                      setResult('');\n                    }}\n                  >\n                    Go back to form\n                  </a>\n                </p>\n              </Result.Text>\n            </Result>\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <Button\n                  onClick={() => {\n                    actions.close();\n                    setResult('');\n                  }}\n                >\n                  Close\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </Switch.Case>\n          <Switch.Case value=\"\">\n            <Paper.Header>\n              <ViewTabs active={tab} changeTab={setTab} invocation={invocation} />\n            </Paper.Header>\n            <Switch value={tab}>\n              <Switch.Case value=\"schedule\">\n                <ConnectedScheduleForm\n                  setResult={setResult}\n                  invocation={newSchedule ? scheduleDetails : invocation}\n                  filledValues={filledValues}\n                  setFilledValues={setFilledValues}\n                  formRef={formRef}\n                  selectedOption={selectedOption}\n                  canSelectProcess={canSelectProcess}\n                  isScheduled={isScheduled}\n                />\n              </Switch.Case>\n              <Switch.Case value=\"documentation\">\n                <Paper.Content>\n                  <Documentation process={processDetails} />\n                </Paper.Content>\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Paper>\n    </Modal>\n  );\n};\n","import React from 'react';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nexport function ViewTabs({ active, changeTab, invocation }) {\n  const tabs = [{ label: 'Schedule', value: 'schedule', active: true }];\n\n  if (invocation) {\n    tabs.push({ label: 'Documentation', value: 'documentation' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React from 'react';\n\nimport { Section } from 'shared/components/layout';\n\nexport const Documentation = ({ process }) => {\n  if (!process) {\n    return <Section>Select a process in order to see its documentation</Section>;\n  }\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { fetchEntity } from 'entities/actions';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport {\n  PLATFORMS,\n  PlatformSelect,\n  PROCESS_TYPES,\n  ProcessSelect,\n  ProcessTypeSelect\n} from 'shared/components/form/editors/Custom';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { patchSchedule, postSchedule } from 'shared/api/schedule';\nimport { mapScheduledNames } from 'entities/mappers';\nimport { isEmpty, pickBy } from 'lodash';\nimport { CronValidator } from '../../../../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../../../../shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport moment from 'moment';\n\nimport './ScheduleForm.scss';\n\nclass ScheduleFormComp extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { invocation } = this.props;\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    this.state = {\n      monitor: derivedMonitor,\n      serverTime: null,\n      everyHourWarningShown: false\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n\n    const { wasSCheduleCallDone, request } = this.props;\n    if (!wasSCheduleCallDone) {\n      request('schedule');\n    }\n  }\n\n  render() {\n    const {\n      setResult,\n      request,\n      allScheduledNames,\n      invocation,\n      isScheduled,\n      filledValues,\n      setFilledValues,\n      selectedOption,\n      canSelectProcess,\n      formRef\n    } = this.props;\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const derivedMonitor = {\n      enabled: !!invocation?.parameters?.events,\n      events: invocation?.parameters?.events || 0,\n      users: invocation?.parameters?.users || []\n    };\n\n    const isEditing = selectedOption === 'edit-schedule';\n\n    const availableProcess = (platformVal, typeVal, processVal) => {\n      const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n      const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n      const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n      const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n      return (platformMatches && typeMatches) ? processVal : '';\n    };\n\n    const nameValue = () => {\n      if (isScheduled && invocation?.name) {\n        const splittedName = invocation.name.split('.');\n        const name = splittedName[splittedName.length - 1];\n\n        return name;\n      }\n\n      return invocation?.name || undefined;\n    };\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          if (isScheduled && invocation?.name) {\n            const splittedName = invocation.name.split('.');\n            const name = splittedName[splittedName.length - 1];\n\n            if (name !== sch_name) {\n              errors.sch_name = 'A schedule with this name already exists';\n            }\n          } else {\n            errors.sch_name = 'A schedule with this name already exists';\n          }\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{}}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, invocation, isEditing, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <PlatformSelect\n                                name=\"platform\"\n                                label=\"Platform\"\n                                description=\"Select a platform to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(value, formik.values.type, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          {canSelectProcess && (\n                            <Column xs={4}>\n                              <ProcessTypeSelect\n                                name=\"type\"\n                                label=\"Type\"\n                                description=\"Select a type to filter out the processes\"\n                                reactToChange={(value, formik) => {\n                                  formik.setFieldValue(\n                                    'process',\n                                    availableProcess(formik.values.platform, value, formik.values.process)\n                                  );\n                                }}\n                              />\n                            </Column>\n                          )}\n                          <Column xs={4}>\n                            <ProcessSelect\n                              name=\"process\"\n                              label=\"Process\"\n                              value={filledValues?.process || invocation?.process}\n                              disabled={invocation !== undefined}\n                              required\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || nameValue()}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || invocation?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || invocation?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_hr\"\n                              label=\"T_hr\"\n                              value={filledValues?.t_hr || invocation?.t_hr || '*'}\n                              description={CronValidator.FORMAT_MSG.HOURS}\n                            />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_day\"\n                              label=\"T_Day\"\n                              value={filledValues?.t_day || invocation?.t_day || '*'}\n                              description={CronValidator.FORMAT_MSG.DAYS}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_mon\"\n                              label=\"T_mon\"\n                              value={filledValues?.t_mon || invocation?.t_mon || '*'}\n                              description={CronValidator.FORMAT_MSG.MONTH}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_wkd\"\n                              label=\"T_wkd\"\n                              value={filledValues?.t_wkd || invocation?.t_wkd || '*'}\n                              description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                            />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || invocation?.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nexport const ConnectedScheduleForm = connect(\n  state => {\n    return {\n      wasSCheduleCallDone: state.entities?.data?.schedule,\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(ScheduleFormComp);\n\nasync function handleSubmit(\n  monitor,\n  setResult,\n  request,\n  setFilledValues,\n  invocation,\n  isEditing,\n  values\n) {\n  const {\n    platform,\n    type,\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  if (isEditing) {\n    body.rename = sch_name;\n  } else {\n    body.name = sch_name;\n  }\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  if (isEditing) {\n    patchSchedule(invocation.name, body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  } else {\n    postSchedule(body)\n      .then(() => {\n        setResult('success');\n        setFilledValues({});\n        request('schedule');\n      })\n      .catch(error => {\n        console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n        setFilledValues(body);\n        setResult('fail');\n      });\n  }\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n","export const formatAccount = account => {\n  const prefix = `${account.protocol.toLowerCase()}://${account.user}:******@${account.address}:${\n    account.port\n  }`;\n  const { special } = account;\n\n  if (special?.database) {\n    return `${prefix}/${special.database}`;\n  }\n\n  return prefix;\n};\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default: {\n      const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n      const matches = regex.exec(deflt);\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return Number.parseInt(matches[2]); // eslint-disable-line\n          case 'str': {\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            // const json = `[${matches[2]}]`;\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          }\n\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n    }\n  }\n  return null;\n};\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GroupIcon from '@material-ui/icons/Group';\n\nimport { mdiChevronLeft, mdiChevronRight } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n\nconst Groups = ({ groups, onSelect, eventTypeIcons = [] }) => {\n  const renderGroupsList = () => {\n    if (Array.isArray(groups) && groups.length) {\n      return groups.map(item => {\n        return (\n          <ListItem\n            onClick={() => onSelect(item)}\n            selected={item.selected}\n            key={item.data.name}\n            button\n          >\n            <ListItemIcon>\n              <GroupIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n            </ListItemIcon>\n            <ListItemText primary={item.data.name} />\n            <ListItemSecondaryAction>\n              {item.displayIcons && eventTypeIcons.map(icon => icon)}\n              <SvgIcon size=\"small\" edge=\"end\" color=\"primary\">\n                <path d={item.selected ? mdiChevronLeft : mdiChevronRight} />\n              </SvgIcon>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      });\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Groups:</div>\n      </div>\n      <List dense disablePadding>\n        {renderGroupsList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { Button } from 'shared/components/controls';\n\nimport './users.scss';\n\nconst Users = ({\n  users,\n  onSelect,\n  onSelectUserAction,\n  isClearActionAvailable,\n  isGroupSelected,\n  eventTypeIcons\n}) => {\n  const renderUsersList = () => {\n    if (Array.isArray(users) && users.length) {\n      let emptyListMessage = '';\n      if (!isGroupSelected) {\n        emptyListMessage = 'Please select a group to view its users.';\n      } else if (!users.find(item => item.display)) {\n        emptyListMessage = 'No users available in the group.';\n      }\n      if (emptyListMessage) {\n        return (\n          <div className=\"notifications-users-empty-list\">\n            <PermIdentityIcon size=\"small\" />\n            <span>{emptyListMessage}</span>\n          </div>\n        );\n      }\n      return users\n        .filter(user => user.display)\n        .map(user => {\n          return (\n            <ListItem\n              onClick={() => onSelect(user)}\n              selected={user.selected}\n              key={user.data.name}\n              button\n            >\n              <ListItemIcon>\n                <PersonIcon size=\"small\" style={{ color: 'var(--primary-800)' }} />\n              </ListItemIcon>\n              <ListItemText primary={user.data.name} />\n              <ListItemSecondaryAction classes={{ root: 'notifications-users-check-wrap' }}>\n                {user.selected && eventTypeIcons.map(icon => icon)}\n                <Checkbox\n                  onChange={() => onSelect(user)}\n                  edge=\"end\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  checked={user.selected}\n                  classes={{ root: 'checkbox-custom' }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        });\n    }\n    return null;\n  };\n\n  const currentActionLabel = isClearActionAvailable ? 'Clear' : 'Select all';\n  const shouldDisplayAction = isGroupSelected && users.find(item => item.display);\n\n  return (\n    <div className=\"selector\">\n      <div className=\"notifications-title\">\n        <div className=\"heading\">Users:</div>\n        {shouldDisplayAction && (\n          <Button role=\"presentation\" onClick={() => onSelectUserAction(isClearActionAvailable)}>\n            {currentActionLabel}\n          </Button>\n        )}\n      </div>\n      <List dense disablePadding>\n        {renderUsersList()}\n      </List>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport classnames from 'classnames';\nimport './events.scss';\n\nconst Events = ({ jobStart, jobCompletion, abnormalEvent, onSelect, areUsersSelected }) => {\n  const classes = classnames('notification-events', { 'events-wrap-disabled': !areUsersSelected });\n  return (\n    <div className={classes}>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-title\">Event type:</div>\n        </div>\n        <span>\n          <PlayCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job start</span>\n        </span>\n        <span>\n          <CheckCircleOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">job completion</span>\n        </span>\n        <span>\n          <ErrorOutlineIcon style={{ color: 'var(--primary-800)' }} />\n          <span className=\"notification-events-col-label\">abnormal event</span>\n        </span>\n      </div>\n      <div className=\"notification-events-col old-notice\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'notice')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.notice}\n          classes={{ root: 'checkbox-custom' }}\n          disabled\n        />\n      </div>\n      <div className=\"notification-events-col\">\n        <div className=\"notification-events-col-header\">\n          <div className=\"notification-events-col-subtitle\">Notice</div>\n        </div>\n        <Checkbox\n          onChange={() => onSelect('jobStart', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobStart.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('jobCompletion', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={jobCompletion.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n        <Checkbox\n          onChange={() => onSelect('abnormalEvent', 'fullLog')}\n          edge=\"end\"\n          color=\"inherit\"\n          size=\"small\"\n          checked={abnormalEvent.fullLog}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Events;\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\nimport PersonIcon from '@material-ui/icons/Person';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { Center } from 'shared/components/layout';\n\nimport { Button } from 'shared/components/controls';\n\nimport './notification-list.scss';\nimport { withStyles } from '@material-ui/core';\n\nconst UserChip = withStyles({\n  root: {\n    background: 'rgba(55, 101, 175, 0.08)',\n    borderRadius: '4px'\n  },\n  label: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    '& > svg': {\n      marginLeft: '8px'\n    }\n  }\n})(Chip);\n\nconst NotificationList = ({ users, eventTypeIcons, toggleApplyButton, disabled }) => {\n  const filteredUsers = users.filter(user => user.selected);\n  const renderUserList = () => {\n    if (!filteredUsers.length) {\n      return <Center>No notifications applied</Center>;\n    }\n    return filteredUsers.map(user => {\n      return (\n        <UserChip\n          classes={{ root: 'notification-list-item' }}\n          label={\n            <>\n              <span>{user.data.name}</span>\n              {eventTypeIcons}\n            </>\n          }\n          color=\"default\"\n          icon={<PersonIcon size=\"small\" />}\n        />\n      );\n    });\n  };\n\n  let buttonLabel = 'Add';\n  let buttonIcon = <NotificationsNoneIcon />;\n  if (filteredUsers.length) {\n    buttonLabel = 'Edit';\n    buttonIcon = <EditIcon />;\n  }\n\n  return (\n    <div className=\"notification-list-wrapper\">\n      <div>{renderUserList()}</div>\n      <div className=\"notification-list-edit-section\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={toggleApplyButton}\n          startIcon={buttonIcon}\n          endIcon={<ArrowDropDownIcon />}\n          classes={{ root: 'notifications-add-edit' }}\n          disabled={disabled}\n        >\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport GroupIcon from '@material-ui/icons/Group';\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport './Entity.scss';\n\n/* eslint-disable */\nconst Entity = ({ entity, selectEntity, columns, entityIcons }) => {\n  const cls = classnames('entity', {\n    '--isSelected': entity.isSelected,\n    'account-entity': entity.entity === 'account'\n  });\n  const user = entity.user_owner;\n  const aliasStr = entity.alias;\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex=\"0\"\n      className={cls}\n      onClick={event => {\n        selectEntity(entity, columns.level);\n\n        const target = event.currentTarget;\n        const box = target.getBoundingClientRect();\n        const parent = target.parentNode.parentNode;\n\n        setTimeout(function() {\n          parent.scrollTo({ left: box.right, behavior: 'smooth' });\n        }, 200);\n      }}\n    >\n      <LightTooltip placement=\"bottom\" title={entity.entity || ''}>\n        <div className=\"entity-icon-wrap\">{entityIcons[entity.entity]}</div>\n      </LightTooltip>\n      <div className=\"entity-details\">\n        <div className=\"entity-name\">\n          {!!aliasStr && (\n            <div title={`Alias of ${aliasStr}`}>\n              <FilterNoneIcon />\n            </div>\n          )}\n          <LightTooltip placement=\"bottom\" title={entity.name}>\n            <span>{entity.name}</span>\n          </LightTooltip>\n        </div>\n        <div className=\"entity-user\">\n          <GroupIcon />\n          <span>{user}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/* eslint-enable */\n\nexport default Entity;\n","import React from 'react';\nimport Switch from '../components/Switch';\nimport ActionsNamespace from '../components/ActionsNamespace';\nimport ActionsConstant from '../components/ActionsConstant';\nimport ActionsProcess from '../components/ActionsProcess';\nimport ActionsForm from '../components/ActionsForm';\nimport ActionsRoot from '../components/ActionsRoot';\nimport ActionsPrototype from '../components/ActionsPrototype';\nimport ActionsSchedule from '../components/ActionsSchedule';\nimport ActionsCommon from '../components/ActionsCommon';\nimport GroupIcon from '@material-ui/icons/Group';\nimport './SelectedEntity.scss';\n\nconst SelectedEntity = ({ selectedEntity, entityIcons }) => {\n  if (!selectedEntity) {\n    return null;\n  }\n\n  return (\n    <div className=\"selected-entity\">\n      <div className=\"selected-entity-title\">\n        <div className=\"selected-entity-title-icon\">{entityIcons[selectedEntity.entity]}</div>\n        <div className=\"selected-entity-title-details\">\n          {selectedEntity.name}\n          <div className=\"selected-entity-title-user\">\n            <GroupIcon />\n            <span>{selectedEntity.user_owner}</span>\n          </div>\n        </div>\n      </div>\n      <div className=\"entity-detail-wrap\">\n        <div className=\"entity-description-wrap\">{selectedEntity.description}</div>\n\n        <Switch value={selectedEntity.entity}>\n          <Switch.Case value=\"root\">\n            <ActionsRoot />\n          </Switch.Case>\n\n          <Switch.Case value=\"namespace\">\n            <ActionsNamespace entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"constant\">\n            <ActionsConstant entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"form\">\n            <ActionsForm entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"process\">\n            <ActionsProcess entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"prototype\">\n            <ActionsPrototype entity={selectedEntity} />\n          </Switch.Case>\n\n          <Switch.Case value=\"schedule\">\n            <ActionsSchedule entity={selectedEntity} />\n          </Switch.Case>\n        </Switch>\n        <ActionsCommon entity={selectedEntity} />\n      </div>\n    </div>\n  );\n};\n\nexport default SelectedEntity;\n","import React from 'react';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nimport { ConnectedEditNamespace } from './namespace-actions/EditNamespace';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\nimport { ConnectedDeleteNamespace } from './namespace-actions/DeleteNamespace';\n\nconst ActionsNamespace = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const hasWrite = hasWritePrivileges(entity);\n\n  return (\n    <>\n      <ConnectedNewNamespace namespace={entity} />\n      {hasWrite && <ConnectedEditNamespace namespace={entity} />}\n      {deleteRights(entity, hasWrite) && (\n        <ConnectedDeleteNamespace entity={entity} disabled={disableActions} />\n      )}\n    </>\n  );\n};\n\nfunction deleteRights(entity, hasWrite) {\n  return hasWrite && entity.owner !== 'postgres';\n}\n\nexport default ActionsNamespace;\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { getNamespace, patchNamespace } from 'shared/api/namespace';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\n\nimport { fetchEntity } from '../../actions';\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nfunction parseName(namespace) {\n  const split = namespace.name.split('.');\n  const tail = split.length - 1;\n  const parsed = {\n    name: split[tail],\n    fq: namespace.name\n  };\n\n  if (split.length > 1) {\n    parsed.parent = split.slice(0, tail).join('.');\n  } else {\n    parsed.parent = '';\n  }\n\n  return parsed;\n}\n\nexport const ConnectedEditNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    request: fetchEntity\n  }\n)(EditNamespace);\n\nfunction EditNamespace({ namespace, request, nestedNames }) {\n  const canUpdateName = nestedNames.length === 0;\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const split_name = parseName(namespace);\n\n  const getInitialValues = () => {\n    const values = {};\n\n    values.name = split_name.name || '';\n    values.namespace = split_name.parent;\n    values.description = description;\n\n    return values;\n  };\n\n  const getNamespaceDetails = name => {\n    getNamespace(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.namespaces &&\n          data.data.data.namespaces[0] &&\n          data.data.data.namespaces[0].description\n        ) {\n          setDescription(data.data.data.namespaces[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get namespace] error getting namespace details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = namespace?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getNamespaceDetails(namespace.name);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Namespace\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Namespace was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the namespace could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values, split_name);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              {canUpdateName && (\n                                <Text name=\"name\" label=\"Name\" value={values.name} required />\n                              )}\n                              {!canUpdateName && (\n                                <Text\n                                  name=\"name\"\n                                  label=\"Name\"\n                                  value={values.name}\n                                  required\n                                  disabled\n                                  description=\"To update a namespace name, namespace must be empty!\"\n                                />\n                              )}\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                {canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                  />\n                                )}\n                                {!canUpdateName && (\n                                  <NamespaceSelect\n                                    name=\"namespace\"\n                                    label=\"Parent namespace\"\n                                    value={values.namespace}\n                                    disabled\n                                    description=\"To update a namespace parent name, namespace must be empty!\"\n                                  />\n                                )}\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values, split_name) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    description: values.description\n  };\n\n  /*\n    If the old entity fully-qualified name does not match with the form value,\n    then we need to add a rename key with the new name.\n   */\n  if (name !== split_name.fq) {\n    body.rename = name;\n  }\n\n  patchNamespace(split_name.fq, body)\n    .then(() => {\n      setResult('success');\n      request('namespace');\n    })\n    .catch(error => {\n      console.log('[edit namespace] patch namespace error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport { namespaceChildrenListSelector } from '../../selectors';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteNamespace = connect(\n  state => ({\n    nestedNames: namespaceChildrenListSelector(state)\n  }),\n  {\n    refresh: fetchEntity\n  }\n)(DeleteNamespace);\n\nfunction DeleteNamespace({ disabled, entity, refresh, nestedNames }) {\n  const canDelete = nestedNames.length === 0;\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={canDelete}>\n            <Switch.Case value>\n              <Switch value={result}>\n                <Switch.Case value=\"attempt\">\n                  <Paper.Content scrollable={false}>\n                    <Result type=\"fail\">\n                      <BodyText>\n                        Are you sure you want to remove this {type} ? This could affect the way the\n                        user will be able to interact with the app.\n                      </BodyText>\n                    </Result>\n                  </Paper.Content>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => {\n                          terminator();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"success\">\n                  <Result type=\"success\">\n                    <BodyText>{name} successfully deleted!</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                          refresh(type);\n                        }}\n                      >\n                        Done\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n                <Switch.Case value=\"fail\">\n                  <Result type=\"fail\">\n                    <BodyText>You do not have permissions to delete this entity.</BodyText>\n                  </Result>\n                  <Paper.Footer>\n                    <Paper.Footer.Right>\n                      <Button\n                        onClick={() => {\n                          modalActions.close();\n                        }}\n                      >\n                        Close\n                      </Button>\n                    </Paper.Footer.Right>\n                  </Paper.Footer>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n            <Switch.Case value={false}>\n              <Result type=\"fail\">\n                <BodyText>To delete a namespace it must be empty!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { patchConstant } from 'shared/api/constant';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\nimport { hasWritePrivileges } from '../utils/privileges';\n\nconst ActionsConstant = ({ entity }) => {\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return <ConnectedEditConstant constant={entity} />;\n};\n\nexport default ActionsConstant;\n\nexport const ConnectedEditConstant = connect(null, {\n  request: fetchEntity\n})(EditConstant);\n\nfunction EditConstant({ constant, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = constant?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '368px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Constant\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Constant was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the constant could not be saved.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: constant.name, value: constant.value }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" disabled value={constant.name} />\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"value\"\n                                label=\"Value\"\n                                value={constant.value}\n                                description={constant.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, values) {\n  const body = {\n    value: values.value\n  };\n\n  patchConstant(values.name, body)\n    .then(() => {\n      setResult('success');\n      request('constant');\n    })\n    .catch(error => {\n      console.log('[edit constant] patch constant error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import { RestClient } from 'shared/lib/rest';\n\nexport function patchConstant(name, body) {\n  return RestClient.patch(`/constant/${name}`, body, {\n    page_size: 2147483645\n  });\n}\n","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { ErrorModal, Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\nimport { postSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\nimport { isEmpty, pickBy } from 'lodash';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport { EditProcessModal } from './process-actions/EditProcessModal';\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\nimport { RestClient } from '../../shared/lib/rest';\nimport moment from 'moment';\nimport { CONSTANTS } from 'config';\n\nimport './ActionsSchedule.scss';\n\nconst LinkBehavior = React.forwardRef((props, ref) => <Link ref={ref} {...props} />);\n\nconst ActionsProcess = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new job.';\n\n  return (\n    <>\n      {entity?.is_executable === false && (\n        <Button\n          classes={{ root: 'entity-button' }}\n          onClick={() => setOpen(true)}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      {entity?.is_executable && (\n        <Button\n          component={LinkBehavior}\n          classes={{ root: 'entity-button' }}\n          to={`/jobs/job?process=${entity.name}&redirected=true`}\n          disabled={isDisabled}\n        >\n          New job\n        </Button>\n      )}\n      <ConnectedNewSchedule process={entity} isDisabled={isDisabled} />\n      {hasWritePrivileges(entity) && <EditProcessModal process={entity} />}\n      <ErrorModal open={open} actions={modalActions} message={message} />\n    </>\n  );\n};\n\nexport default ActionsProcess;\n\nexport const ConnectedNewSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(NewSchedule);\n\nfunction NewSchedule({ process, isDisabled, request, allScheduledNames }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const [openErrorModal, setOpenErrorModal] = useState(false);\n  const errorModalActions = {\n    open: () => {\n      setOpenErrorModal(true);\n    },\n    close: () => {\n      setOpenErrorModal(false);\n    }\n  };\n  const message = 'You need to compile this process in order to create a new schedule.';\n\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  // processDetails might be used at a later date\n  const [processDetails, setProcessDetails] = useState({}); // eslint-disable-line\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n\n  const onClickHandler = () => {\n    if (process.is_executable) {\n      setOpen(true);\n    } else {\n      setOpenErrorModal(true);\n    }\n\n    getProcess(process.name)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        New Schedule\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"New Schedule\"\n            icon={\n              <SvgIcon>\n                <SlowMotionVideoIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={process}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={process} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n      <ErrorModal open={openErrorModal} actions={errorModalActions} message={message} />\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nclass ScheduleForm extends React.PureComponent {\n  derivedMonitor = {\n    enabled: false,\n    events: 0,\n    users: []\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monitor: this.derivedMonitor,\n      serverTime: null\n    };\n  }\n\n  componentDidMount() {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.CURRENT_TIME).then((response) => {\n      this.setState({ serverTime: response.data.data });\n    });\n  }\n\n  render() {\n    const {\n      process,\n      setResult,\n      allScheduledNames,\n      request,\n      filledValues,\n      setFilledValues,\n      formRef\n    } = this.props;\n\n    const { monitor, serverTime, everyHourWarningShown } = this.state;\n    const masTimeFormatted = serverTime ? moment(serverTime.currentTime).format('HH:mm MMM DD YYYY') : null;\n\n    const extraValidations = values => {\n      const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n      const errors = {};\n\n      if (sch_name) {\n        if (sch_name.includes('.')) {\n          errors.sch_name = 'Name cannot include \".\"';\n        } else if (sch_name.includes(' ')) {\n          errors.sch_name = 'Name cannot include spaces';\n        } else if (allScheduledNames.includes(sch_name)) {\n          errors.sch_name = 'A schedule with this name already exists';\n        }\n      }\n\n      if (\n        values['fqname--name'] &&\n        (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n          values['fqname--name'].substr(-1) === '.')\n      ) {\n        errors['fqname--name'] = 'A valid MAS relative name is required.';\n      }\n\n      this.setState({ everyHourWarningShown: t_hr === '*' });\n\n      if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n        errors.t_hr = 'At least one value should be populated';\n        errors.t_day = 'At least one value should be populated';\n        errors.t_mon = 'At least one value should be populated';\n        errors.t_wkd = 'At least one value should be populated';\n        return errors;\n      }\n\n      if (!CronValidator.isValidMinutes(t_min)) {\n        errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n      }\n\n      if (!CronValidator.isValidHours(t_hr)) {\n        errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n      }\n\n      if (!CronValidator.isValidDays(t_day)) {\n        errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n      }\n\n      if (!CronValidator.isValidMonth(t_mon)) {\n        errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n      }\n\n      if (!CronValidator.isValidWeekDay(t_wkd)) {\n        errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n      }\n\n      return errors;\n    };\n\n    return (\n      <>\n        <Formik\n          initialValues={{ process: process.name }}\n          validate={extraValidations}\n          onSubmit={values => {\n            handleSubmit(monitor, setResult, request, setFilledValues, values);\n          }}\n          innerRef={formRef}\n        >\n          {() => {\n            return (\n              <>\n                <Paper.Content>\n                  <Form>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Process</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"process\"\n                            label=\"Process\"\n                            description={process.description}\n                            value={process.name}\n                            disabled\n                          />\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Schedule</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Row>\n                          <Text\n                            name=\"sch_name\"\n                            label=\"Name\"\n                            value={filledValues?.name || undefined}\n                            required\n                          />\n                        </Row>\n                        <Row>\n                          <Text\n                            name=\"sch_description\"\n                            label=\"Description\"\n                            value={filledValues?.description || undefined}\n                            multiline\n                            required\n                          />\n                        </Row>\n\n                        <Section.Title>Server time: {masTimeFormatted}</Section.Title>\n\n                        <Row>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text\n                              name=\"t_min\"\n                              label=\"T_min\"\n                              value={filledValues?.t_min || CronValidator.ALLOWED_MINUTES_OPTIONS[0]}\n                              description={CronValidator.FORMAT_MSG.MINUTES}\n                              options={CronValidator.ALLOWED_MINUTES_OPTIONS.map(option => ({\n                                value: option,\n                                label: option\n                              }))}\n                            />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_hr\" label=\"T_hr\" value={filledValues?.t_hr || '*'} description={CronValidator.FORMAT_MSG.HOURS} />\n                            {everyHourWarningShown && (\n                              <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                            )}\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_day\" label=\"T_Day\" value={filledValues?.t_day || '*'} description={CronValidator.FORMAT_MSG.DAYS} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_mon\" label=\"T_mon\" value={filledValues?.t_mon || '*'} description={CronValidator.FORMAT_MSG.MONTH} />\n                          </Column>\n                          <Column style={{ maxWidth: '20%', width: '20%' }}>\n                            <Text name=\"t_wkd\" label=\"T_wkd\" value={filledValues?.t_wkd || '*'} description={CronValidator.FORMAT_MSG.DAY_OF_WEEK} />\n                          </Column>\n                        </Row>\n                      </Section.Content>\n                    </Section>\n                    <ProcessParameters\n                      recieved={filledValues?.parameters || process.parameters}\n                      editable\n                    />\n                    <Section>\n                      <Section.Header>\n                        <Section.Title>Notifications</Section.Title>\n                      </Section.Header>\n                      <Section.Content>\n                        <Notifications\n                          name=\"notifications\"\n                          recievedData={this.derivedMonitor}\n                          onApply={n_state => {\n                            if (n_state.events === 0 || isEmpty(n_state.users)) {\n                              this.setState({ monitor: { enabled: false } });\n                            }\n                            this.setState({ monitor: { enabled: true, ...n_state } });\n                          }}\n                        />\n                      </Section.Content>\n                    </Section>\n                  </Form>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Paper.Footer.Right>\n                    <SubmitButton variant=\"contained\">Save</SubmitButton>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nasync function handleSubmit(monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    name: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  postSchedule(body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[new schedule] new schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { ProcessEditor } from './ProcessEditor';\n\nimport { fetchEntity } from '../../actions';\n\nexport const EditProcessModal = ({ process }) => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const [result, setResult] = useState('editing');\n  const formRef = useRef();\n  const modalActions = {\n    open: useCallback(() => {\n      setResult('editing');\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n\n      if (result === 'success') {\n        dispatch(fetchEntity('process'));\n      }\n    }, [result])\n  };\n\n  return (\n    <>\n      <Button classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Edit Process\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Process\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n            desc={process.name}\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"editing\">\n              <ProcessEditor process={process} setResult={setResult} formRef={formRef} />\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Process was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Done</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the process could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button onClick={modalActions.close}>Close</Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React from 'react';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { QualifiedName } from 'shared/components/form/editors/Custom';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { patchProcess } from 'shared/api/process';\n\nimport './ProcessEditor.local.scss';\n\nexport function ProcessEditor({ process, setResult, formRef }) {\n  return (\n    <Formik\n      initialValues={{}}\n      onSubmit={values => {\n        saveProcessEdits(values, process, setResult);\n      }}\n      innerRef={formRef}\n    >\n      {() => {\n        return (\n          <>\n            <Paper.Content>\n              <Form>\n                <Section>\n                  <Section.Header>\n                    <Section.Title>Details</Section.Title>\n                  </Section.Header>\n                  <Section.Content>\n                    <Row>\n                      <Column>\n                        <QualifiedName\n                          name=\"process_name\"\n                          label=\"Name\"\n                          value={process.name}\n                          required\n                        />\n                      </Column>\n                    </Row>\n                  </Section.Content>\n                </Section>\n                <Section>\n                  <Section.Content>\n                    {process.steps.map((step, index) => {\n                      return <Step step={step} step_index={index} />;\n                    })}\n                  </Section.Content>\n                </Section>\n              </Form>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <Paper.Footer.Right>\n                <SubmitButton variant=\"contained\">Save</SubmitButton>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        );\n      }}\n    </Formik>\n  );\n}\n\nfunction Step({ step, step_index }) {\n  const expressions = parseEvaluatableExpressions(step, step_index);\n  const noEvaluatableExpressions = !expressions.length;\n\n  if (noEvaluatableExpressions) {\n    return null;\n  }\n\n  return (\n    <div className=\"step\">\n      <div className=\"title\">Step: {step.label}</div>\n      <div className=\"description\">{step.description}</div>\n      <div className=\"expressions\">\n        <div className=\"list\">\n          {expressions.map((exp, index) => (\n            <StepExpression key={index} {...exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction StepExpression({ expression, exp_index, step, step_index }) {\n  const name = `step-${step_index}-expression-${exp_index}`;\n  return (\n    <Row>\n      <Text\n        multiline\n        value={expression.evaluate}\n        label={`Expression ${expression.assign || exp_index} of ${step.label}`}\n        name={name}\n        required\n      />\n    </Row>\n  );\n}\n\nfunction parseEvaluatableExpressions(step, step_index) {\n  const { expressions } = step;\n\n  if (!Array.isArray(expressions) || expressions.length === 0) {\n    return [];\n  }\n\n  return expressions.reduce((acc, exp, index) => {\n    if (exp.evaluate) {\n      acc.push({\n        expression: exp,\n        exp_index: index,\n        step,\n        step_index\n      });\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction saveProcessEdits(values, process, setResult) {\n  const { process_name, ...evaluations } = values;\n  const toSend = {};\n\n  const steps = _.cloneDeep(process.steps);\n\n  /**\n   * extract and remap field values.\n   */\n  const extracted = extractFieldInfo(evaluations);\n\n  extracted.forEach(({ step, expression, value }) => {\n    const path = `[${step}].expressions[${expression}].evaluate`;\n\n    _.set(steps, path, value);\n  });\n\n  /** Prepare patch request body */\n  toSend.steps = steps;\n\n  if (process.name !== process_name) {\n    toSend.rename = values.process_name;\n  }\n\n  patchProcess(process.name, toSend)\n    .then(() => {\n      setResult('success');\n    })\n    .catch(() => {\n      setResult('fail');\n    });\n}\n\nfunction extractFieldInfo(all) {\n  const key_struct = /^step-(\\d+)-expression-(\\d+)$/;\n\n  return Object.entries(all).map(([key, value]) => {\n    const matched = key_struct.exec(key);\n\n    return {\n      step: matched[1],\n      expression: matched[2],\n      value\n    };\n  });\n}\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\nimport { postForm } from 'shared/api/form';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButtonNoDirty } from 'shared/components/form/SubmitButtonNoDirty';\nimport { Paper, Section, Row } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { Ensure } from 'core/components/Ensure';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiClipboardCheck } from '@mdi/js';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction findFormPrototype(form, prototypes) {\n  const name = form.prototype;\n  const found = prototypes.find(item => item.name === name);\n\n  return found;\n}\n\nfunction findFormEntry(entity, forms) {\n  if (entity.alias) {\n    return forms.find(entry => entry.name === entity.alias);\n  }\n\n  return entity;\n}\n\nconst ActionsForm = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n  return (\n    <>\n      {canWrite && (\n        <Ensure type=\"prototype\" inlineLoader>\n          {({ data: prototypes }) => (\n            <Ensure type=\"form\" inlineLoader>\n              {({ data: forms }) => (\n                <ConnectedFormModal\n                  disabled={disableActions}\n                  form={findFormEntry(entity, forms)}\n                  prototype={findFormPrototype(entity, prototypes)}\n                />\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      )}\n      <ConnectedCopyForm form={entity} />\n    </>\n  );\n};\n\nexport default ActionsForm;\n\nexport const ConnectedCopyForm = connect(null, {\n  request: fetchEntity\n})(CopyForm);\n\nfunction CopyForm({ form, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const disableActions = form?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={disableActions}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        Copy\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '300px'\n          }}\n        >\n          <ModalHeader\n            title=\"Copy Form\"\n            icon={\n              <SvgIcon>\n                <path d={mdiClipboardCheck} />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Form was copied successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the form could not be copied.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{ name: `${form.name}_copy` }}\n                onSubmit={values => {\n                  handleSubmit(setResult, request, form.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {() => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header>\n                              Please choose a new name for the copy of form &apos;{form.name}&apos;.\n                            </Section.Header>\n                            <Row>\n                              <Text\n                                name=\"name\"\n                                label=\"Name\"\n                                value={`${form.name}_copy`}\n                                description={form.description}\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButtonNoDirty variant=\"contained\">Save</SubmitButtonNoDirty>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmit(setResult, request, formName, values) {\n  const body = {\n    name: values.name\n  };\n\n  postForm(formName, body)\n    .then(() => {\n      setResult('success');\n      request('form');\n    })\n    .catch(error => {\n      console.log('[copy form] put form error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport { Button } from 'shared/components/controls';\n\nexport const SubmitButtonNoDirty = ({ children = 'Submit', ...props }) => {\n  const { values, submitForm, isSubmitting, isValidating } = useFormikContext();\n\n  return (\n    <Button\n      type=\"submit\"\n      disabled={isSubmitting || isValidating}\n      onClick={() => {\n        console.log('submitting', values); // eslint-disable-line\n        submitForm();\n      }}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React, { useMemo, useContext } from 'react';\n\nimport { Section, Row, Column } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Ensure } from 'core/components/Ensure';\n\nimport { Parameter } from 'shared/components/form/parameters';\n\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\n\nimport { PackedContext } from './FormEditor';\n\nexport const FormParameters = ({ packed, prototype }) => {\n  return (\n    <Section>\n      <Section.Header />\n      <Section.Content>\n        <Ensure type=\"form\">\n          {({ data: forms }) => (\n            <Ensure type=\"type\">\n              {({ data: datatypes }) => (\n                <Ensure type=\"prototype\">\n                  {({ data: prototypes }) => (\n                    <Ensure type=\"process\">\n                      <FieldsAndGroupsEditor\n                        prototype={prototype}\n                        groups={packed.groups}\n                        prototypes={prototypes}\n                        datatypes={datatypes}\n                        forms={forms}\n                      />\n                    </Ensure>\n                  )}\n                </Ensure>\n              )}\n            </Ensure>\n          )}\n        </Ensure>\n      </Section.Content>\n    </Section>\n  );\n};\n\nconst DataContext = React.createContext({ datatypes: [], forms: [], prototypes: [] });\n\nfunction FieldsAndGroupsEditor({ groups, datatypes, prototypes, forms }) {\n  const entities = useMemo(\n    () => ({\n      datatypes,\n      prototypes,\n      forms\n    }),\n    [datatypes, prototypes, forms]\n  );\n\n  return (\n    <>\n      <DataContext.Provider value={entities}>\n        {groups.map((group, index) => (\n          <FieldGroup key={index} pointer={index} group={group} />\n        ))}\n      </DataContext.Provider>\n    </>\n  );\n}\n\nfunction FieldGroup({ group, pointer }) {\n  return (\n    <>\n      {group.instances.map((instance, index) => (\n        <GroupInstance\n          key={`${pointer}|${index}`}\n          group={group}\n          instance={instance}\n          pointers={{ group: pointer, instance: index }}\n          count={group.instances.length}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction GroupInstance({ group, instance, pointers, count }) {\n  let title = group.name ? `Group ${group.name}` : null;\n  if (group.iteration_limit > 1) {\n    title = group.name\n      ? `Group ${group.name} (${pointers.instance + 1} of ${count})`\n      : `Group (Unnamed) (${pointers.instance + 1} of ${count})`;\n  }\n\n  const canAdd =\n    group.iteration_limit > 1 && count - 1 === pointers.instance && count < group.iteration_limit;\n\n  const { dispatch } = useContext(PackedContext);\n\n  return (\n    <div>\n      <Section.Title>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          }}\n        >\n          {title}\n          {count !== 1 && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_GROUP_INSTANCE',\n                  pointers\n                });\n              }}\n            >\n              Remove Group\n            </Button>\n          )}\n        </div>\n      </Section.Title>\n      <div>\n        {instance.fields.map((field, index) => (\n          <Field\n            key={`${pointers.group}|${pointers.instance}|${field.name}`}\n            group={group}\n            instance={instance}\n            pointers={{ ...pointers, field: index }}\n            field={field}\n          />\n        ))}\n      </div>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end'\n        }}\n      >\n        {canAdd && (\n          <Button\n            onClick={() => {\n              const fields = instance.fields.map(field => {\n                return {\n                  ...field,\n                  values: [{ instance: 0, value: null }]\n                };\n              });\n              const newInstance = {\n                ...instance,\n                instance: instance.instance + 1,\n                fields\n              };\n\n              dispatch({\n                type: 'ADD_GROUP_INSTANCE',\n                pointers,\n                instance: newInstance\n              });\n            }}\n          >\n            Add Group\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Field({ field, pointers }) {\n  return (\n    <div>\n      {field.values.map((value, index) => (\n        <Value\n          key={`${pointers.group}|${pointers.instance}|${field.name}|${index}`}\n          field={field}\n          value={value.value}\n          pointers={{ ...pointers, value: index }}\n          count={field.values.length}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction Value({ field, value, pointers, count }) {\n  const packet = useContext(DataContext);\n\n  const canRemove = field.is_repeatable && count !== 1;\n  const canAdd = field.is_repeatable && pointers.value + 1 === count;\n\n  const { dispatch } = useContext(PackedContext);\n\n  const label = field.is_repeatable\n    ? `${field.name} (${pointers.value + 1} of ${count})`\n    : field.name;\n\n  function uniquedName(name, idx) {\n    const string = `group-${idx.group}-instance-${idx.instance}-field-${idx.field}-value-${idx.value}---${field.name}`;\n\n    return string;\n  }\n\n  const parameter = normalize(\n    {\n      name: uniquedName(field.name, pointers),\n      provided_field_name: field.name,\n      is_required: field.is_required,\n      value,\n      data_type: field.data_type,\n      description: field.description,\n      deflt: field.deflt,\n      meta: field.meta\n    },\n    packet.datatypes,\n    packet.prototypes,\n    packet.forms\n  );\n\n  // for some reason, is_required is set as false for a supported parameter (eg: mas0300.sys.invocation.server_list prototype)\n  // FIX ME: need to investigate further, for now, will make the value the same as field\n  parameter.is_required = field.is_required;\n  // console.log(parameter, field);\n\n  const is_supported = parameter.is_supported && parameter.editor.type !== 'hidden';\n\n  if (!is_supported) {\n    return (\n      <Row key={pointers.value}>\n        <p>{field.name} (Unsuported)</p>\n        <Parameter\n          normalized={{ ...parameter, is_required: false, editor: { type: 'text' } }}\n          disabled\n          label={label}\n        />\n      </Row>\n    );\n  }\n\n  return (\n    <Row key={pointers.value}>\n      <Column key={field.name}>\n        <Parameter normalized={parameter} label={label} />\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          }}\n        >\n          {canAdd && canRemove && (\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                dispatch({\n                  type: 'REMOVE_FIELD_VALUE',\n                  pointers\n                });\n              }}\n            >\n              Remove\n            </Button>\n          )}\n          {canAdd && (\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                onClick={() => {\n                  dispatch({\n                    type: 'ADD_FIELD_VALUE',\n                    pointers\n                  });\n                }}\n              >\n                Add\n              </Button>\n            </div>\n          )}\n        </div>\n      </Column>\n    </Row>\n  );\n}\n","import React from 'react';\nimport { ConnectedNewNamespace } from './namespace-actions/NewNamespace';\n\nconst ActionsRoot = () => {\n  return (\n    <>\n      <ConnectedNewNamespace />\n    </>\n  );\n};\n\nexport default ActionsRoot;\n","import React from 'react';\n\nimport { ConnectedFormModal } from './form-actions/FormModal';\n\nconst ActionsPrototype = ({ entity }) => {\n  const disableActions = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <ConnectedFormModal isNew prototype={entity} disabled={disableActions} />\n    </>\n  );\n};\n\nexport default ActionsPrototype;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Formik } from 'formik';\nimport _, { isEmpty, pickBy } from 'lodash';\n\nimport { fetchEntity } from '../actions';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Column, Paper, Row, Section } from 'shared/components/layout';\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport { ProcessParameters } from 'job-process/job-parameters';\nimport { Notifications } from 'job-process/containers/notifications/notifications';\n\nimport { getSchedule, patchSchedule } from 'shared/api/schedule';\nimport { getProcess } from 'shared/api/process';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\n\nimport { hasWritePrivileges } from '../utils/privileges';\nimport { mapScheduledNames } from '../mappers';\nimport { CronValidator } from '../../shared/lib/cron-validator/cron-validator';\n\nimport './ActionsSchedule.scss';\n\nconst ActionsSchedule = ({ entity }) => {\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const canWrite = hasWritePrivileges(entity);\n\n  if (!canWrite) {\n    return null;\n  }\n\n  return (\n    <>\n      <ConnectedEditSchedule schedule={entity} isDisabled={isDisabled} />\n    </>\n  );\n};\n\nexport default ActionsSchedule;\n\nexport const ConnectedEditSchedule = connect(\n  state => {\n    return {\n      allScheduledNames: mapScheduledNames(state.entities?.data?.schedule?.data?.data?.schedules)\n    };\n  },\n  {\n    request: fetchEntity\n  }\n)(EditSchedule);\n\nfunction EditSchedule({ schedule, isDisabled, allScheduledNames, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n      setResult('');\n      setFilledValues({});\n    }\n  };\n  const formRef = useRef();\n  const [result, setResult] = useState('');\n  const [scheduleDetails, setScheduleDetails] = useState({});\n  const [processDetails, setProcessDetails] = useState({});\n  const [tab, setTab] = useState('schedule');\n  const [filledValues, setFilledValues] = useState({});\n  const [everyHourWarningShown] = useState({});\n\n  useEffect(() => {\n    if (!_.isEmpty(scheduleDetails) && !_.isEmpty(processDetails)) {\n      setOpen(true);\n    }\n  }, [scheduleDetails, processDetails]);\n\n  const onClickHandler = () => {\n    /** TODO cover the case when one (or both) of the below calls fail or no data is returned from them */\n\n    getSchedule(schedule.name)\n      .then(data => {\n        if (data.data.data && data.data.data.schedules && data.data.data.schedules[0]) {\n          setScheduleDetails(data.data.data.schedules[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n\n    getProcess(schedule.process)\n      .then(data => {\n        if (data.data.data && data.data.data.processes && data.data.data.processes[0]) {\n          setProcessDetails(data.data.data.processes[0]);\n        }\n      })\n      .catch(error => {\n        console.log('[get process] error getting process details: ', error); // eslint-disable-line\n      });\n  };\n\n  return (\n    <>\n      <Button\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          onClickHandler();\n        }}\n        disabled={isDisabled}\n      >\n        Edit\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '75vw',\n            height: '75vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Schedule\"\n            icon={\n              <SvgIcon>\n                <EventNoteIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Schedule was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>\n                  <p>An error occurred and the new schedule could not be added.</p>\n                  <p style={{ color: '#3765af', textDecoration: 'underline', cursor: 'pointer' }}>\n                    <a\n                      role=\"presentation\"\n                      onClick={() => {\n                        setResult('');\n                      }}\n                    >\n                      Go back to form\n                    </a>\n                  </p>\n                </Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n\n            <Switch.Case value=\"\">\n              <Paper.Header>\n                <ViewTabs active={tab} changeTab={setTab} />\n              </Paper.Header>\n              <Switch value={tab}>\n                <Switch.Case value=\"schedule\">\n                  <ScheduleForm\n                    process={processDetails}\n                    schedule={scheduleDetails}\n                    setResult={setResult}\n                    allScheduledNames={allScheduledNames}\n                    request={request}\n                    filledValues={filledValues}\n                    setFilledValues={setFilledValues}\n                    formRef={formRef}\n                    everyHourWarningShown={everyHourWarningShown}\n                  />\n                </Switch.Case>\n                <Switch.Case value=\"documentation\">\n                  <Paper.Content>\n                    <Documentation process={processDetails} />\n                  </Paper.Content>\n                </Switch.Case>\n              </Switch>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction ViewTabs({ active, changeTab }) {\n  const tabs = [\n    { label: 'Schedule', value: 'schedule', active: true },\n    { label: 'Documentation', value: 'documentation' }\n  ];\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n\nconst ScheduleForm = ({\n  schedule,\n  setResult,\n  allScheduledNames,\n  request,\n  filledValues,\n  setFilledValues,\n  formRef,\n  everyHourWarningShown\n}) => {\n  const derivedMonitor = {\n    enabled: !!schedule?.parameters?.events,\n    events: schedule?.parameters?.events || 0,\n    users: schedule?.parameters?.users || []\n  };\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const splittedName = schedule.name.split('.');\n  const name = splittedName[splittedName.length - 1];\n\n  const extraValidations = values => {\n    const { t_min, t_hr, t_day, t_mon, t_wkd, sch_name } = values;\n    const errors = {};\n\n    if (sch_name) {\n      if (sch_name.includes('.')) {\n        errors.sch_name = 'Name cannot include \".\"';\n      } else if (sch_name.includes(' ')) {\n        errors.sch_name = 'Name cannot include spaces';\n      } else if (allScheduledNames.includes(sch_name) && name !== sch_name) {\n        errors.sch_name = 'A schedule with this name already exists';\n      }\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    if (t_hr === '*' && t_day === '*' && t_mon === '*' && t_wkd === '*') {\n      errors.t_hr = 'At least one value should be populated';\n      errors.t_day = 'At least one value should be populated';\n      errors.t_mon = 'At least one value should be populated';\n      errors.t_wkd = 'At least one value should be populated';\n      return errors;\n    }\n\n    if (!CronValidator.isValidMinutes(t_min)) {\n      errors.t_min = CronValidator.FORMAT_MSG.MINUTES;\n    }\n\n    if (!CronValidator.isValidHours(t_hr)) {\n      errors.t_hr = CronValidator.FORMAT_MSG.HOURS;\n    }\n\n    if (!CronValidator.isValidDays(t_day)) {\n      errors.t_day = CronValidator.FORMAT_MSG.DAYS;\n    }\n\n    if (!CronValidator.isValidMonth(t_mon)) {\n      errors.t_mon = CronValidator.FORMAT_MSG.MONTH;\n    }\n\n    if (!CronValidator.isValidWeekDay(t_wkd)) {\n      errors.t_wkd = CronValidator.FORMAT_MSG.DAY_OF_WEEK;\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{}}\n        validate={extraValidations}\n        onSubmit={values => {\n          handleSubmit(schedule, monitor, setResult, request, setFilledValues, values);\n        }}\n        innerRef={formRef}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Process</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"process\"\n                          label=\"Process\"\n                          description={schedule.description}\n                          value={schedule.process}\n                          disabled\n                        />\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Schedule</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Text\n                          name=\"sch_name\"\n                          label=\"Name\"\n                          value={filledValues?.rename || name}\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Text\n                          name=\"sch_description\"\n                          label=\"Description\"\n                          value={filledValues?.description || schedule.description}\n                          multiline\n                          required\n                        />\n                      </Row>\n                      <Row>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_min\"\n                            label=\"T_min\"\n                            value={filledValues?.t_min || schedule.t_min}\n                            description={CronValidator.FORMAT_MSG.MINUTES}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_hr\"\n                            label=\"T_hr\"\n                            value={filledValues?.t_hr || schedule.t_hr}\n                            description={CronValidator.FORMAT_MSG.HOURS}\n                          />\n                          {everyHourWarningShown && (\n                            <div className=\"every-hour-warning\">{CronValidator.FORMAT_MSG.EVERY_HOUR_WARNING}</div>\n                          )}\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_day\"\n                            label=\"T_Day\"\n                            value={filledValues?.t_day || schedule.t_day}\n                            description={CronValidator.FORMAT_MSG.DAYS}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_mon\"\n                            label=\"T_mon\"\n                            value={filledValues?.t_mon || schedule.t_mon}\n                            description={CronValidator.FORMAT_MSG.MONTH}\n                          />\n                        </Column>\n                        <Column style={{ maxWidth: '20%', width: '20%' }}>\n                          <Text\n                            name=\"t_wkd\"\n                            label=\"T_wkd\"\n                            value={filledValues?.t_wkd || schedule.t_wkd}\n                            description={CronValidator.FORMAT_MSG.DAY_OF_WEEK}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n\n                  <ProcessParameters\n                    recieved={filledValues?.parameters || schedule.parameters}\n                    editable\n                  />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Notifications\n                        name=\"notifications\"\n                        recievedData={derivedMonitor}\n                        onApply={n_state => {\n                          if (n_state.events === 0 || isEmpty(n_state.users)) {\n                            setMonitor({\n                              enabled: false\n                            });\n                          }\n                          setMonitor({\n                            enabled: true,\n                            ...n_state\n                          });\n                        }}\n                      />\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <SubmitButton variant=\"contained\">Save</SubmitButton>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n    </>\n  );\n};\n\nasync function handleSubmit(schedule, monitor, setResult, request, setFilledValues, values) {\n  const {\n    sch_name,\n    sch_description,\n    process,\n    t_min,\n    t_hr,\n    t_day,\n    t_mon,\n    t_wkd,\n    ...params_with_maybe_replvars\n  } = values;\n  const body = {\n    rename: sch_name,\n    description: sch_description,\n    process,\n    t_min: t_min || null,\n    t_hr: t_hr || null,\n    t_day: t_day || null,\n    t_mon: t_mon || null,\n    t_wkd: t_wkd || null\n  };\n\n  const { parameters } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    body.process = 'mas.sys.invocation.notify.create';\n    body.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      events: monitor.events,\n      users: monitor.users\n    };\n  } else {\n    body.parameters = pickBy(parameters, rejector);\n  }\n\n  patchSchedule(schedule.name, body)\n    .then(() => {\n      setResult('success');\n      setFilledValues({});\n      request('schedule');\n    })\n    .catch(error => {\n      console.log('[edit schedule] edit schedule error: ', error); // eslint-disable-line\n      setFilledValues(body);\n      setResult('fail');\n    });\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => p).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  }\n  return values;\n}\n\nconst Documentation = ({ process }) => {\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>{process.name}</Section.Title>\n        <Section.Info>{process.description}</Section.Info>\n      </Section.Header>\n      {process.parameters && process.parameters.length > 0 && (\n        <Section.Content>\n          <h2>\n            <b>Parameters:</b>\n          </h2>\n          <div>\n            {process.parameters.map(parameter => {\n              return (\n                <React.Fragment key={parameter.name}>\n                  <h3>\n                    {parameter.name} ({parameter.data_type})\n                  </h3>\n                  <Section.Info>{parameter.description}</Section.Info>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Section.Content>\n      )}\n    </Section>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\n\nimport { fetchEntity } from '../actions';\n\nimport { getAlias, patchAlias, postAlias } from 'shared/api/alias';\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { NamespaceSelect } from 'shared/components/form/editors/Custom';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\nimport { Paper, Section, Row, Column } from 'shared/components/layout';\n\nimport { Text } from 'shared/components/form/editors/Generic';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport { ConnectedDeleteEntity } from './common-actions/DeleteEntity';\nimport { PrivilegesModal } from './common-actions/privileges/PrivilegesModal';\n\nimport { hasWritePrivileges } from '../utils/privileges';\n\nfunction isEntityDeletable(entity) {\n  return (\n    entity.owner !== 'postgres' &&\n    (entity.entity === 'form' ||\n      entity.entity === 'process' ||\n      entity.entity === 'schedule' ||\n      entity.entity === 'account')\n  );\n}\n\nconst ActionsCommon = ({ entity }) => {\n  const displayActions = entity.entity !== 'root';\n  if (displayActions) {\n    const displayDelete = isEntityDeletable(entity);\n    const isAlias = entity.alias;\n    const disableActions = entity?.meta?.appearance === 'Greyed';\n    const canWrite = hasWritePrivileges(entity);\n\n    return (\n      <>\n        {canWrite && (\n          <PrivilegesModal entity={entity} isAlias={isAlias} disabled={disableActions} />\n        )}\n        {!isAlias && <ConnectedNewAlias entity={entity} />}\n        {isAlias && canWrite && <ConnectedEditAlias entity={entity} />}\n        {canWrite && displayDelete && (\n          <ConnectedDeleteEntity entity={entity} disabled={disableActions} />\n        )}\n      </>\n    );\n  }\n  return null;\n};\n\nexport default ActionsCommon;\n\n//* These should be moved to the common-actions folder */\n\nexport const ConnectedNewAlias = connect(null, {\n  request: fetchEntity\n})(NewAlias);\n\nfunction NewAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          setOpen(true);\n        }}\n      >\n        New Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"New Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was added successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be added.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={{\n                  name: '',\n                  namespace: '',\n                  original: entity ? entity.name : '',\n                  description: ''\n                }}\n                onSubmit={values => {\n                  handleSubmitNew(setResult, request, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleSubmitNew(setResult, request, values) {\n  const alias = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    name: values.original,\n    alias,\n    description: values.description\n  };\n\n  postAlias(body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n\nexport const ConnectedEditAlias = connect(null, {\n  request: fetchEntity\n})(EditAlias);\n\nfunction EditAlias({ entity, request }) {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n  const [result, setResult] = useState('');\n  const [description, setDescription] = useState('');\n  const formRef = useRef();\n  const getInitialValues = () => {\n    const values = {};\n    const splittedNamespace = entity.name.split('.');\n\n    values.name = splittedNamespace[splittedNamespace.length - 1] || '';\n    values.namespace = splittedNamespace.slice(0, splittedNamespace.length - 1).join('.');\n    values.original = entity ? entity.alias : '';\n    values.description = description;\n\n    return values;\n  };\n\n  const getAliasDetails = name => {\n    getAlias(name)\n      .then(data => {\n        if (\n          data.data.data &&\n          data.data.data.aliases &&\n          data.data.data.aliases[0] &&\n          data.data.data.aliases[0].description\n        ) {\n          setDescription(data.data.data.aliases[0].description);\n          setOpen(true);\n        }\n      })\n      .catch(error => {\n        console.log('[get alias] error getting alias details: ', error); // eslint-disable-line\n      });\n  };\n  const isDisabled = entity?.meta?.appearance === 'Greyed';\n\n  return (\n    <>\n      <Button\n        disabled={isDisabled}\n        classes={{ root: 'entity-button' }}\n        onClick={() => {\n          getAliasDetails(entity.name);\n        }}\n      >\n        Edit Alias\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '600px',\n            minHeight: '600px'\n          }}\n        >\n          <ModalHeader\n            title=\"Edit Alias\"\n            icon={\n              <SvgIcon>\n                <FolderIcon />\n              </SvgIcon>\n            }\n            formikRef={formRef}\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <Result.Text>Alias was edited successfully!</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <Result.Text>An error occurred and the alias could not be edited.</Result.Text>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"\">\n              <Formik\n                initialValues={getInitialValues()}\n                onSubmit={values => {\n                  handleEditSubmit(setResult, request, entity.name, values);\n                }}\n                innerRef={formRef}\n              >\n                {({ values }) => {\n                  return (\n                    <>\n                      <Paper.Content>\n                        <Form>\n                          <Section>\n                            <Section.Header />\n                            <Row>\n                              <Text\n                                disabled\n                                name=\"original\"\n                                label=\"Original\"\n                                value={values.original}\n                              />\n                            </Row>\n                            <Row>\n                              <Text name=\"name\" label=\"Name\" value={values.name} required />\n                            </Row>\n                            <Row>\n                              <Column xs={12}>\n                                <NamespaceSelect\n                                  name=\"namespace\"\n                                  label=\"Parent namespace\"\n                                  value={values.namespace}\n                                />\n                              </Column>\n                            </Row>\n                            <Row>\n                              <Text\n                                name=\"description\"\n                                label=\"Description\"\n                                value={values.description}\n                                multiline\n                                required\n                              />\n                            </Row>\n                          </Section>\n                        </Form>\n                      </Paper.Content>\n                      <Paper.Footer>\n                        <Paper.Footer.Right>\n                          <SubmitButton variant=\"contained\">Save</SubmitButton>\n                        </Paper.Footer.Right>\n                      </Paper.Footer>\n                    </>\n                  );\n                }}\n              </Formik>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nasync function handleEditSubmit(setResult, request, originalName, values) {\n  const name = values.namespace ? `${values.namespace}.${values.name}` : values.name;\n  const body = {\n    rename: name,\n    description: values.description\n  };\n\n  patchAlias(originalName, body)\n    .then(() => {\n      setResult('success');\n      request('alias');\n    })\n    .catch(error => {\n      console.log('[edit alias] patch alias error: ', error); // eslint-disable-line\n      setResult('fail');\n    });\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchEntity, clearSelectedEntity } from '../../actions';\n\nimport { Switch } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Paper } from 'shared/components/layout';\n\nimport { deleteEntity } from 'shared/api/delete';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiTrashCan } from '@mdi/js';\n\nexport const ConnectedDeleteEntity = connect(null, {\n  clearSelected: clearSelectedEntity,\n  refresh: fetchEntity\n})(DeleteEntity);\n\nfunction DeleteEntity({ disabled, entity, refresh, clearSelected }) {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const type = entity.entity;\n  const { name } = entity;\n\n  const terminator = useCallback(() => {\n    deleteEntity(name, type).then(response => {\n      setResult(response.result);\n    });\n  }, [type, name]);\n\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Delete\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title={`Delete ${type}`}\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove this {type} ? This could affect the way the user\n                    will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      terminator();\n                    }}\n                  >\n                    Delete\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"success\">\n              <Result type=\"success\">\n                <BodyText>{name} successfully deleted!</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                      clearSelected();\n                      refresh(type);\n                    }}\n                  >\n                    Done\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"fail\">\n              <Result type=\"fail\">\n                <BodyText>You do not have permissions to delete this entity.</BodyText>\n              </Result>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    onClick={() => {\n                      modalActions.close();\n                      setResult('attempt');\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useCallback } from 'react';\n\nimport { Button } from 'shared/components/controls';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nimport { mdiImageFilterCenterFocus } from '@mdi/js';\n\nimport { PrivilegesEditor } from './PrivilegesEditor';\n\nexport const PrivilegesModal = ({ disabled, entity, isAlias }) => {\n  const [open, setOpen] = useState(false);\n\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      // refresh(entity.type);\n      setOpen(false);\n    }, [])\n  };\n  return (\n    <>\n      <Button disabled={disabled} classes={{ root: 'entity-button' }} onClick={modalActions.open}>\n        Privileges\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '50vw',\n            minHeight: '648px',\n            maxHeight: '648px'\n          }}\n        >\n          <ModalHeader\n            title=\"Privileges\"\n            icon={\n              <SvgIcon>\n                <path d={mdiImageFilterCenterFocus} />\n              </SvgIcon>\n            }\n          />\n          <PrivilegesEditor entity={entity} isAlias={isAlias} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\n\nimport { Paper, Center, NavigationTab } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Result, ModalContext } from 'shared/components/overlays';\nimport { Button, Checkbox as LabeledCheckbox } from 'shared/components/controls';\n\nimport { getPrivileges, setPrivileges } from 'shared/api/privileges';\n\nimport './PrivilegesEditor.local.scss';\nimport { mdiAccount } from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n\nexport const PrivilegesEditor = ({ entity }) => {\n  const hasAlias = !!entity.alias;\n  const {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    updatePrivilege\n  } = usePrivileges(entity, hasAlias);\n  const [tab, switchTab] = useState('users');\n  const { actions } = useContext(ModalContext);\n\n  if (loading) {\n    return (\n      <Center>\n        <Loader>Loading privileges for entity</Loader>\n      </Center>\n    );\n  }\n\n  if (!data) {\n    return (\n      <Center>\n        <Result type=\"fail\">\n          <Result.Text compact>Could not load privileges list for {entity.name}</Result.Text>\n        </Result>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab\n          active={tab}\n          tabs={[\n            { label: 'Users', value: 'users' },\n            { label: 'Groups', value: 'groups' }\n          ]}\n          onClick={switchTab}\n        />\n      </Paper.Header>\n      <PrivilegesList\n        privileges={data.privileges.filter(p => {\n          if (p.role === 'mas') {\n            return false;\n          }\n          if (p.role === 'admin') {\n            return false;\n          }\n          if (tab === 'users') {\n            return !p.is_group;\n          }\n\n          return p.is_group;\n        })}\n        updater={privilege => {\n          updatePrivilege(privilege);\n        }}\n        updating={updating}\n        entityType={entity.entity}\n        entityName={hasAlias && editAliasParent ? entity.alias : entity.name}\n        isAlias={hasAlias && !editAliasParent}\n      />\n      <Paper.Footer>\n        {!!entity.alias && (\n          <Paper.Footer.Left>\n            <LabeledCheckbox\n              color=\"primary\"\n              icon={<CheckBoxOutlineBlankIcon />}\n              checkedIcon={<CheckBoxIcon />}\n              checked={editAliasParent}\n              onChange={() => {\n                setEditAliasParent(!editAliasParent);\n              }}\n              label=\"Show parent privileges\"\n            />\n          </Paper.Footer.Left>\n        )}\n        <Paper.Footer.Right>\n          <Button color=\"primary\" variant=\"contained\" onClick={actions.close}>\n            Done\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nfunction PrivilegesList({ privileges, updating, updater, entityType, entityName, isAlias }) {\n  const types = privilegeTypes(entityType, isAlias);\n\n  function renderType(type) {\n    return (\n      <div className=\"column role\" key={type}>\n        {type}\n      </div>\n    );\n  }\n\n  function mapByEntity(user_or_group) {\n    return (\n      <div className=\"item\" key={`alias-${isAlias}-role-${user_or_group.role}`}>\n        <div className=\"column role\">\n          <SvgIcon color=\"primary\">\n            <path d={mdiAccount} />\n          </SvgIcon>\n          {user_or_group.role}\n        </div>\n        <div className=\"types\">\n          {types.map(type => {\n            const granted = user_or_group.effective.includes(type);\n            return (\n              <div\n                className=\"column type \"\n                key={`c-alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n              >\n                <Checkbox\n                  key={`alias-${isAlias}-role-${user_or_group.role}-group-${user_or_group.is_group}-type-${type}-${granted}`}\n                  classes={{ root: 'privilege-checkbox' }}\n                  checked={granted}\n                  disabled={updating}\n                  onChange={() => {\n                    updater({\n                      privilege: type,\n                      enitity_name: entityName,\n                      alias: isAlias,\n                      role: user_or_group.role,\n                      role_type: user_or_group.is_group ? 'group' : 'user',\n                      granted\n                    });\n                  }}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"privileges\">\n      <div className=\"header\">\n        {renderType('Name')}\n        <div className=\"types\">{types.map(renderType)}</div>\n      </div>\n      <div className=\"list\">\n        {privileges\n          .sort((a, b) => a?.role?.toLowerCase()?.localeCompare(b?.role?.toLowerCase()))\n          .map(mapByEntity)}\n      </div>\n    </div>\n  );\n}\n\nfunction privilegeTypes(entityType, alias = false) {\n  const type = entityType.toLowerCase();\n  const privileges = [];\n  if (!alias) {\n    if (type === 'namespace') {\n      privileges.push('affiliate');\n    } else if (['account', 'constant', 'form', 'process'].includes(type)) {\n      privileges.push('execute');\n    }\n  }\n  privileges.push('read', 'write');\n  return privileges;\n}\n\nfunction usePrivileges(entity, hasAlias) {\n  const [editAliasParent, setEditAliasParent] = useState(!hasAlias);\n  const [loading, setLoading] = useState(true);\n  const [updating, setUpdating] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getPrivileges(\n      hasAlias && editAliasParent ? entity.alias : entity.name,\n      hasAlias && !editAliasParent\n    )\n      .then(resp => {\n        setData(resp?.data?.data?.entities?.[0]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setData(null);\n        setLoading(false);\n      });\n  }, [editAliasParent]);\n\n  const updatePrivilege = useCallback(\n    privilege => {\n      setUpdating(true);\n      setPrivileges(privilege)\n        .then(resp => {\n          setData(resp?.data?.data?.entities?.[0]);\n          setUpdating(false);\n        })\n        .catch(() => {\n          setUpdating(false);\n        });\n    },\n    [entity, editAliasParent]\n  );\n\n  return {\n    loading,\n    data,\n    editAliasParent,\n    updating,\n    setEditAliasParent,\n    setUpdating,\n    setData,\n    updatePrivilege\n  };\n}\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { arrayOf, node, string, shape } from 'prop-types';\n\nimport './HeaderPageSwitch.local.scss';\n\nexport const HeaderPageSwitch = ({ routes }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header-page-switch\" data-qa=\"header-page-switch\">\n      {routes.map(({ to, label }) => (\n        <div\n          key={to}\n          className={classnames('header-page-switch-link', {\n            'active-link': location.pathname.includes(to)\n          })}\n        >\n          <Link key={to} to={to} data-qa={`header-page-switch-link-to-${to}`}>\n            {label}\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nHeaderPageSwitch.propTypes = {\n  routes: arrayOf(\n    shape({\n      to: string,\n      label: node\n    })\n  )\n};\n\nHeaderPageSwitch.defaultProps = {\n  routes: []\n};\n","import React, { useEffect } from 'react';\nimport { func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from 'shared/components/loaders';\n\nimport { loadUserThunk } from '../../store/thunks';\n\nimport { ConnectedUserView } from '../pages/UserView/UserView';\n\nexport const UserLoader = ({ loadUser, loading }) => {\n  const { userName } = useParams();\n  useEffect(() => {\n    if (userName) {\n      loadUser(userName);\n    }\n  }, [userName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading User <b>{userName}</b>\n        </Loader>\n      ) : (\n        <ConnectedUserView />\n      )}\n    </>\n  );\n};\n\nUserLoader.propTypes = {\n  loadUser: func,\n  loading: bool\n};\n\nexport const ConnectedUserLoader = connect(\n  state => ({\n    loading: state.usersManager.flags.user.loading\n  }),\n  dispatch => ({ loadUser: name => dispatch(loadUserThunk(name)) })\n)(UserLoader);\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper, Section } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { UserGroupsContainer } from './containers/UserGroups';\n\nimport './UserView.local.scss';\nimport { deactivateUserThunk } from '../../../store/thunks';\nimport { EditUserDetailsContainer } from './containers/EditUserDetails';\nimport { EditUserInfoContainer } from './containers/EditUserInfo';\n\nimport { currentUserSelector } from 'session/store/state';\nimport { getCurrentUserDetails } from 'session/store/selectors';\n\nimport { isAdmin } from 'entities/utils/privileges';\n\nexport const UserView = ({ user, deactivateUser, deactivating, loggedUser, userDetails }) => {\n  const defaultResult = () => {\n    if (loggedUser.get('name') === user?.name) {\n      return 'self';\n    }\n\n    if (!isAdmin(userDetails)) {\n      return 'not-admin';\n    }\n\n    return 'attempt';\n  };\n  const [result, setResult] = useState(defaultResult);\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult(defaultResult);\n      setOpen(false);\n    }, [])\n  };\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  const deactivate = useCallback(() => {\n    deactivateUser(user)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not deactivate user!'); // eslint-disable-line\n      });\n  }, [user]);\n  const titleStyles = { textTransform: 'none' };\n\n  if (noGroups) {\n    titleStyles.fontStyle = 'italic';\n  }\n\n  /* This needs to be written as a result check or 404 page for a user. */\n  if (!user) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title style={titleStyles}>{user.name}</Paper.Title>\n        </Paper.Header>\n        <Paper.Content>\n          <Section>\n            <Section.Title>Global Privileges</Section.Title>\n            <PrivilegesContainer />\n          </Section>\n          <Section>\n            <Section.Title>Member of Groups</Section.Title>\n            <UserGroupsContainer />\n          </Section>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            {user?.name !== 'mas' && (\n              <Button\n                color=\"secondary\"\n                disabled={deactivating || noGroups}\n                onClick={modalActions.open}\n              >\n                Deactivate user\n              </Button>\n            )}\n            <EditUserDetailsContainer />\n            <EditUserInfoContainer />\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Deactivate user\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"self\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>You cannot deactivate yourself.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"not-admin\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>Only admin users can deactivate other users.</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer />\n            </Switch.Case>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to deactivate user {user.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('deactivating');\n                      deactivate();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"deactivating\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Deactivating...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport const ConnectedUserView = connect(\n  state => ({\n    user: state.usersManager.users.selected,\n    deactivating: state.usersManager.flags.user.removing,\n    loggedUser: currentUserSelector(state),\n    userDetails: getCurrentUserDetails(state)\n  }),\n  dispatch => ({\n    deactivateUser: userName => dispatch(deactivateUserThunk(userName))\n  })\n)(UserView);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../../store/thunks';\n\nexport const Privileges = ({ user, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <div className=\"user-privileges\">\n      <ul className=\"privileges-list\">\n        {privileges.map(entry => {\n          return (\n            <li key={entry.key} className=\"privileges-item\">\n              <Privilege user={user} privilege={entry} actions={actions} disabled={disabled} />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nPrivileges.propTypes = {\n  user: string,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ user, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(user, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  user: string,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      disabled: user?.name === 'mas' || state.usersManager.flags.privileges.disabled,\n      privileges: mapPrivileges(user.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (user, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      ),\n    revoke: (user, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          user,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction mapPrivileges(data) {\n  if (!data) return [];\n\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport GroupIcon from '@material-ui/icons/Group';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { ScrollableContainer, Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditUserGroupsContainer } from './EditUserGroups';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './UserGroups.local.scss';\nimport { removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const UserGroups = ({ user, groups, removeFromGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeFromGroups(user, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.type === 'fail') {\n          setResult('error');\n          setErrorMessage(response.message);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [user, selectedGroup]);\n\n  const isOnlySelect = groups?.length === 1 && groups[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove user ${user} from group ${selectedGroup}? This\n  could affect the way the user will be able to interact with the app`;\n\n  return (\n    <>\n      <div className=\"user-groups-block\">\n        <ScrollableContainer variant=\"row white\">\n          {passed => (\n            <ul {...passed}>\n              {groups &&\n                groups.map(group_name => (\n                  <li className=\"group-card-item\" key={group_name}>\n                    <AvatarCard\n                      label={group_name}\n                      disabled={user === 'mas'}\n                      avatar={{ fallback: <GroupIcon /> }}\n                      action={\n                        <SvgIcon\n                          onClick={e => {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSelectedGroup(group_name);\n                            modalActions.open();\n                          }}\n                        >\n                          <path d={mdiDeleteCircleOutline} />\n                        </SvgIcon>\n                      }\n                      description={retrieveGroupDescription(group_name)}\n                    />\n                  </li>\n                ))}\n              <li className=\"group-card-item\" key=\"add-user-to-groups\">\n                <EditUserGroupsContainer />\n              </li>\n            </ul>\n          )}\n        </ScrollableContainer>\n      </div>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setErrorMessage('An error occurred.');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  removeFromGroups: func\n};\n\nexport const UserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    const visibleGroups = user.member_of?.filter(group => group !== 'user');\n\n    return {\n      user: user.name,\n      groups: visibleGroups,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n  })\n)(UserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, array, string, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './EditUserGroups.local.scss';\nimport { addUserToGroupsThunk, removeUserFromGroupsThunk } from '../../../../store/thunks';\n\nexport const EditUserGroups = ({ user, groups, addToGroups, flags, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  if (user === 'mas') {\n    return null;\n  }\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard label=\"Add to group\" avatar={{ fallback: <AddIcon /> }} />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                user={user}\n                selected={groups}\n                flags={flags}\n                closeModal={closeModal}\n                onAdd={(userName, selections) => {\n                  return addToGroups(userName, selections);\n                }}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nEditUserGroups.propTypes = {\n  user: string,\n  groups: array,\n  addToGroups: func,\n  flags: object\n};\n\nexport const EditUserGroupsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return {\n      user: user.name,\n      groups: user.member_of,\n      flags: state.usersManager.flags.user,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    addToGroups: (user, groups) => dispatch(addUserToGroupsThunk({ user, groups })),\n    removeFromGroups: (user, groups) => dispatch(removeUserFromGroupsThunk({ user, groups }))\n    /** add to group thunk here */\n    /** remove from group thunk here */\n  })\n)(EditUserGroups);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nconst GroupsList = ({\n  user,\n  selected,\n  onAdd,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    loading: true,\n    done: false,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => selected && !selected.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, selected]);\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = error;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.done && !state.all.length) {\n    return <p>Could not retrieve all groups</p>;\n  }\n\n  if (state.success) {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Added to selected groups succesfully!</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.fail) {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>{capitalizeFirstLetter(state.fail)}</Result.Text>\n          </Result>\n        </Center>\n\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? selected.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that the user is a part of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              onAdd(user, state.selections)\n                .then(response => {\n                  if (typeof response === 'object' && response.type === 'fail') {\n                    setState(\n                      produce(state, draft => {\n                        draft.fail = response.message;\n                      })\n                    );\n                  } else {\n                    setState(\n                      produce(state, draft => {\n                        draft.success = true;\n                      })\n                    );\n                  }\n                })\n                .catch(err => {\n                  setState(\n                    produce(state, draft => {\n                      draft.fail = err;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  user: string,\n  selected: array,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useRef } from 'react';\nimport { object } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { ChangePasswordContainer } from './ChangePassword';\nimport { UserDatesBox } from '../components/UserDatesBox';\n\n// import './EditUserDetails.local.scss';\n\nexport const EditUserDetails = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        User Details\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '370px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-details\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"User Details\"\n            formikRef={formRef}\n          />\n          <UserDetailsForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserDetails.propTypes = {\n  user: object\n};\n\nexport const EditUserDetailsContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserDetails);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserDetailsForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ submitResult: undefined });\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user details!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <ChangePasswordContainer />\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  const initialValues = {\n    description: user.description\n  };\n\n  return (\n    <>\n      <Formik\n        validateOnChange={false}\n        initialValues={initialValues}\n        onSubmit={(values, actions) => {\n          if (_.isEqual(initialValues, values)) {\n            actions.setSubmitting(false);\n            modalActions.close();\n          }\n\n          // parse and add user information form data.\n\n          /**\n            patch user description\n            */\n          RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.USERS}/${user.name}`, {\n            description: values.description\n          })\n            .then(() => {\n              setState(prev => ({ ...prev, submitResult: 'success' }));\n            })\n            .catch(() => {\n              actions.setSubmitting(false);\n\n              setState(prev => ({ ...prev, submitResult: 'fail' }));\n            });\n        }}\n        innerRef={formRef}\n      >\n        {({ dirty, isSubmitting, submitForm }) => (\n          <>\n            <Paper.Content scrollable>\n              <Form>\n                <UserDatesBox created={user.date_created} updated={user.date_updated} />\n                <Row>\n                  <Field name=\"description\">\n                    {({ field, meta }) => {\n                      return (\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          error={meta.error && meta.touched}\n                          helperText={meta.touched ? meta.error : undefined}\n                          label=\"Short Description\"\n                        />\n                      );\n                    }}\n                  </Field>\n                </Row>\n              </Form>\n            </Paper.Content>\n            <Paper.Footer>\n              <Paper.Footer.Left>\n                <ChangePasswordContainer />\n              </Paper.Footer.Left>\n              <Paper.Footer.Right>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={!dirty || isSubmitting}\n                  onClick={submitForm}\n                >\n                  Save\n                </Button>\n              </Paper.Footer.Right>\n            </Paper.Footer>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nUserDetailsForm.propTypes = {\n  user: object,\n  modalActions: object\n};\n","import React from 'react';\nimport { string } from 'prop-types';\nimport { SvgIcon } from '@material-ui/core';\nimport { mdiAccountPlus, mdiAccountEdit } from '@mdi/js';\nimport moment from 'moment';\n\nimport './UserDatesBox.local.scss';\n\nexport const UserDatesBox = ({ created, updated }) => (\n  <div className=\"dates-box\">\n    {created && <DateCreated date={created} />}\n    {updated && <DateUpdated date={updated} />}\n  </div>\n);\n\nUserDatesBox.propTypes = { created: string, updated: string };\n\nexport const DateCreated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountPlus} />\n    </SvgIcon>\n    <span>Created on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateCreated.propTypes = { date: string };\n\nexport const DateUpdated = ({ date }) => (\n  <div className=\"date-entry\">\n    <SvgIcon fontSize=\"small\">\n      <path d={mdiAccountEdit} />\n    </SvgIcon>\n    <span>Updated on:</span>\n    <span className=\"date-text\">{parseDate(date)}</span>\n  </div>\n);\n\nDateUpdated.propTypes = { date: string };\n\nfunction parseDate(date) {\n  return moment(date).format('MMM DD YYYY');\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport Avatar from '@material-ui/core/Avatar';\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Center } from 'shared/components';\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Row } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\n// import './EditUserInfo.local.scss';\n\nexport const EditUserInfo = ({ user }) => {\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const formRef = useRef();\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={modalActions.open}>\n        Contact Info\n      </Button>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '392px',\n            maxWidth: '392px',\n            minHeight: '632px'\n          }}\n        >\n          <ModalHeader\n            avatar={\n              <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                <GroupAddIcon />\n              </Avatar>\n            }\n            title=\"Contact Information\"\n            formikRef={formRef}\n          />\n          <UserInfoForm user={user} modalActions={modalActions} formRef={formRef} />\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nEditUserInfo.propTypes = {\n  user: object\n};\n\nexport const EditUserInfoContainer = connect(\n  state => {\n    const user = selectedUser(state);\n\n    return { user };\n  },\n  () => ({})\n)(EditUserInfo);\n\nfunction selectedUser(state) {\n  return state.usersManager.users.selected;\n}\n\nexport const UserInfoForm = ({ user, modalActions, formRef }) => {\n  const [state, setState] = useState({ loading: true });\n\n  useEffect(() => {\n    const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n    const prototypeEndpoint = 'prototype/mas0300.sys.user.information?version=1';\n\n    RestClient.get(prototypeEndpoint).then(formproto => {\n      const proto = formproto.data.data.prototypes[0];\n\n      RestClient.get(formEndpoint)\n        .then(formdata => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: false,\n            data: formdata.data.data.forms[0],\n            proto\n          });\n        })\n        .catch(() => {\n          setState({\n            loading: false,\n            result: 'success',\n            create: true,\n            proto\n          });\n        });\n    });\n  }, []);\n\n  if (state.loading) {\n    return (\n      <>\n        <Center>\n          <Loader />\n        </Center>\n        <Paper.Footer />\n      </>\n    );\n  }\n\n  if (state.submitResult === 'success') {\n    return (\n      <>\n        <Center>\n          <Result type=\"success\">\n            <Result.Text>Updated user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button variant=\"contained\" color=\"primary\" onClick={modalActions.close}>\n              Done\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.submitResult === 'fail') {\n    return (\n      <>\n        <Center>\n          <Result type=\"fail\">\n            <Result.Text>Could not update user information!</Result.Text>\n          </Result>\n        </Center>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"primary\" onClick={modalActions.close}>\n              Cancel\n            </Button>\n          </Paper.Footer.Left>\n          <Paper.Footer.Right>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                setState(prev => ({ ...prev, submitResult: undefined }));\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.result === 'success') {\n    const { fields, values } = mapFormValues(state.proto, state.data);\n\n    return (\n      <>\n        <Formik\n          validateOnChange={false}\n          initialValues={values}\n          onSubmit={(submited, actions) => {\n            if (_.isEqual(values, submited)) {\n              actions.setSubmitting(false);\n              modalActions.close();\n            }\n\n            const sendable_data = fields.reduce((d, entry) => {\n              /** Empty values have to be nulled to be sent in the data :( */\n              let value = submited[entry.name] || null;\n\n              /**\n                TODO: backend accepts array for is_repeatable values\n               */\n              if (entry.is_repeatable && !Array.isArray(value)) {\n                value = [value];\n              }\n\n              d.push({\n                name: entry.label, // for this particular form, the names contain spaces.\n                value\n              });\n\n              return d;\n            }, []);\n            // parse and add user information form data.\n\n            /**\n            Send user.info data to backend\n            */\n            const formEndpoint = `${CONSTANTS.BASE.ENDPOINTS.FORM}/mas0000.user.${user.name}.form.user_information`;\n\n            if (state.create) {\n              const body = {\n                name: `mas0000.user.${user.name}.form.user_information`,\n                description: `User information for ${user.name}`,\n                values: sendable_data,\n                prototype: state.proto.name\n              };\n\n              RestClient.post(`${CONSTANTS.BASE.ENDPOINTS.FORM}`, body)\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            } else {\n              RestClient.patch(formEndpoint, {\n                description: state.data.description,\n                rename: state.data.name,\n                values: sendable_data\n              })\n                .then(() => {\n                  setState(prev => ({ ...prev, submitResult: 'success' }));\n                })\n                .catch(() => {\n                  actions.setSubmitting(false);\n\n                  setState(prev => ({ ...prev, submitResult: 'fail' }));\n                });\n            }\n          }}\n          innerRef={formRef}\n        >\n          {({ dirty, isSubmitting, submitForm }) => (\n            <>\n              <Paper.Content scrollable>\n                <Form style={{ paddingTop: '16px' }}>\n                  {fields.map(entry => (\n                    <Row key={entry.name}>\n                      <FieldSwitch parameter={entry} />\n                    </Row>\n                  ))}\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <Button color=\"primary\" onClick={modalActions.close}>\n                    Cancel\n                  </Button>\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!dirty || isSubmitting}\n                    onClick={submitForm}\n                  >\n                    Save\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          )}\n        </Formik>\n      </>\n    );\n  }\n};\n\nfunction mapFormValues(proto, provided) {\n  const { fields } = proto;\n  const data = provided && provided.values;\n\n  return fields.reduce(\n    (dict, entry, index) => {\n      const normalized = entry.name.replace(' ', '_');\n      const value = data && data[index].value;\n\n      if (entry.is_repeatable && Array.isArray(entry.value)) {\n        /**\n          TODO: array values have to be unpacked\n         */\n        dict.values[normalized] = value ? value[0] : '';\n      } else {\n        dict.values[normalized] = value || '';\n      }\n\n      dict.fields.push({\n        ...entry,\n        name: normalized,\n        label: entry.name\n      });\n\n      return dict;\n    },\n    { values: {}, fields: [] }\n  );\n}\n\nexport const TextField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    const schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema.required('Field is required');\n    }\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nTextField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const EmailField = ({ parameter, validate: propsValidate }) => {\n  const defaultValidation = value => {\n    let schema = Yup.string().email('Please input a valid Email');\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema.email('Please provide a valid email adress');\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  const validate = propsValidate || defaultValidation;\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nEmailField.propTypes = {\n  parameter: object,\n  validate: func\n};\n\nexport const PhoneNumberField = ({ parameter }) => {\n  const validate = value => {\n    let schema = Yup.string();\n\n    if (parameter.is_required) {\n      schema = schema.required('Field is required');\n    }\n\n    schema = schema\n      .notRequired()\n      .matches(/^(?:\\+?1)? *(?:\\( *[0-9]{3} *\\)|[0-9]{3}(?: *-|)) *[0-9]{3} *- *[0-9]{4}$/, {\n        excludeEmptyString: true,\n        message: 'A valid phone number of form xxx-xxx-xxxx is required.'\n      });\n\n    try {\n      schema.validateSync(value);\n    } catch (e) {\n      return e.message;\n    }\n  };\n\n  return (\n    <Field name={parameter.name} validate={validate}>\n      {({ field, meta }) => {\n        return (\n          <Input\n            {...field}\n            type=\"text\"\n            error={meta.error && meta.touched}\n            helperText={meta.touched ? meta.error : undefined}\n            required={parameter.is_required}\n            label={parameter.label}\n          />\n        );\n      }}\n    </Field>\n  );\n};\n\nPhoneNumberField.propTypes = {\n  parameter: object\n};\n\nconst Field_Types = {\n  string: TextField,\n  'mas0000.sys.phone_number': PhoneNumberField,\n  'mas0000.sys.email_address': EmailField\n};\n\nexport class FieldSwitch extends React.PureComponent {\n  render() {\n    const FieldComponent = this.getComponent();\n\n    return <>{FieldComponent && <FieldComponent {...this.props} />}</>;\n  }\n\n  getComponent() {\n    const { parameter } = this.props;\n    const { data_type } = parameter;\n\n    return Field_Types[data_type];\n  }\n}\n\nFieldSwitch.propTypes = {\n  parameter: object\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiAccountOff } from '@mdi/js';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport './UserCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const UserCard = ({ href, user }) => {\n  const { pathname } = useLocation();\n  const { name, src } = user;\n  const noGroups = user?.member_of === null || user?.member_of?.length === 0;\n  return (\n    <Link\n      to={href}\n      className={classnames('user-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`user-card-of-${name}`}\n    >\n      <Avatar className=\"user-avatar\" alt={name} src={src}>\n        {user.name[0].toUpperCase()}\n      </Avatar>\n      <span className={classnames('user-name', { groupless: noGroups })}>{name}</span>\n      {noGroups && (\n        <LightTooltip placement=\"bottom\" title=\"Deactivated user\">\n          <SvgIcon className=\"deactivated-icon\">\n            <Icon path={mdiAccountOff} />\n          </SvgIcon>\n        </LightTooltip>\n      )}\n    </Link>\n  );\n};\n\nUserCard.propTypes = {\n  href: string,\n  user: object\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoUserSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>User Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a user from the list to view or edit their details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n  </Paper>\n);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Paper, Section, Center, Row, Column } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { NewUserGroups } from './components/NewUserGroups';\n\nimport { createUserThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewUser.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Username is required'),\n  password: Yup.string().required('Password is required'),\n  confirmpassword: Yup.string()\n    .required('Please confim the password you entered')\n    .oneOf([Yup.ref('password'), null], 'Passwords do not match'),\n  groups: Yup.array()\n});\n\nconst CreateNewUser = ({ submitUserValues, allUsers, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.username) ||\n      (values.username && values.username.substr(-1) === '.')\n    ) {\n      errors.username = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allUsers.map(user => {\n      if (exists) return;\n\n      if (user.name === values.username) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.username = 'A user with this name already exists';\n    }\n\n    if (values.password) {\n      if (/[$\\\\/\":;']/.test(values.password)) {\n        errors.password = '$ \\\\ / \" : ; \\' are not an allowed characters';\n      } else if (values.password.length < 8) {\n        errors.password = 'Password must contain at least eight characters';\n      } else if (!/[a-z]/.test(values.password)) {\n        errors.password = 'Password must have at least a lower case letter (ex: a, b, etc.)';\n      } else if (!/[A-Z]/.test(values.password)) {\n        errors.password = 'Password must have at least a upper case letter (ex: A, B, etc.)';\n      } else if (!/[0-9]/.test(values.password)) {\n        errors.password = 'Password must have at least one number digit (ex: 0, 1, 2, etc.)';\n      } else if (!/[!@#%^&*()[\\]{}+=\\-_.,<>]/.test(values.password)) {\n        errors.password =\n          'Password must have at least one special character (! @ # % ^ & * ( ) [ ] { } + = - _ , .<>)';\n      }\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /** Not used. Navigating dirrectly to new user */\n    if (operation.result === 'success') {\n      return (\n        <>\n          <Paper>\n            <Paper.Content scrollable={false}>\n              <Center>\n                <Result type={operation.result}>\n                  <Result.Text>User created successfully</Result.Text>\n                </Result>\n              </Center>\n            </Paper.Content>\n            <Paper.Footer>\n              <Button to=\"/system/mas-accounts/users\" component={Link}>\n                Go to user\n              </Button>\n            </Paper.Footer>\n          </Paper>\n        </>\n      );\n    }\n\n    let errorMessage = 'Could not create new user';\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type={operation.result}>\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        confirmpassword: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitUserValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.username));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid }) => (\n        <Paper>\n          <Form className=\"create-new-user-form\">\n            <Paper.Title>New User</Paper.Title>\n            <Paper.Content>\n              <Section>\n                <Section.Title>User Details</Section.Title>\n                <Section.Content>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"username\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"description\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            label=\"Short Description\"\n                            placeholder=\"Short description\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                  <Row>\n                    <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                      <Field name=\"password\">\n                        {({ field, meta }) => (\n                          <Input\n                            required\n                            {...field}\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                    <Column style={{ maxWidth: '220px' }}>\n                      <Field name=\"confirmpassword\">\n                        {({ field, meta }) => (\n                          <Input\n                            {...field}\n                            autoComplete=\"off\"\n                            required\n                            label=\"Confirm Password\"\n                            placeholder=\"Confirm Passwords\"\n                            type=\"password\"\n                            error={!!meta.error}\n                            helperText={meta.error}\n                          />\n                        )}\n                      </Field>\n                    </Column>\n                  </Row>\n                </Section.Content>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <NewUserGroups\n                      groups={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Paper.Content>\n\n            <Paper.Footer>\n              <div className=\"left-side-action\">\n                <Button to=\"/system/mas-accounts/users\" color=\"primary\">\n                  Cancel\n                </Button>\n              </div>\n\n              <Button type=\"submit\" variant=\"contained\" disabled={isSubmitting || !isValid}>\n                Save\n              </Button>\n            </Paper.Footer>\n          </Form>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewUser.propTypes = { submitUserValues: func };\n\nexport const CreateNewUserPage = connect(\n  state => ({\n    allUsers: state.usersManager.users.all,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitUserValues: values => dispatch(createUserThunk(values))\n  })\n)(CreateNewUser);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './NewUserGroups.local.scss';\n\nexport const NewUserGroups = ({ groups, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {groups.map(group_name => (\n            <li className=\"group-card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = groups.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"group-card-item\" key=\"add-user-to-groups\">\n            <GroupsSelection\n              selected={groups}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nNewUserGroups.propTypes = {\n  username: string,\n  groups: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Modal from '@material-ui/core/Modal';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal\n        aria-labelledby=\"edit-user-groups-modal-title\"\n        aria-describedby=\"edit-user-groups-modal-description\"\n        open={open}\n        onClose={closeModal}\n        disableBackdropClick\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: 'calc(75vw)',\n            height: 'calc(75vh)'\n          }}\n        >\n          <Paper>\n            <ModalHeader\n              avatar={\n                <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                  <GroupAddIcon />\n                </Avatar>\n              }\n              title=\"Add to Group\"\n              desc=\"Please select the groups you want to add this user to\"\n              aria={{\n                title: 'edit-user-groups-modal-title',\n                desc: 'edit-user-groups-modal-description'\n              }}\n              onClose={closeModal}\n              changedForm={isFormChanged}\n            />\n\n            <Paper.Content scrollable={false}>\n              <GroupsList\n                selected={selected}\n                helpers={helpers}\n                closeModal={closeModal}\n                setIsFormChanged={setIsFormChanged}\n                retrieveGroupDescription={retrieveGroupDescription}\n              />\n            </Paper.Content>\n          </Paper>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({\n  selected,\n  helpers,\n  closeModal,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                      setIsFormChanged(true);\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { string, object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport './GroupCard.local.scss';\n\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n\nexport const GroupCard = ({ href, group }) => {\n  const { pathname } = useLocation();\n\n  const { name, src } = group;\n  return (\n    <Link\n      to={href}\n      className={classnames('group-card', { selected: pathname.endsWith(`/${name}`) })}\n      data-qa={`group-card-of-${name}`}\n    >\n      <Avatar className=\"group-avatar\" alt={name} src={src}>\n        {group.name[0].toUpperCase()}\n      </Avatar>\n      <span className=\"group-name\">{name}</span>\n    </Link>\n  );\n};\n\nGroupCard.propTypes = {\n  href: string,\n  group: object\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { object, func, bool } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { Switch, Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Button } from 'shared/components/controls';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Loader } from 'shared/components/loaders';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiTrashCan } from '@mdi/js';\n\nimport { loadGroupThunk, removeGroupThunk } from '../../store/thunks';\nimport { PrivilegesContainer } from './containers/Privileges';\nimport { GroupUsersContainer } from './containers/GroupUsers';\nimport { SubGroupsContainer } from './containers/SubGroups';\n\nimport './GroupView.local.scss';\n\nexport const GroupView = ({ group, removing, removeGroup }) => {\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setOpen(false);\n    }, [])\n  };\n\n  const deleteGroup = useCallback(() => {\n    removeGroup(group.name)\n      .then(() => {\n        setResult('attempt');\n        setOpen(false);\n        history.push('/system/mas-accounts/groups');\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group!'); // eslint-disable-line\n      });\n  }, [group]);\n\n  /* This needs to be written as a result check or 404 page for a group. */\n  if (!group) {\n    return <></>;\n  }\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Paper flex=\"column\">\n        <Paper.Header>\n          <Paper.Title>{group.name}</Paper.Title>\n        </Paper.Header>\n\n        <Paper.Content scrollable>\n          <PrivilegesContainer />\n          <GroupUsersContainer />\n          <SubGroupsContainer />\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Left>\n            <Button color=\"secondary\" disabled={removing} onClick={modalActions.open}>\n              Remove\n            </Button>\n          </Paper.Footer.Left>\n        </Paper.Footer>\n      </Paper>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            minWidth: '400px',\n            maxHeight: '368px',\n            maxWidth: '65vw'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove group {group.name}? This could affect the way\n                    the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      deleteGroup();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupView.propTypes = {\n  group: object,\n  removing: bool,\n  removeGroup: func\n};\n\nexport const ConnectedGroupView = connect(\n  state => ({\n    group: state.groups.selected,\n    removing: state.groups.ops.remove.loading\n  }),\n  dispatch => ({\n    removeGroup: name => dispatch(removeGroupThunk(name))\n  })\n)(GroupView);\n\nexport const GroupLoader = ({ loadGroup, loading }) => {\n  const { groupName } = useParams();\n  useEffect(() => {\n    if (groupName) {\n      loadGroup(groupName);\n    }\n  }, [groupName]);\n\n  return (\n    <>\n      {loading ? (\n        <Loader>\n          Loading Group <b>{groupName}</b>\n        </Loader>\n      ) : (\n        <ConnectedGroupView />\n      )}\n    </>\n  );\n};\n\nGroupLoader.propTypes = {\n  loadGroup: func,\n  loading: bool\n};\n\nexport const ConnectedGroupLoader = connect(\n  state => ({\n    loading: state.groups.ops.selected.loading\n  }),\n  dispatch => ({ loadGroup: name => dispatch(loadGroupThunk(name)) })\n)(GroupLoader);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React from 'react';\nimport { object, string, array, bool, func, shape } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport './Privileges.local.scss';\n\nimport { Checkbox } from 'shared/components/controls';\nimport { Section } from 'shared/components/layout';\nimport { grantPrivilegeThunk, revokePrivilegeThunk } from '../../../store/thunks';\n\nexport const Privileges = ({ group, privileges, disabled, grant, revoke }) => {\n  const actions = { grant, revoke };\n\n  return (\n    <Section>\n      <Section.Header>\n        <Section.Title>Class privileges:</Section.Title>\n        <Section.Info>\n          Effective class privileges are calculated based on explicit grants and denies in this\n          group and in groups of which this group may be a member\n        </Section.Info>\n      </Section.Header>\n      <div className=\"user-privileges\">\n        <ul className=\"privileges-list\">\n          {privileges.map(entry => {\n            return (\n              <li key={entry.key} className=\"privileges-item\">\n                <Privilege group={group} privilege={entry} actions={actions} disabled={disabled} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Section>\n  );\n};\n\nPrivileges.propTypes = {\n  group: object,\n  privileges: array,\n  disabled: bool,\n  grant: func,\n  revoke: func\n};\n\nexport const Privilege = ({ group, privilege, disabled, actions }) => {\n  const { key, granted, type } = privilege;\n  const handler = () => {\n    const thunk = granted ? actions.revoke : actions.grant;\n\n    thunk(group.name, key, type);\n  };\n\n  return (\n    <Checkbox\n      data-qa={`privilege-${key}`}\n      disabled={disabled}\n      label={capitalize(key)}\n      checked={granted}\n      onChange={handler}\n    />\n  );\n};\n\nPrivilege.propTypes = {\n  group: object,\n  privilege: shape({\n    key: string,\n    type: string,\n    granted: bool\n  }),\n  disabled: bool,\n  actions: shape({\n    grant: func,\n    revoke: func\n  })\n};\n\nexport const PrivilegesContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      disabled: state.groups.ops.privileges.loading,\n      privileges: mapPrivileges(group.class_privileges)\n    };\n  },\n  dispatch => ({\n    grant: (group, key, type) =>\n      dispatch(\n        grantPrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      ),\n    revoke: (group, key, type) =>\n      dispatch(\n        revokePrivilegeThunk({\n          group,\n          type,\n          key\n        })\n      )\n  })\n)(Privileges);\n\nfunction mapPrivileges(data) {\n  const {\n    effective,\n    actual: { granted }\n  } = data;\n\n  const keys = Object.keys(effective).sort();\n\n  return keys.reduce((list, key) => {\n    const privilege = {\n      key,\n      /**\n       * Fix: create is given as implicit type for grant/revoke.\n       */\n      type: effective[key][0] || 'create',\n      granted: !!granted[key].length\n    };\n\n    list.push(privilege);\n\n    return list;\n  }, []);\n}\n\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport './GroupUsers.local.scss';\nimport { EditGroupUsersContainer } from './EditGroupUsers';\n\nimport { removeUsersFromGroupThunk } from '../../../store/thunks';\n\nexport const GroupUsers = ({ group, removeUsersFromGroup }) => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeUsersFromGroup(group.name, selectedUser)\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove user from group!'); // eslint-disable-line\n      });\n  }, [group, selectedUser]);\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Users in this group</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.users.map(user => (\n              <li className=\"card-item\" key={user}>\n                <AvatarCard\n                  label={user}\n                  avatar={{ initial: user.charAt(0) }}\n                  action={\n                    <SvgIcon\n                      onClick={e => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setSelectedUser(user);\n                        modalActions.open();\n                      }}\n                    >\n                      <path d={mdiDeleteCircleOutline} />\n                    </SvgIcon>\n                  }\n                />\n              </li>\n            ))}\n            <li className=\"card-item\" key=\"add-user-to-groups\">\n              <EditGroupUsersContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove user from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>\n                    Are you sure you want to remove user {selectedUser} from group {group.name}?\n                    This could affect the way the user will be able to interact with the app.\n                  </BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    Yes\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nGroupUsers.propTypes = {\n  group: object,\n  removeUsersFromGroup: func\n};\n\nexport const GroupUsersContainer = connect(\n  state => ({\n    group: state.groups.selected\n  }),\n  dispatch => ({\n    removeUsersFromGroup: (group, user) => dispatch(removeUsersFromGroupThunk({ group, user }))\n  })\n)(GroupUsers);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { addUsersToGroupThunk } from '../../../store/thunks';\n\nimport './EditGroupUsers.local.scss';\n\nexport const EditGroupUsers = ({ group, addUsersToGroup }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add user\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the users you want to add this group\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <UsersSelection\n                  group={group}\n                  closeModal={closeModal}\n                  onAdd={selections => {\n                    return addUsersToGroup(group.name, selections);\n                  }}\n                  setIsFormChanged={setIsFormChanged}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditGroupUsers.propTypes = {\n  group: object,\n  addUsersToGroup: func\n};\n\nexport const EditGroupUsersContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return { group };\n  },\n  dispatch => ({\n    addUsersToGroup: (group, users) => dispatch(addUsersToGroupThunk({ group, users }))\n  })\n)(EditGroupUsers);\n\nconst UsersSelection = ({ group, closeModal, onAdd, setIsFormChanged }) => {\n  const [state, setState] = useState({\n    selections: [],\n    usersFetched: false,\n    usersSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll ? [...state.all] : state.all.filter(u => !group.users.includes(u.name));\n  }, [state.all, state.showAll, group]);\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.USERS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.users;\n            draft.usersFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.usersFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (state.usersFetched && (!state.all.length || state.result === 'fail')) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>\n              {state.error ? capitalizeFirstLetter(state.error) : 'Could not retrieve user list!'}\n            </Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected users to group succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.usersFetched && state.usersSubmitted && state.result === 'fail') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not add users to group!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered.sort((a, b) =>\n              a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n            )}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={state.showAll ? group.users.includes(entry.name) : false}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      initial: entry.name.charAt(0)\n                    }}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show users that are members of this group\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              /**\n                NOTE: (to self)\n\n                This is lim 0 -> complete trash\n\n                Can't use redux for snippets of this operation.\n                The redux action that is required should only be to update final group entry at maximum.\n\n                Either all ops are in redux, or none are.\n               */\n              onAdd(state.selections).then(response => {\n                setState(prev =>\n                  produce(prev, draft => {\n                    draft.loading = false;\n                    draft.usersSubmitted = true;\n                    draft.result = response?.result;\n                    draft.error = response?.messages;\n                  })\n                );\n              });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nUsersSelection.propTypes = {\n  group: object,\n  onAdd: func,\n  closeModal: func\n};\n","import React, { useState, useCallback } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Section, Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline, mdiAccountGroup, mdiTrashCan } from '@mdi/js';\n\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Switch, Center } from 'shared/components';\nimport { Button } from 'shared/components/controls';\nimport { Loader } from 'shared/components/loaders';\nimport { capitalizeFirstLetter } from 'shared/lib/capitalize-first-letter';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { EditSubGroupsContainer } from './EditSubGroups';\nimport { removeSubGroupsThunk } from '../../../store/thunks';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ group, removeSubGroups, retrieveGroupDescription }) => {\n  const [selectedGroup, setSelectedGroup] = useState('');\n  const [errorMessage, setErrorMessage] = useState('An error occurred.');\n  const [result, setResult] = useState('attempt');\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setResult('attempt');\n      setErrorMessage('An error occurred.');\n      setOpen(false);\n    }, [])\n  };\n\n  const remove = useCallback(() => {\n    removeSubGroups(group.name, [selectedGroup])\n      .then(response => {\n        if (typeof response === 'object' && response.result === 'fail') {\n          setResult('error');\n          setErrorMessage(response.messages);\n        } else {\n          setResult('attempt');\n          setErrorMessage('An error occurred.');\n          setOpen(false);\n        }\n      })\n      .catch(() => {\n        setResult('attempt');\n        setOpen(false);\n        console.log('Could not remove group from group!'); // eslint-disable-line\n      });\n  }, [group, selectedGroup]);\n\n  const isOnlySelect = group?.member_of?.length === 1 && group?.member_of[0] === 'select';\n  const questionMessage = isOnlySelect\n    ? 'If a user is removed from the select group they will lose all visibility to MAS features and output.  Are you sure you want to continue?'\n    : `Are you sure you want to remove group ${group.name} from group ${selectedGroup}?\n      This could affect the way the user will be able to interact with the app.`;\n\n  return (\n    <>\n      <Section>\n        <Section.Header>\n          <Section.Title>Member of groups</Section.Title>\n        </Section.Header>\n        <div>\n          <ul className=\"card-list\">\n            {group.member_of\n              .filter(g => g !== 'user')\n              .sort((a, b) => a.toLowerCase().localeCompare(b.toLowerCase()))\n              .map(subgroup => (\n                <li className=\"card-item\" key={subgroup}>\n                  <AvatarCard\n                    label={subgroup}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    action={\n                      <SvgIcon\n                        onClick={e => {\n                          e.preventDefault();\n                          e.stopPropagation();\n                          setSelectedGroup(subgroup);\n                          modalActions.open();\n                        }}\n                      >\n                        <path d={mdiDeleteCircleOutline} />\n                      </SvgIcon>\n                    }\n                    description={retrieveGroupDescription(subgroup)}\n                  />\n                </li>\n              ))}\n            <li className=\"card-item\" key=\"add-sub-group\">\n              <EditSubGroupsContainer />\n            </li>\n          </ul>\n        </div>\n      </Section>\n      <Modal open={open} actions={modalActions}>\n        <Paper\n          style={{\n            width: '50vw',\n            height: '50vh'\n          }}\n        >\n          <ModalHeader\n            title=\"Remove group from group\"\n            icon={\n              <SvgIcon>\n                <path d={mdiTrashCan} />\n              </SvgIcon>\n            }\n          />\n          <Switch value={result}>\n            <Switch.Case value=\"attempt\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{questionMessage}</BodyText>\n                </Result>\n              </Paper.Content>\n              <Paper.Footer>\n                {isOnlySelect && (\n                  <Paper.Footer.Left>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        setResult('attempt');\n                        setOpen(false);\n                      }}\n                    >\n                      Cancel\n                    </Button>\n                  </Paper.Footer.Left>\n                )}\n                <Paper.Footer.Right>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('removing');\n                      remove();\n                    }}\n                  >\n                    {isOnlySelect ? 'Continue' : 'Yes'}\n                  </Button>\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </Switch.Case>\n            <Switch.Case value=\"removing\">\n              <Paper.Content scrollable={false}>\n                <Center>\n                  <Loader>Removing...</Loader>\n                </Center>\n              </Paper.Content>\n            </Switch.Case>\n            <Switch.Case value=\"error\">\n              <Paper.Content scrollable={false}>\n                <Result type=\"fail\">\n                  <BodyText>{capitalizeFirstLetter(errorMessage)}</BodyText>\n                </Result>\n                <Paper.Footer>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setResult('attempt');\n                      setErrorMessage('An error occurred.');\n                      setOpen(false);\n                    }}\n                  >\n                    Close\n                  </Button>\n                </Paper.Footer>\n              </Paper.Content>\n            </Switch.Case>\n          </Switch>\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nSubGroups.propTypes = {\n  group: object,\n  removeSubGroups: func\n};\n\nexport const SubGroupsContainer = connect(\n  state => ({\n    group: state.groups.selected,\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    removeSubGroups: (group, groups) => dispatch(removeSubGroupsThunk({ group, groups }))\n  })\n)(SubGroups);\n\nfunction BodyText({ children }) {\n  return (\n    <h2\n      style={{\n        fontFamily: 'Open Sans',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        fontSize: '14px',\n        lineHeight: '20px',\n        letterSpacing: '0.25px',\n        marginTop: '24px'\n      }}\n    >\n      {children}\n    </h2>\n  );\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { produce } from 'immer';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { mdiAccountGroup, mdiAccountMultiplePlus } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\nimport { creators } from 'shared/lib/redux-utils';\n\nimport { Button, Checkbox } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\nimport { getGroupDescription } from '../../../../store/selectors';\n\nimport { PATCH_SELECTED_GROUP } from '../../../store/actions';\n\nimport './EditSubGroups.local.scss';\n\nexport const EditSubGroups = ({ group, updateGroup, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n  // could use memo and callback\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n    setIsFormChanged(false);\n  };\n\n  const modalActions = {\n    close: closeModal,\n    open: openModal\n  };\n\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"edit-user-groups\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountMultiplePlus} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <SvgIcon>\n                      <path d={mdiAccountGroup} />\n                    </SvgIcon>\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select which groups this one should be a part of\"\n                aria={aria}\n                onClose={actions.close}\n                changedForm={isFormChanged}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupSelection\n                  group={group}\n                  updateGroup={updateGroup}\n                  closeModal={actions.close}\n                  setIsFormChanged={setIsFormChanged}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nEditSubGroups.propTypes = {\n  group: object,\n  updateGroup: func\n};\n\nexport const EditSubGroupsContainer = connect(\n  state => {\n    const group = state.groups.selected;\n\n    return {\n      group,\n      retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n    };\n  },\n  dispatch => ({\n    updateGroup: group => dispatch(creators.action(PATCH_SELECTED_GROUP, group))\n  })\n)(EditSubGroups);\n\nconst GroupSelection = ({\n  group,\n  closeModal,\n  updateGroup,\n  setIsFormChanged,\n  retrieveGroupDescription\n}) => {\n  const [state, setState] = useState({\n    selections: [],\n    groupsFetched: false,\n    subgroupsSubmitted: false,\n    loading: true,\n    result: undefined,\n    all: [],\n    showAll: false\n  });\n\n  const filtered = useMemo(() => {\n    return state.showAll\n      ? state.all\n          .filter(g => g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\n      : state.all\n          .filter(g => !group.member_of.includes(g.name) && g.name !== 'user')\n          .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n  }, [state.all, state.showAll, group]);\n\n  const isDisabled = name => {\n    if (group.name === name) {\n      return true;\n    }\n\n    if (state.showAll) {\n      return group.member_of.includes(name);\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}`, { page_size: 2147483645 })\n      .then(({ data: resolved }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = resolved.data.groups;\n            draft.groupsFetched = true;\n            draft.result = resolved.result;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(({ data: rejected }) => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.error = rejected.messages;\n            draft.groupsFetched = true;\n            draft.result = rejected.result;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader>Loading...</Loader>;\n  }\n\n  if (\n    state.groupsFetched &&\n    (!state.all.length || (state.result === 'fail' && !state.subgroupError))\n  ) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not retrieve groups list!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'success') {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"success\">\n            <Result.Text>Added selected groups succesfully!</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Confirm\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  if (state.groupsFetched && state.subgroupsSubmitted && state.result === 'fail') {\n    let errorMessage = 'Could not add selected groups!';\n\n    if (\n      state.error &&\n      state.error[0] &&\n      state.error[0].text &&\n      state.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = state.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>{errorMessage}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              closeModal();\n            }}\n          >\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ width: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      setState(prev =>\n                        produce(prev, draft => {\n                          const selections = new Set(prev.selections);\n\n                          if (selections.has(entry.name)) {\n                            selections.delete(entry.name);\n                          } else {\n                            selections.add(entry.name);\n                          }\n\n                          draft.selections = [...selections];\n                        })\n                      );\n                      setIsFormChanged(true);\n                    }}\n                    disabled={isDisabled(entry.name)}\n                    selected={state.selections.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{\n                      fallback: (\n                        <SvgIcon>\n                          <path d={mdiAccountGroup} />\n                        </SvgIcon>\n                      )\n                    }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Checkbox\n            checked={state.showAll}\n            onInput={() => setState(prev => ({ ...prev, showAll: !prev.showAll }))}\n            label=\"Show groups that this one already is a member of\"\n          />\n        </Paper.Footer.Left>\n        <Paper.Footer.Right>\n          <Button\n            disabled={!state.selections.length}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              setState(prev =>\n                produce(prev, draft => {\n                  draft.loading = true;\n                })\n              );\n\n              RestClient.patch(`${CONSTANTS.BASE.ENDPOINTS.GROUPS}/${group.name}/grant`, {\n                groups: state.selections\n              })\n                .then(({ data: resolved }) => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = resolved.result;\n                      draft.subgroupError = false;\n                    })\n                  );\n\n                  updateGroup(resolved.data.groups[0]);\n                })\n                .catch(error => {\n                  setState(prev =>\n                    produce(prev, draft => {\n                      draft.loading = false;\n                      draft.subgroupsSubmitted = true;\n                      draft.result = 'fail';\n                      draft.error = error?.response?.data?.messages;\n                      draft.subgroupError = true;\n                    })\n                  );\n                });\n            }}\n          >\n            Add\n          </Button>\n        </Paper.Footer.Right>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupSelection.propTypes = {\n  group: object,\n  updateGroup: func,\n  closeModal: func\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { Button, Input } from 'shared/components/controls';\n\nimport { Center } from 'shared/components';\nimport { Paper, Section, Column, Row } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays';\n\nimport { Formik, Form, Field, FieldArray } from 'formik';\n\nimport { createGroupThunk } from '../../store/thunks';\n\nimport { SubGroups } from './components/SubGroups';\nimport { getGroupDescription } from '../../../store/selectors';\n\nimport './CreateNewGroup.local.scss';\n\nconst validationSchema = Yup.object().shape({\n  groupname: Yup.string()\n    .min(3, 'Invalid length')\n    .required('Group name is required'),\n  groups: Yup.array()\n});\n\nconst CreateNewGroup = ({ submitGroupValues, allGroups, retrieveGroupDescription }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [operation, setOperation] = useState({ done: false });\n\n  const extraValidations = values => {\n    const errors = {};\n\n    if (\n      !/^(?:[a-z_][a-z0-9_.]*)$/i.test(values.groupname) ||\n      (values.groupname && values.groupname.substr(-1) === '.')\n    ) {\n      errors.groupname = 'A valid name is required';\n    }\n\n    let exists = false;\n\n    allGroups.map(group => {\n      if (exists) return;\n\n      if (group.name === values.groupname) {\n        exists = true;\n      }\n      return null;\n    });\n\n    if (exists) {\n      errors.groupname = 'A group with this name already exists';\n    }\n\n    return errors;\n  };\n\n  if (operation.done) {\n    /**\n     * Failed results are the ony onnes that are shown.\n     * For successfull creation, the user is navigated to the new entry\n     */\n    let errorMessage = 'Could not create new group';\n\n    if (\n      operation.result === 'fail' &&\n      operation.error &&\n      operation.error[0] &&\n      operation.error[0].text &&\n      operation.error[0].text.split('\\n').length > 0\n    ) {\n      [errorMessage] = operation.error[0].text.split('\\n');\n    }\n\n    return (\n      <>\n        <Paper>\n          <Paper.Content scrollable={false}>\n            <Center>\n              <Result type=\"fail\">\n                <Result.Text>{errorMessage}</Result.Text>\n              </Result>\n            </Center>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setOperation({ done: false, result: undefined, error: undefined });\n              }}\n            >\n              Retry\n            </Button>\n          </Paper.Footer>\n        </Paper>\n      </>\n    );\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        groupname: '',\n        description: '',\n        groups: []\n      }}\n      validationSchema={validationSchema}\n      validate={extraValidations}\n      onSubmit={async values => {\n        try {\n          const result = await submitGroupValues(values);\n\n          if (result.result === 'success') {\n            history.push(location.pathname.replace('create-new', values.groupname));\n          }\n\n          if (result.result === 'fail') {\n            setOperation({\n              done: true,\n              result: 'fail',\n              error: result.messages\n            });\n          }\n        } catch (error) {\n          setOperation({\n            done: true,\n            result: 'fail',\n            error: error?.messages\n          });\n        }\n      }}\n    >\n      {({ values, isSubmitting, isValid, submitForm }) => (\n        <Paper>\n          <Paper.Title>New Group</Paper.Title>\n          <Paper.Content>\n            <Form className=\"create-new-group-form\">\n              <Section>\n                <Section.Title>Group Details</Section.Title>\n                <Row>\n                  <Column style={{ maxWidth: '220px', padding: '0', marginRight: '24px' }}>\n                    <Field name=\"groupname\">\n                      {({ field, meta }) => (\n                        <Input\n                          required\n                          {...field}\n                          label=\"Group Name\"\n                          placeholder=\"Group Name\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                  <Column style={{ maxWidth: '220px' }}>\n                    <Field name=\"description\">\n                      {({ field, meta }) => (\n                        <Input\n                          {...field}\n                          label=\"Short Description\"\n                          placeholder=\"Short Description\"\n                          error={!!meta.error}\n                          helperText={meta.error}\n                        />\n                      )}\n                    </Field>\n                  </Column>\n                </Row>\n              </Section>\n              <Section full>\n                <Section.Title>Member of groups</Section.Title>\n                <FieldArray name=\"groups\">\n                  {helpers => (\n                    <SubGroups\n                      selections={values.groups}\n                      helpers={helpers}\n                      retrieveGroupDescription={retrieveGroupDescription}\n                    />\n                  )}\n                </FieldArray>\n              </Section>\n            </Form>\n          </Paper.Content>\n\n          <Paper.Footer>\n            <Paper.Footer.Left>\n              <Button to=\"/system/mas-accounts/groups\" color=\"primary\">\n                Cancel\n              </Button>\n            </Paper.Footer.Left>\n\n            <Paper.Footer.Right>\n              <Button\n                type=\"submit\"\n                onClick={submitForm}\n                variant=\"contained\"\n                disabled={isSubmitting || !isValid}\n              >\n                Save\n              </Button>\n            </Paper.Footer.Right>\n          </Paper.Footer>\n        </Paper>\n      )}\n    </Formik>\n  );\n};\n\nCreateNewGroup.propTypes = { submitGroupValues: func };\n\nexport const CreateNewGroupPage = connect(\n  state => ({\n    allGroups: state.groups.all.filter(g => g.name !== 'user'),\n    retrieveGroupDescription: name => getGroupDescription(name, state.groups.all)\n  }),\n  dispatch => ({\n    submitGroupValues: values => dispatch(createGroupThunk(values))\n  })\n)(CreateNewGroup);\n","import React from 'react';\nimport { string, array, object } from 'prop-types';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiDeleteCircleOutline } from '@mdi/js';\nimport { ScrollableContainer } from 'shared/components/layout';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { GroupsSelection } from './GroupsSelection';\n\nimport './SubGroups.local.scss';\n\nexport const SubGroups = ({ selections, helpers, retrieveGroupDescription }) => {\n  return (\n    <ScrollableContainer variant=\"row white\">\n      {passed => (\n        <ul {...passed}>\n          {selections.map(group_name => (\n            <li className=\"card-item\" key={group_name}>\n              <AvatarCard\n                label={group_name}\n                avatar={{ fallback: <GroupAddIcon /> }}\n                action={\n                  <SvgIcon\n                    onClick={e => {\n                      e.preventDefault();\n                      e.stopPropagation();\n\n                      const existing = selections.indexOf(group_name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      }\n                    }}\n                  >\n                    <path d={mdiDeleteCircleOutline} />\n                  </SvgIcon>\n                }\n                description={retrieveGroupDescription(group_name)}\n              />\n            </li>\n          ))}\n          <li className=\"card-item\" key=\"add-group-to-groups\">\n            <GroupsSelection\n              selected={selections}\n              helpers={helpers}\n              retrieveGroupDescription={retrieveGroupDescription}\n            />\n          </li>\n        </ul>\n      )}\n    </ScrollableContainer>\n  );\n};\n\nSubGroups.propTypes = {\n  username: string,\n  selections: array,\n  helpers: object\n};\n","import React, { useState, useEffect } from 'react';\nimport { object, array, func } from 'prop-types';\nimport { produce } from 'immer';\n\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { mdiAccountGroup } from '@mdi/js';\n\nimport { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nimport { Button } from 'shared/components/controls';\n\nimport { Paper } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\nimport { Modal, ModalHeader, Result } from 'shared/components/overlays';\n\nimport { AvatarCard } from '../../../../components/AvatarCard/AvatarCard';\n\nimport { SearchableList } from '../../../../components/SearchableList/SearchableList';\n\nimport './GroupsSelection.local.scss';\n\nexport const GroupsSelection = ({ selected, helpers, retrieveGroupDescription }) => {\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const modalActions = {\n    open: openModal,\n    close: closeModal\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <>\n      <div tabIndex={0} role=\"button\" className=\"add-to-group-button\" onClick={openModal}>\n        <AvatarCard\n          label=\"Add to Group\"\n          avatar={{\n            fallback: (\n              <SvgIcon>\n                <path d={mdiAccountGroup} />\n              </SvgIcon>\n            )\n          }}\n        />\n      </div>\n      <Modal open={open} actions={modalActions}>\n        {({ aria, actions }) => (\n          <div\n            style={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: 'calc(75vw)',\n              height: 'calc(75vh)'\n            }}\n          >\n            <Paper>\n              <ModalHeader\n                avatar={\n                  <Avatar className=\"generic-avatar\" alt=\"edit-user-groups\">\n                    <GroupAddIcon />\n                  </Avatar>\n                }\n                title=\"Add to Group\"\n                desc=\"Please select the groups you want to add this user to\"\n                aria={aria}\n                onClose={actions.close}\n              />\n              <Paper.Content scrollable={false}>\n                <GroupsList\n                  selected={selected}\n                  helpers={helpers}\n                  closeModal={actions.close}\n                  retrieveGroupDescription={retrieveGroupDescription}\n                />\n              </Paper.Content>\n            </Paper>\n          </div>\n        )}\n      </Modal>\n    </>\n  );\n};\n\nGroupsSelection.propTypes = {\n  selected: array,\n  helpers: object\n};\n\nconst GroupsList = ({ selected, helpers, closeModal, retrieveGroupDescription }) => {\n  const [state, setState] = useState({\n    all: [],\n    loading: true,\n    result: undefined,\n    done: false\n  });\n\n  const filtered = state.all\n    .filter(g => g.name !== 'user')\n    .sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n\n  useEffect(() => {\n    RestClient.get(CONSTANTS.BASE.ENDPOINTS.GROUPS, { page_size: 2147483645 })\n      .then(response => {\n        const data = response.data.data.groups;\n\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = data;\n            draft.result = response.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      })\n      .catch(error => {\n        setState(prev =>\n          produce(prev, draft => {\n            draft.all = [];\n            draft.result = error.result;\n            draft.done = true;\n            draft.loading = false;\n          })\n        );\n      });\n  }, []);\n\n  if (state.loading) {\n    return <Loader />;\n  }\n\n  if (state.done && !state.all.length) {\n    return (\n      <>\n        <Paper.Content>\n          <Result type=\"fail\">\n            <Result.Text>Could not load groups list</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n            Close\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Content>\n        <div className=\"seachable-list-container\">\n          <SearchableList\n            items={filtered}\n            filter={(item, query) => item.name.toLowerCase().includes(query.toLowerCase())}\n            variant=\"row\"\n            visibleScroll\n          >\n            {entry => {\n              return (\n                <div className=\"card-wrap\" style={{ minWidth: '178px', maxWidth: '178px' }}>\n                  <AvatarCard\n                    onClick={() => {\n                      const existing = selected.indexOf(entry.name);\n\n                      if (existing !== -1) {\n                        helpers.remove(existing);\n                      } else {\n                        helpers.push(entry.name);\n                      }\n                    }}\n                    selected={selected.includes(entry.name)}\n                    label={entry.name}\n                    avatar={{ fallback: <GroupIcon /> }}\n                    description={retrieveGroupDescription(entry.name)}\n                  />\n                </div>\n              );\n            }}\n          </SearchableList>\n        </div>\n      </Paper.Content>\n      <Paper.Footer>\n        <Button variant=\"contained\" color=\"primary\" onClick={closeModal}>\n          Confirm\n        </Button>\n      </Paper.Footer>\n    </>\n  );\n};\n\nGroupsList.propTypes = {\n  selected: array,\n  helpers: object,\n  closeModal: func\n};\n","import React from 'react';\n\nimport { Paper, Section } from 'shared/components/layout';\n\nexport const NoGroupSelectedPage = () => (\n  <Paper>\n    <Paper.Header>\n      <Paper.Title>Group Viewer</Paper.Title>\n    </Paper.Header>\n    <Paper.Content>\n      <Section>\n        <Section.Title>\n          Please select a group from the list to view or edit its details.\n        </Section.Title>\n      </Section>\n    </Paper.Content>\n    {/* <Paper.Footer /> */}\n  </Paper>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { mdiHexagonMultipleOutline } from '@mdi/js';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\n\nimport { changeStateThunk } from '../../../store/thunks';\n\nimport { ServerList } from '../ServerList/ServerList';\n\nimport './Dbms.local.scss';\n\nexport class DBMS extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"dbms-item\">\n        <header>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.protocol}-dbms`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiHexagonMultipleOutline} />\n              </SvgIcon>\n            </div>\n            <div\n              className={`value ${path.startsWith(data.path) ? 'active' : ''}`}\n              title={data.protocol}\n            >\n              {data.protocol}\n            </div>\n          </div>\n          <div\n            role=\"presentation\"\n            data-qa={`toggle-${data.protocol}-dbms`}\n            className={`status ${path.startsWith(data.path) ? 'active' : ''}`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <RemoveIcon /> : <AddIcon />}\n          </div>\n        </header>\n        <ul className=\"dbms-content\">{isExpanded && <ServerList servers={data.servers} />}</ul>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nDBMS.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDBMS = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(DBMS);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedServer } from './containers/Server/Server';\n\nexport class ServerList extends React.PureComponent {\n  render() {\n    const { servers } = this.props;\n\n    return servers.map(server => <ConnectedServer key={server.address} data={server} />);\n  }\n}\n\nServerList.propTypes = {\n  servers: array\n};\n\nexport default ServerList;\n","import React from 'react';\nimport { object, func } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\nimport { DatabaseList } from '../../../DatabaseList/DatabaseList';\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Server.local.scss';\nimport { SystemExplorerFeatureUtil } from '../../../../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../../../../shared/components';\n\nexport class Server extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false,\n      autoExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.storeState.path === props.data.path && !state.autoExpanded) {\n      return { isExpanded: true, autoExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n    const { isExpanded } = this.state;\n\n    return (\n      <li className=\"server-item\">\n        <header className={this.isActive(path, data.path)}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${data.address}-server`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\">\n              <LightTooltip placement=\"top\" title={data.address}>\n                <span>{SystemExplorerFeatureUtil.splitAccountName(data.name) || data.address}</span>\n              </LightTooltip>\n            </div>\n          </div>\n          <div\n            className=\"status\"\n            role=\"presentation\"\n            data-qa={`toggle-${data.address}-server`}\n            onClick={this.toggleExpanded}\n          >\n            {isExpanded ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n          </div>\n        </header>\n        <ul className=\"server-content\">\n          {isExpanded && <DatabaseList databases={data.databases} />}\n        </ul>\n      </li>\n    );\n  }\n\n  isActive = (path, current) => {\n    const activePath = current.split('--');\n    const storedPath = path.split('--');\n\n    if (activePath[0] === storedPath[0] && activePath[1] === storedPath[1]) {\n      return 'active';\n    }\n\n    return '';\n  };\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n    this.setState({ isExpanded: true });\n  };\n}\n\nServer.propTypes = {\n  data: object,\n  storeState: object,\n  changeState: func\n};\n\nexport const ConnectedServer = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Server);\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport { ConnectedDatabase } from './containers/Database/Database';\n\nexport class DatabaseList extends React.PureComponent {\n  render() {\n    const { databases } = this.props;\n\n    if (!databases) return null;\n\n    return databases.map(database => <ConnectedDatabase key={database.name} data={database} />);\n  }\n}\n\nDatabaseList.propTypes = {\n  databases: array\n};\n\nexport default DatabaseList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDatabase } from '@mdi/js';\n\nimport { changeStateThunk } from '../../../../../store/thunks';\n\nimport './Database.local.scss';\n\nexport class Database extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    if (props.storeState.path === props.data.path) {\n      return { isExpanded: true };\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      data,\n      storeState: { path }\n    } = this.props;\n\n    const name = data.special.database;\n\n    return (\n      <li className=\"database-item\">\n        <header className={`${data.path === path ? 'active' : ''}`}>\n          <div\n            role=\"presentation\"\n            data-qa={`select-${name}-database`}\n            onClick={() => this.setPath(data.path)}\n          >\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDatabase} />\n              </SvgIcon>\n            </div>\n            <div className=\"value\" title={name}>\n              {name}\n            </div>\n          </div>\n        </header>\n      </li>\n    );\n  }\n\n  toggleExpanded = () => {\n    this.setState(prevState => ({\n      isExpanded: !prevState.isExpanded\n    }));\n  };\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n}\n\nDatabase.propTypes = {\n  data: object,\n  changeState: func,\n  storeState: object\n};\n\nexport const ConnectedDatabase = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(Database);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { string, func, object } from 'prop-types';\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\n\nimport { changeStateThunk } from '../../store/thunks';\n\nimport './Breadcrumbs.local.scss';\n\nexport class BreadcrumbsTitle extends React.PureComponent {\n  render() {\n    const {\n      storeState: { path }\n    } = this.props;\n\n    return this.renderBreadcrumbs(path);\n  }\n\n  renderBreadcrumbs = path => {\n    const links = path\n      .split(this.props.separator)\n      .filter(e => e)\n      .reduce(\n        (routes, entry, index, list) => {\n          const previous = list.slice(0, index);\n          previous.push(entry);\n          const routePath = previous.join(this.props.separator);\n\n          const route = { label: entry, route: routePath };\n          routes.push(route);\n\n          return routes;\n        },\n        [{ label: 'DBMS', route: '' }]\n      );\n\n    return (\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        {links.map(link => {\n          return (\n            <div\n              data-qa={`breadcrumbs-${link.label}`}\n              className=\"path\"\n              role=\"presentation\"\n              key={link.route}\n              onClick={() => this.navigateTo(link.route)}\n            >\n              {link.label}\n            </div>\n          );\n        })}\n      </Breadcrumbs>\n    );\n  };\n\n  navigateTo = selectedLink => {\n    if (selectedLink === this.props.storeState.path) {\n      return;\n    }\n\n    this.props.changeState({ path: selectedLink });\n\n    this.setActiveLevel(selectedLink);\n  };\n\n  setActiveLevel = selectedLink => {\n    const linkElements = selectedLink.split(this.props.separator).filter(e => e);\n\n    switch (linkElements.length) {\n      case 0:\n        this.props.changeState({ level: 'all-dbms' });\n        break;\n      case 1:\n        this.props.changeState({ level: 'all-servers' });\n        break;\n      case 2:\n        this.props.changeState({ level: 'all-databases' });\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nBreadcrumbsTitle.propTypes = {\n  storeState: object,\n  changeState: func,\n  separator: string\n};\n\nBreadcrumbsTitle.defaultProps = {\n  separator: '--'\n};\n\nexport const ConnectedBreadcrumbsTitle = connect(\n  state => ({\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(BreadcrumbsTitle);\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { ConnectedAllDbms } from '../../containers/AllDbms/AllDbms';\nimport { ConnectedAllServers } from '../../containers/AllServers/AllServers';\nimport { ConnectedAllDatabases } from '../../containers/AllDatabases/AllDatabases';\nimport { ConnectedWorkload } from '../../containers/Workload/Workload';\nimport { ConnectedLicense } from '../../containers/License/License';\nimport { ConnectedStorage } from '../../containers/Storage/Storage';\nimport { ConnectedObjects } from '../../containers/Objects/Objects';\nimport { ConnectedSessions } from '../../containers/Sessions/Sessions';\nimport { ConnectedTopSQLStatements } from '../../containers/TopSQLStatements/TopSQLStatements';\n\nexport class ContentSwitch extends React.PureComponent {\n  render() {\n    const { activePage } = this.props;\n\n    return this.renderPage(activePage);\n  }\n\n  renderPage = activePage => {\n    switch (activePage) {\n      case 'all-dbms':\n        return <ConnectedAllDbms />;\n      case 'all-servers':\n        return <ConnectedAllServers />;\n      case 'all-databases':\n        return <ConnectedAllDatabases />;\n      case 'workload':\n        return <ConnectedWorkload />;\n      case 'license':\n        return <ConnectedLicense />;\n      case 'storage':\n        return <ConnectedStorage />;\n      case 'objects':\n        return <ConnectedObjects />;\n      case 'sessions':\n        return <ConnectedSessions />;\n      case 'topsql':\n        return <ConnectedTopSQLStatements />;\n      default:\n        return <></>;\n    }\n  };\n}\n\nContentSwitch.propTypes = {\n  activePage: string\n};\n\nexport default ContentSwitch;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { array, func } from 'prop-types';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHexagonMultipleOutline, mdiChartTimelineVariant } from '@mdi/js';\n\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { getDBMSStatus, getDBMSStatusInfo } from '../../store/selectors';\n\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\n\nexport class AllDbms extends React.PureComponent {\n  render() {\n    const { all, retrieveDBMSStatus, retrieveDBMSStatusInfo } = this.props;\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {all.map(dbms => (\n            <ActionCard\n              key={dbms.name}\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiHexagonMultipleOutline} />\n                </SvgIcon>\n              }\n              status={dbms.name !== 'OTHER' ? retrieveDBMSStatus(dbms) : ''}\n              statusInfo={retrieveDBMSStatusInfo(dbms)}\n              type=\"dbms\"\n              label={dbms.name}\n              onClick={() => this.setPath(dbms.path)}\n              options={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiChartTimelineVariant} />\n                    </SvgIcon>\n                  ),\n                  label: 'Workload',\n                  onClick: () => this.props.changeState({ path: dbms.path, level: 'workload' })\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-servers' });\n  };\n}\n\nAllDbms.propTypes = {\n  all: array,\n  changeState: func\n};\n\nexport const ConnectedAllDbms = connect(\n  state => ({\n    all: state.explorer?.structured?.dbms || [],\n    allDbms: state.explorer.accounts,\n    retrieveDBMSStatus: dbms => getDBMSStatus(dbms, state.explorer.dbStatus),\n    retrieveDBMSStatusInfo: dbms => getDBMSStatusInfo(dbms, state.explorer.dbStatus)\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(AllDbms);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns, mdiChartTimelineVariant, mdiPercent } from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshServerDbsStatusThunk } from '../../store/thunks';\nimport {\n  getServerStatus,\n  getServerStatusInfo,\n  getEntityPendingStatus\n} from '../../store/selectors';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { ServerSettings } from '../Settings/ServerSettings';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport { LightTooltip } from '../../../shared/components';\n\nconst serverLabel = (serverFullName, address) => {\n  if (serverFullName) {\n    return (\n      <LightTooltip placement=\"bottom-end\" title={address}>\n        <span>{SystemExplorerFeatureUtil.splitAccountName(serverFullName)}</span>\n      </LightTooltip>\n    );\n  }\n\n  return <span>{address}</span>;\n};\n\nexport class AllServers extends React.PureComponent {\n  render() {\n    const {\n      all,\n      serversUsage,\n      retrieveServerStatus,\n      userDetails,\n      retrieveServerStatusInfo,\n      reloadAccounts\n    } = this.props;\n    const servers = all;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <Paper.Content>\n        <CardsLayout>\n          {servers.map((server, index) => (\n            <ActionCard\n              key={`${server.name}-${index}`}\n              settings={<ServerSettings server={server} disabled={isDisabled} reloadAccounts={reloadAccounts} hasDatabases={server.databases.length > 0} />}\n              status={server.databases.length > 0 ? retrieveServerStatus(server) : ''}\n              statusInfo={retrieveServerStatusInfo(server)}\n              type=\"server\"\n              icon={\n                <SvgIcon>\n                  <Icon path={mdiDns} />\n                </SvgIcon>\n              }\n              label={serverLabel(server.name, server.address)}\n              onClick={() => this.setPath(server.path)}\n              options={this.renderOptions(server)}\n              readOnlyOptions={[\n                {\n                  icon: (\n                    <SvgIcon>\n                      <Icon path={mdiPercent} />\n                    </SvgIcon>\n                  ),\n                  label: 'CPU Load',\n                  fillable: true,\n                  percentage:\n                    serversUsage.find(sv => sv.address === server.address)?.usage || undefined\n                }\n              ]}\n            />\n          ))}\n        </CardsLayout>\n      </Paper.Content>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'all-databases' });\n  };\n\n  renderOptions = server => {\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: server.path, level: 'workload' })\n      }\n    ];\n\n    if (server.databases.length > 0) {\n      options.push({\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(server).label,\n        disabled: this.props.retrievePendingStatus(server).loading,\n        onClick: () => this.refreshServerDBs(server)\n      });\n    }\n\n    return options;\n  };\n\n  refreshServerDBs = server => {\n    if (!this.props.retrievePendingStatus(server).loading) {\n      this.props.refreshServerDbsStatus(server);\n    }\n  };\n}\n\nAllServers.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllServers = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const dbms = structured.dbms.find(entry => entry.protocol === path);\n\n    return {\n      all: dbms?.servers || [],\n      allDbms: state.explorer.accounts,\n      storeState: state.explorer.state,\n      serversUsage: state.explorer.serversUsage?.servers || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveServerStatus: server => getServerStatus(server, state.explorer.dbStatus),\n      retrieveServerStatusInfo: server => getServerStatusInfo(server, state.explorer.dbStatus),\n      retrievePendingStatus: server =>\n        getEntityPendingStatus(server, state.explorer.dbStatus, 'server')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshServerDbsStatus: server => dispatch(refreshServerDbsStatusThunk(server)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllServers);\n","import React, { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper, Center } from 'shared/components/layout';\nimport { loadAllAccountsThunk } from '../../store/thunks';\nimport { ServerForm } from '../Forms/ServerForm';\nimport { mdiSettings, mdiDns, mdiDelete } from '@mdi/js';\nimport IconButton from '@material-ui/core/IconButton';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { fetchProtocols } from 'shared/api/protocols';\nimport { ConfirmationModal, ErrorModal } from '../../../shared/components/overlays';\nimport { deleteAccount } from '../../../shared/api/accounts';\n\nexport const ServerSettings = ({ server, disabled, reloadAccounts, hasDatabases }) => {\n  const [open, setOpen] = useState(false);\n  const [deleteServerOpen, setDeleteServerOpen] = useState(false);\n  const [deleteServerErrorOpen, setDeleteServerErrorOpen] = useState(false);\n\n  const modalActions = {\n    open: () => {\n      setOpen(true);\n    },\n    close: () => {\n      setOpen(false);\n    }\n  };\n\n  const deleteServerModalActions = {\n    open: () => {\n      setDeleteServerOpen(true);\n    },\n    close: () => {\n      setDeleteServerOpen(false);\n    },\n    confirm: () => {\n      deleteAccount(server.name).then((res) => {\n        if (res.result === 'success') {\n          reloadAccounts();\n        } else {\n          deleteServerErrorModalActions.open();\n        }\n      });\n    }\n  };\n\n  const deleteServerErrorModalActions = {\n    open: () => {\n      setDeleteServerErrorOpen(true);\n    },\n    close: () => {\n      setDeleteServerErrorOpen(false);\n    }\n  };\n\n  if (disabled) {\n    return (\n      <SvgIcon style={{ color: 'rgba(0, 0, 0, 0.26)' }}>\n        <Icon path={mdiSettings} />\n      </SvgIcon>\n    );\n  }\n\n  return (\n    <>\n      <IconButton onClick={modalActions.open}>\n        <SvgIcon>\n          <Icon path={mdiSettings} />\n        </SvgIcon>\n      </IconButton>\n      {!hasDatabases && (\n        <IconButton onClick={deleteServerModalActions.open}>\n          <SvgIcon>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        </IconButton>\n      )}\n\n      <Modal open={open} actions={modalActions}>\n        <EditServerContainer server={server} />\n      </Modal>\n\n      <ConfirmationModal open={deleteServerOpen} actions={deleteServerModalActions} message=\"Are you sure you want to delete server?\" />\n      <ErrorModal open={deleteServerErrorOpen} actions={deleteServerErrorModalActions} message=\"Failed to delete Server. Please refresh the page and try again.\" />\n    </>\n  );\n};\n\nexport const EditServer = ({ server, reloadAccounts }) => {\n  const [state, setState] = useState({ loading: true, protocols: [] });\n  const formRef = useRef();\n  useEffect(() => {\n    // result and protocols provided by fetch\n    fetchProtocols().then(resp => {\n      if (resp.result === 'success') {\n        setState({\n          loading: false,\n          result: 'success',\n          protocols: resp.protocols || []\n        });\n      } else {\n        setState({\n          loading: false,\n          result: 'fail',\n          protocols: []\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Paper\n      style={{\n        width: '75vw',\n        height: '75vh'\n      }}\n    >\n      <ModalHeader\n        icon={\n          <SvgIcon>\n            <path d={mdiDns} />\n          </SvgIcon>\n        }\n        title=\"Edit Server\"\n        desc=\"Edit the server connection information\"\n        formikRef={formRef}\n      />\n      <Switch value={state.loading}>\n        <Switch.Case value>\n          <Center>\n            <Loader />\n          </Center>\n        </Switch.Case>\n        <Switch.Case value={false}>\n          <ServerForm\n            server={server}\n            protocols={state.protocols}\n            handleSubmission={reloadAccounts}\n            editing\n            formRef={formRef}\n          />\n        </Switch.Case>\n      </Switch>\n    </Paper>\n  );\n};\n\nexport const EditServerContainer = connect(null, dispatch => ({\n  reloadAccounts: () => dispatch(loadAllAccountsThunk())\n}))(EditServer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func } from 'prop-types';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiDatabase,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { ActionCard } from '../../components/ActionCard/ActionCard';\nimport { CardsLayout } from '../../components/CardsLayout/CardsLayout';\nimport { DatabaseSettings } from '../Settings/DatabaseSettings';\nimport {\n  getBackup,\n  getDBStatus,\n  getDBStatusInfo,\n  getEntityPendingStatus,\n  retrieveServerEntry\n} from '../../store/selectors';\nimport { TopSqlStatementsUtil } from '../TopSQLStatements/TopSqlStatementsUtil';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\n\nexport class AllDatabases extends React.PureComponent {\n  render() {\n    const {\n      databases,\n      retrieveDbBackup,\n      retrieveDbStatus,\n      retrieveDbStatusInfo,\n      userDetails,\n      reloadAccounts\n    } = this.props;\n    const isDisabled = isOnlySelectGroup(userDetails);\n\n    return (\n      <>\n        <Paper.Content>\n          <CardsLayout>\n            {databases.map(database => (\n              <ActionCard\n                key={database.name}\n                lastBackup={retrieveDbBackup(database)}\n                settings={<DatabaseSettings database={database} disabled={isDisabled} reloadAccounts={reloadAccounts} />}\n                status={retrieveDbStatus(database)}\n                statusInfo={retrieveDbStatusInfo(database)}\n                type=\"database\"\n                icon={\n                  <SvgIcon>\n                    <Icon path={mdiDatabase} />\n                  </SvgIcon>\n                }\n                label={database.special.database}\n                onClick={() => this.setPath(database.path)}\n                options={this.renderOptions(database)}\n              />\n            ))}\n          </CardsLayout>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  setPath = path => {\n    this.props.changeState({ path, level: 'workload' });\n  };\n\n  refreshDBStatus = db => {\n    if (!this.props.retrievePendingStatus(db).loading) {\n      this.props.refreshDatabaseStatus(db);\n    }\n  };\n\n  renderOptions = database => {\n    const [protocol] = database.path.split('--');\n    const options = [\n      {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiChartTimelineVariant} />\n          </SvgIcon>\n        ),\n        label: 'Workload',\n        onClick: () => this.props.changeState({ path: database.path, level: 'workload' })\n      },\n      {\n        icon: <RefreshIcon />,\n        label: this.props.retrievePendingStatus(database).label,\n        disabled: this.props.retrievePendingStatus(database).loading,\n        onClick: () => this.refreshDBStatus(database)\n      }\n    ];\n\n    if (SystemExplorerFeatureUtil.isSessionsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiCheckboxMultipleBlankOutline} />\n          </SvgIcon>\n        ),\n        label: 'Sessions',\n        onClick: () => this.props.changeState({ path: database.path, level: 'sessions' })\n      });\n    }\n\n    if (SystemExplorerFeatureUtil.isObjectsAllowed(protocol)) {\n      options.splice(1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiShape} />\n          </SvgIcon>\n        ),\n        label: 'Objects',\n        onClick: () => this.props.changeState({ path: database.path, level: 'objects' })\n      });\n    }\n\n    if (protocol === 'ORACLE') {\n      options.splice(1, 0, {\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiHexagonSlice2} />\n            </SvgIcon>\n          ),\n          label: 'Storage',\n          onClick: () => this.props.changeState({ path: database.path, level: 'storage' })\n        }\n      );\n    }\n\n    if (TopSqlStatementsUtil.isAllowedProtocol(protocol)) {\n      options.splice(2, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiFormatAlignTop} />\n          </SvgIcon>\n        ),\n        label: 'Top SQL statements',\n        onClick: () => this.props.changeState({ path: database.path, level: 'topsql' })\n      });\n\n      options.splice(options.length - 1, 0, {\n        icon: (\n          <SvgIcon>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        ),\n        label: 'License reporting',\n        onClick: () => this.props.changeState({ path: database.path, level: 'license' })\n      });\n    }\n\n    return options;\n  };\n}\n\nAllDatabases.propTypes = {\n  changeState: func\n};\n\nexport const ConnectedAllDatabases = connect(\n  state => {\n    const {\n      structured,\n      state: { path }\n    } = state.explorer;\n\n    const [protocol, address] = path.split('--');\n    const server = retrieveServerEntry({ protocol, address }, structured);\n    const backups = state.explorer.dbLastBackup;\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      databases: (server && server.databases) || [],\n      userDetails: getCurrentUserDetails(state),\n      retrieveDbBackup: database => getBackup(database, backups),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database =>\n        getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(AllDatabases);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { object, func } from 'prop-types';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Overflow, Paper } from 'shared/components/layout';\nimport { Center, WorkloadGraph } from 'shared/components';\nimport { actions } from 'shared/store/actions';\nimport { jobsSelector, globalFiltersSelector } from 'shared/store/state';\nimport { getWorkloadData } from 'shared/lib/workload';\nimport { JobResults } from 'shared/components/JobResults';\n\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\n\nimport './Workload.local.scss';\n\nexport class Workload extends React.PureComponent {\n  componentDidMount() {\n    this.getJobsData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.storeState.path !== prevProps.storeState.path ||\n      this.props.globalFilters !== prevProps.globalFilters\n    ) {\n      this.getJobsData();\n    }\n  }\n\n  render() {\n    const {\n      jobs,\n      storeState: { path, level }\n    } = this.props;\n    const pageLevel = path.split('--').filter(e => e).length;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          {pageLevel === 3 && (\n            <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n          )}\n        </Paper.Header>\n        <Paper.Content>\n          {jobs.get('fetching') ? (\n            <Center>\n              <Loader>Loading jobs</Loader>\n            </Center>\n          ) : (\n            <>\n              {jobs.get('total_count') > 0 ? (\n                <>\n                  <div className=\"container\">\n                    <div className=\"graph-container\">\n                      <WorkloadGraph\n                        data={getWorkloadData(this.props.jobs.get('content').toJS(), {\n                          currentDate: moment.unix(\n                            this.props.globalFilters.get('startDate'),\n                            'YYYY-MM-DD'\n                          ),\n                          endDate: moment.unix(\n                            this.props.globalFilters.get('endDate'),\n                            'YYYY-MM-DD'\n                          )\n                        })}\n                        isSingleDay={\n                          moment\n                            .unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD') ===\n                          moment\n                            .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n                            .format('YYYY-MM-DD')\n                        }\n                        setSingleDay={this.props.setGlobalFilters}\n                      />\n                    </div>\n                    <div className=\"jobs-container\">\n                      <Overflow>\n                        <JobResults jobs={jobs.get('content')} />\n                      </Overflow>\n                    </div>\n                  </div>\n                </>\n              ) : (\n                <Center>Job list is empty</Center>\n              )}\n            </>\n          )}\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n\n  getJobsData() {\n    const {\n      storeState: { path }\n    } = this.props;\n    const levelFilters = path.split('--').filter(e => e);\n\n    const days = moment\n      .unix(this.props.globalFilters.get('endDate'), 'YYYY-MM-DD')\n      .diff(moment.unix(this.props.globalFilters.get('startDate'), 'YYYY-MM-DD'), 'days');\n    this.props.getJobs({\n      date_invoke: moment.unix(this.props.globalFilters.get('startDate')).format('YYYY-MM-DD'),\n      period: days + 1,\n      page_size: 2147483645,\n      protocol_filter: levelFilters[0],\n      shell_host_address_filter: levelFilters[1],\n      database_name_filter: levelFilters[2]\n    });\n  }\n}\n\nWorkload.propTypes = {\n  storeState: object,\n  globalFilters: object,\n  jobs: object,\n  getJobs: func,\n  changeState: func\n};\n\nexport const ConnectedWorkload = connect(\n  state => ({\n    storeState: state.explorer.state,\n    globalFilters: globalFiltersSelector(state),\n    jobs: jobsSelector(state)\n  }),\n  dispatch => ({\n    getJobs: data => dispatch(actions.getJobs.dispatchLoading(data)),\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    setGlobalFilters: data => dispatch(actions.setGlobalFilters.dispatchLoading(data))\n  })\n)(Workload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { func, object } from 'prop-types';\nimport { Paper } from 'shared/components/layout';\nimport { changeStateThunk } from '../../store/thunks';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { ConnectedReport } from './Report/Report';\nimport { getFullPath } from '../../store/selectors';\n\nimport './License.local.scss';\n\nexport class License extends React.PureComponent {\n  render() {\n    const {\n      storeState: { level, path },\n    } = this.props;\n    const [protocol] = path.split('--');\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={this.changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          <ConnectedReport />\n        </Paper.Content>\n      </>\n    );\n  }\n\n  changeTab = newTab => {\n    this.props.changeState({ level: newTab });\n  };\n}\n\nLicense.propTypes = {\n  storeState: object,\n  changeState: func,\n};\n\nexport const ConnectedLicense = connect(\n  state => ({\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state),\n    isLoading: state.explorer.flags.license.loading\n  }),\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState))\n  })\n)(License);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bool, func, object } from 'prop-types';\nimport classnames from 'classnames';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { getLicenseReportThunk } from '../../../store/thunks';\nimport { FeaturesUsage } from '../../../components/LicenseReporting/FeaturesUsage/FeaturesUsage';\nimport { UnusedFeatures } from '../../../components/LicenseReporting/UnusedFeatures/UnusedFeatures';\nimport { getFullPath } from '../../../store/selectors';\nimport { FeaturesTable } from '../../../components/LicenseReporting/FeaturesTable/FeaturesTable';\n\nimport './Report.local.scss';\n\nexport class Report extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scrolled: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getLicenseReport(this.props.fullPath);\n  }\n\n  render() {\n    const { scrolled } = this.state;\n    const { isLoading, reportData, reportTwo } = this.props;\n    return isLoading ? (\n      <Center>\n        <Loader>Loading report details</Loader>\n      </Center>\n    ) : (\n      <div\n        className={classnames('searchable-list-slot', {\n          scrolled\n        })}\n      >\n        <div className=\"container\" onWheel={event => this.onWheel(event)}>\n          {reportData && Object.keys(reportData.FEATURES).length > 0 && (\n            <FeaturesTable licenseFeatures={reportData.FEATURES} />\n          )}\n          <FeaturesUsage reportOne={reportData} reportTwo={reportTwo} />\n          <UnusedFeatures reportOne={reportData} reportTwo={reportTwo} />\n        </div>\n      </div>\n    );\n  }\n\n  onWheel = event => {\n    if (event.currentTarget.scrollTop) {\n      if (!this.state.scrolled) {\n        this.setState({ scrolled: true });\n      }\n    } else if (this.state.scrolled) {\n      this.setState({ scrolled: false });\n    }\n\n    scroller(event);\n  };\n}\n\nReport.propTypes = {\n  getLicenseReport: func,\n  isLoading: bool,\n  reportData: object,\n};\n\nexport const ConnectedReport = connect((state) => {\n  const reportData = state.explorer.reports.data;\n  return {\n    isLoading: state.explorer.flags.reports.loading,\n    fullPath: getFullPath(state),\n    reportData\n  };\n}, dispatch => ({\n  getLicenseReport: fullPath => dispatch(getLicenseReportThunk(fullPath))\n}))(Report);\n\nfunction scroller(event) {\n  const target = event.currentTarget;\n\n  target.scrollBy({\n    top: event.deltaY,\n    left: event.deltaX\n  });\n}\n","import React from 'react';\nimport { object } from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './FeaturesUsage.local.scss';\n\nexport class FeaturesUsage extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n    return (\n      <div className=\"features-usage-container\">\n        <header>\n          <h1>License Features Usage</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.USED ?? {});\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          <div className=\"value single\">{feature[1].USAGES}</div>\n          <div className=\"label\">{feature[0]}</div>\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const comparableFeatures = {};\n    if (reportOne.USED && reportOne && reportOne.USED) {\n      const reportOneEntries = Object.entries(reportOne.USED);\n\n      reportOneEntries.map(feature => {\n        comparableFeatures[feature[0]] = {};\n        comparableFeatures[feature[0]].usage = [parseInt(feature[1].USAGES, 10)];\n        comparableFeatures[feature[0]].usage[1] = 0;\n\n        return null;\n      });\n\n      const reportTwoEntries = Object.entries(reportTwo.USED);\n\n      reportTwoEntries.map(feature => {\n        if (feature[0] in comparableFeatures) {\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        } else {\n          comparableFeatures[feature[0]] = {};\n          comparableFeatures[feature[0]].usage = [0];\n          comparableFeatures[feature[0]].usage[1] = parseInt(feature[1].USAGES, 10);\n        }\n\n        return null;\n      });\n    }\n\n    const features = Object.entries(comparableFeatures);\n    return features.map(feature => {\n      return (\n        <LightTooltip\n          key={feature[0]}\n          placement=\"top\"\n          title={\n            <>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportOne.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[0]}</div>\n              </div>\n              <div className=\"row\">\n                <div className=\"date\">\n                  {moment(reportTwo.date_invoke).format('MMM DD YYYY (HH:mm:ss)')}\n                </div>\n                <div className=\"value\">{comparableFeatures[feature[0]].usage[1]}</div>\n              </div>\n            </>\n          }\n        >\n          <div className=\"feature\">\n            {this.getFeatureValue(\n              comparableFeatures[feature[0]].usage[0],\n              comparableFeatures[feature[0]].usage[1]\n            )}\n            <div className=\"label\">{feature[0]}</div>\n          </div>\n        </LightTooltip>\n      );\n    });\n  };\n\n  getFeatureValue = (rep1, rep2) => {\n    let valueNode = <div className=\"value lower\">{rep1 - rep2}</div>;\n\n    if (rep1 === rep2) {\n      valueNode = <div className=\"value equal\">=</div>;\n    } else if (rep2 > rep1) {\n      valueNode = <div className=\"value higher\">{rep2 - rep1}</div>;\n    }\n\n    return valueNode;\n  };\n}\n\nFeaturesUsage.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default FeaturesUsage;\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans',\n\n    '& .row': {\n      display: 'flex',\n\n      '& .value': {\n        paddingLeft: '15px',\n        marginLeft: 'auto',\n        fontWeight: '600'\n      }\n    }\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { object } from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\n\nimport './UnusedFeatures.local.scss';\n\nexport class UnusedFeatures extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isExpanded: false,\n      needsExpansion: false\n    };\n\n    this.listRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  /* eslint-disable react/no-did-update-set-state */\n  componentDidUpdate() {\n    if (\n      this.listRef.current &&\n      this.listRef.current.scrollHeight > this.listRef.current.offsetHeight &&\n      !this.state.needsExpansion\n    ) {\n      this.setState({ needsExpansion: true });\n    }\n  }\n\n  render() {\n    const { reportOne, reportTwo } = this.props;\n    const { isExpanded, needsExpansion } = this.state;\n\n    if (!reportOne) return <></>;\n\n    return (\n      <div className=\"unused-features-container\">\n        <header>\n          <h1>Unused features</h1>\n        </header>\n\n        {!reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderSingleReport()}\n          </div>\n        )}\n        {reportTwo && (\n          <div ref={this.listRef} className={classnames('features-container', { all: isExpanded })}>\n            {this.renderComparableReports()}\n          </div>\n        )}\n        {needsExpansion && !isExpanded && (\n          <div className=\"btn-container\">\n            <Button\n              className=\"view-all-btn\"\n              onClick={() => this.setState({ isExpanded: true })}\n              data-qa=\"view-all\"\n            >\n              View all\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderSingleReport = () => {\n    const { reportOne } = this.props;\n    const features = Object.entries(reportOne?.UNUSED ?? {});\n\n    return features.map(feature => {\n      return (\n        <div key={feature[0]} className=\"feature\">\n          {feature[0]}\n        </div>\n      );\n    });\n  };\n\n  renderComparableReports = () => {\n    const { reportOne, reportTwo } = this.props;\n    const features = Object.keys(reportTwo.UNUSED);\n\n    const comparableFeatures = features.filter(feature => {\n      return reportOne.UNUSED[feature] !== undefined;\n    });\n\n    return comparableFeatures.map(feature => {\n      return (\n        <div key={feature} className=\"feature\">\n          {feature}\n        </div>\n      );\n    });\n  };\n}\n\nUnusedFeatures.propTypes = {\n  reportOne: object,\n  reportTwo: object\n};\n\nexport default UnusedFeatures;\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheckboxMarkedCircle, mdiCloseCircle } from '@mdi/js';\nimport moment from 'moment';\n\nimport './FeaturesTable.scss';\n\nconst columns = [\n  { label: 'Feature Name', sortKey: 'NAME' },\n  { label: 'Version' },\n  { label: 'Usages', sortKey: 'USAGES' },\n  { label: 'First Usage' },\n  { label: 'Last Usage' },\n  { label: 'Status', sortKey: 'STATUS' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"license-feature-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"license-feature-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index,) => (\n  <Table.Row hover key={`${row.NAME}_${index}`} className=\"license-feature-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.NAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.VERSION}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">{row.DETECTED_USAGES}</span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.FIRST_USAGE_DATE).isValid() ? moment(row.FIRST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        {moment(row.LAST_USAGE_DATE).isValid() ? moment(row.LAST_USAGE_DATE).format('DD-MMM-YYYY mm:HH:ss') : ''}\n      </span>\n    </Table.Cell>\n    <Table.Cell>\n      <span className=\"license-feature-cell\">\n        <div className=\"status-container\">\n          {row.CURRENTLY_USED === 'TRUE' ? (\n            <div className=\"status available\">\n              <SvgIcon>\n                <Icon path={mdiCheckboxMarkedCircle} />\n              </SvgIcon>\n              Available\n            </div>\n          ) : (\n            <div className=\"status unavailable\">\n              <SvgIcon>\n                <Icon path={mdiCloseCircle} />\n              </SvgIcon>\n              Unavailable\n            </div>\n          )}\n        </div>\n      </span>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ licenseFeatures, tableProps }) => {\n  return <Table {...tableProps}>{licenseFeatures.map((row, index) => rowRenderer(row, index))}</Table>;\n};\n\nexport class FeaturesTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'NAME', order: 'asc' },\n    };\n  }\n\n  render() {\n    const { licenseFeatures } = this.props;\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sorted = this.sortLicenseFeatures(licenseFeatures);\n\n    return (\n      <TableRenderer\n        licenseFeatures={sorted}\n        tableProps={tableProps}\n      />\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortLicenseFeatures = (licenseFeatures) => {\n    const { sortBehavior } = this.state;\n    const key = sortBehavior.sortKey;\n    const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n    switch (key) {\n      case 'NAME': {\n        return this.sortByName(licenseFeatures, orderMultiplier);\n      }\n      case 'USAGES': {\n        return this.sortByUsages(licenseFeatures, orderMultiplier);\n      }\n      case 'STATUS': {\n        return this.sortByStatus(licenseFeatures, orderMultiplier);\n      }\n      default:\n        return licenseFeatures;\n    }\n  };\n\n  sortByName = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.NAME.localeCompare(o2.NAME)) * order;\n    });\n  };\n\n  sortByUsages = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      return (o1.DETECTED_USAGES - o2.DETECTED_USAGES) * order;\n    });\n  };\n\n  sortByStatus = (licenseFeatures, order) => {\n    return (licenseFeatures || []).slice().sort((o1, o2) => {\n      const firstUsage = o1.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      const secondUsage = o2.CURRENTLY_USED === 'TRUE' ? 1 : -1;\n      return (firstUsage - secondUsage) * order;\n    });\n  };\n}\n\nFeaturesTable.propTypes = {\n  licenseFeatures: PropTypes.array,\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  changeStateThunk,\n  loadStoragePointsThunk,\n  setStorageItemThunk,\n  loadStorageDetailsThunk\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport {\n  getFullPath,\n  getFormattedStorage,\n  haveStorageData,\n  getStorageDetailsData\n} from '../../store/selectors';\n\nconst Storage = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getStoragePoints,\n  getStorageDetails,\n  storagePoints,\n  storageDetails,\n  selectedItem,\n  setStorageItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n\n  useEffect(() => {\n    if (!storedEntries) {\n      getStoragePoints({\n        fullPath\n      });\n      getStorageDetails({\n        selectedItem,\n        fullPath\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          data={storageDetails}\n          list={storagePoints}\n          selectedItem={selectedItem}\n          setItem={setStorageItem}\n          dbName={dbName}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nStorage.propTypes = {\n  storeState: PropTypes.object,\n  storagePoints: PropTypes.array,\n  storageDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setStorageItem: PropTypes.func,\n  selectedItem: PropTypes.string,\n  getStoragePoints: PropTypes.func\n};\n\nexport const ConnectedStorage = connect(\n  state => ({\n    storeState: state.explorer.state,\n    storagePoints: getFormattedStorage(state),\n    selectedItem: state.explorer.storage.selected,\n    loadingFlags: state.explorer.flags.storage,\n    storedEntries: haveStorageData(state),\n    storageDetails: getStorageDetailsData(state),\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setStorageItem: path => dispatch(setStorageItemThunk(path)),\n    getStorageDetails: filters => dispatch(loadStorageDetailsThunk(filters)),\n    getStoragePoints: filters => dispatch(loadStoragePointsThunk(filters))\n  })\n)(Storage);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeStateThunk, objectsLoaderResolver, setSelectedObjectThunk } from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { DbObjects } from '../../components/DbObjects';\nimport {\n  getFullPath,\n  getInvalidObjects,\n  getStructuredObjects,\n  haveObjectsData,\n  objectsSelectorResolver\n} from '../../store/selectors';\n\nconst Objects = ({\n  storeState: { level, path },\n  changeTab,\n  fullPath,\n  getObjects,\n  objectsData,\n  invalidObjects,\n  objectDetails,\n  selectedItem,\n  setObjectsItem,\n  loadingFlags,\n  storedEntries\n}) => {\n  const dbName = path.split('--')[2];\n  const [protocol] = path.split('--');\n  useEffect(() => {\n    if (!storedEntries) {\n      getObjects({\n        fullPath,\n        protocol\n      });\n    }\n  }, [fullPath]);\n\n  return (\n    <>\n      <Paper.Header>\n        <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n      </Paper.Header>\n      <Paper.Content>\n        <DbObjects\n          loadingFlags={loadingFlags}\n          type={level}\n          invalidObjects={invalidObjects}\n          data={objectDetails}\n          list={objectsData}\n          selectedItem={selectedItem}\n          setItem={setObjectsItem}\n          dbName={dbName}\n          protocol={protocol}\n        />\n      </Paper.Content>\n    </>\n  );\n};\n\nObjects.propTypes = {\n  storeState: PropTypes.object,\n  objectsData: PropTypes.array,\n  objectDetails: PropTypes.object,\n  loadingFlags: PropTypes.object,\n  fullPath: PropTypes.string,\n  changeTab: PropTypes.func,\n  setObjectsItem: PropTypes.func,\n  selectedItem: PropTypes.object,\n  getObjects: PropTypes.func\n};\n\nexport const ConnectedObjects = connect(\n  state => {\n    const { state: { path } } = state.explorer;\n    const [protocol] = path.split('--');\n\n    return {\n      storeState: state.explorer.state,\n      objectsData: getStructuredObjects(state),\n      selectedItem: {\n        owner: state.explorer.objects.selectedOwner,\n        object: state.explorer.objects.selectedObject\n      },\n      loadingFlags: state.explorer.flags.objects,\n      objectDetails: objectsSelectorResolver(state, protocol),\n      invalidObjects: getInvalidObjects(state),\n      fullPath: getFullPath(state),\n      storedEntries: haveObjectsData(state)\n    };\n  },\n  dispatch => ({\n    changeTab: level => dispatch(changeStateThunk({ level })),\n    setObjectsItem: object => dispatch(setSelectedObjectThunk(object)),\n    getObjects: filters => dispatch(objectsLoaderResolver(filters))\n  })\n)(Objects);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  changeStateThunk,\n  disableSessionsLoadingFlag,\n  enableSessionsLoadingFlag,\n  sessionsLoaderResolver\n} from '../../store/thunks';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { Button } from 'shared/components/controls';\nimport { FormattedMessage } from 'react-intl';\nimport { getFullPath, getSortedSessions } from '../../store/selectors';\nimport { CommonSessionsTable } from './tables/CommonSessionsTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlSessionsTable } from './tables/MssqlSessionsTable';\nimport './Sessions.local.scss';\n\nexport class Sessions extends React.PureComponent {\n  componentDidMount() {\n    this.getSessionsData();\n  }\n\n  render() {\n    const {\n      level,\n      sessions,\n      isLoading,\n      changeTab,\n      fullPath,\n      enableLoadingFlag,\n      disableLoadingFlag,\n      storeState: { path }\n    } = this.props;\n\n    const [protocol] = path.split('--');\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol !== DbmsType.MSSQL && (\n            <CommonSessionsTable isLoading={isLoading} sessions={sessions} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlSessionsTable\n              isLoading={isLoading}\n              sessions={sessions}\n              dbms={fullPath}\n              refreshSessions={this.getSessionsData}\n              enableLoadingFlag={enableLoadingFlag}\n              disableLoadingFlag={disableLoadingFlag}\n            />\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getSessionsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getSessionsData = () => {\n    const {\n      fullPath,\n      storeState: { path }\n    } = this.props;\n    const [protocol] = path.split('--');\n\n    this.props.getSessions({\n      fullPath,\n      protocol,\n      page_size: 2147483645\n    });\n  };\n}\n\nSessions.propTypes = {\n  level: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n  fullPath: PropTypes.string.isRequired,\n  changeTab: PropTypes.func\n};\n\nexport const ConnectedSessions = connect(\n  state => ({\n    sessions: getSortedSessions(state),\n    level: state.explorer.state.level,\n    isLoading: state.explorer.flags.sessions.loading,\n    fullPath: getFullPath(state),\n    storeState: state.explorer.state\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getSessions: filters => dispatch(sessionsLoaderResolver(filters)),\n    enableLoadingFlag: () => dispatch(enableSessionsLoadingFlag()),\n    disableLoadingFlag: () => dispatch(disableSessionsLoadingFlag())\n  })\n)(Sessions);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../Sessions.local.scss';\n\nconst columns = [\n  { label: 'Serial #' },\n  { label: 'Username' },\n  { label: 'Status' },\n  { label: 'Machine' },\n  { label: 'SID' },\n  { label: 'Logon time', sortKey: 'LOGON_TIME' },\n  { label: 'Program' },\n  { label: 'Type' }\n  // { label: '' } -> disabled view details button for now...\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row['SERIAL#']} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USERNAME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATUS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MACHINE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.LOGON_TIME} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PROGRAM} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.TYPE} />\n    </Table.Cell>\n    {/* <Table.Cell padding=\"none\" className=\"view-details\">\n      <LightTooltip placement=\"bottom\" title={<span>View Details</span>}>\n        <SvgIcon>\n          <Icon path={mdiViewCompact} />\n        </SvgIcon>\n      </LightTooltip>\n    </Table.Cell> */}\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map(rowRenderer)}</Table>;\n};\n\nexport class CommonSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'LOGON_TIME', order: 'asc' }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          noDataMessage=\"No Sessions Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.LOGON_TIME - o2.LOGON_TIME) * orderMultiplier;\n    });\n  }\n}\n\nCommonSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array\n};\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDelete } from '@mdi/js';\nimport { ConfirmationModal, ErrorModal } from '../../../../shared/components/overlays';\nimport { invocationOutputPoller, postInvocation } from '../../../../shared/api/invocation';\n\nimport '../Sessions.local.scss';\nimport './MssqlSessionsTable.local.scss';\n\nconst columns = [\n  { label: 'SPID', sortKey: 'spid' },\n  { label: 'ECID' },\n  { label: 'Status' },\n  { label: 'Login Name' },\n  { label: 'Host Name' },\n  { label: 'blk' },\n  { label: 'DB Name' },\n  { label: 'CMD' },\n  { label: 'Request ID' },\n  { label: 'Kill Session' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"session-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"session-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index, killSession) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"session-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.spid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ecid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.status} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.loginame} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.hostname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.blk} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.dbname} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.cmd} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.request_id} />\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"icon-cell\">\n        {(row.hostname || '').trim().length > 0 && parseInt(row.spid, 10) >= 50 && (\n          <SvgIcon onClick={() => killSession(row.spid)}>\n            <Icon path={mdiDelete} />\n          </SvgIcon>\n        )}\n      </div>\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sessions, noDataMessage, tableProps, openKillSessionConfirmation }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sessions.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sessions.map((row, index) => rowRenderer(row, index, (sessionId) => openKillSessionConfirmation(sessionId)))}</Table>;\n};\n\nexport class MssqlSessionsTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'spid', order: 'asc' },\n      killSessionConfirmationOpen: false,\n      sessionIdToKill: null\n    };\n\n    this.killSessionConfirmationActions = {\n      open: (sessionId) => {\n        this.setState({ killSessionConfirmationOpen: true, sessionIdToKill: sessionId });\n      },\n      close: () => {\n        this.setState({ killSessionConfirmationOpen: false, sessionIdToKill: null });\n      },\n      confirm: () => {\n        const { sessionIdToKill } = this.state;\n        this.props.enableLoadingFlag();\n        this.killSession(sessionIdToKill).then((result) => {\n          if (result) {\n            this.props.refreshSessions();\n          } else {\n            this.props.disableLoadingFlag();\n            this.killSessionErrorModalActions.open();\n          }\n        });\n      }\n    };\n\n    this.killSessionErrorModalActions = {\n      open: () => {\n        this.setState({ killSessionErrorOpen: true });\n      },\n      close: () => {\n        this.setState({ killSessionErrorOpen: false });\n      }\n    };\n  }\n\n  render() {\n    const {\n      sessions,\n      isLoading,\n    } = this.props;\n\n    const { sortBehavior, killSessionConfirmationOpen, killSessionErrorOpen } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedSessions = this.sortSessions(sessions);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sessions={sortedSessions}\n          tableProps={tableProps}\n          openKillSessionConfirmation={(sessionId) => this.killSessionConfirmationActions.open(sessionId)}\n          noDataMessage=\"No Sessions Available\"\n        />\n        <ConfirmationModal open={killSessionConfirmationOpen} actions={this.killSessionConfirmationActions} message=\"Are you sure you want to kill this session?\" />\n        <ErrorModal open={killSessionErrorOpen} actions={this.killSessionErrorModalActions} message=\"Failed to kill this session. Please refresh the page and try again.\" />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSessions = (sessionsData) => {\n    const { sortBehavior } = this.state;\n    return (sessionsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.spid - o2.spid) * orderMultiplier;\n    });\n  };\n\n  killSession = async (sessionId) => {\n    const { dbms } = this.props;\n    const payload = {\n      parameters: {\n        session_id: sessionId,\n        dbconn: dbms,\n        oformat: 'JSON',\n        compact: true\n      },\n      process: 'dbatools.mssql.security.session_kill',\n      timestamp: null\n    };\n\n    const creationResult = await postInvocation(payload);\n    if (creationResult.invocations.length) {\n      const invocationUuid = creationResult.invocations[0].uuid;\n      return invocationOutputPoller(invocationUuid);\n    }\n    return Promise.resolve(null);\n  };\n}\n\nMssqlSessionsTable.propTypes = {\n  isLoading: PropTypes.bool,\n  sessions: PropTypes.array,\n  dbms: PropTypes.string,\n  refreshSessions: PropTypes.func,\n  enableLoadingFlag: PropTypes.func,\n  disableLoadingFlag: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeStateThunk, loadTopSQLStatementsThunk } from '../../store/thunks';\nimport { getFullPath, selectTopSqlStatements } from '../../store/selectors';\nimport { Paper } from 'shared/components/layout';\nimport { NavigationTab } from '../../components/NavigationTab/NavigationTab';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from '../../../shared/components/controls';\nimport { ElapsedTimeChart } from './charts/ElapsedTimeChart';\nimport { TopSqlStatementsUtil } from './TopSqlStatementsUtil';\nimport { OracleTopSQLTable } from './tables/OracleTopSQLTable';\nimport { PostgresTopSQLTable } from './tables/PostgresTopSQLTable';\nimport './TopSQLStatements.local.scss';\nimport { MysqlTopSQLTable } from './tables/MysqlTopSQLTable';\nimport { DbmsType } from '../../SystemExplorerFeatureUtil';\nimport { MssqlTopSQLTable } from './tables/MssqlTopSQLTable';\n\nexport class TopSQLStatements extends React.PureComponent {\n  componentDidMount() {\n    this.getTopSqlStatementsData();\n  }\n\n  render() {\n    const {\n      storeState: { level, path },\n      topSqlStatements,\n      isLoading,\n      changeTab\n    } = this.props;\n\n    const [protocol] = path.split('--');\n    const elapsedTimeChartData = TopSqlStatementsUtil.isChartSupported(protocol) ? this.prepareChartData(topSqlStatements) : null;\n\n    return (\n      <>\n        <Paper.Header>\n          <NavigationTab active={level} onClick={changeTab} protocol={protocol} />\n        </Paper.Header>\n        <Paper.Content>\n          {protocol === DbmsType.ORACLE && (\n            <OracleTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.POSTGRES && (\n            <PostgresTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MYSQL && (\n            <MysqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {protocol === DbmsType.MSSQL && (\n            <MssqlTopSQLTable topSqlStatements={topSqlStatements} isLoading={isLoading} />\n          )}\n          {TopSqlStatementsUtil.isChartSupported(protocol) && (\n            <div className=\"graph-container\">\n              {elapsedTimeChartData.length > 0 && (\n                <ElapsedTimeChart data={elapsedTimeChartData} />\n              )}\n            </div>\n          )}\n        </Paper.Content>\n        <Paper.Footer>\n          <Button className=\"qa-refresh-btn align-right\" onClick={this.getTopSqlStatementsData}>\n            <FormattedMessage id=\"general.refresh\" />\n          </Button>\n        </Paper.Footer>\n      </>\n    );\n  }\n\n  getTopSqlStatementsData = () => {\n    const {\n      storeState: { path },\n      fullPath\n    } = this.props;\n    const [protocol] = path.split('--');\n    const dbmsProperty = TopSqlStatementsUtil.getDbmsPropertyName(protocol);\n    const payload = {\n      parameters: {\n        oformat: 'JSON',\n        [dbmsProperty]: fullPath,\n        compact: true\n      },\n      process: TopSqlStatementsUtil.getEndpoint(protocol),\n      timestamp: null\n    };\n\n    this.props.getTopSqlStatements(payload);\n  };\n\n  prepareChartData = (topStatementsData) => {\n    return (topStatementsData || []).map((row) => {\n      const timeMillis = Math.round(row.ELAPSED_TIME / 1000);\n      const cpuTime = Math.round((timeMillis / 100) * row.PCT_CPU);\n      const ioTime = Math.round((timeMillis / 100) * row.PCT_IO);\n      return {\n        sqlId: row.SQL_ID,\n        timeMillisFull: timeMillis,\n        timeMillis: timeMillis - cpuTime - ioTime,\n        cpuTime,\n        ioTime,\n        cpuPercent: row.PCT_CPU,\n        ioPercent: row.PCT_IO\n      };\n    });\n  }\n}\n\nTopSQLStatements.propTypes = {\n  isLoading: PropTypes.bool,\n  getTopSqlStatements: PropTypes.func,\n  storeState: PropTypes.object,\n  topSqlStatements: PropTypes.array\n};\n\nexport const ConnectedTopSQLStatements = connect(\n  state => ({\n    topSqlStatements: selectTopSqlStatements(state),\n    isLoading: state.explorer.flags.topSqlStatements.loading,\n    storeState: state.explorer.state,\n    fullPath: getFullPath(state)\n  }),\n  dispatch => ({\n    changeTab: newState => dispatch(changeStateThunk({ level: newState })),\n    getTopSqlStatements: filters => dispatch(loadTopSQLStatementsThunk(filters))\n  })\n)(TopSQLStatements);\n","import React from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport './ElapsedTimeChart.local.scss';\n\nconst renderCustomXAxisTick = ({ x, y, payload }) => {\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-80)\">{payload.value}</text>\n    </g>\n  );\n};\n\nconst renderLegend = ({ payload }) => {\n  return (\n    <ul className=\"elapsed-time-chart-legend\">\n      {\n        (payload || []).map((entry, index) => (\n          <li className=\"legend-item\" key={`item-${index}`}>\n            <span className=\"icon\" style={{ backgroundColor: entry.color }} />\n            <span className=\"label\" style={{ color: entry.color }}>{entry.value}</span>\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nconst renderChartTooltip = (data) => {\n  if (!data || !data.payload || !data.payload.length) {\n    return '';\n  }\n\n  const [elapsedTimeData] = data.payload;\n  const { sqlId, timeMillisFull, cpuPercent, cpuTime, ioPercent, ioTime } = elapsedTimeData.payload;\n  return (\n    <div className=\"elapsed-time-chart-tooltip\">\n      <div className=\"row\"><strong className=\"label\">SQL ID: </strong><span className=\"value\">{sqlId}</span></div>\n      <div className=\"row\"><strong className=\"label\">Elapsed Time: </strong><span className=\"value\">{formatTimePeriod(timeMillisFull)}</span></div>\n      <div className=\"row\"><strong className=\"label\">CPU: </strong><span className=\"value\">{cpuPercent}% ({formatTimePeriod(cpuTime)})</span></div>\n      <div className=\"row\"><strong className=\"label\">I/O: </strong><span className=\"value\">{ioPercent}% {ioPercent > 0 ? `(${formatTimePeriod(ioTime)})` : ''}</span></div>\n    </div>\n  );\n};\n\nexport const ElapsedTimeChart = ({ data }) => {\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data} margin={{ top: 50, right: 30, left: 70, bottom: 100 }} barGap={-10}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <Legend content={renderLegend} align=\"right\" verticalAlign=\"top\" layout=\"vertical\" width={200} />\n        <Tooltip content={renderChartTooltip} cursor={{ fill: '#eeeeee' }} />\n\n        <XAxis dataKey=\"sqlId\" axisLine=\"false\" interval={0} tick={renderCustomXAxisTick} />\n        <YAxis dataKey=\"timeMillisFull\" domain={['auto', 'auto']} tickFormatter={tick => formatTimePeriod(tick)} />\n\n        <Bar dataKey=\"cpuTime\" stackId=\"common\" name=\"CPU, %\" fill=\"#1ac9e6\" />\n        <Bar dataKey=\"ioTime\" stackId=\"common\" name=\"I/O, %\" fill=\"#c02323\" />\n        <Bar dataKey=\"timeMillis\" stackId=\"common\" name=\"Elapsed Time\" fill=\"#176BA0\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'SQL ID' },\n  { label: 'Child Number' },\n  { label: 'SQL Text' },\n  { label: 'Module' },\n  { label: 'Executions' },\n  { label: 'Elapsed Time', sortKey: 'ELAPSED_TIME' },\n  { label: 'Elapsed Per Exec' },\n  { label: 'CPU, %' },\n  { label: 'I/O, %' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.sid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESS_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.SQL_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.CHILD_NUMBER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_TEXT); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_TEXT} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.MODULE} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.EXECUTIONS} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.ELAPSED_PER_EXEC, 10)))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_CPU} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.PCT_IO} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class OracleTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'ELAPSED_TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.ELAPSED_TIME - o2.ELAPSED_TIME) * orderMultiplier;\n    });\n  }\n}\n\nOracleTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'User ID' },\n  { label: 'Query ID' },\n  { label: 'Query' },\n  { label: 'Executions' },\n  { label: 'Average Time', sortKey: 'avg_time_ms' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.queryid}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.userid} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.queryid} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.query); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.query} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.calls} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.avg_time_ms, 10))} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class PostgresTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'avg_time_ms', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.avg_time_ms - o2.avg_time_ms) * orderMultiplier;\n    });\n  }\n}\n\nPostgresTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Session ID' },\n  { label: 'User' },\n  { label: 'SQL Text' },\n  { label: 'Elapsed Time', sortKey: 'TIME' },\n  { label: 'State' }\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.SESSION_ID}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.SESSION_ID} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.USER} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.SQL_Text); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.SQL_Text} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row.TIME, 10) / 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.STATE} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MysqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'TIME', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.TIME - o2.TIME) * orderMultiplier;\n    });\n  }\n}\n\nMysqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { copyTextToClipboard } from '../../../../license-collection/utils/copyToClipboard';\nimport Icon from '@mdi/react';\nimport { mdiContentCopy } from '@mdi/js';\nimport { formatTimePeriod } from '../../../../license-collection/utils/formatTimePeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center, LightTooltip, Table } from '../../../../shared/components';\nimport PropTypes from 'prop-types';\nimport '../TopSQLStatements.local.scss';\n\nconst columns = [\n  { label: 'Database Name' },\n  { label: 'SQL Text' },\n  { label: 'Executions' },\n  { label: 'Total CPU Time' },\n  { label: 'Avg CPU Time' },\n  { label: 'Max Elapsed Time', sortKey: 'MaxElapsedTime' },\n  { label: 'Avg Elapsed Time' },\n  { label: 'Logical Reads' },\n  { label: 'Physical Reads' },\n  { label: 'Logical Writes' },\n];\n\nconst CellWithTooltip = ({ name }) => {\n  if (name && name.length > 16) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"statement-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"statement-cell\">{name}</span>;\n};\n\nconst rowRenderer = (row, index) => (\n  <Table.Row hover key={`${row.Database_name}_${index}`} className=\"statement-row\">\n    <Table.Cell>\n      <CellWithTooltip name={row.Database_name} />\n    </Table.Cell>\n    <Table.Cell>\n      <LightTooltip placement=\"top\" title=\"Copy to clipboard\">\n        <SvgIcon className=\"copy-icon\" onClick={() => { copyTextToClipboard(row.QueryName); }}>\n          <Icon path={mdiContentCopy} />\n        </SvgIcon>\n      </LightTooltip>\n      <CellWithTooltip name={row.QueryName} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.ExecutionCount} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(Math.round(parseInt(row['Total_CPU_Time(second)'], 10) * 1000))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row['Average_CPU_Time(milisecond)'], 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.MaxElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={formatTimePeriod(parseInt(row.AvgElapsedTime, 10))} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.Logical_Reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.physical_reads} />\n    </Table.Cell>\n    <Table.Cell>\n      <CellWithTooltip name={row.logical_writes} />\n    </Table.Cell>\n  </Table.Row>\n);\n\nconst TableRenderer = ({ isLoading, sqlStatements, noDataMessage, tableProps }) => {\n  if (isLoading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n  if (sqlStatements.length === 0) {\n    return <Center>{noDataMessage}</Center>;\n  }\n  return <Table {...tableProps}>{sqlStatements.map(rowRenderer)}</Table>;\n};\n\nexport class MssqlTopSQLTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sortBehavior: { sortKey: 'MaxElapsedTime', order: 'desc' }\n    };\n  }\n\n  render() {\n    const {\n      topSqlStatements,\n      isLoading\n    } = this.props;\n\n    const { sortBehavior } = this.state;\n    const tableProps = { columns, sortBehavior, changeSort: this.changeSort };\n    const sortedStatements = this.sortSqlStatements(topSqlStatements);\n\n    return (\n      <>\n        <TableRenderer\n          isLoading={isLoading}\n          sqlStatements={sortedStatements}\n          tableProps={tableProps}\n          noDataMessage=\"No Statements Available\"\n        />\n      </>\n    );\n  }\n\n  changeSort = (sortKey, order) => () => {\n    this.setState({ sortBehavior: { sortKey, order } });\n  };\n\n  sortSqlStatements = (topStatementsData) => {\n    const { sortBehavior } = this.state;\n    return (topStatementsData || []).slice().sort((o1, o2) => {\n      const orderMultiplier = sortBehavior.order === 'asc' ? 1 : -1;\n      return (o1.MaxElapsedTime - o2.MaxElapsedTime) * orderMultiplier;\n    });\n  }\n}\n\nMssqlTopSQLTable.propTypes = {\n  isLoading: PropTypes.bool,\n  topSqlStatements: PropTypes.array\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiTable, mdiViewComfy } from '@mdi/js';\nimport { SystemExplorerViewMode } from './SystemExplorerViewMode';\n\nimport './ToggleSystemExplorerView.local.scss';\n\nexport const ToggleSystemExplorerView = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Table View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TABLE\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TABLE)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiTable} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Tiles View\">\n        <div\n          className={classnames('option', {\n            active: active === SystemExplorerViewMode.TILES\n          })}\n          onClick={() => onClickCallback(SystemExplorerViewMode.TILES)}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiViewComfy} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport { LightTooltip, Table } from '../../../shared/components';\nimport { array, func } from 'prop-types';\nimport { Paper } from '../../../shared/components/layout';\nimport Icon from '@mdi/react';\nimport {\n  mdiChartTimelineVariant,\n  mdiCheckboxMultipleBlankOutline,\n  mdiFormatAlignTop,\n  mdiHexagonSlice2,\n  mdiLicense,\n  mdiShape\n} from '@mdi/js';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { connect } from 'react-redux';\nimport { getDBStatus, getDBStatusInfo, getEntityPendingStatus, getServerStatus } from '../../store/selectors';\nimport { StatusLabel } from '../StatusLabel/StatusLabel';\nimport { changeStateThunk, loadAllAccountsThunk, refreshDBStatusThunk } from '../../store/thunks';\nimport { Button } from 'shared/components/controls';\nimport { SystemExplorerFeatureUtil } from '../../SystemExplorerFeatureUtil';\nimport Refresh from '@material-ui/icons/Refresh';\nimport { Loader } from '../../../shared/components/loaders';\nimport { AddServerCard } from '../../containers/AddServerCard/AddServerCard';\nimport { AddDatabaseCard } from '../../containers/AddDatabaseCard/AddDatabaseCard';\nimport { ImportCSV } from '../../containers/ImportCSV/ImportCSV';\nimport { DatabaseSettings } from '../../containers/Settings/DatabaseSettings';\nimport { CONSTANTS } from 'config';\n\nimport './SystemExplorerTable.local.scss';\n\nconst HostnameCellWithTooltip = ({ name }) => {\n  if (name && name.length > 15) {\n    return (\n      <LightTooltip placement=\"bottom\" title={<span>{name}</span>}>\n        <span className=\"hostname-cell ellipsis\">{name}</span>\n      </LightTooltip>\n    );\n  }\n  return <span className=\"hostname-cell\">{name}</span>;\n};\n\nconst columns = [\n  { label: 'Hostname' },\n  { label: 'Server' },\n  { label: 'Port', align: 'center' },\n  { label: 'User', align: 'center' },\n  { label: 'Server Status', align: 'center' },\n  { label: 'Database Status', align: 'center' },\n  { label: 'Workload', align: 'center' },\n  { label: 'Session', align: 'center' },\n  { label: 'Top SQL', align: 'center' },\n  { label: 'Objects', align: 'center' },\n  { label: 'Storage', align: 'center' },\n];\n\nconst rowRenderer = (database, index, isChecked, updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails) => (\n  <Table.Row hover key={`${database.name}_${index}`} className=\"statement-row\">\n    <Table.Cell padding=\"checkbox\">\n      <Checkbox\n        onChange={(event) => updateSelection(database, event.target.checked)}\n        checked={isChecked}\n        size=\"small\"\n        color=\"primary\"\n        classes={{ root: 'checkbox-custom' }}\n      />\n    </Table.Cell>\n    <Table.Cell padding=\"none\" className=\"host-cell\">\n      <HostnameCellWithTooltip name={SystemExplorerFeatureUtil.splitAccountName(database.name)} />\n    </Table.Cell>\n    <Table.Cell className=\"address-cell\">\n      {database.address}\n    </Table.Cell>\n    <Table.Cell>\n      <div className=\"centered-cell\">{database.port}</div>\n    </Table.Cell>\n    <Table.Cell className=\"user-cell\">\n      <div className=\"centered-cell\">{database.user}</div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveServerStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell className=\"status-cell\">\n      <div className=\"centered-cell\">\n        {!retrievePendingStatus(database).loading && (\n          <StatusLabel status={retrieveDbStatus(database)} />\n        )}\n        {retrievePendingStatus(database).loading && (\n          <Loader size=\"20px\" />\n        )}\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isWorkloadAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'workload' })}>\n          <Icon path={mdiChartTimelineVariant} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isSessionsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'sessions' })}>\n          <Icon path={mdiCheckboxMultipleBlankOutline} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isTopSqlAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'topsql' })}>\n          <Icon path={mdiFormatAlignTop} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isObjectsAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'objects' })}>\n          <Icon path={mdiShape} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    <Table.Cell>\n      <div className={`icon-cell ${!SystemExplorerFeatureUtil.isStorageAllowed(database.protocol) ? 'icon-disabled' : ''}`}>\n        <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'storage' })}>\n          <Icon path={mdiHexagonSlice2} />\n        </SvgIcon>\n      </div>\n    </Table.Cell>\n    {SystemExplorerFeatureUtil.isLicenseReportingAllowed(database.protocol) && (\n      <Table.Cell>\n        <div className=\"icon-cell\">\n          <SvgIcon onClick={() => navigateToDetails({ path: database.path, level: 'license' })}>\n            <Icon path={mdiLicense} />\n          </SvgIcon>\n        </div>\n      </Table.Cell>\n    )}\n  </Table.Row>\n);\n\nconst testConnectionsTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      onClick={clickHandler}\n      startIcon={<Refresh />}\n      classes={{ root: 'green-btn toolbar-btn' }}\n      disabled={isDisabled}\n    >\n      Test Connection\n    </Button>\n  );\n};\n\nconst addServerTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={CONSTANTS.NEW_CUSTOMER_POC_ENABLED}\n    >\n      Add New Server\n    </Button>\n  );\n};\n\nconst addDatabaseTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'green-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={CONSTANTS.NEW_CUSTOMER_POC_ENABLED}\n    >\n      Add New Database\n    </Button>\n  );\n};\n\nconst importCsvTrigger = (clickHandler) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={CONSTANTS.NEW_CUSTOMER_POC_ENABLED}\n    >\n      Import from CSV\n    </Button>\n  );\n};\n\nconst editDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'yellow-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled || CONSTANTS.NEW_CUSTOMER_POC_ENABLED}\n    >\n      Edit Database\n    </Button>\n  );\n};\n\nconst deleteDatabaseTrigger = (clickHandler, isDisabled) => {\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"small\"\n      classes={{ root: 'red-btn toolbar-btn' }}\n      onClick={clickHandler}\n      disabled={isDisabled || CONSTANTS.NEW_CUSTOMER_POC_ENABLED}\n    >\n      Delete Database\n    </Button>\n  );\n};\n\nclass SystemExplorerTable extends React.PureComponent {\n  allGroups = [];\n\n  allDatabases = [];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDbs: []\n    };\n\n    const { data } = this.props;\n    this.allGroups =\n      data.filter(protocolGroup => protocolGroup.databases && protocolGroup.databases.length)\n          .sort((group1, group2) => {\n            return SystemExplorerFeatureUtil.getListOrder(group2.protocol) - SystemExplorerFeatureUtil.getListOrder(group1.protocol);\n          });\n\n    this.allDatabases = this.allGroups.reduce((acc, protocolGroup) => {\n      acc = acc.concat(protocolGroup.databases);\n      return acc;\n    }, []);\n  }\n\n  render() {\n    const {\n      switchToTileView,\n      retrieveDbStatus,\n      retrieveServerStatus,\n      retrievePendingStatus,\n      reloadAccounts,\n      changeState\n    } = this.props;\n    const { selectedDbs } = this.state;\n    const navigateToDetails = (detailsPageParams) => {\n      changeState(detailsPageParams);\n      switchToTileView();\n    };\n\n    return (\n      <Paper>\n        <Paper.Header>\n          <div className=\"system-explorer-table-view\">\n            <div className=\"system-explorer-table-toolbar\">\n              {testConnectionsTrigger(this.testConnections, !selectedDbs.length)}\n              <AddServerCard trigger={addServerTrigger} />\n              <AddDatabaseCard trigger={addDatabaseTrigger} />\n              <ImportCSV trigger={importCsvTrigger} />\n              <DatabaseSettings\n                database={this.getFirstDatabase()}\n                disabled={!this.hasSingleSelection()}\n                editDbTrigger={editDatabaseTrigger}\n                deleteDbTrigger={deleteDatabaseTrigger}\n                reloadAccounts={reloadAccounts}\n              />\n            </div>\n          </div>\n        </Paper.Header>\n        <Paper.Content>\n          <div className=\"system-explorer-table-content\">\n            {this.allGroups.map(protocolGroup => {\n              const columnsConfig = JSON.parse(JSON.stringify(columns));\n              columnsConfig.unshift({ component: this.createCheckboxHeaderColumnConfig(protocolGroup), padding: 'checkbox' });\n              if (SystemExplorerFeatureUtil.isLicenseReportingAllowed(protocolGroup.protocol)) {\n                columnsConfig.push({ label: 'License Reporting', align: 'center' });\n              }\n              const tableProps = { columns: columnsConfig };\n              return (\n                <>\n                  <h3 className=\"protocol-header\">{protocolGroup.protocol}</h3>\n                  <Table {...tableProps} className=\"table\">\n                    {(protocolGroup.databases || []).map((db, index) =>\n                      rowRenderer(db, index, this.isDbSelected(db), this.updateSelection, retrieveDbStatus, retrieveServerStatus, retrievePendingStatus, navigateToDetails))}\n                  </Table>\n                </>\n              );\n            })}\n          </div>\n        </Paper.Content>\n      </Paper>\n    );\n  }\n\n  createCheckboxHeaderColumnConfig = (protocolGroup) => {\n    return () => {\n      return (\n        <Checkbox\n          size=\"small\"\n          color=\"primary\"\n          onChange={(event) => this.toggleDbsSelectionByProtocol(event, protocolGroup)}\n          checked={this.isAllDbsByProtocolSelected(protocolGroup.protocol)}\n          classes={{ root: 'checkbox-custom' }}\n        />\n      );\n    };\n  };\n\n  updateSelection = (database, isChecked) => {\n    const { selectedDbs } = this.state;\n    const dbIndex = selectedDbs.findIndex((db) => db.name === database.name);\n\n    if (isChecked && dbIndex === -1) {\n      selectedDbs.push(database);\n    } else if (dbIndex !== -1) {\n      selectedDbs.splice(dbIndex, 1);\n    }\n\n    this.setState({ selectedDbs });\n    this.forceUpdate();\n  };\n\n  toggleDbsSelectionByProtocol = (event, protocolGroup) => {\n    const shouldAddAll = !this.isAllDbsByProtocolSelected(protocolGroup.protocol);\n    const { selectedDbs } = this.state;\n    const allWithoutCurrent = this.clearDbsByProtocol(selectedDbs, protocolGroup.protocol);\n\n    if (shouldAddAll) {\n     this.setState({ selectedDbs: [...allWithoutCurrent, ...protocolGroup.databases] });\n    } else {\n      this.setState({ selectedDbs: [...allWithoutCurrent] });\n    }\n    this.forceUpdate();\n  };\n\n  clearDbsByProtocol = (dbs, protocol) => {\n    return dbs.filter((db) => db.protocol !== protocol);\n  };\n\n  isAllDbsByProtocolSelected = (protocol) => {\n    const allByProtocol = this.allDatabases.filter((db) => db.protocol === protocol);\n    const selectedByProtocol = (this.state.selectedDbs || []).filter((db) => db.protocol === protocol);\n    return allByProtocol.length === selectedByProtocol.length;\n  }\n\n  testConnections = () => {\n    const { selectedDbs } = this.state;\n    const { refreshDatabaseStatus } = this.props;\n    (selectedDbs || []).forEach(db => refreshDatabaseStatus(db));\n  };\n\n  isDbSelected = (db) => {\n    const { selectedDbs } = this.state;\n    return selectedDbs.some((selected) => selected.name === db.name);\n  };\n\n  hasSingleSelection = () => {\n    const { selectedDbs } = this.state;\n    return !!selectedDbs && selectedDbs.length === 1;\n  };\n\n  getFirstDatabase = () => {\n    const { selectedDbs } = this.state;\n    return this.hasSingleSelection() ? selectedDbs[0] : null;\n  };\n}\n\nSystemExplorerTable.propTypes = {\n  data: array,\n  switchToTileView: func\n};\n\nexport const ConnectedSystemExplorerTable = connect(\n  state => {\n    const statuses = state.explorer.dbStatus;\n\n    return {\n      statuses,\n      retrieveServerStatus: server => getServerStatus(server, statuses),\n      retrieveDbStatus: database => getDBStatus(database, statuses),\n      retrieveDbStatusInfo: database => getDBStatusInfo(database, statuses),\n      retrievePendingStatus: database => getEntityPendingStatus(database, state.explorer.dbStatus, 'db')\n    };\n  },\n  dispatch => ({\n    changeState: newState => dispatch(changeStateThunk(newState)),\n    refreshDatabaseStatus: db => dispatch(refreshDBStatusThunk(db)),\n    reloadAccounts: () => dispatch(loadAllAccountsThunk())\n  })\n)(SystemExplorerTable);\n","import { RestClient } from 'shared/lib/rest';\n\nexport function postCompile() {\n  return RestClient.post('/compile');\n}\n","module.exports = __webpack_public_path__ + \"svgs/6842f8a8cfcb1999b9a1e64174e25a11.svg\";","module.exports = __webpack_public_path__ + \"svgs/727bf5a83867f2c49ff66ab6df50ae78.svg\";","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Switch } from 'shared/components';\nimport { Paper, Center } from 'shared/components/layout';\nimport { Loader } from 'shared/components/loaders';\n\nimport { NavigationTab } from 'shared/components/layout/NavigationTab/NavigationTab';\n\nimport './job-process.local.scss';\n\nimport { getInvocation } from './store/selectors';\nimport { invocationPoller } from './store/tasks';\nimport { AllowOutputFor } from './store/constants';\n\nimport JobForm from './job-form';\n\nimport { JobOutput } from './containers/output/output';\nimport { JobStatus } from './components/JobStatus/JobStatus';\n\nexport const JobView = ({ invocation, redirected }) => {\n  const [tab, setTab] = useState('details');\n\n  useEffect(() => {\n    invocationPoller.start();\n\n    return function stopPolling() {\n      invocationPoller.stop();\n    };\n  }, [invocation.status]);\n\n  if (!invocation || invocation.status === 'NOT_FETCHED') {\n    return (\n      <>\n        <Paper.Content scrollable={false}>\n          <Center>\n            <Loader>Fetching invocation</Loader>\n          </Center>\n        </Paper.Content>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Paper.Header>\n        <ViewTabs invocation={invocation} active={tab} changeTab={setTab} />\n        <JobStatus />\n      </Paper.Header>\n      <Switch value={tab}>\n        <Switch.Case value=\"details\">\n          <JobForm redirected={redirected} />\n        </Switch.Case>\n        <Switch.Case value=\"output\">\n          <JobOutput />\n        </Switch.Case>\n      </Switch>\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    invocation: getInvocation(state)\n  };\n}, {})(JobView);\n\nfunction ViewTabs({ active, changeTab, invocation }) {\n  const withOutput = AllowOutputFor.includes(invocation.status);\n  const tabs = [{ label: 'Job Details', value: 'details', active: true }];\n  if (withOutput) {\n    tabs.push({ label: 'Output', value: 'output' });\n  }\n\n  return <NavigationTab active={active} onClick={changeTab} tabs={tabs} />;\n}\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { isEmpty, pickBy } from 'lodash';\n\nimport moment from 'moment';\n\nimport { Switch } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { Notifications } from './containers/notifications/notifications';\n\nimport { Formik, Form } from 'formik';\n\nimport { Text, Date, Time } from 'shared/components/form/editors/Generic';\nimport { PlatformSelect, ProcessTypeSelect, ProcessSelect, PLATFORMS, PROCESS_TYPES } from 'shared/components/form/editors/Custom';\n\nimport { Button } from 'shared/components/controls';\n\nimport { SubmitButton } from 'shared/components/form/SubmitButton';\n\nimport './job-process.local.scss';\nimport { Section, Row, Column } from '../shared/components/layout';\n\nimport { getCurrentUserName } from '../session/store/selectors';\n\nimport { getInvocation } from './store/selectors';\nimport { AllowGeneralEditingFor, InvocationStatus } from './store/constants';\n\nimport { postInvocation } from 'shared/api/invocation';\n\nimport { ProcessParameters } from './job-parameters';\n\nimport { Schedule } from 'jobs/containers/Schedule/Schedule';\nimport { ConnectedDeleteJobModal } from 'jobs/actions/delete/DeleteJobModal';\n\nconst JobForm = ({ loggedInAs, invocation, redirected }) => {\n  const history = useHistory();\n\n  const [editable, setEditable] = useState(AllowGeneralEditingFor.includes(invocation.status));\n\n  const derivedMonitor = {\n    enabled: !!invocation?.parameters?.events,\n    events: invocation?.parameters?.events || 0,\n    users: invocation?.parameters?.users || []\n  };\n\n  const [monitor, setMonitor] = useState(derivedMonitor);\n\n  const { initialValues, disabledFields } = deriveFormState(invocation, editable);\n\n  const availableProcess = (platformVal, typeVal, processVal) => {\n    const selectedPlatform = PLATFORMS.find(platform => platform.value === platformVal);\n    const selectedType = PROCESS_TYPES.find(type => type.value === typeVal);\n\n    const platformMatches = !selectedPlatform || selectedPlatform.tester.test(processVal);\n    const typeMatches = !selectedType || selectedType.tester.test(processVal);\n\n    return (platformMatches && typeMatches) ? processVal : '';\n  };\n\n  const userValue = editable ? loggedInAs : invocation.user_owner;\n  const dateValue = editable\n    ? moment()\n        .utc()\n        .format('MM/DD/YYYY')\n    : moment(invocation.date_invoke).format('MM/DD/YYYY');\n  const timeValue = editable\n    ? moment()\n        .utc()\n        .format('HH:mm')\n    : moment(invocation.date_invoke).format('HH:mm');\n\n  const [open, setOpen] = useState(false);\n  const modalActions = {\n    open: useCallback(() => {\n      setOpen(true);\n    }, []),\n    close: useCallback(() => {\n      setOpen(false);\n    }, [])\n  };\n\n  const extraValidations = values => {\n    const errors = {};\n    const { date_invoke, time_invoke } = values;\n\n    if (!moment(date_invoke).isValid()) {\n      errors.date_invoke = 'Invalid date format';\n    }\n\n    if (!/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/.test(time_invoke)) {\n      errors.time_invoke = 'Invalid time format';\n    }\n\n    if (\n      values['fqname--name'] &&\n      (!/^(?:[a-z_][a-z0-9_.]*)$/i.test(values['fqname--name']) ||\n        values['fqname--name'].substr(-1) === '.')\n    ) {\n      errors['fqname--name'] = 'A valid MAS relative name is required.';\n    }\n\n    return errors;\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validate={extraValidations}\n        onSubmit={async (values, actions) => {\n          actions.setSubmitting(true);\n          handleJobCreation(values, monitor).then(({ result, invocations }) => {\n            if (result === 'success') {\n              const { uuid } = invocations[0];\n\n              history.push(`/jobs/job?invocation=${uuid}`);\n            }\n          });\n        }}\n      >\n        {() => {\n          return (\n            <>\n              <Paper.Content scrollable>\n                <Form>\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Details</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row>\n                        <Column xs={4}>\n                          <PlatformSelect\n                            name=\"platform\"\n                            label=\"Platform\"\n                            description=\"Select a platform to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(value, formik.values.type, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.platform || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessTypeSelect\n                            name=\"type\"\n                            label=\"Type\"\n                            description=\"Select a type to filter out the processes\"\n                            reactToChange={(value, formik) => {\n                              formik.setFieldValue(\n                                'process',\n                                availableProcess(formik.values.platform, value, formik.values.process)\n                              );\n                            }}\n                            disabled={disabledFields.type || !editable || redirected}\n                          />\n                        </Column>\n                        <Column xs={4}>\n                          <ProcessSelect\n                            name=\"process\"\n                            label=\"Process\"\n                            value={invocation.process}\n                            required\n                            disabled={disabledFields.process || !editable || redirected}\n                          />\n                        </Column>\n                      </Row>\n                      <Row>\n                        <Column xs={3}>\n                          <Date\n                            name=\"date_invoke\"\n                            label=\"Date\"\n                            disabled={!editable}\n                            value={dateValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Time\n                            name=\"time_invoke\"\n                            label=\"MAS system time (UTC)\"\n                            disabled={!editable}\n                            value={timeValue}\n                          />\n                        </Column>\n                        <Column xs={3}>\n                          <Text name=\"job_user\" label=\"User\" required disabled value={userValue} />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                  <ProcessParameters recieved={invocation.parameters} editable={editable} />\n                  <Section>\n                    <Section.Header>\n                      <Section.Title>Notifications</Section.Title>\n                    </Section.Header>\n                    <Section.Content>\n                      <Row spacing={3}>\n                        <Column xs={12}>\n                          <Notifications\n                            name=\"notifications\"\n                            key={invocation.uuid}\n                            disabled={!editable}\n                            recievedData={derivedMonitor}\n                            onApply={n_state => {\n                              if (n_state.events === 0 || isEmpty(n_state.users)) {\n                                setMonitor({\n                                  enabled: false\n                                });\n                              }\n                              setMonitor({\n                                enabled: true,\n                                ...n_state\n                              });\n                            }}\n                          />\n                        </Column>\n                      </Row>\n                    </Section.Content>\n                  </Section>\n                </Form>\n              </Paper.Content>\n              <Paper.Footer>\n                <Paper.Footer.Left>\n                  <a href=\"/ui/#/jobs/\">\n                  <Button>Cancel</Button>\n                  </a>\n                  {invocation.status === 'DELAYED' && (\n                    <Button\n                      color=\"secondary\"\n                      onClick={() => {\n                        setOpen(true);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  )}\n                </Paper.Footer.Left>\n                <Paper.Footer.Right>\n                  <FormVerbs\n                    status={invocation.status}\n                    editable={editable}\n                    setEditable={setEditable}\n                    monitor={monitor}\n                    invocation={invocation}\n                  />\n                </Paper.Footer.Right>\n              </Paper.Footer>\n            </>\n          );\n        }}\n      </Formik>\n      {open && (\n        <ConnectedDeleteJobModal open={open} actions={modalActions} uuid={invocation.uuid} />\n      )}\n    </>\n  );\n};\n\nexport default connect(state => {\n  return {\n    loggedInAs: getCurrentUserName(state),\n    invocation: getInvocation(state)\n  };\n}, {})(JobForm);\n\n/* eslint-disable no-unused-vars */\nfunction FormVerbs({ status, editable, setEditable, monitor, invocation }) {\n  const makeEditable = () => setEditable(true);\n\n  return (\n    <Switch value={editable}>\n      <Switch.Case value>\n        <SubmitButton>{monitor.enabled ? 'Monitor' : 'Run'}</SubmitButton>\n      </Switch.Case>\n      <Switch.Case value={false}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\n          <Schedule invocation={invocation} />\n          <Button onClick={makeEditable}>Edit</Button>\n        </div>\n      </Switch.Case>\n    </Switch>\n  );\n}\n\nfunction handleJobCreation(values, monitor) {\n  const {\n    process,\n    platform,\n    type,\n    date_invoke,\n    time_invoke,\n    job_user,\n    ...params_with_maybe_replvars\n  } = values;\n  const sendable = {};\n\n  const { parameters, replvars } = extractReplVars(params_with_maybe_replvars);\n\n  function rejector(value, key) {\n    if (key === 'parameters') {\n      return false;\n    }\n\n    if (!value && typeof value !== 'boolean') {\n      return false;\n    }\n\n    if (value === 'None') {\n      return false;\n    }\n\n    if (typeof value === 'object' && isEmpty(value)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (date_invoke) {\n    const dateMoment = moment(date_invoke, 'MM/DD/YYYY');\n\n    const timeMoment = time_invoke ? moment(time_invoke, 'hh:mm') : moment();\n    const currentDate = moment()\n      .utc()\n      .set('second', 0)\n      .format('YYYY-MM-DDTHH:mm:ss');\n\n    const date = dateMoment.format('YYYY-MM-DD');\n    const time = timeMoment.format('HH:mm');\n    const dateTime = moment(date + ' ' + time, 'YYYY-MM-DD HH:mm').format('YYYY-MM-DDTHH:mm:ss'); // eslint-disable-line prefer-template\n\n    const duration = moment.duration(\n      moment(dateTime, 'YYYY-MM-DD HH:mm').diff(moment(currentDate, 'YYYY-MM-DD HH:mm'))\n    );\n    const minutes = duration.asMinutes();\n\n    if (minutes > 0) {\n      sendable.timestamp = dateTime;\n    } else {\n      sendable.timestamp = null;\n    }\n  }\n\n  if (monitor.enabled) {\n    /**\n     * Is monitoring a process\n     */\n    sendable.process = 'mas.sys.invocation.notify.create';\n\n    sendable.parameters = {\n      name: process,\n      parameters: pickBy(parameters, rejector),\n      when: sendable.timestamp,\n      events: monitor.events,\n      users: monitor.users\n    };\n\n    sendable.timestamp = null;\n  } else {\n    sendable.process = process;\n\n    sendable.parameters = pickBy(parameters, rejector);\n  }\n\n  return postInvocation(sendable);\n}\n\nfunction deriveFormState(invocation) {\n  const values = {\n    platform: '',\n    type: '',\n    process: invocation.process,\n    parameters: { ...invocation.parameters }\n  };\n  const disabledFields = {\n    ...(invocation.status !== InvocationStatus.NEW && {\n      platform: true,\n      type: true,\n      process: true,\n      user: true,\n      parameters: true\n    })\n  };\n\n  return { initialValues: values, disabledFields };\n}\n\nfunction extractReplVars(rawValues) {\n  // find the name + namespace and combine those 2 into a single value\n  const values = extractFQName(rawValues);\n  const keys = Object.keys(values);\n  const result = keys.reduce(\n    (extracted, key) => {\n      if (key.startsWith('replvar--')) {\n        const [index, field_name] = key.replace('replvar--', '').split('--');\n\n        const entry = extracted.replvars[index];\n\n        // ignore deflt propery if is an empty string\n        if (field_name === 'deflt' && values[key] === '') {\n          return extracted;\n        }\n\n        if (entry) {\n          if (field_name === 'deflt') {\n            entry[field_name] = `str('\"'${values[key]}'\"')`;\n          } else {\n            entry[field_name] = values[key];\n          }\n        } else if (field_name === 'deflt') {\n          extracted.replvars.push({ [field_name]: `str('\"'${values[key]}'\"')` });\n        } else {\n          extracted.replvars.push({ [field_name]: values[key] });\n        }\n\n        return extracted;\n      }\n\n      if (key.startsWith('replvalue')) {\n        const [index] = key.replace('replvalue--', '').split('--');\n\n        extracted.replvalues[values[`replvar--${index}--name`]] = values[key];\n\n        return extracted;\n      }\n\n      extracted.parameters[key] = values[key];\n\n      return extracted;\n    },\n    { replvars: [], replvalues: {}, parameters: {} }\n  );\n\n  return {\n    parameters: {\n      ...result.parameters,\n      replvars: cleanUpReplVars(result.replvars),\n      replvalues: result.replvalues\n    }\n  };\n}\n\nfunction cleanUpReplVars(replvars) {\n  return replvars.filter(p => true).map((p, index) => ({ ...p, meta: { position: index + 3 } }));\n}\n\nfunction extractFQName(values) {\n  if (values['fqname--name']) {\n    if (values['fqname--namespace']) {\n      values.name = `${values['fqname--namespace']}.${values['fqname--name']}`;\n    } else {\n      values.name = values['fqname--name'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--name'];\n  } else if (values['fqname--fqname']) {\n    if (values['fqname--namespace']) {\n      values.fqname = `${values['fqname--namespace']}.${values['fqname--fqname']}`;\n    } else {\n      values.fqname = values['fqname--fqname'];\n    }\n    delete values['fqname--namespace'];\n    delete values['fqname--fqname'];\n  }\n  return values;\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Paper } from 'shared/components/layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Center } from 'shared/components';\nimport { useSelector } from 'react-redux';\nimport { getInvocation } from '../../store/selectors';\nimport { InvocationStatus } from '../../store/constants';\nimport { ListOutput } from '../../components/ListOutput/ListOutput';\nimport { fetchInvocationOutput } from 'shared/api/invocation';\nimport { sendToEmail } from 'license-collection/utils/sendToEmail';\nimport { copyToClipboard } from 'license-collection/utils/copyToClipboard';\nimport { ErrorModal } from '../../../shared/components/overlays';\nimport './output.scss';\n\nfunction noOutput(invocation = {}) {\n  return [\n    {\n      data: {\n        text: 'No output to display.\\n'\n      }\n    },\n    {\n      data: {\n        text: `Status: ${invocation.status}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Process: ${invocation.process}\\n`\n      }\n    },\n    {\n      data: {\n        text: `Invocation: ${invocation.uuid}\\n`\n      }\n    }\n  ];\n}\n\nfunction onSendByEmail(invocation, output, processName, modalActions) {\n  const result = sendToEmail(invocation, output, processName);\n  if (!result) {\n    modalActions.open();\n  }\n}\n\nexport const JobOutput = () => {\n  const invocation = useSelector(getInvocation);\n\n  const [loading, setLoading] = React.useState(true);\n  const [output, setOutput] = React.useState(noOutput(invocation));\n  const [sendToEmailWarningOpen, setSendToEmailWarningOpen] = React.useState(false);\n  const modalActions = {\n    open: () => {\n      setSendToEmailWarningOpen(true);\n    },\n    close: () => {\n      setSendToEmailWarningOpen(false);\n    }\n  };\n  const sendToEmailWarning = 'The output is too long and can\\'t be opened in your email client. Please use \"COPY TO CLIPBOARD\" button and paste it in your email.';\n\n  React.useEffect(() => {\n    fetchInvocationOutput(invocation.uuid)\n      .then(({ data }) => {\n        const recieved = data.data.outputs;\n\n        if (recieved && recieved.length) {\n          setOutput(recieved);\n        } else {\n          setOutput(noOutput(invocation));\n        }\n\n        setLoading(false);\n      })\n      .catch(() => {\n        setOutput(noOutput(invocation));\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Center>\n        <CircularProgress />\n      </Center>\n    );\n  }\n\n  const outputType = invocation.status === InvocationStatus.FAILED ? 'fail' : 'normal';\n\n  const monitoring = output?.[0]?.data?.text?.match?.(\n    /{\"process\": {\"uuid\": \"([0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12})\",/\n  )?.[1];\n\n  console.log(monitoring); // eslint-disable-line\n\n  return (\n    <>\n      <Paper.Content scrollable>\n        <ListOutput\n          type={outputType}\n          output={output}\n          outputFormat={invocation.parameters.oformat}\n          errors={invocation.errors}\n          monitoring={monitoring}\n        />\n      </Paper.Content>\n      <Paper.Footer>\n        <Paper.Footer.Left>\n          <Button\n            color=\"primary\"\n            onClick={() => onSendByEmail(invocation, output, invocation.process, modalActions)}\n          >\n            Send to email\n          </Button>\n          <Button color=\"primary\" onClick={() => copyToClipboard(output, invocation)}>\n            Copy to clipboard\n          </Button>\n        </Paper.Footer.Left>\n      </Paper.Footer>\n      <ErrorModal open={sendToEmailWarningOpen} actions={modalActions} message={sendToEmailWarning} />\n    </>\n  );\n};\n","import React from 'react';\nimport { Button } from 'shared/components/controls';\n\nimport './ListOutput.local.scss';\nimport ReactJson from 'react-json-view';\n\nexport const ListOutput = ({ output, type, outputFormat, errors, monitoring }) => {\n  let content;\n  let preparedJSON;\n\n  if (outputFormat === 'JSON') {\n    [, preparedJSON] = (output[0].data.text || '').split('\\n');\n  }\n\n  if (monitoring) {\n    return (\n      <div className=\"list\">\n        <h3>Monitor</h3>\n        <p>Invocation id: {monitoring}</p>\n        <Button to={`/jobs/job?invocation=${monitoring}`} color=\"primary\">\n          Go to Monitored Invocation\n        </Button>\n      </div>\n    );\n  }\n\n  if (type === 'fail') {\n    content = (\n      <>\n        <p className=\"category error\">The following error(s) occurred:</p>\n        <div className=\"list error\">\n          <code>\n            <pre>{errors.join('\\n')}</pre>\n          </code>\n        </div>\n        {output && output.length > 0 && (\n          <>\n            <p className=\"category\">Output:</p>\n            <div className=\"list\">\n              <code>\n                <pre>{output.map(row => row.data.text).join('')}</pre>\n              </code>\n            </div>\n          </>\n        )}\n      </>\n    );\n  } else if (preparedJSON) {\n    content = (\n      <div className=\"list\">\n        <ReactJson\n          src={JSON.parse(preparedJSON)}\n          enableClipboard={false}\n          displayObjectSize={false}\n          displayDataTypes={false}\n        />\n      </div>\n    );\n  } else {\n    content = (\n      <div className=\"list\">\n        <code>\n          <pre>{output.map(row => row.data.text).join('')}</pre>\n        </code>\n      </div>\n    );\n  }\n\n  return content;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { want } from 'shared/lib/want';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport {\n  mdiProgressClock,\n  mdiCheckCircleOutline,\n  mdiCalendarArrowRight,\n  mdiTimelineClock,\n  mdiCancel,\n  mdiAlertRhombusOutline,\n  mdiStopCircleOutline\n} from '@mdi/js';\n\nimport { getInvocationStatus } from '../../store/selectors';\nimport {\n  InvocationStatus,\n  CannotShowStatusFor,\n  FAILURES,\n  SUCESSES,\n  WARNINGS\n} from '../../store/constants';\n\nimport './JobStatus.local.scss';\n\nexport const JobStatus = () => {\n  const STATUS = useSelector(getInvocationStatus);\n  const ignore = CannotShowStatusFor.includes(STATUS);\n\n  if (ignore) {\n    return null;\n  }\n\n  return (\n    <div className=\"status-label\" style={{ background: wantStatusColor(STATUS) }}>\n      <SvgIcon fontSize=\"inherit\" color=\"inherit\">\n        <path d={wantStatusIcon(STATUS)} />\n      </SvgIcon>\n      <span className=\"status-label-text\">{STATUS}</span>\n    </div>\n  );\n};\n\nconst wantStatusIcon = want(\n  {\n    [InvocationStatus.EXECUTING]: mdiProgressClock,\n    [InvocationStatus.SUCCEEDED]: mdiCheckCircleOutline,\n    [InvocationStatus.DELAYED]: mdiTimelineClock,\n    [InvocationStatus.SCHEDULED]: mdiCalendarArrowRight,\n    [InvocationStatus.KILLED]: mdiCancel,\n    [InvocationStatus.FAILED]: mdiAlertRhombusOutline,\n    [InvocationStatus.ABORTED]: mdiStopCircleOutline\n  },\n  '',\n  status => status\n);\n\nconst wantStatusColor = want(\n  {\n    fail: '#ED3A4A',\n    warning: '#F1BD5C',\n    success: '#34CC88'\n  },\n  '#3765AF', // progress blue color for unresolved statuses\n  status => {\n    if (FAILURES.includes(status)) {\n      return 'fail';\n    }\n\n    if (SUCESSES.includes(status)) {\n      return 'success';\n    }\n\n    if (WARNINGS.includes(status)) {\n      return 'warning';\n    }\n  }\n);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Center, Switch } from 'shared/components';\nimport { Loader } from 'shared/components/loaders';\nimport { Main } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\n\nimport { Header } from 'core/components/Header/Header';\nimport { RefreshDashboard } from './components/RefreshDashboard/RefreshDashboard';\nimport { ToggleDashboard } from './components/ToggleDashboard/ToggleDashboard';\nimport { PhysicalDashboard } from './components/PhysicalDashboard/PhysicalDashboard';\nimport { VirtualDashboard } from './components/VirtualDashboard/VirtualDashboard';\nimport { NoData } from './components/NoData/NoData';\nimport { ConnectedToggleSelection } from './containers/ToggleSelection/ToggleSelection';\n\nimport { loadExecutiveDashboardThunk, loadVirtualExecutiveDashboardThunk } from './store/thunks';\n\nimport './ExecutiveDashboard.local.scss';\n\nfunction ExecutiveDashboard({\n  isLoading,\n  callFailed,\n  selected,\n  rawEntries,\n  getExecutiveDashboard,\n  getVirtualExecutiveDashboard,\n  virtualServers,\n  rawVirtualServers\n}) {\n  const [dashboardType, setDashboardType] = useState('physical');\n  // const [isRefreshNeeded, setIsRefreshNeeded] = useState(false); // will update based on the new API that will be provide by the BE\n  useEffect(() => {\n    // do the new API provided by the BE\n    // set isRefreshNeeded value based on result\n\n    // if we have no data in store, do the call, else new data will be added on demand -> refresh button\n    // if (rawEntries.length === 0) {\n    if (dashboardType === 'physical' && rawEntries.length === 0) {\n      getExecutiveDashboard();\n    }\n\n    if (dashboardType === 'virtual' && rawVirtualServers.length === 0) {\n      getVirtualExecutiveDashboard();\n    }\n  }, [dashboardType]);\n\n  function refreshDashboard() {\n    if (dashboardType === 'physical') {\n      getExecutiveDashboard();\n    }\n\n    if (dashboardType === 'virtual') {\n      getVirtualExecutiveDashboard();\n    }\n  }\n\n  function changeDashboard(type) {\n    setDashboardType(type);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / Executive Dashboard\">\n        {!isLoading && !callFailed && (\n          <div className=\"header-actions-container\">\n            {dashboardType === 'physical' && <ConnectedToggleSelection />}\n            <RefreshDashboard onClickCallback={refreshDashboard} />\n            <div className=\"separator\" />\n            <ToggleDashboard active={dashboardType} onClickCallback={changeDashboard} />\n          </div>\n        )}\n      </Header>\n      <Main mdPage>\n        <Switch value={isLoading}>\n          <Switch.Case value>\n            <Center>\n              <Loader>Loading Executive Dashboard...</Loader>\n            </Center>\n          </Switch.Case>\n          <Switch.Case value={false}>\n            <Switch value={callFailed}>\n              <Switch.Case value>\n                <Result type=\"fail\">\n                  <Result.Text>\n                    Failed to load Executive Dashboard data. Please refresh the page and try again.\n                  </Result.Text>\n                </Result>\n              </Switch.Case>\n              <Switch.Case value={false}>\n                {rawEntries.length === 0 && <NoData />}\n                {rawEntries.length > 0 && (\n                  <Switch value={dashboardType}>\n                    <Switch.Case value=\"virtual\">\n                      <VirtualDashboard servers={virtualServers} />\n                    </Switch.Case>\n                    <Switch.Case value=\"physical\">\n                      <PhysicalDashboard selected={selected} />\n                    </Switch.Case>\n                  </Switch>\n                )}\n              </Switch.Case>\n            </Switch>\n          </Switch.Case>\n        </Switch>\n      </Main>\n    </>\n  );\n}\n\nexport const ConnectedExecutiveDashboard = connect(\n  state => {\n    return {\n      isLoading:\n        state.executiveDashboard.flags.dashboard.loading ||\n        state.executiveDashboard.flags.virtual.loading,\n      callFailed: state.executiveDashboard.flags.dashboard.callFailed,\n      selected: state.executiveDashboard.selectedServers.length,\n      rawEntries: state.executiveDashboard.rawEntries,\n      rawVirtualServers: state.executiveDashboard.rawVirtualServers,\n      virtualServers: state.executiveDashboard.virtualServers\n    };\n  },\n  dispatch => ({\n    getExecutiveDashboard: () => dispatch(loadExecutiveDashboardThunk()),\n    getVirtualExecutiveDashboard: () => dispatch(loadVirtualExecutiveDashboardThunk())\n  })\n)(ExecutiveDashboard);\n","import React from 'react';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiChartDonut } from '@mdi/js';\n\nimport './RefreshDashboard.local.scss';\n\nexport const RefreshDashboard = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"refresh-container\" onClick={() => onClickCallback()} role=\"presentation\">\n      {active && <div className=\"indicator\" />}\n      <LightTooltip placement=\"bottom\" title=\"Refresh\">\n        <SvgIcon className=\"refresh-icon\">\n          <Icon path={mdiChartDonut} />\n        </SvgIcon>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport { LightTooltip } from 'shared/components/tooltip/Tooltip';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCubeOutline, mdiDns } from '@mdi/js';\n\nimport './ToggleDashboard.local.scss';\n\nexport const ToggleDashboard = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"toggle-container\">\n      <LightTooltip placement=\"bottom\" title=\"Virtual servers\">\n        <div\n          className={classnames('option', {\n            active: active === 'virtual'\n          })}\n          onClick={() => onClickCallback('virtual')}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiCubeOutline} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n      <LightTooltip placement=\"bottom\" title=\"Physical servers\">\n        <div\n          className={classnames('option', {\n            active: active === 'physical'\n          })}\n          onClick={() => onClickCallback('physical')}\n          role=\"presentation\"\n        >\n          <SvgIcon>\n            <Icon path={mdiDns} />\n          </SvgIcon>\n        </div>\n      </LightTooltip>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { ConnectedSearchSection } from '../../containers/SearchSection/SearchSection';\nimport { SwitchContent } from '../SwitchContent/SwitchContent';\n\nexport const PhysicalDashboard = ({ selected }) => {\n  return (\n    <>\n      <ConnectedSearchSection />\n      <SwitchContent nrSelected={selected} />\n    </>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SearchableList } from 'users-manager/components/SearchableList/SearchableList';\nimport { ServerCard } from '../../components/ServerCard/ServerCard';\n\nimport { toggleServerThunk } from '../../store/thunks';\n\nimport './SearchSection.local.scss';\n\nfunction SearchSection({ allServers, selectedServers, toggleServer }) {\n  function filterServerByQuery(server, query) {\n    return server.name.toLowerCase().includes(query.toLowerCase());\n  }\n\n  function isServerSelected(server) {\n    if (selectedServers.find(sv => sv.name === server.name)) return true;\n    return false;\n  }\n\n  function toggleSelected(server) {\n    toggleServer(server);\n  }\n\n  return (\n    <section className=\"servers-search-section\">\n      <SearchableList items={allServers} filter={filterServerByQuery}>\n        {server => (\n          <ServerCard\n            selected={isServerSelected(server)}\n            toggleSelectedCallback={toggleSelected}\n            server={server}\n          />\n        )}\n      </SearchableList>\n    </section>\n  );\n}\n\nexport const ConnectedSearchSection = connect(\n  state => {\n    return {\n      allServers: state.executiveDashboard.allServers,\n      selectedServers: state.executiveDashboard.selectedServers\n    };\n  },\n  dispatch => ({\n    toggleServer: name => dispatch(toggleServerThunk(name))\n  })\n)(SearchSection);\n","module.exports = __webpack_public_path__ + \"svgs/4b3cf735142a68d8e31e71d5905527d8.svg\";","import React from 'react';\n\nimport { Switch } from 'shared/components';\n\nimport { EmptyContent } from '../EmptyContent/EmptyContent';\nimport { ConnectedDashboard } from '../../containers/Dashboard/Dashboard';\nimport { ConnectedServerView } from '../../containers/ServerView/ServerView';\n\nimport './SwitchContent.local.scss';\n\nexport const SwitchContent = ({ nrSelected }) => {\n  let page = '';\n  if (nrSelected === 0) {\n    page = 'empty-content';\n  } else if (nrSelected === 1) {\n    page = 'server-details';\n  } else if (nrSelected > 1) {\n    page = 'dashboard';\n  }\n\n  return (\n    <section className=\"dashboard-view-section\">\n      <Switch value={page}>\n        <Switch.Case value=\"empty-content\">\n          <EmptyContent />\n        </Switch.Case>\n        <Switch.Case value=\"server-details\">\n          <ConnectedServerView />\n        </Switch.Case>\n        <Switch.Case value=\"dashboard\">\n          <ConnectedDashboard />\n        </Switch.Case>\n      </Switch>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiDns } from '@mdi/js';\n\nimport './EmptyContent.local.scss';\n\nexport const EmptyContent = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiDns} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              Please select at least a server in order to view its details\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { OptionsTile } from '../../components/OptionsTile/OptionsTile';\n\nimport './Dashboard.local.scss';\n\nfunction Dashboard({ selected }) {\n  return (\n    <>\n      <div className=\"widgets-row\">\n        <div className=\"widget\">\n          <ServersTile servers={selected} />\n        </div>\n        <div className=\"widget\">\n          <DatabasesTile servers={selected} />\n        </div>\n      </div>\n      <OptionsTile servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedDashboard = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(Dashboard);\n","import React from 'react';\nimport { Overflow, Paper } from 'shared/components/layout';\n\nimport { OptionsList } from './components/OptionsList/OptionsList';\nimport { OptionsChart } from './components/OptionsChart/OptionsChart';\n\nimport './OptionsTile.local.scss';\n\nexport const OptionsTile = ({ servers }) => {\n  function groupChartServers(serversToGroup) {\n    return Object.values(serversToGroup.reduce((acc, entry) => {\n      const serverKey = `${entry.name}_${entry.sid}`;\n      if (!acc[serverKey] || acc[serverKey].collDate < entry.collDate) {\n        acc[serverKey] = entry;\n      }\n      return acc;\n    }, {}));\n  }\n\n  function prepareOptions(filteredServers) {\n    return [\n      {\n        name: 'Advanced Analytics',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.aa_count;\n        }, 0),\n        color: '#176BA0',\n        secondaryColor: '#E8F9F5',\n        label: 'AA'\n      },\n      {\n        name: 'Advanced Compression',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.ac_count;\n        }, 0),\n        color: '#1AC9E6',\n        secondaryColor: '#e8fafc',\n        label: 'AC'\n      },\n      {\n        name: 'Advanced Security',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.as_count;\n        }, 0),\n        color: '#6DF0D2',\n        secondaryColor: '#f0fdfb',\n        label: 'AS'\n      },\n      {\n        name: 'Database Vault',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.dv_count;\n        }, 0),\n        color: '#7D3AC1',\n        secondaryColor: '#f2ebf9',\n        label: 'DV'\n      },\n      {\n        name: 'Multitenant',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.mt_count;\n        }, 0),\n        color: '#EA7369',\n        secondaryColor: '#fbedf7',\n        label: 'MT'\n      },\n      {\n        name: 'Active Data Guard',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.adg_count;\n        }, 0),\n        color: '#1DE4BD',\n        secondaryColor: '#e8fcf8',\n        label: 'ADG'\n      },\n      {\n        name: 'Real Application Clusters',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.rac_count;\n        }, 0),\n        color: '#EF7E32',\n        secondaryColor: '#fdf2eb',\n        label: 'RAC'\n      },\n      {\n        name: 'OLAP',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.olap_count;\n        }, 0),\n        color: '#F0A58F',\n        secondaryColor: '#fdf6f4',\n        label: 'OL'\n      },\n      {\n        name: 'Partitioning (User)',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.part_count;\n        }, 0),\n        color: '#C02323',\n        secondaryColor: '#f9e9e9',\n        label: 'P'\n      },\n      {\n        name: 'In-Memory Database',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.in_mem_db_count;\n        }, 0),\n        color: '#DB4CB2',\n        secondaryColor: '#fbedf7',\n        label: 'IMD'\n      },\n      {\n        name: 'RAC One Node',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.rac_one_node_count;\n        }, 0),\n        color: '#4c6bdb',\n        secondaryColor: '#a8d1f1',\n        label: 'RACON'\n      },\n      {\n        name: 'Real Application Testing',\n        value: filteredServers.reduce((acc, sv) => {\n          return acc + sv.installedOptions.real_app_test_count;\n        }, 0),\n        color: '#399137',\n        secondaryColor: '#a6eaa5',\n        label: 'RAT'\n      }\n    ];\n  }\n\n  const groupedServers = groupChartServers(servers);\n  const chartOptions = prepareOptions(groupedServers);\n\n  return (\n    <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n      <div className=\"container\">\n        <div className=\"graph-container\">\n          <OptionsChart data={chartOptions} />\n        </div>\n        <div className=\"label-container\">\n          <Overflow>\n            <OptionsList options={chartOptions} />\n          </Overflow>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\n\nimport { OptionItem } from '../OptionItem/OptionItem';\n\nexport const OptionsList = ({ options }) => {\n  return options.map(option => <OptionItem key={option.name} option={option} />);\n};\n","import React from 'react';\n\nimport './OptionItem.local.scss';\n\nexport const OptionItem = ({ option }) => {\n  return (\n    <div className=\"option\">\n      <div className=\"value\" style={{ backgroundColor: option.secondaryColor }}>\n        <span style={{ color: option.color }}>{option.value}</span>\n      </div>\n      <div style={{ color: option.color }}>{option.name}</div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { BarChart, Bar, XAxis, Cell, ResponsiveContainer, YAxis, CartesianGrid } from 'recharts';\n\nimport './OptionsChart.local.scss';\n\nexport const OptionsChart = ({ data }) => {\n  const renderCustomXAxisTick = ({ x, y, payload }) => {\n    const index = data.findIndex(sv => sv.label === payload.value);\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text className=\"label\" x={0} y={0} dy={20} textAnchor=\"middle\" fill={data[index].color}>\n          {payload.value}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <ResponsiveContainer>\n      <BarChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n        <XAxis dataKey=\"label\" tickSize={false} axisLine={false} tick={renderCustomXAxisTick} />\n        <YAxis\n          width={20}\n          tickSize={false}\n          axisLine={false}\n          allowDecimals={false}\n          type=\"number\"\n          domain={[0, 'dataMax']}\n          stroke=\"rgba(4, 17, 37, 0.87)\"\n        />\n        <Bar dataKey=\"value\">\n          {data.map((entry, index) => {\n            return <Cell key={`${entry.name}-${index}`} fill={entry.color} />;\n          })}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ServersTile } from '../../components/ServersTile/ServersTile';\nimport { DatabasesTile } from '../../components/DatabasesTile/DatabasesTile';\nimport { UsedOptions } from '../../components/UsedOptions/UsedOptions';\n\nimport './ServerView.local.scss';\n\nfunction ServerView({ selected }) {\n  return (\n    <>\n      <div className=\"widgets-row\">\n        <div className=\"widget\">\n          <ServersTile servers={selected} isSingle />\n        </div>\n        <div className=\"widget\">\n          <DatabasesTile servers={selected} />\n        </div>\n      </div>\n      <UsedOptions servers={selected} />\n    </>\n  );\n}\n\nexport const ConnectedServerView = connect(state => {\n  return {\n    selected: state.executiveDashboard.selectedServers\n  };\n})(ServerView);\n","import React from 'react';\nimport moment from 'moment';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiCheck } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper } from 'shared/components/layout';\n\nimport './UsedOptions.local.scss';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Button } from '../../../shared/components/controls';\n\nfunction optionType(type) {\n  if (type.value === 1) {\n    return (\n      <LightTooltip\n        placement=\"top\"\n        title={\n          <>\n            <span style={{ fontWeight: '600' }}>{type.name}:&nbsp;</span>\n            <span>Installed</span>\n          </>\n        }\n      >\n        <SvgIcon className=\"installed\">\n          <Icon path={mdiCheck} />\n        </SvgIcon>\n      </LightTooltip>\n    );\n  }\n\n  return null;\n}\n\nexport class UsedOptions extends React.PureComponent {\n  selectedForComparison = {};\n\n  allSids = [];\n\n  constructor(props) {\n    super(props);\n\n    const selectedServer = this.props.servers[0];\n    this.allSids = (selectedServer.sids || []).slice()\n      .sort((o1, o2) => -moment(o1.collDate).diff(moment(o2.collDate)))\n      .map((sid, index) => ({ ...sid, uniqueId: `${sid.sid}_${sid.collDate}_${index}` }));\n\n    this.state = {\n      visibleSids: this.allSids,\n      selectedForComparison: {},\n      inComparison: false,\n    };\n  }\n\n  render() {\n    const { visibleSids, selectedForComparison, inComparison } = this.state;\n\n    return (\n      <Paper style={{ height: 'calc(100% - 192px)', padding: '16px' }}>\n        <Paper.Header style={{ alignItems: 'center', marginBottom: '24px' }}>\n          <div className=\"grid-header\">\n            {\n              (Object.keys(selectedForComparison).length > 0 && !inComparison) &&\n                <Button style={{ color: '#03A9F4' }} onClick={() => this.compareSelected()}>\n                  Compare\n                </Button>\n            }\n            {\n              inComparison &&\n                <Button style={{ color: '#03A9F4' }} onClick={() => this.resetSelected()}>\n                  Compare all\n                </Button>\n            }\n          </div>\n        </Paper.Header>\n        <Paper.Content scrollable={false}>\n          <div className=\"grid\">\n            <div className=\"column header left\" />\n            <div className=\"column header aa\">\n              <LightTooltip placement=\"top\" title=\"Advanced Analytics\">\n                <span>AA</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header ac\">\n              <LightTooltip placement=\"top\" title=\"Advanced Compression\">\n                <span>AC</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header adg\">\n              <LightTooltip placement=\"top\" title=\"Active Data Guard\">\n                <span>ADG</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header as\">\n              <LightTooltip placement=\"top\" title=\"Advanced Security\">\n                <span>AS</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header dv\">\n              <LightTooltip placement=\"top\" title=\"Database Vault\">\n                <span>DV</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header imd\">\n              <LightTooltip placement=\"top\" title=\"In-Memory Database\">\n                <span>IMD</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header mt\">\n              <LightTooltip placement=\"top\" title=\"Multitenant\">\n                <span>MT</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header ol\">\n              <LightTooltip placement=\"top\" title=\"OLAP\">\n                <span>OL</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header p\">\n              <LightTooltip placement=\"top\" title=\"Partitioning (User)\">\n                <span>P</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header racon\">\n              <LightTooltip placement=\"top\" title=\"RAC One Node\">\n                <span>RACON</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header rat\">\n              <LightTooltip placement=\"top\" title=\"Real Application Testing\">\n                <span>RAT</span>\n              </LightTooltip>\n            </div>\n            <div className=\"column header aa\">Collection Date</div>\n            <div className=\"column header aa\">Select</div>\n\n            {visibleSids.map((sid) => {\n              return (\n                <div key={sid.uniqueId} className=\"row\">\n                  <div className=\"column left\">{sid.sid}</div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Advanced Analytics', value: sid.aa_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Advanced Compression', value: sid.ac_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Active Data Guard', value: sid.adg_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Advanced Security', value: sid.as_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Database Vault', value: sid.dv_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'In-Memory Database', value: sid.in_mem_db_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Multitenant', value: sid.mt_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'OLAP', value: sid.olap_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Partitioning (User)', value: sid.part_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'RAC One Node', value: sid.rac_one_node_count })}\n                  </div>\n                  <div className=\"column\">\n                    {optionType({ name: 'Real Application Testing', value: sid.real_app_test_count })}\n                  </div>\n                  <div className=\"column\">\n                    <LightTooltip placement=\"bottom\" title={moment(sid.collDate).format('HH:mm:ss')}>\n                      <span>{moment(sid.collDate).format('MMM DD YYYY')}</span>\n                    </LightTooltip>\n                  </div>\n                  <div className=\"column\">\n                    <Checkbox\n                      onChange={(event) => this.updateSelection(event.target.checked, sid)}\n                      size=\"small\"\n                      color=\"primary\"\n                      checked={!!selectedForComparison[sid.uniqueId]}\n                      classes={{ root: 'checkbox-custom' }}\n                    />\n                  </div>\n                </div>\n              );\n            }).sort()}\n          </div>\n        </Paper.Content>\n      </Paper>\n    );\n  }\n\n  updateSelection(isChecked, sid) {\n    if (isChecked) {\n      this.selectedForComparison[sid.uniqueId] = true;\n    } else {\n      delete this.selectedForComparison[sid.uniqueId];\n    }\n    this.setState({ selectedForComparison: this.selectedForComparison });\n    this.forceUpdate();\n  }\n\n  compareSelected() {\n    const visibleSids = this.allSids.filter((sid) => this.selectedForComparison[sid.uniqueId]);\n    this.setState({ visibleSids, inComparison: true });\n  }\n\n  resetSelected() {\n    this.selectedForComparison = {};\n    this.setState({ visibleSids: this.allSids, inComparison: false, selectedForComparison: this.selectedForComparison });\n  }\n}\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React, { useState } from 'react';\n\nimport { Center } from 'shared/components';\nimport { SimpleSearchInput } from 'shared/components/simple-search-input/simple-search-input';\nimport { ServerCard } from '../ServerCard/ServerCard';\n\nimport './VirtualDashboard.local.scss';\n\nexport const VirtualDashboard = ({ servers }) => {\n  const [query, setQuery] = useState('');\n  const filtered = servers.filter(item => filterServerByQuery(item, query));\n\n  function filterServerByQuery(server) {\n    let found = false;\n\n    Object.values(server).map(val => {\n      if (\n        val\n          .toString()\n          .toLowerCase()\n          .includes(query.toLowerCase())\n      ) {\n        found = true;\n      }\n\n      return null;\n    });\n\n    return found;\n  }\n\n  return (\n    <div className=\"container\">\n      {servers.length === 0 && <Center>Currently there are no virtual servers</Center>}\n      {servers.length > 0 && (\n        <>\n          <div className=\"search-input-slot\">\n            <SimpleSearchInput\n              data-qa=\"users-search-input\"\n              value={query}\n              onChange={e => setQuery(e.target.value)}\n            />\n          </div>\n          <div className=\"servers-container\">\n            {filtered.map(server => (\n              <ServerCard key={server.vcenterservername} server={server} type=\"virtual\" />\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiShieldCheckOutline } from '@mdi/js';\n\nimport './NoData.local.scss';\n\nexport const NoData = () => {\n  return (\n    <Paper>\n      <div className=\"container\">\n        <Center>\n          <div className=\"content\">\n            <div className=\"icon\">\n              <SvgIcon>\n                <Icon path={mdiShieldCheckOutline} />\n              </SvgIcon>\n            </div>\n\n            <div className=\"message\">\n              In order for the Executive Dashboard to be populated, you need to run all 3 collection\n              processes. The order is also important, so you need to run the Hardware and Software\n              scans first and then the Packaging process for the data to be sent to the Executive\n              dashboard. All these steps can be performed from the{' '}\n              <Link className=\"link\" to=\"/compliance/license-collection\">\n                License Collection\n              </Link>{' '}\n              page.\n            </div>\n          </div>\n        </Center>\n      </div>\n    </Paper>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'shared/components/controls';\n\nimport { deselectAllThunk, selectAllThunk } from '../../store/thunks';\n\nfunction ToggleSelection({ servers, selected, deselectAll, selectAll }) {\n  if (servers === selected) {\n    return (\n      <Button style={{ color: '#03A9F4' }} onClick={() => deselectAll()}>\n        Deselect All\n      </Button>\n    );\n  }\n  return (\n    <Button style={{ color: '#03A9F4' }} onClick={() => selectAll()}>\n      Select all\n    </Button>\n  );\n}\n\nexport const ConnectedToggleSelection = connect(\n  state => {\n    return {\n      servers: state.executiveDashboard.allServers.length,\n      selected: state.executiveDashboard.selectedServers.length\n    };\n  },\n  dispatch => ({\n    deselectAll: () => dispatch(deselectAllThunk()),\n    selectAll: () => dispatch(selectAllThunk())\n  })\n)(ToggleSelection);\n","import React, { useState } from 'react';\nimport { Header } from 'core/components/Header';\nimport { Main, Paper } from 'shared/components/layout';\nimport { Switch } from 'shared/components';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { ConnectedHardware } from './Pages/Hardware/Hardware';\nimport { ConnectedSoftware } from './Pages/Software/Software';\nimport { ConnectedVMware } from './Pages/VMware/VMware';\nimport { ConnectedPackaging } from './Pages/Packaging/Packaging';\nimport { ConnectedPreSoftware } from './Pages/PreSoftware/PreSoftware';\n\nexport const LicenseCollection = () => {\n  const [activeTab, setActiveTab] = useState(0);\n\n  function changeActiveTab(newActiveTab) {\n    setActiveTab(newActiveTab);\n  }\n\n  return (\n    <>\n      <Header title=\"Compliance / License collection\" />\n      <Main>\n        <Paper>\n          <Paper.Header>\n            <Navigation active={activeTab} onClickCallback={changeActiveTab} />\n          </Paper.Header>\n          <Paper.Content>\n            <Switch value={activeTab}>\n              <Switch.Case value={0}>\n                <ConnectedHardware />\n              </Switch.Case>\n              <Switch.Case value={1}>\n                <ConnectedPreSoftware />\n              </Switch.Case>\n              <Switch.Case value={2}>\n                <ConnectedSoftware />\n              </Switch.Case>\n              <Switch.Case value={3}>\n                <ConnectedVMware />\n              </Switch.Case>\n              <Switch.Case value={4}>\n                <ConnectedPackaging />\n              </Switch.Case>\n            </Switch>\n          </Paper.Content>\n        </Paper>\n      </Main>\n    </>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nimport './Navigation.local.scss';\n\nconst data = [\n  { label: '1. Hardware Data Requirements Collection' },\n  { label: '2. Pre-Software Scan Setup' },\n  { label: '3. Software Data Requirements Collection' },\n  { label: '4. vSphere Data Requirements Collection' },\n  { label: '5. Packaging Process' }\n];\n\nexport const Navigation = ({ active, onClickCallback }) => {\n  return (\n    <div className=\"nav-chip-container\">\n      {data.map((chip, index) => (\n        <div\n          className={classnames('nav-chip', { active: active === index })}\n          key={index}\n          onClick={() => onClickCallback(index)}\n          role=\"presentation\"\n          data-qa={`chip-nav-${index}`}\n        >\n          {chip.label}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiMemory } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\n\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk, executeCollectionProcessThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Hardware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.hw_scan';\n\nexport class Hardware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n      request('form');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'hardware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'hardware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"hardware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Hardware scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Hardware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedHardware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.hardware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.hardware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Hardware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","export default deflt => {\n  if (typeof deflt !== 'string') return null;\n  deflt = deflt.trim();\n  const regex = /^([a-z][a-z0-9]*)\\((.*)\\)$/i;\n  const matches = regex.exec(deflt);\n  // const json = `[${matches[2]}]`;\n  switch (deflt) {\n    case 'bool(True)':\n      return true;\n    case 'bool(False)':\n      return false;\n    case 'dict()':\n      return {};\n    case 'list()':\n      return [];\n    default:\n      if (Array.isArray(matches)) {\n        switch (matches[1]) {\n          case 'int':\n            return parseInt(matches[2], 10);\n          case 'str':\n            // Python's escaping is very close to JavaScript's, so\n            // we'll take a chance here.\n            try {\n              // return JSON.parse(json)[0];\n              return matches[2].replace(/'/g, '');\n            } catch (e) {\n              // Sorry, no dice\n              return null;\n            }\n          default:\n            return null;\n        }\n      } else if (/^[a-z][a-z0-9]*$/i.test(deflt)) {\n        // Enumeration literal\n        return deflt;\n      }\n  }\n  return null;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiApplication, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './Software.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.sw_scan';\n\nexport class Software extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const {\n      request,\n      entitiesStatus,\n      requestProcessData,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted\n    } = this.props;\n\n    if (wasHardwareExecuted && wasPreSoftwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'software', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasHardwareExecuted,\n      wasPreSoftwareExecuted,\n      executeCollectionProcess\n    } = this.props;\n    let parameters = null;\n\n    if (!wasHardwareExecuted || !wasPreSoftwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather Hardware data and Pre-Software Scan Setup before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'software' });\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting, values }) => {\n            return (\n              <Form className=\"software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Database features scan for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to target server, Target DBMS, Database form for the target\n                      database, SSH connection to the target host, working directory in the repo\n                      host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled, values)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Software Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiApplication} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled, formValues) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        forms={this.props.forms}\n        prototypes={this.props.prototypes}\n        disabled={disabled}\n        currentFormValues={formValues}\n      />\n    );\n  }\n}\n\nexport const ConnectedSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.software,\n    isProcessLoading: state.explorer.flags.collectionProcesses.software.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n    wasPreSoftwareExecuted: state.explorer.flags.collectionProcesses.preSoftware.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Software);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Formik, Form } from 'formik';\n// import moment from 'moment';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiPlaySpeed, mdiHelpCircleOutline, mdiCubeScan } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { getInitialValues, formatParameters } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\n\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\n\nimport './VMware.local.scss';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.vsphere_scan';\n\nexport class VMware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process } = this.props;\n\n    if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n      request('prototype');\n    }\n\n    if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n      request('type');\n    }\n\n    if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n      request('account');\n    }\n\n    if (!process) {\n      requestProcessData({ name: 'vmware', process: processName });\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const { entitiesStatus, datatypes, prototypes, isProcessLoading, process } = this.props;\n    let parameters = null;\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: VMware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"vmware-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>vSphere for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>SSH connection to repo server, working directory in the repo host</p>\n                  </div>\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'VMware Data Requirements Collection',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiCubeScan} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     // interval = interval < 2500 ? 2500 : interval;\n    //     // break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={processName}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedVMware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.vmware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.vmware.loading\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(VMware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiArchiveArrowDownOutline, mdiHelpCircleOutline, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport { SuccessModal } from '../../../shared/components/overlays/SuccessModal/SuccessModal';\nimport { downloadFile } from '../../utils/downloadFile';\nimport './Packaging.local.scss';\nimport { ErrorModal } from '../../../shared/components/overlays';\n\nconst processName = 'vendita.oracle.rdbms.util.lms.packager';\n\nexport class Packaging extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined,\n      successModalOpen: false,\n      failedModalOpen: false,\n      formValues: {},\n      isDownloadDisabled: true,\n      isEmailDisabled: true\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasVsphereExecuted } = this.props;\n\n    if (wasVsphereExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'packaging', process: processName });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      wasVsphereExecuted\n    } = this.props;\n    let parameters = null;\n\n    if (!wasVsphereExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather software data before running the Packaging\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts\n    ) {\n      return <Center>{`There is a problem with ${processName} proces`}</Center>;\n    }\n\n    return isProcessLoading || loadingPrototypes || loadingDatatypes || loadingAccounts ? (\n      <Center>\n        <Loader>Loading {processName} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: processName,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined,\n                    formValues: formatParameters(values),\n                    isDownloadDisabled: true,\n                    isEmailDisabled: true\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Hardware] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"packaging-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Package (HW, SW) file for Oracle audit</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={processName}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>Repo working directory, repo SSH connection</p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Paper.Footer.Left>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isDownloadDisabled}\n                      data-qa=\"download-btn\"\n                      onClick={() => {\n                        downloadFile(this.state.formValues);\n                        this.setState({ isEmailDisabled: false });\n                      }}\n                    >\n                      Download\n                    </Button>\n                    <Button\n                      className=\"btn output\"\n                      disabled={this.state.isEmailDisabled}\n                      data-qa=\"email-btn\"\n                      onClick={() => this.sendEmail()}\n                    >\n                      Email\n                    </Button>\n                  </Paper.Footer.Left>\n                  <Paper.Footer.Right>\n                    <Button\n                      className=\"btn submit\"\n                      type=\"submit\"\n                      disabled={!dirty || isSubmitting}\n                      variant=\"contained\"\n                      data-qa=\"submit\"\n                    >\n                      Submit\n                    </Button>\n                  </Paper.Footer.Right>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Packaging Process ',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiArchiveArrowDownOutline} />\n            </SvgIcon>\n          )\n        })}\n        {this.renderPackagingSuccessModal()}\n        {this.renderPackagingFailedModal()}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n\n    // const date = moment(date_invoke);\n    // // If 'now' is later, interval is positive. If it's earlier, it's negative\n    // let interval = date.diff(moment());\n\n    // switch (status) {\n    //   case 'SCHEDULED':\n    //   case 'DELAYED':\n    //     interval = interval < 2500 ? 2500 : interval;\n    //     break;\n    //   case 'EXECUTING':\n    //     // If we're executing, interval should in theory be negative because\n    //     // it was scheduled in the past.\n    //     interval = Math.abs(interval);\n    //     interval = interval > 10000 ? 10000 : 2500;\n    //     break;\n    //   default:\n    //     break;\n    // }\n    // based on invocation, call and replace invocation object\n    // add output in case request invocation.status === \"FAILED\" || \"SUCCEEDED\"\n\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n\n            try {\n              await RestClient.get(\n                '/execdashboard/update',\n                formatParameters({\n                  lms_repo: this.state.formValues.repo_working_dir,\n                  repo_shell: this.state.formValues.repo_shell\n                })\n              );\n\n              const isSucceeded = invocation.status === 'SUCCEEDED';\n\n              this.setState({\n                output: outputReponse.data.data.outputs,\n                invocation,\n                outputOpen: !isSucceeded,\n                successModalOpen: isSucceeded,\n                failedModalOpen: false,\n                isDownloadDisabled: !isSucceeded\n              });\n            } catch (error) {\n              console.log('[collection-packaging-exec-dashboard-update] error: ', error); // eslint-disable-line\n              this.setState({ outputOpen: false });\n              this.setState({ successModalOpen: false });\n              this.setState({ failedModalOpen: true });\n            }\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        type=\"packaging\"\n        output={this.state.output}\n        processName={processName}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        messages={['Preparing job...', 'Executing job...', 'Preparing files...']}\n      />\n    );\n  };\n\n  renderPackagingSuccessModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ successModalOpen: true });\n      },\n      close: () => {\n        this.setState({ successModalOpen: false });\n      }\n    };\n\n    return (\n      <SuccessModal open={this.state.successModalOpen} actions={actions} message=\"Packaging successfully completed!\" />\n    );\n  }\n\n  renderPackagingFailedModal = () => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ failedModalOpen: true });\n      },\n      close: () => {\n        this.setState({ failedModalOpen: false });\n      }\n    };\n\n    return (\n      <ErrorModal open={this.state.failedModalOpen} actions={actions} message=\"Packaging failed! Please check parameters and try again.\" />\n    );\n  }\n\n  sendEmail = () => {\n    const body = 'Please attach the downloaded file. It should be named \"lms-file-bundle.tar\".';\n    window.location.href = `mailto:?subject=Packaging files&body=${encodeURIComponent(body)}`;\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPackaging = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.packaging,\n    isProcessLoading: state.explorer.flags.collectionProcesses.packaging.loading,\n    wasVsphereExecuted: state.explorer.flags.collectionProcesses.software.wasExecuted\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(Packaging);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import React from 'react';\nimport { Modal, ModalHeader } from 'shared/components/overlays';\nimport { Paper } from 'shared/components/layout';\nimport { Result } from 'shared/components/overlays/Result/Result';\nimport { Button } from 'shared/components/controls';\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport './SuccessModal.local.scss';\n\nexport const SuccessModal = ({ open, actions, message }) => {\n  return (\n    <Modal open={open} actions={actions}>\n      <Paper\n        style={{\n          width: '50vw',\n          height: '50vh'\n        }}\n      >\n        <ModalHeader\n          title=\"Success\"\n          icon={\n            <SvgIcon className=\"header-icon\">\n              <CheckCircleRoundedIcon />\n            </SvgIcon>\n          }\n        />\n        <Paper.Content scrollable={false}>\n          <Result type=\"success\">\n            <Result.Text>{message}</Result.Text>\n          </Result>\n        </Paper.Content>\n        <Paper.Footer>\n          <Paper.Footer.Right>\n            <Button\n              onClick={() => {\n                actions.close();\n              }}\n            >\n              OK\n            </Button>\n          </Paper.Footer.Right>\n        </Paper.Footer>\n      </Paper>\n    </Modal>\n  );\n};\n","import { CONSTANTS } from 'config';\nimport { RestClient } from 'shared/lib/rest';\n\nexport const downloadFile = async query => {\n  const formatQuery = {\n    lms_repo: query.repo_working_dir,\n    repo_shell: query.repo_shell\n  };\n\n  try {\n    const response = await RestClient.get(CONSTANTS.BASE.ENDPOINTS.DOWNLOAD_PACKAGING, formatQuery);\n    const fileName = response.headers['content-disposition'].split('filename=')[1] || 'lms-file-bundle.tar';\n    const blobData = [response.data];\n    const blob = new Blob(blobData, { type: 'application/octet-stream' });\n    const blobURL = (window.URL ? window.URL : window.webkitURL).createObjectURL(blob);\n    const tempLink = document.createElement('a');\n    tempLink.style.display = 'none';\n    tempLink.href = blobURL;\n    tempLink.setAttribute('download', fileName);\n\n    document.body.appendChild(tempLink);\n    tempLink.click();\n\n    document.body.removeChild(tempLink);\n    window.URL.revokeObjectURL(blobURL);\n  } catch (error) {\n    console.log('[download] error: ', error); // eslint-disable-line\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Form, Formik } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Icon from '@mdi/react';\nimport { mdiHelpCircleOutline, mdiMemory, mdiPlaySpeed } from '@mdi/js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Loader } from 'shared/components/loaders';\nimport { Center } from 'shared/components';\nimport { Paper } from 'shared/components/layout';\nimport { getCurrentUserDetails } from 'session/store/selectors';\nimport { isOnlySelectGroup } from 'entities/utils/privileges';\nimport { fetchEntity } from 'entities/actions';\nimport { executeCollectionProcessThunk, loadProcessDetailsThunk } from 'explorer/store/thunks';\nimport normalizeParameter from '../../utils/normalizeParameter';\nimport { formatParameters, getInitialValues } from '../../utils/formikFormatter';\nimport { RestClient } from 'shared/lib/rest';\nimport { CONSTANTS } from 'config';\nimport { TextField as Input } from '../../controls/TextField/TextField';\nimport { DropdownField } from '../../controls/DropdownField/DropdownField';\nimport { OutputModal } from '../../components/OutputModal/OutputModal';\nimport normalize from 'shared/components/form/parameters/normalizeParameter';\nimport { Parameter } from '../../../shared/components/form/parameters';\nimport { Result } from '../../../shared/components/overlays';\n\nimport './PreSoftware.local.scss';\n\nconst PROCESS_NAME = 'vendita.oracle.rdbms.util.lms.hardcoded_hw_scan_lms';\nconst PARAMS_TO_NORMALIZE = [\n  'vendita.oracle.rdbms.util.lms.license_metric_values',\n  'vendita.oracle.rdbms.util.lms.environment_values',\n  'vendita.oracle.rdbms.util.lms.partitioning_values',\n  'vendita.oracle.rdbms.util.lms.database_edition_values',\n];\n\nexport class PreSoftware extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invocation: undefined,\n      outputOpen: false,\n      output: undefined\n    };\n  }\n\n  poller = undefined;\n\n  async componentDidMount() {\n    const { request, entitiesStatus, requestProcessData, process, wasHardwareExecuted } = this.props;\n\n    if (wasHardwareExecuted) {\n      if (entitiesStatus.prototype === 'not-fetched' || entitiesStatus.prototype === 'failed') {\n        request('prototype');\n      }\n\n      if (entitiesStatus.type === 'not-fetched' || entitiesStatus.type === 'failed') {\n        request('type');\n      }\n\n      if (entitiesStatus.account === 'not-fetched' || entitiesStatus.account === 'failed') {\n        request('account');\n      }\n\n      if (entitiesStatus.form === 'not-fetched' || entitiesStatus.form === 'failed') {\n        request('form');\n      }\n\n      if (!process) {\n        requestProcessData({ name: 'preSoftware', process: PROCESS_NAME });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    // to conclude the polling,\n    clearTimeout(this.poller);\n    this.poller = undefined;\n  }\n\n  render() {\n    const isDisabled = isOnlySelectGroup(this.props.userDetails);\n    const {\n      entitiesStatus,\n      datatypes,\n      prototypes,\n      isProcessLoading,\n      process,\n      executeCollectionProcess,\n      wasHardwareExecuted,\n    } = this.props;\n\n    if (!wasHardwareExecuted) {\n      return (\n        <Center>\n          <Result type=\"fail\">\n            <p className=\"error-msg\">\n              You must first gather hardware data before running the Software Scan\n            </p>\n          </Result>\n        </Center>\n      );\n    }\n\n    let parameters = null;\n    const loadingPrototypes = entitiesStatus.prototype === 'fetching';\n    const loadingDatatypes = entitiesStatus.type === 'fetching';\n    const loadingAccounts = entitiesStatus.account === 'fetching';\n    const loadingForms = entitiesStatus.form === 'fetching';\n\n    if (process) {\n      parameters = process.parameters.map(p => normalizeParameter(p, datatypes, prototypes));\n      parameters = _.sortBy(parameters, 'position');\n    }\n\n    if (\n      !process &&\n      !isProcessLoading &&\n      !loadingDatatypes &&\n      !loadingPrototypes &&\n      !loadingAccounts &&\n      !loadingForms\n    ) {\n      return <Center>{`There is a problem with ${PROCESS_NAME} process`}</Center>;\n    }\n\n    return isProcessLoading ||\n      loadingPrototypes ||\n      loadingDatatypes ||\n      loadingAccounts ||\n      loadingForms ? (\n      <Center>\n        <Loader>Loading {PROCESS_NAME} information</Loader>\n      </Center>\n    ) : (\n      <>\n        <Formik\n          initialValues={getInitialValues(parameters)}\n          onSubmit={async values => {\n            try {\n              const payload = {\n                process: PROCESS_NAME,\n                parameters: formatParameters(values),\n                timestamp: null\n              };\n\n              const response = await RestClient.post(CONSTANTS.BASE.ENDPOINTS.JOBS, payload);\n              executeCollectionProcess({ name: 'preSoftware' });\n\n              if (\n                response.data.data &&\n                response.data.data.invocations &&\n                response.data.data.invocations[0]\n              ) {\n                this.setState(\n                  {\n                    invocation: response.data.data.invocations[0],\n                    outputOpen: true,\n                    output: undefined\n                  },\n                  () => {\n                    this.runPoller();\n                  }\n                );\n              }\n            } catch (error) {\n              console.log('[License collection: Pre-Software] submit form error: ', error); // eslint-disable-line\n            }\n          }}\n        >\n          {({ dirty, isSubmitting }) => {\n            return (\n              <Form className=\"pre-software-form\">\n                <Paper.Content>\n                  <div className=\"info\">\n                    <h1>Job</h1>\n                    <p>Pre-Software Scan Setup</p>\n                  </div>\n                  <FormControl className=\"field full-width\" variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-process\">Process</InputLabel>\n                    <OutlinedInput\n                      id=\"outlined-adornment-process\"\n                      type=\"text\"\n                      readOnly\n                      disabled\n                      value={PROCESS_NAME}\n                      labelWidth={70}\n                      startAdornment={\n                        <InputAdornment position=\"start\">\n                          <SvgIcon>\n                            <Icon path={mdiPlaySpeed} />\n                          </SvgIcon>\n                        </InputAdornment>\n                      }\n                      endAdornment={\n                        <LightTooltip placement=\"bottom-end\" title={process.description}>\n                          <InputAdornment position=\"end\">\n                            <SvgIcon>\n                              <Icon path={mdiHelpCircleOutline} />\n                            </SvgIcon>\n                          </InputAdornment>\n                        </LightTooltip>\n                      }\n                    />\n                  </FormControl>\n                  <div className=\"info\">\n                    <h1>Job Parameters</h1>\n                    <p>\n                      SSH connection to repo server, working directory in the repo host, SSH\n                      connection to target server, working directory in the target host\n                    </p>\n                  </div>\n\n                  <div className=\"form-fields-container\">\n                    {parameters.map(parameter => {\n                      return (\n                        <div key={parameter.name} className=\"form-field\">\n                          {this.chooseField(parameter, isDisabled)}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </Paper.Content>\n\n                <Paper.Footer>\n                  <Button\n                    className=\"btn output\"\n                    disabled={!this.state.invocation}\n                    data-qa=\"view-output\"\n                    onClick={() => this.setState({ outputOpen: true })}\n                  >\n                    View Output\n                  </Button>\n                  <Button\n                    className=\"btn submit\"\n                    type=\"submit\"\n                    disabled={!dirty || isSubmitting}\n                    variant=\"contained\"\n                    data-qa=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                </Paper.Footer>\n              </Form>\n            );\n          }}\n        </Formik>\n        {this.renderModal({\n          title: 'Pre-Software Scan Setup',\n          icon: (\n            <SvgIcon>\n              <Icon path={mdiMemory} />\n            </SvgIcon>\n          )\n        })}\n      </>\n    );\n  }\n\n  runPoller = () => {\n    const { uuid, status, date_invoke } = this.state.invocation;\n\n    if (uuid === null) return;\n    if (typeof status !== 'string') return;\n    if (typeof date_invoke !== 'string') return;\n    // set timer ticket\n    this.poller = setTimeout(this.pollInvocation(uuid), 3000);\n  };\n\n  pollInvocation = uuid => async () => {\n    let { invocation } = this.state;\n\n    if (!invocation || invocation.uuid !== uuid) return;\n\n    try {\n      const response = await RestClient.get(`${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}`);\n\n      if (\n        response.data.data &&\n        response.data.data.invocations &&\n        response.data.data.invocations[0]\n      ) {\n        invocation = response.data.data.invocations[0]; // eslint-disable-line\n\n        if (invocation.status === 'SUCCEEDED' || invocation.status === 'FAILED') {\n          const outputReponse = await RestClient.get(\n            `${CONSTANTS.BASE.ENDPOINTS.JOBS}/${uuid}/display`,\n            { page_size: 2147483645 }\n          );\n          if (\n            outputReponse.data.data &&\n            outputReponse.data.data.outputs &&\n            outputReponse.data.data.outputs.length > 0\n          ) {\n            this.setState({ output: outputReponse.data.data.outputs, invocation });\n            // to conclude the polling,\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          } else {\n            this.setState({ invocation });\n            clearTimeout(this.poller);\n            this.poller = undefined;\n          }\n        } else {\n          this.setState({ invocation }, () => this.runPoller());\n        }\n      }\n    } catch (error) {\n      console.log('[pollInvocation] error: ', error); // eslint-disable-line\n    }\n  };\n\n  renderModal = modalDetails => {\n    if (!this.state.invocation) return null;\n\n    const actions = {\n      open: () => {\n        this.setState({ outputOpen: true });\n      },\n      close: () => {\n        this.setState({ outputOpen: false });\n      }\n    };\n\n    return (\n      <OutputModal\n        open={this.state.outputOpen}\n        actions={actions}\n        output={this.state.output}\n        invocation={this.state.invocation}\n        modalDetails={modalDetails}\n        processName={PROCESS_NAME}\n        messages={['Preparing job...', 'Executing job...', 'Loading job output...']}\n      />\n    );\n  };\n\n  chooseField(parameter, disabled) {\n    if (parameter.data_type === 'string') {\n      return <Input parameter={parameter} disabled={disabled} />;\n    }\n\n    if (PARAMS_TO_NORMALIZE.includes(parameter.data_type)) {\n      const normalizedParam = normalize(parameter, this.props.datatypes, this.props.prototypes, this.props.forms);\n      return <Parameter normalized={normalizedParam} />;\n    }\n\n    return (\n      <DropdownField\n        parameter={parameter}\n        outputOpen\n        datatypes={this.props.datatypes}\n        rawAccounts={this.props.rawAccounts}\n        prototypes={this.props.prototypes}\n        forms={this.props.forms}\n        disabled={disabled}\n      />\n    );\n  }\n}\n\nexport const ConnectedPreSoftware = connect(\n  state => ({\n    prototypes: state.entities.data?.prototype?.data?.data?.prototypes || [],\n    datatypes: state.entities.data?.type?.data?.data?.data_types || [],\n    rawAccounts: state.entities.data?.account?.data?.data?.accounts || [],\n    forms: state.entities.data?.form?.data?.data?.forms || [],\n    userDetails: getCurrentUserDetails(state),\n    entitiesStatus: state.entities.fetch_status,\n    process: state.explorer.collectionProcesses.preSoftware,\n    isProcessLoading: state.explorer.flags.collectionProcesses.preSoftware.loading,\n    wasHardwareExecuted: state.explorer.flags.collectionProcesses.hardware.wasExecuted,\n  }),\n  dispatch => ({\n    requestProcessData: data => dispatch(loadProcessDetailsThunk(data)),\n    executeCollectionProcess: data => dispatch(executeCollectionProcessThunk(data)),\n    request: data => dispatch(fetchEntity(data))\n  })\n)(PreSoftware);\n\nconst LightTooltip = withStyles(() => ({\n  tooltip: {\n    color: '#fff',\n    backgroundColor: '#787E89',\n    letterSpacing: '0.4px',\n    fontSize: '12px',\n    lineHeight: '16px',\n    fontFamily: 'Open Sans'\n  }\n}))(Tooltip);\n","import { en } from './en';\n\nexport const i18nMessages = {\n  en,\n};\n","import dashboard from './dashboard.json';\nimport general from './general.json';\nimport session from './session.json';\nimport header from './header.json';\n\nexport const en = {\n  ...dashboard,\n  ...general,\n  ...session,\n  ...header,\n};\n","import 'babel-polyfill';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { IntlProvider } from 'react-intl';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport store from 'core/store';\nimport { App } from './app';\nimport { CONSTANTS } from './app/config';\nimport { i18nMessages } from './i18n';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport './assets/fonts/Lato-Regular.ttf';\nimport './assets/fonts/OpenSans-Regular.ttf';\nimport './style.scss';\n\nconst persistor = persistStore(store);\n\nconst provider = (\n  <IntlProvider locale={CONSTANTS.INTL} messages={i18nMessages[CONSTANTS.INTL]}>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter basename={process.env.NODE_ENV === 'development' ? '/' : '/ui/#/'}>\n          <Switch>\n            <Route component={App} path=\"/\" />\n          </Switch>\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </IntlProvider>\n);\n\nrender(provider, document.getElementById('root'));\n","var map = {\n\t\"./af\": 694,\n\t\"./af.js\": 694,\n\t\"./ar\": 695,\n\t\"./ar-dz\": 696,\n\t\"./ar-dz.js\": 696,\n\t\"./ar-kw\": 697,\n\t\"./ar-kw.js\": 697,\n\t\"./ar-ly\": 698,\n\t\"./ar-ly.js\": 698,\n\t\"./ar-ma\": 699,\n\t\"./ar-ma.js\": 699,\n\t\"./ar-sa\": 700,\n\t\"./ar-sa.js\": 700,\n\t\"./ar-tn\": 701,\n\t\"./ar-tn.js\": 701,\n\t\"./ar.js\": 695,\n\t\"./az\": 702,\n\t\"./az.js\": 702,\n\t\"./be\": 703,\n\t\"./be.js\": 703,\n\t\"./bg\": 704,\n\t\"./bg.js\": 704,\n\t\"./bm\": 705,\n\t\"./bm.js\": 705,\n\t\"./bn\": 706,\n\t\"./bn-bd\": 707,\n\t\"./bn-bd.js\": 707,\n\t\"./bn.js\": 706,\n\t\"./bo\": 708,\n\t\"./bo.js\": 708,\n\t\"./br\": 709,\n\t\"./br.js\": 709,\n\t\"./bs\": 710,\n\t\"./bs.js\": 710,\n\t\"./ca\": 711,\n\t\"./ca.js\": 711,\n\t\"./cs\": 712,\n\t\"./cs.js\": 712,\n\t\"./cv\": 713,\n\t\"./cv.js\": 713,\n\t\"./cy\": 714,\n\t\"./cy.js\": 714,\n\t\"./da\": 715,\n\t\"./da.js\": 715,\n\t\"./de\": 716,\n\t\"./de-at\": 717,\n\t\"./de-at.js\": 717,\n\t\"./de-ch\": 718,\n\t\"./de-ch.js\": 718,\n\t\"./de.js\": 716,\n\t\"./dv\": 719,\n\t\"./dv.js\": 719,\n\t\"./el\": 720,\n\t\"./el.js\": 720,\n\t\"./en-au\": 721,\n\t\"./en-au.js\": 721,\n\t\"./en-ca\": 722,\n\t\"./en-ca.js\": 722,\n\t\"./en-gb\": 723,\n\t\"./en-gb.js\": 723,\n\t\"./en-ie\": 724,\n\t\"./en-ie.js\": 724,\n\t\"./en-il\": 725,\n\t\"./en-il.js\": 725,\n\t\"./en-in\": 726,\n\t\"./en-in.js\": 726,\n\t\"./en-nz\": 727,\n\t\"./en-nz.js\": 727,\n\t\"./en-sg\": 728,\n\t\"./en-sg.js\": 728,\n\t\"./eo\": 729,\n\t\"./eo.js\": 729,\n\t\"./es\": 730,\n\t\"./es-do\": 731,\n\t\"./es-do.js\": 731,\n\t\"./es-mx\": 732,\n\t\"./es-mx.js\": 732,\n\t\"./es-us\": 733,\n\t\"./es-us.js\": 733,\n\t\"./es.js\": 730,\n\t\"./et\": 734,\n\t\"./et.js\": 734,\n\t\"./eu\": 735,\n\t\"./eu.js\": 735,\n\t\"./fa\": 736,\n\t\"./fa.js\": 736,\n\t\"./fi\": 737,\n\t\"./fi.js\": 737,\n\t\"./fil\": 738,\n\t\"./fil.js\": 738,\n\t\"./fo\": 739,\n\t\"./fo.js\": 739,\n\t\"./fr\": 740,\n\t\"./fr-ca\": 741,\n\t\"./fr-ca.js\": 741,\n\t\"./fr-ch\": 742,\n\t\"./fr-ch.js\": 742,\n\t\"./fr.js\": 740,\n\t\"./fy\": 743,\n\t\"./fy.js\": 743,\n\t\"./ga\": 744,\n\t\"./ga.js\": 744,\n\t\"./gd\": 745,\n\t\"./gd.js\": 745,\n\t\"./gl\": 746,\n\t\"./gl.js\": 746,\n\t\"./gom-deva\": 747,\n\t\"./gom-deva.js\": 747,\n\t\"./gom-latn\": 748,\n\t\"./gom-latn.js\": 748,\n\t\"./gu\": 749,\n\t\"./gu.js\": 749,\n\t\"./he\": 750,\n\t\"./he.js\": 750,\n\t\"./hi\": 751,\n\t\"./hi.js\": 751,\n\t\"./hr\": 752,\n\t\"./hr.js\": 752,\n\t\"./hu\": 753,\n\t\"./hu.js\": 753,\n\t\"./hy-am\": 754,\n\t\"./hy-am.js\": 754,\n\t\"./id\": 755,\n\t\"./id.js\": 755,\n\t\"./is\": 756,\n\t\"./is.js\": 756,\n\t\"./it\": 757,\n\t\"./it-ch\": 758,\n\t\"./it-ch.js\": 758,\n\t\"./it.js\": 757,\n\t\"./ja\": 759,\n\t\"./ja.js\": 759,\n\t\"./jv\": 760,\n\t\"./jv.js\": 760,\n\t\"./ka\": 761,\n\t\"./ka.js\": 761,\n\t\"./kk\": 762,\n\t\"./kk.js\": 762,\n\t\"./km\": 763,\n\t\"./km.js\": 763,\n\t\"./kn\": 764,\n\t\"./kn.js\": 764,\n\t\"./ko\": 765,\n\t\"./ko.js\": 765,\n\t\"./ku\": 766,\n\t\"./ku.js\": 766,\n\t\"./ky\": 767,\n\t\"./ky.js\": 767,\n\t\"./lb\": 768,\n\t\"./lb.js\": 768,\n\t\"./lo\": 769,\n\t\"./lo.js\": 769,\n\t\"./lt\": 770,\n\t\"./lt.js\": 770,\n\t\"./lv\": 771,\n\t\"./lv.js\": 771,\n\t\"./me\": 772,\n\t\"./me.js\": 772,\n\t\"./mi\": 773,\n\t\"./mi.js\": 773,\n\t\"./mk\": 774,\n\t\"./mk.js\": 774,\n\t\"./ml\": 775,\n\t\"./ml.js\": 775,\n\t\"./mn\": 776,\n\t\"./mn.js\": 776,\n\t\"./mr\": 777,\n\t\"./mr.js\": 777,\n\t\"./ms\": 778,\n\t\"./ms-my\": 779,\n\t\"./ms-my.js\": 779,\n\t\"./ms.js\": 778,\n\t\"./mt\": 780,\n\t\"./mt.js\": 780,\n\t\"./my\": 781,\n\t\"./my.js\": 781,\n\t\"./nb\": 782,\n\t\"./nb.js\": 782,\n\t\"./ne\": 783,\n\t\"./ne.js\": 783,\n\t\"./nl\": 784,\n\t\"./nl-be\": 785,\n\t\"./nl-be.js\": 785,\n\t\"./nl.js\": 784,\n\t\"./nn\": 786,\n\t\"./nn.js\": 786,\n\t\"./oc-lnc\": 787,\n\t\"./oc-lnc.js\": 787,\n\t\"./pa-in\": 788,\n\t\"./pa-in.js\": 788,\n\t\"./pl\": 789,\n\t\"./pl.js\": 789,\n\t\"./pt\": 790,\n\t\"./pt-br\": 791,\n\t\"./pt-br.js\": 791,\n\t\"./pt.js\": 790,\n\t\"./ro\": 792,\n\t\"./ro.js\": 792,\n\t\"./ru\": 793,\n\t\"./ru.js\": 793,\n\t\"./sd\": 794,\n\t\"./sd.js\": 794,\n\t\"./se\": 795,\n\t\"./se.js\": 795,\n\t\"./si\": 796,\n\t\"./si.js\": 796,\n\t\"./sk\": 797,\n\t\"./sk.js\": 797,\n\t\"./sl\": 798,\n\t\"./sl.js\": 798,\n\t\"./sq\": 799,\n\t\"./sq.js\": 799,\n\t\"./sr\": 800,\n\t\"./sr-cyrl\": 801,\n\t\"./sr-cyrl.js\": 801,\n\t\"./sr.js\": 800,\n\t\"./ss\": 802,\n\t\"./ss.js\": 802,\n\t\"./sv\": 803,\n\t\"./sv.js\": 803,\n\t\"./sw\": 804,\n\t\"./sw.js\": 804,\n\t\"./ta\": 805,\n\t\"./ta.js\": 805,\n\t\"./te\": 806,\n\t\"./te.js\": 806,\n\t\"./tet\": 807,\n\t\"./tet.js\": 807,\n\t\"./tg\": 808,\n\t\"./tg.js\": 808,\n\t\"./th\": 809,\n\t\"./th.js\": 809,\n\t\"./tk\": 810,\n\t\"./tk.js\": 810,\n\t\"./tl-ph\": 811,\n\t\"./tl-ph.js\": 811,\n\t\"./tlh\": 812,\n\t\"./tlh.js\": 812,\n\t\"./tr\": 813,\n\t\"./tr.js\": 813,\n\t\"./tzl\": 814,\n\t\"./tzl.js\": 814,\n\t\"./tzm\": 815,\n\t\"./tzm-latn\": 816,\n\t\"./tzm-latn.js\": 816,\n\t\"./tzm.js\": 815,\n\t\"./ug-cn\": 817,\n\t\"./ug-cn.js\": 817,\n\t\"./uk\": 818,\n\t\"./uk.js\": 818,\n\t\"./ur\": 819,\n\t\"./ur.js\": 819,\n\t\"./uz\": 820,\n\t\"./uz-latn\": 821,\n\t\"./uz-latn.js\": 821,\n\t\"./uz.js\": 820,\n\t\"./vi\": 822,\n\t\"./vi.js\": 822,\n\t\"./x-pseudo\": 823,\n\t\"./x-pseudo.js\": 823,\n\t\"./yo\": 824,\n\t\"./yo.js\": 824,\n\t\"./zh-cn\": 825,\n\t\"./zh-cn.js\": 825,\n\t\"./zh-hk\": 826,\n\t\"./zh-hk.js\": 826,\n\t\"./zh-mo\": 827,\n\t\"./zh-mo.js\": 827,\n\t\"./zh-tw\": 828,\n\t\"./zh-tw.js\": 828\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1453;","/**\n * A IFFE to ignore warnings of prop-types validation\n * from Material-UI components used with scoped-css-loader.\n *\n * They are invalid and will not appear in prod builds, they are\n * cumbersome for development for now.\n *\n * TODO: investigate if there is another option when there is time.\n * For now it looks like there is not.\n */\n\n/* eslint-disable */\n(function clearMUIDataVWarnings() {\n  const error = console.error.bind(console);\n  const partial = /Warning:.*data-v-/;\n\n  console.error = (message, ...args) => {\n    if (typeof message === 'string' && message.search(partial) !== -1) {\n      return;\n    }\n\n    error(message, ...args);\n  };\n})();\n\n/* eslint-enable */\n","module.exports = \"../fonts/2d36b1a925432bae7f3c53a340868c6e.ttf\";","module.exports = \"../fonts/3ed9575dcc488c3e3a5bd66620bdf5a4.ttf\";"],"sourceRoot":""}